{"version":3,"file":"PointerEvents.js","sources":["../../src/util/getNodeIcon.tsx","../../src/ui/PopoverPortal.tsx","../../src/ui/telemetry/TelemetryContext.tsx","../../src/ui/telemetry/useTelemetry.tsx","../../src/overlay-components/components/InsertMenu.tsx","../../src/overlay-components/components/PointerEvents.tsx"],"sourcesContent":["import {\n  BlockContentIcon,\n  CheckmarkCircleIcon,\n  CubeIcon,\n  ImageIcon,\n  NumberIcon,\n  StringIcon,\n  ThListIcon,\n} from '@sanity/icons'\nimport type {\n  SchemaArrayItem,\n  SchemaNumberNode,\n  SchemaObjectField,\n  SchemaStringNode,\n  SchemaUnionOption,\n} from '@sanity/presentation-comlink'\n\ntype Option =\n  | SchemaNumberNode\n  | SchemaStringNode\n  | SchemaArrayItem\n  | SchemaObjectField\n  | SchemaUnionOption\n\nexport function getNodeIcon(option: Option | undefined): React.JSX.Element {\n  if (!option) return <CubeIcon />\n\n  if (option.type === 'string') {\n    return <StringIcon />\n  }\n\n  if (option.type === 'number') {\n    return <NumberIcon />\n  }\n\n  const {value: node} = option\n\n  if ('icon' in option && option.icon) {\n    return <div dangerouslySetInnerHTML={{__html: option.icon}} />\n  }\n\n  const {type} = node\n\n  if (type === 'string') {\n    return <StringIcon />\n  }\n\n  if (type === 'boolean') {\n    return <CheckmarkCircleIcon />\n  }\n\n  if (type === 'number') {\n    return <NumberIcon />\n  }\n\n  if (type === 'array' || type === 'union') {\n    const of = Array.isArray(node.of) ? node.of : [node.of]\n    if (of.some((n) => 'name' in n && n.name === 'block')) {\n      return <BlockContentIcon />\n    }\n    return <ThListIcon />\n  }\n\n  if (type === 'object') {\n    if (option.name === 'image') {\n      return <ImageIcon />\n    }\n    if (option.name === 'block') {\n      return <StringIcon />\n    }\n  }\n\n  return <CubeIcon />\n}\n","import {Portal} from '@sanity/ui/_visual-editing'\nimport {type FunctionComponent, type MouseEvent} from 'react'\nimport {css, styled} from 'styled-components'\n\nconst scrollBlockStyles = css`\n  overflow-y: scroll;\n  overscroll-behavior: contain;\n  -ms-overflow-style: none;\n  scrollbar-width: none;\n\n  &:before {\n    content: '';\n    display: block;\n    height: calc(100% + 1px);\n    position: absolute;\n    top: 0;\n    width: 100%;\n    z-index: -1;\n  }\n`\n\nconst PortalContainer = styled.div<{$blockScroll: boolean}>`\n  height: 100%;\n  inset: 0;\n  pointer-events: all;\n  position: fixed;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  ${(props) => props.$blockScroll && scrollBlockStyles}\n`\nconst PortalBackground = styled.div`\n  background: transparent;\n  height: 100%;\n  inset: 0;\n  position: absolute;\n  width: 100%;\n`\n\ntype PopoverPortalProps = {\n  children?: React.ReactNode\n  onDismiss?: () => void\n  setBoundaryElement?: (element: HTMLDivElement) => void\n  blockScroll?: boolean\n}\n\nexport const PopoverPortal: FunctionComponent<PopoverPortalProps> = (props) => {\n  return (\n    <Portal>\n      <PopoverBackground {...props} />\n    </Portal>\n  )\n}\n\nexport const PopoverBackground: FunctionComponent<{\n  children?: React.ReactNode\n  onDismiss?: () => void\n  setBoundaryElement?: (element: HTMLDivElement) => void\n  blockScroll?: boolean\n}> = (props) => {\n  const {children, onDismiss, setBoundaryElement, blockScroll = true} = props\n\n  // Prevent the event from propagating to the window, so that the controller's\n  // `handleBlur` listener is not triggered. This is needed to prevent the\n  // context menu from being dismissed when some click causes parent elements to\n  // re-render, and the data-attribute method of preventing propagation fails.\n  const handleClick = (event: MouseEvent) => {\n    event.stopPropagation()\n  }\n\n  return (\n    <PortalContainer\n      data-sanity-overlay-element\n      ref={setBoundaryElement}\n      onClick={handleClick}\n      $blockScroll={blockScroll}\n    >\n      <PortalBackground\n        onMouseDownCapture={() => {\n          onDismiss?.()\n        }}\n      />\n      {children}\n    </PortalContainer>\n  )\n}\n","import {defineEvent} from '@sanity/telemetry'\nimport {createContext} from 'react'\n\nexport const events = {\n  'Visual Editing Drag Sequence Completed': defineEvent({\n    name: 'Visual Editing Drag Sequence Completed',\n    description: 'An array is successfully reordered using drag and drop.',\n    version: 1,\n  }),\n  'Visual Editing Drag Minimap Enabled': defineEvent({\n    name: 'Visual Editing Drag Minimap Enabled',\n    description: 'The zoomed-out minimap view is enabled during a drag sequence.',\n    version: 1,\n  }),\n  'Visual Editing Context Menu Item Removed': defineEvent({\n    name: 'Visual Editing Context Menu Item Removed',\n    description: 'An item is removed using the Context Menu.',\n    version: 1,\n  }),\n  'Visual Editing Context Menu Item Duplicated': defineEvent({\n    name: 'Visual Editing Context Menu Item Duplicated',\n    description: 'An item is duplicated using the Context Menu.',\n    version: 1,\n  }),\n  'Visual Editing Context Menu Item Moved': defineEvent({\n    name: 'Visual Editing Context Menu Item Moved',\n    description: 'An item is moved using the Context Menu.',\n    version: 1,\n  }),\n  'Visual Editing Context Menu Item Inserted': defineEvent({\n    name: 'Visual Editing Context Menu Item Inserted',\n    description: 'An item is inserted using the Context Menu.',\n    version: 1,\n  }),\n  'Visual Editing Insert Menu Item Inserted': defineEvent({\n    name: 'Visual Editing Insert Menu Item Inserted',\n    description: 'An item is inserted using the Insert Menu.',\n    version: 1,\n  }),\n  'Visual Editing Overlay Clicked': defineEvent({\n    name: 'Visual Editing Overlay Clicked',\n    description: 'An Overlay is clicked.',\n    version: 1,\n  }),\n}\n\ntype EventDataMap = {\n  [K in keyof typeof events]: (typeof events)[K] extends ReturnType<typeof defineEvent<infer T>>\n    ? T\n    : never\n}\n\nexport type TelemetryEventNames = keyof typeof events\n\nexport type TelemetryContextValue = <K extends keyof typeof events>(\n  name: K,\n  data: EventDataMap[K] extends void ? null | undefined : EventDataMap[K],\n) => void\n\nexport const TelemetryContext = createContext<TelemetryContextValue | undefined>(undefined)\n","import {useContext} from 'react'\nimport {TelemetryContext, type TelemetryContextValue} from './TelemetryContext'\n\nexport function useTelemetry(): TelemetryContextValue {\n  const context = useContext(TelemetryContext)\n\n  if (!context) {\n    throw new Error('Telemetry context is missing')\n  }\n\n  return context\n}\n","import type {InsertMenuOptions} from '@sanity/insert-menu'\nimport {InsertMenu as SanityInsertMenu} from '@sanity/insert-menu'\nimport type {SchemaUnionNode} from '@sanity/presentation-comlink'\nimport type {SchemaType} from '@sanity/types'\nimport {Popover} from '@sanity/ui/_visual-editing'\nimport {type FunctionComponent} from 'react'\nimport {PopoverPortal} from '../../ui/PopoverPortal'\nimport {getNodeIcon} from '../../util/getNodeIcon'\n\n// @todo How can this be localised?\nconst labels = {\n  'insert-menu.filter.all-items': 'All',\n  'insert-menu.search.no-results': 'No results',\n  'insert-menu.search.placeholder': 'Filter typesâ€¦',\n  'insert-menu.toggle-grid-view.tooltip': 'Toggle grid view',\n  'insert-menu.toggle-list-view.tooltip': 'Toggle list view',\n} as const\n\nexport interface InsertMenuProps {\n  node: SchemaUnionNode\n  onSelect: (schemaType: SchemaType) => void\n}\n\nexport const InsertMenu: FunctionComponent<InsertMenuProps> = (props) => {\n  const {node, onSelect} = props\n\n  const insertMenuOptions = node.options?.insertMenu || {}\n\n  const views: InsertMenuOptions['views'] = insertMenuOptions.views?.map((view) => {\n    // Map the `previewImageUrls` that Presentation already resolved and\n    // serialized back to a function so that InsertMenu can \"resolve\" them\n    if (view.name === 'grid') {\n      return {\n        ...view,\n        previewImageUrl: (name) => view.previewImageUrls?.[name],\n      }\n    }\n    return view\n  })\n\n  return (\n    <SanityInsertMenu\n      {...insertMenuOptions}\n      labels={labels}\n      // @ts-expect-error -- @todo map typings\n      schemaTypes={node.of.map((type) => ({\n        ...type,\n        icon: getNodeIcon(type),\n      }))}\n      onSelect={onSelect}\n      views={views}\n    />\n  )\n}\n\nexport interface InsertMenuPopoverProps extends InsertMenuProps {\n  onDismiss: () => void\n  referenceElement?: HTMLElement | null\n}\n\nexport const InsertMenuPopover: FunctionComponent<InsertMenuPopoverProps> = (props) => {\n  const {node, onDismiss, onSelect, referenceElement} = props\n\n  const popoverContent = <InsertMenu node={node} onSelect={onSelect} />\n\n  const insertMenuOptions = node.options?.insertMenu || {}\n\n  // If the grid view is not enabled, the popover should fit the content. If it\n  // is enabled, the popover width needs to be 'forced' to some arbitrary amount\n  // to prevent the grid from collapsing to a single column. The '0' size allows\n  // for a two column layout\n  const width = insertMenuOptions.views?.some((view) => view.name === 'grid') ? 0 : undefined\n\n  return (\n    <PopoverPortal onDismiss={onDismiss}>\n      <Popover\n        animate={true}\n        constrainSize\n        content={popoverContent}\n        fallbackPlacements={['bottom']}\n        open\n        placement={'top'}\n        preventOverflow\n        referenceElement={referenceElement}\n        width={width}\n      />\n    </PopoverPortal>\n  )\n}\n","import type {FunctionComponent, HTMLAttributes, PropsWithChildren} from 'react'\n\nexport const PointerEvents: FunctionComponent<\n  PropsWithChildren<HTMLAttributes<HTMLDivElement>>\n> = ({children, style, ...rest}) => {\n  return (\n    <div style={{...style, pointerEvents: 'all'}} data-sanity-overlay-element {...rest}>\n      {children}\n    </div>\n  )\n}\n"],"names":["getNodeIcon","option","type","value","node","icon","__html","Array","isArray","of","some","n","name","scrollBlockStyles","css","PortalContainer","styled","div","props","$blockScroll","PortalBackground","PopoverPortal","$","_c","t0","PopoverBackground","children","onDismiss","setBoundaryElement","blockScroll","undefined","handleClick","_temp","t1","t2","event","stopPropagation","events","defineEvent","description","version","TelemetryContext","createContext","useTelemetry","context","useContext","Error","labels","InsertMenu","onSelect","options","insertMenu","insertMenuOptions","views","map","_temp2","t3","SanityInsertMenu","InsertMenuPopover","referenceElement","popoverContent","width","_temp3","Symbol","for","view","previewImageUrl","previewImageUrls","PointerEvents","rest","style","pointerEvents"],"mappings":"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"}