{"version":3,"file":"index.js","sources":["../../src/ui/History.tsx","../../src/ui/Meta.ts","../../src/util/useDragEvents.ts","../../src/ui/schema/SchemaContext.tsx","../../src/ui/schema/useSchema.ts","../../src/ui/context-menu/contextMenuItems.tsx","../../src/ui/context-menu/ContextMenu.tsx","../../src/util/getLinkHref.ts","../../src/ui/preview/PreviewSnapshotsContext.tsx","../../src/ui/preview/usePreviewSnapshots.ts","../../src/ui/ElementOverlay.tsx","../../src/ui/OverlayDragGroupRect.tsx","../../src/ui/OverlayDragInsertMarker.tsx","../../src/ui/OverlayDragPreview.tsx","../../src/ui/OverlayMinimapPrompt.tsx","../../src/ui/elementsReducer.ts","../../src/ui/overlayStateReducer.ts","../../src/ui/preview/PreviewSnapshotsProvider.tsx","../../src/ui/schema/SchemaProvider.tsx","../../src/ui/shared-state/SharedStateProvider.tsx","../../src/ui/telemetry/TelemetryProvider.tsx","../../src/ui/useController.tsx","../../src/ui/usePerspectiveSync.tsx","../../src/ui/useReportDocuments.ts","../../src/ui/Overlays.tsx","../../src/ui/Refresh.tsx","../../src/ui/useComlink.tsx","../../src/optimistic/state/createSharedListener.ts","../../src/ui/useDatasetMutator.ts","../../src/ui/VisualEditing.tsx"],"sourcesContent":["import {useEffect, type FunctionComponent} from 'react'\nimport type {HistoryAdapter, VisualEditingNode} from '../types'\n\n/**\n * @internal\n */\nexport const History: FunctionComponent<{\n  comlink: VisualEditingNode\n  history?: HistoryAdapter\n}> = (props) => {\n  const {comlink, history} = props\n\n  useEffect(() => {\n    return comlink?.on('presentation/navigate', (data) => {\n      history?.update(data)\n    })\n  }, [comlink, history])\n\n  useEffect(() => {\n    if (history) {\n      return history.subscribe((update) => {\n        update.title = update.title || document.title\n        comlink?.post('visual-editing/navigate', update)\n      })\n    }\n    return\n  }, [comlink, history])\n\n  return null\n}\n","import {useEffect, type FunctionComponent} from 'react'\nimport type {VisualEditingNode} from '../types'\n\n/**\n * @internal\n */\nexport const Meta: FunctionComponent<{\n  comlink: VisualEditingNode\n}> = (props) => {\n  const {comlink} = props\n\n  useEffect(() => {\n    const sendMeta = () => {\n      comlink.post('visual-editing/meta', {title: document.title})\n    }\n\n    const observer = new MutationObserver(([mutation]) => {\n      if (mutation.target.nodeName === 'TITLE') {\n        sendMeta()\n      }\n    })\n\n    observer.observe(document.head, {\n      subtree: true,\n      characterData: true,\n      childList: true,\n    })\n\n    sendMeta()\n\n    return () => observer.disconnect()\n  }, [comlink])\n\n  return null\n}\n","import {at, insert, remove} from '@sanity/mutate'\nimport {get as getFromPath} from '@sanity/util/paths'\nimport {useCallback, useEffect} from 'react'\nimport {useDocuments} from '../react/useDocuments'\nimport type {DragEndEvent, DragInsertPosition} from '../types'\nimport {getArrayItemKeyAndParentPath} from './mutations'\n\n// Finds the node that the drag end event was relative to, and the relative\n// position the new element should be inserted in. If the reference node was\n// \"top\" or \"left\", we insert \"after\". If it was \"bottom\" or \"right\", we insert\n// \"before\".\nfunction getReferenceNodeAndInsertPosition(position: DragInsertPosition) {\n  if (position) {\n    const {top, right, bottom, left} = position\n    if (left || top) {\n      return {node: (left ?? top)!.sanity, position: 'after' as const}\n    } else if (right || bottom) {\n      return {node: (right ?? bottom)!.sanity, position: 'before' as const}\n    }\n  }\n  return undefined\n}\n\nexport function useDragEndEvents(): {\n  dispatchDragEndEvent: (event: DragEndEvent) => void\n} {\n  const {getDocument} = useDocuments()\n\n  useEffect(() => {\n    const handler = (e: CustomEvent<DragEndEvent>) => {\n      const {insertPosition, target, preventInsertDefault} = e.detail\n\n      if (preventInsertDefault) return\n\n      const reference = getReferenceNodeAndInsertPosition(insertPosition)\n      if (reference) {\n        const doc = getDocument(target.id)\n        // We must have access to the document actor in order to perform the\n        // necessary mutations. If this is undefined, something went wrong when\n        // resolving the currently in use documents\n        const {node, position} = reference\n        // Get the key of the element that was dragged\n        const {key: targetKey, hasExplicitKey} = getArrayItemKeyAndParentPath(target)\n        // Get the key of the reference element, and path to the parent array\n        const {path: arrayPath, key: referenceItemKey} = getArrayItemKeyAndParentPath(node)\n        // Don't patch if the keys match, as this means the item was only\n        // dragged to its existing position, i.e. not moved\n        if (arrayPath && referenceItemKey && referenceItemKey !== targetKey) {\n          doc.patch(async ({getSnapshot}) => {\n            const snapshot = await getSnapshot()\n            // Get the current value of the element we dragged, as we will need\n            // to clone this into the new position\n            const elementValue = getFromPath(snapshot, target.path)\n\n            if (hasExplicitKey) {\n              return [\n                // Remove the original dragged item\n                at(arrayPath, remove({_key: targetKey})),\n                // Insert the cloned dragged item into its new position\n                at(arrayPath, insert(elementValue, position, {_key: referenceItemKey})),\n              ]\n            } else {\n              // handle reordering for primitives\n              return [\n                // Remove the original dragged item\n                at(arrayPath, remove(~~targetKey)),\n                // Insert the cloned dragged item into its new position\n                at(\n                  arrayPath,\n                  insert(\n                    elementValue,\n                    position,\n                    // if target key is < reference, each item in the array's index will be one less due to the previous removal\n                    referenceItemKey > targetKey ? ~~referenceItemKey - 1 : ~~referenceItemKey,\n                  ),\n                ),\n              ]\n            }\n          })\n        }\n      }\n    }\n    window.addEventListener('sanity/dragEnd', handler as EventListener)\n    return () => {\n      window.removeEventListener('sanity/dragEnd', handler as EventListener)\n    }\n  }, [getDocument])\n\n  const dispatchDragEndEvent = useCallback((event: DragEndEvent) => {\n    const customEvent = new CustomEvent<DragEndEvent>('sanity/dragEnd', {\n      detail: event,\n      cancelable: true,\n    })\n    window.dispatchEvent(customEvent)\n  }, [])\n\n  return {dispatchDragEndEvent}\n}\n","import type {\n  DocumentSchema,\n  SanityNode,\n  SanityStegaNode,\n  TypeSchema,\n} from '@sanity/presentation-comlink'\nimport {createContext} from 'react'\nimport type {OverlayElementField, OverlayElementParent} from '../../types'\n\nexport interface SchemaContextValue {\n  getField: (node: SanityNode | SanityStegaNode) => {\n    field: OverlayElementField\n    parent: OverlayElementParent\n  }\n  getType: <T extends 'document' | 'type' = 'document'>(\n    node: SanityNode | SanityStegaNode | string,\n    type?: T,\n  ) => T extends 'document' ? DocumentSchema | undefined : TypeSchema | undefined\n}\n\nexport const SchemaContext = createContext<SchemaContextValue | null>(null)\n","import {useContext} from 'react'\nimport {SchemaContext, type SchemaContextValue} from './SchemaContext'\n\nexport function useSchema(): SchemaContextValue {\n  const context = useContext(SchemaContext)\n\n  if (!context) {\n    throw new Error('Schema context is missing')\n  }\n\n  return context\n}\n","import {\n  ArrowDownIcon,\n  ArrowUpIcon,\n  CopyIcon,\n  InsertAboveIcon,\n  InsertBelowIcon,\n  PublishIcon,\n  RemoveIcon,\n  SortIcon,\n  UnpublishIcon,\n} from '@sanity/icons'\nimport type {\n  SanityNode,\n  SchemaArrayItem,\n  SchemaNode,\n  SchemaUnionNode,\n  SchemaUnionOption,\n} from '@sanity/presentation-comlink'\nimport type {SchemaType} from '@sanity/types'\nimport {MenuGroup} from '@sanity/ui/_visual-editing'\nimport {type FunctionComponent} from 'react'\nimport type {OptimisticDocument} from '../../optimistic'\nimport {InsertMenu} from '../../overlay-components/components/InsertMenu'\nimport type {ContextMenuNode, OverlayElementField, OverlayElementParent} from '../../types'\nimport {getNodeIcon} from '../../util/getNodeIcon'\nimport {\n  getArrayDuplicatePatches,\n  getArrayInsertPatches,\n  getArrayMovePatches,\n  getArrayRemovePatches,\n} from '../../util/mutations'\n\nexport function getArrayRemoveAction(node: SanityNode, doc: OptimisticDocument): () => void {\n  if (!node.type) throw new Error('Node type is missing')\n  return () =>\n    doc.patch(async ({getSnapshot}) => getArrayRemovePatches(node, (await getSnapshot())!))\n}\n\nfunction getArrayInsertAction(\n  node: SanityNode,\n  doc: OptimisticDocument,\n  insertType: string,\n  position: 'before' | 'after',\n): () => void {\n  if (!node.type) throw new Error('Node type is missing')\n  return () => doc.patch(() => getArrayInsertPatches(node, insertType, position))\n}\n\nfunction getDuplicateAction(node: SanityNode, doc: OptimisticDocument): () => void {\n  if (!node.type) throw new Error('Node type is missing')\n  return () =>\n    doc.patch(async ({getSnapshot}) => getArrayDuplicatePatches(node, (await getSnapshot())!))\n}\n\nexport function getContextMenuItems(context: {\n  doc: OptimisticDocument\n  field: OverlayElementField\n  node: SanityNode\n  parent: OverlayElementParent\n}): Promise<ContextMenuNode[]> {\n  const {node, field, parent, doc} = context\n  if (field?.type === 'arrayItem') {\n    return getContextMenuArrayItems({node, field, doc})\n  }\n  if (parent?.type === 'union') {\n    return getContextMenuUnionItems({node, parent, doc})\n  }\n\n  return Promise.resolve([])\n}\n\nfunction getDuplicateItem(context: {doc: OptimisticDocument; node: SanityNode}) {\n  const {node, doc} = context\n  if (!doc) return []\n  return [\n    {\n      type: 'action' as const,\n      label: 'Duplicate',\n      icon: CopyIcon,\n      action: getDuplicateAction(node, doc),\n      telemetryEvent: 'Visual Editing Context Menu Item Duplicated' as const,\n    },\n  ]\n}\n\nfunction getRemoveItems(context: {doc: OptimisticDocument; node: SanityNode}) {\n  const {node, doc} = context\n  if (!doc) return []\n  return [\n    {\n      type: 'action' as const,\n      label: 'Remove',\n      icon: RemoveIcon,\n      action: getArrayRemoveAction(node, doc),\n      telemetryEvent: 'Visual Editing Context Menu Item Removed' as const,\n    },\n  ]\n}\n\nasync function getMoveItems(\n  context: {\n    doc: OptimisticDocument\n    node: SanityNode\n  },\n  withDivider = true,\n) {\n  const {node, doc} = context\n  if (!doc) return []\n\n  const items: ContextMenuNode[] = []\n  const groupItems: ContextMenuNode[] = []\n\n  const [moveUpPatches, moveDownPatches, moveFirstPatches, moveLastPatches] = await Promise.all([\n    getArrayMovePatches(node, doc, 'previous'),\n    getArrayMovePatches(node, doc, 'next'),\n    getArrayMovePatches(node, doc, 'first'),\n    getArrayMovePatches(node, doc, 'last'),\n  ])\n\n  if (moveFirstPatches.length) {\n    groupItems.push({\n      type: 'action',\n      label: 'To top',\n      icon: PublishIcon,\n      action: () => doc.patch(moveFirstPatches),\n      telemetryEvent: 'Visual Editing Context Menu Item Moved',\n    })\n  }\n  if (moveUpPatches.length) {\n    groupItems.push({\n      type: 'action',\n      label: 'Up',\n      icon: ArrowUpIcon,\n      action: () => doc.patch(moveUpPatches),\n      telemetryEvent: 'Visual Editing Context Menu Item Moved',\n    })\n  }\n  if (moveDownPatches.length) {\n    groupItems.push({\n      type: 'action',\n      label: 'Down',\n      icon: ArrowDownIcon,\n      action: () => doc.patch(moveDownPatches),\n      telemetryEvent: 'Visual Editing Context Menu Item Moved',\n    })\n  }\n  if (moveLastPatches.length) {\n    groupItems.push({\n      type: 'action',\n      label: 'To bottom',\n      icon: UnpublishIcon,\n      action: () => doc.patch(moveLastPatches),\n      telemetryEvent: 'Visual Editing Context Menu Item Moved',\n    })\n  }\n\n  if (groupItems.length) {\n    items.push({\n      type: 'group',\n      label: 'Move',\n      icon: SortIcon,\n      items: groupItems,\n    })\n    if (withDivider) {\n      items.push({type: 'divider'})\n    }\n  }\n\n  return items\n}\n\nasync function getContextMenuArrayItems(context: {\n  doc: OptimisticDocument\n  field: SchemaArrayItem\n  node: SanityNode\n}): Promise<ContextMenuNode[]> {\n  const {node, field, doc} = context\n  const items: ContextMenuNode[] = []\n  items.push(...getDuplicateItem(context))\n  items.push(...getRemoveItems(context))\n  items.push(...(await getMoveItems(context)))\n\n  items.push({\n    type: 'action',\n    label: 'Insert before',\n    icon: InsertAboveIcon,\n    action: getArrayInsertAction(node, doc, field.name, 'before'),\n    telemetryEvent: 'Visual Editing Context Menu Item Inserted',\n  })\n  items.push({\n    type: 'action',\n    label: 'Insert after',\n    icon: InsertBelowIcon,\n    action: getArrayInsertAction(node, doc, field.name, 'after'),\n    telemetryEvent: 'Visual Editing Context Menu Item Inserted',\n  })\n\n  return items\n}\n\nconst InsertMenuWrapper: FunctionComponent<{\n  label: string\n  onSelect: (schemaType: SchemaType) => void\n  parent: SchemaUnionNode<SchemaNode>\n  width: number | undefined\n  boundaryElement: HTMLDivElement | null\n}> = (props) => {\n  const {label, parent, width, onSelect, boundaryElement} = props\n\n  return (\n    <MenuGroup\n      fontSize={1}\n      icon={InsertBelowIcon}\n      padding={2}\n      popover={{\n        arrow: false,\n        constrainSize: true,\n        floatingBoundary: boundaryElement,\n        padding: 0,\n        placement: 'right-start',\n        fallbackPlacements: [\n          'left-start',\n          'right',\n          'left',\n          'right-end',\n          'left-end',\n          'bottom',\n          'top',\n        ],\n        preventOverflow: true,\n        width,\n        __unstable_margins: [4, 4, 4, 4],\n      }}\n      space={2}\n      text={label}\n    >\n      <InsertMenu node={parent} onSelect={onSelect} />\n    </MenuGroup>\n  )\n}\n\nasync function getContextMenuUnionItems(context: {\n  doc: OptimisticDocument\n  node: SanityNode\n  parent: SchemaUnionNode<SchemaNode>\n}): Promise<ContextMenuNode[]> {\n  const {doc, node, parent} = context\n  const items: ContextMenuNode[] = []\n  items.push(...getDuplicateItem(context))\n  items.push(...getRemoveItems(context))\n  items.push(...(await getMoveItems(context)))\n\n  if (parent.options?.insertMenu) {\n    const insertMenuOptions = parent.options.insertMenu || {}\n    const width = insertMenuOptions.views?.some((view) => view.name === 'grid') ? 0 : undefined\n\n    items.push({\n      type: 'custom',\n      component: ({boundaryElement, sendTelemetry}) => {\n        const onSelect = (schemaType: SchemaType) => {\n          const action = getArrayInsertAction(node, doc, schemaType.name, 'before')\n          action()\n\n          sendTelemetry('Visual Editing Context Menu Item Inserted', null)\n        }\n        return (\n          <InsertMenuWrapper\n            label=\"Insert before\"\n            onSelect={onSelect}\n            parent={parent}\n            width={width}\n            boundaryElement={boundaryElement}\n          />\n        )\n      },\n    })\n\n    items.push({\n      type: 'custom',\n      component: ({boundaryElement, sendTelemetry}) => {\n        const onSelect = (schemaType: SchemaType) => {\n          const action = getArrayInsertAction(node, doc, schemaType.name, 'after')\n          action()\n\n          sendTelemetry('Visual Editing Context Menu Item Inserted', null)\n        }\n        return (\n          <InsertMenuWrapper\n            label=\"Insert after\"\n            onSelect={onSelect}\n            parent={parent}\n            width={width}\n            boundaryElement={boundaryElement}\n          />\n        )\n      },\n    })\n  } else {\n    items.push({\n      type: 'group',\n      label: 'Insert before',\n      icon: InsertAboveIcon,\n      items: (\n        parent.of.filter((item) => item.type === 'unionOption') as SchemaUnionOption<SchemaNode>[]\n      ).map((t) => {\n        return {\n          type: 'action' as const,\n          icon: getNodeIcon(t),\n          label: t.name === 'block' ? 'Paragraph' : t.title || t.name,\n          action: getArrayInsertAction(node, doc, t.name, 'before'),\n          telemetryEvent: 'Visual Editing Context Menu Item Inserted',\n        }\n      }),\n    })\n    items.push({\n      type: 'group',\n      label: 'Insert after',\n      icon: InsertBelowIcon,\n      items: (\n        parent.of.filter((item) => item.type === 'unionOption') as SchemaUnionOption<SchemaNode>[]\n      ).map((t) => {\n        return {\n          type: 'action' as const,\n          label: t.name === 'block' ? 'Paragraph' : t.title || t.name,\n          icon: getNodeIcon(t),\n          action: getArrayInsertAction(node, doc, t.name, 'after'),\n          telemetryEvent: 'Visual Editing Context Menu Item Inserted',\n        }\n      }),\n    })\n  }\n\n  return items\n}\n","import {\n  Box,\n  Flex,\n  Menu,\n  MenuDivider,\n  MenuGroup,\n  MenuItem,\n  Popover,\n  Spinner,\n  Stack,\n  Text,\n  type PopoverMargins,\n} from '@sanity/ui/_visual-editing'\nimport {useCallback, useEffect, useMemo, useState, type FunctionComponent} from 'react'\nimport {useDocuments} from '../../react/useDocuments'\nimport type {ContextMenuNode, ContextMenuProps} from '../../types'\nimport {getNodeIcon} from '../../util/getNodeIcon'\nimport {PopoverPortal} from '../PopoverPortal'\nimport {useSchema} from '../schema/useSchema'\nimport {useTelemetry} from '../telemetry/useTelemetry'\nimport {getContextMenuItems} from './contextMenuItems'\n\nconst POPOVER_MARGINS: PopoverMargins = [-4, 4, -4, 4]\n\nfunction ContextMenuItem(props: {\n  node: ContextMenuNode\n  onDismiss?: () => void\n  boundaryElement: HTMLDivElement | null\n}) {\n  const {node, onDismiss, boundaryElement} = props\n  const sendTelemetry = useTelemetry()\n\n  const onClick = useCallback(() => {\n    if (node.type === 'action') {\n      node.action?.()\n      onDismiss?.()\n\n      if (node.telemetryEvent) {\n        sendTelemetry(node.telemetryEvent, null)\n      }\n    }\n  }, [node, onDismiss, sendTelemetry])\n\n  if (node.type === 'divider') {\n    return <MenuDivider />\n  }\n\n  if (node.type === 'action') {\n    return (\n      <MenuItem\n        fontSize={1}\n        hotkeys={node.hotkeys}\n        icon={node.icon}\n        padding={2}\n        space={2}\n        text={node.label}\n        disabled={!node.action}\n        onClick={onClick}\n      />\n    )\n  }\n\n  if (node.type === 'group') {\n    return (\n      <MenuGroup\n        fontSize={1}\n        icon={node.icon}\n        padding={2}\n        // @todo when this PR lands https://github.com/sanity-io/ui/pull/1454\n        // menu={{\n        //   padding: 0,\n        // }}\n        popover={{\n          arrow: false,\n          constrainSize: true,\n          placement: 'right-start',\n          fallbackPlacements: [\n            'left-start',\n            'right',\n            'left',\n            'right-end',\n            'left-end',\n            'bottom',\n            'top',\n          ],\n          preventOverflow: true,\n          __unstable_margins: POPOVER_MARGINS,\n        }}\n        space={2}\n        text={node.label}\n      >\n        {node.items.map((item, itemIndex) => (\n          <ContextMenuItem\n            key={itemIndex}\n            node={item}\n            onDismiss={onDismiss}\n            boundaryElement={boundaryElement}\n          />\n        ))}\n      </MenuGroup>\n    )\n  }\n\n  if (node.type === 'custom') {\n    const {component: Component} = node\n    return <Component boundaryElement={boundaryElement} sendTelemetry={sendTelemetry} />\n  }\n\n  return null\n}\n\nexport const ContextMenu: FunctionComponent<ContextMenuProps> = (props) => {\n  const {\n    node,\n    onDismiss,\n    position: {x, y},\n  } = props\n\n  const [boundaryElement, setBoundaryElement] = useState<HTMLDivElement | null>(null)\n\n  const {getField} = useSchema()\n  const {getDocument} = useDocuments()\n\n  const {field, parent} = getField(node)\n\n  const title = useMemo(() => {\n    return field?.title || field?.name || 'Unknown type'\n  }, [field])\n\n  const [items, setItems] = useState<ContextMenuNode[] | undefined>(undefined)\n\n  useEffect(() => {\n    const fetchContextMenuItems = async () => {\n      const doc = getDocument(node.id)\n      if (!doc) return\n      const items = await getContextMenuItems({node, field, parent, doc})\n      setItems(items)\n    }\n    fetchContextMenuItems()\n  }, [field, node, parent, getDocument])\n\n  const contextMenuReferenceElement = useMemo(() => {\n    return {\n      getBoundingClientRect: () => ({\n        bottom: y,\n        left: x,\n        right: x,\n        top: y,\n        width: 0,\n        height: 0,\n      }),\n    } as HTMLElement\n  }, [x, y])\n\n  const icon = useMemo(() => {\n    return getNodeIcon(field)\n  }, [field])\n\n  return (\n    <PopoverPortal setBoundaryElement={setBoundaryElement} onDismiss={onDismiss}>\n      <Popover\n        __unstable_margins={POPOVER_MARGINS}\n        arrow={false}\n        open\n        placement=\"right-start\"\n        referenceElement={contextMenuReferenceElement}\n        content={\n          <Menu style={{minWidth: 120, maxWidth: 160}}>\n            <Flex gap={2} padding={2}>\n              <Box flex=\"none\">{items ? <Text size={1}>{icon}</Text> : <Spinner size={1} />}</Box>\n\n              <Stack flex={1} space={2}>\n                <Text size={1} weight=\"semibold\">\n                  {items ? title : 'Loading...'}\n                </Text>\n              </Stack>\n            </Flex>\n\n            {items && (\n              <>\n                <MenuDivider />\n                {items.map((item, i) => (\n                  <ContextMenuItem\n                    key={i}\n                    node={item}\n                    onDismiss={onDismiss}\n                    boundaryElement={boundaryElement}\n                  />\n                ))}\n              </>\n            )}\n          </Menu>\n        }\n      >\n        <div\n          key={`${x}-${y}`}\n          style={{\n            position: 'absolute',\n            left: x,\n            top: y,\n          }}\n        />\n      </Popover>\n    </PopoverPortal>\n  )\n}\n","export function getLinkHref(href: string, referer: string): string {\n  try {\n    const parsed = new URL(href, typeof location === 'undefined' ? undefined : location.origin)\n    if (parsed.hash) {\n      const hash = new URL(getLinkHref(parsed.hash.slice(1), referer))\n      return `${parsed.origin}${parsed.pathname}${parsed.search}#${hash.pathname}${hash.search}`\n    }\n    parsed.searchParams.set('preview', referer)\n    return parsed.toString()\n  } catch {\n    return href\n  }\n}\n","import type {PreviewSnapshot} from '@sanity/presentation-comlink'\nimport {createContext} from 'react'\n\nexport type PreviewSnapshotsContextValue = PreviewSnapshot[]\n\nexport const PreviewSnapshotsContext = createContext<PreviewSnapshotsContextValue | null>(null)\n","import {useContext} from 'react'\nimport {PreviewSnapshotsContext, type PreviewSnapshotsContextValue} from './PreviewSnapshotsContext'\n\nexport function usePreviewSnapshots(): PreviewSnapshotsContextValue {\n  const context = useContext(PreviewSnapshotsContext)\n\n  if (!context) {\n    throw new Error('Preview Snapshots context is missing')\n  }\n\n  return context\n}\n","import {createEditUrl, studioPath} from '@sanity/client/csm'\nimport {DocumentIcon, DragHandleIcon, EllipsisVerticalIcon, PlugIcon} from '@sanity/icons'\nimport {MenuButton, MenuDivider} from '@sanity/ui'\nimport {Box, Button, Card, Flex, Menu, MenuItem, Stack, Text} from '@sanity/ui/_visual-editing'\nimport {pathToUrlString} from '@sanity/visual-editing-csm'\nimport {\n  Fragment,\n  isValidElement,\n  memo,\n  useCallback,\n  useEffect,\n  useId,\n  useMemo,\n  useRef,\n  useState,\n  useSyncExternalStore,\n  type CSSProperties,\n  type FunctionComponent,\n  type MouseEventHandler,\n  type ReactElement,\n} from 'react'\nimport scrollIntoView from 'scroll-into-view-if-needed'\nimport {styled} from 'styled-components'\nimport {v4 as uuid} from 'uuid'\nimport {PointerEvents} from '../overlay-components/components/PointerEvents'\nimport type {\n  ElementChildTarget,\n  ElementFocusedState,\n  ElementNode,\n  OverlayComponent,\n  OverlayComponentResolver,\n  OverlayComponentResolverContext,\n  OverlayPluginDefinition,\n  OverlayPluginExclusiveDefinition,\n  OverlayPluginHudDefinition,\n  OverlayRect,\n  SanityNode,\n  SanityStegaNode,\n  VisualEditingNode,\n} from '../types'\nimport {getLinkHref} from '../util/getLinkHref'\nimport {PopoverBackground} from './PopoverPortal'\nimport {usePreviewSnapshots} from './preview/usePreviewSnapshots'\nimport {useSchema} from './schema/useSchema'\n\nconst isReactElementOverlayComponent = (\n  component:\n    | OverlayComponent\n    | {component: OverlayComponent; props?: Record<string, unknown>}\n    | Array<OverlayComponent | {component: OverlayComponent; props?: Record<string, unknown>}>\n    | ReactElement,\n): component is React.JSX.Element => {\n  return isValidElement(component)\n}\n\nexport interface ElementOverlayProps {\n  id: string\n  comlink?: VisualEditingNode\n  componentResolver?: OverlayComponentResolver\n  plugins?: OverlayPluginDefinition[]\n  draggable: boolean\n  element: ElementNode\n  focused: ElementFocusedState\n  hovered: boolean\n  isDragging: boolean\n  node: SanityNode | SanityStegaNode\n  rect: OverlayRect\n  showActions: boolean\n  wasMaybeCollapsed: boolean\n  enableScrollIntoView: boolean\n  targets: ElementChildTarget[]\n  elementType: 'element' | 'group'\n  onActivateExclusivePlugin?: (\n    plugin: OverlayPluginExclusiveDefinition,\n    context: OverlayComponentResolverContext,\n  ) => void\n  onMenuOpenChange: (open: boolean) => void\n}\n\nconst Root = styled(Card)`\n  background-color: var(--overlay-bg);\n  border-radius: 3px;\n  pointer-events: none;\n  position: absolute;\n  will-change: transform;\n  box-shadow: var(--overlay-box-shadow);\n  transition: none;\n\n  --overlay-bg: transparent;\n  --overlay-box-shadow: inset 0 0 0 1px transparent;\n\n  [data-overlays] & {\n    --overlay-bg: color-mix(in srgb, transparent 95%, var(--card-focus-ring-color));\n    --overlay-box-shadow: inset 0 0 0 2px\n      color-mix(in srgb, transparent 50%, var(--card-focus-ring-color));\n  }\n\n  [data-fading-out] & {\n    transition:\n      box-shadow 1550ms,\n      background-color 1550ms;\n\n    --overlay-bg: rgba(0, 0, 255, 0);\n    --overlay-box-shadow: inset 0 0 0 1px transparent;\n  }\n\n  &[data-focused] {\n    --overlay-box-shadow: inset 0 0 0 1px var(--card-focus-ring-color);\n  }\n\n  &[data-hovered]:not([data-focused]) {\n    transition: none;\n    --overlay-box-shadow: inset 0 0 0 2px var(--card-focus-ring-color);\n  }\n\n  /* [data-unmounted] & {\n    --overlay-box-shadow: inset 0 0 0 1px var(--card-focus-ring-color);\n  } */\n\n  :link {\n    text-decoration: none;\n  }\n`\n\nconst Actions = styled(Flex)`\n  bottom: 100%;\n  cursor: pointer;\n  pointer-events: none;\n  position: absolute;\n  right: 0;\n\n  [data-hovered]:not([data-menu-open]) & {\n    pointer-events: all;\n  }\n\n  [data-flipped] & {\n    bottom: auto;\n    top: 100%;\n  }\n`\n\nconst HUD = styled(Flex)`\n  top: 100%;\n  cursor: pointer;\n  pointer-events: none;\n  position: absolute;\n  left: 0;\n\n  gap: 4px;\n  padding: 4px 0;\n  flex-wrap: wrap;\n\n  [data-hovered]:not([data-menu-open]) & {\n    pointer-events: all;\n  }\n\n  [data-flipped] & {\n    top: calc(100% + 2rem);\n  }\n`\n\nconst MenuWrapper = styled(Flex)`\n  margin: -0.5rem;\n\n  [data-hovered]:not([data-menu-open]) & {\n    pointer-events: all;\n  }\n`\n\nconst Tab = styled(Flex)`\n  bottom: 100%;\n  cursor: pointer;\n  pointer-events: none;\n  position: absolute;\n  left: 0;\n\n  [data-hovered]:not([data-menu-open]) & {\n    pointer-events: all;\n  }\n\n  [data-flipped] & {\n    bottom: auto;\n    top: 100%;\n  }\n`\n\nconst ActionOpen = styled(Card)`\n  cursor: pointer;\n  background-color: var(--card-focus-ring-color);\n  right: 0;\n  border-radius: 3px;\n\n  & [data-ui='Text'] {\n    color: #fff;\n    white-space: nowrap;\n  }\n`\n\nconst Labels = styled(Flex)`\n  display: flex;\n  align-items: center;\n  background-color: var(--card-focus-ring-color);\n  right: 0;\n  border-radius: 3px;\n  & [data-ui='Text'],\n  & [data-sanity-icon] {\n    color: #fff;\n    white-space: nowrap;\n  }\n`\n\nconst ExclusivePluginContainer = styled.div`\n  position: absolute;\n  inset: 0;\n  pointer-events: all;\n`\n\nfunction createIntentLink(node: SanityNode) {\n  const {id, type, path, baseUrl, tool, workspace} = node\n\n  return createEditUrl({\n    baseUrl,\n    workspace,\n    tool,\n    type: type!,\n    id,\n    path: path ? pathToUrlString(studioPath.fromString(path)) : [],\n  })\n}\n\nconst ElementOverlayInner: FunctionComponent<ElementOverlayProps> = (props) => {\n  const {\n    id,\n    element,\n    focused,\n    componentResolver,\n    node,\n    showActions,\n    draggable,\n    targets,\n    elementType,\n    comlink,\n    onActivateExclusivePlugin,\n    onMenuOpenChange,\n  } = props\n\n  const {getField, getType} = useSchema()\n  const schemaType = getType(node)\n\n  const href = 'path' in node ? createIntentLink(node) : node.href\n\n  const previewSnapshots = usePreviewSnapshots()\n\n  const title = useMemo(() => {\n    if (!('path' in node)) return undefined\n    return previewSnapshots.find((snapshot) => snapshot._id === node.id)?.title\n  }, [node, previewSnapshots])\n\n  const resolverContexts = useMemo<{\n    legacyComponentContext: OverlayComponentResolverContext | undefined\n    pluginContexts: OverlayComponentResolverContext[]\n  }>(() => {\n    function getContext(\n      node: SanityNode | SanityStegaNode,\n      nodeElement?: ElementNode,\n    ): OverlayComponentResolverContext | undefined {\n      const schemaType = getType(node)\n      const {field, parent} = getField(node)\n      if (!('id' in node)) return undefined\n      if (!field || !schemaType) return undefined\n      const type = field.value.type\n      return {\n        document: schemaType,\n        element,\n        targetElement: nodeElement || element,\n        field,\n        focused: !!focused,\n        node,\n        parent,\n        type,\n      }\n    }\n    return {\n      legacyComponentContext: elementType === 'element' ? getContext(node) : undefined,\n      pluginContexts: targets\n        .map((target) => getContext(target.sanity, target.element))\n        .filter((ctx) => ctx !== undefined),\n    }\n  }, [elementType, node, targets, getType, getField, element, focused])\n\n  const customComponents = useCustomComponents(\n    resolverContexts.legacyComponentContext,\n    componentResolver,\n  )\n\n  const nodePluginCollections = useResolvedNodePlugins(\n    resolverContexts.pluginContexts,\n    props.plugins,\n  )\n\n  const icon = schemaType?.icon ? (\n    <div dangerouslySetInnerHTML={{__html: schemaType.icon}} />\n  ) : (\n    <DocumentIcon />\n  )\n\n  const menuId = useId()\n\n  const hasMenuitems = nodePluginCollections?.some(\n    (nodePluginCollection) => nodePluginCollection.exclusive.length > 0,\n  )\n  const showMenu = hasMenuitems || nodePluginCollections?.length > 1\n\n  const handleLabelClick = useCallback(() => {\n    window.dispatchEvent(new CustomEvent('sanity-overlay/label-click', {detail: {id}}))\n  }, [id])\n\n  return (\n    <>\n      <PointerEvents>\n        {showActions ? (\n          <Actions gap={1} paddingY={1}>\n            <Link href={href} />\n          </Actions>\n        ) : null}\n        {(title || showMenu) && (\n          <Tab gap={1} paddingY={1} onClick={handleLabelClick}>\n            <Labels gap={2} padding={2}>\n              {draggable && (\n                <Box marginRight={1}>\n                  <Text className=\"drag-handle\" size={0}>\n                    <DragHandleIcon />\n                  </Text>\n                </Box>\n              )}\n              <Text size={0}>{icon}</Text>\n\n              {title && (\n                <Text size={1} weight=\"medium\">\n                  {title}\n                </Text>\n              )}\n\n              {showMenu && (\n                <Box\n                  paddingLeft={2}\n                  onClick={(e) => {\n                    // Do not propagate and click the label too if clicking menu button\n                    e.stopPropagation()\n                  }}\n                >\n                  <MenuWrapper>\n                    <MenuButton\n                      id={menuId}\n                      popover={{\n                        animate: true,\n                        placement: 'bottom-start',\n                        constrainSize: true,\n                        tone: 'default',\n                      }}\n                      onOpen={() => {\n                        onMenuOpenChange?.(true)\n                      }}\n                      onClose={() => {\n                        onMenuOpenChange?.(false)\n                      }}\n                      button={<Button icon={EllipsisVerticalIcon} tone=\"primary\" padding={2} />}\n                      menu={\n                        <Menu paddingY={0}>\n                          <PointerEvents>\n                            {nodePluginCollections?.map((nodePluginCollection, index) => (\n                              <Fragment key={nodePluginCollection.id}>\n                                <Stack role=\"group\" paddingY={1} space={0}>\n                                  <MenuItem\n                                    paddingY={2}\n                                    text={\n                                      <Box paddingY={2}>\n                                        <Text muted size={1} style={{textTransform: 'capitalize'}}>\n                                          {`${nodePluginCollection.context.document.name}: ${nodePluginCollection.context.field?.name}`}\n                                        </Text>\n                                      </Box>\n                                    }\n                                    onClick={() => {\n                                      if (nodePluginCollection.context.node) {\n                                        comlink?.post(\n                                          'visual-editing/focus',\n                                          nodePluginCollection.context.node,\n                                        )\n                                      }\n                                    }}\n                                  />\n                                  {nodePluginCollection.exclusive.map((exclusive) => {\n                                    const Component = exclusive.component\n                                    if (!Component) return null\n                                    return (\n                                      <MenuItem\n                                        paddingY={2}\n                                        key={exclusive.name}\n                                        icon={exclusive.icon || <PlugIcon />}\n                                        text={\n                                          <Box paddingY={2}>\n                                            <Text size={1}>\n                                              {exclusive.title || exclusive.name}\n                                            </Text>\n                                          </Box>\n                                        }\n                                        onClick={() =>\n                                          onActivateExclusivePlugin?.(\n                                            exclusive,\n                                            nodePluginCollection.context,\n                                          )\n                                        }\n                                      />\n                                    )\n                                  })}\n                                </Stack>\n                                {index < nodePluginCollections.length - 1 && <MenuDivider />}\n                              </Fragment>\n                            ))}\n                          </PointerEvents>\n                        </Menu>\n                      }\n                    />\n                  </MenuWrapper>\n                </Box>\n              )}\n            </Labels>\n          </Tab>\n        )}\n\n        <HUD>\n          {nodePluginCollections?.map((nodePluginCollection) => (\n            <Fragment key={nodePluginCollection.id}>\n              {nodePluginCollection.hud.map((hud) => {\n                const Component = hud.component\n                if (!Component) return null\n                return <Component key={hud.name} {...nodePluginCollection.context} />\n              })}\n            </Fragment>\n          ))}\n        </HUD>\n      </PointerEvents>\n\n      {Array.isArray(customComponents)\n        ? customComponents.map(({component: Component, props}, i) => {\n            return (\n              <Component\n                key={i}\n                PointerEvents={PointerEvents}\n                {...resolverContexts.legacyComponentContext!}\n                {...props}\n              />\n            )\n          })\n        : customComponents}\n    </>\n  )\n}\n\nexport const ElementOverlay = memo(function ElementOverlay(\n  props: Omit<ElementOverlayProps, 'setActiveExclusivePlugin' | 'onMenuOpenChange'>,\n) {\n  const {draggable, focused, hovered, rect, wasMaybeCollapsed, enableScrollIntoView} = props\n\n  const ref = useRef<HTMLDivElement>(null)\n\n  const scrolledIntoViewRef = useRef(false)\n\n  const style = useMemo<CSSProperties>(\n    () => ({\n      width: `${rect.w}px`,\n      height: `${rect.h}px`,\n      transform: `translate(${rect.x}px, ${rect.y}px)`,\n    }),\n    [rect],\n  )\n\n  useEffect(() => {\n    if (\n      !scrolledIntoViewRef.current &&\n      !wasMaybeCollapsed &&\n      focused === true &&\n      ref.current &&\n      enableScrollIntoView\n    ) {\n      const target = ref.current\n      scrollIntoView(ref.current, {\n        // Workaround issue with scroll-into-view-if-needed struggling with iframes\n        behavior: (actions) => {\n          if (actions.length === 0) {\n            // An empty actions list equals scrolling isn't needed\n            return\n          }\n          // Uses native scrollIntoView to ensure iframes behave correctly\n          target.scrollIntoView({\n            behavior: 'smooth',\n            block: 'center',\n            inline: 'nearest',\n          })\n        },\n        scrollMode: 'if-needed',\n        block: 'center',\n        inline: 'nearest',\n      })\n    }\n\n    scrolledIntoViewRef.current = focused === true\n  }, [focused, wasMaybeCollapsed, enableScrollIntoView])\n\n  const [isNearTop, setIsNearTop] = useState(false)\n  useEffect(() => {\n    if (!ref.current || !hovered) return undefined\n\n    const io = new IntersectionObserver(\n      ([intersection]) => {\n        setIsNearTop(intersection.boundingClientRect.top < 0)\n      },\n      {threshold: 1},\n    )\n    io.observe(ref.current)\n    return () => io.disconnect()\n  }, [hovered, isNearTop])\n\n  const [activeExclusivePlugin, setActiveExclusivePlugin] = useState<{\n    plugin: OverlayPluginExclusiveDefinition\n    context: OverlayComponentResolverContext\n  } | null>(null)\n\n  const closeExclusivePluginView = useCallback(() => {\n    setActiveExclusivePlugin(null)\n    window.dispatchEvent(new CustomEvent('sanity-overlay/exclusive-plugin-closed'))\n  }, [])\n\n  const onActivateExclusivePlugin = useCallback(\n    (plugin: OverlayPluginExclusiveDefinition, context: OverlayComponentResolverContext) => {\n      setActiveExclusivePlugin({plugin, context})\n    },\n    [],\n  )\n\n  const handleExclusivePluginClick: MouseEventHandler<HTMLDivElement> = (event) => {\n    event.stopPropagation()\n  }\n\n  const ExclusivePluginComponent = activeExclusivePlugin?.plugin.component\n\n  const [menuOpen, setMenuOpen] = useState(false)\n\n  useEffect(() => {\n    setMenuOpen(false)\n  }, [hovered])\n\n  return (\n    <>\n      {menuOpen || ExclusivePluginComponent ? (\n        <PopoverBackground onDismiss={closeExclusivePluginView} blockScroll={menuOpen} />\n      ) : null}\n      <Root\n        data-focused={focused ? '' : undefined}\n        data-hovered={hovered ? '' : undefined}\n        data-flipped={isNearTop ? '' : undefined}\n        data-draggable={draggable ? '' : undefined}\n        data-menu-open={menuOpen ? '' : undefined}\n        ref={ref}\n        style={style}\n      >\n        {ExclusivePluginComponent ? (\n          <ExclusivePluginContainer\n            data-sanity-overlay-element\n            onClick={handleExclusivePluginClick}\n          >\n            <ExclusivePluginComponent\n              {...activeExclusivePlugin.context}\n              closeExclusiveView={closeExclusivePluginView}\n            />\n          </ExclusivePluginContainer>\n        ) : hovered ? (\n          <ElementOverlayInner\n            {...props}\n            onActivateExclusivePlugin={onActivateExclusivePlugin}\n            onMenuOpenChange={setMenuOpen}\n          />\n        ) : null}\n      </Root>\n    </>\n  )\n})\n\ninterface NodePluginCollection {\n  id: string\n  context: OverlayComponentResolverContext\n  hud: OverlayPluginHudDefinition[]\n  exclusive: OverlayPluginExclusiveDefinition[]\n}\n\nfunction useResolvedNodePlugins(\n  componentContexts: OverlayComponentResolverContext[],\n  plugins?: OverlayPluginDefinition[],\n) {\n  return useMemo(\n    () =>\n      componentContexts.map((componentContext) => {\n        const instance: NodePluginCollection = {\n          id: uuid(),\n          context: componentContext,\n          hud: [],\n          exclusive: [],\n        }\n\n        plugins?.forEach((plugin) => {\n          if (!plugin.guard?.(componentContext)) return\n          if (plugin.type === 'hud') instance.hud.push(plugin)\n          if (plugin.type === 'exclusive') instance.exclusive.push(plugin)\n        })\n\n        return instance\n      }),\n    [componentContexts, plugins],\n  )\n}\n\nfunction useCustomComponents(\n  componentContext: OverlayComponentResolverContext | undefined,\n  componentResolver: OverlayComponentResolver | undefined,\n) {\n  return useMemo(() => {\n    if (!componentContext) return undefined\n    const resolved = componentResolver?.(componentContext)\n    if (!resolved) return undefined\n\n    if (isReactElementOverlayComponent(resolved)) {\n      return resolved\n    }\n\n    return (Array.isArray(resolved) ? resolved : [resolved]).map((component) => {\n      if (typeof component === 'object' && 'component' in component) {\n        return component\n      }\n      return {component, props: {}}\n    })\n  }, [componentResolver, componentContext])\n}\n\nconst Link = memo(function Link(props: {href: string}) {\n  const referer = useSyncExternalStore(\n    useCallback((onStoreChange) => {\n      const handlePopState = () => onStoreChange()\n      window.addEventListener('popstate', handlePopState)\n      return () => window.removeEventListener('popstate', handlePopState)\n    }, []),\n    () => window.location.href,\n  )\n  const href = useMemo(() => getLinkHref(props.href, referer), [props.href, referer])\n\n  return (\n    <Box as=\"a\" href={href} target=\"_blank\" rel=\"noopener noreferrer\">\n      <ActionOpen padding={2}>\n        <Text size={1} weight=\"medium\">\n          Open in Studio\n        </Text>\n      </ActionOpen>\n    </Box>\n  )\n})\n","import type {FunctionComponent} from 'react'\nimport type {OverlayRect} from '../types'\n\nexport const OverlayDragGroupRect: FunctionComponent<{\n  dragGroupRect: OverlayRect\n}> = ({dragGroupRect}) => {\n  return (\n    <div\n      style={{\n        position: 'absolute',\n        top: `${dragGroupRect.y}px`,\n        left: `${dragGroupRect.x}px`,\n        width: `${dragGroupRect.w - 1}px`,\n        height: `${dragGroupRect.h - 1}px`,\n        border: '1px dashed #f0709b',\n        pointerEvents: 'none',\n      }}\n    ></div>\n  )\n}\n","import type {FunctionComponent} from 'react'\nimport type {DragInsertPosition} from '../types'\n\nconst markerThickness = 6\n\nfunction lerp(v0: number, v1: number, t: number) {\n  return v0 * (1 - t) + v1 * t\n}\n\nexport const OverlayDragInsertMarker: FunctionComponent<{\n  dragInsertPosition: DragInsertPosition\n}> = ({dragInsertPosition}) => {\n  if (dragInsertPosition === null) return\n\n  const flow = dragInsertPosition?.left || dragInsertPosition?.right ? 'horizontal' : 'vertical'\n\n  let x = 0\n  let y = 0\n  let width = 0\n  let height = 0\n  const offsetMultiplier = 0.0125\n\n  if (flow === 'horizontal') {\n    const {left, right} = dragInsertPosition\n\n    width = markerThickness\n\n    if (right && left) {\n      const startX = left.rect.x + left.rect.w\n      const endX = right.rect.x\n      const targetHeight = Math.min(right.rect.h, left.rect.h)\n      const offset = targetHeight * offsetMultiplier\n\n      x = lerp(startX, endX, 0.5) - markerThickness / 2\n      y = left.rect.y + offset\n\n      height = Math.min(right.rect.h, left.rect.h) - offset * 2\n    } else if (right && !left) {\n      const targetHeight = right.rect.h\n      const offset = targetHeight * offsetMultiplier\n\n      x = right.rect.x - markerThickness / 2\n      y = right.rect.y + offset\n      height = right.rect.h - offset * 2\n    } else if (left && !right) {\n      const targetHeight = left.rect.h\n      const offset = targetHeight * offsetMultiplier\n\n      x = left.rect.x + left.rect.w - markerThickness / 2\n      y = left.rect.y + offset\n      height = left.rect.h - offset * 2\n    }\n  } else {\n    const {bottom, top} = dragInsertPosition\n\n    if (bottom && top) {\n      const startX = Math.min(top.rect.x, bottom.rect.x)\n      const startY = top.rect.y + top.rect.h\n      const endY = bottom.rect.y\n      const targetWidth = Math.min(bottom.rect.w, top.rect.w)\n      const offset = targetWidth * offsetMultiplier\n\n      height = markerThickness\n\n      x = startX + offset\n      y = lerp(startY, endY, 0.5) - markerThickness / 2\n      width = Math.max(bottom.rect.w, top.rect.w) - offset * 2\n    } else if (bottom && !top) {\n      const targetWidth = bottom.rect.w\n      const offset = targetWidth * offsetMultiplier\n\n      x = bottom.rect.x + offset\n      y = bottom.rect.y - markerThickness / 2\n      width = bottom.rect.w - offset * 2\n      height = markerThickness\n    } else if (top && !bottom) {\n      const targetWidth = top.rect.w\n      const offset = targetWidth * offsetMultiplier\n\n      x = top.rect.x + offset\n      y = top.rect.y + top.rect.h - markerThickness / 2\n      width = top.rect.w - offset * 2\n      height = markerThickness\n    }\n  }\n\n  return (\n    <div\n      style={{\n        position: 'absolute',\n        width: `${width}px`,\n        height: `${height}px`,\n        transform: `translate(${x}px, ${y}px)`,\n        background: '#556bfc',\n        border: '2px solid white',\n        borderRadius: '999px',\n        zIndex: '999999',\n      }}\n    ></div>\n  )\n}\n","import {Card, usePrefersDark, useTheme_v2} from '@sanity/ui/_visual-editing'\nimport type {FunctionComponent} from 'react'\nimport {styled} from 'styled-components'\nimport type {DragSkeleton} from '../types'\n\nconst Root = styled.div<{\n  $width: number\n  $height: number\n  $offsetX: number\n  $offsetY: number\n  $scaleFactor: number\n}>`\n  --drag-preview-opacity: 0.98;\n  --drag-preview-skeleton-stroke: #ffffff;\n\n  @media (prefers-color-scheme: dark) {\n    --drag-preview-skeleton-stroke: #383d51;\n  }\n\n  position: fixed;\n  display: grid;\n  transform: ${({$scaleFactor, $width, $height}) =>\n    `translate(calc(var(--drag-preview-x) - ${$width / 2}px), calc(var(--drag-preview-y) - ${$height / 2}px)) scale(${$scaleFactor})`};\n  width: ${({$width}) => `${$width}px`};\n  height: ${({$height}) => `${$height}px`};\n  z-index: 9999999;\n  opacity: var(--drag-preview-opacity);\n  cursor: move;\n\n  .drag-preview-content-wrapper {\n    position: relative;\n    width: 100%;\n    height: 100%;\n    container-type: inline-size;\n  }\n\n  [data-ui='card'] {\n    position: relative;\n    width: 100%;\n    height: 100%;\n  }\n\n  .drag-preview-skeleton {\n    position: absolute;\n    inset: 0;\n\n    rect {\n      stroke: var(--drag-preview-skeleton-stroke);\n    }\n  }\n\n  .drag-preview-handle {\n    position: absolute;\n    top: 4cqmin;\n    left: 4cqmin;\n    width: 6cqmin;\n    fill: var(--drag-preview-handle-fill);\n  }\n`\n\nfunction clamp(number: number, min: number, max: number): number {\n  return number < min ? min : number > max ? max : number\n}\n\nfunction map(number: number, inMin: number, inMax: number, outMin: number, outMax: number): number {\n  const mapped: number = ((number - inMin) * (outMax - outMin)) / (inMax - inMin) + outMin\n  return clamp(mapped, outMin, outMax)\n}\n\nexport const OverlayDragPreview: FunctionComponent<{skeleton: DragSkeleton}> = ({skeleton}) => {\n  const maxSkeletonWidth = Math.min(skeleton.maxWidth, window.innerWidth / 2)\n  const scaleFactor = skeleton.w > maxSkeletonWidth ? maxSkeletonWidth / skeleton.w : 1\n\n  const offsetX = skeleton.offsetX * scaleFactor\n  const offsetY = skeleton.offsetY * scaleFactor\n\n  const prefersDark = usePrefersDark()\n  const theme = useTheme_v2()\n\n  const radius = theme.radius[~~map(skeleton.w, 0, 1920, 1, theme.radius.length - 2)]\n\n  const imageRects = skeleton.childRects.filter((r) => r.tagName === 'IMG')\n  const textRects = skeleton.childRects.filter((r) => r.tagName !== 'IMG')\n\n  return (\n    <Root\n      $width={skeleton.w}\n      $height={skeleton.h}\n      $offsetX={offsetX}\n      $offsetY={offsetY}\n      $scaleFactor={scaleFactor}\n    >\n      <Card\n        radius={radius}\n        shadow={4}\n        overflow=\"hidden\"\n        tone=\"transparent\"\n        scheme={prefersDark ? 'dark' : 'light'}\n      >\n        <div className=\"drag-preview-content-wrapper\">\n          <svg className=\"drag-preview-skeleton\" viewBox={`0 0 ${skeleton.w} ${skeleton.h}`}>\n            {/* render image rects first to account for background images overlapping text */}\n            {[...imageRects, ...textRects].map((r, i) => (\n              <rect\n                key={i}\n                x={r.x}\n                y={r.y}\n                width={r.w}\n                height={r.h}\n                fill={theme.color.skeleton.from}\n              ></rect>\n            ))}\n          </svg>\n        </div>\n      </Card>\n    </Root>\n  )\n}\n","import {ExpandIcon} from '@sanity/icons'\nimport {Card, Flex, Hotkeys, Text} from '@sanity/ui/_visual-editing'\nimport type {FunctionComponent} from 'react'\nimport {styled} from 'styled-components'\n\nconst Root = styled(Card)`\n  position: fixed;\n  bottom: 2rem;\n  left: 2rem;\n`\n\nexport const OverlayMinimapPrompt: FunctionComponent = () => {\n  return (\n    <Root padding={2} shadow={2} radius={2} style={{zIndex: '999999'}}>\n      <Flex align=\"center\" gap={2}>\n        <Hotkeys keys={['Shift']} />\n        <Text size={1}>Zoom Out</Text>\n        <ExpandIcon />\n      </Flex>\n    </Root>\n  )\n}\n","import type {VisualEditingControllerMsg} from '@sanity/presentation-comlink'\nimport type {ElementState, OverlayMsg} from '../types'\n\n/**\n * Reducer for managing element state from received channel messages\n * @internal\n */\nexport const elementsReducer = (\n  elements: ElementState[],\n  message: OverlayMsg | VisualEditingControllerMsg,\n): ElementState[] => {\n  const {type} = message\n  switch (type) {\n    case 'element/register': {\n      const elementExists = !!elements.find((e) => e.id === message.id)\n      if (elementExists) return elements\n\n      return [\n        ...elements,\n        {\n          id: message.id,\n          activated: false,\n          element: message.element,\n          focused: false,\n          hovered: false,\n          rect: message.rect,\n          sanity: message.sanity,\n          dragDisabled: message.dragDisabled,\n          targets: message.targets,\n          elementType: message.elementType,\n        },\n      ]\n    }\n    case 'element/activate':\n      return elements.map((e) => {\n        if (e.id === message.id) {\n          return {...e, activated: true}\n        }\n        return e\n      })\n    case 'element/update': {\n      return elements.map((e) => {\n        if (e.id === message.id) {\n          return {\n            ...e,\n            sanity: message.sanity,\n            rect: message.rect,\n            targets: message.targets,\n            elementType: message.elementType,\n          }\n        }\n        return e\n      })\n    }\n    case 'element/unregister':\n      return elements.filter((e) => e.id !== message.id)\n    case 'element/deactivate':\n      return elements.map((e) => {\n        if (e.id === message.id) {\n          return {...e, activated: false, hovered: false}\n        }\n        return e\n      })\n    case 'element/mouseenter':\n      return elements.map((e) => {\n        if (e.id === message.id) {\n          return {...e, rect: message.rect, hovered: true}\n        }\n        return {...e, hovered: false}\n      })\n    case 'element/mouseleave':\n      return elements.map((element) => {\n        if (element.id === message.id) {\n          return {...element, hovered: false}\n        }\n        return element\n      })\n    case 'element/updateRect':\n      return elements.map((element) => {\n        if (element.id === message.id) {\n          return {...element, rect: message.rect}\n        }\n        return element\n      })\n    case 'element/click':\n      return elements.map((e) => {\n        return {...e, focused: e.id === message.id && 'clicked'}\n      })\n    case 'overlay/reset-mouse-state':\n      return elements.map((e) => {\n        return {...e, focused: false, hovered: false}\n      })\n    case 'overlay/blur':\n      return elements.map((e) => {\n        return {...e, focused: false}\n      })\n    case 'presentation/blur':\n      return elements.map((e) => {\n        return {...e, focused: false}\n      })\n    case 'presentation/focus': {\n      // Before setting the focus state of each element, check to see if any\n      // element has gained focus from an `element/click` message. Presentation\n      // tool \"reflects\" these back as a `presentation/focus` message.\n      const clickedElement = elements.find((e) => e.focused === 'clicked')\n      return elements.map((e) => {\n        // We want to focus any element which matches the received id and path\n        const focused =\n          'path' in e.sanity &&\n          e.sanity.id === message.data.id &&\n          e.sanity.path === message.data.path\n\n        // If we have a 'clicked' element, and that element matches, it is a\n        // reflection, so we maintain the focus state\n        if (clickedElement && e === clickedElement && focused) {\n          return e\n        }\n\n        return {\n          ...e,\n          // Mark as a dupe if another matching item has been clicked to prevent\n          // scrolling, otherwise just set focus as a boolean\n          focused: focused && clickedElement ? 'duplicate' : focused,\n        }\n      })\n    }\n    default:\n      return elements\n  }\n}\n","import type {ClientPerspective} from '@sanity/client'\nimport type {SanityNode, VisualEditingControllerMsg} from '@sanity/presentation-comlink'\nimport type {\n  DragInsertPosition,\n  DragSkeleton,\n  ElementState,\n  OverlayMsg,\n  OverlayRect,\n} from '../types'\nimport {elementsReducer} from './elementsReducer'\n\nexport interface OverlayState {\n  contextMenu: {\n    node: SanityNode\n    position: {\n      x: number\n      y: number\n    }\n  } | null\n  focusPath: string\n  elements: ElementState[]\n  wasMaybeCollapsed: boolean\n  perspective: ClientPerspective\n  isDragging: boolean\n  dragInsertPosition: DragInsertPosition\n  dragSkeleton: DragSkeleton | null\n  dragShowMinimap: boolean\n  dragShowMinimapPrompt: boolean\n  dragMinimapTransition: boolean\n  dragGroupRect: OverlayRect | null\n}\n\nexport function overlayStateReducer(\n  state: OverlayState,\n  message: OverlayMsg | VisualEditingControllerMsg,\n): OverlayState {\n  const {type} = message\n  let {\n    contextMenu,\n    focusPath,\n    perspective,\n    isDragging,\n    dragInsertPosition,\n    dragShowMinimap,\n    dragShowMinimapPrompt,\n    dragSkeleton,\n    dragMinimapTransition,\n    dragGroupRect,\n  } = state\n  let wasMaybeCollapsed = false\n\n  if (type === 'presentation/focus') {\n    const prevFocusPath = state.focusPath\n\n    focusPath = message.data.path\n\n    if (prevFocusPath !== focusPath) {\n      wasMaybeCollapsed = prevFocusPath.slice(focusPath.length).startsWith('[')\n    }\n  }\n\n  if (type === 'presentation/perspective') {\n    perspective = message.data.perspective\n  }\n\n  if (type === 'element/contextmenu') {\n    if ('sanity' in message) {\n      contextMenu = {node: message.sanity, position: message.position}\n    } else {\n      contextMenu = null\n    }\n  }\n\n  if (\n    type === 'element/click' ||\n    type === 'element/mouseleave' ||\n    type === 'overlay/blur' ||\n    type === 'presentation/blur' ||\n    type === 'presentation/focus'\n  ) {\n    contextMenu = null\n  }\n\n  if (type === 'overlay/dragUpdateInsertPosition') {\n    dragInsertPosition = message.insertPosition\n  }\n\n  if (type === 'overlay/dragStart') {\n    isDragging = true\n  }\n\n  if (message.type === 'overlay/dragUpdateSkeleton') {\n    dragSkeleton = message.skeleton\n  }\n\n  if (type === 'overlay/dragEnd') {\n    isDragging = false\n  }\n\n  if (message.type === 'overlay/dragToggleMinimapPrompt') {\n    dragShowMinimapPrompt = message.display\n  }\n\n  if (type === 'overlay/dragStartMinimapTransition') {\n    dragMinimapTransition = true\n  }\n\n  if (type === 'overlay/dragEndMinimapTransition') {\n    dragMinimapTransition = false\n  }\n\n  if (type === 'overlay/dragUpdateGroupRect') {\n    dragGroupRect = message.groupRect\n  }\n\n  if (type === 'overlay/dragToggleMinimap') {\n    dragShowMinimap = message.display\n  }\n\n  return {\n    ...state,\n    contextMenu,\n    elements: elementsReducer(state.elements, message),\n    dragInsertPosition,\n    dragSkeleton,\n    dragGroupRect,\n    isDragging,\n    focusPath,\n    perspective,\n    wasMaybeCollapsed,\n    dragShowMinimap,\n    dragShowMinimapPrompt,\n    dragMinimapTransition,\n  }\n}\n","import {\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n  type FunctionComponent,\n  type PropsWithChildren,\n} from 'react'\nimport type {VisualEditingNode} from '../../types'\nimport {PreviewSnapshotsContext, type PreviewSnapshotsContextValue} from './PreviewSnapshotsContext'\n\nexport const PreviewSnapshotsProvider: FunctionComponent<\n  PropsWithChildren<{\n    comlink?: VisualEditingNode\n  }>\n> = function (props) {\n  const {comlink, children} = props\n\n  const [previewSnapshots, setPreviewSnapshots] = useState<PreviewSnapshotsContextValue>([])\n\n  const fetchPreviewSnapshots = useCallback(\n    async (signal: AbortSignal) => {\n      if (!comlink) return\n      try {\n        const response = await comlink.fetch('visual-editing/preview-snapshots', undefined, {\n          signal,\n          suppressWarnings: true,\n        })\n        setPreviewSnapshots(response.snapshots)\n      } catch {\n        // Fail silently as the app may be communicating with a version of\n        // Presentation that does not support this feature\n      }\n    },\n    [comlink],\n  )\n  useEffect(() => {\n    if (!comlink) return\n\n    const previewSapshotsFetch = new AbortController()\n    const unsub = comlink.onStatus(() => {\n      fetchPreviewSnapshots(previewSapshotsFetch.signal)\n    }, 'connected')\n\n    return () => {\n      previewSapshotsFetch.abort()\n      unsub()\n    }\n  }, [comlink, fetchPreviewSnapshots])\n\n  useEffect(() => {\n    return comlink?.on('presentation/preview-snapshots', (data) => {\n      setPreviewSnapshots(data.snapshots)\n    })\n  }, [comlink])\n\n  const context = useMemo<PreviewSnapshotsContextValue>(() => previewSnapshots, [previewSnapshots])\n  return (\n    <PreviewSnapshotsContext.Provider value={context}>{children}</PreviewSnapshotsContext.Provider>\n  )\n}\n","import type {\n  DocumentSchema,\n  ResolvedSchemaTypeMap,\n  SanityNode,\n  SanityStegaNode,\n  SchemaType,\n  TypeSchema,\n  UnresolvedPath,\n} from '@sanity/presentation-comlink'\nimport {\n  useCallback,\n  useDeferredValue,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n  type FunctionComponent,\n  type PropsWithChildren,\n} from 'react'\nimport type {\n  ElementState,\n  OverlayElementField,\n  OverlayElementParent,\n  VisualEditingNode,\n} from '../../types'\nimport {SchemaContext, type SchemaContextValue} from './SchemaContext'\n\nfunction isSanityNode(node: SanityNode | SanityStegaNode): node is SanityNode {\n  return 'path' in node\n}\n\nfunction isDocumentSchemaType(type: SchemaType): type is DocumentSchema {\n  return type.type === 'document'\n}\n\nfunction isTypeSchemaType(type: SchemaType): type is TypeSchema {\n  return type.type === 'type'\n}\n\nfunction popUnkeyedPathSegments(path: string): string {\n  return path\n    .split('.')\n    .toReversed()\n    .reduce((acc, part) => {\n      if (acc.length) return [part, ...acc]\n      if (part.includes('[_key==')) return [part]\n      return []\n    }, [] as string[])\n    .join('.')\n}\n\nfunction getPathsWithUnresolvedTypes(elements: ElementState[]): {id: string; path: string}[] {\n  return elements.reduce((acc, element) => {\n    const {sanity} = element\n    if (!('id' in sanity)) return acc\n    if (!sanity.path.includes('[_key==')) return acc\n    const path = popUnkeyedPathSegments(sanity.path)\n    if (!acc.find((item) => item.id === sanity.id && item.path === path)) {\n      acc.push({id: sanity.id, path})\n    }\n    return acc\n  }, [] as UnresolvedPath[])\n}\n\nexport const SchemaProvider: FunctionComponent<\n  PropsWithChildren<{\n    comlink?: VisualEditingNode\n    elements: ElementState[]\n  }>\n> = function (props) {\n  const {comlink, children, elements} = props\n\n  const [resolvedTypes, setResolvedTypes] = useState<ResolvedSchemaTypeMap>(new Map())\n\n  const [schema, setSchema] = useState<SchemaType[] | null>(null)\n\n  useEffect(() => {\n    if (!comlink) return\n\n    async function fetchSchema(signal: AbortSignal) {\n      if (!comlink) return\n      try {\n        const response = await comlink.fetch('visual-editing/schema', undefined, {\n          signal,\n          suppressWarnings: true,\n        })\n        setSchema(response.schema)\n      } catch {\n        // Fail silently as the app may be communicating with a version of\n        // Presentation that does not support this feature\n      }\n    }\n    const schemaFetch = new AbortController()\n    const unsub = comlink.onStatus(() => {\n      fetchSchema(schemaFetch.signal)\n    }, 'connected')\n\n    return () => {\n      schemaFetch.abort()\n      unsub()\n    }\n  }, [comlink])\n\n  const reportedPathsRef = useRef<UnresolvedPath[]>([])\n  const paths = getPathsWithUnresolvedTypes(useDeferredValue(elements))\n  const controllerRef = useRef<AbortController | null>(null)\n\n  useEffect(() => {\n    if (!paths.length || !comlink) return\n    // We report a list of paths that reference array items using a _key. We need\n    // to resolve the types of each of these items so we can map them to the\n    // correct schema types. One day CSM might include this data for us.\n    const reportPaths = async (paths: UnresolvedPath[], signal: AbortSignal) => {\n      const initialReportedPaths = reportedPathsRef.current\n      try {\n        reportedPathsRef.current = paths\n        const response = await comlink.fetch(\n          'visual-editing/schema-union-types',\n          {paths},\n          {signal, suppressWarnings: true},\n        )\n        if (signal.aborted) return\n        setResolvedTypes(response.types)\n        controllerRef.current = null\n      } catch {\n        // Fail silently as the app may be communicating with a version of\n        // Presentation that does not support this feature\n      }\n      if (signal.aborted) {\n        reportedPathsRef.current = initialReportedPaths\n      }\n    }\n\n    if (\n      paths.some(\n        (p) => !reportedPathsRef.current.find(({id, path}) => id === p.id && path === p.path),\n      )\n    ) {\n      // Abort any previous requests\n      controllerRef.current?.abort()\n      controllerRef.current = new AbortController()\n      reportPaths(paths, controllerRef.current.signal)\n    }\n  }, [comlink, paths])\n\n  const getType = useCallback(\n    <T extends 'document' | 'type' = 'document'>(\n      node: SanityNode | SanityStegaNode | string,\n      _type?: T,\n    ): T extends 'document' ? DocumentSchema | undefined : TypeSchema | undefined => {\n      const type = _type || 'document'\n      if (\n        !schema ||\n        (typeof node !== 'string' && (!isSanityNode(node) || !Array.isArray(schema)))\n      ) {\n        return undefined\n      }\n      const name = typeof node === 'string' ? node : node.type\n      const filter = type === 'document' ? isDocumentSchemaType : isTypeSchemaType\n      return schema\n        .filter(filter)\n        .find((schemaType) => schemaType.name === name) as T extends 'document'\n        ? DocumentSchema | undefined\n        : TypeSchema | undefined\n    },\n    [schema],\n  )\n\n  const getField = useCallback(\n    (\n      node: SanityNode | SanityStegaNode,\n    ): {\n      field: OverlayElementField\n      parent: OverlayElementParent\n    } => {\n      if (!isSanityNode(node)) {\n        return {\n          field: undefined,\n          parent: undefined,\n        }\n      }\n\n      const schemaType = getType(node)\n\n      if (!schemaType) {\n        return {\n          field: undefined,\n          parent: undefined,\n        }\n      }\n      function fieldFromPath(\n        schemaType: OverlayElementParent,\n        path: string[],\n        parent: OverlayElementParent,\n        prevPath: string[] = [],\n      ): {\n        field: OverlayElementField\n        parent: OverlayElementParent\n      } {\n        if (!schemaType) {\n          return {field: undefined, parent: undefined}\n        }\n\n        const [next, ...rest] = path\n\n        if ('fields' in schemaType) {\n          const objectField = schemaType.fields[next]\n          if (!objectField && 'rest' in schemaType) {\n            return fieldFromPath(schemaType.rest, path, schemaType, prevPath)\n          }\n          if (!rest.length) {\n            return {field: objectField, parent}\n          }\n          if (!objectField) {\n            throw new Error(\n              `[@sanity/visual-editing] No field could be resolved at path: \"${[...prevPath, ...path].join('.')}\"`,\n            )\n          }\n          return fieldFromPath(objectField.value, rest, schemaType, [...prevPath, next])\n        } else if (schemaType.type === 'array') {\n          return fieldFromPath(schemaType.of, path, schemaType, prevPath)\n        } else if (schemaType.type === 'arrayItem') {\n          if (!rest.length) return {field: schemaType, parent}\n          return fieldFromPath(schemaType.value, rest, schemaType, [...prevPath, next])\n        } else if (schemaType.type === 'union') {\n          const name = next.startsWith('[_key==')\n            ? resolvedTypes\n                ?.get((node as SanityNode).id)\n                ?.get([prevPath.join('.'), next].filter(Boolean).join(''))\n            : next\n          return fieldFromPath(\n            schemaType.of.find((item) => (item.type === 'unionOption' ? item.name === name : item)),\n            rest,\n            schemaType,\n            [...prevPath, next],\n          )\n        } else if (schemaType.type === 'unionOption') {\n          if (!next) return {field: schemaType, parent}\n          return fieldFromPath(schemaType.value, path, schemaType, prevPath)\n        } else if (schemaType.type === 'inline') {\n          const type = getType(schemaType.name, 'type')\n          return fieldFromPath((type as TypeSchema).value, path, schemaType, prevPath)\n        }\n        throw new Error(\n          `[@sanity/visual-editing] No field could be resolved at path: \"${[...prevPath, ...path].join('.')}\"`,\n        )\n      }\n\n      const nodePath = node.path.split('.').flatMap((part) => {\n        if (part.includes('[')) {\n          return part.split(/(\\[.+\\])/, 2)\n        }\n        return [part]\n      })\n\n      try {\n        return fieldFromPath(schemaType, nodePath, undefined)\n      } catch (e) {\n        // eslint-disable-next-line no-console\n        if (e instanceof Error) console.warn(e.message)\n        return {field: undefined, parent: undefined}\n      }\n    },\n    [getType, resolvedTypes],\n  )\n\n  const context = useMemo<SchemaContextValue>(() => ({getField, getType}), [getField, getType])\n\n  return <SchemaContext.Provider value={context}>{children}</SchemaContext.Provider>\n}\n","import type {SerializableObject} from '@sanity/presentation-comlink'\nimport {useEffect, useMemo, type FunctionComponent, type PropsWithChildren} from 'react'\nimport type {VisualEditingNode} from '../../types'\nimport {SharedStateContext} from './SharedStateContext'\n\nconst createStore = (initialState: SerializableObject) => {\n  let state = initialState\n  const getState = () => state\n  const listeners = new Set<() => void>()\n  const setState = (fn: (state: SerializableObject) => SerializableObject) => {\n    state = fn(state)\n    listeners.forEach((l) => l())\n  }\n  const subscribe = (listener: () => void) => {\n    listeners.add(listener)\n    return () => listeners.delete(listener)\n  }\n  return {getState, setState, subscribe}\n}\n\nconst store = createStore({})\n\nexport const SharedStateProvider: FunctionComponent<\n  PropsWithChildren<{\n    comlink?: VisualEditingNode\n  }>\n> = (props) => {\n  const {comlink, children} = props\n\n  useEffect(() => {\n    return comlink?.on('presentation/shared-state', (data) => {\n      if ('value' in data) {\n        store.setState((prev) => ({...prev, [data.key]: data.value}))\n      } else {\n        store.setState((prev) => {\n          return Object.fromEntries(Object.entries(prev).filter(([key]) => key !== data.key))\n        })\n      }\n    })\n  }, [comlink])\n\n  useEffect(() => {\n    async function fetch() {\n      const value = await comlink?.fetch('visual-editing/shared-state', undefined, {\n        suppressWarnings: true,\n      })\n      if (value) {\n        store.setState(() => value.state)\n      }\n    }\n    fetch().catch((reason) => {\n      // eslint-disable-next-line no-console\n      console.debug(reason)\n      // eslint-disable-next-line no-console\n      console.warn(\n        '[@sanity/visual-editing]: Failed to fetch shared state. Check your version of `sanity` is up-to-date',\n      )\n    })\n  }, [comlink])\n\n  const value = useMemo(() => ({comlink, store}), [comlink])\n\n  return <SharedStateContext.Provider value={value}>{children}</SharedStateContext.Provider>\n}\n","import {useCallback, type FunctionComponent, type PropsWithChildren} from 'react'\nimport type {VisualEditingNode} from '../../types'\nimport {events, TelemetryContext, type TelemetryContextValue} from './TelemetryContext'\n\nexport const TelemetryProvider: FunctionComponent<\n  PropsWithChildren<{comlink?: VisualEditingNode}>\n> = ({children, comlink}) => {\n  const log = useCallback<TelemetryContextValue>(\n    (name, data) => {\n      if (!comlink) return\n\n      const event = events[name]\n\n      if (!event) {\n        throw new Error(`Telemetry event: ${name} does not exist`)\n      } else {\n        comlink.post('visual-editing/telemetry-log', {event, data})\n      }\n    },\n    [comlink],\n  )\n\n  return <TelemetryContext.Provider value={log}>{children}</TelemetryContext.Provider>\n}\n","import {useEffect, useRef, type MutableRefObject} from 'react'\nimport {createOverlayController} from '../controller'\nimport {useOptimisticActorReady} from '../react/useOptimisticActor'\nimport type {OverlayController, OverlayEventHandler} from '../types'\n\n/**\n * Hook for using an overlay controller\n * @internal\n */\nexport function useController(\n  element: HTMLElement | null,\n  handler: OverlayEventHandler,\n  inFrame: boolean,\n  inPopUp: boolean,\n): MutableRefObject<OverlayController | undefined> {\n  const overlayController = useRef<OverlayController | undefined>(undefined)\n\n  const optimisticActorReady = useOptimisticActorReady()\n\n  useEffect(() => {\n    if (!element) return undefined\n\n    overlayController.current = createOverlayController({\n      handler,\n      overlayElement: element,\n      inFrame,\n      inPopUp,\n      optimisticActorReady,\n    })\n\n    return () => {\n      overlayController.current?.destroy()\n      overlayController.current = undefined\n    }\n  }, [element, handler, inFrame, inPopUp, optimisticActorReady])\n\n  return overlayController\n}\n","import type {VisualEditingControllerMsg} from '@sanity/presentation-comlink'\nimport {useEffect} from 'react'\nimport type {OverlayMsg, VisualEditingNode} from '../types'\n\nexport function usePerspectiveSync(\n  comlink: VisualEditingNode | undefined,\n  dispatch: (value: OverlayMsg | VisualEditingControllerMsg) => void,\n): void {\n  useEffect(() => {\n    const controller = new AbortController()\n    comlink\n      ?.fetch('visual-editing/fetch-perspective', undefined, {\n        signal: controller.signal,\n        suppressWarnings: true,\n      })\n      .then((data) => {\n        dispatch({type: 'presentation/perspective', data})\n      })\n      .catch(() => {\n        // Fail silently as the app may be communicating with a version of\n        // Presentation that does not support this feature\n      })\n\n    const unsub = comlink?.on('presentation/perspective', (data) => {\n      dispatch({type: 'presentation/perspective', data})\n    })\n\n    return () => {\n      unsub?.()\n      controller.abort()\n    }\n  }, [comlink, dispatch])\n}\n","import type {ClientPerspective, ContentSourceMapDocuments} from '@sanity/client'\nimport {useCallback, useEffect, useRef} from 'react'\nimport type {ElementState, SanityNode, VisualEditingNode} from '../types'\n\nfunction isEqualSets(a: Set<string>, b: Set<string>) {\n  if (a === b) return true\n  if (a.size !== b.size) return false\n  for (const value of a) if (!b.has(value)) return false\n  return true\n}\n\n/**\n * Hook for reporting in use documents to Presentation\n * @internal\n */\nexport function useReportDocuments(\n  comlink: VisualEditingNode | undefined,\n  elements: ElementState[],\n  perspective: ClientPerspective,\n): void {\n  const lastReported = useRef<\n    | {\n        nodeIds: Set<string>\n        perspective: ClientPerspective\n      }\n    | undefined\n  >(undefined)\n\n  const reportDocuments = useCallback(\n    (documents: ContentSourceMapDocuments, perspective: ClientPerspective) => {\n      comlink?.post('visual-editing/documents', {\n        documents,\n        perspective,\n      })\n    },\n    [comlink],\n  )\n\n  useEffect(() => {\n    // Report only nodes of type `SanityNode`. Untransformed `SanityStegaNode`\n    // nodes without an `id`, are not reported as they will not contain the\n    // necessary document data.\n    const nodes = elements\n      .map((e) => {\n        const {sanity} = e\n        if (!sanity || !('id' in sanity)) return null\n        return sanity\n      })\n      .filter((s) => !!s) as SanityNode[]\n\n    const nodeIds = new Set<string>(nodes.map((e) => e.id))\n    // Report if:\n    // - Documents not yet reported\n    // - Document IDs changed\n    // - Perspective changed\n    if (\n      !lastReported.current ||\n      !isEqualSets(nodeIds, lastReported.current.nodeIds) ||\n      perspective !== lastReported.current.perspective\n    ) {\n      const documentsOnPage: ContentSourceMapDocuments = Array.from(nodeIds).map((_id) => {\n        const node = nodes.find((node) => node.id === _id)!\n        const {type, projectId: _projectId, dataset: _dataset} = node\n        return _projectId && _dataset\n          ? {_id, _type: type!, _projectId, _dataset}\n          : {_id, _type: type!}\n      })\n      lastReported.current = {nodeIds, perspective}\n      reportDocuments(documentsOnPage, perspective)\n    }\n  }, [elements, perspective, reportDocuments])\n}\n","import type {ClientPerspective} from '@sanity/client'\nimport {getDraftId, getPublishedId} from '@sanity/client/csm'\nimport type {Status} from '@sanity/comlink'\nimport {type VisualEditingControllerMsg} from '@sanity/presentation-comlink'\nimport {\n  isHTMLAnchorElement,\n  isHTMLElement,\n  LayerProvider,\n  PortalProvider,\n  studioTheme,\n  ThemeProvider,\n  usePrefersDark,\n} from '@sanity/ui/_visual-editing'\nimport {\n  useCallback,\n  useEffect,\n  useMemo,\n  useReducer,\n  useRef,\n  useState,\n  type FunctionComponent,\n} from 'react'\nimport {styled} from 'styled-components'\nimport {useOptimisticActor, useOptimisticActorReady} from '../react/useOptimisticActor'\nimport type {\n  OverlayComponentResolver,\n  OverlayEventHandler,\n  OverlayMsg,\n  OverlayPluginDefinition,\n  VisualEditingNode,\n} from '../types'\nimport {sanityNodesExistInSameArray} from '../util/findSanityNodes'\nimport {useDragEndEvents} from '../util/useDragEvents'\nimport {ContextMenu} from './context-menu/ContextMenu'\nimport {ElementOverlay} from './ElementOverlay'\nimport {OverlayDragGroupRect} from './OverlayDragGroupRect'\nimport {OverlayDragInsertMarker} from './OverlayDragInsertMarker'\nimport {OverlayDragPreview} from './OverlayDragPreview'\nimport {OverlayMinimapPrompt} from './OverlayMinimapPrompt'\nimport {overlayStateReducer} from './overlayStateReducer'\nimport {PreviewSnapshotsProvider} from './preview/PreviewSnapshotsProvider'\nimport {SchemaProvider} from './schema/SchemaProvider'\nimport {SharedStateProvider} from './shared-state/SharedStateProvider'\nimport {TelemetryProvider} from './telemetry/TelemetryProvider'\nimport {useTelemetry} from './telemetry/useTelemetry'\nimport {useController} from './useController'\nimport {usePerspectiveSync} from './usePerspectiveSync'\nimport {useReportDocuments} from './useReportDocuments'\n\nconst Root = styled.div<{\n  $zIndex?: string | number\n}>`\n  background-color: transparent;\n  direction: ltr;\n  inset: 0;\n  pointer-events: none;\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  z-index: ${({$zIndex}) => $zIndex ?? '9999999'};\n`\n\nfunction raf2(fn: () => void) {\n  let r0: number | undefined = undefined\n  let r1: number | undefined = undefined\n\n  r0 = requestAnimationFrame(() => {\n    r1 = requestAnimationFrame(fn)\n  })\n\n  return () => {\n    if (r0 !== undefined) cancelAnimationFrame(r0)\n    if (r1 !== undefined) cancelAnimationFrame(r1)\n  }\n}\n\nconst DocumentReporter: FunctionComponent<{\n  documentIds: string[]\n  perspective: ClientPerspective\n}> = (props) => {\n  const {documentIds} = props\n  const [uniqueIds, setUniqueIds] = useState<string[]>([])\n\n  useEffect(() => {\n    setUniqueIds((prev) => {\n      const next = Array.from(new Set(documentIds))\n      return prev.length === next.length &&\n        prev.reduce((acc, prevId) => acc.filter((id) => id !== prevId), next)?.length === 0\n        ? prev\n        : next\n    })\n  }, [documentIds])\n  const actor = useOptimisticActor()\n\n  useEffect(() => {\n    for (const id of uniqueIds) {\n      actor.send({type: 'observe', documentId: getDraftId(id)})\n      actor.send({type: 'observe', documentId: getPublishedId(id)})\n    }\n    return () => {\n      for (const id of uniqueIds) {\n        actor.send({type: 'unobserve', documentId: getDraftId(id)})\n        actor.send({type: 'unobserve', documentId: getPublishedId(id)})\n      }\n    }\n  }, [actor, uniqueIds])\n\n  return null\n}\n\nconst OverlaysController: FunctionComponent<{\n  comlink?: VisualEditingNode\n  dispatch: (value: OverlayMsg | VisualEditingControllerMsg) => void\n  inFrame: boolean\n  inPopUp: boolean\n  onDrag: (x: number, y: number) => void\n  overlayEnabled: boolean\n  rootElement: HTMLElement | null\n}> = (props) => {\n  const {comlink, dispatch, inFrame, inPopUp, onDrag, overlayEnabled, rootElement} = props\n  const {dispatchDragEndEvent} = useDragEndEvents()\n  const sendTelemetry = useTelemetry()\n\n  const overlayEventHandler: OverlayEventHandler = useCallback(\n    (message) => {\n      if (message.type === 'element/click') {\n        const {sanity} = message\n        comlink?.post('visual-editing/focus', sanity)\n\n        sendTelemetry('Visual Editing Overlay Clicked', null)\n      } else if (message.type === 'overlay/activate') {\n        comlink?.post('visual-editing/toggle', {enabled: true})\n      } else if (message.type === 'overlay/deactivate') {\n        comlink?.post('visual-editing/toggle', {enabled: false})\n      } else if (message.type === 'overlay/dragEnd') {\n        const {insertPosition, target, dragGroup, flow, preventInsertDefault} = message\n\n        dispatchDragEndEvent({insertPosition, target, dragGroup, flow, preventInsertDefault})\n\n        if (insertPosition) {\n          sendTelemetry('Visual Editing Drag Sequence Completed', null)\n        }\n      } else if (message.type === 'overlay/dragUpdateCursorPosition') {\n        onDrag(message.x, message.y)\n\n        return\n      } else if (message.type === 'overlay/dragToggleMinimap' && message.display === true) {\n        sendTelemetry('Visual Editing Drag Minimap Enabled', null)\n      } else if (message.type === 'overlay/setCursor') {\n        const {element, cursor} = message\n\n        if (cursor) {\n          element.style.cursor = cursor\n        } else {\n          element.style.removeProperty('cursor')\n        }\n      }\n\n      dispatch(message)\n    },\n    [comlink, dispatch, dispatchDragEndEvent, onDrag, sendTelemetry],\n  )\n\n  const controller = useController(rootElement, overlayEventHandler, inFrame, inPopUp)\n\n  useEffect(() => {\n    if (overlayEnabled) {\n      controller.current?.activate()\n    } else {\n      controller.current?.deactivate()\n    }\n  }, [controller, overlayEnabled])\n\n  return null\n}\n\n/**\n * @internal\n */\nexport const Overlays: FunctionComponent<{\n  comlink?: VisualEditingNode\n  comlinkStatus?: Status\n  componentResolver?: OverlayComponentResolver\n  plugins?: OverlayPluginDefinition[]\n  inFrame: boolean\n  inPopUp: boolean\n  zIndex?: string | number\n}> = (props) => {\n  const {\n    comlink,\n    comlinkStatus,\n    componentResolver: _componentResolver,\n    inFrame,\n    inPopUp,\n    zIndex,\n  } = props\n\n  const prefersDark = usePrefersDark()\n\n  const [\n    {\n      contextMenu,\n      dragInsertPosition,\n      dragShowMinimap,\n      dragShowMinimapPrompt,\n      dragSkeleton,\n      elements,\n      isDragging,\n      perspective,\n      wasMaybeCollapsed,\n      dragMinimapTransition,\n      dragGroupRect,\n    },\n    dispatch,\n  ] = useReducer(overlayStateReducer, {\n    contextMenu: null,\n    dragInsertPosition: null,\n    dragShowMinimap: false,\n    dragShowMinimapPrompt: false,\n    dragSkeleton: null,\n    elements: [],\n    focusPath: '',\n    isDragging: false,\n    perspective: 'published',\n    wasMaybeCollapsed: false,\n    dragMinimapTransition: false,\n    dragGroupRect: null,\n  })\n  const [rootElement, setRootElement] = useState<HTMLElement | null>(null)\n  const [overlayEnabled, setOverlayEnabled] = useState(true)\n\n  useEffect(() => {\n    const unsubs = [\n      comlink?.on('presentation/focus', (data) => {\n        dispatch({type: 'presentation/focus', data})\n      }),\n      comlink?.on('presentation/blur', (data) => {\n        dispatch({type: 'presentation/blur', data})\n      }),\n      comlink?.on('presentation/toggle-overlay', () => {\n        setOverlayEnabled((enabled) => !enabled)\n      }),\n    ].filter(Boolean)\n\n    return () => unsubs.forEach((unsub) => unsub!())\n  }, [comlink])\n\n  usePerspectiveSync(comlink, dispatch)\n\n  useReportDocuments(comlink, elements, perspective)\n\n  const updateDragPreviewCustomProps = useCallback(\n    (x: number, y: number) => {\n      if (!rootElement) return\n\n      rootElement.style.setProperty('--drag-preview-x', `${x}px`)\n      rootElement.style.setProperty('--drag-preview-y', `${y - window.scrollY}px`)\n    },\n    [rootElement],\n  )\n\n  useEffect(() => {\n    const handleClick = (event: MouseEvent) => {\n      const target = event.target\n\n      // We only need to modify the default behavior if the target is a link\n      const targetsLink = Boolean(\n        isHTMLAnchorElement(target) || (isHTMLElement(target) && target.closest('a')),\n      )\n\n      if (targetsLink && event.altKey) {\n        event.preventDefault()\n        event.stopPropagation()\n        const newEvent = new MouseEvent(event.type, {\n          ...event,\n          altKey: false,\n          bubbles: true,\n          cancelable: true,\n        })\n        event.target?.dispatchEvent(newEvent)\n      }\n    }\n\n    let altPressed = false\n\n    const handleKeyUp = (e: KeyboardEvent) => {\n      if (isAltKey(e) && altPressed) {\n        altPressed = false\n        setOverlayEnabled((enabled) => !enabled)\n      }\n    }\n\n    const handleKeydown = (e: KeyboardEvent) => {\n      if (isAltKey(e)) {\n        // Don't handle Alt if it's part of a complex shortcut\n        if (e.ctrlKey || e.metaKey || e.shiftKey) {\n          return\n        }\n\n        if (!altPressed) {\n          altPressed = true\n          setOverlayEnabled((enabled) => !enabled)\n        }\n      }\n\n      if (isHotkey(['mod', '\\\\'], e)) {\n        setOverlayEnabled((enabled) => !enabled)\n      }\n    }\n\n    // Reset Alt state if window loses focus\n    const handleWindowBlur = () => {\n      if (altPressed) {\n        altPressed = false\n        setOverlayEnabled((enabled) => !enabled) // Toggle back\n      }\n    }\n\n    window.addEventListener('click', handleClick)\n    window.addEventListener('keydown', handleKeydown)\n    window.addEventListener('keyup', handleKeyUp)\n    window.addEventListener('blur', handleWindowBlur)\n\n    return () => {\n      window.removeEventListener('click', handleClick)\n      window.removeEventListener('keydown', handleKeydown)\n      window.removeEventListener('keyup', handleKeyUp)\n      window.removeEventListener('blur', handleWindowBlur)\n    }\n  }, [setOverlayEnabled])\n\n  const [overlaysFlash, setOverlaysFlash] = useState(false)\n  const [fadingOut, setFadingOut] = useState(false)\n  const fadeOutTimeoutRef = useRef<NodeJS.Timeout | undefined>(undefined)\n\n  // Flash overlays when they are enabled\n  useEffect(() => {\n    if (overlayEnabled) {\n      return raf2(() => {\n        setOverlaysFlash(true)\n        raf2(() => {\n          setFadingOut(true)\n          fadeOutTimeoutRef.current = setTimeout(() => {\n            setFadingOut(false)\n            setOverlaysFlash(false)\n          }, 1500)\n        })\n      })\n    } else if (fadeOutTimeoutRef.current) {\n      clearTimeout(fadeOutTimeoutRef.current)\n      setOverlaysFlash(false)\n      setFadingOut(false)\n    }\n\n    return\n  }, [overlayEnabled])\n\n  const documentIds = useMemo(() => {\n    return elements.flatMap((element) => ('id' in element.sanity ? [element.sanity.id] : []))\n  }, [elements])\n\n  const closeContextMenu = useCallback(() => {\n    dispatch({type: 'overlay/blur'})\n  }, [])\n\n  const optimisticActorReady = useOptimisticActorReady()\n\n  const componentResolver = useMemo(() => {\n    return optimisticActorReady ? _componentResolver : undefined\n  }, [_componentResolver, optimisticActorReady])\n\n  const elementsToRender = useMemo(() => {\n    if (((inFrame || inPopUp) && comlinkStatus !== 'connected') || isDragging) {\n      return []\n    }\n\n    return elements\n      .filter((e) => e.activated || e.focused)\n      .map(({id, element, focused, hovered, rect, sanity, dragDisabled, targets, elementType}) => {\n        const draggable =\n          !dragDisabled &&\n          !!element.getAttribute('data-sanity') &&\n          optimisticActorReady &&\n          elements.some((e) =>\n            'id' in e.sanity && 'id' in sanity\n              ? sanityNodesExistInSameArray(e.sanity, sanity) && e.sanity.path !== sanity.path\n              : false,\n          )\n\n        return (\n          <ElementOverlay\n            comlink={comlink}\n            componentResolver={componentResolver}\n            plugins={props.plugins}\n            element={element}\n            enableScrollIntoView={!isDragging && !dragMinimapTransition && !dragShowMinimap}\n            key={id}\n            id={id}\n            focused={focused}\n            hovered={hovered}\n            node={sanity}\n            rect={rect}\n            // When inside a popup window we want actions to show up on hover, but iframes should hide them\n            showActions={!inFrame}\n            draggable={draggable}\n            isDragging={isDragging || dragMinimapTransition}\n            wasMaybeCollapsed={focused && wasMaybeCollapsed}\n            targets={targets}\n            elementType={elementType}\n          />\n        )\n      })\n  }, [\n    componentResolver,\n    props.plugins,\n    dragMinimapTransition,\n    dragShowMinimap,\n    elements,\n    inFrame,\n    inPopUp,\n    isDragging,\n    optimisticActorReady,\n    comlink,\n    comlinkStatus,\n    wasMaybeCollapsed,\n  ])\n\n  return (\n    <TelemetryProvider comlink={comlink}>\n      <ThemeProvider scheme={prefersDark ? 'dark' : 'light'} theme={studioTheme} tone=\"transparent\">\n        <LayerProvider>\n          <PortalProvider element={rootElement}>\n            <SchemaProvider comlink={comlink} elements={elements}>\n              <PreviewSnapshotsProvider comlink={comlink}>\n                <SharedStateProvider comlink={comlink}>\n                  <Root\n                    data-fading-out={fadingOut ? '' : undefined}\n                    data-overlays={overlaysFlash ? '' : undefined}\n                    ref={setRootElement}\n                    $zIndex={zIndex}\n                  >\n                    <DocumentReporter documentIds={documentIds} perspective={perspective} />\n                    <OverlaysController\n                      comlink={comlink}\n                      dispatch={dispatch}\n                      inFrame={inFrame}\n                      inPopUp={inPopUp}\n                      onDrag={updateDragPreviewCustomProps}\n                      overlayEnabled={overlayEnabled}\n                      rootElement={rootElement}\n                    />\n                    {contextMenu && <ContextMenu {...contextMenu} onDismiss={closeContextMenu} />}\n                    {elementsToRender}\n\n                    {isDragging && !dragMinimapTransition && (\n                      <>\n                        {dragInsertPosition && (\n                          <OverlayDragInsertMarker dragInsertPosition={dragInsertPosition} />\n                        )}\n                        {dragShowMinimapPrompt && <OverlayMinimapPrompt />}\n                        {dragGroupRect && <OverlayDragGroupRect dragGroupRect={dragGroupRect} />}\n                      </>\n                    )}\n                    {isDragging && dragSkeleton && <OverlayDragPreview skeleton={dragSkeleton} />}\n                  </Root>\n                </SharedStateProvider>\n              </PreviewSnapshotsProvider>\n            </SchemaProvider>\n          </PortalProvider>\n        </LayerProvider>\n      </ThemeProvider>\n    </TelemetryProvider>\n  )\n}\n\nconst IS_MAC =\n  typeof window != 'undefined' && /Mac|iPod|iPhone|iPad/.test(window.navigator.platform)\n\nconst MODIFIERS: Record<string, 'altKey' | 'ctrlKey' | 'metaKey' | 'shiftKey'> = {\n  alt: 'altKey',\n  ctrl: 'ctrlKey',\n  mod: IS_MAC ? 'metaKey' : 'ctrlKey',\n  shift: 'shiftKey',\n}\nfunction isHotkey(keys: string[], event: KeyboardEvent): boolean {\n  return keys.every((key) => {\n    if (MODIFIERS[key]) {\n      return event[MODIFIERS[key]]\n    }\n    return event.key === key.toUpperCase()\n  })\n}\nfunction isAltKey(event: KeyboardEvent): boolean {\n  return event.key === 'Alt'\n}\n","import {useEffect, useRef, type FunctionComponent} from 'react'\nimport type {VisualEditingNode, VisualEditingOptions} from '../types'\n\n/**\n * @internal\n */\nexport const Refresh: FunctionComponent<\n  {\n    comlink: VisualEditingNode\n  } & Required<Pick<VisualEditingOptions, 'refresh'>>\n> = (props) => {\n  const {comlink, refresh} = props\n\n  const manualRefreshRef = useRef(0)\n  const mutationRefreshRef = useRef(0)\n\n  useEffect(\n    () =>\n      comlink.on('presentation/refresh', (data) => {\n        if (data.source === 'manual') {\n          clearTimeout(manualRefreshRef.current)\n          const promise = refresh(data)\n          if (promise === false) return\n          comlink.post('visual-editing/refreshing', data)\n          let timedOut = false\n          manualRefreshRef.current = window.setTimeout(() => {\n            comlink.post('visual-editing/refreshed', data)\n            timedOut = true\n          }, 3000)\n          promise?.finally?.(() => {\n            if (timedOut) return\n            clearTimeout(manualRefreshRef.current)\n            comlink.post('visual-editing/refreshed', data)\n          })\n        } else if (data.source === 'mutation') {\n          clearTimeout(mutationRefreshRef.current)\n          const promise = refresh(data)\n          if (promise === false) return\n          comlink.post('visual-editing/refreshing', data)\n          // Send an additional refresh to account for Content Lake eventual consistency\n          mutationRefreshRef.current = window.setTimeout(() => {\n            const promise = refresh(data)\n            if (promise === false) return\n            comlink.post('visual-editing/refreshing', data)\n            // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n            promise?.finally?.(() => {\n              comlink.post('visual-editing/refreshed', data)\n            }) || comlink.post('visual-editing/refreshed', data)\n          }, 1000)\n          // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n          promise?.finally?.(() => {\n            comlink.post('visual-editing/refreshed', data)\n          }) || comlink.post('visual-editing/refreshed', data)\n        }\n      }),\n    [comlink, refresh],\n  )\n\n  return null\n}\n","import {createNode, createNodeMachine, type Status} from '@sanity/comlink'\nimport {\n  createCompatibilityActors,\n  type VisualEditingControllerMsg,\n  type VisualEditingNodeMsg,\n} from '@sanity/presentation-comlink'\nimport {useEffect, useState} from 'react'\nimport type {VisualEditingNode} from '../types'\n\n/**\n * Hook for maintaining a channel between overlays and the presentation tool\n * @internal\n */\nexport function useComlink(active = true): [VisualEditingNode | undefined, Status] {\n  const [node, setNode] = useState<VisualEditingNode>()\n  const [status, setStatus] = useState<Status>('idle')\n\n  useEffect(() => {\n    if (!active) return\n    const instance = createNode<VisualEditingNodeMsg, VisualEditingControllerMsg>(\n      {\n        name: 'visual-editing',\n        connectTo: 'presentation',\n      },\n      createNodeMachine<VisualEditingNodeMsg, VisualEditingControllerMsg>().provide({\n        actors: createCompatibilityActors<VisualEditingNodeMsg>(),\n      }),\n    )\n    const unsub = instance.onStatus(() => setStatus('connected'), 'connected')\n\n    setNode(instance)\n    const stop = instance.start()\n\n    return () => {\n      unsub()\n      stop()\n      setNode(undefined)\n    }\n  }, [active])\n\n  /**\n   * Handle reporting of status to the presentation tool in case of connection failure due to misconfigured URL origin\n   */\n  useEffect(() => {\n    /**\n     * We only need to report status if the node is not connected\n     */\n    if (status === 'connected') return\n\n    const controller = new AbortController()\n    window.addEventListener(\n      'message',\n      ({data, origin}: MessageEvent<unknown>) => {\n        /**\n         * Detect if Presentation is asking if Visual Editing is here but misconfigured\n         * @TODO this should probably be a feature built into `comlink`, as it's a common problem for apps dealing with iframes.\n         */\n        if (\n          data &&\n          typeof data === 'object' &&\n          'domain' in data &&\n          data.domain === 'sanity/channels' &&\n          'from' in data &&\n          data.from === 'presentation' &&\n          'type' in data &&\n          data.type === 'presentation/status'\n        ) {\n          /**\n           * We only send this message to the parent window, which supports Presentation loading the page in an iframe.\n           * This avoids letting other iframes on the page, or other openers, from getting a response.\n           */\n          window.parent.postMessage(\n            {\n              domain: 'sanity/channels',\n              type: 'visual-editing/status',\n              data: {origin: location.origin},\n            },\n            /**\n             * Using the same origin ensures that if the parent window don't have the same origin the message won't be sent.\n             * This grants some protection against spoofing, as malicious iframes can't easily call this event and trigger the Presentation Tool to think there's a failing state.\n             */\n            origin,\n          )\n        }\n      },\n      {signal: controller.signal},\n    )\n    return () => {\n      controller.abort()\n    }\n  }, [status])\n\n  return [node, status]\n}\n","import {type ListenEvent} from '@sanity/client'\nimport {merge, ReplaySubject, Subject, type Observable, type ObservedValueOf} from 'rxjs'\nimport type {VisualEditingNode} from '../../types'\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype SharedListenEvent = ListenEvent<Record<string, any>>\n\n/**\n * Creates a single, shared, listener EventSource that strems remote mutations, and notifies when it's online (welcome), offline (reconnect).\n */\nexport function createSharedListener(comlink: VisualEditingNode): Observable<SharedListenEvent> {\n  // Welcome events could be received before the listener has been subscribed\n  // to. Using a ReplaySubject will ensure the welcome event is re-emitted when\n  // a new subscriber arrives.\n  const incomingConnection$ = new ReplaySubject<SharedListenEvent>(1)\n  const incomingMutations$ = new Subject<SharedListenEvent>()\n\n  comlink\n    .fetch('visual-editing/snapshot-welcome', undefined, {suppressWarnings: true})\n    .then((data) => {\n      incomingConnection$.next(data.event)\n    })\n    .catch(() => {\n      // Fail silently as the app may be communicating with a version of\n      // Presentation that does not support this feature\n    })\n\n  comlink.on('presentation/snapshot-event', (data) => {\n    // Welcome events are still emitted by Presentation for backwards\n    // compatibility. We don't need them anymore as we explicitly fetch the\n    // welcome event, so filter them out here.\n    if (data.event.type === 'reconnect') {\n      incomingConnection$.next(data.event)\n    }\n    if (data.event.type === 'mutation') {\n      incomingMutations$.next(data.event)\n    }\n  })\n\n  return merge(incomingConnection$, incomingMutations$)\n}\n\nexport type SharedListenerEvents = ObservedValueOf<ReturnType<typeof createSharedListener>>\n","/* eslint-disable @typescript-eslint/no-empty-function */\nimport {useEffect} from 'react'\nimport {createActor} from 'xstate'\nimport {setActor} from '../optimistic/context'\nimport {createSharedListener} from '../optimistic/state/createSharedListener'\nimport {createDatasetMutator} from '../optimistic/state/datasetMutator'\nimport type {VisualEditingNode} from '../types'\n\n/**\n * Hook for maintaining a channel between overlays and the presentation tool\n * @internal\n */\nexport function useDatasetMutator(comlink: VisualEditingNode | undefined): void {\n  useEffect(() => {\n    if (!comlink) return\n    const listener = createSharedListener(comlink)\n    const datasetMutator = createDatasetMutator(comlink)\n    const mutator = createActor(datasetMutator, {\n      // @ts-expect-error @todo\n      input: {client: {withConfig: () => {}}, sharedListener: listener},\n    })\n\n    mutator.start()\n\n    // Fetch features to determine if optimistic updates are supported\n    const featuresFetch = new AbortController()\n    comlink\n      .fetch('visual-editing/features', undefined, {\n        signal: featuresFetch.signal,\n        suppressWarnings: true,\n      })\n      .then((data) => {\n        if (data.features['optimistic']) {\n          setActor(mutator)\n        }\n      })\n      .catch(() => {\n        // eslint-disable-next-line no-console\n        console.warn(\n          '[@sanity/visual-editing] Package version mismatch detected: Please update your Sanity studio to prevent potential compatibility issues.',\n        )\n      })\n\n    return () => {\n      mutator.stop()\n      featuresFetch.abort()\n    }\n  }, [comlink])\n}\n","import {isMaybePreviewIframe, isMaybePreviewWindow} from '@sanity/presentation-comlink'\nimport {useEffect, useState} from 'react'\nimport {createPortal} from 'react-dom'\nimport type {VisualEditingOptions} from '../types'\nimport {History} from './History'\nimport {Meta} from './Meta'\nimport {Overlays} from './Overlays'\nimport {Refresh} from './Refresh'\nimport {useComlink} from './useComlink'\nimport {useDatasetMutator} from './useDatasetMutator'\n\n/**\n * @public\n */\nexport const VisualEditing = (props: VisualEditingOptions & {portal: boolean}): React.ReactNode => {\n  const {components, plugins, history, portal = true, refresh, zIndex} = props\n\n  const [inFrame, setInFrame] = useState<boolean | null>(null)\n  const [inPopUp, setInPopUp] = useState<boolean | null>(null)\n  useEffect(() => {\n    setInFrame(isMaybePreviewIframe())\n    setInPopUp(isMaybePreviewWindow())\n  }, [])\n\n  const [portalElement, setPortalElement] = useState<HTMLElement | null>(null)\n  useEffect(() => {\n    if (portal === false) return undefined\n    const node = document.createElement('sanity-visual-editing')\n    document.documentElement.appendChild(node)\n    setPortalElement(node)\n    return () => {\n      setPortalElement(null)\n      if (document.documentElement.contains(node)) {\n        document.documentElement.removeChild(node)\n      }\n    }\n  }, [portal])\n\n  const [comlink, comlinkStatus] = useComlink(inFrame === true || inPopUp === true)\n  useDatasetMutator(comlinkStatus === 'connected' ? comlink : undefined)\n\n  const children = (\n    <>\n      {inFrame !== null && inPopUp !== null && (\n        <Overlays\n          comlink={comlink}\n          comlinkStatus={comlinkStatus}\n          componentResolver={components}\n          plugins={plugins}\n          inFrame={inFrame}\n          inPopUp={inPopUp}\n          zIndex={zIndex}\n        />\n      )}\n      {comlink && (\n        <>\n          <History comlink={comlink} history={history} />\n          <Meta comlink={comlink} />\n          {refresh && <Refresh comlink={comlink} refresh={refresh} />}\n        </>\n      )}\n    </>\n  )\n\n  if (portal === false || !portalElement) return children\n\n  return createPortal(children, portalElement)\n}\nVisualEditing.displayName = 'VisualEditing'\n"],"names":["History","props","$","_c","comlink","history","t0","t1","on","data","update","useEffect","t2","t3","subscribe","title","document","post","Meta","sendMeta","observer","MutationObserver","mutation","target","nodeName","observe","head","subtree","characterData","childList","disconnect","getReferenceNodeAndInsertPosition","position","top","right","bottom","left","node","sanity","useDragEndEvents","getDocument","useDocuments","handler","e","insertPosition","preventInsertDefault","detail","reference","doc","id","key","targetKey","hasExplicitKey","getArrayItemKeyAndParentPath","path","arrayPath","referenceItemKey","patch","getSnapshot","snapshot","elementValue","getFromPath","at","remove","_key","insert","window","addEventListener","removeEventListener","dispatchDragEndEvent","_temp","Symbol","for","event","customEvent","CustomEvent","cancelable","dispatchEvent","SchemaContext","createContext","useSchema","context","useContext","Error","getArrayRemoveAction","type","getArrayRemovePatches","getArrayInsertAction","insertType","getArrayInsertPatches","getDuplicateAction","getArrayDuplicatePatches","getContextMenuItems","field","parent","getContextMenuArrayItems","getContextMenuUnionItems","Promise","resolve","getDuplicateItem","label","icon","CopyIcon","action","telemetryEvent","getRemoveItems","RemoveIcon","getMoveItems","withDivider","items","groupItems","moveUpPatches","moveDownPatches","moveFirstPatches","moveLastPatches","all","getArrayMovePatches","length","push","PublishIcon","ArrowUpIcon","ArrowDownIcon","UnpublishIcon","SortIcon","InsertAboveIcon","name","InsertBelowIcon","InsertMenuWrapper","width","onSelect","boundaryElement","arrow","constrainSize","floatingBoundary","padding","placement","fallbackPlacements","preventOverflow","__unstable_margins","t4","options","insertMenu","views","some","view","undefined","component","sendTelemetry","schemaType","of","filter","item","map","t","getNodeIcon","POPOVER_MARGINS","ContextMenuItem","onDismiss","useTelemetry","onClick","hotkeys","t5","itemIndex","Component","ContextMenu","x","y","setBoundaryElement","useState","getField","setItems","fetchContextMenuItems","items_0","getBoundingClientRect","height","contextMenuReferenceElement","t6","minWidth","maxWidth","t7","t8","t9","t10","t11","i","t12","t13","t14","t15","t16","t17","getLinkHref","href","referer","parsed","URL","location","origin","hash","slice","pathname","search","searchParams","set","toString","PreviewSnapshotsContext","usePreviewSnapshots","isReactElementOverlayComponent","isValidElement","Root","styled","Card","Actions","Flex","HUD","MenuWrapper","Tab","ActionOpen","Labels","ExclusivePluginContainer","div","createIntentLink","baseUrl","tool","workspace","createEditUrl","pathToUrlString","studioPath","fromString","ElementOverlayInner","element","focused","componentResolver","showActions","draggable","targets","elementType","onActivateExclusivePlugin","onMenuOpenChange","getType","previewSnapshots","bb0","find","_id","node_0","nodeElement","schemaType_0","value","targetElement","getContext","legacyComponentContext","pluginContexts","resolverContexts","customComponents","useCustomComponents","nodePluginCollections","useResolvedNodePlugins","plugins","__html","menuId","useId","_temp2","showMenu","handleLabelClick","_temp3","animate","tone","EllipsisVerticalIcon","nodePluginCollection_0","index","Fragment","textTransform","nodePluginCollection","exclusive","MenuDivider","_temp4","Array","isArray","Component_1","props_0","PointerEvents","ElementOverlay","memo","hovered","rect","wasMaybeCollapsed","enableScrollIntoView","ref","useRef","scrolledIntoViewRef","w","h","transform","style","current","scrollIntoView","behavior","actions","block","inline","scrollMode","isNearTop","setIsNearTop","io","IntersectionObserver","intersection","boundingClientRect","threshold","activeExclusivePlugin","setActiveExclusivePlugin","closeExclusivePluginView","plugin","handleExclusivePluginClick","_temp5","ExclusivePluginComponent","menuOpen","setMenuOpen","t18","t19","t20","componentContexts","componentContext","instance","uuid","hud","forEach","guard","resolved","_temp6","Link","useSyncExternalStore","_temp7","_temp8","ctx","stopPropagation","nodePluginCollection_1","Component_0","onStoreChange","handlePopState","OverlayDragGroupRect","dragGroupRect","border","pointerEvents","markerThickness","lerp","v0","v1","OverlayDragInsertMarker","dragInsertPosition","flow","startX","endX","offset","Math","min","offset_0","offset_1","startX_0","startY","endY","offset_2","offset_3","offset_4","background","borderRadius","zIndex","$scaleFactor","$width","$height","clamp","number","max","inMin","inMax","outMin","outMax","mapped","OverlayDragPreview","skeleton","maxSkeletonWidth","innerWidth","scaleFactor","offsetX","offsetY","prefersDark","usePrefersDark","theme","useTheme_v2","radius","T0","T1","childRects","imageRects","textRects","color","r_1","r","from","tagName","r_0","OverlayMinimapPrompt","elementsReducer","elements","message","activated","dragDisabled","clickedElement","overlayStateReducer","state","contextMenu","focusPath","perspective","isDragging","dragShowMinimap","dragShowMinimapPrompt","dragSkeleton","dragMinimapTransition","prevFocusPath","startsWith","display","groupRect","PreviewSnapshotsProvider","children","setPreviewSnapshots","signal","response","fetch","suppressWarnings","snapshots","fetchPreviewSnapshots","previewSapshotsFetch","AbortController","unsub","onStatus","abort","isSanityNode","isDocumentSchemaType","isTypeSchemaType","popUnkeyedPathSegments","split","toReversed","reduce","acc","part","includes","join","getPathsWithUnresolvedTypes","SchemaProvider","Map","resolvedTypes","setResolvedTypes","schema","setSchema","fetchSchema","schemaFetch","reportedPathsRef","useDeferredValue","paths","controllerRef","reportPaths","paths_0","signal_0","initialReportedPaths","response_0","aborted","types","p","_type","fieldFromPath","schemaType_1","path_0","prevPath","next","rest","objectField","fields","name_0","get","Boolean","type_0","nodePath","flatMap","console","warn","createStore","initialState","getState","listeners","Set","setState","fn","l","listener","add","delete","store","SharedStateProvider","catch","value_0","prev","prev_0","Object","fromEntries","entries","reason","debug","TelemetryProvider","events","log","useController","inFrame","inPopUp","overlayController","optimisticActorReady","useOptimisticActorReady","createOverlayController","overlayElement","destroy","usePerspectiveSync","dispatch","controller","then","data_0","isEqualSets","a","b","size","has","useReportDocuments","lastReported","documents","perspective_0","reportDocuments","nodes","nodeIds","documentsOnPage","projectId","_projectId","dataset","_dataset","e_0","s","$zIndex","raf2","r0","r1","requestAnimationFrame","cancelAnimationFrame","DocumentReporter","documentIds","uniqueIds","setUniqueIds","actor","useOptimisticActor","id_0","send","documentId","getDraftId","getPublishedId","id_1","OverlaysController","onDrag","overlayEnabled","rootElement","overlayEventHandler","useCallback","enabled","dragGroup","cursor","removeProperty","activate","deactivate","Overlays","comlinkStatus","_componentResolver","useReducer","setRootElement","setOverlayEnabled","unsubs","setProperty","scrollY","updateDragPreviewCustomProps","handleClick","altPressed","handleKeyUp","isAltKey","handleKeydown","ctrlKey","metaKey","shiftKey","isHotkey","handleWindowBlur","overlaysFlash","setOverlaysFlash","fadingOut","setFadingOut","fadeOutTimeoutRef","setTimeout","clearTimeout","_temp9","closeContextMenu","_temp0","element_0","getAttribute","e_2","sanityNodesExistInSameArray","elementsToRender","t21","t22","t23","t24","t25","studioTheme","t26","IS_MAC","test","navigator","platform","MODIFIERS","alt","ctrl","mod","shift","keys","every","toUpperCase","prevId","isHTMLAnchorElement","isHTMLElement","closest","altKey","preventDefault","newEvent","MouseEvent","bubbles","enabled_0","enabled_1","enabled_2","enabled_3","e_1","Refresh","refresh","manualRefreshRef","mutationRefreshRef","source","promise","timedOut","finally","promise_0","promise_1","useComlink","active","setNode","status","setStatus","createNode","connectTo","createNodeMachine","provide","actors","createCompatibilityActors","stop","start","domain","postMessage","createSharedListener","incomingConnection$","ReplaySubject","incomingMutations$","Subject","merge","useDatasetMutator","datasetMutator","createDatasetMutator","mutator","createActor","input","client","withConfig","sharedListener","featuresFetch","features","optimistic","setActor","VisualEditing","components","portal","setInFrame","setInPopUp","isMaybePreviewIframe","isMaybePreviewWindow","portalElement","setPortalElement","createElement","documentElement","appendChild","contains","removeChild","createPortal","displayName"],"mappings":"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"}