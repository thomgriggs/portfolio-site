{"version":3,"file":"index.cjs","sources":["../../src/ui/History.tsx","../../src/ui/Meta.ts","../../src/util/useDragEvents.ts","../../src/ui/schema/SchemaContext.tsx","../../src/ui/schema/useSchema.ts","../../src/ui/context-menu/contextMenuItems.tsx","../../src/ui/context-menu/ContextMenu.tsx","../../src/util/getLinkHref.ts","../../src/ui/preview/PreviewSnapshotsContext.tsx","../../src/ui/preview/usePreviewSnapshots.ts","../../src/ui/ElementOverlay.tsx","../../src/ui/OverlayDragGroupRect.tsx","../../src/ui/OverlayDragInsertMarker.tsx","../../src/ui/OverlayDragPreview.tsx","../../src/ui/OverlayMinimapPrompt.tsx","../../src/ui/elementsReducer.ts","../../src/ui/overlayStateReducer.ts","../../src/ui/preview/PreviewSnapshotsProvider.tsx","../../src/ui/schema/SchemaProvider.tsx","../../src/ui/shared-state/SharedStateProvider.tsx","../../src/ui/telemetry/TelemetryProvider.tsx","../../src/ui/useController.tsx","../../src/ui/usePerspectiveSync.tsx","../../src/ui/useReportDocuments.ts","../../src/ui/Overlays.tsx","../../src/ui/Refresh.tsx","../../src/ui/useComlink.tsx","../../src/optimistic/state/createSharedListener.ts","../../src/ui/useDatasetMutator.ts","../../src/ui/VisualEditing.tsx"],"sourcesContent":["import {useEffect, type FunctionComponent} from 'react'\nimport type {HistoryAdapter, VisualEditingNode} from '../types'\n\n/**\n * @internal\n */\nexport const History: FunctionComponent<{\n  comlink: VisualEditingNode\n  history?: HistoryAdapter\n}> = (props) => {\n  const {comlink, history} = props\n\n  useEffect(() => {\n    return comlink?.on('presentation/navigate', (data) => {\n      history?.update(data)\n    })\n  }, [comlink, history])\n\n  useEffect(() => {\n    if (history) {\n      return history.subscribe((update) => {\n        update.title = update.title || document.title\n        comlink?.post('visual-editing/navigate', update)\n      })\n    }\n    return\n  }, [comlink, history])\n\n  return null\n}\n","import {useEffect, type FunctionComponent} from 'react'\nimport type {VisualEditingNode} from '../types'\n\n/**\n * @internal\n */\nexport const Meta: FunctionComponent<{\n  comlink: VisualEditingNode\n}> = (props) => {\n  const {comlink} = props\n\n  useEffect(() => {\n    const sendMeta = () => {\n      comlink.post('visual-editing/meta', {title: document.title})\n    }\n\n    const observer = new MutationObserver(([mutation]) => {\n      if (mutation.target.nodeName === 'TITLE') {\n        sendMeta()\n      }\n    })\n\n    observer.observe(document.head, {\n      subtree: true,\n      characterData: true,\n      childList: true,\n    })\n\n    sendMeta()\n\n    return () => observer.disconnect()\n  }, [comlink])\n\n  return null\n}\n","import {at, insert, remove} from '@sanity/mutate'\nimport {get as getFromPath} from '@sanity/util/paths'\nimport {useCallback, useEffect} from 'react'\nimport {useDocuments} from '../react/useDocuments'\nimport type {DragEndEvent, DragInsertPosition} from '../types'\nimport {getArrayItemKeyAndParentPath} from './mutations'\n\n// Finds the node that the drag end event was relative to, and the relative\n// position the new element should be inserted in. If the reference node was\n// \"top\" or \"left\", we insert \"after\". If it was \"bottom\" or \"right\", we insert\n// \"before\".\nfunction getReferenceNodeAndInsertPosition(position: DragInsertPosition) {\n  if (position) {\n    const {top, right, bottom, left} = position\n    if (left || top) {\n      return {node: (left ?? top)!.sanity, position: 'after' as const}\n    } else if (right || bottom) {\n      return {node: (right ?? bottom)!.sanity, position: 'before' as const}\n    }\n  }\n  return undefined\n}\n\nexport function useDragEndEvents(): {\n  dispatchDragEndEvent: (event: DragEndEvent) => void\n} {\n  const {getDocument} = useDocuments()\n\n  useEffect(() => {\n    const handler = (e: CustomEvent<DragEndEvent>) => {\n      const {insertPosition, target, preventInsertDefault} = e.detail\n\n      if (preventInsertDefault) return\n\n      const reference = getReferenceNodeAndInsertPosition(insertPosition)\n      if (reference) {\n        const doc = getDocument(target.id)\n        // We must have access to the document actor in order to perform the\n        // necessary mutations. If this is undefined, something went wrong when\n        // resolving the currently in use documents\n        const {node, position} = reference\n        // Get the key of the element that was dragged\n        const {key: targetKey, hasExplicitKey} = getArrayItemKeyAndParentPath(target)\n        // Get the key of the reference element, and path to the parent array\n        const {path: arrayPath, key: referenceItemKey} = getArrayItemKeyAndParentPath(node)\n        // Don't patch if the keys match, as this means the item was only\n        // dragged to its existing position, i.e. not moved\n        if (arrayPath && referenceItemKey && referenceItemKey !== targetKey) {\n          doc.patch(async ({getSnapshot}) => {\n            const snapshot = await getSnapshot()\n            // Get the current value of the element we dragged, as we will need\n            // to clone this into the new position\n            const elementValue = getFromPath(snapshot, target.path)\n\n            if (hasExplicitKey) {\n              return [\n                // Remove the original dragged item\n                at(arrayPath, remove({_key: targetKey})),\n                // Insert the cloned dragged item into its new position\n                at(arrayPath, insert(elementValue, position, {_key: referenceItemKey})),\n              ]\n            } else {\n              // handle reordering for primitives\n              return [\n                // Remove the original dragged item\n                at(arrayPath, remove(~~targetKey)),\n                // Insert the cloned dragged item into its new position\n                at(\n                  arrayPath,\n                  insert(\n                    elementValue,\n                    position,\n                    // if target key is < reference, each item in the array's index will be one less due to the previous removal\n                    referenceItemKey > targetKey ? ~~referenceItemKey - 1 : ~~referenceItemKey,\n                  ),\n                ),\n              ]\n            }\n          })\n        }\n      }\n    }\n    window.addEventListener('sanity/dragEnd', handler as EventListener)\n    return () => {\n      window.removeEventListener('sanity/dragEnd', handler as EventListener)\n    }\n  }, [getDocument])\n\n  const dispatchDragEndEvent = useCallback((event: DragEndEvent) => {\n    const customEvent = new CustomEvent<DragEndEvent>('sanity/dragEnd', {\n      detail: event,\n      cancelable: true,\n    })\n    window.dispatchEvent(customEvent)\n  }, [])\n\n  return {dispatchDragEndEvent}\n}\n","import type {\n  DocumentSchema,\n  SanityNode,\n  SanityStegaNode,\n  TypeSchema,\n} from '@sanity/presentation-comlink'\nimport {createContext} from 'react'\nimport type {OverlayElementField, OverlayElementParent} from '../../types'\n\nexport interface SchemaContextValue {\n  getField: (node: SanityNode | SanityStegaNode) => {\n    field: OverlayElementField\n    parent: OverlayElementParent\n  }\n  getType: <T extends 'document' | 'type' = 'document'>(\n    node: SanityNode | SanityStegaNode | string,\n    type?: T,\n  ) => T extends 'document' ? DocumentSchema | undefined : TypeSchema | undefined\n}\n\nexport const SchemaContext = createContext<SchemaContextValue | null>(null)\n","import {useContext} from 'react'\nimport {SchemaContext, type SchemaContextValue} from './SchemaContext'\n\nexport function useSchema(): SchemaContextValue {\n  const context = useContext(SchemaContext)\n\n  if (!context) {\n    throw new Error('Schema context is missing')\n  }\n\n  return context\n}\n","import {\n  ArrowDownIcon,\n  ArrowUpIcon,\n  CopyIcon,\n  InsertAboveIcon,\n  InsertBelowIcon,\n  PublishIcon,\n  RemoveIcon,\n  SortIcon,\n  UnpublishIcon,\n} from '@sanity/icons'\nimport type {\n  SanityNode,\n  SchemaArrayItem,\n  SchemaNode,\n  SchemaUnionNode,\n  SchemaUnionOption,\n} from '@sanity/presentation-comlink'\nimport type {SchemaType} from '@sanity/types'\nimport {MenuGroup} from '@sanity/ui/_visual-editing'\nimport {type FunctionComponent} from 'react'\nimport type {OptimisticDocument} from '../../optimistic'\nimport {InsertMenu} from '../../overlay-components/components/InsertMenu'\nimport type {ContextMenuNode, OverlayElementField, OverlayElementParent} from '../../types'\nimport {getNodeIcon} from '../../util/getNodeIcon'\nimport {\n  getArrayDuplicatePatches,\n  getArrayInsertPatches,\n  getArrayMovePatches,\n  getArrayRemovePatches,\n} from '../../util/mutations'\n\nexport function getArrayRemoveAction(node: SanityNode, doc: OptimisticDocument): () => void {\n  if (!node.type) throw new Error('Node type is missing')\n  return () =>\n    doc.patch(async ({getSnapshot}) => getArrayRemovePatches(node, (await getSnapshot())!))\n}\n\nfunction getArrayInsertAction(\n  node: SanityNode,\n  doc: OptimisticDocument,\n  insertType: string,\n  position: 'before' | 'after',\n): () => void {\n  if (!node.type) throw new Error('Node type is missing')\n  return () => doc.patch(() => getArrayInsertPatches(node, insertType, position))\n}\n\nfunction getDuplicateAction(node: SanityNode, doc: OptimisticDocument): () => void {\n  if (!node.type) throw new Error('Node type is missing')\n  return () =>\n    doc.patch(async ({getSnapshot}) => getArrayDuplicatePatches(node, (await getSnapshot())!))\n}\n\nexport function getContextMenuItems(context: {\n  doc: OptimisticDocument\n  field: OverlayElementField\n  node: SanityNode\n  parent: OverlayElementParent\n}): Promise<ContextMenuNode[]> {\n  const {node, field, parent, doc} = context\n  if (field?.type === 'arrayItem') {\n    return getContextMenuArrayItems({node, field, doc})\n  }\n  if (parent?.type === 'union') {\n    return getContextMenuUnionItems({node, parent, doc})\n  }\n\n  return Promise.resolve([])\n}\n\nfunction getDuplicateItem(context: {doc: OptimisticDocument; node: SanityNode}) {\n  const {node, doc} = context\n  if (!doc) return []\n  return [\n    {\n      type: 'action' as const,\n      label: 'Duplicate',\n      icon: CopyIcon,\n      action: getDuplicateAction(node, doc),\n      telemetryEvent: 'Visual Editing Context Menu Item Duplicated' as const,\n    },\n  ]\n}\n\nfunction getRemoveItems(context: {doc: OptimisticDocument; node: SanityNode}) {\n  const {node, doc} = context\n  if (!doc) return []\n  return [\n    {\n      type: 'action' as const,\n      label: 'Remove',\n      icon: RemoveIcon,\n      action: getArrayRemoveAction(node, doc),\n      telemetryEvent: 'Visual Editing Context Menu Item Removed' as const,\n    },\n  ]\n}\n\nasync function getMoveItems(\n  context: {\n    doc: OptimisticDocument\n    node: SanityNode\n  },\n  withDivider = true,\n) {\n  const {node, doc} = context\n  if (!doc) return []\n\n  const items: ContextMenuNode[] = []\n  const groupItems: ContextMenuNode[] = []\n\n  const [moveUpPatches, moveDownPatches, moveFirstPatches, moveLastPatches] = await Promise.all([\n    getArrayMovePatches(node, doc, 'previous'),\n    getArrayMovePatches(node, doc, 'next'),\n    getArrayMovePatches(node, doc, 'first'),\n    getArrayMovePatches(node, doc, 'last'),\n  ])\n\n  if (moveFirstPatches.length) {\n    groupItems.push({\n      type: 'action',\n      label: 'To top',\n      icon: PublishIcon,\n      action: () => doc.patch(moveFirstPatches),\n      telemetryEvent: 'Visual Editing Context Menu Item Moved',\n    })\n  }\n  if (moveUpPatches.length) {\n    groupItems.push({\n      type: 'action',\n      label: 'Up',\n      icon: ArrowUpIcon,\n      action: () => doc.patch(moveUpPatches),\n      telemetryEvent: 'Visual Editing Context Menu Item Moved',\n    })\n  }\n  if (moveDownPatches.length) {\n    groupItems.push({\n      type: 'action',\n      label: 'Down',\n      icon: ArrowDownIcon,\n      action: () => doc.patch(moveDownPatches),\n      telemetryEvent: 'Visual Editing Context Menu Item Moved',\n    })\n  }\n  if (moveLastPatches.length) {\n    groupItems.push({\n      type: 'action',\n      label: 'To bottom',\n      icon: UnpublishIcon,\n      action: () => doc.patch(moveLastPatches),\n      telemetryEvent: 'Visual Editing Context Menu Item Moved',\n    })\n  }\n\n  if (groupItems.length) {\n    items.push({\n      type: 'group',\n      label: 'Move',\n      icon: SortIcon,\n      items: groupItems,\n    })\n    if (withDivider) {\n      items.push({type: 'divider'})\n    }\n  }\n\n  return items\n}\n\nasync function getContextMenuArrayItems(context: {\n  doc: OptimisticDocument\n  field: SchemaArrayItem\n  node: SanityNode\n}): Promise<ContextMenuNode[]> {\n  const {node, field, doc} = context\n  const items: ContextMenuNode[] = []\n  items.push(...getDuplicateItem(context))\n  items.push(...getRemoveItems(context))\n  items.push(...(await getMoveItems(context)))\n\n  items.push({\n    type: 'action',\n    label: 'Insert before',\n    icon: InsertAboveIcon,\n    action: getArrayInsertAction(node, doc, field.name, 'before'),\n    telemetryEvent: 'Visual Editing Context Menu Item Inserted',\n  })\n  items.push({\n    type: 'action',\n    label: 'Insert after',\n    icon: InsertBelowIcon,\n    action: getArrayInsertAction(node, doc, field.name, 'after'),\n    telemetryEvent: 'Visual Editing Context Menu Item Inserted',\n  })\n\n  return items\n}\n\nconst InsertMenuWrapper: FunctionComponent<{\n  label: string\n  onSelect: (schemaType: SchemaType) => void\n  parent: SchemaUnionNode<SchemaNode>\n  width: number | undefined\n  boundaryElement: HTMLDivElement | null\n}> = (props) => {\n  const {label, parent, width, onSelect, boundaryElement} = props\n\n  return (\n    <MenuGroup\n      fontSize={1}\n      icon={InsertBelowIcon}\n      padding={2}\n      popover={{\n        arrow: false,\n        constrainSize: true,\n        floatingBoundary: boundaryElement,\n        padding: 0,\n        placement: 'right-start',\n        fallbackPlacements: [\n          'left-start',\n          'right',\n          'left',\n          'right-end',\n          'left-end',\n          'bottom',\n          'top',\n        ],\n        preventOverflow: true,\n        width,\n        __unstable_margins: [4, 4, 4, 4],\n      }}\n      space={2}\n      text={label}\n    >\n      <InsertMenu node={parent} onSelect={onSelect} />\n    </MenuGroup>\n  )\n}\n\nasync function getContextMenuUnionItems(context: {\n  doc: OptimisticDocument\n  node: SanityNode\n  parent: SchemaUnionNode<SchemaNode>\n}): Promise<ContextMenuNode[]> {\n  const {doc, node, parent} = context\n  const items: ContextMenuNode[] = []\n  items.push(...getDuplicateItem(context))\n  items.push(...getRemoveItems(context))\n  items.push(...(await getMoveItems(context)))\n\n  if (parent.options?.insertMenu) {\n    const insertMenuOptions = parent.options.insertMenu || {}\n    const width = insertMenuOptions.views?.some((view) => view.name === 'grid') ? 0 : undefined\n\n    items.push({\n      type: 'custom',\n      component: ({boundaryElement, sendTelemetry}) => {\n        const onSelect = (schemaType: SchemaType) => {\n          const action = getArrayInsertAction(node, doc, schemaType.name, 'before')\n          action()\n\n          sendTelemetry('Visual Editing Context Menu Item Inserted', null)\n        }\n        return (\n          <InsertMenuWrapper\n            label=\"Insert before\"\n            onSelect={onSelect}\n            parent={parent}\n            width={width}\n            boundaryElement={boundaryElement}\n          />\n        )\n      },\n    })\n\n    items.push({\n      type: 'custom',\n      component: ({boundaryElement, sendTelemetry}) => {\n        const onSelect = (schemaType: SchemaType) => {\n          const action = getArrayInsertAction(node, doc, schemaType.name, 'after')\n          action()\n\n          sendTelemetry('Visual Editing Context Menu Item Inserted', null)\n        }\n        return (\n          <InsertMenuWrapper\n            label=\"Insert after\"\n            onSelect={onSelect}\n            parent={parent}\n            width={width}\n            boundaryElement={boundaryElement}\n          />\n        )\n      },\n    })\n  } else {\n    items.push({\n      type: 'group',\n      label: 'Insert before',\n      icon: InsertAboveIcon,\n      items: (\n        parent.of.filter((item) => item.type === 'unionOption') as SchemaUnionOption<SchemaNode>[]\n      ).map((t) => {\n        return {\n          type: 'action' as const,\n          icon: getNodeIcon(t),\n          label: t.name === 'block' ? 'Paragraph' : t.title || t.name,\n          action: getArrayInsertAction(node, doc, t.name, 'before'),\n          telemetryEvent: 'Visual Editing Context Menu Item Inserted',\n        }\n      }),\n    })\n    items.push({\n      type: 'group',\n      label: 'Insert after',\n      icon: InsertBelowIcon,\n      items: (\n        parent.of.filter((item) => item.type === 'unionOption') as SchemaUnionOption<SchemaNode>[]\n      ).map((t) => {\n        return {\n          type: 'action' as const,\n          label: t.name === 'block' ? 'Paragraph' : t.title || t.name,\n          icon: getNodeIcon(t),\n          action: getArrayInsertAction(node, doc, t.name, 'after'),\n          telemetryEvent: 'Visual Editing Context Menu Item Inserted',\n        }\n      }),\n    })\n  }\n\n  return items\n}\n","import {\n  Box,\n  Flex,\n  Menu,\n  MenuDivider,\n  MenuGroup,\n  MenuItem,\n  Popover,\n  Spinner,\n  Stack,\n  Text,\n  type PopoverMargins,\n} from '@sanity/ui/_visual-editing'\nimport {useCallback, useEffect, useMemo, useState, type FunctionComponent} from 'react'\nimport {useDocuments} from '../../react/useDocuments'\nimport type {ContextMenuNode, ContextMenuProps} from '../../types'\nimport {getNodeIcon} from '../../util/getNodeIcon'\nimport {PopoverPortal} from '../PopoverPortal'\nimport {useSchema} from '../schema/useSchema'\nimport {useTelemetry} from '../telemetry/useTelemetry'\nimport {getContextMenuItems} from './contextMenuItems'\n\nconst POPOVER_MARGINS: PopoverMargins = [-4, 4, -4, 4]\n\nfunction ContextMenuItem(props: {\n  node: ContextMenuNode\n  onDismiss?: () => void\n  boundaryElement: HTMLDivElement | null\n}) {\n  const {node, onDismiss, boundaryElement} = props\n  const sendTelemetry = useTelemetry()\n\n  const onClick = useCallback(() => {\n    if (node.type === 'action') {\n      node.action?.()\n      onDismiss?.()\n\n      if (node.telemetryEvent) {\n        sendTelemetry(node.telemetryEvent, null)\n      }\n    }\n  }, [node, onDismiss, sendTelemetry])\n\n  if (node.type === 'divider') {\n    return <MenuDivider />\n  }\n\n  if (node.type === 'action') {\n    return (\n      <MenuItem\n        fontSize={1}\n        hotkeys={node.hotkeys}\n        icon={node.icon}\n        padding={2}\n        space={2}\n        text={node.label}\n        disabled={!node.action}\n        onClick={onClick}\n      />\n    )\n  }\n\n  if (node.type === 'group') {\n    return (\n      <MenuGroup\n        fontSize={1}\n        icon={node.icon}\n        padding={2}\n        // @todo when this PR lands https://github.com/sanity-io/ui/pull/1454\n        // menu={{\n        //   padding: 0,\n        // }}\n        popover={{\n          arrow: false,\n          constrainSize: true,\n          placement: 'right-start',\n          fallbackPlacements: [\n            'left-start',\n            'right',\n            'left',\n            'right-end',\n            'left-end',\n            'bottom',\n            'top',\n          ],\n          preventOverflow: true,\n          __unstable_margins: POPOVER_MARGINS,\n        }}\n        space={2}\n        text={node.label}\n      >\n        {node.items.map((item, itemIndex) => (\n          <ContextMenuItem\n            key={itemIndex}\n            node={item}\n            onDismiss={onDismiss}\n            boundaryElement={boundaryElement}\n          />\n        ))}\n      </MenuGroup>\n    )\n  }\n\n  if (node.type === 'custom') {\n    const {component: Component} = node\n    return <Component boundaryElement={boundaryElement} sendTelemetry={sendTelemetry} />\n  }\n\n  return null\n}\n\nexport const ContextMenu: FunctionComponent<ContextMenuProps> = (props) => {\n  const {\n    node,\n    onDismiss,\n    position: {x, y},\n  } = props\n\n  const [boundaryElement, setBoundaryElement] = useState<HTMLDivElement | null>(null)\n\n  const {getField} = useSchema()\n  const {getDocument} = useDocuments()\n\n  const {field, parent} = getField(node)\n\n  const title = useMemo(() => {\n    return field?.title || field?.name || 'Unknown type'\n  }, [field])\n\n  const [items, setItems] = useState<ContextMenuNode[] | undefined>(undefined)\n\n  useEffect(() => {\n    const fetchContextMenuItems = async () => {\n      const doc = getDocument(node.id)\n      if (!doc) return\n      const items = await getContextMenuItems({node, field, parent, doc})\n      setItems(items)\n    }\n    fetchContextMenuItems()\n  }, [field, node, parent, getDocument])\n\n  const contextMenuReferenceElement = useMemo(() => {\n    return {\n      getBoundingClientRect: () => ({\n        bottom: y,\n        left: x,\n        right: x,\n        top: y,\n        width: 0,\n        height: 0,\n      }),\n    } as HTMLElement\n  }, [x, y])\n\n  const icon = useMemo(() => {\n    return getNodeIcon(field)\n  }, [field])\n\n  return (\n    <PopoverPortal setBoundaryElement={setBoundaryElement} onDismiss={onDismiss}>\n      <Popover\n        __unstable_margins={POPOVER_MARGINS}\n        arrow={false}\n        open\n        placement=\"right-start\"\n        referenceElement={contextMenuReferenceElement}\n        content={\n          <Menu style={{minWidth: 120, maxWidth: 160}}>\n            <Flex gap={2} padding={2}>\n              <Box flex=\"none\">{items ? <Text size={1}>{icon}</Text> : <Spinner size={1} />}</Box>\n\n              <Stack flex={1} space={2}>\n                <Text size={1} weight=\"semibold\">\n                  {items ? title : 'Loading...'}\n                </Text>\n              </Stack>\n            </Flex>\n\n            {items && (\n              <>\n                <MenuDivider />\n                {items.map((item, i) => (\n                  <ContextMenuItem\n                    key={i}\n                    node={item}\n                    onDismiss={onDismiss}\n                    boundaryElement={boundaryElement}\n                  />\n                ))}\n              </>\n            )}\n          </Menu>\n        }\n      >\n        <div\n          key={`${x}-${y}`}\n          style={{\n            position: 'absolute',\n            left: x,\n            top: y,\n          }}\n        />\n      </Popover>\n    </PopoverPortal>\n  )\n}\n","export function getLinkHref(href: string, referer: string): string {\n  try {\n    const parsed = new URL(href, typeof location === 'undefined' ? undefined : location.origin)\n    if (parsed.hash) {\n      const hash = new URL(getLinkHref(parsed.hash.slice(1), referer))\n      return `${parsed.origin}${parsed.pathname}${parsed.search}#${hash.pathname}${hash.search}`\n    }\n    parsed.searchParams.set('preview', referer)\n    return parsed.toString()\n  } catch {\n    return href\n  }\n}\n","import type {PreviewSnapshot} from '@sanity/presentation-comlink'\nimport {createContext} from 'react'\n\nexport type PreviewSnapshotsContextValue = PreviewSnapshot[]\n\nexport const PreviewSnapshotsContext = createContext<PreviewSnapshotsContextValue | null>(null)\n","import {useContext} from 'react'\nimport {PreviewSnapshotsContext, type PreviewSnapshotsContextValue} from './PreviewSnapshotsContext'\n\nexport function usePreviewSnapshots(): PreviewSnapshotsContextValue {\n  const context = useContext(PreviewSnapshotsContext)\n\n  if (!context) {\n    throw new Error('Preview Snapshots context is missing')\n  }\n\n  return context\n}\n","import {createEditUrl, studioPath} from '@sanity/client/csm'\nimport {DocumentIcon, DragHandleIcon, EllipsisVerticalIcon, PlugIcon} from '@sanity/icons'\nimport {MenuButton, MenuDivider} from '@sanity/ui'\nimport {Box, Button, Card, Flex, Menu, MenuItem, Stack, Text} from '@sanity/ui/_visual-editing'\nimport {pathToUrlString} from '@sanity/visual-editing-csm'\nimport {\n  Fragment,\n  isValidElement,\n  memo,\n  useCallback,\n  useEffect,\n  useId,\n  useMemo,\n  useRef,\n  useState,\n  useSyncExternalStore,\n  type CSSProperties,\n  type FunctionComponent,\n  type MouseEventHandler,\n  type ReactElement,\n} from 'react'\nimport scrollIntoView from 'scroll-into-view-if-needed'\nimport {styled} from 'styled-components'\nimport {v4 as uuid} from 'uuid'\nimport {PointerEvents} from '../overlay-components/components/PointerEvents'\nimport type {\n  ElementChildTarget,\n  ElementFocusedState,\n  ElementNode,\n  OverlayComponent,\n  OverlayComponentResolver,\n  OverlayComponentResolverContext,\n  OverlayPluginDefinition,\n  OverlayPluginExclusiveDefinition,\n  OverlayPluginHudDefinition,\n  OverlayRect,\n  SanityNode,\n  SanityStegaNode,\n  VisualEditingNode,\n} from '../types'\nimport {getLinkHref} from '../util/getLinkHref'\nimport {PopoverBackground} from './PopoverPortal'\nimport {usePreviewSnapshots} from './preview/usePreviewSnapshots'\nimport {useSchema} from './schema/useSchema'\n\nconst isReactElementOverlayComponent = (\n  component:\n    | OverlayComponent\n    | {component: OverlayComponent; props?: Record<string, unknown>}\n    | Array<OverlayComponent | {component: OverlayComponent; props?: Record<string, unknown>}>\n    | ReactElement,\n): component is React.JSX.Element => {\n  return isValidElement(component)\n}\n\nexport interface ElementOverlayProps {\n  id: string\n  comlink?: VisualEditingNode\n  componentResolver?: OverlayComponentResolver\n  plugins?: OverlayPluginDefinition[]\n  draggable: boolean\n  element: ElementNode\n  focused: ElementFocusedState\n  hovered: boolean\n  isDragging: boolean\n  node: SanityNode | SanityStegaNode\n  rect: OverlayRect\n  showActions: boolean\n  wasMaybeCollapsed: boolean\n  enableScrollIntoView: boolean\n  targets: ElementChildTarget[]\n  elementType: 'element' | 'group'\n  onActivateExclusivePlugin?: (\n    plugin: OverlayPluginExclusiveDefinition,\n    context: OverlayComponentResolverContext,\n  ) => void\n  onMenuOpenChange: (open: boolean) => void\n}\n\nconst Root = styled(Card)`\n  background-color: var(--overlay-bg);\n  border-radius: 3px;\n  pointer-events: none;\n  position: absolute;\n  will-change: transform;\n  box-shadow: var(--overlay-box-shadow);\n  transition: none;\n\n  --overlay-bg: transparent;\n  --overlay-box-shadow: inset 0 0 0 1px transparent;\n\n  [data-overlays] & {\n    --overlay-bg: color-mix(in srgb, transparent 95%, var(--card-focus-ring-color));\n    --overlay-box-shadow: inset 0 0 0 2px\n      color-mix(in srgb, transparent 50%, var(--card-focus-ring-color));\n  }\n\n  [data-fading-out] & {\n    transition:\n      box-shadow 1550ms,\n      background-color 1550ms;\n\n    --overlay-bg: rgba(0, 0, 255, 0);\n    --overlay-box-shadow: inset 0 0 0 1px transparent;\n  }\n\n  &[data-focused] {\n    --overlay-box-shadow: inset 0 0 0 1px var(--card-focus-ring-color);\n  }\n\n  &[data-hovered]:not([data-focused]) {\n    transition: none;\n    --overlay-box-shadow: inset 0 0 0 2px var(--card-focus-ring-color);\n  }\n\n  /* [data-unmounted] & {\n    --overlay-box-shadow: inset 0 0 0 1px var(--card-focus-ring-color);\n  } */\n\n  :link {\n    text-decoration: none;\n  }\n`\n\nconst Actions = styled(Flex)`\n  bottom: 100%;\n  cursor: pointer;\n  pointer-events: none;\n  position: absolute;\n  right: 0;\n\n  [data-hovered]:not([data-menu-open]) & {\n    pointer-events: all;\n  }\n\n  [data-flipped] & {\n    bottom: auto;\n    top: 100%;\n  }\n`\n\nconst HUD = styled(Flex)`\n  top: 100%;\n  cursor: pointer;\n  pointer-events: none;\n  position: absolute;\n  left: 0;\n\n  gap: 4px;\n  padding: 4px 0;\n  flex-wrap: wrap;\n\n  [data-hovered]:not([data-menu-open]) & {\n    pointer-events: all;\n  }\n\n  [data-flipped] & {\n    top: calc(100% + 2rem);\n  }\n`\n\nconst MenuWrapper = styled(Flex)`\n  margin: -0.5rem;\n\n  [data-hovered]:not([data-menu-open]) & {\n    pointer-events: all;\n  }\n`\n\nconst Tab = styled(Flex)`\n  bottom: 100%;\n  cursor: pointer;\n  pointer-events: none;\n  position: absolute;\n  left: 0;\n\n  [data-hovered]:not([data-menu-open]) & {\n    pointer-events: all;\n  }\n\n  [data-flipped] & {\n    bottom: auto;\n    top: 100%;\n  }\n`\n\nconst ActionOpen = styled(Card)`\n  cursor: pointer;\n  background-color: var(--card-focus-ring-color);\n  right: 0;\n  border-radius: 3px;\n\n  & [data-ui='Text'] {\n    color: #fff;\n    white-space: nowrap;\n  }\n`\n\nconst Labels = styled(Flex)`\n  display: flex;\n  align-items: center;\n  background-color: var(--card-focus-ring-color);\n  right: 0;\n  border-radius: 3px;\n  & [data-ui='Text'],\n  & [data-sanity-icon] {\n    color: #fff;\n    white-space: nowrap;\n  }\n`\n\nconst ExclusivePluginContainer = styled.div`\n  position: absolute;\n  inset: 0;\n  pointer-events: all;\n`\n\nfunction createIntentLink(node: SanityNode) {\n  const {id, type, path, baseUrl, tool, workspace} = node\n\n  return createEditUrl({\n    baseUrl,\n    workspace,\n    tool,\n    type: type!,\n    id,\n    path: path ? pathToUrlString(studioPath.fromString(path)) : [],\n  })\n}\n\nconst ElementOverlayInner: FunctionComponent<ElementOverlayProps> = (props) => {\n  const {\n    id,\n    element,\n    focused,\n    componentResolver,\n    node,\n    showActions,\n    draggable,\n    targets,\n    elementType,\n    comlink,\n    onActivateExclusivePlugin,\n    onMenuOpenChange,\n  } = props\n\n  const {getField, getType} = useSchema()\n  const schemaType = getType(node)\n\n  const href = 'path' in node ? createIntentLink(node) : node.href\n\n  const previewSnapshots = usePreviewSnapshots()\n\n  const title = useMemo(() => {\n    if (!('path' in node)) return undefined\n    return previewSnapshots.find((snapshot) => snapshot._id === node.id)?.title\n  }, [node, previewSnapshots])\n\n  const resolverContexts = useMemo<{\n    legacyComponentContext: OverlayComponentResolverContext | undefined\n    pluginContexts: OverlayComponentResolverContext[]\n  }>(() => {\n    function getContext(\n      node: SanityNode | SanityStegaNode,\n      nodeElement?: ElementNode,\n    ): OverlayComponentResolverContext | undefined {\n      const schemaType = getType(node)\n      const {field, parent} = getField(node)\n      if (!('id' in node)) return undefined\n      if (!field || !schemaType) return undefined\n      const type = field.value.type\n      return {\n        document: schemaType,\n        element,\n        targetElement: nodeElement || element,\n        field,\n        focused: !!focused,\n        node,\n        parent,\n        type,\n      }\n    }\n    return {\n      legacyComponentContext: elementType === 'element' ? getContext(node) : undefined,\n      pluginContexts: targets\n        .map((target) => getContext(target.sanity, target.element))\n        .filter((ctx) => ctx !== undefined),\n    }\n  }, [elementType, node, targets, getType, getField, element, focused])\n\n  const customComponents = useCustomComponents(\n    resolverContexts.legacyComponentContext,\n    componentResolver,\n  )\n\n  const nodePluginCollections = useResolvedNodePlugins(\n    resolverContexts.pluginContexts,\n    props.plugins,\n  )\n\n  const icon = schemaType?.icon ? (\n    <div dangerouslySetInnerHTML={{__html: schemaType.icon}} />\n  ) : (\n    <DocumentIcon />\n  )\n\n  const menuId = useId()\n\n  const hasMenuitems = nodePluginCollections?.some(\n    (nodePluginCollection) => nodePluginCollection.exclusive.length > 0,\n  )\n  const showMenu = hasMenuitems || nodePluginCollections?.length > 1\n\n  const handleLabelClick = useCallback(() => {\n    window.dispatchEvent(new CustomEvent('sanity-overlay/label-click', {detail: {id}}))\n  }, [id])\n\n  return (\n    <>\n      <PointerEvents>\n        {showActions ? (\n          <Actions gap={1} paddingY={1}>\n            <Link href={href} />\n          </Actions>\n        ) : null}\n        {(title || showMenu) && (\n          <Tab gap={1} paddingY={1} onClick={handleLabelClick}>\n            <Labels gap={2} padding={2}>\n              {draggable && (\n                <Box marginRight={1}>\n                  <Text className=\"drag-handle\" size={0}>\n                    <DragHandleIcon />\n                  </Text>\n                </Box>\n              )}\n              <Text size={0}>{icon}</Text>\n\n              {title && (\n                <Text size={1} weight=\"medium\">\n                  {title}\n                </Text>\n              )}\n\n              {showMenu && (\n                <Box\n                  paddingLeft={2}\n                  onClick={(e) => {\n                    // Do not propagate and click the label too if clicking menu button\n                    e.stopPropagation()\n                  }}\n                >\n                  <MenuWrapper>\n                    <MenuButton\n                      id={menuId}\n                      popover={{\n                        animate: true,\n                        placement: 'bottom-start',\n                        constrainSize: true,\n                        tone: 'default',\n                      }}\n                      onOpen={() => {\n                        onMenuOpenChange?.(true)\n                      }}\n                      onClose={() => {\n                        onMenuOpenChange?.(false)\n                      }}\n                      button={<Button icon={EllipsisVerticalIcon} tone=\"primary\" padding={2} />}\n                      menu={\n                        <Menu paddingY={0}>\n                          <PointerEvents>\n                            {nodePluginCollections?.map((nodePluginCollection, index) => (\n                              <Fragment key={nodePluginCollection.id}>\n                                <Stack role=\"group\" paddingY={1} space={0}>\n                                  <MenuItem\n                                    paddingY={2}\n                                    text={\n                                      <Box paddingY={2}>\n                                        <Text muted size={1} style={{textTransform: 'capitalize'}}>\n                                          {`${nodePluginCollection.context.document.name}: ${nodePluginCollection.context.field?.name}`}\n                                        </Text>\n                                      </Box>\n                                    }\n                                    onClick={() => {\n                                      if (nodePluginCollection.context.node) {\n                                        comlink?.post(\n                                          'visual-editing/focus',\n                                          nodePluginCollection.context.node,\n                                        )\n                                      }\n                                    }}\n                                  />\n                                  {nodePluginCollection.exclusive.map((exclusive) => {\n                                    const Component = exclusive.component\n                                    if (!Component) return null\n                                    return (\n                                      <MenuItem\n                                        paddingY={2}\n                                        key={exclusive.name}\n                                        icon={exclusive.icon || <PlugIcon />}\n                                        text={\n                                          <Box paddingY={2}>\n                                            <Text size={1}>\n                                              {exclusive.title || exclusive.name}\n                                            </Text>\n                                          </Box>\n                                        }\n                                        onClick={() =>\n                                          onActivateExclusivePlugin?.(\n                                            exclusive,\n                                            nodePluginCollection.context,\n                                          )\n                                        }\n                                      />\n                                    )\n                                  })}\n                                </Stack>\n                                {index < nodePluginCollections.length - 1 && <MenuDivider />}\n                              </Fragment>\n                            ))}\n                          </PointerEvents>\n                        </Menu>\n                      }\n                    />\n                  </MenuWrapper>\n                </Box>\n              )}\n            </Labels>\n          </Tab>\n        )}\n\n        <HUD>\n          {nodePluginCollections?.map((nodePluginCollection) => (\n            <Fragment key={nodePluginCollection.id}>\n              {nodePluginCollection.hud.map((hud) => {\n                const Component = hud.component\n                if (!Component) return null\n                return <Component key={hud.name} {...nodePluginCollection.context} />\n              })}\n            </Fragment>\n          ))}\n        </HUD>\n      </PointerEvents>\n\n      {Array.isArray(customComponents)\n        ? customComponents.map(({component: Component, props}, i) => {\n            return (\n              <Component\n                key={i}\n                PointerEvents={PointerEvents}\n                {...resolverContexts.legacyComponentContext!}\n                {...props}\n              />\n            )\n          })\n        : customComponents}\n    </>\n  )\n}\n\nexport const ElementOverlay = memo(function ElementOverlay(\n  props: Omit<ElementOverlayProps, 'setActiveExclusivePlugin' | 'onMenuOpenChange'>,\n) {\n  const {draggable, focused, hovered, rect, wasMaybeCollapsed, enableScrollIntoView} = props\n\n  const ref = useRef<HTMLDivElement>(null)\n\n  const scrolledIntoViewRef = useRef(false)\n\n  const style = useMemo<CSSProperties>(\n    () => ({\n      width: `${rect.w}px`,\n      height: `${rect.h}px`,\n      transform: `translate(${rect.x}px, ${rect.y}px)`,\n    }),\n    [rect],\n  )\n\n  useEffect(() => {\n    if (\n      !scrolledIntoViewRef.current &&\n      !wasMaybeCollapsed &&\n      focused === true &&\n      ref.current &&\n      enableScrollIntoView\n    ) {\n      const target = ref.current\n      scrollIntoView(ref.current, {\n        // Workaround issue with scroll-into-view-if-needed struggling with iframes\n        behavior: (actions) => {\n          if (actions.length === 0) {\n            // An empty actions list equals scrolling isn't needed\n            return\n          }\n          // Uses native scrollIntoView to ensure iframes behave correctly\n          target.scrollIntoView({\n            behavior: 'smooth',\n            block: 'center',\n            inline: 'nearest',\n          })\n        },\n        scrollMode: 'if-needed',\n        block: 'center',\n        inline: 'nearest',\n      })\n    }\n\n    scrolledIntoViewRef.current = focused === true\n  }, [focused, wasMaybeCollapsed, enableScrollIntoView])\n\n  const [isNearTop, setIsNearTop] = useState(false)\n  useEffect(() => {\n    if (!ref.current || !hovered) return undefined\n\n    const io = new IntersectionObserver(\n      ([intersection]) => {\n        setIsNearTop(intersection.boundingClientRect.top < 0)\n      },\n      {threshold: 1},\n    )\n    io.observe(ref.current)\n    return () => io.disconnect()\n  }, [hovered, isNearTop])\n\n  const [activeExclusivePlugin, setActiveExclusivePlugin] = useState<{\n    plugin: OverlayPluginExclusiveDefinition\n    context: OverlayComponentResolverContext\n  } | null>(null)\n\n  const closeExclusivePluginView = useCallback(() => {\n    setActiveExclusivePlugin(null)\n    window.dispatchEvent(new CustomEvent('sanity-overlay/exclusive-plugin-closed'))\n  }, [])\n\n  const onActivateExclusivePlugin = useCallback(\n    (plugin: OverlayPluginExclusiveDefinition, context: OverlayComponentResolverContext) => {\n      setActiveExclusivePlugin({plugin, context})\n    },\n    [],\n  )\n\n  const handleExclusivePluginClick: MouseEventHandler<HTMLDivElement> = (event) => {\n    event.stopPropagation()\n  }\n\n  const ExclusivePluginComponent = activeExclusivePlugin?.plugin.component\n\n  const [menuOpen, setMenuOpen] = useState(false)\n\n  useEffect(() => {\n    setMenuOpen(false)\n  }, [hovered])\n\n  return (\n    <>\n      {menuOpen || ExclusivePluginComponent ? (\n        <PopoverBackground onDismiss={closeExclusivePluginView} blockScroll={menuOpen} />\n      ) : null}\n      <Root\n        data-focused={focused ? '' : undefined}\n        data-hovered={hovered ? '' : undefined}\n        data-flipped={isNearTop ? '' : undefined}\n        data-draggable={draggable ? '' : undefined}\n        data-menu-open={menuOpen ? '' : undefined}\n        ref={ref}\n        style={style}\n      >\n        {ExclusivePluginComponent ? (\n          <ExclusivePluginContainer\n            data-sanity-overlay-element\n            onClick={handleExclusivePluginClick}\n          >\n            <ExclusivePluginComponent\n              {...activeExclusivePlugin.context}\n              closeExclusiveView={closeExclusivePluginView}\n            />\n          </ExclusivePluginContainer>\n        ) : hovered ? (\n          <ElementOverlayInner\n            {...props}\n            onActivateExclusivePlugin={onActivateExclusivePlugin}\n            onMenuOpenChange={setMenuOpen}\n          />\n        ) : null}\n      </Root>\n    </>\n  )\n})\n\ninterface NodePluginCollection {\n  id: string\n  context: OverlayComponentResolverContext\n  hud: OverlayPluginHudDefinition[]\n  exclusive: OverlayPluginExclusiveDefinition[]\n}\n\nfunction useResolvedNodePlugins(\n  componentContexts: OverlayComponentResolverContext[],\n  plugins?: OverlayPluginDefinition[],\n) {\n  return useMemo(\n    () =>\n      componentContexts.map((componentContext) => {\n        const instance: NodePluginCollection = {\n          id: uuid(),\n          context: componentContext,\n          hud: [],\n          exclusive: [],\n        }\n\n        plugins?.forEach((plugin) => {\n          if (!plugin.guard?.(componentContext)) return\n          if (plugin.type === 'hud') instance.hud.push(plugin)\n          if (plugin.type === 'exclusive') instance.exclusive.push(plugin)\n        })\n\n        return instance\n      }),\n    [componentContexts, plugins],\n  )\n}\n\nfunction useCustomComponents(\n  componentContext: OverlayComponentResolverContext | undefined,\n  componentResolver: OverlayComponentResolver | undefined,\n) {\n  return useMemo(() => {\n    if (!componentContext) return undefined\n    const resolved = componentResolver?.(componentContext)\n    if (!resolved) return undefined\n\n    if (isReactElementOverlayComponent(resolved)) {\n      return resolved\n    }\n\n    return (Array.isArray(resolved) ? resolved : [resolved]).map((component) => {\n      if (typeof component === 'object' && 'component' in component) {\n        return component\n      }\n      return {component, props: {}}\n    })\n  }, [componentResolver, componentContext])\n}\n\nconst Link = memo(function Link(props: {href: string}) {\n  const referer = useSyncExternalStore(\n    useCallback((onStoreChange) => {\n      const handlePopState = () => onStoreChange()\n      window.addEventListener('popstate', handlePopState)\n      return () => window.removeEventListener('popstate', handlePopState)\n    }, []),\n    () => window.location.href,\n  )\n  const href = useMemo(() => getLinkHref(props.href, referer), [props.href, referer])\n\n  return (\n    <Box as=\"a\" href={href} target=\"_blank\" rel=\"noopener noreferrer\">\n      <ActionOpen padding={2}>\n        <Text size={1} weight=\"medium\">\n          Open in Studio\n        </Text>\n      </ActionOpen>\n    </Box>\n  )\n})\n","import type {FunctionComponent} from 'react'\nimport type {OverlayRect} from '../types'\n\nexport const OverlayDragGroupRect: FunctionComponent<{\n  dragGroupRect: OverlayRect\n}> = ({dragGroupRect}) => {\n  return (\n    <div\n      style={{\n        position: 'absolute',\n        top: `${dragGroupRect.y}px`,\n        left: `${dragGroupRect.x}px`,\n        width: `${dragGroupRect.w - 1}px`,\n        height: `${dragGroupRect.h - 1}px`,\n        border: '1px dashed #f0709b',\n        pointerEvents: 'none',\n      }}\n    ></div>\n  )\n}\n","import type {FunctionComponent} from 'react'\nimport type {DragInsertPosition} from '../types'\n\nconst markerThickness = 6\n\nfunction lerp(v0: number, v1: number, t: number) {\n  return v0 * (1 - t) + v1 * t\n}\n\nexport const OverlayDragInsertMarker: FunctionComponent<{\n  dragInsertPosition: DragInsertPosition\n}> = ({dragInsertPosition}) => {\n  if (dragInsertPosition === null) return\n\n  const flow = dragInsertPosition?.left || dragInsertPosition?.right ? 'horizontal' : 'vertical'\n\n  let x = 0\n  let y = 0\n  let width = 0\n  let height = 0\n  const offsetMultiplier = 0.0125\n\n  if (flow === 'horizontal') {\n    const {left, right} = dragInsertPosition\n\n    width = markerThickness\n\n    if (right && left) {\n      const startX = left.rect.x + left.rect.w\n      const endX = right.rect.x\n      const targetHeight = Math.min(right.rect.h, left.rect.h)\n      const offset = targetHeight * offsetMultiplier\n\n      x = lerp(startX, endX, 0.5) - markerThickness / 2\n      y = left.rect.y + offset\n\n      height = Math.min(right.rect.h, left.rect.h) - offset * 2\n    } else if (right && !left) {\n      const targetHeight = right.rect.h\n      const offset = targetHeight * offsetMultiplier\n\n      x = right.rect.x - markerThickness / 2\n      y = right.rect.y + offset\n      height = right.rect.h - offset * 2\n    } else if (left && !right) {\n      const targetHeight = left.rect.h\n      const offset = targetHeight * offsetMultiplier\n\n      x = left.rect.x + left.rect.w - markerThickness / 2\n      y = left.rect.y + offset\n      height = left.rect.h - offset * 2\n    }\n  } else {\n    const {bottom, top} = dragInsertPosition\n\n    if (bottom && top) {\n      const startX = Math.min(top.rect.x, bottom.rect.x)\n      const startY = top.rect.y + top.rect.h\n      const endY = bottom.rect.y\n      const targetWidth = Math.min(bottom.rect.w, top.rect.w)\n      const offset = targetWidth * offsetMultiplier\n\n      height = markerThickness\n\n      x = startX + offset\n      y = lerp(startY, endY, 0.5) - markerThickness / 2\n      width = Math.max(bottom.rect.w, top.rect.w) - offset * 2\n    } else if (bottom && !top) {\n      const targetWidth = bottom.rect.w\n      const offset = targetWidth * offsetMultiplier\n\n      x = bottom.rect.x + offset\n      y = bottom.rect.y - markerThickness / 2\n      width = bottom.rect.w - offset * 2\n      height = markerThickness\n    } else if (top && !bottom) {\n      const targetWidth = top.rect.w\n      const offset = targetWidth * offsetMultiplier\n\n      x = top.rect.x + offset\n      y = top.rect.y + top.rect.h - markerThickness / 2\n      width = top.rect.w - offset * 2\n      height = markerThickness\n    }\n  }\n\n  return (\n    <div\n      style={{\n        position: 'absolute',\n        width: `${width}px`,\n        height: `${height}px`,\n        transform: `translate(${x}px, ${y}px)`,\n        background: '#556bfc',\n        border: '2px solid white',\n        borderRadius: '999px',\n        zIndex: '999999',\n      }}\n    ></div>\n  )\n}\n","import {Card, usePrefersDark, useTheme_v2} from '@sanity/ui/_visual-editing'\nimport type {FunctionComponent} from 'react'\nimport {styled} from 'styled-components'\nimport type {DragSkeleton} from '../types'\n\nconst Root = styled.div<{\n  $width: number\n  $height: number\n  $offsetX: number\n  $offsetY: number\n  $scaleFactor: number\n}>`\n  --drag-preview-opacity: 0.98;\n  --drag-preview-skeleton-stroke: #ffffff;\n\n  @media (prefers-color-scheme: dark) {\n    --drag-preview-skeleton-stroke: #383d51;\n  }\n\n  position: fixed;\n  display: grid;\n  transform: ${({$scaleFactor, $width, $height}) =>\n    `translate(calc(var(--drag-preview-x) - ${$width / 2}px), calc(var(--drag-preview-y) - ${$height / 2}px)) scale(${$scaleFactor})`};\n  width: ${({$width}) => `${$width}px`};\n  height: ${({$height}) => `${$height}px`};\n  z-index: 9999999;\n  opacity: var(--drag-preview-opacity);\n  cursor: move;\n\n  .drag-preview-content-wrapper {\n    position: relative;\n    width: 100%;\n    height: 100%;\n    container-type: inline-size;\n  }\n\n  [data-ui='card'] {\n    position: relative;\n    width: 100%;\n    height: 100%;\n  }\n\n  .drag-preview-skeleton {\n    position: absolute;\n    inset: 0;\n\n    rect {\n      stroke: var(--drag-preview-skeleton-stroke);\n    }\n  }\n\n  .drag-preview-handle {\n    position: absolute;\n    top: 4cqmin;\n    left: 4cqmin;\n    width: 6cqmin;\n    fill: var(--drag-preview-handle-fill);\n  }\n`\n\nfunction clamp(number: number, min: number, max: number): number {\n  return number < min ? min : number > max ? max : number\n}\n\nfunction map(number: number, inMin: number, inMax: number, outMin: number, outMax: number): number {\n  const mapped: number = ((number - inMin) * (outMax - outMin)) / (inMax - inMin) + outMin\n  return clamp(mapped, outMin, outMax)\n}\n\nexport const OverlayDragPreview: FunctionComponent<{skeleton: DragSkeleton}> = ({skeleton}) => {\n  const maxSkeletonWidth = Math.min(skeleton.maxWidth, window.innerWidth / 2)\n  const scaleFactor = skeleton.w > maxSkeletonWidth ? maxSkeletonWidth / skeleton.w : 1\n\n  const offsetX = skeleton.offsetX * scaleFactor\n  const offsetY = skeleton.offsetY * scaleFactor\n\n  const prefersDark = usePrefersDark()\n  const theme = useTheme_v2()\n\n  const radius = theme.radius[~~map(skeleton.w, 0, 1920, 1, theme.radius.length - 2)]\n\n  const imageRects = skeleton.childRects.filter((r) => r.tagName === 'IMG')\n  const textRects = skeleton.childRects.filter((r) => r.tagName !== 'IMG')\n\n  return (\n    <Root\n      $width={skeleton.w}\n      $height={skeleton.h}\n      $offsetX={offsetX}\n      $offsetY={offsetY}\n      $scaleFactor={scaleFactor}\n    >\n      <Card\n        radius={radius}\n        shadow={4}\n        overflow=\"hidden\"\n        tone=\"transparent\"\n        scheme={prefersDark ? 'dark' : 'light'}\n      >\n        <div className=\"drag-preview-content-wrapper\">\n          <svg className=\"drag-preview-skeleton\" viewBox={`0 0 ${skeleton.w} ${skeleton.h}`}>\n            {/* render image rects first to account for background images overlapping text */}\n            {[...imageRects, ...textRects].map((r, i) => (\n              <rect\n                key={i}\n                x={r.x}\n                y={r.y}\n                width={r.w}\n                height={r.h}\n                fill={theme.color.skeleton.from}\n              ></rect>\n            ))}\n          </svg>\n        </div>\n      </Card>\n    </Root>\n  )\n}\n","import {ExpandIcon} from '@sanity/icons'\nimport {Card, Flex, Hotkeys, Text} from '@sanity/ui/_visual-editing'\nimport type {FunctionComponent} from 'react'\nimport {styled} from 'styled-components'\n\nconst Root = styled(Card)`\n  position: fixed;\n  bottom: 2rem;\n  left: 2rem;\n`\n\nexport const OverlayMinimapPrompt: FunctionComponent = () => {\n  return (\n    <Root padding={2} shadow={2} radius={2} style={{zIndex: '999999'}}>\n      <Flex align=\"center\" gap={2}>\n        <Hotkeys keys={['Shift']} />\n        <Text size={1}>Zoom Out</Text>\n        <ExpandIcon />\n      </Flex>\n    </Root>\n  )\n}\n","import type {VisualEditingControllerMsg} from '@sanity/presentation-comlink'\nimport type {ElementState, OverlayMsg} from '../types'\n\n/**\n * Reducer for managing element state from received channel messages\n * @internal\n */\nexport const elementsReducer = (\n  elements: ElementState[],\n  message: OverlayMsg | VisualEditingControllerMsg,\n): ElementState[] => {\n  const {type} = message\n  switch (type) {\n    case 'element/register': {\n      const elementExists = !!elements.find((e) => e.id === message.id)\n      if (elementExists) return elements\n\n      return [\n        ...elements,\n        {\n          id: message.id,\n          activated: false,\n          element: message.element,\n          focused: false,\n          hovered: false,\n          rect: message.rect,\n          sanity: message.sanity,\n          dragDisabled: message.dragDisabled,\n          targets: message.targets,\n          elementType: message.elementType,\n        },\n      ]\n    }\n    case 'element/activate':\n      return elements.map((e) => {\n        if (e.id === message.id) {\n          return {...e, activated: true}\n        }\n        return e\n      })\n    case 'element/update': {\n      return elements.map((e) => {\n        if (e.id === message.id) {\n          return {\n            ...e,\n            sanity: message.sanity,\n            rect: message.rect,\n            targets: message.targets,\n            elementType: message.elementType,\n          }\n        }\n        return e\n      })\n    }\n    case 'element/unregister':\n      return elements.filter((e) => e.id !== message.id)\n    case 'element/deactivate':\n      return elements.map((e) => {\n        if (e.id === message.id) {\n          return {...e, activated: false, hovered: false}\n        }\n        return e\n      })\n    case 'element/mouseenter':\n      return elements.map((e) => {\n        if (e.id === message.id) {\n          return {...e, rect: message.rect, hovered: true}\n        }\n        return {...e, hovered: false}\n      })\n    case 'element/mouseleave':\n      return elements.map((element) => {\n        if (element.id === message.id) {\n          return {...element, hovered: false}\n        }\n        return element\n      })\n    case 'element/updateRect':\n      return elements.map((element) => {\n        if (element.id === message.id) {\n          return {...element, rect: message.rect}\n        }\n        return element\n      })\n    case 'element/click':\n      return elements.map((e) => {\n        return {...e, focused: e.id === message.id && 'clicked'}\n      })\n    case 'overlay/reset-mouse-state':\n      return elements.map((e) => {\n        return {...e, focused: false, hovered: false}\n      })\n    case 'overlay/blur':\n      return elements.map((e) => {\n        return {...e, focused: false}\n      })\n    case 'presentation/blur':\n      return elements.map((e) => {\n        return {...e, focused: false}\n      })\n    case 'presentation/focus': {\n      // Before setting the focus state of each element, check to see if any\n      // element has gained focus from an `element/click` message. Presentation\n      // tool \"reflects\" these back as a `presentation/focus` message.\n      const clickedElement = elements.find((e) => e.focused === 'clicked')\n      return elements.map((e) => {\n        // We want to focus any element which matches the received id and path\n        const focused =\n          'path' in e.sanity &&\n          e.sanity.id === message.data.id &&\n          e.sanity.path === message.data.path\n\n        // If we have a 'clicked' element, and that element matches, it is a\n        // reflection, so we maintain the focus state\n        if (clickedElement && e === clickedElement && focused) {\n          return e\n        }\n\n        return {\n          ...e,\n          // Mark as a dupe if another matching item has been clicked to prevent\n          // scrolling, otherwise just set focus as a boolean\n          focused: focused && clickedElement ? 'duplicate' : focused,\n        }\n      })\n    }\n    default:\n      return elements\n  }\n}\n","import type {ClientPerspective} from '@sanity/client'\nimport type {SanityNode, VisualEditingControllerMsg} from '@sanity/presentation-comlink'\nimport type {\n  DragInsertPosition,\n  DragSkeleton,\n  ElementState,\n  OverlayMsg,\n  OverlayRect,\n} from '../types'\nimport {elementsReducer} from './elementsReducer'\n\nexport interface OverlayState {\n  contextMenu: {\n    node: SanityNode\n    position: {\n      x: number\n      y: number\n    }\n  } | null\n  focusPath: string\n  elements: ElementState[]\n  wasMaybeCollapsed: boolean\n  perspective: ClientPerspective\n  isDragging: boolean\n  dragInsertPosition: DragInsertPosition\n  dragSkeleton: DragSkeleton | null\n  dragShowMinimap: boolean\n  dragShowMinimapPrompt: boolean\n  dragMinimapTransition: boolean\n  dragGroupRect: OverlayRect | null\n}\n\nexport function overlayStateReducer(\n  state: OverlayState,\n  message: OverlayMsg | VisualEditingControllerMsg,\n): OverlayState {\n  const {type} = message\n  let {\n    contextMenu,\n    focusPath,\n    perspective,\n    isDragging,\n    dragInsertPosition,\n    dragShowMinimap,\n    dragShowMinimapPrompt,\n    dragSkeleton,\n    dragMinimapTransition,\n    dragGroupRect,\n  } = state\n  let wasMaybeCollapsed = false\n\n  if (type === 'presentation/focus') {\n    const prevFocusPath = state.focusPath\n\n    focusPath = message.data.path\n\n    if (prevFocusPath !== focusPath) {\n      wasMaybeCollapsed = prevFocusPath.slice(focusPath.length).startsWith('[')\n    }\n  }\n\n  if (type === 'presentation/perspective') {\n    perspective = message.data.perspective\n  }\n\n  if (type === 'element/contextmenu') {\n    if ('sanity' in message) {\n      contextMenu = {node: message.sanity, position: message.position}\n    } else {\n      contextMenu = null\n    }\n  }\n\n  if (\n    type === 'element/click' ||\n    type === 'element/mouseleave' ||\n    type === 'overlay/blur' ||\n    type === 'presentation/blur' ||\n    type === 'presentation/focus'\n  ) {\n    contextMenu = null\n  }\n\n  if (type === 'overlay/dragUpdateInsertPosition') {\n    dragInsertPosition = message.insertPosition\n  }\n\n  if (type === 'overlay/dragStart') {\n    isDragging = true\n  }\n\n  if (message.type === 'overlay/dragUpdateSkeleton') {\n    dragSkeleton = message.skeleton\n  }\n\n  if (type === 'overlay/dragEnd') {\n    isDragging = false\n  }\n\n  if (message.type === 'overlay/dragToggleMinimapPrompt') {\n    dragShowMinimapPrompt = message.display\n  }\n\n  if (type === 'overlay/dragStartMinimapTransition') {\n    dragMinimapTransition = true\n  }\n\n  if (type === 'overlay/dragEndMinimapTransition') {\n    dragMinimapTransition = false\n  }\n\n  if (type === 'overlay/dragUpdateGroupRect') {\n    dragGroupRect = message.groupRect\n  }\n\n  if (type === 'overlay/dragToggleMinimap') {\n    dragShowMinimap = message.display\n  }\n\n  return {\n    ...state,\n    contextMenu,\n    elements: elementsReducer(state.elements, message),\n    dragInsertPosition,\n    dragSkeleton,\n    dragGroupRect,\n    isDragging,\n    focusPath,\n    perspective,\n    wasMaybeCollapsed,\n    dragShowMinimap,\n    dragShowMinimapPrompt,\n    dragMinimapTransition,\n  }\n}\n","import {\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n  type FunctionComponent,\n  type PropsWithChildren,\n} from 'react'\nimport type {VisualEditingNode} from '../../types'\nimport {PreviewSnapshotsContext, type PreviewSnapshotsContextValue} from './PreviewSnapshotsContext'\n\nexport const PreviewSnapshotsProvider: FunctionComponent<\n  PropsWithChildren<{\n    comlink?: VisualEditingNode\n  }>\n> = function (props) {\n  const {comlink, children} = props\n\n  const [previewSnapshots, setPreviewSnapshots] = useState<PreviewSnapshotsContextValue>([])\n\n  const fetchPreviewSnapshots = useCallback(\n    async (signal: AbortSignal) => {\n      if (!comlink) return\n      try {\n        const response = await comlink.fetch('visual-editing/preview-snapshots', undefined, {\n          signal,\n          suppressWarnings: true,\n        })\n        setPreviewSnapshots(response.snapshots)\n      } catch {\n        // Fail silently as the app may be communicating with a version of\n        // Presentation that does not support this feature\n      }\n    },\n    [comlink],\n  )\n  useEffect(() => {\n    if (!comlink) return\n\n    const previewSapshotsFetch = new AbortController()\n    const unsub = comlink.onStatus(() => {\n      fetchPreviewSnapshots(previewSapshotsFetch.signal)\n    }, 'connected')\n\n    return () => {\n      previewSapshotsFetch.abort()\n      unsub()\n    }\n  }, [comlink, fetchPreviewSnapshots])\n\n  useEffect(() => {\n    return comlink?.on('presentation/preview-snapshots', (data) => {\n      setPreviewSnapshots(data.snapshots)\n    })\n  }, [comlink])\n\n  const context = useMemo<PreviewSnapshotsContextValue>(() => previewSnapshots, [previewSnapshots])\n  return (\n    <PreviewSnapshotsContext.Provider value={context}>{children}</PreviewSnapshotsContext.Provider>\n  )\n}\n","import type {\n  DocumentSchema,\n  ResolvedSchemaTypeMap,\n  SanityNode,\n  SanityStegaNode,\n  SchemaType,\n  TypeSchema,\n  UnresolvedPath,\n} from '@sanity/presentation-comlink'\nimport {\n  useCallback,\n  useDeferredValue,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n  type FunctionComponent,\n  type PropsWithChildren,\n} from 'react'\nimport type {\n  ElementState,\n  OverlayElementField,\n  OverlayElementParent,\n  VisualEditingNode,\n} from '../../types'\nimport {SchemaContext, type SchemaContextValue} from './SchemaContext'\n\nfunction isSanityNode(node: SanityNode | SanityStegaNode): node is SanityNode {\n  return 'path' in node\n}\n\nfunction isDocumentSchemaType(type: SchemaType): type is DocumentSchema {\n  return type.type === 'document'\n}\n\nfunction isTypeSchemaType(type: SchemaType): type is TypeSchema {\n  return type.type === 'type'\n}\n\nfunction popUnkeyedPathSegments(path: string): string {\n  return path\n    .split('.')\n    .toReversed()\n    .reduce((acc, part) => {\n      if (acc.length) return [part, ...acc]\n      if (part.includes('[_key==')) return [part]\n      return []\n    }, [] as string[])\n    .join('.')\n}\n\nfunction getPathsWithUnresolvedTypes(elements: ElementState[]): {id: string; path: string}[] {\n  return elements.reduce((acc, element) => {\n    const {sanity} = element\n    if (!('id' in sanity)) return acc\n    if (!sanity.path.includes('[_key==')) return acc\n    const path = popUnkeyedPathSegments(sanity.path)\n    if (!acc.find((item) => item.id === sanity.id && item.path === path)) {\n      acc.push({id: sanity.id, path})\n    }\n    return acc\n  }, [] as UnresolvedPath[])\n}\n\nexport const SchemaProvider: FunctionComponent<\n  PropsWithChildren<{\n    comlink?: VisualEditingNode\n    elements: ElementState[]\n  }>\n> = function (props) {\n  const {comlink, children, elements} = props\n\n  const [resolvedTypes, setResolvedTypes] = useState<ResolvedSchemaTypeMap>(new Map())\n\n  const [schema, setSchema] = useState<SchemaType[] | null>(null)\n\n  useEffect(() => {\n    if (!comlink) return\n\n    async function fetchSchema(signal: AbortSignal) {\n      if (!comlink) return\n      try {\n        const response = await comlink.fetch('visual-editing/schema', undefined, {\n          signal,\n          suppressWarnings: true,\n        })\n        setSchema(response.schema)\n      } catch {\n        // Fail silently as the app may be communicating with a version of\n        // Presentation that does not support this feature\n      }\n    }\n    const schemaFetch = new AbortController()\n    const unsub = comlink.onStatus(() => {\n      fetchSchema(schemaFetch.signal)\n    }, 'connected')\n\n    return () => {\n      schemaFetch.abort()\n      unsub()\n    }\n  }, [comlink])\n\n  const reportedPathsRef = useRef<UnresolvedPath[]>([])\n  const paths = getPathsWithUnresolvedTypes(useDeferredValue(elements))\n  const controllerRef = useRef<AbortController | null>(null)\n\n  useEffect(() => {\n    if (!paths.length || !comlink) return\n    // We report a list of paths that reference array items using a _key. We need\n    // to resolve the types of each of these items so we can map them to the\n    // correct schema types. One day CSM might include this data for us.\n    const reportPaths = async (paths: UnresolvedPath[], signal: AbortSignal) => {\n      const initialReportedPaths = reportedPathsRef.current\n      try {\n        reportedPathsRef.current = paths\n        const response = await comlink.fetch(\n          'visual-editing/schema-union-types',\n          {paths},\n          {signal, suppressWarnings: true},\n        )\n        if (signal.aborted) return\n        setResolvedTypes(response.types)\n        controllerRef.current = null\n      } catch {\n        // Fail silently as the app may be communicating with a version of\n        // Presentation that does not support this feature\n      }\n      if (signal.aborted) {\n        reportedPathsRef.current = initialReportedPaths\n      }\n    }\n\n    if (\n      paths.some(\n        (p) => !reportedPathsRef.current.find(({id, path}) => id === p.id && path === p.path),\n      )\n    ) {\n      // Abort any previous requests\n      controllerRef.current?.abort()\n      controllerRef.current = new AbortController()\n      reportPaths(paths, controllerRef.current.signal)\n    }\n  }, [comlink, paths])\n\n  const getType = useCallback(\n    <T extends 'document' | 'type' = 'document'>(\n      node: SanityNode | SanityStegaNode | string,\n      _type?: T,\n    ): T extends 'document' ? DocumentSchema | undefined : TypeSchema | undefined => {\n      const type = _type || 'document'\n      if (\n        !schema ||\n        (typeof node !== 'string' && (!isSanityNode(node) || !Array.isArray(schema)))\n      ) {\n        return undefined\n      }\n      const name = typeof node === 'string' ? node : node.type\n      const filter = type === 'document' ? isDocumentSchemaType : isTypeSchemaType\n      return schema\n        .filter(filter)\n        .find((schemaType) => schemaType.name === name) as T extends 'document'\n        ? DocumentSchema | undefined\n        : TypeSchema | undefined\n    },\n    [schema],\n  )\n\n  const getField = useCallback(\n    (\n      node: SanityNode | SanityStegaNode,\n    ): {\n      field: OverlayElementField\n      parent: OverlayElementParent\n    } => {\n      if (!isSanityNode(node)) {\n        return {\n          field: undefined,\n          parent: undefined,\n        }\n      }\n\n      const schemaType = getType(node)\n\n      if (!schemaType) {\n        return {\n          field: undefined,\n          parent: undefined,\n        }\n      }\n      function fieldFromPath(\n        schemaType: OverlayElementParent,\n        path: string[],\n        parent: OverlayElementParent,\n        prevPath: string[] = [],\n      ): {\n        field: OverlayElementField\n        parent: OverlayElementParent\n      } {\n        if (!schemaType) {\n          return {field: undefined, parent: undefined}\n        }\n\n        const [next, ...rest] = path\n\n        if ('fields' in schemaType) {\n          const objectField = schemaType.fields[next]\n          if (!objectField && 'rest' in schemaType) {\n            return fieldFromPath(schemaType.rest, path, schemaType, prevPath)\n          }\n          if (!rest.length) {\n            return {field: objectField, parent}\n          }\n          if (!objectField) {\n            throw new Error(\n              `[@sanity/visual-editing] No field could be resolved at path: \"${[...prevPath, ...path].join('.')}\"`,\n            )\n          }\n          return fieldFromPath(objectField.value, rest, schemaType, [...prevPath, next])\n        } else if (schemaType.type === 'array') {\n          return fieldFromPath(schemaType.of, path, schemaType, prevPath)\n        } else if (schemaType.type === 'arrayItem') {\n          if (!rest.length) return {field: schemaType, parent}\n          return fieldFromPath(schemaType.value, rest, schemaType, [...prevPath, next])\n        } else if (schemaType.type === 'union') {\n          const name = next.startsWith('[_key==')\n            ? resolvedTypes\n                ?.get((node as SanityNode).id)\n                ?.get([prevPath.join('.'), next].filter(Boolean).join(''))\n            : next\n          return fieldFromPath(\n            schemaType.of.find((item) => (item.type === 'unionOption' ? item.name === name : item)),\n            rest,\n            schemaType,\n            [...prevPath, next],\n          )\n        } else if (schemaType.type === 'unionOption') {\n          if (!next) return {field: schemaType, parent}\n          return fieldFromPath(schemaType.value, path, schemaType, prevPath)\n        } else if (schemaType.type === 'inline') {\n          const type = getType(schemaType.name, 'type')\n          return fieldFromPath((type as TypeSchema).value, path, schemaType, prevPath)\n        }\n        throw new Error(\n          `[@sanity/visual-editing] No field could be resolved at path: \"${[...prevPath, ...path].join('.')}\"`,\n        )\n      }\n\n      const nodePath = node.path.split('.').flatMap((part) => {\n        if (part.includes('[')) {\n          return part.split(/(\\[.+\\])/, 2)\n        }\n        return [part]\n      })\n\n      try {\n        return fieldFromPath(schemaType, nodePath, undefined)\n      } catch (e) {\n        // eslint-disable-next-line no-console\n        if (e instanceof Error) console.warn(e.message)\n        return {field: undefined, parent: undefined}\n      }\n    },\n    [getType, resolvedTypes],\n  )\n\n  const context = useMemo<SchemaContextValue>(() => ({getField, getType}), [getField, getType])\n\n  return <SchemaContext.Provider value={context}>{children}</SchemaContext.Provider>\n}\n","import type {SerializableObject} from '@sanity/presentation-comlink'\nimport {useEffect, useMemo, type FunctionComponent, type PropsWithChildren} from 'react'\nimport type {VisualEditingNode} from '../../types'\nimport {SharedStateContext} from './SharedStateContext'\n\nconst createStore = (initialState: SerializableObject) => {\n  let state = initialState\n  const getState = () => state\n  const listeners = new Set<() => void>()\n  const setState = (fn: (state: SerializableObject) => SerializableObject) => {\n    state = fn(state)\n    listeners.forEach((l) => l())\n  }\n  const subscribe = (listener: () => void) => {\n    listeners.add(listener)\n    return () => listeners.delete(listener)\n  }\n  return {getState, setState, subscribe}\n}\n\nconst store = createStore({})\n\nexport const SharedStateProvider: FunctionComponent<\n  PropsWithChildren<{\n    comlink?: VisualEditingNode\n  }>\n> = (props) => {\n  const {comlink, children} = props\n\n  useEffect(() => {\n    return comlink?.on('presentation/shared-state', (data) => {\n      if ('value' in data) {\n        store.setState((prev) => ({...prev, [data.key]: data.value}))\n      } else {\n        store.setState((prev) => {\n          return Object.fromEntries(Object.entries(prev).filter(([key]) => key !== data.key))\n        })\n      }\n    })\n  }, [comlink])\n\n  useEffect(() => {\n    async function fetch() {\n      const value = await comlink?.fetch('visual-editing/shared-state', undefined, {\n        suppressWarnings: true,\n      })\n      if (value) {\n        store.setState(() => value.state)\n      }\n    }\n    fetch().catch((reason) => {\n      // eslint-disable-next-line no-console\n      console.debug(reason)\n      // eslint-disable-next-line no-console\n      console.warn(\n        '[@sanity/visual-editing]: Failed to fetch shared state. Check your version of `sanity` is up-to-date',\n      )\n    })\n  }, [comlink])\n\n  const value = useMemo(() => ({comlink, store}), [comlink])\n\n  return <SharedStateContext.Provider value={value}>{children}</SharedStateContext.Provider>\n}\n","import {useCallback, type FunctionComponent, type PropsWithChildren} from 'react'\nimport type {VisualEditingNode} from '../../types'\nimport {events, TelemetryContext, type TelemetryContextValue} from './TelemetryContext'\n\nexport const TelemetryProvider: FunctionComponent<\n  PropsWithChildren<{comlink?: VisualEditingNode}>\n> = ({children, comlink}) => {\n  const log = useCallback<TelemetryContextValue>(\n    (name, data) => {\n      if (!comlink) return\n\n      const event = events[name]\n\n      if (!event) {\n        throw new Error(`Telemetry event: ${name} does not exist`)\n      } else {\n        comlink.post('visual-editing/telemetry-log', {event, data})\n      }\n    },\n    [comlink],\n  )\n\n  return <TelemetryContext.Provider value={log}>{children}</TelemetryContext.Provider>\n}\n","import {useEffect, useRef, type MutableRefObject} from 'react'\nimport {createOverlayController} from '../controller'\nimport {useOptimisticActorReady} from '../react/useOptimisticActor'\nimport type {OverlayController, OverlayEventHandler} from '../types'\n\n/**\n * Hook for using an overlay controller\n * @internal\n */\nexport function useController(\n  element: HTMLElement | null,\n  handler: OverlayEventHandler,\n  inFrame: boolean,\n  inPopUp: boolean,\n): MutableRefObject<OverlayController | undefined> {\n  const overlayController = useRef<OverlayController | undefined>(undefined)\n\n  const optimisticActorReady = useOptimisticActorReady()\n\n  useEffect(() => {\n    if (!element) return undefined\n\n    overlayController.current = createOverlayController({\n      handler,\n      overlayElement: element,\n      inFrame,\n      inPopUp,\n      optimisticActorReady,\n    })\n\n    return () => {\n      overlayController.current?.destroy()\n      overlayController.current = undefined\n    }\n  }, [element, handler, inFrame, inPopUp, optimisticActorReady])\n\n  return overlayController\n}\n","import type {VisualEditingControllerMsg} from '@sanity/presentation-comlink'\nimport {useEffect} from 'react'\nimport type {OverlayMsg, VisualEditingNode} from '../types'\n\nexport function usePerspectiveSync(\n  comlink: VisualEditingNode | undefined,\n  dispatch: (value: OverlayMsg | VisualEditingControllerMsg) => void,\n): void {\n  useEffect(() => {\n    const controller = new AbortController()\n    comlink\n      ?.fetch('visual-editing/fetch-perspective', undefined, {\n        signal: controller.signal,\n        suppressWarnings: true,\n      })\n      .then((data) => {\n        dispatch({type: 'presentation/perspective', data})\n      })\n      .catch(() => {\n        // Fail silently as the app may be communicating with a version of\n        // Presentation that does not support this feature\n      })\n\n    const unsub = comlink?.on('presentation/perspective', (data) => {\n      dispatch({type: 'presentation/perspective', data})\n    })\n\n    return () => {\n      unsub?.()\n      controller.abort()\n    }\n  }, [comlink, dispatch])\n}\n","import type {ClientPerspective, ContentSourceMapDocuments} from '@sanity/client'\nimport {useCallback, useEffect, useRef} from 'react'\nimport type {ElementState, SanityNode, VisualEditingNode} from '../types'\n\nfunction isEqualSets(a: Set<string>, b: Set<string>) {\n  if (a === b) return true\n  if (a.size !== b.size) return false\n  for (const value of a) if (!b.has(value)) return false\n  return true\n}\n\n/**\n * Hook for reporting in use documents to Presentation\n * @internal\n */\nexport function useReportDocuments(\n  comlink: VisualEditingNode | undefined,\n  elements: ElementState[],\n  perspective: ClientPerspective,\n): void {\n  const lastReported = useRef<\n    | {\n        nodeIds: Set<string>\n        perspective: ClientPerspective\n      }\n    | undefined\n  >(undefined)\n\n  const reportDocuments = useCallback(\n    (documents: ContentSourceMapDocuments, perspective: ClientPerspective) => {\n      comlink?.post('visual-editing/documents', {\n        documents,\n        perspective,\n      })\n    },\n    [comlink],\n  )\n\n  useEffect(() => {\n    // Report only nodes of type `SanityNode`. Untransformed `SanityStegaNode`\n    // nodes without an `id`, are not reported as they will not contain the\n    // necessary document data.\n    const nodes = elements\n      .map((e) => {\n        const {sanity} = e\n        if (!sanity || !('id' in sanity)) return null\n        return sanity\n      })\n      .filter((s) => !!s) as SanityNode[]\n\n    const nodeIds = new Set<string>(nodes.map((e) => e.id))\n    // Report if:\n    // - Documents not yet reported\n    // - Document IDs changed\n    // - Perspective changed\n    if (\n      !lastReported.current ||\n      !isEqualSets(nodeIds, lastReported.current.nodeIds) ||\n      perspective !== lastReported.current.perspective\n    ) {\n      const documentsOnPage: ContentSourceMapDocuments = Array.from(nodeIds).map((_id) => {\n        const node = nodes.find((node) => node.id === _id)!\n        const {type, projectId: _projectId, dataset: _dataset} = node\n        return _projectId && _dataset\n          ? {_id, _type: type!, _projectId, _dataset}\n          : {_id, _type: type!}\n      })\n      lastReported.current = {nodeIds, perspective}\n      reportDocuments(documentsOnPage, perspective)\n    }\n  }, [elements, perspective, reportDocuments])\n}\n","import type {ClientPerspective} from '@sanity/client'\nimport {getDraftId, getPublishedId} from '@sanity/client/csm'\nimport type {Status} from '@sanity/comlink'\nimport {type VisualEditingControllerMsg} from '@sanity/presentation-comlink'\nimport {\n  isHTMLAnchorElement,\n  isHTMLElement,\n  LayerProvider,\n  PortalProvider,\n  studioTheme,\n  ThemeProvider,\n  usePrefersDark,\n} from '@sanity/ui/_visual-editing'\nimport {\n  useCallback,\n  useEffect,\n  useMemo,\n  useReducer,\n  useRef,\n  useState,\n  type FunctionComponent,\n} from 'react'\nimport {styled} from 'styled-components'\nimport {useOptimisticActor, useOptimisticActorReady} from '../react/useOptimisticActor'\nimport type {\n  OverlayComponentResolver,\n  OverlayEventHandler,\n  OverlayMsg,\n  OverlayPluginDefinition,\n  VisualEditingNode,\n} from '../types'\nimport {sanityNodesExistInSameArray} from '../util/findSanityNodes'\nimport {useDragEndEvents} from '../util/useDragEvents'\nimport {ContextMenu} from './context-menu/ContextMenu'\nimport {ElementOverlay} from './ElementOverlay'\nimport {OverlayDragGroupRect} from './OverlayDragGroupRect'\nimport {OverlayDragInsertMarker} from './OverlayDragInsertMarker'\nimport {OverlayDragPreview} from './OverlayDragPreview'\nimport {OverlayMinimapPrompt} from './OverlayMinimapPrompt'\nimport {overlayStateReducer} from './overlayStateReducer'\nimport {PreviewSnapshotsProvider} from './preview/PreviewSnapshotsProvider'\nimport {SchemaProvider} from './schema/SchemaProvider'\nimport {SharedStateProvider} from './shared-state/SharedStateProvider'\nimport {TelemetryProvider} from './telemetry/TelemetryProvider'\nimport {useTelemetry} from './telemetry/useTelemetry'\nimport {useController} from './useController'\nimport {usePerspectiveSync} from './usePerspectiveSync'\nimport {useReportDocuments} from './useReportDocuments'\n\nconst Root = styled.div<{\n  $zIndex?: string | number\n}>`\n  background-color: transparent;\n  direction: ltr;\n  inset: 0;\n  pointer-events: none;\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  z-index: ${({$zIndex}) => $zIndex ?? '9999999'};\n`\n\nfunction raf2(fn: () => void) {\n  let r0: number | undefined = undefined\n  let r1: number | undefined = undefined\n\n  r0 = requestAnimationFrame(() => {\n    r1 = requestAnimationFrame(fn)\n  })\n\n  return () => {\n    if (r0 !== undefined) cancelAnimationFrame(r0)\n    if (r1 !== undefined) cancelAnimationFrame(r1)\n  }\n}\n\nconst DocumentReporter: FunctionComponent<{\n  documentIds: string[]\n  perspective: ClientPerspective\n}> = (props) => {\n  const {documentIds} = props\n  const [uniqueIds, setUniqueIds] = useState<string[]>([])\n\n  useEffect(() => {\n    setUniqueIds((prev) => {\n      const next = Array.from(new Set(documentIds))\n      return prev.length === next.length &&\n        prev.reduce((acc, prevId) => acc.filter((id) => id !== prevId), next)?.length === 0\n        ? prev\n        : next\n    })\n  }, [documentIds])\n  const actor = useOptimisticActor()\n\n  useEffect(() => {\n    for (const id of uniqueIds) {\n      actor.send({type: 'observe', documentId: getDraftId(id)})\n      actor.send({type: 'observe', documentId: getPublishedId(id)})\n    }\n    return () => {\n      for (const id of uniqueIds) {\n        actor.send({type: 'unobserve', documentId: getDraftId(id)})\n        actor.send({type: 'unobserve', documentId: getPublishedId(id)})\n      }\n    }\n  }, [actor, uniqueIds])\n\n  return null\n}\n\nconst OverlaysController: FunctionComponent<{\n  comlink?: VisualEditingNode\n  dispatch: (value: OverlayMsg | VisualEditingControllerMsg) => void\n  inFrame: boolean\n  inPopUp: boolean\n  onDrag: (x: number, y: number) => void\n  overlayEnabled: boolean\n  rootElement: HTMLElement | null\n}> = (props) => {\n  const {comlink, dispatch, inFrame, inPopUp, onDrag, overlayEnabled, rootElement} = props\n  const {dispatchDragEndEvent} = useDragEndEvents()\n  const sendTelemetry = useTelemetry()\n\n  const overlayEventHandler: OverlayEventHandler = useCallback(\n    (message) => {\n      if (message.type === 'element/click') {\n        const {sanity} = message\n        comlink?.post('visual-editing/focus', sanity)\n\n        sendTelemetry('Visual Editing Overlay Clicked', null)\n      } else if (message.type === 'overlay/activate') {\n        comlink?.post('visual-editing/toggle', {enabled: true})\n      } else if (message.type === 'overlay/deactivate') {\n        comlink?.post('visual-editing/toggle', {enabled: false})\n      } else if (message.type === 'overlay/dragEnd') {\n        const {insertPosition, target, dragGroup, flow, preventInsertDefault} = message\n\n        dispatchDragEndEvent({insertPosition, target, dragGroup, flow, preventInsertDefault})\n\n        if (insertPosition) {\n          sendTelemetry('Visual Editing Drag Sequence Completed', null)\n        }\n      } else if (message.type === 'overlay/dragUpdateCursorPosition') {\n        onDrag(message.x, message.y)\n\n        return\n      } else if (message.type === 'overlay/dragToggleMinimap' && message.display === true) {\n        sendTelemetry('Visual Editing Drag Minimap Enabled', null)\n      } else if (message.type === 'overlay/setCursor') {\n        const {element, cursor} = message\n\n        if (cursor) {\n          element.style.cursor = cursor\n        } else {\n          element.style.removeProperty('cursor')\n        }\n      }\n\n      dispatch(message)\n    },\n    [comlink, dispatch, dispatchDragEndEvent, onDrag, sendTelemetry],\n  )\n\n  const controller = useController(rootElement, overlayEventHandler, inFrame, inPopUp)\n\n  useEffect(() => {\n    if (overlayEnabled) {\n      controller.current?.activate()\n    } else {\n      controller.current?.deactivate()\n    }\n  }, [controller, overlayEnabled])\n\n  return null\n}\n\n/**\n * @internal\n */\nexport const Overlays: FunctionComponent<{\n  comlink?: VisualEditingNode\n  comlinkStatus?: Status\n  componentResolver?: OverlayComponentResolver\n  plugins?: OverlayPluginDefinition[]\n  inFrame: boolean\n  inPopUp: boolean\n  zIndex?: string | number\n}> = (props) => {\n  const {\n    comlink,\n    comlinkStatus,\n    componentResolver: _componentResolver,\n    inFrame,\n    inPopUp,\n    zIndex,\n  } = props\n\n  const prefersDark = usePrefersDark()\n\n  const [\n    {\n      contextMenu,\n      dragInsertPosition,\n      dragShowMinimap,\n      dragShowMinimapPrompt,\n      dragSkeleton,\n      elements,\n      isDragging,\n      perspective,\n      wasMaybeCollapsed,\n      dragMinimapTransition,\n      dragGroupRect,\n    },\n    dispatch,\n  ] = useReducer(overlayStateReducer, {\n    contextMenu: null,\n    dragInsertPosition: null,\n    dragShowMinimap: false,\n    dragShowMinimapPrompt: false,\n    dragSkeleton: null,\n    elements: [],\n    focusPath: '',\n    isDragging: false,\n    perspective: 'published',\n    wasMaybeCollapsed: false,\n    dragMinimapTransition: false,\n    dragGroupRect: null,\n  })\n  const [rootElement, setRootElement] = useState<HTMLElement | null>(null)\n  const [overlayEnabled, setOverlayEnabled] = useState(true)\n\n  useEffect(() => {\n    const unsubs = [\n      comlink?.on('presentation/focus', (data) => {\n        dispatch({type: 'presentation/focus', data})\n      }),\n      comlink?.on('presentation/blur', (data) => {\n        dispatch({type: 'presentation/blur', data})\n      }),\n      comlink?.on('presentation/toggle-overlay', () => {\n        setOverlayEnabled((enabled) => !enabled)\n      }),\n    ].filter(Boolean)\n\n    return () => unsubs.forEach((unsub) => unsub!())\n  }, [comlink])\n\n  usePerspectiveSync(comlink, dispatch)\n\n  useReportDocuments(comlink, elements, perspective)\n\n  const updateDragPreviewCustomProps = useCallback(\n    (x: number, y: number) => {\n      if (!rootElement) return\n\n      rootElement.style.setProperty('--drag-preview-x', `${x}px`)\n      rootElement.style.setProperty('--drag-preview-y', `${y - window.scrollY}px`)\n    },\n    [rootElement],\n  )\n\n  useEffect(() => {\n    const handleClick = (event: MouseEvent) => {\n      const target = event.target\n\n      // We only need to modify the default behavior if the target is a link\n      const targetsLink = Boolean(\n        isHTMLAnchorElement(target) || (isHTMLElement(target) && target.closest('a')),\n      )\n\n      if (targetsLink && event.altKey) {\n        event.preventDefault()\n        event.stopPropagation()\n        const newEvent = new MouseEvent(event.type, {\n          ...event,\n          altKey: false,\n          bubbles: true,\n          cancelable: true,\n        })\n        event.target?.dispatchEvent(newEvent)\n      }\n    }\n\n    let altPressed = false\n\n    const handleKeyUp = (e: KeyboardEvent) => {\n      if (isAltKey(e) && altPressed) {\n        altPressed = false\n        setOverlayEnabled((enabled) => !enabled)\n      }\n    }\n\n    const handleKeydown = (e: KeyboardEvent) => {\n      if (isAltKey(e)) {\n        // Don't handle Alt if it's part of a complex shortcut\n        if (e.ctrlKey || e.metaKey || e.shiftKey) {\n          return\n        }\n\n        if (!altPressed) {\n          altPressed = true\n          setOverlayEnabled((enabled) => !enabled)\n        }\n      }\n\n      if (isHotkey(['mod', '\\\\'], e)) {\n        setOverlayEnabled((enabled) => !enabled)\n      }\n    }\n\n    // Reset Alt state if window loses focus\n    const handleWindowBlur = () => {\n      if (altPressed) {\n        altPressed = false\n        setOverlayEnabled((enabled) => !enabled) // Toggle back\n      }\n    }\n\n    window.addEventListener('click', handleClick)\n    window.addEventListener('keydown', handleKeydown)\n    window.addEventListener('keyup', handleKeyUp)\n    window.addEventListener('blur', handleWindowBlur)\n\n    return () => {\n      window.removeEventListener('click', handleClick)\n      window.removeEventListener('keydown', handleKeydown)\n      window.removeEventListener('keyup', handleKeyUp)\n      window.removeEventListener('blur', handleWindowBlur)\n    }\n  }, [setOverlayEnabled])\n\n  const [overlaysFlash, setOverlaysFlash] = useState(false)\n  const [fadingOut, setFadingOut] = useState(false)\n  const fadeOutTimeoutRef = useRef<NodeJS.Timeout | undefined>(undefined)\n\n  // Flash overlays when they are enabled\n  useEffect(() => {\n    if (overlayEnabled) {\n      return raf2(() => {\n        setOverlaysFlash(true)\n        raf2(() => {\n          setFadingOut(true)\n          fadeOutTimeoutRef.current = setTimeout(() => {\n            setFadingOut(false)\n            setOverlaysFlash(false)\n          }, 1500)\n        })\n      })\n    } else if (fadeOutTimeoutRef.current) {\n      clearTimeout(fadeOutTimeoutRef.current)\n      setOverlaysFlash(false)\n      setFadingOut(false)\n    }\n\n    return\n  }, [overlayEnabled])\n\n  const documentIds = useMemo(() => {\n    return elements.flatMap((element) => ('id' in element.sanity ? [element.sanity.id] : []))\n  }, [elements])\n\n  const closeContextMenu = useCallback(() => {\n    dispatch({type: 'overlay/blur'})\n  }, [])\n\n  const optimisticActorReady = useOptimisticActorReady()\n\n  const componentResolver = useMemo(() => {\n    return optimisticActorReady ? _componentResolver : undefined\n  }, [_componentResolver, optimisticActorReady])\n\n  const elementsToRender = useMemo(() => {\n    if (((inFrame || inPopUp) && comlinkStatus !== 'connected') || isDragging) {\n      return []\n    }\n\n    return elements\n      .filter((e) => e.activated || e.focused)\n      .map(({id, element, focused, hovered, rect, sanity, dragDisabled, targets, elementType}) => {\n        const draggable =\n          !dragDisabled &&\n          !!element.getAttribute('data-sanity') &&\n          optimisticActorReady &&\n          elements.some((e) =>\n            'id' in e.sanity && 'id' in sanity\n              ? sanityNodesExistInSameArray(e.sanity, sanity) && e.sanity.path !== sanity.path\n              : false,\n          )\n\n        return (\n          <ElementOverlay\n            comlink={comlink}\n            componentResolver={componentResolver}\n            plugins={props.plugins}\n            element={element}\n            enableScrollIntoView={!isDragging && !dragMinimapTransition && !dragShowMinimap}\n            key={id}\n            id={id}\n            focused={focused}\n            hovered={hovered}\n            node={sanity}\n            rect={rect}\n            // When inside a popup window we want actions to show up on hover, but iframes should hide them\n            showActions={!inFrame}\n            draggable={draggable}\n            isDragging={isDragging || dragMinimapTransition}\n            wasMaybeCollapsed={focused && wasMaybeCollapsed}\n            targets={targets}\n            elementType={elementType}\n          />\n        )\n      })\n  }, [\n    componentResolver,\n    props.plugins,\n    dragMinimapTransition,\n    dragShowMinimap,\n    elements,\n    inFrame,\n    inPopUp,\n    isDragging,\n    optimisticActorReady,\n    comlink,\n    comlinkStatus,\n    wasMaybeCollapsed,\n  ])\n\n  return (\n    <TelemetryProvider comlink={comlink}>\n      <ThemeProvider scheme={prefersDark ? 'dark' : 'light'} theme={studioTheme} tone=\"transparent\">\n        <LayerProvider>\n          <PortalProvider element={rootElement}>\n            <SchemaProvider comlink={comlink} elements={elements}>\n              <PreviewSnapshotsProvider comlink={comlink}>\n                <SharedStateProvider comlink={comlink}>\n                  <Root\n                    data-fading-out={fadingOut ? '' : undefined}\n                    data-overlays={overlaysFlash ? '' : undefined}\n                    ref={setRootElement}\n                    $zIndex={zIndex}\n                  >\n                    <DocumentReporter documentIds={documentIds} perspective={perspective} />\n                    <OverlaysController\n                      comlink={comlink}\n                      dispatch={dispatch}\n                      inFrame={inFrame}\n                      inPopUp={inPopUp}\n                      onDrag={updateDragPreviewCustomProps}\n                      overlayEnabled={overlayEnabled}\n                      rootElement={rootElement}\n                    />\n                    {contextMenu && <ContextMenu {...contextMenu} onDismiss={closeContextMenu} />}\n                    {elementsToRender}\n\n                    {isDragging && !dragMinimapTransition && (\n                      <>\n                        {dragInsertPosition && (\n                          <OverlayDragInsertMarker dragInsertPosition={dragInsertPosition} />\n                        )}\n                        {dragShowMinimapPrompt && <OverlayMinimapPrompt />}\n                        {dragGroupRect && <OverlayDragGroupRect dragGroupRect={dragGroupRect} />}\n                      </>\n                    )}\n                    {isDragging && dragSkeleton && <OverlayDragPreview skeleton={dragSkeleton} />}\n                  </Root>\n                </SharedStateProvider>\n              </PreviewSnapshotsProvider>\n            </SchemaProvider>\n          </PortalProvider>\n        </LayerProvider>\n      </ThemeProvider>\n    </TelemetryProvider>\n  )\n}\n\nconst IS_MAC =\n  typeof window != 'undefined' && /Mac|iPod|iPhone|iPad/.test(window.navigator.platform)\n\nconst MODIFIERS: Record<string, 'altKey' | 'ctrlKey' | 'metaKey' | 'shiftKey'> = {\n  alt: 'altKey',\n  ctrl: 'ctrlKey',\n  mod: IS_MAC ? 'metaKey' : 'ctrlKey',\n  shift: 'shiftKey',\n}\nfunction isHotkey(keys: string[], event: KeyboardEvent): boolean {\n  return keys.every((key) => {\n    if (MODIFIERS[key]) {\n      return event[MODIFIERS[key]]\n    }\n    return event.key === key.toUpperCase()\n  })\n}\nfunction isAltKey(event: KeyboardEvent): boolean {\n  return event.key === 'Alt'\n}\n","import {useEffect, useRef, type FunctionComponent} from 'react'\nimport type {VisualEditingNode, VisualEditingOptions} from '../types'\n\n/**\n * @internal\n */\nexport const Refresh: FunctionComponent<\n  {\n    comlink: VisualEditingNode\n  } & Required<Pick<VisualEditingOptions, 'refresh'>>\n> = (props) => {\n  const {comlink, refresh} = props\n\n  const manualRefreshRef = useRef(0)\n  const mutationRefreshRef = useRef(0)\n\n  useEffect(\n    () =>\n      comlink.on('presentation/refresh', (data) => {\n        if (data.source === 'manual') {\n          clearTimeout(manualRefreshRef.current)\n          const promise = refresh(data)\n          if (promise === false) return\n          comlink.post('visual-editing/refreshing', data)\n          let timedOut = false\n          manualRefreshRef.current = window.setTimeout(() => {\n            comlink.post('visual-editing/refreshed', data)\n            timedOut = true\n          }, 3000)\n          promise?.finally?.(() => {\n            if (timedOut) return\n            clearTimeout(manualRefreshRef.current)\n            comlink.post('visual-editing/refreshed', data)\n          })\n        } else if (data.source === 'mutation') {\n          clearTimeout(mutationRefreshRef.current)\n          const promise = refresh(data)\n          if (promise === false) return\n          comlink.post('visual-editing/refreshing', data)\n          // Send an additional refresh to account for Content Lake eventual consistency\n          mutationRefreshRef.current = window.setTimeout(() => {\n            const promise = refresh(data)\n            if (promise === false) return\n            comlink.post('visual-editing/refreshing', data)\n            // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n            promise?.finally?.(() => {\n              comlink.post('visual-editing/refreshed', data)\n            }) || comlink.post('visual-editing/refreshed', data)\n          }, 1000)\n          // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n          promise?.finally?.(() => {\n            comlink.post('visual-editing/refreshed', data)\n          }) || comlink.post('visual-editing/refreshed', data)\n        }\n      }),\n    [comlink, refresh],\n  )\n\n  return null\n}\n","import {createNode, createNodeMachine, type Status} from '@sanity/comlink'\nimport {\n  createCompatibilityActors,\n  type VisualEditingControllerMsg,\n  type VisualEditingNodeMsg,\n} from '@sanity/presentation-comlink'\nimport {useEffect, useState} from 'react'\nimport type {VisualEditingNode} from '../types'\n\n/**\n * Hook for maintaining a channel between overlays and the presentation tool\n * @internal\n */\nexport function useComlink(active = true): [VisualEditingNode | undefined, Status] {\n  const [node, setNode] = useState<VisualEditingNode>()\n  const [status, setStatus] = useState<Status>('idle')\n\n  useEffect(() => {\n    if (!active) return\n    const instance = createNode<VisualEditingNodeMsg, VisualEditingControllerMsg>(\n      {\n        name: 'visual-editing',\n        connectTo: 'presentation',\n      },\n      createNodeMachine<VisualEditingNodeMsg, VisualEditingControllerMsg>().provide({\n        actors: createCompatibilityActors<VisualEditingNodeMsg>(),\n      }),\n    )\n    const unsub = instance.onStatus(() => setStatus('connected'), 'connected')\n\n    setNode(instance)\n    const stop = instance.start()\n\n    return () => {\n      unsub()\n      stop()\n      setNode(undefined)\n    }\n  }, [active])\n\n  /**\n   * Handle reporting of status to the presentation tool in case of connection failure due to misconfigured URL origin\n   */\n  useEffect(() => {\n    /**\n     * We only need to report status if the node is not connected\n     */\n    if (status === 'connected') return\n\n    const controller = new AbortController()\n    window.addEventListener(\n      'message',\n      ({data, origin}: MessageEvent<unknown>) => {\n        /**\n         * Detect if Presentation is asking if Visual Editing is here but misconfigured\n         * @TODO this should probably be a feature built into `comlink`, as it's a common problem for apps dealing with iframes.\n         */\n        if (\n          data &&\n          typeof data === 'object' &&\n          'domain' in data &&\n          data.domain === 'sanity/channels' &&\n          'from' in data &&\n          data.from === 'presentation' &&\n          'type' in data &&\n          data.type === 'presentation/status'\n        ) {\n          /**\n           * We only send this message to the parent window, which supports Presentation loading the page in an iframe.\n           * This avoids letting other iframes on the page, or other openers, from getting a response.\n           */\n          window.parent.postMessage(\n            {\n              domain: 'sanity/channels',\n              type: 'visual-editing/status',\n              data: {origin: location.origin},\n            },\n            /**\n             * Using the same origin ensures that if the parent window don't have the same origin the message won't be sent.\n             * This grants some protection against spoofing, as malicious iframes can't easily call this event and trigger the Presentation Tool to think there's a failing state.\n             */\n            origin,\n          )\n        }\n      },\n      {signal: controller.signal},\n    )\n    return () => {\n      controller.abort()\n    }\n  }, [status])\n\n  return [node, status]\n}\n","import {type ListenEvent} from '@sanity/client'\nimport {merge, ReplaySubject, Subject, type Observable, type ObservedValueOf} from 'rxjs'\nimport type {VisualEditingNode} from '../../types'\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype SharedListenEvent = ListenEvent<Record<string, any>>\n\n/**\n * Creates a single, shared, listener EventSource that strems remote mutations, and notifies when it's online (welcome), offline (reconnect).\n */\nexport function createSharedListener(comlink: VisualEditingNode): Observable<SharedListenEvent> {\n  // Welcome events could be received before the listener has been subscribed\n  // to. Using a ReplaySubject will ensure the welcome event is re-emitted when\n  // a new subscriber arrives.\n  const incomingConnection$ = new ReplaySubject<SharedListenEvent>(1)\n  const incomingMutations$ = new Subject<SharedListenEvent>()\n\n  comlink\n    .fetch('visual-editing/snapshot-welcome', undefined, {suppressWarnings: true})\n    .then((data) => {\n      incomingConnection$.next(data.event)\n    })\n    .catch(() => {\n      // Fail silently as the app may be communicating with a version of\n      // Presentation that does not support this feature\n    })\n\n  comlink.on('presentation/snapshot-event', (data) => {\n    // Welcome events are still emitted by Presentation for backwards\n    // compatibility. We don't need them anymore as we explicitly fetch the\n    // welcome event, so filter them out here.\n    if (data.event.type === 'reconnect') {\n      incomingConnection$.next(data.event)\n    }\n    if (data.event.type === 'mutation') {\n      incomingMutations$.next(data.event)\n    }\n  })\n\n  return merge(incomingConnection$, incomingMutations$)\n}\n\nexport type SharedListenerEvents = ObservedValueOf<ReturnType<typeof createSharedListener>>\n","/* eslint-disable @typescript-eslint/no-empty-function */\nimport {useEffect} from 'react'\nimport {createActor} from 'xstate'\nimport {setActor} from '../optimistic/context'\nimport {createSharedListener} from '../optimistic/state/createSharedListener'\nimport {createDatasetMutator} from '../optimistic/state/datasetMutator'\nimport type {VisualEditingNode} from '../types'\n\n/**\n * Hook for maintaining a channel between overlays and the presentation tool\n * @internal\n */\nexport function useDatasetMutator(comlink: VisualEditingNode | undefined): void {\n  useEffect(() => {\n    if (!comlink) return\n    const listener = createSharedListener(comlink)\n    const datasetMutator = createDatasetMutator(comlink)\n    const mutator = createActor(datasetMutator, {\n      // @ts-expect-error @todo\n      input: {client: {withConfig: () => {}}, sharedListener: listener},\n    })\n\n    mutator.start()\n\n    // Fetch features to determine if optimistic updates are supported\n    const featuresFetch = new AbortController()\n    comlink\n      .fetch('visual-editing/features', undefined, {\n        signal: featuresFetch.signal,\n        suppressWarnings: true,\n      })\n      .then((data) => {\n        if (data.features['optimistic']) {\n          setActor(mutator)\n        }\n      })\n      .catch(() => {\n        // eslint-disable-next-line no-console\n        console.warn(\n          '[@sanity/visual-editing] Package version mismatch detected: Please update your Sanity studio to prevent potential compatibility issues.',\n        )\n      })\n\n    return () => {\n      mutator.stop()\n      featuresFetch.abort()\n    }\n  }, [comlink])\n}\n","import {isMaybePreviewIframe, isMaybePreviewWindow} from '@sanity/presentation-comlink'\nimport {useEffect, useState} from 'react'\nimport {createPortal} from 'react-dom'\nimport type {VisualEditingOptions} from '../types'\nimport {History} from './History'\nimport {Meta} from './Meta'\nimport {Overlays} from './Overlays'\nimport {Refresh} from './Refresh'\nimport {useComlink} from './useComlink'\nimport {useDatasetMutator} from './useDatasetMutator'\n\n/**\n * @public\n */\nexport const VisualEditing = (props: VisualEditingOptions & {portal: boolean}): React.ReactNode => {\n  const {components, plugins, history, portal = true, refresh, zIndex} = props\n\n  const [inFrame, setInFrame] = useState<boolean | null>(null)\n  const [inPopUp, setInPopUp] = useState<boolean | null>(null)\n  useEffect(() => {\n    setInFrame(isMaybePreviewIframe())\n    setInPopUp(isMaybePreviewWindow())\n  }, [])\n\n  const [portalElement, setPortalElement] = useState<HTMLElement | null>(null)\n  useEffect(() => {\n    if (portal === false) return undefined\n    const node = document.createElement('sanity-visual-editing')\n    document.documentElement.appendChild(node)\n    setPortalElement(node)\n    return () => {\n      setPortalElement(null)\n      if (document.documentElement.contains(node)) {\n        document.documentElement.removeChild(node)\n      }\n    }\n  }, [portal])\n\n  const [comlink, comlinkStatus] = useComlink(inFrame === true || inPopUp === true)\n  useDatasetMutator(comlinkStatus === 'connected' ? comlink : undefined)\n\n  const children = (\n    <>\n      {inFrame !== null && inPopUp !== null && (\n        <Overlays\n          comlink={comlink}\n          comlinkStatus={comlinkStatus}\n          componentResolver={components}\n          plugins={plugins}\n          inFrame={inFrame}\n          inPopUp={inPopUp}\n          zIndex={zIndex}\n        />\n      )}\n      {comlink && (\n        <>\n          <History comlink={comlink} history={history} />\n          <Meta comlink={comlink} />\n          {refresh && <Refresh comlink={comlink} refresh={refresh} />}\n        </>\n      )}\n    </>\n  )\n\n  if (portal === false || !portalElement) return children\n\n  return createPortal(children, portalElement)\n}\nVisualEditing.displayName = 'VisualEditing'\n"],"names":["History","props","$","_c","comlink","history","t0","t1","on","data","update","useEffect","t2","t3","subscribe","title","document","post","Meta","sendMeta","observer","MutationObserver","mutation","target","nodeName","observe","head","subtree","characterData","childList","disconnect","getReferenceNodeAndInsertPosition","position","top","right","bottom","left","node","sanity","useDragEndEvents","getDocument","useDocuments","handler","e","insertPosition","preventInsertDefault","detail","reference","doc","id","key","targetKey","hasExplicitKey","getArrayItemKeyAndParentPath","path","arrayPath","referenceItemKey","patch","getSnapshot","snapshot","elementValue","getFromPath","at","remove","_key","insert","window","addEventListener","removeEventListener","dispatchDragEndEvent","_temp","Symbol","for","event","customEvent","CustomEvent","cancelable","dispatchEvent","SchemaContext","createContext","useSchema","context","useContext","Error","getArrayRemoveAction","type","getArrayRemovePatches","getArrayInsertAction","insertType","getArrayInsertPatches","getDuplicateAction","getArrayDuplicatePatches","getContextMenuItems","field","parent","getContextMenuArrayItems","getContextMenuUnionItems","Promise","resolve","getDuplicateItem","label","icon","CopyIcon","action","telemetryEvent","getRemoveItems","RemoveIcon","getMoveItems","withDivider","items","groupItems","moveUpPatches","moveDownPatches","moveFirstPatches","moveLastPatches","all","getArrayMovePatches","length","push","PublishIcon","ArrowUpIcon","ArrowDownIcon","UnpublishIcon","SortIcon","InsertAboveIcon","name","InsertBelowIcon","InsertMenuWrapper","width","onSelect","boundaryElement","arrow","constrainSize","floatingBoundary","padding","placement","fallbackPlacements","preventOverflow","__unstable_margins","jsx","InsertMenu","t4","MenuGroup","options","insertMenu","views","some","view","undefined","component","sendTelemetry","schemaType","of","filter","item","map","t","getNodeIcon","POPOVER_MARGINS","ContextMenuItem","onDismiss","useTelemetry","onClick","MenuDivider","hotkeys","MenuItem","t5","itemIndex","Component","ContextMenu","x","y","setBoundaryElement","useState","getField","setItems","fetchContextMenuItems","items_0","getBoundingClientRect","height","contextMenuReferenceElement","t6","minWidth","maxWidth","t7","Box","Text","Spinner","t8","t9","Stack","t10","Flex","t11","jsxs","Fragment","i","t12","Menu","t13","t14","t15","t16","Popover","t17","PopoverPortal","getLinkHref","href","referer","parsed","URL","location","origin","hash","slice","pathname","search","searchParams","set","toString","PreviewSnapshotsContext","usePreviewSnapshots","isReactElementOverlayComponent","isValidElement","Root","styled","Card","Actions","HUD","MenuWrapper","Tab","ActionOpen","Labels","ExclusivePluginContainer","div","createIntentLink","baseUrl","tool","workspace","createEditUrl","pathToUrlString","studioPath","fromString","ElementOverlayInner","element","focused","componentResolver","showActions","draggable","targets","elementType","onActivateExclusivePlugin","onMenuOpenChange","getType","previewSnapshots","bb0","find","_id","node_0","nodeElement","schemaType_0","value","targetElement","getContext","legacyComponentContext","pluginContexts","resolverContexts","customComponents","useCustomComponents","nodePluginCollections","useResolvedNodePlugins","plugins","__html","DocumentIcon","menuId","useId","_temp2","showMenu","handleLabelClick","DragHandleIcon","_temp3","MenuButton","animate","tone","Button","EllipsisVerticalIcon","PointerEvents","nodePluginCollection_0","index","textTransform","nodePluginCollection","exclusive","PlugIcon","_temp4","Array","isArray","Component_1","props_0","ElementOverlay","memo","hovered","rect","wasMaybeCollapsed","enableScrollIntoView","ref","useRef","scrolledIntoViewRef","w","h","transform","style","current","scrollIntoView","behavior","actions","block","inline","scrollMode","isNearTop","setIsNearTop","io","IntersectionObserver","intersection","boundingClientRect","threshold","activeExclusivePlugin","setActiveExclusivePlugin","closeExclusivePluginView","plugin","handleExclusivePluginClick","_temp5","ExclusivePluginComponent","menuOpen","setMenuOpen","PopoverBackground","t18","t19","t20","componentContexts","componentContext","instance","uuid","hud","forEach","guard","resolved","_temp6","Link","useSyncExternalStore","_temp7","_temp8","ctx","stopPropagation","nodePluginCollection_1","Component_0","onStoreChange","handlePopState","OverlayDragGroupRect","dragGroupRect","border","pointerEvents","markerThickness","lerp","v0","v1","OverlayDragInsertMarker","dragInsertPosition","flow","startX","endX","offset","Math","min","offset_0","offset_1","startX_0","startY","endY","offset_2","offset_3","offset_4","background","borderRadius","zIndex","$scaleFactor","$width","$height","clamp","number","max","inMin","inMax","outMin","outMax","mapped","OverlayDragPreview","skeleton","maxSkeletonWidth","innerWidth","scaleFactor","offsetX","offsetY","prefersDark","usePrefersDark","theme","useTheme_v2","radius","T0","T1","childRects","imageRects","textRects","color","r_1","r","from","tagName","r_0","OverlayMinimapPrompt","Hotkeys","ExpandIcon","elementsReducer","elements","message","activated","dragDisabled","clickedElement","overlayStateReducer","state","contextMenu","focusPath","perspective","isDragging","dragShowMinimap","dragShowMinimapPrompt","dragSkeleton","dragMinimapTransition","prevFocusPath","startsWith","display","groupRect","PreviewSnapshotsProvider","children","setPreviewSnapshots","signal","response","fetch","suppressWarnings","snapshots","fetchPreviewSnapshots","previewSapshotsFetch","AbortController","unsub","onStatus","abort","isSanityNode","isDocumentSchemaType","isTypeSchemaType","popUnkeyedPathSegments","split","toReversed","reduce","acc","part","includes","join","getPathsWithUnresolvedTypes","SchemaProvider","Map","resolvedTypes","setResolvedTypes","schema","setSchema","fetchSchema","schemaFetch","reportedPathsRef","useDeferredValue","paths","controllerRef","reportPaths","paths_0","signal_0","initialReportedPaths","response_0","aborted","types","p","_type","fieldFromPath","schemaType_1","path_0","prevPath","next","rest","objectField","fields","name_0","get","Boolean","type_0","nodePath","flatMap","console","warn","createStore","initialState","getState","listeners","Set","setState","fn","l","listener","add","delete","store","SharedStateProvider","catch","value_0","SharedStateContext","prev","prev_0","Object","fromEntries","entries","reason","debug","TelemetryProvider","events","log","TelemetryContext","useController","inFrame","inPopUp","overlayController","optimisticActorReady","useOptimisticActorReady","createOverlayController","overlayElement","destroy","usePerspectiveSync","dispatch","controller","then","data_0","isEqualSets","a","b","size","has","useReportDocuments","lastReported","documents","perspective_0","reportDocuments","nodes","nodeIds","documentsOnPage","projectId","_projectId","dataset","_dataset","e_0","s","$zIndex","raf2","r0","r1","requestAnimationFrame","cancelAnimationFrame","DocumentReporter","documentIds","uniqueIds","setUniqueIds","actor","useOptimisticActor","id_0","send","documentId","getDraftId","getPublishedId","id_1","OverlaysController","onDrag","overlayEnabled","rootElement","overlayEventHandler","useCallback","enabled","dragGroup","cursor","removeProperty","activate","deactivate","Overlays","comlinkStatus","_componentResolver","useReducer","setRootElement","setOverlayEnabled","unsubs","setProperty","scrollY","updateDragPreviewCustomProps","handleClick","altPressed","handleKeyUp","isAltKey","handleKeydown","ctrlKey","metaKey","shiftKey","isHotkey","handleWindowBlur","overlaysFlash","setOverlaysFlash","fadingOut","setFadingOut","fadeOutTimeoutRef","setTimeout","clearTimeout","_temp9","closeContextMenu","_temp0","element_0","getAttribute","e_2","sanityNodesExistInSameArray","elementsToRender","t21","t22","t23","t24","LayerProvider","PortalProvider","t25","ThemeProvider","studioTheme","t26","IS_MAC","test","navigator","platform","MODIFIERS","alt","ctrl","mod","shift","keys","every","toUpperCase","prevId","isHTMLAnchorElement","isHTMLElement","closest","altKey","preventDefault","newEvent","MouseEvent","bubbles","enabled_0","enabled_1","enabled_2","enabled_3","e_1","Refresh","refresh","manualRefreshRef","mutationRefreshRef","source","promise","timedOut","finally","promise_0","promise_1","useComlink","active","setNode","status","setStatus","createNode","connectTo","createNodeMachine","provide","actors","createCompatibilityActors","stop","start","domain","postMessage","createSharedListener","incomingConnection$","ReplaySubject","incomingMutations$","Subject","merge","useDatasetMutator","datasetMutator","createDatasetMutator","mutator","createActor","input","client","withConfig","sharedListener","featuresFetch","features","optimistic","setActor","VisualEditing","components","portal","setInFrame","setInPopUp","isMaybePreviewIframe","isMaybePreviewWindow","portalElement","setPortalElement","createElement","documentElement","appendChild","contains","removeChild","createPortal","displayName"],"mappings":"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"}