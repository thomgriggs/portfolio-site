{"version":3,"file":"index.js","sources":["../src/core/helpers/animation.ts","../src/core/helpers/focus.ts","../src/core/hooks/useArrayProp.ts","../src/core/hooks/useClickOutside.ts","../src/core/hooks/useElementRect/useElementRect.ts","../src/core/hooks/useForwardedRef.ts","../src/core/utils/errorBoundary.tsx","../src/core/components/autocomplete/autocomplete.styles.tsx","../src/core/components/autocomplete/autocompleteOption.tsx","../src/core/components/autocomplete/autocompleteReducer.ts","../src/core/components/autocomplete/constants.ts","../src/core/components/autocomplete/autocomplete.tsx","../src/core/components/breadcrumbs/breadcrumbs.styles.ts","../src/core/components/breadcrumbs/breadcrumbs.tsx","../src/core/components/dialog/styles.ts","../src/core/components/dialog/dialogContext.ts","../src/core/components/dialog/useDialog.ts","../src/core/components/dialog/dialog.tsx","../src/core/components/dialog/dialogProvider.tsx","../src/core/components/menu/menuButton.tsx","../src/core/components/skeleton/styles.ts","../src/core/components/skeleton/skeleton.tsx","../src/core/components/skeleton/textSkeleton.tsx","../src/core/components/tab/tabPanel.tsx","../src/core/components/toast/styles.ts","../src/core/components/toast/toast.tsx","../src/core/hooks/useMounted.ts","../src/core/components/toast/toastContext.ts","../src/core/components/toast/toastLayer.tsx","../src/core/components/toast/toastState.ts","../src/core/components/toast/toastProvider.tsx","../src/core/components/toast/useToast.ts","../src/core/components/tree/helpers.ts","../src/core/components/tree/treeContext.ts","../src/core/components/tree/tree.tsx","../src/core/components/tree/style.ts","../src/core/components/tree/useTree.ts","../src/core/components/tree/treeGroup.tsx","../src/core/components/tree/treeItem.tsx"],"sourcesContent":["/**\n * @internal\n */\nexport function _raf(fn: () => void): () => void {\n  const frameId = requestAnimationFrame(fn)\n\n  return () => {\n    cancelAnimationFrame(frameId)\n  }\n}\n\n/**\n * @internal\n */\nexport function _raf2(fn: () => void): () => void {\n  let innerDispose: (() => void) | null = null\n\n  const outerDispose = _raf(() => {\n    innerDispose = _raf(fn)\n  })\n\n  return () => {\n    if (innerDispose) innerDispose()\n\n    outerDispose()\n  }\n}\n","import {\n  isHTMLAnchorElement,\n  isHTMLButtonElement,\n  isHTMLElement,\n  isHTMLInputElement,\n  isHTMLSelectElement,\n  isHTMLTextAreaElement,\n} from './element'\n\n// export const globalFocusState = {\n//   IgnoreUtilFocusChanges: false,\n// }\n\n/**\n * @internal\n */\nexport function _hasFocus(element: HTMLElement): boolean {\n  return Boolean(document.activeElement) && element.contains(document.activeElement)\n}\n\n/**\n * @internal\n */\nexport function isFocusable(element: HTMLElement): boolean {\n  if (\n    element.tabIndex > 0 ||\n    (element.tabIndex === 0 && element.getAttribute('tabIndex') !== null)\n  ) {\n    return true\n  }\n\n  if (isHTMLAnchorElement(element)) {\n    return Boolean(element.href) && element.rel !== 'ignore'\n  }\n\n  if (isHTMLInputElement(element)) {\n    return element.type !== 'hidden' && element.type !== 'file' && !element.disabled\n  }\n\n  if (\n    isHTMLButtonElement(element) ||\n    isHTMLSelectElement(element) ||\n    isHTMLTextAreaElement(element)\n  ) {\n    return !element.disabled\n  }\n\n  return false\n}\n\n/**\n * @internal\n */\nexport function attemptFocus(element: HTMLElement): boolean {\n  if (!isFocusable(element)) {\n    return false\n  }\n\n  // globalFocusState.IgnoreUtilFocusChanges = true\n\n  try {\n    element.focus()\n  } catch {\n    // ignore\n  }\n\n  // globalFocusState.IgnoreUtilFocusChanges = false\n\n  return document.activeElement === element\n}\n\n/**\n * @internal\n */\nexport function focusFirstDescendant(element: HTMLElement): boolean {\n  for (let i = 0; i < element.childNodes.length; i++) {\n    const child = element.childNodes[i]\n\n    if (isHTMLElement(child) && (attemptFocus(child) || focusFirstDescendant(child))) {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * @internal\n */\nexport function focusLastDescendant(element: HTMLElement): boolean {\n  for (let i = element.childNodes.length - 1; i >= 0; i--) {\n    const child = element.childNodes[i]\n\n    if (isHTMLElement(child) && (attemptFocus(child) || focusLastDescendant(child))) {\n      return true\n    }\n  }\n\n  return false\n}\n","import {useMemo} from 'react'\n\nimport {_getArrayProp} from '../styles'\n\n/** @beta */\nexport type ArrayPropPrimitive = string | number | boolean | undefined | null\n\n/**\n * @deprecated instead of `useArrayProp(width)` use `Array.isArray(width) ? width : [width]` instead\n * @beta\n */\nexport function useArrayProp<T extends ArrayPropPrimitive = ArrayPropPrimitive>(\n  val: T | T[] | undefined,\n  defaultVal?: T[],\n): T[] {\n  return useMemo(() => _getArrayProp(val, defaultVal), [val, defaultVal])\n}\n","import {useEffect, useRef, useState} from 'react'\n\nimport {EMPTY_ARRAY} from '../constants'\n\n/**\n * @public\n */\nexport type ClickOutsideListener = (event: MouseEvent) => void\n\n/**\n * @public\n */\nexport type ClickOutsideElements = (HTMLElement | null | (HTMLElement | null)[])[]\n\nfunction _getElements(\n  element: HTMLElement | null,\n  elementsArg: ClickOutsideElements,\n): HTMLElement[] {\n  const ret = [element]\n\n  for (const el of elementsArg) {\n    if (Array.isArray(el)) {\n      ret.push(...el)\n    } else {\n      ret.push(el)\n    }\n  }\n\n  return ret.filter(Boolean) as HTMLElement[]\n}\n\n/**\n * @public\n * @deprecated replaced by the new `useClickOutsideEvent` hook, instead of:\n * ```tsx\n * const [button, setButtonElement] = useState(null)\n * useClickOutside((event) => {}, [button])\n * return <button ref={setButtonElement} />\n * ```\n * do:\n * ```tsx\n * const buttonRef = useRef()\n * useClickOutsideEvent((event) => {}, () => [buttonRef.current])\n * return <button ref={buttonRef} />\n * ```\n */\nexport function useClickOutside(\n  listener: ClickOutsideListener,\n  elementsArg: ClickOutsideElements = EMPTY_ARRAY,\n  boundaryElement?: HTMLElement | null,\n): (el: HTMLElement | null) => void {\n  const [element, setElement] = useState<HTMLElement | null>(null)\n  const [elements, setElements] = useState(() => _getElements(element, elementsArg))\n  const elementsRef = useRef(elements)\n\n  useEffect(() => {\n    const prevElements = elementsRef.current\n    const nextElements = _getElements(element, elementsArg)\n\n    if (prevElements.length !== nextElements.length) {\n      // eslint-disable-next-line react-hooks/set-state-in-effect\n      setElements(nextElements)\n      elementsRef.current = nextElements\n\n      return\n    }\n\n    for (const el of prevElements) {\n      if (!nextElements.includes(el)) {\n        setElements(nextElements)\n        elementsRef.current = nextElements\n\n        return\n      }\n    }\n\n    for (const el of nextElements) {\n      if (!prevElements.includes(el)) {\n        setElements(nextElements)\n        elementsRef.current = nextElements\n\n        return\n      }\n    }\n  }, [element, elementsArg])\n\n  useEffect(() => {\n    if (!listener) return undefined\n\n    const handleWindowMouseDown = (evt: MouseEvent) => {\n      const target = evt.target\n\n      if (!(target instanceof Node)) {\n        return\n      }\n\n      if (boundaryElement && !boundaryElement.contains(target)) {\n        return\n      }\n\n      for (const el of elements) {\n        if (target === el || el.contains(target)) {\n          return\n        }\n      }\n\n      listener(evt)\n    }\n\n    window.addEventListener('mousedown', handleWindowMouseDown)\n\n    return () => {\n      window.removeEventListener('mousedown', handleWindowMouseDown)\n    }\n  }, [boundaryElement, listener, elements])\n\n  return setElement\n}\n","import {useElementSize} from '../useElementSize'\n\n/**\n * Subscribe to the rect of a DOM element.\n * @beta\n *\n * @deprecated Use `useElementSize` instead\n */\nexport function useElementRect(element: HTMLElement | null): DOMRectReadOnly | null {\n  const elementSize = useElementSize(element)\n\n  return elementSize?._contentRect || null\n}\n","import {useImperativeHandle, useRef} from 'react'\n\n/**\n * @beta\n * @deprecated use `useImperativeHandle` instead\n * @example\n * ```diff\n * -const ref = useForwardedRef(forwardedRef)\n * +const ref = useRef(null)\n * +useImperativeHandle(forwardedRef, () => ref.current)\n * ```\n */\nexport function useForwardedRef<T>(ref: React.ForwardedRef<T>): React.MutableRefObject<T | null> {\n  const innerRef = useRef<T | null>(null)\n\n  useImperativeHandle(ref, () => innerRef.current!)\n\n  return innerRef\n}\n","import {Component, PropsWithChildren} from 'react'\n\nimport {Code} from '../primitives/code'\n\n/**\n * DO NOT USE IN PRODUCTION\n * @beta\n */\nexport type ErrorBoundaryProps = PropsWithChildren<{\n  onCatch: (params: {error: Error; info: React.ErrorInfo}) => void\n}>\n\n/**\n * DO NOT USE IN PRODUCTION\n * @beta\n */\nexport interface ErrorBoundaryState {\n  error: Error | null\n}\n\n/**\n * DO NOT USE IN PRODUCTION\n * @beta\n */\nexport class ErrorBoundary extends Component<ErrorBoundaryProps, ErrorBoundaryState> {\n  state: ErrorBoundaryState = {error: null}\n\n  static getDerivedStateFromError(error: Error): ErrorBoundaryState {\n    // Update state so the next render will show the fallback UI.\n    return {error}\n  }\n\n  componentDidCatch(error: Error, info: React.ErrorInfo): void {\n    this.props.onCatch({error, info})\n  }\n\n  render(): React.ReactNode {\n    const {error} = this.state\n\n    if (error) {\n      const message = typeof error?.message === 'string' ? error.message : 'Error'\n\n      return <Code>{message}</Code>\n    }\n\n    return this.props.children\n  }\n}\n","import {SpinnerIcon} from '@sanity/icons'\nimport {keyframes, styled} from 'styled-components'\n\nimport {Box} from '../../primitives'\n\n/**\n * @internal\n */\nexport const StyledAutocomplete = styled.div`\n  line-height: 0;\n`\n\n/**\n * @internal\n */\nexport const ListBox = styled(Box)`\n  & > ul {\n    list-style: none;\n    padding: 0;\n    margin: 0;\n  }\n`\n\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n\n  to {\n    transform: rotate(360deg);\n  }\n`\n\n/**\n * @internal\n */\nexport const AnimatedSpinnerIcon = styled(SpinnerIcon)`\n  animation: ${rotate} 500ms linear infinite;\n`\n","import {useCallback} from 'react'\n\nimport {_isEnterToClickElement} from '../../helpers'\n\nexport interface AutocompleteOptionProps {\n  children: React.ReactNode\n  id: string\n  onSelect: (v: string) => void\n  selected: boolean\n  value: string\n}\n\nexport function AutocompleteOption(props: AutocompleteOptionProps): React.JSX.Element {\n  const {children, id, onSelect, selected, value} = props\n\n  const handleClick = useCallback(() => {\n    // Calling the `onSelect` in a timeout is a fix to\n    // allow the `click` event to propagate in some cases\n    setTimeout(() => {\n      onSelect(value)\n    }, 0)\n  }, [onSelect, value])\n\n  const handleKeyDown = useCallback(\n    (event: React.KeyboardEvent<HTMLLIElement>) => {\n      if (event.key === 'Enter' && !_isEnterToClickElement(event.currentTarget)) {\n        handleClick()\n      }\n    },\n    [handleClick],\n  )\n\n  return (\n    <li\n      aria-selected={selected}\n      data-ui=\"AutocompleteOption\"\n      id={id}\n      role=\"option\"\n      onClick={handleClick}\n      onKeyDown={handleKeyDown}\n    >\n      {children}\n    </li>\n  )\n}\n","import {AutocompleteMsg, AutocompleteState} from './types'\n\n/**\n * @internal\n */\nexport function autocompleteReducer(\n  state: AutocompleteState,\n  msg: AutocompleteMsg,\n): AutocompleteState {\n  if (msg.type === 'input/change') {\n    return {...state, activeValue: null, focused: true, query: msg.query}\n  }\n\n  if (msg.type === 'input/focus') {\n    return {...state, focused: true}\n  }\n\n  if (msg.type === 'root/blur') {\n    return {...state, focused: false, query: null}\n  }\n\n  if (msg.type === 'root/clear') {\n    return {...state, activeValue: null, query: null, value: null}\n  }\n\n  if (msg.type === 'root/escape') {\n    return {...state, focused: false, query: null}\n  }\n\n  if (msg.type === 'root/open') {\n    return {...state, query: state.query || msg.query}\n  }\n\n  if (msg.type === 'root/setActiveValue') {\n    return {...state, activeValue: msg.value, listFocused: msg.listFocused || state.listFocused}\n  }\n\n  if (msg.type === 'root/setListFocused') {\n    return {...state, listFocused: msg.listFocused}\n  }\n\n  if (msg.type === 'value/change') {\n    return {...state, activeValue: msg.value, query: null, value: msg.value}\n  }\n\n  return state\n}\n","import {Placement} from '../../types'\n\n/**\n * @internal\n */\nexport const AUTOCOMPLETE_LISTBOX_IGNORE_KEYS = [\n  'Control',\n  'Shift',\n  'Alt',\n  'Enter',\n  'Home',\n  'End',\n  'PageUp',\n  'PageDown',\n  'Meta',\n  'Tab',\n  'CapsLock',\n]\n\n/**\n * @internal\n */\nexport const AUTOCOMPLETE_POPOVER_PLACEMENT: Placement = 'bottom-start'\n\n/**\n * @internal\n */\nexport const AUTOCOMPLETE_POPOVER_FALLBACK_PLACEMENTS: Placement[] = ['bottom-start', 'top-start']\n","import {ChevronDownIcon} from '@sanity/icons'\nimport {\n  ChangeEvent,\n  cloneElement,\n  ElementType,\n  FocusEvent,\n  forwardRef,\n  HTMLProps,\n  KeyboardEvent,\n  MouseEvent,\n  ReactNode,\n  Ref,\n  useCallback,\n  useEffect,\n  useImperativeHandle,\n  useMemo,\n  useReducer,\n  useRef,\n  useState,\n} from 'react'\n\nimport {EMPTY_ARRAY, EMPTY_RECORD} from '../../constants'\nimport {_hasFocus, _raf, focusFirstDescendant} from '../../helpers'\nimport {\n  Box,\n  BoxProps,\n  Button,\n  Card,\n  Popover,\n  PopoverProps,\n  Stack,\n  Text,\n  TextInput,\n} from '../../primitives'\nimport {_getArrayProp} from '../../styles'\nimport {Radius} from '../../types'\nimport {AnimatedSpinnerIcon, ListBox, StyledAutocomplete} from './autocomplete.styles'\nimport {AutocompleteOption} from './autocompleteOption'\nimport {autocompleteReducer} from './autocompleteReducer'\nimport {\n  AUTOCOMPLETE_LISTBOX_IGNORE_KEYS,\n  AUTOCOMPLETE_POPOVER_FALLBACK_PLACEMENTS,\n  AUTOCOMPLETE_POPOVER_PLACEMENT,\n} from './constants'\nimport {AutocompleteOpenButtonProps, BaseAutocompleteOption} from './types'\n\n/**\n * @public\n */\nexport interface AutocompleteProps<Option extends BaseAutocompleteOption = BaseAutocompleteOption> {\n  border?: boolean\n  customValidity?: string\n  filterOption?: (query: string, option: Option) => boolean\n  fontSize?: number | number[]\n  icon?: ElementType | ReactNode\n  id: string\n  /** @beta */\n  listBox?: BoxProps\n  loading?: boolean\n  onChange?: (value: string) => void\n  onQueryChange?: (query: string | null) => void\n  onSelect?: (value: string) => void\n  /** @beta */\n  openButton?: boolean | AutocompleteOpenButtonProps\n  /** @beta */\n  openOnFocus?: boolean\n  /** The options to render. */\n  options?: Option[]\n  padding?: number | number[]\n  popover?: Omit<PopoverProps, 'content' | 'onMouseEnter' | 'onMouseLeave' | 'open'> &\n    Omit<HTMLProps<HTMLDivElement>, 'as' | 'children' | 'content' | 'ref' | 'width'>\n  prefix?: ReactNode\n  radius?: Radius | Radius[]\n  /** @beta */\n  relatedElements?: HTMLElement[]\n  /** The callback function for rendering each option. */\n  renderOption?: (option: Option) => React.JSX.Element\n  /** @beta */\n  renderPopover?: (\n    props: {\n      content: React.JSX.Element | null\n      hidden: boolean\n      inputElement: HTMLInputElement | null\n      onMouseEnter: () => void\n      onMouseLeave: () => void\n    },\n    ref: Ref<HTMLDivElement>,\n  ) => ReactNode\n  renderValue?: (value: string, option?: Option) => string\n  suffix?: ReactNode\n  /** The current value. */\n  value?: string\n}\n\nconst DEFAULT_RENDER_VALUE = (value: string, option?: BaseAutocompleteOption) =>\n  option ? option.value : value\n\nconst DEFAULT_FILTER_OPTION = (query: string, option: BaseAutocompleteOption) =>\n  option.value.toLowerCase().indexOf(query.toLowerCase()) > -1\n\nconst InnerAutocomplete = forwardRef(function InnerAutocomplete<\n  Option extends BaseAutocompleteOption,\n>(\n  props: AutocompleteProps<Option> &\n    Omit<\n      HTMLProps<HTMLInputElement>,\n      | 'aria-activedescendant'\n      | 'aria-autocomplete'\n      | 'aria-expanded'\n      | 'aria-owns'\n      | 'as'\n      | 'autoCapitalize'\n      | 'autoComplete'\n      | 'autoCorrect'\n      | 'id'\n      | 'inputMode'\n      | 'onChange'\n      | 'onSelect'\n      | 'popover'\n      | 'prefix'\n      | 'ref'\n      | 'role'\n      | 'spellCheck'\n      | 'type'\n      | 'value'\n    >,\n  forwardedRef: React.ForwardedRef<HTMLInputElement>,\n) {\n  const {\n    border = true,\n    customValidity,\n    disabled,\n    filterOption: filterOptionProp,\n    fontSize = 2,\n    icon,\n    id,\n    listBox = EMPTY_RECORD,\n    loading,\n    onBlur,\n    onChange,\n    onFocus,\n    onQueryChange,\n    onSelect,\n    openButton,\n    openOnFocus,\n    options: optionsProp,\n    padding: paddingProp = 3,\n    popover = EMPTY_RECORD,\n    prefix,\n    radius = 2,\n    readOnly,\n    relatedElements,\n    renderOption: renderOptionProp,\n    renderPopover,\n    renderValue = DEFAULT_RENDER_VALUE,\n    suffix,\n    value: valueProp,\n    ...restProps\n  } = props\n\n  const [state, dispatch] = useReducer(autocompleteReducer, {\n    activeValue: valueProp || null,\n    focused: false,\n    listFocused: false,\n    query: null,\n    value: valueProp || null,\n  })\n\n  const {activeValue, focused, listFocused, query, value} = state\n\n  const defaultRenderOption = useCallback(\n    ({value}: BaseAutocompleteOption) => (\n      <Card data-as=\"button\" padding={paddingProp} radius={2} tone=\"inherit\">\n        <Text size={fontSize} textOverflow=\"ellipsis\">\n          {value}\n        </Text>\n      </Card>\n    ),\n    [fontSize, paddingProp],\n  )\n\n  const renderOption =\n    typeof renderOptionProp === 'function' ? renderOptionProp : defaultRenderOption\n\n  const filterOption =\n    typeof filterOptionProp === 'function' ? filterOptionProp : DEFAULT_FILTER_OPTION\n\n  // Element refs\n  const rootElementRef = useRef<HTMLDivElement | null>(null)\n  const resultsPopoverElementRef = useRef<HTMLDivElement | null>(null)\n  const inputElementRef = useRef<HTMLInputElement | null>(null)\n  const listBoxElementRef = useRef<HTMLDivElement | null>(null)\n  // Element refs that need to be accessed during render\n  const [inputElement, setInputElement] = useState<HTMLInputElement | null>(null)\n\n  // Value refs\n  const listFocusedRef = useRef(false)\n  const valueRef = useRef(value)\n  const valuePropRef = useRef(valueProp)\n  const popoverMouseWithinRef = useRef(false)\n\n  // Forward inputElement state to inputElementRef\n  useImperativeHandle<HTMLInputElement | null, HTMLInputElement | null>(\n    inputElementRef,\n    () => inputElement,\n    [inputElement],\n  )\n  // Forward inputElement to parent\n  useImperativeHandle<HTMLInputElement | null, HTMLInputElement | null>(\n    forwardedRef,\n    () => inputElement,\n    [inputElement],\n  )\n\n  const listBoxId = `${id}-listbox`\n  const options = Array.isArray(optionsProp) ? optionsProp : EMPTY_ARRAY\n  const padding = _getArrayProp(paddingProp)\n  const currentOption = useMemo(\n    () => (value !== null ? options.find((o) => o.value === value) : undefined),\n    [options, value],\n  )\n  const filteredOptions = useMemo(\n    () => options.filter((option) => (query ? filterOption(query, option) : true)),\n    [filterOption, options, query],\n  )\n  const filteredOptionsLen = filteredOptions.length\n  const activeItemId = activeValue ? `${id}-option-${activeValue}` : undefined\n  const expanded = (query !== null && loading) || (focused && query !== null)\n\n  const handleRootBlur = useCallback(\n    (event: FocusEvent<HTMLInputElement>) => {\n      setTimeout(() => {\n        // NOTE: This is a workaround for a bug that may happen in Chrome (clicking the scrollbar\n        // closes the results in certain situations):\n        // - Do not handle blur if the mouse is within the popover\n        if (popoverMouseWithinRef.current) {\n          return\n        }\n\n        const elements: HTMLElement[] = (relatedElements || []).concat(\n          rootElementRef.current ? [rootElementRef.current] : [],\n          resultsPopoverElementRef.current ? [resultsPopoverElementRef.current] : [],\n        )\n\n        let focusInside = false\n\n        if (document.activeElement) {\n          for (const e of elements) {\n            if (e === document.activeElement || e.contains(document.activeElement)) {\n              focusInside = true\n              break\n            }\n          }\n        }\n\n        if (focusInside === false) {\n          dispatch({type: 'root/blur'})\n          popoverMouseWithinRef.current = false\n          if (onQueryChange) onQueryChange(null)\n          if (onBlur) onBlur(event)\n        }\n      }, 0)\n    },\n    [onBlur, onQueryChange, relatedElements],\n  )\n\n  const handleRootFocus = useCallback((event: FocusEvent<HTMLDivElement>) => {\n    const listBoxElement = listBoxElementRef.current\n    const focusedElement = event.target instanceof HTMLElement ? event.target : null\n    const listFocused = listBoxElement?.contains(focusedElement) || false\n\n    if (listFocused !== listFocusedRef.current) {\n      listFocusedRef.current = listFocused\n\n      dispatch({type: 'root/setListFocused', listFocused})\n    }\n  }, [])\n\n  const handleOptionSelect = useCallback(\n    (v: string) => {\n      dispatch({type: 'value/change', value: v})\n\n      popoverMouseWithinRef.current = false\n\n      if (onSelect) onSelect(v)\n\n      valueRef.current = v\n\n      if (onChange) onChange(v)\n      if (onQueryChange) onQueryChange(null)\n\n      inputElementRef.current?.focus()\n    },\n    [onChange, onSelect, onQueryChange],\n  )\n\n  const handleRootKeyDown = useCallback(\n    (event: KeyboardEvent<HTMLElement>) => {\n      if (event.key === 'ArrowDown') {\n        event.preventDefault()\n\n        if (!filteredOptionsLen) return\n\n        const activeOption = filteredOptions.find((o) => o.value === activeValue)\n        const activeIndex = activeOption ? filteredOptions.indexOf(activeOption) : -1\n        const nextActiveOption = filteredOptions[(activeIndex + 1) % filteredOptionsLen]\n\n        if (nextActiveOption) {\n          dispatch({type: 'root/setActiveValue', value: nextActiveOption.value, listFocused: true})\n        }\n\n        return\n      }\n\n      if (event.key === 'ArrowUp') {\n        event.preventDefault()\n\n        if (!filteredOptionsLen) return\n\n        const activeOption = filteredOptions.find((o) => o.value === activeValue)\n        const activeIndex = activeOption ? filteredOptions.indexOf(activeOption) : -1\n        const nextActiveOption =\n          filteredOptions[\n            activeIndex === -1\n              ? filteredOptionsLen - 1\n              : (filteredOptionsLen + activeIndex - 1) % filteredOptionsLen\n          ]\n\n        if (nextActiveOption) {\n          dispatch({type: 'root/setActiveValue', value: nextActiveOption.value, listFocused: true})\n        }\n\n        return\n      }\n\n      if (event.key === 'Escape') {\n        dispatch({type: 'root/escape'})\n        popoverMouseWithinRef.current = false\n        if (onQueryChange) onQueryChange(null)\n        inputElementRef.current?.focus()\n\n        return\n      }\n\n      const target = event.target as Node\n      const listEl = listBoxElementRef.current\n\n      if (\n        (listEl === target || listEl?.contains(target)) &&\n        !AUTOCOMPLETE_LISTBOX_IGNORE_KEYS.includes(event.key)\n      ) {\n        inputElementRef.current?.focus()\n\n        return\n      }\n    },\n    [activeValue, filteredOptions, filteredOptionsLen, onQueryChange],\n  )\n\n  const handleInputChange = useCallback(\n    (event: ChangeEvent<HTMLInputElement>) => {\n      const nextQuery = event.currentTarget.value\n\n      dispatch({type: 'input/change', query: nextQuery})\n\n      if (onQueryChange) onQueryChange(nextQuery)\n    },\n    [onQueryChange],\n  )\n\n  const dispatchOpen = useCallback(() => {\n    dispatch({\n      type: 'root/open',\n      query: value ? renderValue(value, currentOption) : '',\n    })\n  }, [currentOption, renderValue, value])\n\n  const handleInputFocus = useCallback(\n    (event: FocusEvent<HTMLInputElement>) => {\n      if (!focused) {\n        dispatch({type: 'input/focus'})\n\n        if (onFocus) onFocus(event)\n        if (openOnFocus) dispatchOpen()\n      }\n    },\n    [focused, onFocus, openOnFocus, dispatchOpen],\n  )\n\n  const handlePopoverMouseEnter = useCallback(() => {\n    popoverMouseWithinRef.current = true\n  }, [])\n\n  const handlePopoverMouseLeave = useCallback(() => {\n    popoverMouseWithinRef.current = false\n  }, [])\n\n  const handleClearButtonClick = useCallback(() => {\n    dispatch({type: 'root/clear'})\n    valueRef.current = ''\n    if (onChange) onChange('')\n    if (onQueryChange) onQueryChange(null)\n    inputElementRef.current?.focus()\n  }, [onChange, onQueryChange])\n\n  const handleClearButtonFocus = useCallback(() => {\n    dispatch({type: 'input/focus'})\n  }, [])\n\n  // Change the value when `value` prop changes\n  useEffect(() => {\n    // If `valueProp` changed\n    if (valueProp !== valuePropRef.current) {\n      valuePropRef.current = valueProp\n\n      if (valueProp !== undefined) {\n        dispatch({type: 'value/change', value: valueProp})\n        valueRef.current = valueProp\n      }\n\n      return\n    }\n\n    // If `valueProp` is not equal to `value`\n    if (valueProp !== valueRef.current) {\n      valueRef.current = valueProp || null\n\n      dispatch({type: 'value/change', value: valueProp || null})\n    }\n  }, [valueProp])\n\n  // Reset active item when closing\n  useEffect(() => {\n    if (!focused && valueRef.current) {\n      dispatch({type: 'root/setActiveValue', value: valueRef.current})\n    }\n  }, [focused])\n\n  // Focus the selected item\n  useEffect(() => {\n    const listElement = listBoxElementRef.current\n\n    if (!listElement) return\n\n    const activeOption = filteredOptions.find((o) => o.value === activeValue)\n\n    if (activeOption) {\n      const activeIndex = filteredOptions.indexOf(activeOption)\n      const activeItemElement = listElement.childNodes[activeIndex] as HTMLLIElement | undefined\n\n      if (activeItemElement) {\n        if (_hasFocus(activeItemElement)) {\n          // already focused\n          return\n        }\n\n        focusFirstDescendant(activeItemElement)\n      }\n    }\n  }, [activeValue, filteredOptions])\n\n  const clearButton = useMemo(() => {\n    if (!loading && !disabled && value) {\n      return {\n        'aria-label': 'Clear',\n        'onFocus': handleClearButtonFocus,\n      }\n    }\n\n    return undefined\n  }, [disabled, handleClearButtonFocus, loading, value])\n\n  const openButtonBoxPadding = padding.map((v) => {\n    if (v === 0) return 0\n    if (v === 1) return 1\n    if (v === 2) return 1\n\n    return v - 2\n  })\n  const openButtonPadding = padding.map((v) => Math.max(v - 1, 0))\n  const openButtonProps: AutocompleteOpenButtonProps = useMemo(\n    () => (typeof openButton === 'object' ? openButton : EMPTY_RECORD),\n    [openButton],\n  )\n\n  const handleOpenClick = useCallback(\n    (event: MouseEvent<HTMLButtonElement>) => {\n      dispatchOpen()\n\n      if (openButtonProps.onClick) openButtonProps.onClick(event)\n\n      _raf(() => inputElementRef.current?.focus())\n    },\n    [openButtonProps, dispatchOpen],\n  )\n\n  const openButtonNode = useMemo(\n    () =>\n      !disabled && !readOnly && openButton ? (\n        <Box aria-hidden={expanded} padding={openButtonBoxPadding}>\n          <Button\n            aria-label=\"Open\"\n            disabled={expanded}\n            fontSize={fontSize}\n            icon={ChevronDownIcon}\n            mode=\"bleed\"\n            padding={openButtonPadding}\n            {...openButtonProps}\n            onClick={handleOpenClick}\n          />\n        </Box>\n      ) : undefined,\n    [\n      disabled,\n      expanded,\n      fontSize,\n      handleOpenClick,\n      openButton,\n      openButtonBoxPadding,\n      openButtonPadding,\n      openButtonProps,\n      readOnly,\n    ],\n  )\n\n  const inputValue = useMemo(() => {\n    if (query === null) {\n      if (value !== null) {\n        return renderValue(value, currentOption)\n      }\n\n      return ''\n    }\n\n    return query\n  }, [currentOption, query, renderValue, value])\n\n  const handleListBoxKeyDown = useCallback(\n    (event: KeyboardEvent<HTMLDivElement>) => {\n      // If the focus is currently in the list, move focus to the input element\n      if (event.key === 'Tab') {\n        if (listFocused) inputElementRef.current?.focus()\n      }\n    },\n    [listFocused],\n  )\n\n  const content = useMemo(() => {\n    if (filteredOptions.length === 0) return null\n\n    return (\n      <ListBox\n        data-ui=\"AutoComplete__results\"\n        onKeyDown={handleListBoxKeyDown}\n        padding={1}\n        {...listBox}\n        tabIndex={-1}\n      >\n        <Stack\n          as=\"ul\"\n          aria-multiselectable={false}\n          data-ui=\"AutoComplete__resultsList\"\n          id={listBoxId}\n          ref={listBoxElementRef}\n          role=\"listbox\"\n          space={1}\n        >\n          {filteredOptions.map((option) => {\n            const active =\n              activeValue !== null ? option.value === activeValue : currentOption === option\n\n            return (\n              <AutocompleteOption\n                id={`${id}-option-${option.value}`}\n                key={option.value}\n                onSelect={handleOptionSelect}\n                selected={active}\n                value={option.value}\n              >\n                {cloneElement(renderOption(option), {\n                  disabled: loading,\n                  selected: active,\n                  tabIndex: listFocused && active ? 0 : -1,\n                })}\n              </AutocompleteOption>\n            )\n          })}\n        </Stack>\n      </ListBox>\n    )\n  }, [\n    activeValue,\n    currentOption,\n    filteredOptions,\n    handleOptionSelect,\n    handleListBoxKeyDown,\n    id,\n    listBox,\n    listBoxId,\n    listFocused,\n    loading,\n    renderOption,\n  ])\n\n  const results = useMemo(() => {\n    if (renderPopover) {\n      return (\n        <RenderPopover\n          content={content}\n          hidden={!expanded}\n          inputElement={inputElement}\n          onMouseEnter={handlePopoverMouseEnter}\n          onMouseLeave={handlePopoverMouseLeave}\n          resultsPopoverElementRef={resultsPopoverElementRef}\n          renderPopover={renderPopover}\n        />\n      )\n    }\n\n    if (filteredOptionsLen === 0) {\n      return null\n    }\n\n    return (\n      <Popover\n        arrow={false}\n        constrainSize\n        content={content}\n        fallbackPlacements={AUTOCOMPLETE_POPOVER_FALLBACK_PLACEMENTS}\n        matchReferenceWidth\n        onMouseEnter={handlePopoverMouseEnter}\n        onMouseLeave={handlePopoverMouseLeave}\n        open={expanded}\n        overflow=\"auto\"\n        placement={AUTOCOMPLETE_POPOVER_PLACEMENT}\n        portal\n        radius={radius}\n        ref={resultsPopoverElementRef}\n        referenceElement={inputElement}\n        {...popover}\n      />\n    )\n  }, [\n    content,\n    expanded,\n    filteredOptionsLen,\n    handlePopoverMouseEnter,\n    handlePopoverMouseLeave,\n    inputElement,\n    popover,\n    radius,\n    renderPopover,\n  ])\n\n  return (\n    <StyledAutocomplete\n      data-ui=\"Autocomplete\"\n      onBlur={handleRootBlur}\n      onFocus={handleRootFocus}\n      onKeyDown={handleRootKeyDown}\n      ref={rootElementRef}\n    >\n      <TextInput\n        {...restProps}\n        aria-activedescendant={activeItemId}\n        aria-autocomplete=\"list\"\n        aria-expanded={expanded}\n        aria-owns={listBoxId}\n        autoCapitalize=\"off\"\n        autoComplete=\"off\"\n        autoCorrect=\"off\"\n        border={border}\n        clearButton={clearButton}\n        customValidity={customValidity}\n        disabled={disabled}\n        fontSize={fontSize}\n        icon={icon}\n        iconRight={loading && AnimatedSpinnerIcon}\n        id={id}\n        inputMode=\"search\"\n        onChange={handleInputChange}\n        onClear={handleClearButtonClick}\n        onFocus={handleInputFocus}\n        padding={padding}\n        prefix={prefix}\n        radius={radius}\n        readOnly={readOnly}\n        ref={setInputElement}\n        role=\"combobox\"\n        spellCheck={false}\n        suffix={suffix || openButtonNode}\n        value={inputValue}\n      />\n      {results}\n    </StyledAutocomplete>\n  )\n})\n\nfunction RenderPopover({\n  renderPopover,\n  content,\n  hidden,\n  inputElement,\n  onMouseEnter,\n  onMouseLeave,\n  resultsPopoverElementRef,\n}: {\n  renderPopover: Exclude<AutocompleteProps['renderPopover'], undefined>\n  resultsPopoverElementRef: Parameters<Exclude<AutocompleteProps['renderPopover'], undefined>>[1]\n} & Parameters<Exclude<AutocompleteProps['renderPopover'], undefined>>[0]) {\n  return renderPopover(\n    {\n      content,\n      hidden,\n      inputElement,\n      onMouseEnter,\n      onMouseLeave,\n    },\n    resultsPopoverElementRef,\n  )\n}\n\nInnerAutocomplete.displayName = 'ForwardRef(Autocomplete)'\n\n/**\n * The Autocomplete component is typically used for search components.\n * It consists of a text input for writing a query, and properties for rendering suggestions.\n *\n * @public\n */\nexport const Autocomplete = InnerAutocomplete as <Option extends BaseAutocompleteOption>(\n  props: AutocompleteProps<Option> &\n    Omit<\n      HTMLProps<HTMLInputElement>,\n      | 'aria-activedescendant'\n      | 'aria-autocomplete'\n      | 'aria-expanded'\n      | 'aria-owns'\n      | 'as'\n      | 'autoCapitalize'\n      | 'autoComplete'\n      | 'autoCorrect'\n      | 'id'\n      | 'inputMode'\n      | 'onChange'\n      | 'onSelect'\n      | 'popover'\n      | 'prefix'\n      | 'ref'\n      | 'role'\n      | 'spellCheck'\n      | 'type'\n      | 'value'\n    > & {\n      ref?: Ref<HTMLInputElement>\n    },\n) => React.JSX.Element\n","import {styled} from 'styled-components'\n\nimport {Button} from '../../primitives'\n\nexport const StyledBreadcrumbs = styled.ol`\n  margin: 0;\n  padding: 0;\n  display: flex;\n  list-style: none;\n  align-items: center;\n  white-space: nowrap;\n  line-height: 0;\n`\n\nexport const ExpandButton = styled(Button)`\n  appearance: none;\n  margin: -4px;\n`\n","import {\n  Children,\n  forwardRef,\n  Fragment,\n  isValidElement,\n  useCallback,\n  useMemo,\n  useRef,\n  useState,\n} from 'react'\n\nimport {useClickOutsideEvent} from '../../hooks'\nimport {Box, Popover, Stack, Text} from '../../primitives'\nimport {_getArrayProp} from '../../styles'\nimport {ExpandButton, StyledBreadcrumbs} from './breadcrumbs.styles'\n\n/**\n * @beta\n */\nexport interface BreadcrumbsProps {\n  maxLength?: number\n  separator?: React.ReactNode\n  space?: number | number[]\n}\n\n/**\n * @beta\n */\nexport const Breadcrumbs = forwardRef(function Breadcrumbs(\n  props: BreadcrumbsProps & Omit<React.HTMLProps<HTMLOListElement>, 'as' | 'ref' | 'type'>,\n  ref: React.ForwardedRef<HTMLOListElement>,\n) {\n  const {children, maxLength, separator, space: spaceRaw = 2, ...restProps} = props\n  const space = _getArrayProp(spaceRaw)\n  const [open, setOpen] = useState(false)\n  const expandElementRef = useRef<HTMLButtonElement | null>(null)\n  const popoverElementRef = useRef<HTMLDivElement | null>(null)\n\n  const collapse = useCallback(() => setOpen(false), [])\n  const expand = useCallback(() => setOpen(true), [])\n\n  useClickOutsideEvent(collapse, () => [expandElementRef.current, popoverElementRef.current])\n\n  const rawItems = useMemo(() => Children.toArray(children).filter(isValidElement), [children])\n\n  const items = useItems({\n    collapse,\n    expand,\n    expandElementRef,\n    maxLength,\n    open,\n    popoverElementRef,\n    rawItems,\n    space,\n  })\n\n  return (\n    <StyledBreadcrumbs data-ui=\"Breadcrumbs\" {...restProps} ref={ref}>\n      {items.map((item, itemIndex) => (\n        <Fragment key={itemIndex}>\n          {itemIndex > 0 && (\n            <Box aria-hidden as=\"li\" paddingX={space}>\n              {separator || <Text muted>/</Text>}\n            </Box>\n          )}\n          <Box as=\"li\">{item}</Box>\n        </Fragment>\n      ))}\n    </StyledBreadcrumbs>\n  )\n})\nBreadcrumbs.displayName = 'ForwardRef(Breadcrumbs)'\n\nfunction useItems({\n  collapse,\n  expand,\n  expandElementRef,\n  maxLength,\n  open,\n  popoverElementRef,\n  rawItems,\n  space,\n}: {\n  collapse: () => void\n  expand: () => void\n  expandElementRef: React.RefObject<HTMLButtonElement | null>\n  maxLength: number | undefined\n  open: boolean\n  popoverElementRef: React.RefObject<HTMLDivElement | null>\n  rawItems: React.ReactElement<unknown, string | React.JSXElementConstructor<any>>[]\n  space: number[]\n}) {\n  const len = rawItems.length\n\n  if (maxLength && len > maxLength) {\n    const beforeLength = Math.ceil(maxLength / 2)\n    const afterLength = Math.floor(maxLength / 2)\n\n    return [\n      ...rawItems.slice(0, beforeLength - 1),\n      <Popover\n        constrainSize\n        content={\n          <Stack as=\"ol\" overflow=\"auto\" padding={space} space={space}>\n            {rawItems.slice(beforeLength - 1, len - afterLength)}\n          </Stack>\n        }\n        key=\"button\"\n        open={open}\n        placement=\"top\"\n        portal\n        ref={popoverElementRef}\n      >\n        <ExpandButton\n          fontSize={1}\n          mode=\"bleed\"\n          onClick={open ? collapse : expand}\n          padding={1}\n          ref={expandElementRef}\n          selected={open}\n          text=\"…\"\n        />\n      </Popover>,\n      ...rawItems.slice(len - afterLength),\n    ]\n  }\n\n  return rawItems\n}\n","import {CSSObject, getTheme_v2} from '@sanity/ui/theme'\nimport {css} from 'styled-components'\n\nimport {_responsive, ThemeProps} from '../../styles'\nimport {DialogPosition} from '../../types'\n\n/**\n * @internal\n */\nexport interface ResponsiveDialogPositionStyleProps {\n  $position: DialogPosition[]\n}\n\nexport function dialogStyle({theme}: ThemeProps): CSSObject {\n  const {color} = getTheme_v2(theme)\n\n  return {\n    '&:not([hidden])': {\n      display: 'flex',\n    },\n\n    'top': 0,\n    'left': 0,\n    'right': 0,\n    'bottom': 0,\n    'alignItems': 'center',\n    'justifyContent': 'center',\n    'outline': 'none',\n    'background': color.backdrop,\n  }\n}\n\nexport function responsiveDialogPositionStyle(\n  props: ResponsiveDialogPositionStyleProps & ThemeProps,\n): CSSObject[] {\n  const {media} = getTheme_v2(props.theme)\n\n  return _responsive(media, props.$position, (position) => ({'&&': {position}}))\n}\n\n/**\n * @internal\n */\nexport interface AnimationDialogStyleProps {\n  $animate: boolean\n}\n\nexport function animationDialogStyle(props: AnimationDialogStyleProps): ReturnType<typeof css> {\n  if (!props.$animate) return css``\n\n  return css`\n    @keyframes zoomIn {\n      from {\n        opacity: 0;\n        transform: scale(0.95);\n      }\n      to {\n        opacity: 1;\n        transform: scale(1);\n      }\n    }\n    @keyframes fadeIn {\n      from {\n        opacity: 0;\n      }\n      to {\n        opacity: 1;\n      }\n    }\n\n    animation: fadeIn 200ms ease-out;\n    // Animates the dialog card.\n    & > [data-ui='DialogCard'] {\n      animation: zoomIn 200ms ease-out;\n    }\n  `\n}\n","import {createGlobalScopedContext} from '../../lib/createGlobalScopedContext'\nimport {DialogPosition} from '../../types'\n\n/**\n * This API might change. DO NOT USE IN PRODUCTION.\n * @beta\n */\nexport interface DialogContextValue {\n  version: 0.0\n  position?: DialogPosition | DialogPosition[]\n  zOffset?: number | number[]\n}\n\n/**\n * @internal\n */\nexport const DialogContext = createGlobalScopedContext<DialogContextValue>(\n  '@sanity/ui/context/dialog',\n  {version: 0.0},\n)\n","import {useContext} from 'react'\n\nimport {DialogContext, DialogContextValue} from './dialogContext'\n\n/**\n * This API might change. DO NOT USE IN PRODUCTION.\n * @beta\n */\nexport function useDialog(): DialogContextValue {\n  return useContext(DialogContext)\n}\n","import {CloseIcon} from '@sanity/icons'\nimport {ThemeColorSchemeKey} from '@sanity/ui/theme'\nimport {forwardRef, useCallback, useEffect, useImperativeHandle, useRef} from 'react'\nimport {styled} from 'styled-components'\n\nimport {\n  containsOrEqualsElement,\n  focusFirstDescendant,\n  focusLastDescendant,\n  isHTMLElement,\n} from '../../helpers'\nimport {useClickOutsideEvent, useGlobalKeyDown, usePrefersReducedMotion} from '../../hooks'\nimport {Box, Button, Card, Container, Flex, Text} from '../../primitives'\nimport {ResponsivePaddingProps, ResponsiveWidthProps} from '../../primitives/types'\nimport {_getArrayProp} from '../../styles'\nimport {responsivePaddingStyle, ResponsivePaddingStyleProps} from '../../styles/internal'\nimport {useTheme_v2} from '../../theme'\nimport {DialogPosition, Radius} from '../../types'\nimport {Layer, LayerProps, Portal, useBoundaryElement, useLayer, usePortal} from '../../utils'\nimport {\n  animationDialogStyle,\n  AnimationDialogStyleProps,\n  dialogStyle,\n  responsiveDialogPositionStyle,\n  ResponsiveDialogPositionStyleProps,\n} from './styles'\nimport {useDialog} from './useDialog'\n\n/**\n * @public\n */\nexport interface DialogProps extends ResponsivePaddingProps, ResponsiveWidthProps {\n  /**\n   * @beta\n   */\n  __unstable_autoFocus?: boolean\n  /**\n   * @beta\n   */\n  __unstable_hideCloseButton?: boolean\n  cardRadius?: Radius | Radius[]\n  cardShadow?: number | number[]\n  contentRef?: React.ForwardedRef<HTMLDivElement>\n  footer?: React.ReactNode\n  header?: React.ReactNode\n  id: string\n  /** A callback that fires when the dialog becomes the top layer when it was not the top layer before. */\n  onActivate?: LayerProps['onActivate']\n  onClickOutside?: () => void\n  onClose?: () => void\n  portal?: string\n  position?: DialogPosition | DialogPosition[]\n  scheme?: ThemeColorSchemeKey\n  zOffset?: number | number[]\n  /**\n   * Whether the dialog should animate in on mount.\n   *\n   * @beta\n   * @defaultValue false\n   */\n  animate?: boolean\n}\n\ninterface DialogCardProps extends ResponsiveWidthProps {\n  /**\n   * @beta\n   */\n  __unstable_autoFocus: boolean\n  /**\n   * @beta\n   */\n  __unstable_hideCloseButton: boolean\n  children: React.ReactNode\n  contentRef?: React.ForwardedRef<HTMLDivElement>\n  footer: React.ReactNode\n  header: React.ReactNode\n  id: string\n  onClickOutside?: () => void\n  onClose?: () => void\n  portal?: string\n  radius: Radius | Radius[]\n  scheme?: ThemeColorSchemeKey\n  shadow: number | number[]\n}\n\nfunction isTargetWithinScope(\n  boundaryElement: HTMLElement | null,\n  portalElement: HTMLElement | null,\n  target: Node,\n): boolean {\n  if (!boundaryElement || !portalElement) return true\n\n  return (\n    containsOrEqualsElement(boundaryElement, target) ||\n    containsOrEqualsElement(portalElement, target)\n  )\n}\n\nconst StyledDialog = styled(Layer)<\n  ResponsiveDialogPositionStyleProps & ResponsivePaddingStyleProps & AnimationDialogStyleProps\n>(responsivePaddingStyle, dialogStyle, responsiveDialogPositionStyle, animationDialogStyle)\n\nconst DialogContainer = styled(Container)`\n  &:not([hidden]) {\n    display: flex;\n  }\n  width: 100%;\n  height: 100%;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`\n\nconst DialogCardRoot = styled(Card)`\n  &:not([hidden]) {\n    display: flex;\n  }\n  width: 100%;\n  min-height: 0;\n  max-height: 100%;\n  overflow: hidden;\n  overflow: clip;\n`\n\nconst DialogLayout = styled(Flex)`\n  flex: 1;\n  min-height: 0;\n  width: 100%;\n`\n\nconst DialogHeader = styled(Box)`\n  position: relative;\n  z-index: 2;\n`\n\nconst DialogContent = styled(Box)`\n  position: relative;\n  z-index: 1;\n  overflow: auto;\n  outline: none;\n`\n\nconst DialogFooter = styled(Box)`\n  position: relative;\n  z-index: 3;\n`\n\nconst DialogCard = forwardRef(function DialogCard(\n  props: DialogCardProps,\n  forwardedRef: React.ForwardedRef<HTMLDivElement>,\n) {\n  const {\n    __unstable_autoFocus: autoFocus,\n    __unstable_hideCloseButton: hideCloseButton,\n    children,\n    contentRef: forwardedContentRef,\n    footer,\n    header,\n    id,\n    onClickOutside,\n    onClose,\n    portal: portalProp,\n    radius: radiusProp,\n    scheme,\n    shadow: shadowProp,\n    width: widthProp,\n  } = props\n  const portal = usePortal()\n  const portalElement = portalProp ? portal.elements?.[portalProp] || null : portal.element\n  const boundaryElement = useBoundaryElement().element\n  const radius = _getArrayProp(radiusProp)\n  const shadow = _getArrayProp(shadowProp)\n  const width = _getArrayProp(widthProp)\n  const ref = useRef<HTMLDivElement | null>(null)\n  const contentRef = useRef<HTMLDivElement | null>(null)\n  const layer = useLayer()\n  const {isTopLayer} = layer\n  const labelId = `${id}_label`\n  const showCloseButton = Boolean(onClose) && hideCloseButton === false\n  const showHeader = Boolean(header) || showCloseButton\n\n  useImperativeHandle<HTMLDivElement | null, HTMLDivElement | null>(forwardedRef, () => ref.current)\n  useImperativeHandle<HTMLDivElement | null, HTMLDivElement | null>(\n    forwardedContentRef,\n    () => contentRef.current,\n  )\n\n  useEffect(() => {\n    if (!autoFocus) return\n\n    // On mount: focus the first focusable element\n    if (ref.current) {\n      focusFirstDescendant(ref.current)\n    }\n  }, [autoFocus, ref])\n\n  useGlobalKeyDown(\n    useCallback(\n      (event: KeyboardEvent) => {\n        if (!isTopLayer || !onClose) return\n\n        const target = document.activeElement\n\n        if (target && !isTargetWithinScope(boundaryElement, portalElement, target)) {\n          // Ignore key presses when the focused element is outside of scope\n          return\n        }\n\n        if (event.key === 'Escape') {\n          event.preventDefault()\n          event.stopPropagation()\n          onClose()\n        }\n      },\n      [boundaryElement, isTopLayer, onClose, portalElement],\n    ),\n  )\n\n  useClickOutsideEvent(\n    isTopLayer &&\n      onClickOutside &&\n      ((event) => {\n        const target = event.target as Node | null\n\n        if (target && !isTargetWithinScope(boundaryElement, portalElement, target)) {\n          // Ignore clicks outside of the scope\n          return\n        }\n\n        onClickOutside()\n      }),\n    () => [ref.current],\n  )\n\n  return (\n    <DialogContainer data-ui=\"DialogCard\" width={width}>\n      <DialogCardRoot radius={radius} ref={ref} scheme={scheme} shadow={shadow}>\n        <DialogLayout direction=\"column\">\n          {showHeader && (\n            <DialogHeader>\n              <Flex align=\"flex-start\" padding={3}>\n                <Box flex={1} padding={2}>\n                  {header && (\n                    <Text id={labelId} size={1} weight=\"semibold\">\n                      {header}\n                    </Text>\n                  )}\n                </Box>\n                {showCloseButton && (\n                  <Box flex=\"none\">\n                    <Button\n                      aria-label=\"Close dialog\"\n                      disabled={!onClose}\n                      icon={CloseIcon}\n                      mode=\"bleed\"\n                      onClick={onClose}\n                      padding={2}\n                    />\n                  </Box>\n                )}\n              </Flex>\n            </DialogHeader>\n          )}\n\n          <DialogContent flex={1} ref={contentRef} tabIndex={-1}>\n            {children}\n          </DialogContent>\n\n          {footer && <DialogFooter>{footer}</DialogFooter>}\n        </DialogLayout>\n      </DialogCardRoot>\n    </DialogContainer>\n  )\n})\n\nDialogCard.displayName = 'ForwardRef(DialogCard)'\n\n/**\n * The Dialog component.\n *\n * @public\n */\nexport const Dialog = forwardRef(function Dialog(\n  props: DialogProps & Omit<React.HTMLProps<HTMLDivElement>, 'as' | 'id' | 'width'>,\n  ref: React.Ref<HTMLDivElement>,\n) {\n  const dialog = useDialog()\n  const {layer} = useTheme_v2()\n  const {\n    __unstable_autoFocus: autoFocus = true,\n    __unstable_hideCloseButton: hideCloseButton = false,\n    cardRadius: cardRadiusProp = 4,\n    cardShadow = 3,\n    children,\n    contentRef,\n    footer,\n    header,\n    id,\n    onActivate,\n    onClickOutside,\n    onClose,\n    onFocus,\n    padding: paddingProp = 3,\n    portal: portalProp,\n    position: _positionProp,\n    scheme,\n    width: widthProp = 0,\n    zOffset: _zOffsetProp,\n    animate: _animate = false,\n    ...restProps\n  } = props\n  const positionProp = _positionProp ?? (dialog.position || 'fixed')\n  const zOffsetProp = _zOffsetProp ?? (dialog.zOffset || layer.dialog.zOffset)\n  const prefersReducedMotion = usePrefersReducedMotion()\n  const animate = prefersReducedMotion ? false : _animate\n  const portal = usePortal()\n  const portalElement = portalProp ? portal.elements?.[portalProp] || null : portal.element\n  const boundaryElement = useBoundaryElement().element\n  const cardRadius = _getArrayProp(cardRadiusProp)\n  const padding = _getArrayProp(paddingProp)\n  const position = _getArrayProp(positionProp)\n  const width = _getArrayProp(widthProp)\n  const zOffset = _getArrayProp(zOffsetProp)\n  const preDivRef = useRef<HTMLDivElement | null>(null)\n  const postDivRef = useRef<HTMLDivElement | null>(null)\n  const cardRef = useRef<HTMLDivElement | null>(null)\n  const focusedElementRef = useRef<HTMLElement | null>(null)\n\n  const handleFocus = useCallback(\n    (event: React.FocusEvent<HTMLDivElement>) => {\n      onFocus?.(event)\n\n      const target = event.target\n      const cardElement = cardRef.current\n\n      if (cardElement && target === preDivRef.current) {\n        focusLastDescendant(cardElement)\n\n        return\n      }\n\n      if (cardElement && target === postDivRef.current) {\n        focusFirstDescendant(cardElement)\n\n        return\n      }\n\n      if (isHTMLElement(event.target)) {\n        focusedElementRef.current = event.target\n      }\n    },\n    [onFocus],\n  )\n\n  const labelId = `${id}_label`\n\n  const rootClickTimeoutRef = useRef<NodeJS.Timeout>(undefined)\n\n  // If the resulting active element (a.k.a. focused element) is not withing scope when clicking\n  // within the dialog, then we want to focus the previously interactive element in the dialog instead.\n  // This is to allow the user to tab or close the dialog by pressing escape.\n  const handleRootClick = useCallback(() => {\n    if (rootClickTimeoutRef.current) {\n      clearTimeout(rootClickTimeoutRef.current)\n    }\n\n    rootClickTimeoutRef.current = setTimeout(() => {\n      const activeElement = document.activeElement\n\n      if (activeElement && !isTargetWithinScope(boundaryElement, portalElement, activeElement)) {\n        const target = focusedElementRef.current\n\n        if (!target || !document.body.contains(target)) {\n          // No previously focused element, or it's not in the document anymore\n          const cardElement = cardRef.current\n          if (cardElement) focusFirstDescendant(cardElement)\n\n          return\n        }\n\n        target.focus()\n      }\n    }, 0)\n  }, [boundaryElement, portalElement])\n\n  return (\n    <Portal __unstable_name={portalProp}>\n      <StyledDialog\n        {...restProps}\n        $animate={animate}\n        $padding={padding}\n        $position={position}\n        aria-labelledby={labelId}\n        aria-modal\n        data-ui=\"Dialog\"\n        id={id}\n        onActivate={onActivate}\n        onClick={handleRootClick}\n        onFocus={handleFocus}\n        ref={ref}\n        role=\"dialog\"\n        zOffset={zOffset}\n      >\n        {/* eslint-disable-next-line jsx-a11y/no-noninteractive-tabindex */}\n        <div ref={preDivRef} tabIndex={0} />\n        <DialogCard\n          __unstable_autoFocus={autoFocus}\n          __unstable_hideCloseButton={hideCloseButton}\n          contentRef={contentRef}\n          footer={footer}\n          header={header}\n          id={id}\n          onClickOutside={onClickOutside}\n          onClose={onClose}\n          portal={portalProp}\n          radius={cardRadius}\n          ref={cardRef}\n          scheme={scheme}\n          shadow={cardShadow}\n          width={width}\n        >\n          {children}\n        </DialogCard>\n        {/* eslint-disable-next-line jsx-a11y/no-noninteractive-tabindex */}\n        <div ref={postDivRef} tabIndex={0} />\n      </StyledDialog>\n    </Portal>\n  )\n})\nDialog.displayName = 'ForwardRef(Dialog)'\n","import {useMemo} from 'react'\n\nimport {DialogPosition} from '../../types'\nimport {DialogContext, DialogContextValue} from './dialogContext'\n\n/**\n * This API might change. DO NOT USE IN PRODUCTION.\n * @beta\n */\nexport interface DialogProviderProps {\n  children?: React.ReactNode\n  position?: DialogPosition | DialogPosition[]\n  zOffset?: number | number[]\n}\n\n/**\n * This API might change. DO NOT USE IN PRODUCTION.\n * @beta\n */\nexport function DialogProvider(props: DialogProviderProps): React.JSX.Element {\n  const {children, position, zOffset} = props\n\n  const contextValue: DialogContextValue = useMemo(\n    () => ({\n      version: 0.0,\n      position,\n      zOffset,\n    }),\n    [position, zOffset],\n  )\n\n  return <DialogContext.Provider value={contextValue}>{children}</DialogContext.Provider>\n}\n\nDialogProvider.displayName = 'DialogProvider'\n","import {ThemeColorSchemeKey} from '@sanity/ui/theme'\nimport {\n  cloneElement,\n  forwardRef,\n  useCallback,\n  useEffect,\n  useImperativeHandle,\n  useMemo,\n  useRef,\n  useState,\n} from 'react'\n\nimport {Popover, PopoverProps} from '../../primitives'\nimport {Placement, Radius} from '../../types'\nimport {MenuProps} from './menu'\n\n/**\n * @public\n */\nexport interface MenuButtonProps {\n  /**\n   * @beta Do not use in production.\n   */\n  __unstable_disableRestoreFocusOnClose?: boolean\n  /**\n   * @deprecated Use `popover={{boundaryElement: element}}` instead.\n   */\n  boundaryElement?: HTMLElement\n  button: React.JSX.Element\n  id: string\n  menu?: React.JSX.Element\n  onClose?: () => void\n  onOpen?: () => void\n  /**\n   * @deprecated Use `popover={{placement: 'top'}}` instead.\n   */\n  placement?: Placement\n  popover?: Omit<PopoverProps, 'content' | 'open'>\n  /**\n   * @deprecated Use `popover={{scheme: 'dark'}}` instead.\n   */\n  popoverScheme?: ThemeColorSchemeKey\n  /**\n   * @deprecated Use `popover={{radius: 2}}` instead.\n   */\n  popoverRadius?: Radius | Radius[]\n  /**\n   * @beta Do not use in production.\n   * @deprecated Use `popover={{portal: true}}` instead.\n   */\n  portal?: boolean\n  /**\n   * @deprecated Use `popover={{preventOverflow: true}}` instead.\n   */\n  preventOverflow?: boolean\n}\n\n/**\n * The `MenuButton` component follows the WAI-ARIA specification for menu buttons.\n *\n * @public\n */\nexport const MenuButton = forwardRef(function MenuButton(\n  props: MenuButtonProps,\n  forwardedRef: React.ForwardedRef<HTMLButtonElement | null>,\n) {\n  const {\n    __unstable_disableRestoreFocusOnClose: disableRestoreFocusOnClose = false,\n    boundaryElement: deprecated_boundaryElement,\n    button: buttonProp,\n    id,\n    menu: menuProp,\n    onClose,\n    onOpen,\n    placement: deprecated_placement,\n    popoverScheme: deprecated_popoverScheme,\n    portal: deprecated_portal = true,\n    popover,\n    popoverRadius: deprecated_popoverRadius,\n    preventOverflow: deprecated_preventOverflow,\n  } = props\n  const [open, setOpen] = useState(false)\n  const [shouldFocus, setShouldFocus] = useState<'first' | 'last' | null>(null)\n  const [buttonElement, setButtonElement] = useState<HTMLButtonElement | null>(null)\n  const [menuElements, setChildMenuElements] = useState<HTMLElement[]>([])\n  const openRef = useRef<boolean>(open)\n\n  // Notify consumers when the menu opens\n  useEffect(() => {\n    if (onOpen && open && !openRef.current) {\n      onOpen()\n    }\n  }, [onOpen, open])\n\n  // Notify consumers when the menu closes\n  useEffect(() => {\n    if (onClose && !open && openRef.current) {\n      onClose()\n    }\n  }, [onClose, open])\n\n  useEffect(() => {\n    openRef.current = open\n  }, [open])\n\n  const handleButtonClick = useCallback(() => {\n    setOpen((v) => !v)\n    setShouldFocus(null)\n  }, [])\n\n  // Prevent mouse event propagation when the menu is open.\n  // This is to ensure that `handleBlur` isn't triggered when clicking the menu button whilst open,\n  // which can lead to `setOpen` being triggered multiple times (once by `handleBlur`, and again by `handleButtonClick`).\n  const handleMouseDown = useCallback(\n    (event: PointerEvent) => {\n      if (open) event.preventDefault()\n    },\n    [open],\n  )\n\n  const handleButtonKeyDown = useCallback((event: React.KeyboardEvent<HTMLButtonElement>) => {\n    // On `ArrowDown`, `Enter` and `Space`\n    // - Opens menu and moves focus to first menuitem\n    if (event.key === 'ArrowDown' || event.key === 'Enter' || event.key === ' ') {\n      event.preventDefault()\n      setOpen(true)\n      setShouldFocus('first')\n\n      return\n    }\n\n    // On `ArrowUp`\n    // - \tOpens menu and moves focus to last menuitem\n    if (event.key === 'ArrowUp') {\n      event.preventDefault()\n      setOpen(true)\n      setShouldFocus('last')\n\n      return\n    }\n  }, [])\n\n  const handleMenuClickOutside = useCallback(\n    (event: MouseEvent) => {\n      const target = event.target\n\n      if (!(target instanceof Node)) {\n        return\n      }\n\n      if (buttonElement && (target === buttonElement || buttonElement.contains(target))) {\n        return\n      }\n\n      for (const el of menuElements) {\n        if (target === el || el.contains(target)) {\n          return\n        }\n      }\n\n      setOpen(false)\n    },\n    [buttonElement, menuElements],\n  )\n\n  const handleMenuEscape = useCallback(() => {\n    setOpen(false)\n    if (disableRestoreFocusOnClose) return\n    if (buttonElement) buttonElement.focus()\n  }, [buttonElement, disableRestoreFocusOnClose])\n\n  const handleBlur = useCallback(\n    (event: FocusEvent) => {\n      const target = event.relatedTarget\n\n      if (!(target instanceof Node)) {\n        return\n      }\n\n      for (const el of menuElements) {\n        if (el === target || el.contains(target)) {\n          return\n        }\n      }\n\n      setOpen(false)\n    },\n    [menuElements],\n  )\n\n  const handleItemClick = useCallback(() => {\n    setOpen(false)\n    if (disableRestoreFocusOnClose) return\n    if (buttonElement) buttonElement.focus()\n  }, [buttonElement, disableRestoreFocusOnClose])\n\n  const registerElement = useCallback((el: HTMLElement) => {\n    setChildMenuElements((els) => els.concat([el]))\n\n    return () => setChildMenuElements((els) => els.filter((_el) => _el !== el))\n  }, [])\n\n  const menuProps: MenuProps = {\n    'aria-labelledby': id,\n    'onBlurCapture': handleBlur,\n    'onClickOutside': handleMenuClickOutside,\n    'onEscape': handleMenuEscape,\n    'onItemClick': handleItemClick,\n    'originElement': buttonElement,\n    registerElement,\n    shouldFocus,\n  }\n\n  const menu = menuProp && cloneElement(menuProp, menuProps)\n\n  const button = useMemo(\n    () =>\n      buttonProp &&\n      cloneElement(buttonProp, {\n        'data-ui': 'MenuButton',\n        id,\n        'onClick': handleButtonClick,\n        'onKeyDown': handleButtonKeyDown,\n        'onMouseDown': handleMouseDown,\n        'aria-haspopup': true,\n        'aria-expanded': open,\n        'ref': setButtonElement,\n        'selected': buttonProp.props.selected ?? open,\n      }),\n    [buttonProp, handleButtonClick, handleButtonKeyDown, handleMouseDown, id, open],\n  )\n\n  // Forward button ref to parent\n  useImperativeHandle<HTMLButtonElement | null, HTMLButtonElement | null>(\n    forwardedRef,\n    () => buttonElement,\n    [buttonElement],\n  )\n\n  const popoverProps: MenuButtonProps['popover'] = useMemo(\n    () => ({\n      boundaryElement: deprecated_boundaryElement,\n      overflow: 'auto',\n      placement: deprecated_placement,\n      portal: deprecated_portal,\n      preventOverflow: deprecated_preventOverflow,\n      radius: deprecated_popoverRadius,\n      scheme: deprecated_popoverScheme,\n      ...(popover || {}),\n    }),\n    [\n      deprecated_boundaryElement,\n      deprecated_placement,\n      deprecated_popoverRadius,\n      deprecated_popoverScheme,\n      deprecated_portal,\n      deprecated_preventOverflow,\n      popover,\n    ],\n  )\n\n  return (\n    <Popover data-ui=\"MenuButton__popover\" {...popoverProps} content={menu} open={open}>\n      {button || <></>}\n    </Popover>\n  )\n})\nMenuButton.displayName = 'ForwardRef(MenuButton)'\n","import {css, keyframes} from 'styled-components'\n\nconst keyframe = keyframes`\n  0% {\n    background-position: 100%;\n  }\n  100% {\n    background-position: -100%;\n  }\n`\n\nconst animation = css`\n  background-image: linear-gradient(\n    to right,\n    var(--card-skeleton-color-from),\n    var(--card-skeleton-color-to),\n    var(--card-skeleton-color-from),\n    var(--card-skeleton-color-from),\n    var(--card-skeleton-color-from)\n  );\n  background-position: 100%;\n  background-size: 200% 100%;\n  background-attachment: fixed;\n  animation-name: ${keyframe};\n  animation-timing-function: ease-in-out;\n  animation-iteration-count: infinite;\n  animation-duration: 2000ms;\n`\n\n/**\n * This API might change. DO NOT USE IN PRODUCTION.\n * @beta\n */\nexport const skeletonStyle = css<{$animated: boolean; $visible: boolean}>`\n  opacity: ${({$visible}) => ($visible ? 1 : 0)};\n  transition: opacity 200ms ease-in;\n\n  @media screen and (prefers-reduced-motion: no-preference) {\n    ${({$animated}) =>\n      $animated\n        ? animation\n        : css`\n            background-color: var(--card-skeleton-color-from);\n          `}\n  }\n\n  @media screen and (prefers-reduced-motion: reduce) {\n    background-color: var(--card-skeleton-color-from);\n  }\n`\n","import {forwardRef, useEffect, useState} from 'react'\nimport {styled} from 'styled-components'\n\nimport {Box, BoxProps, ResponsiveRadiusProps} from '../../primitives'\nimport {_getArrayProp} from '../../styles'\nimport {responsiveRadiusStyle, ResponsiveRadiusStyleProps} from '../../styles/internal'\nimport {skeletonStyle} from './styles'\n\nconst StyledSkeleton = styled(Box)<\n  {$animated: boolean; $visible: boolean} & ResponsiveRadiusStyleProps\n>(responsiveRadiusStyle, skeletonStyle)\n\n/**\n * This API might change. DO NOT USE IN PRODUCTION.\n * @beta\n */\nexport interface SkeletonProps extends ResponsiveRadiusProps, Omit<BoxProps, 'children'> {\n  animated?: boolean\n  delay?: number\n}\n\n/**\n * This API might change. DO NOT USE IN PRODUCTION.\n * @beta\n */\nexport const Skeleton = forwardRef(function Skeleton(\n  props: SkeletonProps & React.HTMLProps<HTMLDivElement>,\n  ref: React.Ref<HTMLDivElement>,\n) {\n  const {animated = false, delay, radius, ...restProps} = props\n  const [visible, setVisible] = useState<boolean>(delay ? false : true)\n\n  useEffect(() => {\n    if (!delay) {\n      return undefined\n    }\n\n    const timeout = setTimeout(() => {\n      setVisible(true)\n    }, delay)\n\n    return () => {\n      clearTimeout(timeout)\n    }\n  }, [delay])\n\n  return (\n    <StyledSkeleton\n      {...restProps}\n      $animated={animated}\n      $radius={_getArrayProp(radius)}\n      $visible={delay ? visible : true}\n      ref={ref}\n    />\n  )\n})\nSkeleton.displayName = 'ForwardRef(Skeleton)'\n","import {getTheme_v2, ThemeFontKey} from '@sanity/ui/theme'\nimport {forwardRef} from 'react'\nimport {styled} from 'styled-components'\n\nimport {_getArrayProp, _responsive, ThemeProps} from '../../styles'\nimport {Skeleton, SkeletonProps} from './skeleton'\n\nconst StyledSkeleton = styled(Skeleton)<{$size: number[]; $style: ThemeFontKey}>((\n  props: {\n    $size: number[]\n    $style: ThemeFontKey\n  } & ThemeProps,\n) => {\n  const {$size, $style} = props\n  const {font, media} = getTheme_v2(props.theme)\n  const fontStyle = font[$style]\n\n  const styles = _responsive(media, $size, (sizeIndex) => {\n    const fontSize = fontStyle.sizes[sizeIndex]\n    const capHeight = fontSize.lineHeight - fontSize.ascenderHeight - fontSize.descenderHeight\n\n    return {height: capHeight}\n  })\n\n  return styles\n})\n\n/**\n * This API might change. DO NOT USE IN PRODUCTION.\n * @beta\n */\nexport interface TextSkeletonProps extends SkeletonProps {\n  size?: number | number[]\n}\n\n/**\n * This API might change. DO NOT USE IN PRODUCTION.\n * @beta\n */\nexport interface LabelSkeletonProps extends SkeletonProps {\n  size?: number | number[]\n}\n\n/**\n * This API might change. DO NOT USE IN PRODUCTION.\n * @beta\n */\nexport interface HeadingSkeletonProps extends SkeletonProps {\n  size?: number | number[]\n}\n\n/**\n * This API might change. DO NOT USE IN PRODUCTION.\n * @beta\n */\nexport interface CodeSkeletonProps extends SkeletonProps {\n  size?: number | number[]\n}\n\n/**\n * This API might change. DO NOT USE IN PRODUCTION.\n * @beta\n */\nexport const TextSkeleton = forwardRef(function TextSkeleton(\n  props: TextSkeletonProps &\n    Omit<React.HTMLProps<HTMLDivElement>, 'as' | 'children' | 'height' | 'size'>,\n  ref: React.Ref<HTMLDivElement>,\n) {\n  const {size = 2, ...restProps} = props\n  const $size = _getArrayProp(size)\n\n  return <StyledSkeleton {...restProps} $size={$size} ref={ref} $style=\"text\" />\n})\nTextSkeleton.displayName = 'ForwardRef(TextSkeleton)'\n\n/**\n * This API might change. DO NOT USE IN PRODUCTION.\n * @beta\n */\nexport const LabelSkeleton = forwardRef(function TextSkeleton(\n  props: LabelSkeletonProps &\n    Omit<React.HTMLProps<HTMLDivElement>, 'as' | 'children' | 'height' | 'size'>,\n  ref: React.Ref<HTMLDivElement>,\n) {\n  const {size = 2, ...restProps} = props\n  const $size = _getArrayProp(size)\n\n  return <StyledSkeleton {...restProps} $size={$size} ref={ref} $style=\"label\" />\n})\nLabelSkeleton.displayName = 'ForwardRef(LabelSkeleton)'\n\n/**\n * This API might change. DO NOT USE IN PRODUCTION.\n * @beta\n */\nexport const HeadingSkeleton = forwardRef(function TextSkeleton(\n  props: HeadingSkeletonProps &\n    Omit<React.HTMLProps<HTMLDivElement>, 'as' | 'children' | 'height' | 'size'>,\n  ref: React.Ref<HTMLDivElement>,\n) {\n  const {size = 2, ...restProps} = props\n  const $size = _getArrayProp(size)\n\n  return <StyledSkeleton {...restProps} $size={$size} ref={ref} $style=\"heading\" />\n})\nHeadingSkeleton.displayName = 'ForwardRef(HeadingSkeleton)'\n\n/**\n * This API might change. DO NOT USE IN PRODUCTION.\n * @beta\n */\nexport const CodeSkeleton = forwardRef(function TextSkeleton(\n  props: CodeSkeletonProps &\n    Omit<React.HTMLProps<HTMLDivElement>, 'as' | 'children' | 'height' | 'size'>,\n  ref: React.Ref<HTMLDivElement>,\n) {\n  const {size = 2, ...restProps} = props\n  const $size = _getArrayProp(size)\n\n  return <StyledSkeleton {...restProps} $size={$size} ref={ref} $style=\"code\" />\n})\nCodeSkeleton.displayName = 'ForwardRef(CodeSkeleton)'\n","import {forwardRef} from 'react'\n\nimport {Box, BoxProps} from '../../primitives'\n\n/**\n * @public\n */\nexport interface TabPanelProps extends BoxProps {\n  /**\n   * The `id` of the correlating `Tab` component.\n   */\n  'aria-labelledby': string\n  'id': string\n}\n\n/**\n * @public\n */\nexport const TabPanel = forwardRef(function TabPanel(\n  props: TabPanelProps &\n    Omit<React.HTMLProps<HTMLDivElement>, 'as' | 'aria-labelledby' | 'id' | 'role'>,\n  ref: React.ForwardedRef<HTMLDivElement>,\n) {\n  const {flex, ...restProps} = props\n\n  return (\n    <Box\n      data-ui=\"TabPanel\"\n      {...restProps}\n      flex={flex}\n      ref={ref}\n      role=\"tabpanel\"\n      tabIndex={props.tabIndex === undefined ? 0 : props.tabIndex}\n    >\n      {props.children}\n    </Box>\n  )\n})\nTabPanel.displayName = 'ForwardRef(TabPanel)'\n","import {getTheme_v2, ThemeColorStateToneKey} from '@sanity/ui/theme'\nimport {styled} from 'styled-components'\n\nimport {Card, Flex} from '../../primitives'\nimport type {ButtonTone} from '../../types'\n\nconst LOADING_BAR_HEIGHT = 2\n\nexport const STATUS_CARD_TONE = {\n  error: 'critical',\n  warning: 'caution',\n  success: 'positive',\n  info: 'neutral',\n} satisfies {[key: string]: ThemeColorStateToneKey}\n\nexport const BUTTON_TONE = {\n  error: 'critical',\n  warning: 'caution',\n  success: 'positive',\n  info: 'neutral',\n} satisfies {[key: string]: ButtonTone}\n\nexport const TextBox = styled(Flex)`\n  overflow-x: auto;\n`\n\nexport const StyledToast = styled(Card)`\n  pointer-events: all;\n  width: 100%;\n  position: relative;\n  overflow: hidden;\n  overflow: clip;\n\n  &[data-has-duration] {\n    padding-bottom: calc(${LOADING_BAR_HEIGHT}px / 2);\n  }\n`\n\nexport const LoadingBar = styled.div`\n  display: flex;\n  position: absolute;\n  bottom: 0px;\n  top: 0px;\n  left: 0px;\n  right: 0px;\n  pointer-events: none;\n  z-index: -1;\n  overflow: hidden;\n  overflow: clip;\n  background: transparent;\n  align-items: flex-end;\n  will-change: opacity;\n`\n\nexport const LoadingBarMask = styled(Card)`\n  position: absolute;\n  top: 0;\n  left: -${LOADING_BAR_HEIGHT}px;\n  right: -${LOADING_BAR_HEIGHT}px;\n  bottom: ${LOADING_BAR_HEIGHT}px;\n  z-index: 1;\n`\n\ntype LoadingBarProgressProps = Omit<React.ComponentProps<typeof Card>, 'tone'> & {\n  tone: ThemeColorStateToneKey\n}\nexport const LoadingBarProgress = styled<React.ComponentType<LoadingBarProgressProps>>(Card)`\n  display: block;\n  height: 100%;\n  width: 100%;\n  transform-origin: 0% 50%;\n  background-color: ${(props) => {\n    const {color} = getTheme_v2(props.theme)\n\n    return color.button.default[props.tone].enabled.bg\n  }};\n`\n","import {CloseIcon} from '@sanity/icons'\nimport {motion, type Variant, type Variants} from 'framer-motion'\n\nimport {usePrefersReducedMotion} from '../../hooks/usePrefersReducedMotion'\nimport {Box, Button, Flex, Stack, Text} from '../../primitives'\nimport {\n  BUTTON_TONE,\n  LoadingBar,\n  LoadingBarMask,\n  LoadingBarProgress,\n  STATUS_CARD_TONE,\n  StyledToast,\n  TextBox,\n} from './styles'\n\n/**\n * @public\n */\nexport interface ToastProps {\n  closable?: boolean\n  description?: React.ReactNode\n  onClose: () => void\n  radius?: number | number[]\n  title?: React.ReactNode\n  status?: 'error' | 'warning' | 'success' | 'info'\n  duration?: number\n  updatedAt?: number\n}\n\nconst ROLES = {\n  error: 'alert',\n  warning: 'alert',\n  success: 'alert',\n  info: 'alert',\n} as const\n\n// Support pattern used by Sanity Studio, that works around the lack of `duration: Infinity` support in older @sanity/ui versions\n// https://developer.mozilla.org/en-US/docs/Web/API/setTimeout#maximum_delay_value\nconst LONG_ENOUGH_BUT_NOT_TOO_LONG = 1000 * 60 * 60 * 24 * 24\n\n/**\n * The `Toast` component gives feedback to users when an action has taken place.\n *\n * Toasts can be closed with a close button, or auto-dismiss after a certain timeout.\n *\n * @public\n */\nexport function Toast(\n  props: ToastProps &\n    Omit<\n      React.HTMLProps<HTMLDivElement>,\n      | 'as'\n      | 'height'\n      | 'ref'\n      | 'title'\n      | 'onAnimationStart'\n      | 'onDragStart'\n      | 'onDragEnd'\n      | 'onDrag'\n    >,\n): React.JSX.Element {\n  const {\n    closable,\n    description,\n    duration,\n    onClose,\n    radius = 3,\n    title,\n    status,\n    updatedAt,\n    ...restProps\n  } = props\n  const cardTone = status ? STATUS_CARD_TONE[status] : 'default'\n  const buttonTone = status ? BUTTON_TONE[status] : 'default'\n  const role = status ? ROLES[status] : 'status'\n\n  const prefersReducedMotion = usePrefersReducedMotion()\n\n  const visualDuration: number = prefersReducedMotion ? 0 : 0.26\n  const transition = visualDuration\n    ? {type: 'spring' as const, visualDuration, bounce: 0.25}\n    : {duration: 0}\n\n  const hasDuration = duration && isFinite(duration) && duration < LONG_ENOUGH_BUT_NOT_TOO_LONG\n  const initial: ContainerVariants[] = ['hidden', 'initial']\n  const animate: ContainerVariants[] = ['visible', 'slideIn']\n  const exit: ContainerVariants[] = ['hidden', 'slideOut']\n\n  return (\n    <MotionToast\n      data-ui=\"Toast\"\n      role={role}\n      {...restProps}\n      data-has-duration={hasDuration ? '' : undefined}\n      custom={visualDuration}\n      radius={radius}\n      shadow={2}\n      tone={cardTone}\n      forwardedAs=\"li\"\n      layout=\"position\"\n      variants={container}\n      initial={initial}\n      animate={animate}\n      exit={exit}\n      transition={transition}\n    >\n      <MotionFlex align=\"flex-start\" variants={content} transition={transition}>\n        <TextBox flex={1} padding={3}>\n          <Stack space={3}>\n            {title && (\n              <Text size={1} weight=\"medium\">\n                {title}\n              </Text>\n            )}\n            {description && (\n              <MotionText muted size={1} variants={content} transition={transition}>\n                {description}\n              </MotionText>\n            )}\n          </Stack>\n        </TextBox>\n\n        {closable && (\n          <Box padding={1}>\n            <Button\n              as=\"button\"\n              icon={CloseIcon}\n              mode=\"bleed\"\n              padding={2}\n              tone={buttonTone}\n              onClick={onClose}\n              style={{verticalAlign: 'top'}}\n            />\n          </Box>\n        )}\n      </MotionFlex>\n      {hasDuration && (\n        <MotionLoadingBar variants={content} transition={transition}>\n          <LoadingBarMask tone={cardTone} radius={radius} />\n          <MotionLoadingBarProgress\n            key={`progress-${updatedAt}`}\n            tone={cardTone}\n            initial={{scaleX: 0}}\n            animate={{scaleX: 1}}\n            transition={{delay: visualDuration, duration: duration / 1_000, ease: 'linear'}}\n            onAnimationComplete={onClose}\n          />\n        </MotionLoadingBar>\n      )}\n    </MotionToast>\n  )\n}\n\nToast.displayName = 'Toast'\n\nconst container = {\n  initial: {y: 32, scale: 0.5, zIndex: 1},\n  hidden: {opacity: 0},\n  visible: (visualDuration: number) => {\n    if (!visualDuration) return {opacity: 1}\n\n    return {\n      opacity: 1,\n      transition: {\n        when: 'beforeChildren',\n        staggerChildren: visualDuration / 3,\n        duration: visualDuration / 3,\n      },\n    }\n  },\n  slideIn: {\n    y: 0,\n    scale: 1,\n  },\n  slideOut: {\n    zIndex: 0,\n    scale: 0.75,\n  },\n} satisfies Variants\ntype ContainerVariants = keyof typeof container\n\nconst content = {\n  initial: {\n    willChange: 'transform',\n  },\n  hidden: {\n    opacity: 0,\n  },\n  visible: {\n    opacity: 1,\n  },\n} satisfies Partial<Record<ContainerVariants, Variant>>\n\nconst MotionToast = motion.create(StyledToast)\nconst MotionFlex = motion.create(Flex)\nconst MotionText = motion.create(Text)\nconst MotionLoadingBar = motion.create(LoadingBar)\nconst MotionLoadingBarProgress = motion.create(LoadingBarProgress)\n","import {useSyncExternalStore} from 'react'\n\n/**\n * Some components should only render after mounting to the DOM, and not be rendered at all during SSR renderToString or equivalent.\n * @public\n */\nexport function useMounted(): boolean {\n  return useSyncExternalStore(\n    subscribe,\n    () => true,\n    () => false,\n  )\n}\n\nconst subscribe = () => () => {}\n","import {createGlobalScopedContext} from '../../lib/createGlobalScopedContext'\nimport {ToastContextValue} from './types'\n\nexport const ToastContext = createGlobalScopedContext<ToastContextValue | null>(\n  '@sanity/ui/context/toast',\n  null,\n)\n","import {styled} from 'styled-components'\n\nimport {Grid} from '../../primitives/grid'\nimport {useLayer} from '../../utils'\n\n/**\n * @public\n */\nexport interface ToastLayerProps {\n  children: React.ReactNode\n  padding?: number | number[]\n  paddingX?: number | number[]\n  paddingY?: number | number[]\n  gap?: number | number[]\n}\n\n/**\n * @internal\n */\nexport function ToastLayer(props: ToastLayerProps): React.JSX.Element {\n  const {children, padding = 4, paddingX, paddingY, gap = 3} = props\n  const {zIndex} = useLayer()\n\n  return (\n    <StyledLayer\n      forwardedAs=\"ul\"\n      data-ui=\"ToastProvider\"\n      padding={padding}\n      paddingX={paddingX}\n      paddingY={paddingY}\n      gap={gap}\n      columns={1}\n      style={{zIndex}}\n    >\n      {children}\n    </StyledLayer>\n  )\n}\n\nToastLayer.displayName = 'ToastLayer'\n\nconst StyledLayer = styled(Grid)`\n  box-sizing: border-box;\n  position: fixed;\n  right: 0;\n  bottom: 0;\n  list-style: none;\n  pointer-events: none;\n  max-width: 420px;\n  width: 100%;\n`\n","let toastId = 0\n\n/** @internal */\nexport function generateToastId(): string {\n  return String(toastId++)\n}\n","import {AnimatePresence} from 'framer-motion'\nimport {startTransition, useMemo, useState} from 'react'\n\nimport {useMounted} from '../../hooks/useMounted'\nimport {LayerProvider} from '../../utils'\nimport {Toast} from './toast'\nimport {ToastContext} from './toastContext'\nimport {ToastLayer, type ToastLayerProps} from './toastLayer'\nimport {generateToastId} from './toastState'\nimport {ToastContextValue, ToastParams} from './types'\n\ntype ToastState = {\n  dismiss: () => void\n  id: string\n  updatedAt: number\n  params: ToastParams\n}[]\n\n/**\n * @public\n */\nexport interface ToastProviderProps extends Omit<ToastLayerProps, 'children'> {\n  children?: React.ReactNode\n  zOffset?: number | number[]\n}\n\n/**\n * @public\n */\nexport function ToastProvider(props: ToastProviderProps): React.JSX.Element {\n  const {children, padding, paddingX, paddingY, gap, zOffset = 1} = props\n  const [state, setState] = useState<ToastState>([])\n  const mounted = useMounted()\n\n  const value: ToastContextValue = useMemo(() => {\n    const push = (params: ToastParams) => {\n      const id = params.id || generateToastId()\n      const duration = params.duration || 5000\n\n      startTransition(() => {\n        setState((prevState): ToastState => {\n          /**\n           * Backwards compatibility for `sanity` patterns workaround a lack of programatically dismissible toasts.\n           * It uses a super short duration that closes the toast immediately in previous versions of `@sanity/ui`.\n           * We interpret this as a request to dismiss the toast immediately, and remove it from the state right away.\n           * Even once we support programatic dismissal we'll need to keep this for backwards compatibility with v2 and v1.\n           */\n          if (duration === 0.01) {\n            return prevState.filter((toast) => toast.id !== id)\n          }\n\n          /**\n           * Creates a function to dismiss this specific toast.\n           * This function will be passed to the Toast component\n           * and called either on close button click or after duration.\n           */\n          const dismiss = () =>\n            startTransition(() =>\n              setState((currentState) => currentState.filter((toast) => toast.id !== id)),\n            )\n\n          /**\n           * Create updated state by:\n           * 1. Removing any existing toast with the same ID (prevents duplicates)\n           * 2. Adding the new toast with its dismiss handler\n           * 3. Updates the `updatedAt` timestamp, which resets progress bar count downs.\n           */\n          return [\n            ...prevState.filter((toast) => toast.id !== id),\n            {\n              dismiss,\n              id,\n              updatedAt: Date.now(),\n              params: {...params, duration},\n            },\n          ]\n        })\n      })\n\n      return id\n    }\n\n    return {version: 0.0, push}\n  }, [])\n\n  return (\n    <ToastContext.Provider value={value}>\n      {children}\n      {mounted && (\n        <LayerProvider zOffset={zOffset}>\n          <ToastLayer padding={padding} paddingX={paddingX} paddingY={paddingY} gap={gap}>\n            <AnimatePresence initial={false} mode=\"popLayout\">\n              {state.map(({dismiss, id, params, updatedAt}) => (\n                <Toast\n                  key={id}\n                  closable={params.closable}\n                  description={params.description}\n                  onClose={dismiss}\n                  status={params.status}\n                  title={params.title}\n                  duration={params.duration}\n                  updatedAt={updatedAt}\n                />\n              ))}\n            </AnimatePresence>\n          </ToastLayer>\n        </LayerProvider>\n      )}\n    </ToastContext.Provider>\n  )\n}\n\nToastProvider.displayName = 'ToastProvider'\n","import {useContext} from 'react'\n\nimport {isRecord} from '../../lib/isRecord'\nimport {ToastContext} from './toastContext'\nimport {ToastContextValue} from './types'\n\n/**\n * @public\n */\nexport function useToast(): ToastContextValue {\n  const value = useContext(ToastContext)\n\n  if (!value) {\n    throw new Error('useToast(): missing context value')\n  }\n\n  // NOTE: This check is for future-compatiblity\n  // - If the value is not an object, it’s not compatible with the current version\n  // - If the value is an object, but doesn’t have `version: 0.0`, it’s not compatible with the current version\n  if (!isRecord(value) || value.version !== 0.0) {\n    throw new Error('useToast(): the context value is not compatible')\n  }\n\n  return value\n}\n","import {TreeState} from './types'\n\nexport function _findPrevItemElement(\n  state: TreeState,\n  itemElements: HTMLElement[],\n  focusedElement: HTMLElement,\n): HTMLElement | null {\n  const idx = itemElements.indexOf(focusedElement)\n  const els = itemElements.slice(0, idx)\n  const len = els.length\n\n  for (let i = len - 1; i >= 0; i -= 1) {\n    const itemKey = els[i].getAttribute('data-tree-key')\n\n    if (!itemKey) {\n      continue\n    }\n\n    const segments = itemKey.split('/')\n\n    segments.pop()\n\n    const p: string[] = []\n\n    let expanded = true\n\n    for (let j = 0; j < segments.length; j += 1) {\n      p.push(segments[j])\n\n      const k = p.join('/')\n\n      if (!state[k]?.expanded) {\n        expanded = false\n        break\n      }\n    }\n\n    if (expanded) {\n      return els[i]\n    }\n  }\n\n  return null\n}\n\nexport function _findNextItemElement(\n  state: TreeState,\n  itemElements: HTMLElement[],\n  focusedElement: HTMLElement,\n): HTMLElement | null {\n  const idx = itemElements.indexOf(focusedElement)\n  const els = itemElements.slice(idx)\n  const len = itemElements.length\n\n  for (let i = 1; i < len; i += 1) {\n    if (!els[i]) {\n      continue\n    }\n\n    const itemKey = els[i].getAttribute('data-tree-key')\n\n    if (!itemKey) {\n      continue\n    }\n\n    const segments = itemKey.split('/')\n\n    segments.pop()\n\n    const p: string[] = []\n\n    let expanded = true\n\n    for (let j = 0; j < segments.length; j += 1) {\n      p.push(segments[j])\n\n      const k = p.join('/')\n\n      if (!state[k]?.expanded) {\n        expanded = false\n        break\n      }\n    }\n\n    if (expanded) {\n      return els[i]\n    }\n  }\n\n  return null\n}\n\nexport function _focusItemElement(el: HTMLElement): void {\n  if (el.getAttribute('role') === 'treeitem') {\n    el.focus()\n  }\n\n  if (el.getAttribute('role') === 'none') {\n    const firstChild = el.firstChild\n\n    if (firstChild && firstChild instanceof HTMLElement) {\n      firstChild.focus()\n    }\n  }\n}\n","import {createGlobalScopedContext} from '../../lib/createGlobalScopedContext'\nimport {TreeContextValue} from './types'\n\n/**\n * @internal\n */\nexport const TreeContext = createGlobalScopedContext<TreeContextValue | null>(\n  '@sanity/ui/context/tree',\n  null,\n)\n","import {\n  forwardRef,\n  useCallback,\n  useEffect,\n  useImperativeHandle,\n  useMemo,\n  useRef,\n  useState,\n} from 'react'\n\nimport {Stack} from '../../primitives'\nimport {_findNextItemElement, _findPrevItemElement, _focusItemElement} from './helpers'\nimport {TreeContext} from './treeContext'\nimport {TreeContextValue, TreeState} from './types'\n\n/**\n * This API might change. DO NOT USE IN PRODUCTION.\n * @beta\n */\nexport interface TreeProps {\n  space?: number | number[]\n}\n\n/**\n * This API might change. DO NOT USE IN PRODUCTION.\n * @beta\n */\nexport const Tree = forwardRef(function Tree(\n  props: TreeProps &\n    Omit<React.HTMLProps<HTMLDivElement>, 'align' | 'as' | 'height' | 'ref' | 'role' | 'wrap'>,\n  forwardedRef: React.ForwardedRef<HTMLDivElement>,\n): React.JSX.Element {\n  const {children, space = 1, onFocus, ...restProps} = props\n  const ref = useRef<HTMLDivElement | null>(null)\n  const [focusedElement, setFocusedElement] = useState<HTMLElement | null>(null)\n  const focusedElementRef = useRef(focusedElement)\n  const path: string[] = useMemo(() => [], [])\n  const [itemElements, setItemElements] = useState<HTMLElement[]>([])\n  const [state, setState] = useState<TreeState>({})\n  const stateRef = useRef(state)\n\n  useImperativeHandle<HTMLDivElement | null, HTMLDivElement | null>(forwardedRef, () => ref.current)\n\n  useEffect(() => {\n    focusedElementRef.current = focusedElement\n  }, [focusedElement])\n\n  useEffect(() => {\n    stateRef.current = state\n  }, [state])\n\n  const registerItem = useCallback(\n    (element: HTMLElement, path: string, expanded: boolean, selected: boolean) => {\n      setState((s) => ({...s, [path]: {element, expanded}}))\n\n      if (selected) {\n        setFocusedElement(element)\n      }\n\n      return () => {\n        setState((s) => {\n          const newState = {...s}\n\n          delete newState[path]\n\n          return newState\n        })\n      }\n    },\n    [],\n  )\n\n  const setExpanded = useCallback((path: string, expanded: boolean) => {\n    setState((s) => {\n      const itemState = s[path]\n\n      if (!itemState) return s\n\n      return {...s, [path]: {...itemState, expanded}}\n    })\n  }, [])\n\n  const contextValue: TreeContextValue = useMemo(\n    () => ({\n      version: 0.0,\n      focusedElement: focusedElement || itemElements[0] || null,\n      level: 0,\n      path,\n      registerItem,\n      setExpanded,\n      setFocusedElement,\n      space,\n      state,\n    }),\n    [focusedElement, itemElements, path, registerItem, setExpanded, space, state],\n  )\n\n  const handleKeyDown = useCallback(\n    (event: React.KeyboardEvent<HTMLDivElement>) => {\n      if (!focusedElementRef.current) return\n\n      if (event.key === 'ArrowDown') {\n        event.preventDefault()\n\n        const nextEl = _findNextItemElement(\n          stateRef.current,\n          itemElements,\n          focusedElementRef.current,\n        )\n\n        if (nextEl) {\n          _focusItemElement(nextEl)\n          setFocusedElement(nextEl)\n        }\n\n        return\n      }\n\n      if (event.key === 'ArrowUp') {\n        event.preventDefault()\n\n        const prevEl = _findPrevItemElement(\n          stateRef.current,\n          itemElements,\n          focusedElementRef.current,\n        )\n\n        if (prevEl) {\n          _focusItemElement(prevEl)\n          setFocusedElement(prevEl)\n        }\n\n        return\n      }\n\n      if (event.key === 'ArrowLeft') {\n        event.preventDefault()\n\n        const itemKey = focusedElementRef.current.getAttribute('data-tree-key')\n\n        if (!itemKey) return\n\n        const itemState = stateRef.current[itemKey]\n\n        if (!itemState) return\n\n        if (itemState.expanded) {\n          setState((s) => {\n            const itemState = s[itemKey]\n\n            if (!itemState) return s\n\n            return {...s, [itemKey]: {...itemState, expanded: false}}\n          })\n        } else {\n          const itemPath = itemKey.split('/')\n\n          itemPath.pop()\n\n          const parentKey = itemPath.join('/')\n          const parentState = parentKey && stateRef.current[parentKey]\n\n          if (parentState) {\n            parentState.element.focus()\n            setFocusedElement(parentState.element)\n          }\n        }\n\n        return\n      }\n\n      if (event.key === 'ArrowRight') {\n        event.preventDefault()\n\n        const focusedKey = focusedElementRef.current.getAttribute('data-tree-key')\n\n        if (!focusedKey) return\n\n        if (!stateRef.current[focusedKey]?.expanded) {\n          setState((s) => {\n            const itemState = s[focusedKey]\n\n            if (!itemState) return s\n\n            return {...s, [focusedKey]: {...itemState, expanded: true}}\n          })\n        }\n\n        return\n      }\n    },\n    [itemElements],\n  )\n\n  const handleFocus = useCallback(\n    (event: React.FocusEvent<HTMLDivElement>) => {\n      setFocusedElement(event.target)\n\n      // Call the element's `focus` handler\n      onFocus?.(event)\n    },\n    [onFocus],\n  )\n\n  useEffect(() => {\n    if (!ref.current) return\n    const _itemElements = Array.from(\n      ref.current.querySelectorAll('[data-ui=\"TreeItem\"]'),\n    ) as HTMLElement[]\n\n    // eslint-disable-next-line react-hooks/set-state-in-effect\n    setItemElements(_itemElements)\n  }, [children])\n\n  return (\n    <TreeContext.Provider value={contextValue}>\n      <Stack\n        as=\"ul\"\n        data-ui=\"Tree\"\n        {...restProps}\n        onFocus={handleFocus}\n        onKeyDown={handleKeyDown}\n        ref={ref}\n        role=\"tree\"\n        space={space}\n      >\n        {children}\n      </Stack>\n    </TreeContext.Provider>\n  )\n})\nTree.displayName = 'ForwardRef(Tree)'\n","import {getTheme_v2} from '@sanity/ui/theme'\nimport {css} from 'styled-components'\n\nimport {rem, ThemeProps} from '../../styles'\nimport {_cardColorStyle} from '../../styles/card'\n\nexport function treeItemRootStyle(): ReturnType<typeof css> {\n  return css`\n    &[role='none'] > [role='treeitem'] {\n      outline: none;\n      cursor: default;\n      border-radius: 3px;\n\n      background-color: var(--card-bg-color);\n      color: var(--treeitem-fg-color);\n\n      &:focus {\n        position: relative;\n      }\n    }\n\n    &[role='treeitem'] {\n      outline: none;\n\n      & > div {\n        cursor: default;\n        border-radius: 3px;\n\n        background-color: var(--card-bg-color);\n        color: var(--treeitem-fg-color);\n      }\n\n      &:focus > div {\n        position: relative;\n      }\n    }\n  `\n}\n\nexport function treeItemRootColorStyle(props: ThemeProps): ReturnType<typeof css> {\n  const $tone = 'default'\n  const {color} = getTheme_v2(props.theme)\n  const tone = color.selectable[$tone]\n\n  return css`\n    &[role='none'] {\n      & > [role='treeitem'] {\n        ${_cardColorStyle(color, tone.enabled)}\n      }\n\n      &[data-selected] > [role='treeitem'] {\n        ${_cardColorStyle(color, tone.pressed)}\n      }\n\n      @media (hover: hover) {\n        &:not([data-selected]) > [role='treeitem']:not(:focus):hover {\n          ${_cardColorStyle(color, tone.hovered)}\n        }\n\n        & > [role='treeitem']:focus {\n          ${_cardColorStyle(color, tone.selected)}\n        }\n      }\n    }\n\n    &[role='treeitem'] {\n      & > [data-ui='TreeItem__box'] {\n        ${_cardColorStyle(color, tone.enabled)}\n      }\n\n      &[data-selected] > [data-ui='TreeItem__box'] {\n        ${_cardColorStyle(color, tone.pressed)}\n      }\n\n      @media (hover: hover) {\n        &:not([data-selected]):not(:focus) > [data-ui='TreeItem__box']:hover {\n          ${_cardColorStyle(color, tone.hovered)}\n        }\n\n        &:focus > [data-ui='TreeItem__box'] {\n          ${_cardColorStyle(color, tone.selected)}\n        }\n      }\n    }\n  `\n}\n\nexport interface TreeItemBoxStyleProps {\n  $level: number\n}\n\nexport function treeItemBoxStyle(\n  props: TreeItemBoxStyleProps & ThemeProps,\n): ReturnType<typeof css> {\n  const {$level} = props\n  const {space} = getTheme_v2(props.theme)\n\n  return css`\n    padding-left: ${rem(space[2] * $level)};\n\n    &[data-as='a'] {\n      text-decoration: none;\n    }\n  `\n}\n","import {useContext} from 'react'\n\nimport {TreeContext} from './treeContext'\nimport {TreeContextValue} from './types'\n\n/**\n * @beta\n */\nexport function useTree(): TreeContextValue {\n  const tree = useContext(TreeContext)\n\n  if (!tree) {\n    throw new Error('Tree: missing context value')\n  }\n\n  return tree\n}\n","import {Stack} from '../../primitives'\nimport {useTree} from './useTree'\n\nexport interface TreeGroupProps {\n  expanded?: boolean\n}\n\nexport function TreeGroup(\n  props: TreeGroupProps &\n    Omit<React.HTMLProps<HTMLDivElement>, 'as' | 'height' | 'ref' | 'role' | 'wrap'>,\n): React.JSX.Element {\n  const {children, expanded = false, ...restProps} = props\n  const tree = useTree()\n\n  return (\n    <Stack\n      as=\"ul\"\n      data-ui=\"TreeGroup\"\n      {...restProps}\n      hidden={!expanded}\n      marginTop={tree.space}\n      role=\"group\"\n      space={tree.space}\n    >\n      {children}\n    </Stack>\n  )\n}\n","import {ToggleArrowRightIcon} from '@sanity/icons'\nimport {ThemeFontWeightKey} from '@sanity/ui/theme'\nimport {useCallback, useEffect, useId, useMemo, useRef, useState} from 'react'\nimport {styled} from 'styled-components'\n\nimport {Box, BoxProps, Flex, Text} from '../../primitives'\nimport {\n  treeItemBoxStyle,\n  TreeItemBoxStyleProps,\n  treeItemRootColorStyle,\n  treeItemRootStyle,\n} from './style'\nimport {TreeContext} from './treeContext'\nimport {TreeGroup} from './treeGroup'\nimport {useTree} from './useTree'\n\n/**\n * @beta\n */\nexport interface TreeItemProps {\n  expanded?: boolean\n  fontSize?: number | number[]\n  icon?: React.ElementType\n  /**\n   * Allows passing a custom element type to the link component\n   */\n  linkAs?: BoxProps['as']\n  padding?: number | number[]\n  space?: number | number[]\n  text?: React.ReactNode\n  weight?: ThemeFontWeightKey\n}\n\nconst StyledTreeItem = styled.li(treeItemRootStyle, treeItemRootColorStyle)\n\nconst TreeItemBox = styled(Box).attrs({forwardedAs: 'a'})<TreeItemBoxStyleProps>(treeItemBoxStyle)\n\nconst ToggleArrowText = styled(Text)`\n  & > svg {\n    transition: transform 100ms;\n  }\n`\n\n/**\n * This API might change. DO NOT USE IN PRODUCTION.\n * @beta\n */\nexport function TreeItem(\n  props: TreeItemProps & Omit<React.HTMLProps<HTMLLIElement>, 'as' | 'ref' | 'role'>,\n): React.JSX.Element {\n  const {\n    children,\n    expanded: expandedProp = false,\n    fontSize = 1,\n    href,\n    icon: IconComponent,\n    id: idProp,\n    linkAs,\n    muted,\n    onClick,\n    padding = 2,\n    selected = false,\n    space = 2,\n    text,\n    weight,\n    ...restProps\n  } = props\n  const [rootElement, setRootElement] = useState<HTMLLIElement | null>(null)\n  const treeitemRef = useRef<HTMLDivElement | null>(null)\n  const tree = useTree()\n  const {path, registerItem, setExpanded, setFocusedElement} = tree\n  const _id = useId()\n  const id = idProp || _id\n  const [itemPath, itemKey] = useMemo(() => {\n    const itemPath = path.concat([id || ''])\n    return [itemPath, itemPath.join('/')]\n  }, [id, path])\n  const itemState = tree.state[itemKey]\n  const focused = tree.focusedElement === rootElement\n  const expanded = itemState?.expanded === undefined ? expandedProp : itemState?.expanded || false\n  const tabIndex = tree.focusedElement && tree.focusedElement === rootElement ? 0 : -1\n  const contextValue = useMemo(\n    () => ({...tree, level: tree.level + 1, path: itemPath}),\n    [itemPath, tree],\n  )\n\n  const handleClick = useCallback(\n    (event: React.MouseEvent<HTMLLIElement>) => {\n      if (onClick) onClick(event)\n\n      const target = event.target\n\n      if (\n        target instanceof HTMLElement &&\n        (target.getAttribute('data-ui') === 'TreeItem' ||\n          target.closest('[data-ui=\"TreeItem__box\"]'))\n      ) {\n        event.stopPropagation()\n        setExpanded(itemKey, !expanded)\n        setFocusedElement(rootElement)\n      }\n    },\n    [expanded, itemKey, onClick, rootElement, setExpanded, setFocusedElement],\n  )\n\n  const handleKeyDown = useCallback(\n    (event: React.KeyboardEvent<HTMLElement>) => {\n      if (focused && event.key === 'Enter') {\n        const el = treeitemRef.current || rootElement\n\n        el?.click()\n      }\n    },\n    [focused, rootElement],\n  )\n\n  useEffect(() => {\n    if (!rootElement) return\n\n    return registerItem(rootElement, itemKey, expanded, selected)\n  }, [expanded, itemKey, registerItem, rootElement, selected])\n\n  const content = (\n    <Flex padding={padding}>\n      <Box\n        marginRight={space}\n        style={{\n          visibility: IconComponent || children ? 'visible' : 'hidden',\n          pointerEvents: 'none',\n        }}\n      >\n        {IconComponent && (\n          <Text muted={muted} size={fontSize} weight={weight}>\n            <IconComponent />\n          </Text>\n        )}\n        {!IconComponent && (\n          <ToggleArrowText muted={muted} size={fontSize} weight={weight}>\n            <ToggleArrowRightIcon style={{transform: expanded ? 'rotate(90deg)' : undefined}} />\n          </ToggleArrowText>\n        )}\n      </Box>\n      <Box flex={1}>\n        <Text muted={muted} size={fontSize} textOverflow=\"ellipsis\" weight={weight}>\n          {text}\n        </Text>\n      </Box>\n    </Flex>\n  )\n\n  if (href) {\n    return (\n      <StyledTreeItem\n        data-selected={selected ? '' : undefined}\n        data-tree-id={id}\n        data-tree-key={itemKey}\n        data-ui=\"TreeItem\"\n        {...restProps}\n        onClick={handleClick}\n        ref={setRootElement}\n        role=\"none\"\n      >\n        <TreeItemBox\n          $level={tree.level}\n          aria-expanded={expanded}\n          as={linkAs}\n          data-ui=\"TreeItem__box\"\n          href={href}\n          ref={treeitemRef}\n          role=\"treeitem\"\n          tabIndex={tabIndex}\n        >\n          {content}\n        </TreeItemBox>\n\n        <TreeContext.Provider value={contextValue}>\n          {children && <TreeGroup hidden={!expanded}>{children}</TreeGroup>}\n        </TreeContext.Provider>\n      </StyledTreeItem>\n    )\n  }\n\n  return (\n    <StyledTreeItem\n      data-selected={selected ? '' : undefined}\n      data-ui=\"TreeItem\"\n      data-tree-id={id}\n      data-tree-key={itemKey}\n      {...restProps}\n      aria-expanded={expanded}\n      onClick={handleClick}\n      onKeyDown={handleKeyDown}\n      ref={setRootElement}\n      role=\"treeitem\"\n      tabIndex={tabIndex}\n    >\n      <TreeItemBox $level={tree.level} as=\"div\" data-ui=\"TreeItem__box\">\n        {content}\n      </TreeItemBox>\n\n      <TreeContext.Provider value={contextValue}>\n        {children && <TreeGroup expanded={expanded}>{children}</TreeGroup>}\n      </TreeContext.Provider>\n    </StyledTreeItem>\n  )\n}\nTreeItem.displayName = 'TreeItem'\n"],"names":["_raf","fn","frameId","requestAnimationFrame","cancelAnimationFrame","_raf2","innerDispose","outerDispose","_hasFocus","element","Boolean","document","activeElement","contains","isFocusable","tabIndex","getAttribute","isHTMLAnchorElement","href","rel","isHTMLInputElement","type","disabled","isHTMLButtonElement","isHTMLSelectElement","isHTMLTextAreaElement","attemptFocus","focus","focusFirstDescendant","i","childNodes","length","child","isHTMLElement","focusLastDescendant","useArrayProp","val","defaultVal","$","_c","t0","_getArrayProp","_getElements","elementsArg","ret","el","Array","isArray","push","filter","useClickOutside","listener","boundaryElement","undefined","EMPTY_ARRAY","setElement","useState","t1","elements","setElements","elementsRef","useRef","t2","t3","prevElements","current","nextElements","includes","el_0","useEffect","t4","t5","handleWindowMouseDown","evt","target","Node","el_1","window","addEventListener","removeEventListener","useElementRect","useElementSize","_contentRect","useForwardedRef","ref","innerRef","Symbol","for","useImperativeHandle","ErrorBoundary","Component","state","error","getDerivedStateFromError","componentDidCatch","info","props","onCatch","render","message","jsx","Code","children","StyledAutocomplete","styled","div","withConfig","displayName","componentId","ListBox","Box","rotate","keyframes","AnimatedSpinnerIcon","SpinnerIcon","AutocompleteOption","id","onSelect","selected","value","setTimeout","handleClick","event","key","_isEnterToClickElement","currentTarget","handleKeyDown","autocompleteReducer","msg","activeValue","focused","query","listFocused","AUTOCOMPLETE_LISTBOX_IGNORE_KEYS","AUTOCOMPLETE_POPOVER_PLACEMENT","AUTOCOMPLETE_POPOVER_FALLBACK_PLACEMENTS","DEFAULT_RENDER_VALUE","option","DEFAULT_FILTER_OPTION","toLowerCase","indexOf","InnerAutocomplete","forwardRef","forwardedRef","customValidity","filterOptionProp","icon","loading","onBlur","onChange","onFocus","onQueryChange","openButton","openOnFocus","optionsProp","prefix","readOnly","relatedElements","renderOptionProp","renderPopover","restProps","suffix","t6","valueProp","border","filterOption","fontSize","listBox","options","padding","popover","radius","renderOption","renderValue","EMPTY_RECORD","paddingProp","t7","t8","t9","dispatch","useReducer","t10","t11","value_0","Card","Text","rootElementRef","resultsPopoverElementRef","inputElementRef","listBoxElementRef","inputElement","setInputElement","listFocusedRef","valueRef","valuePropRef","popoverMouseWithinRef","t12","t13","t14","listBoxId","t15","find","o","currentOption","t16","t17","filteredOptions","filteredOptionsLen","activeItemId","expanded","concat","focusInside","e","handleRootBlur","t18","event_0","listBoxElement","focusedElement","HTMLElement","listFocused_0","handleRootFocus","t19","v","handleOptionSelect","t20","event_1","preventDefault","activeOption","o_0","activeIndex","nextActiveOption","activeOption_0","o_1","activeIndex_0","nextActiveOption_0","listEl","handleRootKeyDown","t21","event_2","nextQuery","handleInputChange","t22","dispatchOpen","t23","event_3","handleInputFocus","t24","handlePopoverMouseEnter","t25","handlePopoverMouseLeave","t26","handleClearButtonClick","t27","handleClearButtonFocus","t28","t29","t30","t31","t32","t33","listElement","activeOption_1","o_2","activeIndex_1","activeItemElement","t34","bb0","t35","clearButton","openButtonBoxPadding","map","_temp","openButtonPadding","_temp2","openButtonProps","event_4","onClick","handleOpenClick","t36","Button","ChevronDownIcon","openButtonNode","t37","bb1","t38","inputValue","event_5","handleListBoxKeyDown","t39","bb2","t40","t41","option_0","active","cloneElement","Stack","t42","content","bb3","Popover","results","t43","TextInput","t44","jsxs","RenderPopover","hidden","onMouseEnter","onMouseLeave","Autocomplete","v_0","v_1","Math","max","StyledBreadcrumbs","ol","ExpandButton","Breadcrumbs","maxLength","separator","space","spaceRaw","open","setOpen","expandElementRef","popoverElementRef","collapse","expand","useClickOutsideEvent","Children","toArray","isValidElement","rawItems","items","useItems","item","itemIndex","Fragment","len","beforeLength","ceil","afterLength","floor","slice","dialogStyle","theme","color","getTheme_v2","display","backdrop","responsiveDialogPositionStyle","media","_responsive","$position","position","animationDialogStyle","$animate","css","DialogContext","createGlobalScopedContext","version","useDialog","useContext","isTargetWithinScope","portalElement","containsOrEqualsElement","StyledDialog","Layer","responsivePaddingStyle","DialogContainer","Container","DialogCardRoot","DialogLayout","Flex","DialogHeader","DialogContent","DialogFooter","DialogCard","__unstable_autoFocus","autoFocus","__unstable_hideCloseButton","hideCloseButton","contentRef","forwardedContentRef","footer","header","onClickOutside","onClose","portal","portalProp","radiusProp","scheme","shadow","shadowProp","width","widthProp","usePortal","useBoundaryElement","layer","useLayer","isTopLayer","labelId","showCloseButton","showHeader","stopPropagation","useGlobalKeyDown","target_0","CloseIcon","Dialog","dialog","useTheme_v2","_positionProp","_zOffsetProp","onActivate","cardRadius","cardShadow","zOffset","animate","cardRadiusProp","_animate","positionProp","zOffsetProp","usePrefersReducedMotion","preDivRef","postDivRef","cardRef","focusedElementRef","cardElement","handleFocus","rootClickTimeoutRef","clearTimeout","body","cardElement_0","handleRootClick","Portal","DialogProvider","contextValue","MenuButton","__unstable_disableRestoreFocusOnClose","deprecated_boundaryElement","button","buttonProp","menu","menuProp","onOpen","placement","deprecated_placement","popoverScheme","deprecated_popoverScheme","popoverRadius","deprecated_popoverRadius","preventOverflow","deprecated_preventOverflow","disableRestoreFocusOnClose","deprecated_portal","shouldFocus","setShouldFocus","buttonElement","setButtonElement","menuElements","setChildMenuElements","openRef","handleButtonClick","handleMouseDown","handleButtonKeyDown","handleMenuClickOutside","handleMenuEscape","relatedTarget","handleBlur","handleItemClick","els","els_0","_el","registerElement","overflow","popoverProps","keyframe","animation","skeletonStyle","$visible","$animated","StyledSkeleton","responsiveRadiusStyle","Skeleton","delay","animated","visible","setVisible","timeout","$size","$style","font","fontStyle","sizeIndex","sizes","height","lineHeight","ascenderHeight","descenderHeight","TextSkeleton","size","LabelSkeleton","HeadingSkeleton","CodeSkeleton","TabPanel","flex","LOADING_BAR_HEIGHT","STATUS_CARD_TONE","warning","success","BUTTON_TONE","TextBox","StyledToast","LoadingBar","LoadingBarMask","LoadingBarProgress","default","tone","enabled","bg","ROLES","LONG_ENOUGH_BUT_NOT_TOO_LONG","Toast","closable","description","duration","status","title","updatedAt","cardTone","buttonTone","role","visualDuration","bounce","transition","hasDuration","isFinite","initial","exit","verticalAlign","scaleX","ease","container","y","scale","zIndex","opacity","when","staggerChildren","slideIn","slideOut","willChange","MotionToast","motion","create","MotionFlex","MotionText","MotionLoadingBar","MotionLoadingBarProgress","useMounted","useSyncExternalStore","subscribe","ToastContext","ToastLayer","paddingX","paddingY","gap","StyledLayer","Grid","toastId","generateToastId","String","ToastProvider","setState","mounted","params","startTransition","prevState","toast","dismiss","currentState","toast_0","toast_1","Date","now","LayerProvider","AnimatePresence","dismiss_0","id_0","params_0","useToast","Error","isRecord","_findPrevItemElement","itemElements","idx","itemKey","segments","split","pop","p","j","k","join","_findNextItemElement","_focusItemElement","firstChild","TreeContext","Tree","setFocusedElement","path","setItemElements","stateRef","path_0","s","s_0","newState","registerItem","path_1","expanded_0","s_1","itemState","setExpanded","level","nextEl","prevEl","itemState_0","s_2","itemState_1","itemPath","parentKey","parentState","focusedKey","s_3","itemState_2","_itemElements","from","querySelectorAll","treeItemRootStyle","treeItemRootColorStyle","$tone","selectable","_cardColorStyle","pressed","hovered","treeItemBoxStyle","$level","rem","useTree","tree","TreeGroup","StyledTreeItem","li","TreeItemBox","attrs","forwardedAs","ToggleArrowText","TreeItem","IconComponent","idProp","linkAs","muted","text","weight","expandedProp","rootElement","setRootElement","treeitemRef","_id","useId","itemPath_0","closest","click","visibility","pointerEvents","ToggleArrowRightIcon","transform"],"mappings":"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"}