{"version":3,"file":"pane.mjs","sources":["../../src/structure/diffView/hooks/useCreatePathSyncChannel.ts","../../src/structure/diffView/constants.ts","../../src/structure/diffView/hooks/useDiffViewRouter.ts","../../src/structure/diffView/types/diffViewMode.ts","../../src/structure/diffView/hooks/useDiffViewState.ts","../../src/structure/diffView/hooks/useScrollMirror.tsx","../../src/structure/diffView/versionMode/components/VersionModeHeader.tsx","../../src/structure/diffView/components/DialogLayout.ts","../../src/structure/panes/document/document-layout/pickDocumentLayoutComponent.ts","../../src/structure/diffView/hooks/usePathSyncChannel.ts","../../src/structure/diffView/components/Scroller.ts","../../src/structure/diffView/components/DiffViewPane.tsx","../../src/structure/diffView/components/EditReferenceLinkComponent.tsx","../../src/structure/diffView/components/DiffView.tsx","../../src/structure/diffView/plugin/DiffViewDocumentLayout.tsx","../../src/structure/components/pane/constants.ts","../../src/structure/components/pane/usePaneLayout.ts","../../src/structure/components/pane/PaneDivider.tsx","../../src/structure/components/pane/Pane.tsx","../../src/structure/components/pane/PaneContent.styles.tsx","../../src/structure/components/pane/usePane.ts","../../src/structure/components/pane/PaneContent.tsx","../../src/structure/util/toLowerCaseNoSpaces.tsx","../../src/structure/components/pane/PaneMenuButtonItem.tsx","../../src/structure/components/pane/PaneContextMenuButton.tsx","../../src/structure/components/pane/PaneFooter.styles.tsx","../../src/structure/components/pane/PaneFooter.tsx","../../src/structure/components/pane/PaneHeader.styles.tsx","../../src/structure/components/pane/PaneHeader.tsx","../../src/structure/components/pane/PaneHeaderActionButton.tsx","../../src/structure/components/pane/PaneLayout.styles.tsx","../../src/structure/components/pane/helpers/_calcPaneResize.ts","../../src/structure/components/pane/helpers/_getDOMPath.ts","../../src/structure/components/pane/helpers/_sortElements.ts","../../src/structure/components/pane/paneLayoutController.ts","../../src/structure/components/pane/PaneLayout.tsx","../../src/structure/panes/error/ErrorPane.tsx","../../src/structure/components/Delay.tsx","../../src/structure/panes/loading/getWaitMessages.ts","../../src/structure/panes/loading/LoadingPane.tsx","../../src/structure/panes/document/useDocumentPane.tsx","../../src/structure/panes/document/comments/CommentsWrapper.tsx","../../src/structure/components/paneRouter/usePaneRouter.ts","../../src/structure/hooks/useFilteredReleases.ts","../../src/structure/hooks/useDocumentIdStack.ts","../../src/structure/useStructureTool.ts","../../src/structure/panes/document/constants.ts","../../src/structure/panes/document/DocumentInspectorMenuItemsResolver.tsx","../../src/structure/panes/document/useDocumentTitle.ts","../../src/structure/panes/document/DocumentOperationResults.tsx","../../src/structure/components/paneItem/helpers.tsx","../../src/structure/hasObsoleteDraft.ts","../../src/structure/mustChooseNewDocumentDestination.ts","../../src/structure/panes/document/documentInspector/DocumentInspectorHeader.tsx","../../src/structure/panes/document/documentInspector/DocumentInspectorPanel.tsx","../../src/structure/useStructureToolSetting.ts","../../src/structure/panes/document/inspectDialog/constants.ts","../../src/structure/panes/document/inspectDialog/helpers.ts","../../src/structure/panes/document/inspectDialog/InspectDialog.styles.tsx","../../src/structure/panes/document/inspectDialog/Search.tsx","../../src/structure/panes/document/inspectDialog/InspectDialog.tsx","../../src/structure/panes/document/documentPanel/banners/Banner.tsx","../../src/structure/panes/document/documentPanel/banners/DeletedDocumentBanners.tsx","../../src/structure/panes/document/documentPanel/banners/DeprecatedDocumentTypeBanner.tsx","../../src/structure/components/requestPermissionDialog/__telemetry__/RequestPermissionDialog.telemetry.ts","../../src/structure/components/requestPermissionDialog/RequestPermissionDialog.tsx","../../src/structure/components/requestPermissionDialog/useRoleRequestsStatus.tsx","../../src/structure/panes/document/documentPanel/banners/InsufficientPermissionBanner.tsx","../../src/structure/panes/document/documentPanel/banners/ReferenceChangedBanner.tsx","../../src/structure/panes/document/documentPanel/banners/ArchivedReleaseDocumentBanner.tsx","../../src/structure/panes/document/documentPanel/banners/CanvasLinkedBanner.tsx","../../src/structure/panes/document/documentPanel/banners/ChooseNewDocumentDestinationBanner.tsx","../../src/structure/panes/document/documentPanel/banners/CreateLinkedBanner.tsx","../../src/structure/panes/document/documentPanel/banners/DocumentNotInReleaseBanner.tsx","../../src/structure/panes/document/documentPanel/banners/__telemetry__/DraftLiveEditBanner.telemetry.ts","../../src/structure/panes/document/documentPanel/banners/ObsoleteDraftBanner.tsx","../../src/structure/panes/document/documentPanel/banners/OpenReleaseToEditBanner.tsx","../../src/structure/panes/document/documentPanel/banners/RevisionNotFoundBanner.tsx","../../src/structure/panes/document/documentPanel/banners/ScheduledReleaseBanner.tsx","../../src/structure/panes/document/documentPanel/banners/UnpublishedDocumentBanner.tsx","../../src/structure/panes/document/documentPanel/documentViews/FormHeader.tsx","../../src/structure/panes/document/documentPanel/documentViews/FormView.tsx","../../src/structure/panes/document/documentPanel/header/DocumentHeaderTabs.tsx","../../src/structure/panes/document/documentPanel/header/DocumentHeaderTitle.tsx","../../src/structure/panes/document/documentPanel/header/FavoriteToggle.tsx","../../src/structure/panes/document/documentPanel/header/DocumentPanelSubHeader.tsx","../../src/structure/panes/document/documentPanel/DocumentPanel.tsx","../../src/structure/menuNodes.ts","../../src/structure/constants.ts","../../src/structure/panes/document/statusBar/dialogs/constants.ts","../../src/structure/panes/document/statusBar/dialogs/ConfirmDialog.tsx","../../src/structure/panes/document/statusBar/dialogs/ModalDialog.tsx","../../src/structure/panes/document/statusBar/dialogs/PopoverDialog.tsx","../../src/structure/panes/document/statusBar/ActionStateDialog.tsx","../../src/structure/panes/document/statusBar/ActionMenuButton.tsx","../../src/structure/documentActions/DeleteAction.tsx","../../src/structure/documentActions/DiscardChangesAction.tsx","../../src/structure/documentActions/DuplicateAction.tsx","../../src/structure/documentActions/HistoryRestoreAction.tsx","../../src/structure/documentActions/__telemetry__/documentActions.telemetry.ts","../../src/structure/documentActions/PublishAction.tsx","../../src/structure/documentActions/UnpublishAction.tsx","../../src/structure/panes/document/statusBar/DocumentStatusBarActions.tsx","../../src/structure/panes/document/documentPanel/header/hook/useChipScrollPosition.tsx","../../src/structure/panes/document/documentPanel/header/perspective/DocumentPerspectiveList.tsx","../../src/structure/panes/document/documentPanel/header/DocumentPanelHeader.tsx","../../src/structure/components/spacerButton/SpacerButton.tsx","../../src/structure/panes/document/statusBar/DocumentBadges.tsx","../../src/structure/panes/document/timeline/constants.ts","../../src/structure/panes/document/timeline/helpers.ts","../../src/structure/panes/document/timeline/expandableTimelineItemButton.tsx","../../src/structure/panes/document/timeline/timeline.styled.tsx","../../src/structure/panes/document/timeline/timelineI18n.ts","../../src/structure/panes/document/timeline/userAvatarStack.tsx","../../src/structure/panes/document/timeline/timelineItem.tsx","../../src/structure/panes/document/timeline/utils.ts","../../src/structure/panes/document/timeline/timeline.tsx","../../src/structure/panes/document/timeline/TimelineError.tsx","../../src/structure/panes/document/timeline/timelineMenu.tsx","../../src/structure/panes/document/statusBar/DocumentStatusPulse/AnimatedStatusIcon.tsx","../../src/structure/panes/document/statusBar/DocumentStatusPulse/DocumentStatusPulse.tsx","../../src/structure/panes/document/statusBar/DocumentStatusLine.tsx","../../src/structure/panes/document/statusBar/RevisionStatusLine.tsx","../../src/structure/panes/document/statusBar/useResizeObserver.ts","../../src/structure/panes/document/statusBar/DocumentStatusBar.tsx","../../src/structure/panes/document/keyboardShortcuts/DocumentActionShortcuts.tsx","../../src/structure/panes/document/menuItems.ts","../../src/structure/panes/document/document-layout/DocumentLayoutError.tsx","../../src/structure/panes/document/document-layout/DocumentLayoutFooter.tsx","../../src/structure/panes/document/document-layout/DocumentLayout.tsx","../../src/structure/panes/document/document-layout/useDocumentLayoutComponent.ts","../../src/structure/hooks/useDocumentLastRev.ts","../../src/structure/panes/document/__telemetry__/documentPanes.telemetry.ts","../../src/structure/panes/document/getInitialValueTemplateOpts.ts","../../src/structure/panes/document/useDocumentPaneInitialValue.ts","../../src/structure/panes/document/useDocumentPaneInspector.ts","../../src/structure/panes/document/usePreviewUrl.ts","../../src/structure/panes/document/DocumentPaneProvider.tsx","../../src/structure/panes/document/DocumentEventsPane.tsx","../../src/structure/panes/document/DocumentPaneLegacyTimeline.tsx","../../src/structure/panes/document/DocumentPaneProviderWrapper.tsx","../../src/structure/panes/document/useResetHistoryParams.ts","../../src/structure/panes/document/DocumentPane.tsx","../../src/structure/components/paneRouter/BackLink.tsx","../../src/structure/components/paneRouter/ChildLink.tsx","../../src/structure/components/paneRouter/ParameterizedLink.tsx","../../src/structure/components/paneRouter/ReferenceChildLink.tsx","../../src/structure/components/paneRouter/PaneRouterProvider.tsx","../../src/structure/panes/unknown/UnknownPaneType.tsx","../../src/structure/panes/StructureToolPane.tsx","../../src/structure/components/DocTitle.tsx","../../src/structure/components/confirmDeleteDialog/ConfirmDeleteDialogBody.styles.tsx","../../src/structure/components/paneItem/PaneItemPreview.tsx","../../src/structure/components/confirmDeleteDialog/ReferencePreviewLink.tsx","../../src/structure/components/confirmDeleteDialog/ConfirmDeleteDialogBody.tsx","../../src/structure/components/confirmDeleteDialog/useReferringDocuments.ts","../../src/structure/components/confirmDeleteDialog/ConfirmDeleteDialog.tsx","../../src/structure/components/confirmDeleteDialog/index.tsx","../../src/structure/components/IntentButton.tsx","../../src/structure/components/paneHeaderActions/InsufficientPermissionsMessageTooltip.tsx","../../src/structure/components/paneHeaderActions/PaneHeaderCreateButton.tsx","../../src/structure/components/paneHeaderActions/PaneHeaderActions.tsx","../../src/structure/components/MissingSchemaType.tsx","../../src/structure/components/paneItem/PaneItem.tsx","../../src/structure/components/RenderActionCollectionState.tsx","../../src/structure/components/RenderBadgeCollectionState.tsx","../../src/structure/panes/documentList/constants.ts","../../src/structure/panes/documentList/DocumentListPaneContent.tsx","../../src/structure/panes/documentList/helpers.ts","../../src/structure/panes/documentList/listenSearchQuery.ts","../../src/structure/panes/documentList/useDocumentList.ts","../../src/structure/panes/documentList/DocumentListPane.tsx","../../src/structure/panes/documentList/PaneHeader.tsx","../../src/structure/panes/documentList/sheetList/DocumentSheetListSelect.tsx","../../src/structure/panes/documentList/sheetList/DocumentSheetListProvider.tsx","../../src/structure/panes/documentList/sheetList/SheetListCell.tsx","../../src/structure/panes/documentList/sheetList/useDocumentSheetColumns.tsx","../../src/structure/panes/documentList/sheetList/ColumnsControl.tsx","../../src/structure/panes/documentList/sheetList/DocumentSheetListFilter.tsx","../../src/structure/panes/documentList/sheetList/DocumentSheetListHeader.tsx","../../src/structure/panes/documentList/sheetList/DocumentSheetListPaginator.tsx","../../src/structure/panes/documentList/sheetList/useDocumentSheetListStore.ts","../../src/structure/panes/documentList/sheetList/useDocumentSheetList.ts","../../src/structure/panes/documentList/sheetList/DocumentSheetListPane.tsx","../../src/structure/panes/documentList/PaneContainer.tsx","../../src/structure/documentBadges/LiveEditBadge.ts","../../src/structure/getIntentState.ts","../../src/structure/panes/document/inspectors/changes/ChangesInspector.tsx","../../src/structure/panes/document/timeline/events/EventTimelineItem.tsx","../../src/structure/panes/document/timeline/events/PublishedEventMenu.tsx","../../src/structure/panes/document/timeline/events/EventsTimeline.tsx","../../src/structure/panes/document/timeline/events/EventsTimelineMenu.tsx","../../src/structure/panes/document/inspectors/changes/EventsInspector.tsx","../../src/structure/panes/document/inspectors/changes/EventsSelector.tsx","../../src/structure/panes/document/inspectors/changes/HistorySelector.tsx","../../src/structure/panes/document/inspectors/changes/ChangesTabs.tsx","../../src/structure/panes/document/inspectors/changes/index.ts","../../src/structure/panes/document/inspectors/validation/getPathTitles.ts","../../src/structure/panes/document/inspectors/validation/ValidationInspector.tsx","../../src/structure/panes/document/inspectors/validation/index.ts","../../src/structure/router.ts","../../src/structure/structureTool.ts"],"sourcesContent":["import {useMemo} from 'react'\nimport {Subject} from 'rxjs'\n\nimport {type PathSyncChannel, type PathSyncState} from '../types/pathSyncChannel'\n\n/**\n * @internal\n */\nexport function useCreatePathSyncChannel(): PathSyncChannel {\n  return useMemo(() => new Subject<PathSyncState>(), [])\n}\n","/**\n * @internal\n */\nexport const DIFF_VIEW_SEARCH_PARAMETER = 'diffView'\n\n/**\n * @internal\n */\nexport const DIFF_VIEW_PREVIOUS_DOCUMENT_SEARCH_PARAMETER = 'previousDocument'\n\n/**\n * @internal\n */\nexport const DIFF_VIEW_NEXT_DOCUMENT_SEARCH_PARAMETER = 'nextDocument'\n\n/**\n * @internal\n */\nexport const DIFF_SEARCH_PARAM_DELIMITER = ','\n","import {fromPairs, toPairs} from 'lodash'\nimport {useCallback} from 'react'\nimport {useRouter} from 'sanity/router'\n\nimport {\n  DIFF_SEARCH_PARAM_DELIMITER,\n  DIFF_VIEW_NEXT_DOCUMENT_SEARCH_PARAMETER,\n  DIFF_VIEW_PREVIOUS_DOCUMENT_SEARCH_PARAMETER,\n  DIFF_VIEW_SEARCH_PARAMETER,\n} from '../constants'\nimport {type DiffViewMode} from '../types/diffViewMode'\n\ntype NavigateDiffView = (\n  options: {\n    mode?: DiffViewMode\n  } & Partial<\n    Record<\n      'previousDocument' | 'nextDocument',\n      {\n        type: string\n        id: string\n      }\n    >\n  >,\n) => void\n\nexport interface DiffViewRouter {\n  navigateDiffView: NavigateDiffView\n  exitDiffView: () => void\n}\n\n/**\n * @internal\n */\nexport function useDiffViewRouter(): DiffViewRouter {\n  const {navigate, state: routerState} = useRouter()\n\n  const navigateDiffView = useCallback<NavigateDiffView>(\n    ({mode, previousDocument, nextDocument}) => {\n      const next = {\n        ...fromPairs(routerState._searchParams),\n        ...(mode\n          ? {\n              [DIFF_VIEW_SEARCH_PARAMETER]: mode,\n            }\n          : {}),\n        ...(previousDocument\n          ? {\n              [DIFF_VIEW_PREVIOUS_DOCUMENT_SEARCH_PARAMETER]: [\n                previousDocument.type,\n                previousDocument.id,\n              ].join(DIFF_SEARCH_PARAM_DELIMITER),\n            }\n          : {}),\n        ...(nextDocument\n          ? {\n              [DIFF_VIEW_NEXT_DOCUMENT_SEARCH_PARAMETER]: [nextDocument.type, nextDocument.id].join(\n                DIFF_SEARCH_PARAM_DELIMITER,\n              ),\n            }\n          : {}),\n      }\n\n      navigate({\n        ...routerState,\n        _searchParams: toPairs(next),\n      })\n    },\n    [navigate, routerState],\n  )\n\n  const exitDiffView = useCallback(() => {\n    navigate({\n      ...routerState,\n      _searchParams: (routerState._searchParams ?? []).filter(\n        ([key]) =>\n          ![\n            DIFF_VIEW_SEARCH_PARAMETER,\n            DIFF_VIEW_PREVIOUS_DOCUMENT_SEARCH_PARAMETER,\n            DIFF_VIEW_NEXT_DOCUMENT_SEARCH_PARAMETER,\n          ].includes(key),\n      ),\n    })\n  }, [navigate, routerState])\n\n  return {\n    navigateDiffView,\n    exitDiffView,\n  }\n}\n","/**\n * @internal\n */\nexport const diffViewModes = ['version'] as const\n\n/**\n * @internal\n */\nexport type DiffViewMode = (typeof diffViewModes)[number]\n","import {useEffect, useMemo} from 'react'\nimport {useRouter} from 'sanity/router'\n\nimport {\n  DIFF_SEARCH_PARAM_DELIMITER,\n  DIFF_VIEW_NEXT_DOCUMENT_SEARCH_PARAMETER,\n  DIFF_VIEW_PREVIOUS_DOCUMENT_SEARCH_PARAMETER,\n  DIFF_VIEW_SEARCH_PARAMETER,\n} from '../constants'\nimport {type DiffViewMode, diffViewModes} from '../types/diffViewMode'\n\nfunction isDiffViewMode(maybeDiffViewMode: unknown): maybeDiffViewMode is DiffViewMode {\n  return diffViewModes.includes(maybeDiffViewMode as DiffViewMode)\n}\n\ntype DiffViewState =\n  | {\n      isActive: true\n      state: 'ready'\n      mode: DiffViewMode\n      documents: Record<\n        'previous' | 'next',\n        {\n          type: string\n          id: string\n        }\n      >\n    }\n  | {\n      isActive: true\n      state: 'error'\n      mode: DiffViewMode\n      documents?: never\n    }\n  | {\n      isActive: false\n      state?: never\n      mode?: never\n      documents?: never\n    }\n\nexport function useDiffViewState({\n  onParamsError,\n}: {\n  onParamsError?: (errors: DiffViewStateErrorWithInput[]) => void\n} = {}): DiffViewState {\n  const {state: routerState} = useRouter()\n  const searchParams = new URLSearchParams(routerState._searchParams)\n  const previousDocument = searchParams.get(DIFF_VIEW_PREVIOUS_DOCUMENT_SEARCH_PARAMETER)\n  const nextDocument = searchParams.get(DIFF_VIEW_NEXT_DOCUMENT_SEARCH_PARAMETER)\n  const mode = searchParams.get(DIFF_VIEW_SEARCH_PARAMETER)\n  const anyParamSet = [previousDocument, nextDocument, mode].some((param) => param !== null)\n\n  const params = useMemo(\n    () =>\n      parseParams({\n        previousDocument: previousDocument ?? '',\n        nextDocument: nextDocument ?? '',\n        mode: mode ?? '',\n      }),\n    [mode, nextDocument, previousDocument],\n  )\n\n  useEffect(() => {\n    if (params.result === 'error' && anyParamSet) {\n      onParamsError?.(params.errors)\n    }\n  }, [anyParamSet, onParamsError, params])\n\n  if (params.result === 'error') {\n    return {\n      isActive: false,\n    }\n  }\n\n  return {\n    state: 'ready',\n    isActive: true,\n    ...params.params,\n  }\n}\n\ntype DiffViewStateError =\n  | 'invalidModeParam'\n  | 'invalidPreviousDocumentParam'\n  | 'invalidNextDocumentParam'\n\ntype DiffViewStateErrorWithInput = [error: DiffViewStateError, input: unknown]\n\ninterface ParamsSuccess {\n  result: 'success'\n  params: Pick<DiffViewState & {state: 'ready'}, 'mode' | 'documents'>\n}\n\ninterface ParamsError {\n  result: 'error'\n  errors: DiffViewStateErrorWithInput[]\n}\n\nfunction parseParams({\n  previousDocument,\n  nextDocument,\n  mode,\n}: {\n  previousDocument: string\n  nextDocument: string\n  mode: string\n}): ParamsSuccess | ParamsError {\n  const errors: DiffViewStateErrorWithInput[] = []\n\n  const [previousDocumentType, previousDocumentId] = previousDocument\n    .split(DIFF_SEARCH_PARAM_DELIMITER)\n    .filter(Boolean)\n\n  const [nextDocumentType, nextDocumentId] = nextDocument\n    .split(DIFF_SEARCH_PARAM_DELIMITER)\n    .filter(Boolean)\n\n  if (!isDiffViewMode(mode)) {\n    errors.push(['invalidModeParam', mode])\n  }\n\n  if (typeof previousDocumentType === 'undefined' || typeof previousDocumentId === 'undefined') {\n    errors.push(['invalidPreviousDocumentParam', previousDocument])\n  }\n\n  if (typeof nextDocumentType === 'undefined' || typeof nextDocumentId === 'undefined') {\n    errors.push(['invalidNextDocumentParam', nextDocument])\n  }\n\n  if (errors.length !== 0) {\n    return {\n      result: 'error',\n      errors,\n    }\n  }\n\n  return {\n    result: 'success',\n    params: {\n      mode,\n      documents: {\n        previous: {\n          type: previousDocumentType,\n          id: previousDocumentId,\n        },\n        next: {\n          type: nextDocumentType,\n          id: nextDocumentId,\n        },\n      },\n    },\n  } as ParamsSuccess\n}\n","import {useEffect} from 'react'\nimport ScrollMirror from 'scrollmirror'\n\n/**\n * Use the ScrollMirror library to synchronise the scroll position for an array of elements.\n *\n * @internal\n */\nexport function useScrollMirror(elements: (HTMLElement | null)[]): void {\n  useEffect(() => {\n    const existentElements = elements.filter((element) => element !== null)\n\n    if (existentElements.length === 0) {\n      return undefined\n    }\n\n    const scrollMirror = new ScrollMirror(existentElements)\n    return () => scrollMirror.destroy()\n  }, [elements])\n}\n","import {CloseIcon, LockIcon, TransferIcon} from '@sanity/icons'\nimport {\n  Box,\n  // eslint-disable-next-line no-restricted-imports -- we need more control over how the `Button` component is rendered\n  Button,\n  type ButtonTone,\n  Flex,\n  Menu,\n  // eslint-disable-next-line no-restricted-imports -- the `VersionModeHeader` component needs more control over how the `MenuItem` component is rendered\n  MenuItem,\n  Stack,\n  Text,\n} from '@sanity/ui'\n// eslint-disable-next-line @sanity/i18n/no-i18next-import -- figure out how to have the linter be fine with importing types-only\nimport {type TFunction} from 'i18next'\nimport {type ComponentProps, type ComponentType, useCallback, useMemo} from 'react'\nimport {\n  type DocumentLayoutProps,\n  formatRelativeLocalePublishDate,\n  getDraftId,\n  getPublishedId,\n  getReleaseIdFromReleaseDocumentId,\n  getReleaseTone,\n  getVersionFromId,\n  getVersionId,\n  isDraftId,\n  isPublishedId,\n  isReleaseDocument,\n  isReleaseScheduledOrScheduling,\n  ReleaseAvatar,\n  type ReleaseDocument,\n  useActiveReleases,\n  useDocumentVersions,\n  useEditState,\n  useTranslation,\n  useWorkspace,\n} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {MenuButton} from '../../../../ui-components/menuButton/MenuButton'\nimport {structureLocaleNamespace} from '../../../i18n'\nimport {useDiffViewRouter} from '../../hooks/useDiffViewRouter'\nimport {useDiffViewState} from '../../hooks/useDiffViewState'\n\nconst VersionModeHeaderLayout = styled.header`\n  display: grid;\n  grid-area: header;\n  grid-template-columns: 1fr min-content 1fr;\n  border-block-end: 1px solid var(--card-border-color);\n`\n\nconst VersionModeHeaderLayoutSection = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n\n/**\n * The header component that is rendered when diff view is being used to compare versions of a\n * document.\n *\n * @internal\n */\nexport const VersionModeHeader: ComponentType<\n  {state: 'pending' | 'ready' | 'error'} & Pick<DocumentLayoutProps, 'documentId'>\n> = ({documentId, state}) => {\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {data: documentVersions} = useDocumentVersions({documentId})\n  const {exitDiffView, navigateDiffView} = useDiffViewRouter()\n  const {documents} = useDiffViewState()\n  const activeReleases = useActiveReleases()\n  const releasesIds = documentVersions.flatMap((id) => getVersionFromId(id) ?? [])\n\n  const releases = useMemo(() => {\n    return activeReleases.data.filter((release) => {\n      const releaseId = getReleaseIdFromReleaseDocumentId(release._id)\n      return typeof releaseId !== 'undefined' && releasesIds.includes(releaseId)\n    })\n  }, [activeReleases.data, releasesIds])\n\n  const onSelectPreviousRelease = useCallback(\n    (selectedDocumentId: string): void => {\n      if (typeof documents?.previous !== 'undefined') {\n        navigateDiffView({\n          previousDocument: {\n            ...documents.previous,\n            id: selectedDocumentId,\n          },\n        })\n      }\n    },\n    [documents?.previous, navigateDiffView],\n  )\n\n  const onSelectNextRelease = useCallback(\n    (selectedDocumentId: string): void => {\n      if (typeof documents?.next !== 'undefined') {\n        navigateDiffView({\n          nextDocument: {\n            ...documents.next,\n            id: selectedDocumentId,\n          },\n        })\n      }\n    },\n    [documents?.next, navigateDiffView],\n  )\n\n  return (\n    <VersionModeHeaderLayout>\n      <VersionModeHeaderLayoutSection>\n        <Box padding={4}>\n          <Text as=\"h1\" size={1} muted>\n            {t('compare-versions.title')}\n          </Text>\n        </Box>\n        {typeof documents?.previous !== 'undefined' && (\n          <VersionMenu\n            releases={releases}\n            onSelectRelease={onSelectPreviousRelease}\n            role=\"previous\"\n            documentId={documentId}\n            state={state}\n            document={documents.previous}\n          />\n        )}\n      </VersionModeHeaderLayoutSection>\n      <Flex align=\"center\" paddingX={3}>\n        <Text size={1}>\n          <TransferIcon />\n        </Text>\n      </Flex>\n      <VersionModeHeaderLayoutSection>\n        {typeof documents?.next !== 'undefined' && (\n          <VersionMenu\n            releases={releases}\n            onSelectRelease={onSelectNextRelease}\n            role=\"next\"\n            documentId={documentId}\n            state={state}\n            document={documents.next}\n          />\n        )}\n        <Box\n          padding={3}\n          style={{\n            justifySelf: 'end',\n          }}\n        >\n          <Button icon={CloseIcon} mode=\"bleed\" onClick={exitDiffView} padding={2} />\n        </Box>\n      </VersionModeHeaderLayoutSection>\n    </VersionModeHeaderLayout>\n  )\n}\n\ninterface VersionMenuProps {\n  state: 'pending' | 'ready' | 'error'\n  releases: ReleaseDocument[]\n  role: 'previous' | 'next'\n  onSelectRelease: (releaseId: string) => void\n  documentId: string\n  document: {\n    type: string\n    id: string\n  }\n}\n\nconst VersionMenu: ComponentType<VersionMenuProps> = ({\n  releases = [],\n  onSelectRelease,\n  role,\n  documentId,\n  document,\n}) => {\n  const {published, draft} = useEditState(getPublishedId(document.id), document.type)\n  const selected = useMemo(() => findRelease(document.id, releases), [document.id, releases])\n  const {t: tStructure} = useTranslation(structureLocaleNamespace)\n  const {t: tCore} = useTranslation()\n\n  const {\n    document: {\n      drafts: {enabled: isDraftModelEnabled},\n    },\n  } = useWorkspace()\n\n  return (\n    <MenuButton\n      id={role}\n      button={\n        <Button\n          type=\"button\"\n          mode=\"bleed\"\n          padding={2}\n          paddingRight={3}\n          radius=\"full\"\n          selected\n          {...getMenuButtonProps({selected, tCore, tStructure})}\n        />\n      }\n      menu={\n        <Menu>\n          {published && (\n            <VersionMenuItem\n              type=\"published\"\n              onSelect={onSelectRelease}\n              isSelected={selected === 'published'}\n              documentId={documentId}\n            />\n          )}\n          {isDraftModelEnabled && draft && (\n            <VersionMenuItem\n              type=\"draft\"\n              onSelect={onSelectRelease}\n              isSelected={selected === 'draft'}\n              documentId={documentId}\n            />\n          )}\n          {releases.map((release) => (\n            <VersionMenuItem\n              key={release._id}\n              release={release}\n              onSelect={onSelectRelease}\n              isSelected={typeof selected !== 'string' && selected?._id === release._id}\n              documentId={documentId}\n            />\n          ))}\n        </Menu>\n      }\n    />\n  )\n}\n\ntype VersionMenuItemProps = {\n  onSelect: (releaseId: string) => void\n  isSelected?: boolean\n  documentId: string\n} & (\n  | {\n      release: ReleaseDocument\n      type?: never\n    }\n  | {\n      type: 'published' | 'draft'\n      release?: never\n    }\n)\n\nconst VersionMenuItem: ComponentType<VersionMenuItemProps> = ({\n  type,\n  release,\n  onSelect,\n  isSelected,\n  documentId,\n}) => {\n  const {t: tCore} = useTranslation()\n  const {t: tStructure} = useTranslation(structureLocaleNamespace)\n\n  const onClick = useCallback(() => {\n    if (type === 'draft') {\n      onSelect(getDraftId(documentId))\n      return\n    }\n\n    if (type === 'published') {\n      onSelect(getPublishedId(documentId))\n      return\n    }\n\n    if (typeof release?._id !== 'undefined') {\n      onSelect(getVersionId(documentId, getReleaseIdFromReleaseDocumentId(release._id)))\n    }\n  }, [type, onSelect, documentId, release?._id])\n\n  if (type) {\n    const tone: ButtonTone = type === 'published' ? 'positive' : 'caution'\n\n    return (\n      <MenuItem padding={1} paddingRight={3} onClick={onClick} pressed={isSelected}>\n        <Flex gap={1}>\n          <ReleaseAvatar padding={2} tone={tone} />\n          <Box paddingY={2}>\n            <Text size={1} weight=\"medium\">\n              {tStructure(['compare-versions.status', type].join('.'))}\n            </Text>\n          </Box>\n        </Flex>\n      </MenuItem>\n    )\n  }\n\n  const tone: ButtonTone = release ? getReleaseTone(release) : 'neutral'\n\n  return (\n    <MenuItem padding={1} paddingRight={3} onClick={onClick} pressed={isSelected}>\n      <Flex gap={1}>\n        <ReleaseAvatar padding={2} tone={tone} />\n        <Stack flex={1} paddingY={2} paddingRight={2} space={2}>\n          <Text size={1} weight=\"medium\">\n            {release.metadata.title || tCore('release.placeholder-untitled-release')}\n          </Text>\n          {['asap', 'undecided'].includes(release.metadata.releaseType) && (\n            <Text muted size={1}>\n              {tCore(`release.type.${release.metadata.releaseType}`)}\n            </Text>\n          )}\n          {release.metadata.releaseType === 'scheduled' && (\n            <Text muted size={1}>\n              {formatRelativeLocalePublishDate(release)}\n            </Text>\n          )}\n        </Stack>\n        <Flex flex=\"none\">\n          {isReleaseScheduledOrScheduling(release) && (\n            <Box padding={2}>\n              <Text size={1}>\n                <LockIcon />\n              </Text>\n            </Box>\n          )}\n        </Flex>\n      </Flex>\n    </MenuItem>\n  )\n}\n\nfunction getMenuButtonProps({\n  selected,\n  tCore,\n  tStructure,\n}: {\n  selected?: ReleaseDocument | 'published' | 'draft'\n  tCore: TFunction\n  tStructure: TFunction\n}): Pick<ComponentProps<typeof Button>, 'text' | 'tone' | 'icon' | 'iconRight' | 'disabled'> {\n  if (typeof selected === 'undefined') {\n    return {\n      text: tCore('common.loading'),\n      tone: 'neutral',\n      disabled: true,\n    }\n  }\n\n  if (isReleaseDocument(selected)) {\n    const tone: ButtonTone = selected ? getReleaseTone(selected) : 'neutral'\n\n    return {\n      text: selected?.metadata.title || tCore('release.placeholder-untitled-release'),\n      icon: <ReleaseAvatar padding={1} tone={tone} />,\n      iconRight: selected && isReleaseScheduledOrScheduling(selected) ? <LockIcon /> : undefined,\n      tone,\n    }\n  }\n\n  const tone: ButtonTone = selected === 'published' ? 'positive' : 'caution'\n\n  return {\n    text: tStructure(['compare-versions.status', selected].join('.')),\n    icon: <ReleaseAvatar padding={1} tone={tone} />,\n    tone,\n  }\n}\n\n/**\n * If the provided document id represents a version, find and return the corresponding release\n * document. Otherwise, return a string literal signifying whether the document id represents a\n * published or draft document.\n */\nfunction findRelease(\n  documentId: string,\n  releases: ReleaseDocument[],\n): ReleaseDocument | 'published' | 'draft' | undefined {\n  if (isPublishedId(documentId)) {\n    return 'published'\n  }\n\n  if (isDraftId(documentId)) {\n    return 'draft'\n  }\n\n  return releases.find(\n    ({_id}) => getReleaseIdFromReleaseDocumentId(_id) === getVersionFromId(documentId),\n  )\n}\n","import {styled} from 'styled-components'\n\nexport const DialogLayout = styled.div`\n  --offset-block: 40px;\n  display: grid;\n  height: calc(100vh - var(--offset-block));\n  min-height: 0;\n  overflow: hidden;\n  grid-template-areas:\n    'header header'\n    'previous-document next-document';\n  grid-template-columns: 1fr 1fr;\n  grid-template-rows: min-content minmax(0, 1fr);\n`\n","import {type ComponentType} from 'react'\nimport {type DocumentLayoutProps, type PluginOptions} from 'sanity'\n\n/**\n * Pick the document layout component when composing the component middleware chain.\n */\nexport function pickDocumentLayoutComponent(plugin: PluginOptions) {\n  return plugin.document?.components?.unstable_layout as ComponentType<\n    Omit<DocumentLayoutProps, 'renderDefault'>\n  >\n}\n","import {type Path} from '@sanity/types'\nimport {useCallback, useMemo} from 'react'\nimport deepEquals from 'react-fast-compare'\nimport {distinctUntilChanged, filter, map, type Observable} from 'rxjs'\n\nimport {type PathSyncChannelProps, type PathSyncState} from '../types/pathSyncChannel'\n\ntype Push = (state: PathSyncState) => void\n\n/**\n * Synchronise the open path between multiple document panes.\n *\n * @internal\n */\nexport function usePathSyncChannel({syncChannel, id}: PathSyncChannelProps): {\n  push: Push\n  path: Observable<Path>\n} {\n  const push = useCallback<Push>(\n    (state) => syncChannel.next({...state, source: id}),\n    [id, syncChannel],\n  )\n\n  const path = useMemo(\n    () =>\n      syncChannel.pipe(\n        distinctUntilChanged<PathSyncState>((previous, next) =>\n          deepEquals(previous.path, next.path),\n        ),\n        filter(({source}) => source !== id),\n        map((state) => state.path),\n      ),\n    [id, syncChannel],\n  )\n\n  return {\n    path,\n    push,\n  }\n}\n","import {styled} from 'styled-components'\n\nexport const Scroller = styled.div`\n  position: relative;\n  height: 100%;\n  overflow: auto;\n  scroll-behavior: smooth;\n  scrollbar-width: var(--scrollbar-width);\n  overscroll-behavior: contain;\n  will-change: scroll-position;\n`\n","import {type Path, type SanityDocument} from '@sanity/types'\nimport {\n  BoundaryElementProvider,\n  Card,\n  Container as UiContainer,\n  DialogProvider,\n  PortalProvider,\n} from '@sanity/ui'\nimport {noop} from 'lodash'\nimport {\n  type ComponentType,\n  type CSSProperties,\n  forwardRef,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react'\nimport {\n  ChangeIndicatorsTracker,\n  createPatchChannel,\n  FormBuilder,\n  getPublishedId,\n  getVersionFromId,\n  isDraftId,\n  isPublishedId,\n  isVersionId,\n  LoadingBlock,\n  useDocumentForm,\n  useEditState,\n  useMiddlewareComponents,\n  VirtualizerScrollInstanceProvider,\n} from 'sanity'\nimport {CommentsEnabledContext, ReviewChangesContext} from 'sanity/_singletons'\nimport {styled} from 'styled-components'\n\nimport {pickDocumentLayoutComponent} from '../../panes/document/document-layout/pickDocumentLayoutComponent'\nimport {usePathSyncChannel} from '../hooks/usePathSyncChannel'\nimport {type PathSyncChannel} from '../types/pathSyncChannel'\nimport {Scroller} from './Scroller'\n\nconst DiffViewPaneLayout = styled(Card)`\n  position: relative;\n  grid-area: var(--grid-area);\n`\n\nconst Container = styled(UiContainer)`\n  width: auto;\n`\n\ninterface DiffViewPaneProps {\n  documentType: string\n  documentId: string\n  role: 'previous' | 'next'\n  scrollElement: HTMLElement | null\n  syncChannel: PathSyncChannel\n  compareDocument: {\n    type: string\n    id: string\n  }\n}\n\nexport const DiffViewPane = forwardRef<HTMLDivElement, DiffViewPaneProps>(function DiffViewPane(\n  {role, documentType, documentId, scrollElement, syncChannel, compareDocument},\n  ref,\n) {\n  const containerElement = useRef<HTMLDivElement | null>(null)\n  const [portalElement, setPortalElement] = useState<HTMLDivElement | null>(null)\n  const [boundaryElement, setBoundaryElement] = useState<HTMLDivElement | null>(null)\n\n  const DocumentLayout = useMiddlewareComponents({\n    pick: pickDocumentLayoutComponent,\n    defaultComponent: useCallback(\n      () => (\n        <DiffViewDocument\n          compareDocument={compareDocument}\n          documentId={documentId}\n          documentType={documentType}\n          role={role}\n          scrollElement={scrollElement}\n          syncChannel={syncChannel}\n        />\n      ),\n      [compareDocument, documentId, documentType, role, scrollElement, syncChannel],\n    ),\n  })\n\n  return (\n    <ReviewChangesContext.Provider\n      value={{\n        // Render the change indicators inertly, because the diff view modal does not currently\n        // provide a way to display document inspectors.\n        isInteractive: false,\n        onOpenReviewChanges: noop,\n        onSetFocus: noop,\n        isReviewChangesOpen: false,\n      }}\n    >\n      <ChangeIndicatorsTracker>\n        <VirtualizerScrollInstanceProvider\n          scrollElement={scrollElement}\n          containerElement={containerElement}\n        >\n          <BoundaryElementProvider element={boundaryElement}>\n            <DiffViewPaneLayout\n              ref={setBoundaryElement}\n              style={\n                {\n                  '--grid-area': `${role}-document`,\n                } as CSSProperties\n              }\n              borderLeft={role === 'next'}\n            >\n              <Scroller\n                ref={ref}\n                style={\n                  {\n                    // The scroll position is synchronised between panes. This style hides the\n                    // scrollbar for all panes except the one displaying the next document.\n                    '--scrollbar-width': role !== 'next' && 'none',\n                  } as CSSProperties\n                }\n              >\n                <PortalProvider element={portalElement}>\n                  <DialogProvider position=\"absolute\">\n                    <Container ref={containerElement} padding={4} width={1}>\n                      <DocumentLayout documentId={documentId} documentType={documentType} />\n                    </Container>\n                  </DialogProvider>\n                </PortalProvider>\n              </Scroller>\n              <div data-testid=\"diffView-document-panel-portal\" ref={setPortalElement} />\n            </DiffViewPaneLayout>\n          </BoundaryElementProvider>\n        </VirtualizerScrollInstanceProvider>\n      </ChangeIndicatorsTracker>\n    </ReviewChangesContext.Provider>\n  )\n})\n\nconst DiffViewDocument: ComponentType<DiffViewPaneProps> = ({\n  role,\n  documentType,\n  documentId,\n  syncChannel,\n  compareDocument,\n}) => {\n  const compareValue = useCompareValue({compareDocument})\n  const [patchChannel] = useState(() => createPatchChannel())\n\n  const {\n    formState,\n    onChange,\n    onFocus,\n    onBlur,\n    onSetActiveFieldGroup,\n    onSetCollapsedFieldSet,\n    onSetCollapsedPath,\n    collapsedFieldSets,\n    ready,\n    collapsedPaths,\n    schemaType,\n    value,\n    onProgrammaticFocus,\n    ...documentForm\n  } = useDocumentForm({\n    documentId: getPublishedId(documentId),\n    documentType,\n    selectedPerspectiveName: perspectiveName(documentId),\n    releaseId: getVersionFromId(documentId),\n    comparisonValue: compareValue,\n  })\n\n  const isLoading = formState === null || !ready\n\n  const pathSyncChannel = usePathSyncChannel({\n    id: role,\n    syncChannel,\n  })\n\n  const onPathOpen = useCallback(\n    (path: Path) => {\n      documentForm.onPathOpen(path)\n      pathSyncChannel.push({source: role, path})\n    },\n    [documentForm, pathSyncChannel, role],\n  )\n\n  useEffect(() => {\n    const subscription = pathSyncChannel.path.subscribe(onProgrammaticFocus)\n    return () => subscription.unsubscribe()\n  }, [onProgrammaticFocus, pathSyncChannel.path])\n\n  return isLoading ? (\n    <LoadingBlock showText />\n  ) : (\n    <CommentsEnabledContext.Provider\n      value={{\n        enabled: false,\n        mode: null,\n      }}\n    >\n      <FormBuilder\n        __internal_patchChannel={patchChannel}\n        id={`diffView-pane-${role}`}\n        onChange={onChange}\n        onPathFocus={onFocus}\n        onPathOpen={onPathOpen}\n        onPathBlur={onBlur}\n        onFieldGroupSelect={onSetActiveFieldGroup}\n        onSetFieldSetCollapsed={onSetCollapsedFieldSet}\n        onSetPathCollapsed={onSetCollapsedPath}\n        collapsedPaths={collapsedPaths}\n        collapsedFieldSets={collapsedFieldSets}\n        focusPath={formState.focusPath}\n        changed={formState.changed}\n        focused={formState.focused}\n        groups={formState.groups}\n        validation={formState.validation}\n        members={formState.members}\n        presence={formState.presence}\n        schemaType={schemaType}\n        value={value}\n      />\n    </CommentsEnabledContext.Provider>\n  )\n}\n\nfunction perspectiveName(documentId: string): string | undefined {\n  if (isVersionId(documentId)) {\n    return getVersionFromId(documentId)\n  }\n\n  if (isPublishedId(documentId)) {\n    return 'published'\n  }\n\n  return undefined\n}\n\ntype UseCompareValueOptions = Pick<DiffViewPaneProps, 'compareDocument'>\n\n/**\n * Fetch the contents of `compareDocument` for comparison with another version of the document.\n */\nfunction useCompareValue({compareDocument}: UseCompareValueOptions): SanityDocument | undefined {\n  const compareDocumentEditState = useEditState(\n    getPublishedId(compareDocument.id),\n    compareDocument.type,\n    'low',\n    getVersionFromId(compareDocument.id),\n  )\n\n  return useMemo(() => {\n    if (isVersionId(compareDocument.id)) {\n      return compareDocumentEditState.version ?? undefined\n    }\n\n    if (isDraftId(compareDocument.id)) {\n      return compareDocumentEditState.draft ?? undefined\n    }\n\n    if (isPublishedId(compareDocument.id)) {\n      return compareDocumentEditState.published ?? undefined\n    }\n\n    return undefined\n  }, [\n    compareDocument.id,\n    compareDocumentEditState.draft,\n    compareDocumentEditState.published,\n    compareDocumentEditState.version,\n  ])\n}\n","import {type ReferenceInputOptions} from 'sanity'\nimport {useIntentLink} from 'sanity/router'\nimport {styled} from 'styled-components'\n\nconst Link = styled.a`\n  flex: 1;\n  text-decoration: none;\n  color: inherit;\n`\n\nexport const EditReferenceLinkComponent: ReferenceInputOptions['EditReferenceLinkComponent'] = ({\n  children,\n  documentId: _documentId,\n  documentType,\n}) => {\n  const {href} = useIntentLink({\n    intent: 'edit',\n    params: {\n      id: _documentId,\n      type: documentType,\n    },\n  })\n\n  return (\n    <Link href={href} target=\"_blank\" rel=\"noopener noreferrer\">\n      {children}\n    </Link>\n  )\n}\n","import {type ComponentType, useContext, useMemo, useState} from 'react'\nimport {type DocumentLayoutProps} from 'sanity'\nimport {ReferenceInputOptionsContext} from 'sanity/_singletons'\n\nimport {Dialog} from '../../../ui-components/dialog/Dialog'\nimport {useCreatePathSyncChannel} from '../hooks/useCreatePathSyncChannel'\nimport {useDiffViewRouter} from '../hooks/useDiffViewRouter'\nimport {useDiffViewState} from '../hooks/useDiffViewState'\nimport {useScrollMirror} from '../hooks/useScrollMirror'\nimport {VersionModeHeader} from '../versionMode/components/VersionModeHeader'\nimport {DialogLayout} from './DialogLayout'\nimport {DiffViewPane} from './DiffViewPane'\nimport {EditReferenceLinkComponent} from './EditReferenceLinkComponent'\n\nexport const DiffView: ComponentType<Pick<DocumentLayoutProps, 'documentId'>> = ({documentId}) => {\n  const {documents, state, mode} = useDiffViewState()\n  const {exitDiffView} = useDiffViewRouter()\n  const syncChannel = useCreatePathSyncChannel()\n  const [previousPaneElement, setPreviousPaneElement] = useState<HTMLElement | null>(null)\n  const [nextPaneElement, setNextPaneElement] = useState<HTMLElement | null>(null)\n  const referenceInputOptionsContext = useContext(ReferenceInputOptionsContext)\n\n  const diffViewReferenceInputOptionsContext = useMemo(\n    () => ({\n      ...referenceInputOptionsContext,\n      disableNew: true,\n      EditReferenceLinkComponent,\n    }),\n    [referenceInputOptionsContext],\n  )\n\n  useScrollMirror([previousPaneElement, nextPaneElement])\n\n  return (\n    <ReferenceInputOptionsContext.Provider value={diffViewReferenceInputOptionsContext}>\n      <Dialog\n        id=\"diffView\"\n        width=\"auto\"\n        onClose={exitDiffView}\n        padding={false}\n        __unstable_hideCloseButton\n      >\n        <DialogLayout>\n          {mode === 'version' && <VersionModeHeader documentId={documentId} state={state} />}\n          {state === 'ready' && (\n            <>\n              <DiffViewPane\n                documentType={documents.previous.type}\n                documentId={documents.previous.id}\n                role=\"previous\"\n                ref={setPreviousPaneElement}\n                scrollElement={previousPaneElement}\n                syncChannel={syncChannel}\n                compareDocument={documents.previous}\n              />\n              <DiffViewPane\n                documentType={documents.next.type}\n                documentId={documents.next.id}\n                role=\"next\"\n                ref={setNextPaneElement}\n                scrollElement={nextPaneElement}\n                syncChannel={syncChannel}\n                // The previous document's edit state is used to calculate the diff inroduced by the next document.\n                compareDocument={documents.previous}\n              />\n            </>\n          )}\n        </DialogLayout>\n      </Dialog>\n    </ReferenceInputOptionsContext.Provider>\n  )\n}\n","import {useToast} from '@sanity/ui'\nimport {type ComponentType, type PropsWithChildren} from 'react'\nimport {type DocumentLayoutProps, useTranslation} from 'sanity'\n\nimport {structureLocaleNamespace} from '../../i18n'\nimport {DiffView} from '../components/DiffView'\nimport {useDiffViewState} from '../hooks/useDiffViewState'\n\nexport const DiffViewDocumentLayout: ComponentType<\n  PropsWithChildren<Pick<DocumentLayoutProps, 'documentId' | 'documentType'>>\n> = ({children, documentId}) => {\n  const toast = useToast()\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {isActive} = useDiffViewState({\n    onParamsError: (errors) => {\n      toast.push({\n        id: 'diffViewParamsParsingError',\n        status: 'error',\n        title: t('compare-version.error.invalidParams.title'),\n        description: (\n          <ul>\n            {errors.map(([error, input]) => (\n              <li key={error}>\n                {t(`compare-version.error.${error}`, {\n                  input,\n                })}\n              </li>\n            ))}\n          </ul>\n        ),\n      })\n    },\n  })\n\n  return (\n    <>\n      {children}\n      {isActive && <DiffView documentId={documentId} />}\n    </>\n  )\n}\n","/**\n * @internal\n */\nexport const PANE_DEBUG = false\n\n/**\n * @internal\n */\nexport const PANE_COLLAPSED_WIDTH = 51\n\n/**\n * @internal\n */\nexport const PANE_DEFAULT_MIN_WIDTH = PANE_COLLAPSED_WIDTH * 4\n","import {useContext} from 'react'\nimport {PaneLayoutContext} from 'sanity/_singletons'\n\nimport {type PaneLayoutContextValue} from './types'\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport function usePaneLayout(): PaneLayoutContextValue {\n  const pane = useContext(PaneLayoutContext)\n\n  if (!pane) {\n    throw new Error('PaneLayout: missing context value')\n  }\n\n  return pane\n}\n","import {Layer} from '@sanity/ui'\nimport {useCallback, useState} from 'react'\nimport {styled} from 'styled-components'\n\nimport {usePaneLayout} from './usePaneLayout'\n\nconst Root = styled(Layer)`\n  position: relative;\n  width: 1px;\n  min-width: 1px;\n\n  &:before {\n    content: '';\n    display: block;\n    position: absolute;\n    top: 0;\n    left: 0;\n    bottom: 0;\n    width: 1px;\n    background-color: var(--card-border-color);\n  }\n\n  &:not([data-disabled]) {\n    cursor: ew-resize;\n    width: 9px;\n    min-width: 9px;\n    margin: 0 -4px;\n\n    &:before {\n      left: 4px;\n    }\n\n    &:after {\n      content: '';\n      display: block;\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 9px;\n      bottom: 0;\n      background-color: var(--card-border-color);\n      opacity: 0;\n      transition: opacity 150ms;\n    }\n\n    &[data-dragging]:after,\n    &:hover:after {\n      opacity: 0.2;\n    }\n  }\n`\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport function PaneDivider({\n  disabled,\n  element,\n}: {\n  disabled?: boolean\n  element: HTMLElement | null\n}) {\n  const {resize} = usePaneLayout()\n  const [dragging, setDragging] = useState(false)\n\n  const handleMouseDown = useCallback(\n    (event: any) => {\n      if (!element) return\n\n      setDragging(true)\n\n      event.preventDefault()\n\n      const startX = event.pageX\n\n      resize('start', element, 0)\n\n      const handleMouseMove = (e: MouseEvent) => {\n        e.preventDefault()\n\n        const deltaX = e.pageX - startX\n\n        resize('move', element, deltaX)\n      }\n\n      const handleMouseUp = (e: MouseEvent) => {\n        e.preventDefault()\n\n        setDragging(false)\n\n        window.removeEventListener('mousemove', handleMouseMove)\n        window.removeEventListener('mouseup', handleMouseUp)\n\n        resize('end', element, 0)\n      }\n\n      window.addEventListener('mousemove', handleMouseMove)\n      window.addEventListener('mouseup', handleMouseUp)\n    },\n    [element, resize],\n  )\n\n  return (\n    <Root\n      data-disabled={disabled ? '' : undefined}\n      data-dragging={dragging ? '' : undefined}\n      onMouseDown={handleMouseDown}\n    />\n  )\n}\n","import {BoundaryElementProvider, Card, type CardProps, Code, Flex} from '@sanity/ui'\nimport {\n  type ForwardedRef,\n  forwardRef,\n  type HTMLProps,\n  type ReactNode,\n  useCallback,\n  useImperativeHandle,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react'\nimport {IsLastPaneProvider, LegacyLayerProvider} from 'sanity'\nimport {PaneContext} from 'sanity/_singletons'\nimport {styled} from 'styled-components'\n\nimport {PANE_COLLAPSED_WIDTH, PANE_DEBUG, PANE_DEFAULT_MIN_WIDTH} from './constants'\nimport {PaneDivider} from './PaneDivider'\nimport {usePaneLayout} from './usePaneLayout'\n\ninterface PaneProps {\n  children?: ReactNode\n  currentMinWidth?: number\n  currentMaxWidth?: number\n  flex?: number\n  id: string\n  minWidth?: number\n  maxWidth?: number\n  selected?: boolean\n}\n\nconst Root = styled(Card)`\n  outline: none;\n\n  // NOTE: This will render a border to the right side of each pane\n  // without taking up physical space.\n  box-shadow: 1px 0 0 var(--card-border-color);\n`\n\n/**\n * @hidden\n * @internal\n */\nexport const Pane = forwardRef(function Pane(\n  props: PaneProps &\n    Omit<CardProps, 'as' | 'overflow'> &\n    Omit<HTMLProps<HTMLDivElement>, 'as' | 'height' | 'hidden' | 'id' | 'style'>,\n  forwardedRef: ForwardedRef<HTMLDivElement>,\n) {\n  const {\n    children,\n    currentMinWidth: currentMinWidthProp,\n    currentMaxWidth: currentMaxWidthProp,\n    flex: flexProp = 1,\n    id,\n    minWidth: minWidthProp,\n    maxWidth: maxWidthProp,\n    selected = false,\n    ...restProps\n  } = props\n  const [rootElement, setRootElement] = useState<HTMLDivElement | null>(null)\n  const {\n    collapse,\n    collapsed: layoutCollapsed,\n    expand,\n    expandedElement,\n    mount,\n    panes,\n  } = usePaneLayout()\n  const pane = panes.find((p) => p.element === rootElement)\n  const paneIndex = pane && panes.indexOf(pane)\n  const nextPane = typeof paneIndex === 'number' ? panes[paneIndex + 1] : undefined\n  const isLast = paneIndex === panes.length - 1\n  const expanded = expandedElement === rootElement\n  const collapsed = layoutCollapsed ? false : pane?.collapsed || false\n  const nextCollapsed = nextPane?.collapsed || false\n  const ref = useRef<HTMLDivElement | null>(null)\n  const flex = pane?.flex ?? flexProp\n  const currentMinWidth = pane?.currentMinWidth ?? currentMinWidthProp\n  const currentMaxWidth = pane?.currentMaxWidth ?? currentMaxWidthProp\n\n  // Forward ref to parent\n  useImperativeHandle<HTMLDivElement | null, HTMLDivElement | null>(forwardedRef, () => ref.current)\n\n  const setRef = useCallback((refValue: HTMLDivElement | null) => {\n    setRootElement(refValue)\n    ref.current = refValue\n  }, [])\n\n  useLayoutEffect(() => {\n    if (!rootElement) return undefined\n    return mount(rootElement, {\n      currentMinWidth: currentMinWidthProp,\n      currentMaxWidth: currentMaxWidthProp,\n      flex: flexProp,\n      id,\n      minWidth: minWidthProp,\n      maxWidth: maxWidthProp,\n    })\n  }, [\n    currentMinWidthProp,\n    currentMaxWidthProp,\n    flexProp,\n    id,\n    minWidthProp,\n    maxWidthProp,\n    mount,\n    rootElement,\n  ])\n\n  const handleCollapse = useCallback(() => {\n    if (!rootElement) return\n    collapse(rootElement)\n  }, [collapse, rootElement])\n\n  const handleExpand = useCallback(() => {\n    if (!rootElement) return\n    expand(rootElement)\n  }, [expand, rootElement])\n\n  const contextValue = useMemo(\n    () => ({\n      collapse: handleCollapse,\n      collapsed: layoutCollapsed ? false : collapsed,\n      expand: handleExpand,\n      index: paneIndex,\n      isLast,\n      rootElement,\n    }),\n    [collapsed, handleCollapse, handleExpand, isLast, layoutCollapsed, paneIndex, rootElement],\n  )\n\n  const minWidth = useMemo(() => {\n    if (layoutCollapsed) {\n      return undefined\n    }\n\n    if (collapsed) return PANE_COLLAPSED_WIDTH\n\n    if (currentMinWidth === 0) {\n      return minWidthProp || PANE_DEFAULT_MIN_WIDTH\n    }\n\n    if (isLast) {\n      return minWidthProp || PANE_DEFAULT_MIN_WIDTH\n    }\n\n    return currentMinWidth || minWidthProp || PANE_DEFAULT_MIN_WIDTH\n  }, [collapsed, currentMinWidth, isLast, layoutCollapsed, minWidthProp])\n\n  const maxWidth = useMemo(() => {\n    if (collapsed) return PANE_COLLAPSED_WIDTH\n\n    if (layoutCollapsed && isLast) {\n      return undefined\n    }\n\n    if (isLast) {\n      if (maxWidthProp) {\n        return currentMaxWidth ?? maxWidthProp\n      }\n\n      return undefined\n    }\n\n    return currentMaxWidth ?? maxWidthProp\n  }, [collapsed, currentMaxWidth, isLast, layoutCollapsed, maxWidthProp])\n\n  const hidden = layoutCollapsed && !isLast\n\n  const divider = useMemo(\n    () =>\n      !isLast &&\n      !layoutCollapsed && (\n        <LegacyLayerProvider zOffset=\"paneResizer\">\n          <PaneDivider disabled={collapsed || nextCollapsed} element={rootElement} />\n        </LegacyLayerProvider>\n      ),\n    [collapsed, isLast, layoutCollapsed, nextCollapsed, rootElement],\n  )\n\n  const style = useMemo(\n    () => ({\n      flex,\n      minWidth,\n      maxWidth: maxWidth === Infinity ? undefined : maxWidth,\n    }),\n    [flex, minWidth, maxWidth],\n  )\n\n  return (\n    <>\n      <LegacyLayerProvider zOffset=\"pane\">\n        <PaneContext.Provider value={contextValue}>\n          <IsLastPaneProvider isLastPane={isLast}>\n            <Root\n              data-testid=\"pane\"\n              data-ui=\"Pane\"\n              tone=\"inherit\"\n              hidden={hidden}\n              id={id}\n              overflow={layoutCollapsed ? undefined : 'hidden'}\n              {...restProps}\n              data-pane-collapsed={collapsed ? '' : undefined}\n              data-pane-index={paneIndex}\n              data-pane-selected={selected ? '' : undefined}\n              ref={setRef}\n              style={style}\n            >\n              {PANE_DEBUG && (\n                <Card padding={4} tone={expanded ? 'primary' : 'caution'}>\n                  <Code size={1}>\n                    {[\n                      `#${paneIndex}`,\n                      `collapsed=${collapsed}`,\n                      `currentMinWidth=${currentMinWidth}`,\n                      `currentMaxWidth=${currentMaxWidth}`,\n                      `flex=${flex}`,\n                      `minWidth=${minWidth}`,\n                      `maxWidth=${maxWidth}`,\n                    ].join('\\n')}\n                  </Code>\n                </Card>\n              )}\n\n              <BoundaryElementProvider element={rootElement}>\n                {!hidden && (\n                  <Flex direction=\"column\" height=\"fill\">\n                    {children}\n                  </Flex>\n                )}\n              </BoundaryElementProvider>\n            </Root>\n          </IsLastPaneProvider>\n        </PaneContext.Provider>\n      </LegacyLayerProvider>\n\n      {divider}\n    </>\n  )\n})\n","import {Card} from '@sanity/ui'\nimport {styled} from 'styled-components'\n\nexport const Root = styled(Card)`\n  position: relative;\n  outline: none;\n`\n\nRoot.displayName = 'PaneContent__root'\n","import {useContext} from 'react'\nimport {PaneContext} from 'sanity/_singletons'\n\nimport {type PaneContextValue} from './types'\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport function usePane(): PaneContextValue {\n  const pane = useContext(PaneContext)\n\n  if (!pane) {\n    throw new Error('Pane: missing context value')\n  }\n\n  return pane\n}\n","import {type BoxOverflow} from '@sanity/ui'\nimport {type ElementType, type ForwardedRef, forwardRef, type HTMLProps} from 'react'\n\nimport {Root} from './PaneContent.styles'\nimport {usePane} from './usePane'\nimport {usePaneLayout} from './usePaneLayout'\n\ninterface PaneContentProps {\n  as?: ElementType | keyof React.JSX.IntrinsicElements\n  overflow?: BoxOverflow\n  padding?: number | number[]\n}\n\n/**\n * @hidden\n * @internal\n */\nexport const PaneContent = forwardRef(function PaneContent(\n  props: PaneContentProps & Omit<HTMLProps<HTMLDivElement>, 'as' | 'height' | 'ref'>,\n  ref: ForwardedRef<HTMLDivElement>,\n) {\n  const {as, children, overflow, padding, ...restProps} = props\n  const {collapsed} = usePane()\n  const {collapsed: layoutCollapsed} = usePaneLayout()\n\n  return (\n    <Root\n      data-testid=\"pane-content\"\n      forwardedAs={as}\n      {...restProps}\n      flex={1}\n      hidden={collapsed}\n      overflow={layoutCollapsed ? undefined : overflow}\n      padding={padding}\n      ref={ref}\n      tone=\"inherit\"\n    >\n      {children}\n    </Root>\n  )\n})\n","/**\n * Remove the spaces and lower case the string\n *\n * @param str - string to remove the spaces and lower case\n * @returns str with no spaces and lower case\n */\nexport function toLowerCaseNoSpaces(str: string | undefined): string {\n  if (!str) return ''\n  return str.toLocaleLowerCase().replaceAll(' ', '')\n}\n","import {CheckmarkIcon} from '@sanity/icons'\nimport {MenuDivider, Text} from '@sanity/ui'\nimport {type MouseEvent, useCallback} from 'react'\nimport {TooltipOfDisabled, useGetI18nText, useI18nText} from 'sanity'\nimport {useIntentLink} from 'sanity/router'\n\nimport {MenuGroup, MenuItem, type PopoverProps} from '../../../ui-components'\nimport {type Intent} from '../../structureBuilder'\nimport {toLowerCaseNoSpaces} from '../../util/toLowerCaseNoSpaces'\nimport {type _PaneMenuItem, type _PaneMenuNode} from './types'\n\nconst MENU_GROUP_POPOVER_PROPS: PopoverProps = {\n  constrainSize: true,\n  placement: 'left-start',\n  portal: true,\n}\n\nexport function PaneMenuButtonItem(props: {\n  disabled?: boolean\n  isAfterGroup: boolean\n  node: _PaneMenuNode\n}) {\n  const {disabled, isAfterGroup, node} = props\n  const getI18nText = useGetI18nText('i18n' in node ? node : undefined)\n\n  if (node.type === 'divider') {\n    return <MenuDivider />\n  }\n\n  const {title} = getI18nText(node)\n\n  if (node.type === 'group') {\n    if (node.children.length === 0) {\n      return null\n    }\n\n    if (node.expanded) {\n      return (\n        <>\n          {isAfterGroup && <MenuDivider />}\n          {node.children.map((child, childIndex) => (\n            <PaneMenuButtonItem\n              key={child.key}\n              disabled={disabled || Boolean(node.disabled)}\n              isAfterGroup={node.children[childIndex - 1]?.type === 'group'}\n              node={child}\n            />\n          ))}\n        </>\n      )\n    }\n\n    return (\n      <>\n        {isAfterGroup && <MenuDivider />}\n        <MenuGroup\n          disabled={disabled}\n          icon={node.icon}\n          popover={MENU_GROUP_POPOVER_PROPS}\n          text={title}\n        >\n          {node.children.map((child, childIndex) => (\n            <PaneMenuButtonItem\n              key={child.key}\n              disabled={disabled || Boolean(node.disabled)}\n              isAfterGroup={node.children[childIndex - 1]?.type === 'group'}\n              node={child}\n            />\n          ))}\n        </MenuGroup>\n      </>\n    )\n  }\n\n  return (\n    <>\n      {isAfterGroup && <MenuDivider />}\n      <PaneContextMenuItemResolver disabled={disabled} node={node} />\n    </>\n  )\n}\n\nfunction PaneContextMenuItemResolver(props: {disabled?: boolean; node: _PaneMenuItem}) {\n  const {node} = props\n\n  if (node.intent) {\n    return <PaneContextIntentMenuItem {...props} intent={node.intent} />\n  }\n\n  return <PaneContextMenuItem {...props} />\n}\n\nfunction PaneContextMenuItem(props: {disabled?: boolean; node: _PaneMenuItem}) {\n  const {disabled, node} = props\n  const tooltipContent = typeof node.disabled === 'object' && (\n    <Text size={1}>{node.disabled.reason}</Text>\n  )\n  const {title} = useI18nText(node)\n\n  return (\n    <TooltipOfDisabled content={tooltipContent} placement=\"left\">\n      <MenuItem\n        disabled={disabled || Boolean(node.disabled)}\n        hotkeys={node.hotkey?.split('+')}\n        icon={node.icon}\n        iconRight={node.iconRight || (node.selected && CheckmarkIcon)}\n        // eslint-disable-next-line react/jsx-handler-names\n        onClick={node.onAction}\n        pressed={node.selected}\n        text={title}\n        tone={node.tone}\n        data-testid={`action-${toLowerCaseNoSpaces(node.title)}`}\n      />\n    </TooltipOfDisabled>\n  )\n}\n\nfunction PaneContextIntentMenuItem(props: {\n  disabled?: boolean\n  intent: Intent\n  node: _PaneMenuItem\n}) {\n  const {disabled, intent, node} = props\n  const tooltipContent = typeof node.disabled === 'object' && (\n    <Text size={1}>{node.disabled.reason}</Text>\n  )\n  const intentLink = useIntentLink({intent: intent.type, params: intent.params})\n\n  const handleClick = useCallback(\n    (event: MouseEvent<HTMLDivElement>) => {\n      intentLink.onClick(event)\n      node.onAction()\n    },\n    [intentLink, node],\n  )\n\n  const {title} = useI18nText(node)\n\n  return (\n    <TooltipOfDisabled content={tooltipContent} placement=\"left\">\n      <MenuItem\n        as=\"a\"\n        disabled={disabled || Boolean(node.disabled)}\n        hotkeys={node.hotkey?.split('+')}\n        href={intentLink.href}\n        icon={node.icon}\n        iconRight={node.selected ? CheckmarkIcon : undefined}\n        onClick={handleClick}\n        pressed={node.selected}\n        text={title}\n        tone={node.tone}\n      />\n    </TooltipOfDisabled>\n  )\n}\n","import {Menu, MenuDivider} from '@sanity/ui'\nimport {type ReactNode, useId} from 'react'\nimport {ContextMenuButton} from 'sanity'\n\nimport {MenuButton, type PopoverProps} from '../../../ui-components'\nimport {PaneMenuButtonItem} from './PaneMenuButtonItem'\nimport {type _PaneMenuItem, type _PaneMenuNode} from './types'\n\ninterface PaneContextMenuButtonProps {\n  nodes: _PaneMenuNode[]\n  actionsNodes?: ReactNode\n}\n\nconst CONTEXT_MENU_POPOVER_PROPS: PopoverProps = {\n  constrainSize: true,\n  placement: 'bottom',\n  portal: true,\n}\n\nfunction nodesHasTone(nodes: _PaneMenuNode[], tone: NonNullable<_PaneMenuItem['tone']>): boolean {\n  return nodes.some((node) => {\n    return (\n      (node.type === 'item' && node.tone === tone) ||\n      (node.type === 'group' && nodesHasTone(node.children, tone))\n    )\n  })\n}\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport function PaneContextMenuButton(props: PaneContextMenuButtonProps) {\n  const {nodes, actionsNodes} = props\n  const id = useId()\n\n  const hasCritical = nodesHasTone(nodes, 'critical')\n  const hasCaution = nodesHasTone(nodes, 'caution')\n\n  return (\n    <MenuButton\n      button={\n        <ContextMenuButton\n          tone={hasCritical ? 'critical' : hasCaution ? 'caution' : undefined}\n          data-testid=\"pane-context-menu-button\"\n        />\n      }\n      id={id}\n      menu={\n        <Menu>\n          {actionsNodes && (\n            <>\n              {actionsNodes}\n              <MenuDivider />\n            </>\n          )}\n          {nodes.map((node, nodeIndex) => {\n            const isAfterGroup = nodes[nodeIndex - 1]?.type === 'group'\n            return <PaneMenuButtonItem key={node.key} isAfterGroup={isAfterGroup} node={node} />\n          })}\n        </Menu>\n      }\n      popover={CONTEXT_MENU_POPOVER_PROPS}\n    />\n  )\n}\n","import {Card, Layer} from '@sanity/ui'\nimport {styled} from 'styled-components'\n\nexport const Root = styled(Layer)`\n  position: sticky;\n  bottom: 0;\n`\n\nexport const RootCard = styled(Card)`\n  padding-bottom: env(safe-area-inset-bottom);\n`\n","import {Box} from '@sanity/ui'\nimport {type ForwardedRef, forwardRef, type ReactNode} from 'react'\nimport {LegacyLayerProvider} from 'sanity'\n\nimport {Root, RootCard} from './PaneFooter.styles'\nimport {usePane} from './usePane'\n\ninterface PaneFooterProps {\n  children?: ReactNode\n  padding?: number | number[]\n}\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport const PaneFooter = forwardRef(function PaneFooter(\n  props: PaneFooterProps,\n  ref: ForwardedRef<HTMLDivElement>,\n) {\n  const {children, padding} = props\n  const {collapsed} = usePane()\n\n  return (\n    <LegacyLayerProvider zOffset=\"paneFooter\">\n      <Root data-testid=\"pane-footer\" hidden={collapsed} ref={ref}>\n        <RootCard tone=\"inherit\">\n          <Box padding={padding}>{children}</Box>\n        </RootCard>\n      </Root>\n    </LegacyLayerProvider>\n  )\n})\n","import {Card, Flex, Layer, Text, TextSkeleton, type Theme} from '@sanity/ui'\nimport {css, styled} from 'styled-components'\n\ninterface RootProps {\n  $border?: boolean\n}\n\nexport const Root = styled(Layer)<RootProps>(({$border}) => {\n  return css`\n    line-height: 0;\n    position: sticky;\n    top: 0;\n\n    &:not([data-collapsed]):after {\n      content: '';\n      display: block;\n      position: absolute;\n      left: 0;\n      right: 0;\n      bottom: -1px;\n      border-bottom: 1px solid ${$border ? 'var(--card-border-color)' : 'transparent'};\n      opacity: 1;\n    }\n  `\n})\n\nexport const Layout = styled(Flex)`\n  transform-origin: calc(51px / 2);\n\n  [data-collapsed] > div > & {\n    transform: rotate(90deg);\n  }\n`\n\nexport const TitleCard = styled(Card)(({theme}: {theme: Theme}) => {\n  const {fg, bg} = theme.sanity.color.card.enabled\n\n  // Disable color updates on hover\n  return css`\n    background-color: ${bg};\n\n    [data-ui='Text'] {\n      color: ${fg};\n    }\n  `\n})\n\nexport const TitleTextSkeleton = styled(TextSkeleton)`\n  width: 66%;\n  max-width: 175px;\n`\n\nexport const TitleText = styled(Text)`\n  cursor: default;\n  outline: none;\n`\n","import {Box, Card, Flex, LayerProvider, useElementRect} from '@sanity/ui'\nimport {type ForwardedRef, forwardRef, type ReactNode, useCallback, useMemo} from 'react'\nimport {LegacyLayerProvider} from 'sanity'\n\nimport {Layout, Root, TitleCard, TitleText, TitleTextSkeleton} from './PaneHeader.styles'\nimport {usePane} from './usePane'\n\nexport type TabsType = 'default' | 'dropdown'\n\n/**\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport interface PaneHeaderProps {\n  actions?: ReactNode\n  backButton?: ReactNode\n  border?: boolean\n  contentAfter?: ReactNode\n  loading?: boolean\n  subActions?: ReactNode\n  tabIndex?: number\n  tabs?: ReactNode\n  title: ReactNode\n  appendTitle?: ReactNode\n}\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport const PaneHeader = forwardRef(function PaneHeader(\n  props: PaneHeaderProps,\n  ref: ForwardedRef<HTMLDivElement>,\n) {\n  const {\n    actions,\n    backButton,\n    border,\n    contentAfter,\n    loading,\n    subActions,\n    tabs,\n    tabIndex,\n    title,\n    appendTitle,\n  } = props\n  const {collapse, collapsed, expand, rootElement: paneElement} = usePane()\n  const paneRect = useElementRect(paneElement || null)\n\n  const layoutStyle = useMemo(\n    () => ({\n      width: collapsed ? paneRect?.height || window.innerHeight : undefined,\n    }),\n    [collapsed, paneRect],\n  )\n\n  const handleTitleClick = useCallback(() => {\n    if (collapsed) return\n    collapse()\n  }, [collapse, collapsed])\n\n  const handleLayoutClick = useCallback(() => {\n    if (!collapsed) return\n    expand()\n  }, [collapsed, expand])\n\n  const showTabsOrSubActions = Boolean(!collapsed && (tabs || subActions))\n\n  return (\n    <LayerProvider zOffset={100}>\n      <Root\n        $border={border}\n        data-collapsed={collapsed ? '' : undefined}\n        data-testid=\"pane-header\"\n        ref={ref}\n      >\n        <LegacyLayerProvider zOffset=\"paneHeader\">\n          <Card data-collapsed={collapsed ? '' : undefined} tone=\"inherit\">\n            <Layout\n              direction=\"column\"\n              gap={3}\n              onClick={handleLayoutClick}\n              padding={3}\n              sizing=\"border\"\n              style={layoutStyle}\n            >\n              <Flex align=\"flex-start\" gap={3}>\n                {backButton && <Box flex=\"none\">{backButton}</Box>}\n\n                <TitleCard\n                  __unstable_focusRing\n                  flex={1}\n                  onClick={handleTitleClick}\n                  paddingLeft={backButton ? 1 : 2}\n                  padding={2}\n                  tabIndex={tabIndex}\n                >\n                  {loading && (\n                    <Box>\n                      <TitleTextSkeleton animated radius={1} size={1} />\n                    </Box>\n                  )}\n                  {!loading && (\n                    <Flex align=\"center\" gap={1}>\n                      <TitleText size={1} textOverflow=\"ellipsis\" weight=\"semibold\">\n                        {title}\n                      </TitleText>\n                      {appendTitle}\n                    </Flex>\n                  )}\n                </TitleCard>\n\n                {actions && (\n                  <Box hidden={collapsed}>\n                    <LegacyLayerProvider zOffset=\"paneHeader\">{actions}</LegacyLayerProvider>\n                  </Box>\n                )}\n              </Flex>\n\n              {showTabsOrSubActions && (\n                <Flex align=\"center\" hidden={collapsed} overflow=\"auto\">\n                  <Box flex={1} marginRight={subActions ? 3 : 0}>\n                    {tabs}\n                  </Box>\n\n                  {subActions}\n                </Flex>\n              )}\n            </Layout>\n\n            {!collapsed && contentAfter}\n          </Card>\n        </LegacyLayerProvider>\n      </Root>\n    </LayerProvider>\n  )\n})\n","import {UnknownIcon} from '@sanity/icons'\nimport {Menu} from '@sanity/ui'\nimport {type MouseEvent, useCallback, useId} from 'react'\nimport {StatusButton, useI18nText, useTranslation} from 'sanity'\nimport {useIntentLink} from 'sanity/router'\n\nimport {Button, MenuButton} from '../../../ui-components'\nimport {type Intent} from '../../structureBuilder'\nimport {PaneMenuButtonItem} from './PaneMenuButtonItem'\nimport {type _PaneMenuGroup, type _PaneMenuItem} from './types'\n\nfunction getDisabledReason(node: _PaneMenuItem) {\n  if (!node.disabled) {\n    return {disabledReason: undefined, ariaLabel: undefined, isDisabled: false}\n  }\n\n  /**\n   * This component supports receiving a `reason: string | react.ReactNode`.\n   * We are casting it as string, to avoid the ts error, as content will be rendered into the tooltip which only accepts string, but it won't crash if it's a ReactNode.\n   * For the aria label, we want to check if it's actually a string, to avoid generating an aria-label with the value `[object Object]`.\n   */\n  const disabledReason =\n    typeof node.disabled === 'object' ? (node.disabled.reason as string) : undefined\n  const ariaLabel =\n    typeof node.disabled === 'object' && typeof node.disabled?.reason === 'string'\n      ? node.disabled.reason\n      : 'This is disabled'\n\n  return {disabledReason, ariaLabel, isDisabled: Boolean(node.disabled)}\n}\nexport interface PaneHeaderActionButtonProps {\n  node: _PaneMenuItem | _PaneMenuGroup\n}\n\nexport function PaneHeaderActionButton(props: PaneHeaderActionButtonProps) {\n  const {node} = props\n\n  if (node.type === 'item') {\n    return <PaneHeaderMenuItemActionButton node={node} />\n  }\n\n  if (node.type === 'group') {\n    return <PaneHeaderMenuGroupActionButton node={node} />\n  }\n\n  console.warn('unknown menu node (expected `type: \"item\" | \"group\"`):', node)\n\n  return null\n}\n\nexport interface PaneHeaderMenuItemActionButtonProps {\n  node: _PaneMenuItem\n}\n\nexport function PaneHeaderMenuItemActionButton(props: PaneHeaderMenuItemActionButtonProps) {\n  const {node} = props\n  const {title} = useI18nText(node)\n  const {t} = useTranslation()\n\n  if (node.intent) {\n    return <PaneHeaderActionIntentButton {...props} intent={node.intent} />\n  }\n\n  const {disabledReason, ariaLabel, isDisabled} = getDisabledReason(node)\n\n  return (\n    <StatusButton\n      disabled={isDisabled}\n      icon={node.icon}\n      // eslint-disable-next-line react/jsx-handler-names\n      onClick={node.onAction}\n      selected={node.selected}\n      tone={node.tone}\n      aria-label={ariaLabel || title || t('status-button.aria-label')}\n      tooltipProps={{\n        hotkeys: !isDisabled && node.hotkey ? node.hotkey.split('+') : undefined,\n        content: isDisabled ? disabledReason : title,\n      }}\n    />\n  )\n}\n\nfunction PaneHeaderActionIntentButton(props: {intent: Intent; node: _PaneMenuItem}) {\n  const {intent, node} = props\n  const intentLink = useIntentLink({intent: intent.type, params: intent.params})\n  const {t} = useTranslation()\n\n  const handleClick = useCallback(\n    (event: MouseEvent<HTMLButtonElement>) => {\n      intentLink.onClick(event)\n      node.onAction()\n    },\n    [intentLink, node],\n  )\n\n  const {disabledReason, ariaLabel, isDisabled} = getDisabledReason(node)\n\n  return (\n    <StatusButton\n      forwardedAs=\"a\"\n      disabled={isDisabled}\n      href={intentLink.href}\n      icon={node.icon}\n      onClick={handleClick}\n      selected={node.selected}\n      tone={node.tone}\n      aria-label={ariaLabel || node.title || t('status-button.aria-label')}\n      tooltipProps={{\n        hotkeys: !isDisabled && node.hotkey ? node.hotkey.split('+') : undefined,\n        content: isDisabled ? disabledReason : node.title,\n        placement: 'bottom',\n        portal: true,\n      }}\n    />\n  )\n}\n\nexport interface PaneHeaderMenuGroupActionButtonProps {\n  node: _PaneMenuGroup\n}\n\nfunction PaneHeaderMenuGroupActionButton(props: PaneHeaderMenuGroupActionButtonProps) {\n  const {node} = props\n  const {title} = useI18nText(node)\n\n  return (\n    <MenuButton\n      button={\n        <Button\n          disabled={!!node.disabled}\n          icon={node.icon ?? UnknownIcon}\n          label={title}\n          mode=\"bleed\"\n          tooltipProps={{content: node.title, portal: true}}\n        />\n      }\n      id={useId()}\n      menu={\n        <Menu>\n          {node.children.map((child, idx) => {\n            return (\n              <PaneMenuButtonItem\n                key={child.key}\n                disabled={Boolean(node.disabled)}\n                isAfterGroup={node.children[idx - 1]?.type === 'group'}\n                node={child}\n              />\n            )\n          })}\n        </Menu>\n      }\n    />\n  )\n}\n","import {Card} from '@sanity/ui'\nimport {styled} from 'styled-components'\n\nexport const Root = styled(Card)`\n  transition: opacity 200ms;\n  position: relative;\n  z-index: 1;\n  padding-left: env(safe-area-inset-left);\n  padding-right: env(safe-area-inset-right);\n  opacity: 0;\n\n  &:not([hidden]) {\n    display: flex;\n  }\n\n  &:not([data-collapsed]) {\n    overflow: auto;\n  }\n\n  &[data-mounted] {\n    opacity: 1;\n  }\n\n  &[data-resizing] {\n    pointer-events: none;\n  }\n`\n","import {PANE_DEFAULT_MIN_WIDTH} from '../constants'\nimport {type PaneConfigOpts, type PaneResizeCache} from '../types'\n\nexport function _calcPaneResize(\n  cache: PaneResizeCache,\n  left: PaneConfigOpts,\n  right: PaneConfigOpts,\n  deltaX: number,\n): {leftFlex: number; leftW: number; rightFlex: number; rightW: number} {\n  const sum = {\n    flex: cache.left.flex + cache.right.flex,\n    width: cache.left.width + cache.right.width,\n  }\n\n  const leftMinWidth = left.minWidth ?? PANE_DEFAULT_MIN_WIDTH\n  const rightMinWidth = right.minWidth ?? PANE_DEFAULT_MIN_WIDTH\n\n  const leftMaxWidth = Math.min(left.maxWidth || Infinity, sum.width - rightMinWidth)\n  const rightMaxWidth = Math.min(right.maxWidth || Infinity, sum.width - leftMinWidth)\n\n  // Get min. delta X\n  let minDeltaX = leftMinWidth - cache.left.width\n  const rightMinDeltaX = cache.right.width - rightMaxWidth\n  if (minDeltaX < rightMinDeltaX) {\n    minDeltaX = rightMinDeltaX\n  }\n\n  // Get max. delta X\n  let maxDeltaX = cache.right.width - rightMinWidth\n  const leftMaxDeltaX = leftMaxWidth - cache.left.width\n  if (maxDeltaX > leftMaxDeltaX) {\n    maxDeltaX = leftMaxDeltaX\n  }\n\n  const _deltaX = Math.min(Math.max(deltaX, minDeltaX), maxDeltaX)\n\n  const leftW = cache.left.width + _deltaX\n  const rightW = cache.right.width - _deltaX\n\n  const leftFlex = (leftW / sum.width) * sum.flex\n  const rightFlex = (rightW / sum.width) * sum.flex\n\n  return {leftFlex, leftW, rightFlex, rightW}\n}\n","/**\n * @internal\n */\nexport function _getDOMPath(rootElement: HTMLElement, el: HTMLElement): number[] {\n  const path: number[] = []\n\n  let e = el\n\n  while (e !== rootElement) {\n    const parentElement = e.parentElement\n\n    if (!parentElement) return path\n\n    const children = Array.from(parentElement.childNodes)\n    const index = children.indexOf(e)\n\n    path.unshift(index)\n\n    if (parentElement === rootElement) {\n      return path\n    }\n\n    e = parentElement\n  }\n\n  return path\n}\n","import {_getDOMPath} from './_getDOMPath'\n\nconst EMPTY_PATH: number[] = []\n\n/**\n * @internal\n */\nexport function _sortElements(rootElement: HTMLElement, elements: HTMLElement[]): void {\n  // Create a map containing the DOM path of each pane element.\n  // The DOM path is relative to the `rootElement`, and is used in the next step for sorting.\n  const map = new WeakMap<HTMLElement, number[]>()\n\n  for (const element of elements) {\n    map.set(element, _getDOMPath(rootElement, element))\n  }\n\n  const _sortByElementPath = (a: HTMLElement, b: HTMLElement) => {\n    const _a = map.get(a) || EMPTY_PATH\n    const _b = map.get(b) || EMPTY_PATH\n\n    const len = Math.max(_a.length, _b.length)\n\n    // Loop until there are different indexes\n    for (let i = 0; i < len; i += 1) {\n      const aIndex = _a[i] || -1\n      const bIndex = _b[i] || -1\n\n      if (aIndex !== bIndex) {\n        return aIndex - bIndex\n      }\n    }\n\n    return 0\n  }\n\n  elements.sort(_sortByElementPath)\n}\n","import {PANE_COLLAPSED_WIDTH, PANE_DEFAULT_MIN_WIDTH} from './constants'\nimport {_calcPaneResize, _sortElements} from './helpers'\nimport {\n  type PaneConfigOpts,\n  type PaneData,\n  type PaneResizeCache,\n  type PaneResizeData,\n} from './types'\n\nexport interface PaneLayoutState {\n  expandedElement: HTMLElement | null\n  panes: PaneData[]\n  resizing: boolean\n}\n\nexport type PaneLayoutStateObserver = (state: PaneLayoutState) => void\n\nexport interface PaneLayoutController {\n  collapse: (element: HTMLElement) => void\n  expand: (element: HTMLElement) => void\n  mount: (element: HTMLElement, options: PaneConfigOpts) => () => void\n  resize: (type: 'start' | 'move' | 'end', leftElement: HTMLElement, deltaX: number) => void\n  setRootElement: (nextRootElement: HTMLElement | null) => void\n  setRootWidth: (nextRootWidth: number) => void\n  subscribe: (observer: PaneLayoutStateObserver) => () => void\n}\n\nexport function createPaneLayoutController(): PaneLayoutController {\n  const observers: PaneLayoutStateObserver[] = []\n  const elements: HTMLElement[] = []\n  const optionsMap = new WeakMap<HTMLElement, PaneConfigOpts & {original: PaneConfigOpts}>()\n  const userCollapsedElementSet = new Set<HTMLElement>()\n  const cache: Partial<PaneResizeCache> = {}\n\n  // Mutable internal state\n  let rootElement: HTMLElement | null = null\n  let rootWidth = 0\n  let expandedElement: HTMLElement | null = null\n  let resizeDataMap = new Map<HTMLElement, PaneResizeData>()\n  let resizing = false\n\n  function collapse(element: HTMLElement) {\n    userCollapsedElementSet.add(element)\n\n    if (expandedElement === element) {\n      expandedElement = null\n    }\n\n    _notifyObservers()\n  }\n\n  function expand(element: HTMLElement) {\n    userCollapsedElementSet.delete(element)\n\n    expandedElement = element\n\n    _notifyObservers()\n  }\n\n  function mount(element: HTMLElement, options: PaneConfigOpts) {\n    optionsMap.set(element, {...options, original: options})\n\n    elements.push(element)\n\n    if (rootElement) {\n      _sortElements(rootElement, elements)\n    }\n\n    expand(element)\n\n    return () => {\n      const idx = elements.indexOf(element)\n\n      if (idx > -1) {\n        elements.splice(idx, 1)\n      }\n\n      optionsMap.delete(element)\n\n      _notifyObservers()\n    }\n  }\n\n  function resize(type: 'start' | 'move' | 'end', leftElement: HTMLElement, deltaX: number) {\n    const leftIndex = elements.indexOf(leftElement)\n    const leftOptions = optionsMap.get(leftElement)\n\n    if (!leftOptions) return\n\n    const rightElement = elements[leftIndex + 1]\n    const rightOptions = optionsMap.get(rightElement)\n\n    if (!rightOptions) return\n\n    if (type === 'start') {\n      resizing = true\n\n      cache.left = {\n        element: leftElement,\n        flex: leftOptions.flex || 1,\n        width: leftElement.offsetWidth,\n      }\n\n      cache.right = {\n        element: rightElement,\n        flex: rightOptions.flex || 1,\n        width: rightElement.offsetWidth,\n      }\n\n      _notifyObservers()\n    }\n\n    if (type === 'move' && cache.left && cache.right) {\n      resizeDataMap = new Map<HTMLElement, PaneResizeData>()\n\n      const {leftW, rightW, leftFlex, rightFlex} = _calcPaneResize(\n        cache as PaneResizeCache,\n        leftOptions,\n        rightOptions,\n        deltaX,\n      )\n\n      // update resize cache\n      resizeDataMap.set(leftElement, {flex: leftFlex, width: leftW})\n      resizeDataMap.set(rightElement, {flex: rightFlex, width: rightW})\n\n      _notifyObservers()\n    }\n\n    if (type === 'end') {\n      resizing = false\n\n      const leftResizeData = resizeDataMap.get(leftElement)\n      const rightResizeData = resizeDataMap.get(rightElement)\n\n      // Update left options\n      optionsMap.set(leftElement, {\n        ...leftOptions,\n        currentMinWidth: 0,\n        currentMaxWidth: leftOptions.maxWidth ?? Infinity,\n        flex: leftResizeData?.flex ?? leftOptions.flex,\n      })\n\n      // Update right options\n      optionsMap.set(rightElement, {\n        ...rightOptions,\n        currentMinWidth: 0,\n        currentMaxWidth: leftOptions.maxWidth ?? Infinity,\n        flex: rightResizeData?.flex ?? rightOptions.flex,\n      })\n\n      // Reset resize data map\n      resizeDataMap = new Map()\n\n      // Reset cache\n      delete cache.left\n      delete cache.right\n\n      _notifyObservers()\n    }\n  }\n\n  function setRootElement(nextRootElement: HTMLElement | null) {\n    rootElement = nextRootElement\n  }\n\n  function setRootWidth(nextRootWidth: number) {\n    rootWidth = nextRootWidth\n    _notifyObservers()\n  }\n\n  function subscribe(observer: PaneLayoutStateObserver) {\n    observers.push(observer)\n\n    return () => {\n      const idx = observers.push(observer)\n\n      if (idx > -1) {\n        observers.splice(idx, 1)\n      }\n    }\n  }\n\n  return {collapse, expand, mount, resize, setRootElement, setRootWidth, subscribe}\n\n  function _notifyObservers() {\n    if (!rootWidth) return\n\n    // Create a reversed array of pane elements, so we can loop over them backwards.\n    // Place the expanded element first (so it has the least chance of being collapsed).\n    const _elements: HTMLElement[] = []\n    for (const element of elements) {\n      if (element !== expandedElement) {\n        _elements.unshift(element)\n      }\n    }\n    if (expandedElement) {\n      _elements.unshift(expandedElement)\n    }\n\n    const dataMap = new WeakMap<HTMLElement, PaneData>()\n    const len = _elements.length\n    const lastElement = _elements[0]\n    const collapsedWidth = (len - 1) * PANE_COLLAPSED_WIDTH\n\n    let remaingWidth = rootWidth - collapsedWidth\n\n    for (const element of _elements) {\n      const options = optionsMap.get(element)\n\n      if (!options) {\n        continue\n      }\n\n      const minWidth = options.currentMinWidth || options.minWidth || PANE_DEFAULT_MIN_WIDTH\n      const isLast = element === lastElement\n\n      // A pane is collapsed if:\n      // - it’s explictly collapsed by the user\n      const userCollapsed = userCollapsedElementSet.has(element)\n      // - it’s minimum width is larger than the remaining width\n      const sizeCollapsed = minWidth > remaingWidth\n      // - if the element is not the last (expanded pane)\n      const collapsed = isLast ? false : userCollapsed || sizeCollapsed\n\n      const resizeData = resizeDataMap.get(element)\n\n      // Collect pane data\n      dataMap.set(element, {\n        element: element,\n        collapsed: collapsed,\n        currentMinWidth: resizeData?.width ?? options.currentMinWidth,\n        currentMaxWidth: resizeData?.width ?? options.currentMaxWidth,\n        flex: resizeData?.flex ?? options.flex ?? 1,\n      })\n\n      // Update remaining width\n      if (collapsed) {\n        remaingWidth -= PANE_COLLAPSED_WIDTH\n      } else {\n        remaingWidth -= minWidth - PANE_COLLAPSED_WIDTH\n      }\n    }\n\n    const panes: PaneData[] = []\n\n    for (const element of elements) {\n      const data = dataMap.get(element)\n\n      if (data) panes.push(data)\n    }\n\n    for (const observer of observers) {\n      observer({\n        expandedElement: expandedElement || elements[elements.length - 1] || null,\n        panes,\n        resizing,\n      })\n    }\n  }\n}\n","import {type CardProps, useElementRect} from '@sanity/ui'\nimport {type HTMLProps, useEffect, useMemo, useState} from 'react'\nimport {PaneLayoutContext} from 'sanity/_singletons'\n\nimport {Root} from './PaneLayout.styles'\nimport {createPaneLayoutController, type PaneLayoutState} from './paneLayoutController'\nimport {type PaneLayoutContextValue} from './types'\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport interface PaneLayoutProps {\n  minWidth?: number\n  onCollapse?: () => void\n  onExpand?: () => void\n}\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport function PaneLayout(\n  props: PaneLayoutProps &\n    CardProps &\n    Omit<HTMLProps<HTMLDivElement>, 'as' | 'height' | 'ref' | 'wrap'>,\n) {\n  const {children, minWidth, onCollapse, onExpand, ...restProps} = props\n  const [controller] = useState(() => createPaneLayoutController())\n  const [rootElement, setRootElement] = useState<HTMLDivElement | null>(null)\n  const rootRect = useElementRect(rootElement)\n  const width = rootRect?.width || 0\n  const collapsed = width === undefined || !minWidth ? undefined : width < minWidth\n  const [state, setState] = useState<PaneLayoutState>({\n    expandedElement: null,\n    panes: [],\n    resizing: false,\n  })\n\n  // Set root element\n  useEffect(() => controller.setRootElement(rootElement), [controller, rootElement])\n\n  // Set root size\n  useEffect(() => controller.setRootWidth(width), [controller, width])\n\n  // Subscribe to state changes\n  useEffect(() => controller.subscribe(setState), [controller])\n\n  // Call the `onCollapse` and `onExpand` callbacks as the `collapsed` boolean changes\n  useEffect(() => {\n    if (collapsed === undefined) return\n    if (collapsed && onCollapse) onCollapse()\n    if (!collapsed && onExpand) onExpand()\n  }, [collapsed, onCollapse, onExpand])\n\n  // This is the context value that gives each pane the information they need\n  const paneLayout: PaneLayoutContextValue = useMemo(\n    () => ({\n      collapse: controller.collapse,\n      collapsed,\n      expand: controller.expand,\n      expandedElement: state.expandedElement,\n      mount: controller.mount,\n      panes: state.panes,\n      resize: controller.resize,\n      resizing: state.resizing,\n    }),\n    [collapsed, controller, state.expandedElement, state.panes, state.resizing],\n  )\n\n  return (\n    <PaneLayoutContext.Provider value={paneLayout}>\n      <Root\n        data-ui=\"PaneLayout\"\n        {...restProps}\n        data-collapsed={collapsed ? '' : undefined}\n        // The `data-resizing` attribute is used to improve cursor behavior\n        data-resizing={state.resizing ? '' : undefined}\n        // The `data-mounted` attribute is used to fade in the layout and prevent flash of\n        // non-collapsed panes\n        data-mounted={width ? '' : undefined}\n        ref={setRootElement}\n      >\n        {children}\n      </Root>\n    </PaneLayoutContext.Provider>\n  )\n}\n","import {Box, type CardTone} from '@sanity/ui'\n\nimport {Pane, PaneContent, PaneHeader} from '../../components/pane'\n\n/**\n * @internal\n */\nexport function ErrorPane(props: {\n  children?: React.ReactNode\n  currentMinWidth?: number\n  flex?: number\n  minWidth?: number\n  paneKey: string\n  title?: React.ReactNode\n  tone?: CardTone\n}) {\n  const {\n    children,\n    currentMinWidth,\n    flex,\n    minWidth,\n    paneKey,\n    title = 'Error',\n    tone = 'critical',\n  } = props\n\n  return (\n    <Pane\n      currentMinWidth={currentMinWidth}\n      flex={flex}\n      id={paneKey}\n      minWidth={minWidth}\n      tone={tone}\n    >\n      <PaneHeader title={title} />\n      <PaneContent overflow=\"auto\">\n        <Box paddingX={4} paddingY={5}>\n          {children}\n        </Box>\n      </PaneContent>\n    </Pane>\n  )\n}\n","import {useEffect, useState} from 'react'\n\nexport function Delay({\n  children,\n  ms = 0,\n}: {\n  children?: React.JSX.Element | (() => React.JSX.Element)\n  ms?: number\n}): React.JSX.Element {\n  const [ready, setReady] = useState(ms <= 0)\n\n  useEffect(() => {\n    if (ms <= 0) {\n      return undefined\n    }\n\n    const timeoutId = setTimeout(() => setReady(true), ms)\n\n    return () => {\n      clearTimeout(timeoutId)\n    }\n  }, [ms])\n\n  if (!ready || !children) {\n    return <></>\n  }\n\n  return typeof children === 'function' ? children() : children\n}\n","import {merge, type Observable, of} from 'rxjs'\nimport {delay, mapTo} from 'rxjs/operators'\nimport {isDev} from 'sanity'\n\n/**\n * @internal\n */\nexport type WaitMessage = {messageKey: string} | {message: string}\n\n/**\n * @internal\n */\nexport function getWaitMessages(path: string[]): Observable<WaitMessage> {\n  const thresholds: (WaitMessage & {ms: number})[] = [\n    {ms: 300, messageKey: 'panes.resolving.default-message'},\n    {ms: 5000, messageKey: 'panes.resolving.slow-resolve-message'},\n  ]\n\n  if (isDev) {\n    const message = [\n      'Check console for errors?',\n      'Is your observable/promise resolving?',\n      path.length > 0 ? `Structure path: ${path.join(' ➝ ')}` : '',\n    ]\n\n    thresholds.push({\n      ms: 10000,\n      message: message.join('\\n'),\n    })\n  }\n\n  const src = of(null)\n\n  return merge(\n    ...thresholds.map((threshold) =>\n      src.pipe(\n        mapTo(\n          'messageKey' in threshold\n            ? {messageKey: threshold.messageKey}\n            : {message: threshold.message},\n        ),\n        delay(threshold.ms),\n      ),\n    ),\n  )\n}\n","import {_raf2, type CardTone, Flex} from '@sanity/ui'\nimport {memo, useEffect, useMemo, useState} from 'react'\nimport {type Observable} from 'rxjs'\nimport {LoadingBlock, useTranslation} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Delay} from '../../components/Delay'\nimport {Pane, PaneContent} from '../../components/pane'\nimport {structureLocaleNamespace} from '../../i18n'\nimport {getWaitMessages, type WaitMessage} from './getWaitMessages'\n\ninterface LoadingPaneProps {\n  delay?: number\n  flex?: number\n  message?: string | ((p: string[]) => string | Observable<WaitMessage>)\n  minWidth?: number\n  paneKey: string\n  path?: string\n  selected?: boolean\n  title?: string\n  tone?: CardTone\n}\n\nconst DELAY = false\nconst DEFAULT_MESSAGE_KEY = 'panes.resolving.default-message'\n\nconst Content = styled(Flex)`\n  opacity: 0;\n  transition: opacity 200ms;\n\n  &[data-mounted] {\n    opacity: 1;\n  }\n`\n\n/**\n * @internal\n */\nexport const LoadingPane = memo((props: LoadingPaneProps) => {\n  const {\n    delay = 300,\n    flex,\n    message: messageProp = getWaitMessages,\n    minWidth,\n    paneKey,\n    path,\n    selected,\n    title,\n    tone,\n  } = props\n\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const resolvedMessage = useMemo(() => {\n    if (typeof messageProp === 'function') {\n      return messageProp(path ? path.split(';') : [])\n    }\n\n    return messageProp\n  }, [messageProp, path])\n\n  const [currentMessage, setCurrentMessage] = useState<string | null>(() => {\n    if (typeof resolvedMessage === 'string') return resolvedMessage\n    return t(DEFAULT_MESSAGE_KEY)\n  })\n\n  useEffect(() => {\n    if (typeof resolvedMessage !== 'object') return undefined\n    if (typeof resolvedMessage.subscribe !== 'function') return undefined\n\n    const sub = resolvedMessage.subscribe((message) => {\n      setCurrentMessage('messageKey' in message ? t(message.messageKey) : message.message)\n    })\n\n    return () => sub.unsubscribe()\n  }, [resolvedMessage, t])\n\n  const [contentElement, setContentElement] = useState<HTMLDivElement | null>(null)\n  const [mounted, setMounted] = useState(false)\n\n  useEffect(() => {\n    if (!contentElement) return undefined\n    return _raf2(() => setMounted(true))\n  }, [contentElement])\n\n  const content = (\n    <Content\n      align=\"center\"\n      data-mounted={mounted ? '' : undefined}\n      direction=\"column\"\n      height=\"fill\"\n      justify=\"center\"\n      ref={setContentElement}\n    >\n      <LoadingBlock showText title={title || currentMessage} />\n    </Content>\n  )\n\n  return (\n    <Pane flex={flex} id={paneKey} minWidth={minWidth} selected={selected} tone={tone}>\n      <PaneContent>{DELAY ? <Delay ms={delay}>{content}</Delay> : content}</PaneContent>\n    </Pane>\n  )\n})\n\nLoadingPane.displayName = 'Memo(LoadingPane)'\n","import {useContext} from 'react'\nimport {DocumentPaneContext} from 'sanity/_singletons'\n\nimport {type DocumentPaneContextValue} from './DocumentPaneContext'\n\n/** @internal */\nexport function useDocumentPane(): DocumentPaneContextValue {\n  const documentPane = useContext(DocumentPaneContext)\n\n  if (!documentPane) {\n    throw new Error('DocumentPane: missing context value')\n  }\n\n  return documentPane\n}\n","import {useCallback, useLayoutEffect, useRef} from 'react'\nimport {\n  COMMENTS_INSPECTOR_NAME,\n  CommentsEnabledProvider,\n  CommentsProvider,\n  useCommentsEnabled,\n  usePerspective,\n  useStudioUrl,\n} from 'sanity'\nimport {useRouter} from 'sanity/router'\n\nimport {usePaneRouter} from '../../../components'\nimport {useDocumentPane} from '../useDocumentPane'\n\ninterface CommentsWrapperProps {\n  children: React.ReactNode\n  documentId: string\n  documentType: string\n}\n\n/**\n * @internal\n * A wrapper that conditionally wraps the document layout in a comments provider\n * if the feature is enabled for the project and the current document.\n */\nexport function CommentsWrapper(props: CommentsWrapperProps) {\n  const {children, documentId, documentType} = props\n\n  return (\n    <CommentsEnabledProvider documentId={documentId} documentType={documentType}>\n      <CommentsProviderWrapper documentId={documentId} documentType={documentType}>\n        {children}\n      </CommentsProviderWrapper>\n    </CommentsEnabledProvider>\n  )\n}\n\nfunction CommentsProviderWrapper(props: CommentsWrapperProps) {\n  const {children, documentId, documentType} = props\n\n  const {enabled} = useCommentsEnabled()\n  const {connectionState, onPathOpen, inspector, openInspector} = useDocumentPane()\n  const {selectedReleaseId} = usePerspective()\n  const {params, setParams} = usePaneRouter()\n  const {studioUrl} = useStudioUrl(window.location.origin)\n  const {resolveIntentLink} = useRouter()\n\n  const selectedCommentId = params?.comment\n  const paramsRef = useRef(params)\n\n  useLayoutEffect(() => {\n    paramsRef.current = params\n  }, [params])\n\n  const getCommentLink = useCallback(\n    (commentId: string) => {\n      const intentLink = resolveIntentLink('edit', {\n        id: documentId,\n        type: documentType,\n        inspect: COMMENTS_INSPECTOR_NAME,\n        comment: commentId,\n      })\n      return `${studioUrl}${intentLink}`\n    },\n    [documentId, documentType, resolveIntentLink, studioUrl],\n  )\n\n  const handleClearSelectedComment = useCallback(() => {\n    setParams({...paramsRef.current, comment: undefined})\n  }, [setParams])\n\n  const handleOpenCommentsInspector = useCallback(() => {\n    if (inspector?.name === COMMENTS_INSPECTOR_NAME) return\n\n    openInspector(COMMENTS_INSPECTOR_NAME)\n  }, [inspector?.name, openInspector])\n\n  // If comments are not enabled, render the default document layout\n  if (!enabled) {\n    return <>{children}</>\n  }\n\n  return (\n    <CommentsProvider\n      documentId={documentId}\n      documentType={documentType}\n      getCommentLink={getCommentLink}\n      isCommentsOpen={inspector?.name === COMMENTS_INSPECTOR_NAME}\n      isConnecting={connectionState === 'connecting'}\n      onClearSelectedComment={handleClearSelectedComment}\n      onCommentsOpen={handleOpenCommentsInspector}\n      onPathOpen={onPathOpen}\n      selectedCommentId={selectedCommentId}\n      sortOrder=\"desc\"\n      type=\"field\"\n      releaseId={selectedReleaseId}\n    >\n      {children}\n    </CommentsProvider>\n  )\n}\n","import {useContext} from 'react'\nimport {PaneRouterContext} from 'sanity/_singletons'\n\nimport {type PaneRouterContextValue} from './types'\n\n/**\n *\n * @hidden\n * @beta\n */\nexport function usePaneRouter(): PaneRouterContextValue {\n  return useContext(PaneRouterContext)\n}\n","import {useMemo} from 'react'\nimport {\n  getReleaseIdFromReleaseDocumentId,\n  getVersionFromId,\n  type ReleaseDocument,\n  useActiveReleases,\n  useArchivedReleases,\n  useDocumentVersions,\n  usePerspective,\n} from 'sanity'\n\nimport {usePaneRouter} from '../components/paneRouter/usePaneRouter'\nimport {type DocumentPaneContextValue} from '../panes/document/DocumentPaneContext'\n\ntype FilterReleases = {\n  notCurrentReleases: ReleaseDocument[]\n  currentReleases: ReleaseDocument[]\n  inCreation: ReleaseDocument | null\n}\n\n/**\n * @internal\n */\nexport function useFilteredReleases({\n  displayed,\n  documentId,\n}: Pick<DocumentPaneContextValue, 'displayed' | 'documentId'>): FilterReleases {\n  const {selectedReleaseId} = usePerspective()\n  const {data: releases} = useActiveReleases()\n  const {data: archivedReleases} = useArchivedReleases()\n  const {data: documentVersions} = useDocumentVersions({documentId})\n  const isCreatingDocument = displayed && !displayed._createdAt\n  const {params} = usePaneRouter()\n\n  return useMemo(() => {\n    if (!documentVersions) return {notCurrentReleases: [], currentReleases: [], inCreation: null}\n    // Gets the releases ids from the document versions, it means, the releases that the document belongs to\n    const releasesIds = documentVersions.map((id) => getVersionFromId(id))\n    const activeReleases = releases.reduce(\n      (acc: FilterReleases, release) => {\n        const versionDocExists = releasesIds.includes(\n          getReleaseIdFromReleaseDocumentId(release._id),\n        )\n        const releaseId = getReleaseIdFromReleaseDocumentId(release._id)\n        const isCreatingThisVersion =\n          isCreatingDocument &&\n          releaseId === getVersionFromId(displayed._id || '') &&\n          releaseId === selectedReleaseId\n\n        if (isCreatingThisVersion) {\n          acc.inCreation = release\n        } else if (versionDocExists) {\n          acc.currentReleases.push(release)\n        } else {\n          acc.notCurrentReleases.push(release)\n        }\n        return acc\n      },\n      {notCurrentReleases: [], currentReleases: [], inCreation: null},\n    )\n\n    // without historyVersion, version is not in an archived release\n    if (!params?.historyVersion) return activeReleases\n\n    const archivedRelease = archivedReleases.find(\n      (r) => getReleaseIdFromReleaseDocumentId(r._id) === params?.historyVersion,\n    )\n\n    // only for explicitly archived releases; published releases use published perspective\n    if (archivedRelease?.state === 'archived') {\n      activeReleases.currentReleases.push(archivedRelease)\n    }\n\n    return activeReleases\n  }, [\n    archivedReleases,\n    isCreatingDocument,\n    displayed?._id,\n    documentVersions,\n    params?.historyVersion,\n    releases,\n    selectedReleaseId,\n  ])\n}\n","import {useMemo} from 'react'\nimport {getReleaseIdFromReleaseDocumentId, getVersionId, useWorkspace} from 'sanity'\n\nimport {type DocumentPaneContextValue} from '../panes/document/DocumentPaneContext'\nimport {useFilteredReleases} from './useFilteredReleases'\n\n/**\n * @internal\n */\nexport interface DocumentIdStack {\n  /**\n   * The position of the displayed document within the stack.\n   */\n  position: number\n  /**\n   * The id of the previous document in the stack.\n   */\n  previousId?: string\n  /**\n   * The id of the next document in the stack.\n   */\n  nextId?: string\n  /**\n   * An array of document ids comprising the stack the displayed document is a member of, ordered per\n   * release layering.\n   */\n  stack: string[]\n}\n\n/**\n * Get a stack of document ids representing existing versions of the provided document with release\n * layering applied.\n *\n * @internal\n */\nexport function useDocumentIdStack({\n  displayed,\n  documentId,\n  editState,\n}: Pick<DocumentPaneContextValue, 'displayed' | 'documentId' | 'editState'>): DocumentIdStack {\n  const {\n    document: {\n      drafts: {enabled: isDraftModelEnabled},\n    },\n  } = useWorkspace()\n\n  const filteredReleases = useFilteredReleases({displayed, documentId})\n\n  const systemStack = [\n    editState?.published?._id,\n    isDraftModelEnabled ? editState?.draft?._id : [],\n  ].flat()\n\n  const releaseStack = filteredReleases.currentReleases.map(\n    (release) =>\n      editState?.id && getVersionId(editState.id, getReleaseIdFromReleaseDocumentId(release._id)),\n  )\n\n  const stack = systemStack.concat(releaseStack).filter((id) => typeof id === 'string')\n\n  const position = useMemo(\n    () => stack.findIndex((id) => id === displayed?._id),\n    [displayed?._id, stack],\n  )\n\n  const previousId = useMemo(() => stack[position - 1] ?? undefined, [position, stack])\n  const nextId = useMemo(() => stack[position + 1] ?? undefined, [position, stack])\n\n  return {\n    position,\n    previousId,\n    nextId,\n    stack,\n  }\n}\n","import {useContext} from 'react'\nimport {StructureToolContext} from 'sanity/_singletons'\n\nimport {type StructureToolContextValue} from './types'\n\n/** @internal */\nexport function useStructureTool(): StructureToolContextValue {\n  const structureTool = useContext(StructureToolContext)\n  if (!structureTool) throw new Error(`StructureTool: missing context value`)\n\n  return structureTool\n}\n","import {type PaneRouterContextValue} from '../../components'\nimport {type PaneMenuItemGroup} from '../../types'\n\nexport const DOCUMENT_PANEL_MIN_WIDTH = 320\nexport const DOCUMENT_PANEL_INITIAL_MIN_WIDTH = 600\n\nexport const DOCUMENT_INSPECTOR_MIN_WIDTH = 320\nexport const DOCUMENT_INSPECTOR_MAX_WIDTH = 540\n\nexport const EMPTY_PARAMS: NonNullable<PaneRouterContextValue['params']> = {}\n\nexport const INSPECT_ACTION_PREFIX = 'inspect:'\n\nexport const DEFAULT_MENU_ITEM_GROUPS: PaneMenuItemGroup[] = [{id: 'inspectors'}, {id: 'links'}]\n\n// inspectors\nexport const HISTORY_INSPECTOR_NAME = 'sanity/structure/history'\nexport const VALIDATION_INSPECTOR_NAME = 'sanity/structure/validation'\n","import {memo, useCallback, useEffect, useMemo, useState} from 'react'\nimport {type DocumentInspector, type DocumentInspectorMenuItem, useUnique} from 'sanity'\n\ninterface DocumentInspectorMenuItemsResolverProps {\n  documentId: string\n  documentType: string\n  inspectors: DocumentInspector[]\n  onMenuItems: (items: DocumentInspectorMenuItem[]) => void\n}\n\n// The menu item in a document inspector are resolved in a React hook (`useMenuItem`).\n// This means that the menu item needs to be resolved in a React component (in accordance with the rules of hooks).\n// In this component, we map over the configured inspectors and render a `InspectorMenuItem` for each.\n// The `InspectorMenuItem` will resolve the menu item in a React hook and call the `setMenuItem` callback\n// with the resolved menu item and the index of the inspector.\n// Finally, we call the `onMenuItems` callback with the resolved menu items.\nexport function DocumentInspectorMenuItemsResolver(props: DocumentInspectorMenuItemsResolverProps) {\n  const {documentId, documentType, inspectors, onMenuItems} = props\n\n  const len = inspectors.length\n  const [menuItems, setMenuItems] = useState<DocumentInspectorMenuItem[]>(() =>\n    Array.from(new Array(len)),\n  )\n\n  useEffect(() => {\n    if (menuItems.length !== len) {\n      const newFieldActions = Array.from(new Array(len))\n\n      for (let i = 0; i < len; i++) {\n        newFieldActions[i] = menuItems[i]\n      }\n\n      setMenuItems(newFieldActions)\n    }\n  }, [len, menuItems])\n\n  const setMenuItem = useCallback((index: number, node: DocumentInspectorMenuItem) => {\n    setMenuItems((prev) => {\n      const next = [...prev]\n      next[index] = node\n      return next\n    })\n  }, [])\n\n  useEffect(() => {\n    onMenuItems(menuItems.filter(Boolean))\n  }, [menuItems, onMenuItems])\n\n  const InspectorMenuItems = useMemo(() => {\n    return inspectors.map((inspector, index) => {\n      return inspector.useMenuItem\n        ? ([\n            defineInspectorMenuItemComponent({\n              documentId,\n              documentType,\n              index,\n              setMenuItem,\n              useMenuItem: inspector.useMenuItem,\n            }),\n            inspector.name,\n          ] as const)\n        : ([() => null, ''] as const)\n    })\n  }, [documentId, documentType, inspectors, setMenuItem])\n\n  return (\n    <>\n      {InspectorMenuItems.map(([InspectorMenuItem, key]) => key && <InspectorMenuItem key={key} />)}\n    </>\n  )\n}\nDocumentInspectorMenuItemsResolver.displayName = 'DocumentInspectorMenuItemsResolver'\n\nfunction defineInspectorMenuItemComponent({\n  documentId,\n  documentType,\n  index,\n  setMenuItem,\n  useMenuItem,\n}: {\n  documentId: string\n  documentType: string\n  index: number\n  setMenuItem: (index: number, node: DocumentInspectorMenuItem) => void\n  useMenuItem: NonNullable<DocumentInspector['useMenuItem']>\n}) {\n  return memo(function InspectorMenuItem() {\n    const menuItem = useMenuItem({\n      documentId,\n      documentType,\n    })\n    const node = useUnique(menuItem)\n\n    useEffect(() => {\n      setMenuItem(index, node)\n    }, [node])\n\n    return null\n  })\n}\n","import {useMemo} from 'react'\nimport {\n  prepareForPreview,\n  unstable_useValuePreview as useValuePreview,\n  useTranslation,\n} from 'sanity'\n\nimport {structureLocaleNamespace} from '../../i18n'\nimport {useDocumentPane} from './useDocumentPane'\n\n/**\n * useDocumentTitle hook return type.\n *\n * @beta\n * @hidden\n */\nexport interface UseDocumentTitle {\n  error?: string\n  title?: string\n}\n\n/**\n * React hook that returns the document title for the current document in the document pane.\n *\n * @beta\n * @hidden\n *\n * @returns The document title or error. See {@link UseDocumentTitle}\n */\nexport function useDocumentTitle(): UseDocumentTitle {\n  const {connectionState, schemaType, editState, isDeleted, lastRevisionDocument} =\n    useDocumentPane()\n  const {t} = useTranslation(structureLocaleNamespace)\n  // follows the same logic as the StructureTitle component\n  const documentValue = useMemo(() => {\n    return isDeleted\n      ? lastRevisionDocument\n      : editState?.version || editState?.draft || editState?.published\n  }, [isDeleted, lastRevisionDocument, editState])\n  const subscribed = Boolean(documentValue)\n\n  // For deleted documents, we need to handle the preview differently since useValuePreview\n  // will return null for deleted documents. Instead, we directly prepare the preview\n  // from the lastRevisionDocument data.\n  const deletedDocumentPreview = useMemo(() => {\n    if (isDeleted && lastRevisionDocument && schemaType) {\n      try {\n        const prepared = prepareForPreview(lastRevisionDocument, schemaType)\n        return prepared\n      } catch (error) {\n        console.warn('Failed to prepare preview for deleted document:', error)\n        return null\n      }\n    }\n    return null\n  }, [isDeleted, lastRevisionDocument, schemaType])\n\n  const {error, value} = useValuePreview({\n    // disable useValuePreview for deleted documents\n    enabled: subscribed && !isDeleted,\n    schemaType,\n    value: documentValue,\n  })\n\n  if (connectionState === 'connecting' && !subscribed) {\n    return {error: undefined, title: undefined}\n  }\n\n  // For deleted documents, use the directly prepared preview\n  if (isDeleted && deletedDocumentPreview) {\n    return {error: undefined, title: deletedDocumentPreview.title}\n  }\n\n  if (!value && !isDeleted) {\n    return {\n      error: undefined,\n      title: t('panes.document-header-title.new.text', {\n        schemaType: schemaType?.title || schemaType?.name,\n      }),\n    }\n  }\n\n  if (error) {\n    return {\n      error: t('panes.document-list-pane.error.text', {error: error.message}),\n      title: undefined,\n    }\n  }\n\n  return {error: undefined, title: value?.title}\n}\n","import {useToast} from '@sanity/ui'\nimport {memo, useEffect, useMemo, useRef} from 'react'\nimport {Translate, useDocumentOperationEvent, useTranslation} from 'sanity'\n\nimport {usePaneRouter} from '../../components'\nimport {structureLocaleNamespace} from '../../i18n'\nimport {useDocumentPane} from './useDocumentPane'\nimport {useDocumentTitle} from './useDocumentTitle'\n\nconst IGNORE_OPS = ['patch', 'commit']\n\nexport const DocumentOperationResults = memo(function DocumentOperationResults() {\n  const {push: pushToast} = useToast()\n  const {documentId, documentType, value: documentPaneValue} = useDocumentPane()\n  const documentTitleInfo = useDocumentTitle()\n  const titleError = documentTitleInfo.error\n  const event: any = useDocumentOperationEvent(documentId, documentType)\n  const prevEvent = useRef(event)\n  const paneRouter = usePaneRouter()\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const title = useMemo(() => {\n    // If title isn't set from document preview, use the title from the document pane value\n    if (\n      !documentTitleInfo.title &&\n      !titleError &&\n      !IGNORE_OPS.includes(event?.op) &&\n      typeof documentPaneValue.title === 'string' &&\n      event?.type === 'success'\n    ) {\n      return documentPaneValue.title\n    }\n    return documentTitleInfo.title\n  }, [documentTitleInfo.title, titleError, event, documentPaneValue.title])\n  //Truncate the document title and add \"...\" if it is over 25 characters\n  const documentTitleBase = title || t('panes.document-operation-results.operation-undefined-title')\n  const documentTitle =\n    documentTitleBase.length > 25 ? `${documentTitleBase.slice(0, 25)}...` : documentTitleBase\n\n  useEffect(() => {\n    if (!event || event === prevEvent.current) return\n\n    let cleanupId: number | undefined\n\n    if (event.type === 'error') {\n      pushToast({\n        closable: true,\n        duration: 30000, // 30s\n        status: 'error',\n        title: t('panes.document-operation-results.operation-error', {context: event.op}),\n        description: (\n          <details>\n            <summary>{t('panes.document-operation-results.error.summary.title')}</summary>\n            {event.error.message}\n          </details>\n        ),\n      })\n    }\n\n    if (event.type === 'success' && !IGNORE_OPS.includes(event.op)) {\n      pushToast({\n        closable: true,\n        status: 'success',\n        title: (\n          <Translate\n            context={event.op}\n            i18nKey=\"panes.document-operation-results.operation-success\"\n            t={t}\n            values={{\n              op: event.op,\n              title: documentTitle,\n            }}\n            components={{\n              Strong: 'strong',\n            }}\n          />\n        ),\n      })\n    }\n\n    /**\n     * If the document was deleted successfully, close the pane.\n     */\n    if (event.type === 'success' && event.op === 'delete') {\n      // Wait until next tick to allow deletion toasts to appear first\n      cleanupId = setTimeout(() => paneRouter.closeCurrentAndAfter(), 0) as any as number\n    }\n\n    prevEvent.current = event\n\n    // eslint-disable-next-line consistent-return\n    return () => clearTimeout(cleanupId)\n  }, [event, paneRouter, pushToast, t, documentTitle])\n\n  return null\n})\n","import {WarningOutlineIcon} from '@sanity/icons'\nimport {type PreviewValue, type SanityDocument, type SchemaType} from '@sanity/types'\nimport {assignWith} from 'lodash'\nimport {type ReactNode} from 'react'\nimport {combineLatest, type Observable, of} from 'rxjs'\nimport {map, startWith} from 'rxjs/operators'\nimport {type DocumentPreviewStore, getDraftId, getPublishedId} from 'sanity'\n\nimport {type PaneItemPreviewState} from './types'\n\nexport const isLiveEditEnabled = (schemaType: Pick<SchemaType, 'liveEdit'>) =>\n  schemaType.liveEdit === true\n\nexport const getMissingDocumentFallback = (item: SanityDocument) => ({\n  title: <em>{item.title ? String(item.title) : 'Missing document'}</em>,\n  subtitle: <em>{item.title ? `Missing document ID: ${item._id}` : `Document ID: ${item._id}`}</em>,\n  media: () => <WarningOutlineIcon />,\n})\n\nexport const getValueWithFallback = ({\n  value,\n  draft,\n  published,\n}: {\n  value: SanityDocument\n  draft?: Partial<SanityDocument> | PreviewValue | null\n  published?: Partial<SanityDocument> | PreviewValue | null\n}) => {\n  const snapshot = draft || published\n\n  if (!snapshot) {\n    return getMissingDocumentFallback(value)\n  }\n\n  return assignWith({}, snapshot, value, (objValue, srcValue) => {\n    return typeof srcValue === 'undefined' ? objValue : srcValue\n  })\n}\n\nexport function getPreviewStateObservable(\n  documentPreviewStore: DocumentPreviewStore,\n  schemaType: SchemaType,\n  documentId: string,\n  title: ReactNode,\n): Observable<PaneItemPreviewState> {\n  const draft$ = isLiveEditEnabled(schemaType)\n    ? of({snapshot: null})\n    : documentPreviewStore.observeForPreview(\n        {_type: 'reference', _ref: getDraftId(documentId)},\n        schemaType,\n      )\n\n  const published$ = documentPreviewStore.observeForPreview(\n    {_type: 'reference', _ref: getPublishedId(documentId)},\n    schemaType,\n  )\n\n  return combineLatest([draft$, published$]).pipe(\n    map(([draft, published]) => ({\n      draft: draft.snapshot ? {title, ...draft.snapshot} : null,\n      isLoading: false,\n      published: published.snapshot ? {title, ...published.snapshot} : null,\n    })),\n    startWith({draft: null, isLoading: true, published: null}),\n  )\n}\n","import {type SchemaType} from '@sanity/types'\nimport {type EditStateFor, type Workspace} from 'sanity'\n\nimport {isLiveEditEnabled} from './components/paneItem/helpers'\n\nexport interface Context {\n  editState: Pick<EditStateFor, 'ready' | 'draft' | 'published' | 'version'> | null\n  workspace: {\n    document: {\n      drafts: Pick<Workspace['document']['drafts'], 'enabled'>\n    }\n  }\n  schemaType: Pick<SchemaType, 'liveEdit'>\n}\n\n/**\n * Determine whether a document has an obsolete draft. This occurs if a document has a draft while\n * the draft model is inactive, or if a live-edit document has a draft.\n */\nexport function hasObsoleteDraft({editState, workspace, schemaType}: Context):\n  | {\n      result: true\n      reason: 'LIVE_EDIT_ACTIVE' | 'DRAFT_MODEL_INACTIVE'\n    }\n  | {result: false}\n  | {result: undefined} {\n  if (!editState?.ready) {\n    return {\n      result: undefined,\n    }\n  }\n\n  const draftExists = editState.draft !== null\n\n  const {\n    document: {\n      drafts: {enabled: isDraftModelEnabled},\n    },\n  } = workspace\n\n  if (draftExists === false) {\n    return {\n      result: false,\n    }\n  }\n\n  if (!isDraftModelEnabled) {\n    return {\n      result: true,\n      reason: 'DRAFT_MODEL_INACTIVE',\n    }\n  }\n\n  if (isLiveEditEnabled(schemaType)) {\n    return {\n      result: true,\n      reason: 'LIVE_EDIT_ACTIVE',\n    }\n  }\n\n  return {\n    result: false,\n  }\n}\n","import {type EditStateFor, isNewDocument, type isPerspectiveWriteable} from 'sanity'\n\n/**\n * Determine whether the user must choose a new perspective in order to create a document.\n *\n * @returns A boolean reflecting whether the user must choose a new perspective, and `undefined` while indeterminate.\n * @internal\n */\nexport function mustChooseNewDocumentDestination({\n  isSelectedPerspectiveWriteable,\n  editState,\n}: {\n  isSelectedPerspectiveWriteable: ReturnType<typeof isPerspectiveWriteable>\n  editState: Pick<EditStateFor, 'ready' | 'draft' | 'published' | 'version'> | null\n}): boolean | undefined {\n  return isNewDocument(editState) && !isSelectedPerspectiveWriteable.result\n}\n","import {CloseIcon} from '@sanity/icons'\nimport {Box, Card, type CardProps, Flex, Text} from '@sanity/ui'\nimport {type HTMLProps, type ReactNode} from 'react'\nimport {useTranslation} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Button} from '../../../../ui-components'\nimport {structureLocaleNamespace} from '../../../i18n'\n\nexport interface DocumentInspectorHeaderProps {\n  as?: CardProps['as']\n  closeButtonLabel: string\n  flex?: CardProps['flex']\n  onClose: () => void\n  title: ReactNode\n}\n\nconst Root = styled(Card)({\n  position: 'relative',\n  zIndex: '1',\n  lineHeight: '0',\n})\n\n/** @internal */\nexport function DocumentInspectorHeader(\n  props: DocumentInspectorHeaderProps & Omit<HTMLProps<HTMLDivElement>, 'as' | 'height' | 'ref'>,\n) {\n  const {as: forwardedAs, children, closeButtonLabel, onClose, title, ...restProps} = props\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  return (\n    <Root {...restProps} as={forwardedAs}>\n      <Flex padding={2}>\n        <Box flex={1} padding={3}>\n          <Text as=\"h1\" size={1} weight=\"medium\">\n            {title}\n          </Text>\n        </Box>\n        <Box flex=\"none\" padding={1}>\n          <Button\n            aria-label={closeButtonLabel}\n            icon={CloseIcon}\n            mode=\"bleed\"\n            onClick={onClose}\n            tooltipProps={{content: t('document-inspector.close-button.tooltip')}}\n          />\n        </Box>\n      </Flex>\n      {children}\n    </Root>\n  )\n}\n","import {Box} from '@sanity/ui'\nimport {useCallback} from 'react'\nimport {Resizable} from 'sanity'\n\nimport {usePane} from '../../../components'\nimport {useStructureTool} from '../../../useStructureTool'\nimport {DOCUMENT_INSPECTOR_MAX_WIDTH, DOCUMENT_INSPECTOR_MIN_WIDTH} from '../constants'\nimport {useDocumentPane} from '../useDocumentPane'\n\ninterface DocumentInspectorPanelProps {\n  documentId: string\n  documentType: string\n  flex?: number | number[]\n}\n\nexport function DocumentInspectorPanel(\n  props: DocumentInspectorPanelProps,\n): React.JSX.Element | null {\n  const {documentId, documentType, flex} = props\n  const {collapsed} = usePane()\n  const {closeInspector, inspector} = useDocumentPane()\n  const {features} = useStructureTool()\n\n  const handleClose = useCallback(() => {\n    if (inspector) closeInspector(inspector.name)\n  }, [closeInspector, inspector])\n\n  if (collapsed || !inspector) return null\n\n  const Component = inspector.component\n  const element = (\n    <Component onClose={handleClose} documentId={documentId} documentType={documentType} />\n  )\n\n  if (features.resizablePanes) {\n    return (\n      <Resizable\n        as=\"aside\"\n        data-ui=\"DocumentInspectorPanel\"\n        flex={flex}\n        resizerPosition=\"left\"\n        maxWidth={DOCUMENT_INSPECTOR_MAX_WIDTH}\n        minWidth={DOCUMENT_INSPECTOR_MIN_WIDTH}\n      >\n        {element}\n      </Resizable>\n    )\n  }\n\n  return (\n    <Box as=\"aside\" data-ui=\"DocumentInspectorPanel\" flex={flex}>\n      {element}\n    </Box>\n  )\n}\n","import {useCallback, useMemo} from 'react'\nimport {useObservable} from 'react-rx'\nimport {map} from 'rxjs/operators'\nimport {useKeyValueStore} from 'sanity'\n\nconst STRUCTURE_TOOL_NAMESPACE = 'studio.structure-tool'\n\n/**\n * @internal\n */\nexport function useStructureToolSetting<ValueType>(\n  namespace: string,\n  key: string | null,\n  defaultValue?: ValueType,\n): [ValueType | undefined, (_value: ValueType) => void] {\n  const keyValueStore = useKeyValueStore()\n\n  const keyValueStoreKey = [STRUCTURE_TOOL_NAMESPACE, namespace, key].filter(Boolean).join('.')\n\n  const value$ = useMemo(() => {\n    return keyValueStore\n      .getKey(keyValueStoreKey)\n      .pipe(map((value) => (value === null ? defaultValue : value)))\n  }, [defaultValue, keyValueStore, keyValueStoreKey])\n\n  const value = useObservable(value$, defaultValue) as ValueType\n  const set = useCallback(\n    (newValue: ValueType) => {\n      if (newValue !== value) {\n        keyValueStore.setKey(keyValueStoreKey, newValue as string)\n      }\n    },\n    [keyValueStore, keyValueStoreKey, value],\n  )\n\n  return useMemo(() => [value, set], [set, value])\n}\n","export const VIEW_MODE_PARSED = {id: 'parsed', title: 'document-inspector.view-mode.parsed'}\nexport const VIEW_MODE_RAW = {id: 'raw', title: 'document-inspector.view-mode.raw-json'}\nexport const VIEW_MODES = [VIEW_MODE_PARSED, VIEW_MODE_RAW]\n","import {type SanityDocumentLike} from '@sanity/types'\nimport LRU from 'quick-lru'\nimport {isRecord, isString} from 'sanity'\n\nconst lru = new LRU({maxSize: 1000})\n\nexport function isExpanded(keyPath: any, value: any): any {\n  const cached = lru.get(keyPath)\n\n  if (cached === undefined) {\n    lru.set(keyPath, Array.isArray(value) || isRecord(value))\n    return isExpanded(keyPath, value)\n  }\n\n  return cached\n}\n\nexport function toggleExpanded(event: any): void {\n  const {path} = event\n  const current = lru.get(path)\n\n  if (current === undefined) {\n    // something is wrong\n    return\n  }\n\n  lru.set(path, !current)\n}\n\nexport function selectElement(element: HTMLElement): void {\n  const sel = window.getSelection()\n\n  if (sel) {\n    const range = document.createRange()\n\n    sel.removeAllRanges()\n    range.selectNodeContents(element)\n    sel.addRange(range)\n  }\n}\n\nexport function select(event: any): void {\n  selectElement(event.currentTarget)\n}\n\nexport function maybeSelectAll(event: any): void {\n  const selectAll = event.keyCode === 65 && (event.metaKey || event.ctrlKey)\n\n  if (!selectAll) {\n    return\n  }\n\n  event.preventDefault()\n\n  selectElement(event.currentTarget)\n}\n\nexport function isDocumentLike(value: unknown): value is SanityDocumentLike {\n  return isRecord(value) && isString(value._id) && isString(value._type)\n}\n","import {rem, type Theme} from '@sanity/ui'\nimport {css, styled} from 'styled-components'\n\nexport const JSONInspectorWrapper = styled.div(({theme}: {theme: Theme}) => {\n  const {color, fonts, space} = theme.sanity\n\n  return css`\n    & .json-inspector,\n    & .json-inspector .json-inspector__selection {\n      font-family: ${fonts.code.family};\n      font-size: ${fonts.code.sizes[1].fontSize}px;\n      line-height: ${fonts.code.sizes[1].lineHeight}px;\n      color: var(--card-code-fg-color);\n    }\n\n    & .json-inspector .json-inspector__leaf {\n      padding-left: ${rem(space[4])};\n    }\n\n    & .json-inspector .json-inspector__leaf.json-inspector__leaf_root {\n      padding-top: ${rem(space[3])};\n      padding-left: 0;\n    }\n\n    & .json-inspector > .json-inspector__leaf_root > .json-inspector__line > .json-inspector__key {\n      display: none;\n    }\n\n    & .json-inspector .json-inspector__line {\n      display: block;\n      position: relative;\n      cursor: default;\n    }\n\n    & .json-inspector .json-inspector__line::after {\n      content: '';\n      position: absolute;\n      top: 0;\n      left: -200px;\n      right: -50px;\n      bottom: 0;\n      z-index: -1;\n      pointer-events: none;\n    }\n\n    & .json-inspector .json-inspector__line:hover::after {\n      background: var(--card-code-bg-color);\n    }\n\n    & .json-inspector .json-inspector__leaf_composite > .json-inspector__line {\n      cursor: pointer;\n    }\n\n    & .json-inspector .json-inspector__leaf_composite > .json-inspector__line::before {\n      content: '▸ ';\n      margin-left: calc(0 - ${rem(space[4])} + 3px);\n      font-size: ${fonts.code.sizes[1].fontSize}px;\n      line-height: ${fonts.code.sizes[1].lineHeight}px;\n    }\n\n    &\n      .json-inspector\n      .json-inspector__leaf_expanded.json-inspector__leaf_composite\n      > .json-inspector__line::before {\n      content: '▾ ';\n      font-size: ${fonts.code.sizes[1].fontSize}px;\n      line-height: ${fonts.code.sizes[1].lineHeight}px;\n    }\n\n    & .json-inspector .json-inspector__radio,\n    & .json-inspector .json-inspector__flatpath {\n      display: none;\n    }\n\n    & .json-inspector .json-inspector__value {\n      margin-left: ${rem(space[4] / 2)};\n    }\n\n    &\n      .json-inspector\n      > .json-inspector__leaf_root\n      > .json-inspector__line\n      > .json-inspector__key\n      + .json-inspector__value {\n      margin: 0;\n    }\n\n    & .json-inspector .json-inspector__key {\n      color: ${color.syntax.property};\n    }\n\n    & .json-inspector .json-inspector__value_helper,\n    & .json-inspector .json-inspector__value_null {\n      color: ${color.syntax.constant};\n    }\n\n    & .json-inspector .json-inspector__not-found {\n      padding-top: ${rem(space[3])};\n    }\n\n    & .json-inspector .json-inspector__value_string {\n      color: ${color.syntax.string};\n    }\n\n    & .json-inspector .json-inspector__value_boolean {\n      color: ${color.syntax.boolean};\n    }\n\n    & .json-inspector .json-inspector__value_number {\n      color: ${color.syntax.number};\n    }\n\n    & .json-inspector .json-inspector__show-original {\n      display: inline-block;\n      padding: 0 6px;\n      cursor: pointer;\n    }\n\n    & .json-inspector .json-inspector__show-original:hover {\n      color: inherit;\n    }\n\n    & .json-inspector .json-inspector__show-original::before {\n      content: '↔';\n    }\n\n    & .json-inspector .json-inspector__show-original:hover::after {\n      content: ' expand';\n    }\n  `\n})\n","import {SearchIcon} from '@sanity/icons'\nimport {TextInput} from '@sanity/ui'\nimport {type ChangeEvent, useCallback} from 'react'\nimport {useTranslation} from 'sanity'\n\nimport {structureLocaleNamespace} from '../../../i18n'\n\nexport function Search(props: {onChange: (q: string) => void; query: string}) {\n  const {onChange, query} = props\n\n  const handleChange = useCallback(\n    (event: ChangeEvent<HTMLInputElement>) => onChange(event.target.value),\n    [onChange],\n  )\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  return (\n    <TextInput\n      icon={SearchIcon}\n      onChange={handleChange}\n      placeholder={t('document-inspector.search.placeholder')}\n      radius={2}\n      value={query || ''}\n    />\n  )\n}\n","import {JsonInspector} from '@rexxars/react-json-inspector'\nimport {type SanityDocument} from '@sanity/types'\nimport {Card, Code, Flex, TabList, TabPanel} from '@sanity/ui'\nimport {useCallback} from 'react'\nimport {Translate, useTranslation} from 'sanity'\n\nimport {Dialog, Tab} from '../../../../ui-components'\nimport {DocTitle} from '../../../components'\nimport {structureLocaleNamespace} from '../../../i18n'\nimport {useStructureToolSetting} from '../../../useStructureToolSetting'\nimport {useDocumentPane} from '../useDocumentPane'\nimport {VIEW_MODE_PARSED, VIEW_MODE_RAW, VIEW_MODES} from './constants'\nimport {isDocumentLike, isExpanded, maybeSelectAll, select, toggleExpanded} from './helpers'\nimport {JSONInspectorWrapper} from './InspectDialog.styles'\nimport {Search} from './Search'\n\ninterface InspectDialogProps {\n  value: Partial<SanityDocument> | null\n}\n\nexport function InspectDialog(props: InspectDialogProps) {\n  const {value} = props\n  const {onInspectClose, paneKey} = useDocumentPane()\n  const dialogIdPrefix = `${paneKey}_inspect_`\n\n  /* this creates a view mode (the default that it opens with is the parsed tab) that is saved based on the paneKey\n  where the inspect dialog lives.\n  This also means that when a page is loaded, the state of the tabs remains and doesn't revert to the pane tab */\n  const [viewModeId, onViewModeChange] = useStructureToolSetting(\n    'inspect-view-mode',\n    null,\n    'parsed',\n  )\n\n  /* based on the view mode it shows the right tab content */\n  const viewMode = VIEW_MODES.find((mode) => mode.id === viewModeId)\n\n  const setParsedViewMode = useCallback(() => {\n    onViewModeChange(VIEW_MODE_PARSED.id)\n  }, [onViewModeChange])\n\n  const setRawViewMode = useCallback(() => {\n    onViewModeChange(VIEW_MODE_RAW.id)\n  }, [onViewModeChange])\n\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  return (\n    <Dialog\n      bodyHeight=\"fill\"\n      id={`${dialogIdPrefix}dialog`}\n      header={\n        isDocumentLike(value) ? (\n          <Translate\n            t={t}\n            i18nKey=\"document-inspector.dialog.title\"\n            components={{\n              DocumentTitle: () => (\n                <em>\n                  <DocTitle document={value} />\n                </em>\n              ),\n            }}\n          />\n        ) : (\n          <em>{t('document-inspector.dialog.title-no-value')}</em>\n        )\n      }\n      onClose={onInspectClose}\n      onClickOutside={onInspectClose}\n      padding={false}\n      width={2}\n    >\n      <Flex direction=\"column\" height=\"fill\">\n        <Card\n          padding={3}\n          paddingTop={0}\n          shadow={1}\n          style={{position: 'sticky', bottom: 0, zIndex: 3}}\n        >\n          <TabList space={1}>\n            <Tab\n              aria-controls={`${dialogIdPrefix}tabpanel`}\n              id={`${dialogIdPrefix}tab-${VIEW_MODE_PARSED.id}`}\n              label={t(VIEW_MODE_PARSED.title)}\n              onClick={setParsedViewMode}\n              selected={viewMode === VIEW_MODE_PARSED}\n            />\n            <Tab\n              aria-controls={`${dialogIdPrefix}tabpanel`}\n              id={`${dialogIdPrefix}tab-${VIEW_MODE_RAW.id}`}\n              label={t(VIEW_MODE_RAW.title)}\n              onClick={setRawViewMode}\n              selected={viewMode === VIEW_MODE_RAW}\n            />\n          </TabList>\n        </Card>\n\n        <TabPanel\n          aria-labelledby={`${dialogIdPrefix}tab-${viewModeId}`}\n          flex={1}\n          id={`${dialogIdPrefix}tabpanel`}\n          overflow=\"auto\"\n          padding={4}\n          style={{outline: 'none'}}\n        >\n          {viewMode === VIEW_MODE_PARSED && (\n            <JSONInspectorWrapper>\n              <JsonInspector\n                data={value}\n                isExpanded={isExpanded}\n                onClick={toggleExpanded}\n                search={Search}\n                filterOptions={{ignoreCase: true}}\n              />\n            </JSONInspectorWrapper>\n          )}\n\n          {viewMode === VIEW_MODE_RAW && (\n            <Code\n              language=\"json\"\n              tabIndex={0}\n              onKeyDown={maybeSelectAll}\n              onDoubleClick={select}\n              onFocus={select}\n              size={1}\n            >\n              {JSON.stringify(value, null, 2)}\n            </Code>\n          )}\n        </TabPanel>\n      </Flex>\n    </Dialog>\n  )\n}\n","import {Box, type ButtonMode, type ButtonTone, Card, type CardTone, Flex, Text} from '@sanity/ui'\nimport {type ComponentType, type ElementType, type ReactNode} from 'react'\n\nimport {Button} from '../../../../../ui-components'\n\ninterface BannerProps {\n  action?: {\n    as?: ElementType | keyof React.JSX.IntrinsicElements\n    icon?: ComponentType\n    onClick?: () => void\n    text: string\n    tone?: ButtonTone\n    disabled?: boolean\n    mode?: ButtonMode\n  }\n  content: ReactNode\n  icon?: ComponentType\n  tone?: CardTone\n  paddingY?: number\n}\n\nexport function Banner(props: BannerProps) {\n  const {action, content, icon: Icon, tone = 'transparent', paddingY = 2, ...rest} = props\n\n  return (\n    <Box padding={1}>\n      <Card radius={3} paddingX={2} paddingY={paddingY} tone={tone} {...rest}>\n        <Flex align=\"center\" gap={3} paddingX={2}>\n          {Icon && (\n            <Text size={0}>\n              <Icon />\n            </Text>\n          )}\n\n          <Flex align=\"center\" flex={1} gap={2} paddingY={2}>\n            {content}\n          </Flex>\n\n          {action && (\n            <Button {...action} mode={action.mode || 'ghost'} tone={action.tone || 'default'} />\n          )}\n        </Flex>\n      </Card>\n    </Box>\n  )\n}\n","import {DocumentRemoveIcon, ReadOnlyIcon} from '@sanity/icons'\nimport {Text} from '@sanity/ui'\nimport {useCallback} from 'react'\nimport {\n  isDraftPerspective,\n  isPublishedPerspective,\n  type ReleaseDocument,\n  Translate,\n  useDocumentOperation,\n  usePerspective,\n  useTranslation,\n} from 'sanity'\nimport {useRouter} from 'sanity/router'\n\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {Banner} from './Banner'\n\nexport function DeletedDocumentBanners() {\n  const {isDeleted, isDeleting, ready} = useDocumentPane()\n  const {selectedPerspective} = usePerspective()\n  if (!ready) return null\n  if (\n    !isPublishedPerspective(selectedPerspective) &&\n    !isDraftPerspective(selectedPerspective) &&\n    selectedPerspective.state === 'archived'\n  ) {\n    return <ArchivedReleaseBanner release={selectedPerspective as ReleaseDocument} />\n  }\n  if (isDeleted && !isDeleting) return <DeletedDocumentBanner />\n}\n\nfunction DeletedDocumentBanner() {\n  const {documentId, documentType} = useDocumentPane()\n  const {restore} = useDocumentOperation(documentId, documentType)\n  const {navigateIntent} = useRouter()\n\n  const handleRestore = useCallback(() => {\n    restore.execute('lastRevision')\n    navigateIntent('edit', {id: documentId, type: documentType})\n  }, [documentId, documentType, navigateIntent, restore])\n\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  return (\n    <Banner\n      action={{\n        onClick: handleRestore,\n        text: t('banners.deleted-document-banner.restore-button.text'),\n      }}\n      content={\n        <Text size={1} weight=\"medium\">\n          {t('banners.deleted-document-banner.text')}\n        </Text>\n      }\n      data-testid=\"deleted-document-banner\"\n      icon={ReadOnlyIcon}\n    />\n  )\n}\n\nconst ArchivedReleaseBanner = ({release}: {release: ReleaseDocument}) => {\n  const {t} = useTranslation()\n\n  return (\n    <Banner\n      tone=\"caution\"\n      content={\n        <Text size={1} weight=\"medium\">\n          <Translate\n            t={t}\n            i18nKey=\"banners.deleted-release-banner.text\"\n            values={{title: release.metadata?.title || t('release.placeholder-untitled-release')}}\n          />\n        </Text>\n      }\n      data-testid=\"deleted-release-banner\"\n      icon={DocumentRemoveIcon}\n    />\n  )\n}\n","import {ErrorOutlineIcon} from '@sanity/icons'\nimport {Text} from '@sanity/ui'\nimport {isDeprecatedSchemaType, Translate, useTranslation} from 'sanity'\n\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {Banner} from './Banner'\n\nexport function DeprecatedDocumentTypeBanner() {\n  const {schemaType} = useDocumentPane()\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  if (!isDeprecatedSchemaType(schemaType)) {\n    return null\n  }\n\n  return (\n    <Banner\n      content={\n        <Text size={1} weight=\"medium\">\n          <Translate t={t} i18nKey=\"banners.deprecated-document-type-banner.text\" />{' '}\n          {schemaType.deprecated.reason}\n        </Text>\n      }\n      data-testid=\"deprecated-document-type-banner\"\n      icon={ErrorOutlineIcon}\n    />\n  )\n}\n","import {defineEvent} from '@sanity/telemetry'\n\n/** @internal */\nexport const AskToEditDialogOpened = defineEvent({\n  name: 'Ask To Edit Dialog Opened',\n  version: 1,\n  description: 'User clicked the \"Ask to edit\" button in the document permissions banner',\n})\n\n/** @internal */\nexport const AskToEditRequestSent = defineEvent({\n  name: 'Ask To Edit Request Sent',\n  version: 1,\n  description: 'User sent a role change request from the dialog',\n})\n","import {useTelemetry} from '@sanity/telemetry/react'\nimport {Box, Card, DialogProvider, Flex, Stack, Text, TextInput, useToast} from '@sanity/ui'\nimport {useId, useMemo, useState} from 'react'\nimport {useObservable} from 'react-rx'\nimport {catchError, map, type Observable, of, startWith} from 'rxjs'\nimport {type Role, useClient, useProjectId, useTranslation, useZIndex} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Dialog} from '../../../ui-components'\nimport {structureLocaleNamespace} from '../../i18n'\nimport {AskToEditRequestSent} from './__telemetry__/RequestPermissionDialog.telemetry'\nimport {type AccessRequest} from './useRoleRequestsStatus'\n\nconst MAX_NOTE_LENGTH = 150\n\n/** @internal */\nexport const DialogBody = styled(Box)`\n  box-sizing: border-box;\n`\n\n/** @internal */\nexport const LoadingContainer = styled(Flex).attrs({\n  align: 'center',\n  direction: 'column',\n  justify: 'center',\n})`\n  height: 110px;\n`\n\n/** @internal */\nexport interface RequestPermissionDialogProps {\n  onClose?: () => void\n  onRequestSubmitted?: () => void\n}\n\n/**\n * A dialog that enables the user to request permission to change their\n * member role from \"Viewer\" to \"Editor\" or \"Admin\" depending on the\n * project's available roles.\n *\n * @internal\n */\nexport function RequestPermissionDialog({\n  onClose,\n  onRequestSubmitted,\n}: RequestPermissionDialogProps) {\n  const {t} = useTranslation(structureLocaleNamespace)\n  const telemtry = useTelemetry()\n  const dialogId = `request-permissions-${useId()}`\n  const projectId = useProjectId()\n  const client = useClient({apiVersion: '2024-09-26'})\n  const toast = useToast()\n  const zOffset = useZIndex()\n\n  const [isSubmitting, setIsSubmitting] = useState(false)\n\n  const [note, setNote] = useState('')\n\n  const [msgError, setMsgError] = useState<string | undefined>()\n  const [hasTooManyRequests, setHasTooManyRequests] = useState<boolean>(false)\n  const [hasBeenDenied, setHasBeenDenied] = useState<boolean>(false)\n\n  const requestedRole$: Observable<'administrator' | 'editor'> = useMemo(() => {\n    const adminRole = 'administrator' as const\n    if (!projectId || !client) return of(adminRole)\n    return client.observable\n      .request<(Role & {appliesToUsers?: boolean})[]>({url: `/projects/${projectId}/roles`})\n      .pipe(\n        map((roles) => {\n          const hasEditor = roles\n            .filter((role) => role?.appliesToUsers)\n            .find((role) => role.name === 'editor')\n          return hasEditor ? 'editor' : adminRole\n        }),\n        startWith(adminRole),\n        catchError(() => of(adminRole)),\n      )\n  }, [projectId, client])\n\n  const requestedRole = useObservable(requestedRole$)\n\n  const onSubmit = () => {\n    setIsSubmitting(true)\n    client\n      .request<AccessRequest | null>({\n        url: `/access/project/${projectId}/requests`,\n        method: 'post',\n        body: {note, requestUrl: window?.location.href, requestedRole, type: 'role'},\n      })\n      .then((request) => {\n        if (request) {\n          if (onRequestSubmitted) onRequestSubmitted()\n          telemtry.log(AskToEditRequestSent)\n          toast.push({title: 'Edit access requested'})\n        }\n      })\n      .catch((err) => {\n        const statusCode = err?.response?.statusCode\n        const errMessage = err?.response?.body?.message\n        if (statusCode === 429) {\n          // User is over their cross-project request limit\n          setHasTooManyRequests(true)\n          setMsgError(errMessage)\n        }\n        if (statusCode === 409) {\n          // If we get a 409, user has been denied on this project or has a valid pending request\n          // valid pending request should be handled by GET request above\n          setHasBeenDenied(true)\n          setMsgError(errMessage)\n        } else {\n          toast.push({\n            title: 'There was a problem submitting your request.',\n            status: 'error',\n          })\n        }\n      })\n      .finally(() => {\n        setIsSubmitting(false)\n      })\n  }\n\n  return (\n    <DialogProvider position={'fixed'} zOffset={zOffset.fullscreen}>\n      <Dialog\n        width={1}\n        id={dialogId}\n        header={t('request-permission-dialog.header.text')}\n        footer={{\n          cancelButton: {\n            onClick: onClose,\n            text: t('confirm-dialog.cancel-button.fallback-text'),\n          },\n          confirmButton: {\n            onClick: onSubmit,\n            loading: isSubmitting,\n            disabled: hasTooManyRequests || hasBeenDenied,\n            text: t('request-permission-dialog.confirm-button.text'),\n            tone: 'primary',\n            type: 'submit',\n          },\n        }}\n        onClose={onClose}\n        onClickOutside={onClose}\n      >\n        <DialogBody>\n          <Stack space={4}>\n            <Text>{t('request-permission-dialog.description.text')}</Text>\n            {hasTooManyRequests || hasBeenDenied ? (\n              <Card tone={'caution'} padding={3} radius={2} shadow={1}>\n                <Text size={1}>\n                  {hasTooManyRequests && (\n                    <>{msgError ?? t('request-permission-dialog.warning.limit-reached.text')}</>\n                  )}\n                  {hasBeenDenied && (\n                    <>{msgError ?? t('request-permission-dialog.warning.denied.text')}</>\n                  )}\n                </Text>\n              </Card>\n            ) : (\n              <Stack space={3} paddingBottom={0}>\n                <TextInput\n                  placeholder={t('request-permission-dialog.note-input.placeholder.text')}\n                  disabled={isSubmitting}\n                  onKeyDown={(e) => {\n                    if (e.key === 'Enter') onSubmit()\n                  }}\n                  maxLength={MAX_NOTE_LENGTH}\n                  value={note}\n                  onChange={(e) => {\n                    setNote(e.currentTarget.value)\n                  }}\n                />\n\n                <Text align=\"right\" muted size={1}>{`${note.length}/${MAX_NOTE_LENGTH}`}</Text>\n              </Stack>\n            )}\n          </Stack>\n        </DialogBody>\n      </Dialog>\n    </DialogProvider>\n  )\n}\n","import {addWeeks, isAfter, isBefore} from 'date-fns'\nimport {useMemo} from 'react'\nimport {useObservable} from 'react-rx'\nimport {of} from 'rxjs'\nimport {catchError, map, startWith} from 'rxjs/operators'\nimport {type SanityClient, useClient, useProjectId} from 'sanity'\n\n/** @internal */\nexport interface AccessRequest {\n  id: string\n  status: 'pending' | 'accepted' | 'declined'\n  resourceId: string\n  resourceType: 'project'\n  createdAt: string\n  updatedAt: string\n  updatedByUserId: string\n  requestedByUserId: string\n  requestedRole: string\n  type: 'access' | 'role'\n  note: string\n}\n\nconst LOADING_STATE = {loading: true, error: false, status: undefined}\nconst EMPTY_STATE = {loading: false, error: false, status: 'none'}\nconst DECLINED_STATE = {loading: false, error: false, status: 'declined'}\nconst PENDING_STATE = {loading: false, error: false, status: 'pending'}\nconst EXPIRED_STATE = {loading: false, error: false, status: 'expired'}\n\n/** @internal */\nexport const useRoleRequestsStatus = () => {\n  const client = useClient({apiVersion: '2024-07-01'})\n  const projectId = useProjectId()\n\n  const checkRoleRequests$ = useMemo(() => {\n    if (!client || !projectId) {\n      return of(EMPTY_STATE)\n    }\n\n    return checkRoleRequests(client, projectId)\n  }, [client, projectId])\n\n  const {loading, error, status} = useObservable(checkRoleRequests$, LOADING_STATE)\n  return {data: status, loading, error}\n}\n\nfunction checkRoleRequests(client: SanityClient, projectId: string) {\n  return client.observable\n    .request<AccessRequest[] | null>({\n      url: '/access/requests/me',\n      tag: 'use-role-requests-status',\n    })\n    .pipe(\n      map((requests) => {\n        if (!requests || requests.length === 0) {\n          return EMPTY_STATE\n        }\n\n        // Filter requests for the specific project and where type is 'role'\n        const projectRequests = requests.filter(\n          (request) => request.resourceId === projectId && request.type === 'role',\n        )\n\n        const declinedRequest = projectRequests.find((request) => request.status === 'declined')\n        if (\n          declinedRequest &&\n          isAfter(addWeeks(new Date(declinedRequest.createdAt), 2), new Date())\n        ) {\n          return DECLINED_STATE\n        }\n\n        const pendingRequest = projectRequests.find(\n          (request) =>\n            request.status === 'pending' &&\n            isAfter(addWeeks(new Date(request.createdAt), 2), new Date()),\n        )\n        if (pendingRequest) {\n          return PENDING_STATE\n        }\n\n        const oldPendingRequest = projectRequests.find(\n          (request) =>\n            request.status === 'pending' &&\n            isBefore(addWeeks(new Date(request.createdAt), 2), new Date()),\n        )\n\n        return oldPendingRequest ? EXPIRED_STATE : EMPTY_STATE\n      }),\n      catchError((err) => {\n        console.error('Failed to fetch access requests', err)\n        return of({loading: false, error: true, status: undefined})\n      }),\n      startWith(LOADING_STATE), // Start with loading state\n    )\n}\n","import {ReadOnlyIcon} from '@sanity/icons'\nimport {useTelemetry} from '@sanity/telemetry/react'\nimport {Text} from '@sanity/ui'\nimport {useMemo, useState} from 'react'\nimport {Translate, useCurrentUser, useListFormat, useTranslation} from 'sanity'\n\nimport {\n  RequestPermissionDialog,\n  useRoleRequestsStatus,\n} from '../../../../components/requestPermissionDialog'\nimport {AskToEditDialogOpened} from '../../../../components/requestPermissionDialog/__telemetry__/RequestPermissionDialog.telemetry'\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {Banner} from './Banner'\n\ninterface InsufficientPermissionBannerProps {\n  requiredPermission: 'update' | 'create'\n}\n\nexport function InsufficientPermissionBanner({\n  requiredPermission,\n}: InsufficientPermissionBannerProps) {\n  const currentUser = useCurrentUser()\n\n  const {\n    data: roleRequestStatus,\n    loading: requestStatusLoading,\n    error: requestStatusError,\n  } = useRoleRequestsStatus()\n  const [requestSent, setRequestSent] = useState(false)\n  const requestPending = useMemo(\n    () => roleRequestStatus === 'pending' || roleRequestStatus === 'declined' || requestSent,\n    [roleRequestStatus, requestSent],\n  )\n  const currentUserRoles = currentUser?.roles || []\n  const isOnlyViewer = currentUserRoles.length === 1 && currentUserRoles[0].name === 'viewer'\n  const [showRequestPermissionDialog, setShowRequestPermissionDialog] = useState(false)\n\n  const listFormat = useListFormat({style: 'short'})\n  const {t} = useTranslation(structureLocaleNamespace)\n  const telemetry = useTelemetry()\n\n  const roleTitles = currentUserRoles.map((role) => role.title)\n  const roles = listFormat\n    .formatToParts(roleTitles)\n    .map((part) =>\n      part.type === 'element' ? <code key={part.value}>{part.value}</code> : part.value,\n    )\n\n  return (\n    <>\n      <Banner\n        content={\n          <Text size={1} weight=\"medium\">\n            <Translate\n              t={t}\n              i18nKey=\"banners.permission-check-banner.missing-permission\"\n              components={{Roles: () => <>{roles}</>}}\n              values={{count: roles.length, roles: roleTitles}}\n              context={requiredPermission}\n            />\n          </Text>\n        }\n        action={\n          isOnlyViewer && roleRequestStatus && !requestStatusError && !requestStatusLoading\n            ? {\n                onClick: requestPending\n                  ? undefined\n                  : () => {\n                      setShowRequestPermissionDialog(true)\n                      telemetry.log(AskToEditDialogOpened)\n                    },\n                text: requestPending\n                  ? t('banners.permission-check-banner.request-permission-button.sent')\n                  : t('banners.permission-check-banner.request-permission-button.text'),\n                tone: requestPending ? 'default' : 'primary',\n                disabled: requestPending,\n                mode: requestPending ? 'bleed' : undefined,\n              }\n            : undefined\n        }\n        data-testid=\"permission-check-banner\"\n        icon={ReadOnlyIcon}\n      />\n      {showRequestPermissionDialog && (\n        <RequestPermissionDialog\n          onClose={() => setShowRequestPermissionDialog(false)}\n          onRequestSubmitted={() => {\n            setRequestSent(true)\n            setShowRequestPermissionDialog(false)\n          }}\n        />\n      )}\n    </>\n  )\n}\n","import {CloseIcon, SyncIcon, WarningOutlineIcon} from '@sanity/icons'\nimport {type KeyedSegment, type Reference} from '@sanity/types'\nimport {Text} from '@sanity/ui'\nimport {fromString as pathFromString, get as pathGet} from '@sanity/util/paths'\nimport {memo, useCallback, useMemo} from 'react'\nimport {useObservable} from 'react-rx'\nimport {concat, type Observable, of} from 'rxjs'\nimport {debounceTime, map} from 'rxjs/operators'\nimport {\n  type DocumentAvailability,\n  getPublishedId,\n  useDocumentPreviewStore,\n  usePerspective,\n  useTranslation,\n} from 'sanity'\n\nimport {usePaneRouter} from '../../../../components'\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {type RouterPaneGroup} from '../../../../types'\nimport {Banner} from './Banner'\n\ninterface ParentReferenceInfo {\n  loading: boolean\n  result?: {\n    availability: {\n      draft: DocumentAvailability\n      published: DocumentAvailability\n      version?: DocumentAvailability\n    }\n    refValue: string | undefined\n  }\n}\n\nexport const ReferenceChangedBanner = memo(() => {\n  const documentPreviewStore = useDocumentPreviewStore()\n  const {selectedReleaseId} = usePerspective()\n  const {params, groupIndex, routerPanesState, replaceCurrent, BackLink} = usePaneRouter()\n  const routerReferenceId = routerPanesState[groupIndex]?.[0].id\n  const parentGroup = routerPanesState[groupIndex - 1] as RouterPaneGroup | undefined\n  const parentSibling = parentGroup?.[0]\n  const parentId = parentSibling?.id\n  const hasHistoryOpen = Boolean(parentSibling?.params?.rev)\n  const parentRefPath = useMemo(() => {\n    return (params?.parentRefPath && pathFromString(params.parentRefPath)) || null\n  }, [params?.parentRefPath])\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  /**\n   * Loads information regarding the reference field of the parent pane. This\n   * is only applicable to child references (aka references-in-place).\n   *\n   * It utilizes the pane ID of the parent pane (which is a document ID) along\n   * with the `parentRefPath` router param on the current pane to find the\n   * current value of the reference field on the parent document.\n   *\n   * This is used to compare with the current pane's document ID. If the IDs\n   * don't match then this banner should reveal itself\n   */\n  const referenceInfoObservable = useMemo((): Observable<ParentReferenceInfo> => {\n    const parentRefPathSegment = parentRefPath?.[0] as string | undefined\n\n    // short-circuit: this document pane is not a child reference pane\n    if (!parentId || !parentRefPathSegment || !parentRefPath) {\n      return of({loading: false})\n    }\n\n    const publishedId = getPublishedId(parentId)\n    const path = pathFromString(parentRefPathSegment)\n\n    // note: observePaths doesn't support keyed path segments, so we need to select the nearest parent\n    const keyedSegmentIndex = path.findIndex(\n      (p): p is KeyedSegment => typeof p == 'object' && '_key' in p,\n    )\n\n    return concat(\n      // emit a loading state instantly\n      of({loading: true}),\n      // then emit the values from watching the published ID's path\n      documentPreviewStore\n        .unstable_observePathsDocumentPair(\n          publishedId,\n          (keyedSegmentIndex === -1 ? path : path.slice(0, keyedSegmentIndex)) as string[][],\n          {\n            version: selectedReleaseId,\n          },\n        )\n        .pipe(\n          // this debounce time is needed to prevent flashing banners due to\n          // the router state updating faster than the content-lake state. we\n          // debounce to wait for more emissions because the value pulled\n          // initially could be stale.\n          debounceTime(750),\n          map(\n            ({draft, published, version}): ParentReferenceInfo => ({\n              loading: false,\n              result: {\n                availability: {\n                  draft: draft.availability,\n                  published: published.availability,\n                  ...(version?.availability\n                    ? {\n                        version: version.availability,\n                      }\n                    : {}),\n                },\n                refValue: pathGet<Reference>(\n                  version?.snapshot || draft.snapshot || published.snapshot,\n                  parentRefPath,\n                )?._ref,\n              },\n            }),\n          ),\n        ),\n    )\n  }, [selectedReleaseId, documentPreviewStore, parentId, parentRefPath])\n  const referenceInfo = useObservable(referenceInfoObservable, {loading: true})\n\n  const handleReloadReference = useCallback(() => {\n    if (referenceInfo.loading) return\n\n    if (referenceInfo.result?.refValue) {\n      replaceCurrent({\n        id: referenceInfo.result.refValue,\n        params: params as Record<string, string>,\n      })\n    }\n  }, [referenceInfo.loading, referenceInfo.result, replaceCurrent, params])\n\n  const shouldHide =\n    // if `parentId` or `parentRefPath` is not present then this banner is n/a\n    !parentId ||\n    !parentRefPath ||\n    // if viewing this pane via history, then hide\n    hasHistoryOpen ||\n    // if loading, hide\n    referenceInfo.loading ||\n    // if the parent document is not available (e.g. due to permission denied or\n    // not found) we don't want to display a warning here, but instead rely on the\n    // parent view to display the appropriate message\n    (!referenceInfo.result?.availability.draft.available &&\n      !referenceInfo.result?.availability.published.available) ||\n    // if the references are the same, then hide the reference changed banner\n    referenceInfo.result?.refValue === routerReferenceId\n\n  if (shouldHide) return null\n\n  return (\n    <Banner\n      action={\n        referenceInfo.result?.refValue\n          ? {\n              onClick: handleReloadReference,\n              icon: SyncIcon,\n              text: t('banners.reference-changed-banner.reason-changed.reload-button.text'),\n            }\n          : {\n              as: BackLink,\n              icon: CloseIcon,\n              text: t('banners.reference-changed-banner.reason-removed.close-button.text'),\n            }\n      }\n      data-testid=\"reference-changed-banner\"\n      content={\n        <Text size={1} weight=\"medium\">\n          {referenceInfo.result?.refValue\n            ? t('banners.reference-changed-banner.reason-changed.text')\n            : t('banners.reference-changed-banner.reason-removed.text')}\n        </Text>\n      }\n      icon={WarningOutlineIcon}\n      tone=\"caution\"\n    />\n  )\n})\n\nReferenceChangedBanner.displayName = 'Memo(ReferenceChangedBanner)'\n","import {Text} from '@sanity/ui'\nimport {useMemo} from 'react'\nimport {\n  getReleaseIdFromReleaseDocumentId,\n  getVersionInlineBadge,\n  Translate,\n  useArchivedReleases,\n  useTranslation,\n} from 'sanity'\n\nimport {usePaneRouter} from '../../../../components/paneRouter/usePaneRouter'\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {Banner} from './Banner'\n\nexport function ArchivedReleaseDocumentBanner(): React.JSX.Element {\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {t: tCore} = useTranslation()\n  const {data: archivedReleases} = useArchivedReleases()\n\n  const {params, setParams} = usePaneRouter()\n  const handleGoBack = () => {\n    setParams({\n      ...params,\n      rev: params?.historyEvent || undefined,\n      since: undefined,\n      historyVersion: undefined,\n    })\n  }\n\n  const release = useMemo(() => {\n    return archivedReleases.find(\n      (r) => getReleaseIdFromReleaseDocumentId(r._id) === params?.historyVersion,\n    )\n  }, [archivedReleases, params?.historyVersion])\n\n  const description =\n    release?.state === 'published'\n      ? 'banners.published-release.description'\n      : 'banners.archived-release.description'\n\n  const title = release?.metadata.title || tCore('release.placeholder-untitled-release')\n\n  return (\n    <Banner\n      tone=\"caution\"\n      content={\n        <Text size={1}>\n          <Translate\n            t={t}\n            i18nKey={description}\n            values={{\n              title,\n            }}\n            components={{\n              VersionBadge: getVersionInlineBadge(release),\n            }}\n          />\n        </Text>\n      }\n      action={\n        params?.archivedRelease\n          ? undefined\n          : {\n              text: 'Go back to published version',\n              onClick: handleGoBack,\n            }\n      }\n    />\n  )\n}\n","import {ComposeSparklesIcon, InfoOutlineIcon, LaunchIcon} from '@sanity/icons'\nimport {Box, Card, Container, Flex, Heading, Text, useClickOutsideEvent} from '@sanity/ui'\nimport {useCallback, useMemo, useRef, useState} from 'react'\nimport {\n  getDocumentVariantType,\n  useCanvasCompanionDoc,\n  useNavigateToCanvasDoc,\n  useTranslation,\n} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Popover} from '../../../../../ui-components'\nimport {Button} from '../../../../../ui-components/button/Button'\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {Banner} from './Banner'\n\nconst Image = styled.img`\n  object-fit: cover;\n  width: 100%;\n  height: 100%;\n  height: 180px;\n  display: flex;\n`\nconst CANVAS_IMAGE_URL =\n  'https://cdn.sanity.io/images/pyrmmpch/production/b47224e2f3a7d1747e43b9da1ac31739250e628b-632x376.png'\n\nconst CANVAS_APP_NAME = 'Canvas'\nconst CanvasPopoverContent = ({onClose}: {onClose: () => void}) => {\n  const {t} = useTranslation(structureLocaleNamespace)\n  const ref = useRef<HTMLDivElement | null>(null)\n  useClickOutsideEvent(onClose, () => [ref.current])\n\n  return (\n    <Card radius={3} overflow={'hidden'} width={0} ref={ref}>\n      <Container width={0}>\n        <Image src={CANVAS_IMAGE_URL} alt={'Canvas'} />\n        <Flex paddingX={4} paddingBottom={4} paddingTop={3} direction={'column'}>\n          <Flex paddingY={1} gap={2}>\n            <Text size={1} weight=\"semibold\">\n              {CANVAS_APP_NAME}\n            </Text>\n            <Text size={1} muted>\n              <ComposeSparklesIcon />\n            </Text>\n          </Flex>\n          <Box paddingTop={3}>\n            <Heading size={1}>{t('canvas.banner.popover-heading')}</Heading>\n          </Box>\n          <Box paddingTop={4}>\n            <Text size={1}>{t('canvas.banner.popover-description')}</Text>\n          </Box>\n        </Flex>\n        <Flex width=\"full\" gap={3} justify=\"flex-end\" paddingX={4} paddingBottom={4}>\n          <Button\n            mode=\"bleed\"\n            text={t('canvas.banner.popover-button-text')}\n            autoFocus\n            tone=\"primary\"\n            href=\"https://snty.link/canvas-docs\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            as=\"a\"\n            iconRight={LaunchIcon}\n          />\n        </Flex>\n      </Container>\n    </Card>\n  )\n}\nconst CanvasLinkedBannerContent = ({documentId}: {documentId: string}) => {\n  const {t} = useTranslation(structureLocaleNamespace)\n  const [open, setOpen] = useState(false)\n  const documentVariantType = getDocumentVariantType(documentId)\n  const variantText = useMemo(() => {\n    if (documentVariantType === 'published') return t('canvas.banner.linked-text.published')\n    if (documentVariantType === 'draft') return t('canvas.banner.linked-text.draft')\n    return t('canvas.banner.linked-text.version')\n  }, [documentVariantType, t])\n\n  const togglePopover = useCallback(() => setOpen((prev) => !prev), [])\n  const onClose = useCallback(() => setOpen(false), [])\n  return (\n    <Flex align={'center'} gap={2}>\n      <Text size={1} weight=\"medium\">\n        {variantText}\n      </Text>\n      <Popover\n        open={open}\n        size={0}\n        tone=\"default\"\n        portal\n        placement=\"bottom-start\"\n        content={<CanvasPopoverContent onClose={onClose} />}\n      >\n        <Button\n          tooltipProps={null}\n          mode=\"bleed\"\n          tone=\"default\"\n          icon={InfoOutlineIcon}\n          onClick={togglePopover}\n        />\n      </Popover>\n    </Flex>\n  )\n}\n\nexport function CanvasLinkedBanner() {\n  const {documentId, displayed} = useDocumentPane()\n  const {t} = useTranslation(structureLocaleNamespace)\n  const id = displayed?._id || documentId\n  const {companionDoc} = useCanvasCompanionDoc(id)\n  const navigateToCanvas = useNavigateToCanvasDoc(companionDoc?.canvasDocumentId, 'banner')\n\n  if (!companionDoc) return null\n\n  return (\n    <Banner\n      tone=\"neutral\"\n      data-test-id=\"canvas-linked-banner\"\n      paddingY={0}\n      content={<CanvasLinkedBannerContent documentId={id} />}\n      action={{\n        mode: 'ghost',\n        text: t('canvas.banner.edit-in-canvas-action'),\n        onClick: navigateToCanvas,\n      }}\n    />\n  )\n}\n","import {WarningOutlineIcon} from '@sanity/icons'\nimport {type ObjectSchemaType} from '@sanity/types'\nimport {Flex, Text} from '@sanity/ui'\nimport {type ComponentType, useCallback} from 'react'\nimport {\n  getVersionInlineBadge,\n  isPerspectiveWriteable,\n  isReleaseDocument,\n  type PerspectiveNotWriteableReason,\n  ReleasesNav,\n  type ReleasesNavMenuItemPropsGetter,\n  type SelectedPerspective,\n  Translate,\n  useTranslation,\n  useWorkspace,\n} from 'sanity'\n\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {Banner} from './Banner'\n\ninterface Props {\n  schemaType: ObjectSchemaType\n  selectedPerspective: SelectedPerspective\n  reason: PerspectiveNotWriteableReason\n}\n\n/**\n * This banner is displayed when a user attempts to create a new document in a perspective that's\n * not writeable. For example:\n *\n * - The published perspective (unless the schema type supports live-editing).\n * - Any release that's locked.\n */\nexport const ChooseNewDocumentDestinationBanner: ComponentType<Props> = ({\n  schemaType,\n  selectedPerspective,\n  reason,\n}) => {\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const {\n    document: {\n      drafts: {enabled: isDraftModelEnabled},\n    },\n  } = useWorkspace()\n\n  const menuItemProps = useCallback<ReleasesNavMenuItemPropsGetter>(\n    ({perspective}) => ({\n      disabled: !isPerspectiveWriteable({\n        selectedPerspective: perspective,\n        isDraftModelEnabled,\n        schemaType,\n      }).result,\n    }),\n    [isDraftModelEnabled, schemaType],\n  )\n\n  return (\n    <Banner\n      tone=\"caution\"\n      icon={WarningOutlineIcon}\n      content={\n        <Flex align=\"center\" gap={2}>\n          <Text size={1}>\n            {reason === 'PUBLISHED_NOT_WRITEABLE' &&\n              t('banners.choose-new-document-destination.cannot-create-published-document')}\n            {reason === 'DRAFTS_NOT_WRITEABLE' &&\n              t('banners.choose-new-document-destination.cannot-create-draft-document')}\n            {reason === 'RELEASE_NOT_ACTIVE' && isReleaseDocument(selectedPerspective) && (\n              <Translate\n                t={t}\n                i18nKey=\"banners.choose-new-document-destination.release-inactive\"\n                values={{\n                  title: selectedPerspective.metadata.title,\n                }}\n                components={{\n                  VersionBadge: getVersionInlineBadge(selectedPerspective),\n                }}\n              />\n            )}\n            <> {t('banners.choose-new-document-destination.choose-destination')}</>\n          </Text>\n          <ReleasesNav menuItemProps={menuItemProps} />\n        </Flex>\n      }\n    />\n  )\n}\n","import {getSanityCreateLinkMetadata, useSanityCreateConfig} from 'sanity'\n\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {Banner} from './Banner'\n\nexport function CreateLinkedBanner() {\n  const {value} = useDocumentPane()\n  const {documentLinkedBannerContent: CreateLinkedBannerContent} =\n    useSanityCreateConfig().components ?? {}\n  const createLinkMetadata = getSanityCreateLinkMetadata(value)\n\n  if (!CreateLinkedBannerContent || !createLinkMetadata) return null\n\n  return (\n    <Banner\n      tone=\"transparent\"\n      data-test-id=\"sanity-create-read-only-banner\"\n      content={<CreateLinkedBannerContent metadata={createLinkMetadata} />}\n    />\n  )\n}\n","import {Text, useToast} from '@sanity/ui'\nimport {useCallback, useEffect, useState} from 'react'\nimport {\n  getReleaseIdFromReleaseDocumentId,\n  getReleaseTone,\n  getVersionInlineBadge,\n  LATEST,\n  type ReleaseDocument,\n  Translate,\n  useConditionalToast,\n  useTranslation,\n  useVersionOperations,\n} from 'sanity'\n\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {Banner} from './Banner'\n\n// How long to wait after user hit the \"Add to release\"-button before displaying the \"waiting…\" toast\nconst TOAST_DELAY = 1000\n\ntype VersionCreateState = {\n  status: 'creating' | 'created'\n  lastUpdate: Date\n}\n\nexport function DocumentNotInReleaseBanner({\n  documentId,\n  currentRelease,\n  isScheduledRelease,\n}: {\n  documentId: string\n  currentRelease: ReleaseDocument\n  isScheduledRelease?: boolean\n}): React.JSX.Element {\n  const tone = getReleaseTone(currentRelease ?? LATEST)\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {t: tCore} = useTranslation()\n\n  const {createVersion} = useVersionOperations()\n\n  const [versionCreateState, setVersionCreateState] = useState<VersionCreateState | undefined>()\n  const toast = useToast()\n  const handleAddToRelease = useCallback(async () => {\n    if (currentRelease._id) {\n      setVersionCreateState({status: 'creating', lastUpdate: new Date()})\n      try {\n        await createVersion(getReleaseIdFromReleaseDocumentId(currentRelease._id), documentId)\n        setVersionCreateState({status: 'created', lastUpdate: new Date()})\n      } catch (err) {\n        toast.push({\n          status: 'error',\n          closable: true,\n          title: t('banners.release.error.title'),\n          description: t('banners.release.error.description', {message: err.message}),\n        })\n        // Note: we only want to reset pending state in case of failure, not unconditionally the request completes (i.e. in a finally clause)\n        // this is because the UI won't reflect that the document was successfully added to the release until we get the result back over the listener\n        // once the listener event that adds the document to the release arrives the UI knows that a version exists,\n        // and this banner will not be rendered anymore\n        setVersionCreateState(undefined)\n      }\n    }\n  }, [createVersion, currentRelease._id, documentId, t, toast])\n\n  const now = useCurrentTime(200)\n\n  useConditionalToast({\n    status: 'info',\n    id: 'add-document-to-release',\n    enabled: Boolean(\n      versionCreateState?.status === 'created' &&\n        now.getTime() - versionCreateState.lastUpdate.getTime() > TOAST_DELAY,\n    ),\n    closable: true,\n    title: t('banners.release.waiting.title'),\n    description: t('banners.release.waiting.description'),\n  })\n\n  return (\n    <Banner\n      tone={tone}\n      content={\n        <Text size={1}>\n          <Translate\n            i18nKey=\"banners.release.not-in-release\"\n            t={t}\n            values={{\n              title:\n                currentRelease?.metadata?.title || tCore('release.placeholder-untitled-release'),\n            }}\n            components={{\n              VersionBadge: getVersionInlineBadge(currentRelease),\n            }}\n          />\n        </Text>\n      }\n      // Adding to a scheduled release is not allowed\n      action={\n        isScheduledRelease\n          ? undefined\n          : {\n              text: t('banners.release.action.add-to-release'),\n              tone: tone,\n              disabled: Boolean(versionCreateState),\n              onClick: handleAddToRelease,\n              mode: 'default',\n            }\n      }\n    />\n  )\n}\n\nfunction useCurrentTime(updateIntervalMs: number): Date {\n  const [currentTime, setCurrentTime] = useState(new Date())\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      setCurrentTime(new Date())\n    }, updateIntervalMs)\n    return () => clearInterval(intervalId)\n  }, [updateIntervalMs])\n  return currentTime\n}\n","import {defineEvent} from '@sanity/telemetry'\n\ninterface TypeInfo {\n  liveEditResolveType: 'publish' | 'discard'\n}\n\n/**\n * When a draft in a live edit document is published\n * @internal\n */\nexport const ResolvedLiveEdit = defineEvent<TypeInfo>({\n  name: 'LiveEdit Draft Resolved',\n  version: 1,\n  description: 'User resolved a draft of a live edit document to continue editing',\n})\n","import {type SanityDocument} from '@sanity/client'\nimport {ErrorOutlineIcon} from '@sanity/icons'\nimport {useTelemetry} from '@sanity/telemetry/react'\nimport {Flex, Text} from '@sanity/ui'\nimport {type ComponentType, useCallback, useEffect, useState} from 'react'\nimport {\n  getDraftId,\n  getPublishedId,\n  type ObjectSchemaType,\n  Translate,\n  useDocumentOperation,\n  useTranslation,\n} from 'sanity'\n\nimport {Button} from '../../../../../ui-components'\nimport {useDiffViewRouter} from '../../../../diffView/hooks/useDiffViewRouter'\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {ResolvedLiveEdit} from './__telemetry__/DraftLiveEditBanner.telemetry'\nimport {Banner} from './Banner'\n\ninterface ObsoleteDraftBannerProps {\n  displayed: Partial<SanityDocument> | null\n  documentId: string\n  schemaType: ObjectSchemaType\n  i18nKey: string\n  /**\n   * Whether the user is blocked from editing the document while an obsolete draft exists.\n   */\n  isEditBlocking?: boolean\n}\n\nexport const ObsoleteDraftBanner: ComponentType<ObsoleteDraftBannerProps> = ({\n  displayed,\n  documentId,\n  schemaType,\n  i18nKey,\n  isEditBlocking,\n}) => {\n  const {t} = useTranslation(structureLocaleNamespace)\n  const [isPublishing, setPublishing] = useState(false)\n  const [isDiscarding, setDiscarding] = useState(false)\n  const telemetry = useTelemetry()\n\n  const {publish, discardChanges} = useDocumentOperation(documentId, displayed?._type || '')\n\n  const handlePublish = useCallback(() => {\n    publish.execute()\n    setPublishing(true)\n    telemetry.log(ResolvedLiveEdit, {liveEditResolveType: 'publish'})\n  }, [publish, telemetry])\n\n  const handleDiscard = useCallback(() => {\n    discardChanges.execute()\n    setDiscarding(true)\n    telemetry.log(ResolvedLiveEdit, {liveEditResolveType: 'discard'})\n  }, [discardChanges, telemetry])\n\n  useEffect(() => {\n    return () => {\n      setPublishing(false)\n      setDiscarding(false)\n    }\n  })\n\n  const diffViewRouter = useDiffViewRouter()\n\n  const compareDraft = useCallback(() => {\n    if (typeof displayed?._id === 'undefined') {\n      return\n    }\n\n    diffViewRouter.navigateDiffView({\n      mode: 'version',\n      previousDocument: {\n        type: schemaType.name,\n        id: getPublishedId(displayed?._id),\n      },\n      nextDocument: {\n        type: schemaType.name,\n        id: getDraftId(displayed?._id),\n      },\n    })\n  }, [diffViewRouter, displayed?._id, schemaType.name])\n\n  return (\n    <Banner\n      content={\n        <Flex align=\"center\" justify=\"space-between\" gap={2}>\n          <Text size={1} weight=\"medium\">\n            <Translate t={t} i18nKey={i18nKey} values={{schemaType: schemaType.title}} />\n          </Text>\n          <Button\n            text={t('banners.obsolete-draft.actions.compare-draft.text')}\n            mode=\"ghost\"\n            onClick={compareDraft}\n          />\n          <Button\n            onClick={handlePublish}\n            text={t('banners.obsolete-draft.actions.publish-draft.text')}\n            tooltipProps={\n              isEditBlocking\n                ? {\n                    content: t('banners.live-edit-draft-banner.publish.tooltip'),\n                  }\n                : {}\n            }\n            loading={isPublishing}\n            tone=\"positive\"\n          />\n          <Button\n            onClick={handleDiscard}\n            text={t('banners.obsolete-draft.actions.discard-draft.text')}\n            tooltipProps={\n              isEditBlocking\n                ? {\n                    content: t('banners.live-edit-draft-banner.discard.tooltip'),\n                  }\n                : {}\n            }\n            loading={isDiscarding}\n            tone=\"caution\"\n          />\n        </Flex>\n      }\n      data-testid=\"live-edit-type-banner\"\n      icon={ErrorOutlineIcon}\n    />\n  )\n}\n","import {Flex, Text} from '@sanity/ui'\nimport {useCallback, useMemo} from 'react'\nimport {\n  getReleaseIdFromReleaseDocumentId,\n  getReleaseTone,\n  getVersionFromId,\n  isVersionId,\n  Translate,\n  useActiveReleases,\n  useDocumentVersions,\n  useOnlyHasVersions,\n  useSetPerspective,\n  useTranslation,\n  VersionInlineBadge,\n} from 'sanity'\n\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {Banner} from './Banner'\n\nexport function OpenReleaseToEditBanner({\n  documentId,\n  isPinnedDraftOrPublished,\n}: {\n  documentId: string\n  isPinnedDraftOrPublished: boolean\n}): React.JSX.Element | null {\n  const onlyHasVersions = useOnlyHasVersions({documentId})\n\n  /** this banner should only be rendered in specific cases\n   * 1. when the document is not a draft or published\n   * 2. when the document only has version or versions\n   * 3. when the global perspective is not set (published or draft)\n   */\n\n  if (!isVersionId(documentId)) {\n    return null\n  }\n\n  if (!onlyHasVersions || !isPinnedDraftOrPublished) {\n    return null\n  }\n\n  return <OpenReleaseToEditBannerInner documentId={documentId} />\n}\n\nexport function OpenReleaseToEditBannerInner({\n  documentId,\n}: {\n  documentId: string\n}): React.JSX.Element {\n  const {data: activeReleases} = useActiveReleases()\n  const setPerspective = useSetPerspective()\n  const releaseId = getVersionFromId(documentId) ?? ''\n  const currentVersion = useMemo(\n    () => activeReleases.find((version) => version._id.includes(releaseId)),\n    [activeReleases, releaseId],\n  )\n  const {t: tCore} = useTranslation()\n\n  const {data: documentVersions} = useDocumentVersions({documentId})\n\n  const documentVersionsTitleList = useMemo(\n    () =>\n      activeReleases\n        .filter((version) => {\n          return documentVersions.find((release) => {\n            const r = getVersionFromId(release) ?? ''\n            return getReleaseIdFromReleaseDocumentId(version._id) === r\n          })\n        })\n        .map((version) => version.metadata.title || tCore('release.placeholder-untitled-release')),\n    [activeReleases, documentVersions, tCore],\n  )\n  const tone = currentVersion && getReleaseTone(currentVersion)\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const handleGoToEdit = useCallback(async () => {\n    setPerspective(releaseId)\n  }, [releaseId, setPerspective])\n\n  return (\n    <Banner\n      tone={tone}\n      data-testid=\"open-release-to-edit-banner\"\n      content={\n        <Text size={1}>\n          <Flex direction={'row'} gap={1} wrap=\"wrap\">\n            {documentVersionsTitleList.length > 1 ? (\n              <Translate\n                t={t}\n                i18nKey=\"banners.release.navigate-to-edit-description-multiple\"\n                components={{\n                  VersionBadge: () => (\n                    <VersionInlineBadge> {documentVersionsTitleList[0]}</VersionInlineBadge>\n                  ),\n                }}\n                values={{count: documentVersionsTitleList.length - 1}}\n              />\n            ) : (\n              <Translate\n                t={t}\n                i18nKey=\"banners.release.navigate-to-edit-description-single\"\n                components={{\n                  VersionBadge: () => (\n                    <VersionInlineBadge> {documentVersionsTitleList[0]}</VersionInlineBadge>\n                  ),\n                }}\n              />\n            )}\n          </Flex>\n        </Text>\n      }\n      action={{\n        text: t('banners.release.action.open-to-edit'),\n        tone: tone,\n        onClick: handleGoToEdit,\n        mode: 'default',\n      }}\n    />\n  )\n}\n","import {WarningOutlineIcon} from '@sanity/icons'\nimport {Text} from '@sanity/ui'\nimport {useTranslation} from 'sanity'\n\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {Banner} from './Banner'\n\nexport function RevisionNotFoundBanner() {\n  const {revisionNotFound} = useDocumentPane()\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  if (!revisionNotFound) return null\n\n  return (\n    <Banner\n      tone=\"caution\"\n      data-test-id=\"revision-not-found-banner\"\n      icon={WarningOutlineIcon}\n      content={<Text size={1}>{t('banners.revision-not-found.description')}</Text>}\n    />\n  )\n}\n","import {LockIcon} from '@sanity/icons'\nimport {Text} from '@sanity/ui'\nimport {\n  formatRelativeLocalePublishDate,\n  getReleaseTone,\n  LATEST,\n  type ReleaseDocument,\n  Translate,\n  useTranslation,\n} from 'sanity'\n\nimport {Banner} from './Banner'\n\nexport function ScheduledReleaseBanner({\n  currentRelease,\n}: {\n  currentRelease: ReleaseDocument\n}): React.JSX.Element {\n  const tone = getReleaseTone(currentRelease ?? LATEST)\n\n  const {t: tCore} = useTranslation()\n\n  return (\n    <Banner\n      tone={tone}\n      icon={LockIcon}\n      content={\n        <Text size={1}>\n          <Translate\n            t={tCore}\n            i18nKey=\"release.banner.scheduled-for-publishing-on\"\n            values={{\n              date: formatRelativeLocalePublishDate(currentRelease),\n            }}\n          />\n        </Text>\n      }\n    />\n  )\n}\n","import {UnpublishIcon} from '@sanity/icons'\nimport {Stack, Text} from '@sanity/ui'\nimport {\n  getVersionInlineBadge,\n  isGoingToUnpublish,\n  isReleaseDocument,\n  Translate,\n  usePerspective,\n  useTranslation,\n} from 'sanity'\n\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {Banner} from './Banner'\n\nexport function UnpublishedDocumentBanner() {\n  const {value, editState} = useDocumentPane()\n  const {selectedPerspective} = usePerspective()\n  const isCurrentVersionGoingToUnpublish =\n    isGoingToUnpublish(value) || (editState?.version && isGoingToUnpublish(editState?.version))\n\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {t: tCore} = useTranslation()\n\n  if (isReleaseDocument(selectedPerspective) && isCurrentVersionGoingToUnpublish) {\n    const title =\n      selectedPerspective.metadata?.title || tCore('release.placeholder-untitled-release')\n\n    return (\n      <Banner\n        tone=\"critical\"\n        content={\n          <Stack space={2}>\n            <Text size={1}>\n              <Translate\n                t={t}\n                i18nKey=\"banners.unpublished-release-banner.text\"\n                values={{\n                  title,\n                }}\n                components={{\n                  VersionBadge: getVersionInlineBadge(selectedPerspective),\n                }}\n              />\n            </Text>\n            <Text size={1}>\n              <Translate t={t} i18nKey=\"banners.unpublished-release-banner.text-with-published\" />\n            </Text>\n          </Stack>\n        }\n        icon={UnpublishIcon}\n      />\n    )\n  }\n  return null\n}\n","import {InfoOutlineIcon} from '@sanity/icons'\nimport {type ObjectSchemaType} from '@sanity/types'\nimport {Heading, Inline, Stack, Text} from '@sanity/ui'\nimport {useTranslation} from 'sanity'\nimport {css, styled} from 'styled-components'\n\nimport {Tooltip} from '../../../../../ui-components'\nimport {structureLocaleNamespace} from '../../../../i18n'\n\ninterface DocumentHeaderProps {\n  documentId: string\n  schemaType: ObjectSchemaType\n  title?: string\n}\n\n/**\n * Use CSS container queries to conditionally render headings at different sizes.\n * We hide this entire container (including the document type) if container queries\n * not supported in the current browser.\n *\n * Note that usage of container queries in `styled-components` is only supported in `6.x`.\n * As such, studios that include `\"styled-components\": \"<6\"` as a dependency will only see\n * the largest heading size here, even if their browser supports it!\n */\n\nexport const TitleContainer = styled(Stack)`\n  ${({theme}) => {\n    return css`\n      @supports not (container-type: inline-size) {\n        display: none !important;\n      }\n\n      container-type: inline-size;\n\n      [data-heading] {\n        font-size: ${theme.sanity.fonts.heading.sizes[4].fontSize}px;\n        line-height: ${theme.sanity.fonts.heading.sizes[4].lineHeight}px;\n        overflow-wrap: break-word;\n        text-wrap: pretty;\n      }\n\n      @container (max-width: 560px) {\n        [data-heading] {\n          font-size: ${theme.sanity.fonts.heading.sizes[3].fontSize}px;\n          line-height: ${theme.sanity.fonts.heading.sizes[3].lineHeight}px;\n        }\n      }\n\n      @container (max-width: 420px) {\n        [data-heading] {\n          font-size: ${theme.sanity.fonts.heading.sizes[2].fontSize}px;\n          line-height: ${theme.sanity.fonts.heading.sizes[2].lineHeight}px;\n        }\n      }\n    `\n  }}\n`\n\n/**\n * Header containing current document title and type.\n * Document type is hidden if the document `_id` matches the current document `_type`.\n * The entire header is hidden if container queries are not supported.\n */\nexport const FormHeader = ({documentId, schemaType, title}: DocumentHeaderProps) => {\n  const isSingleton = documentId === schemaType.name\n  const description = schemaType.description\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  if (schemaType.__experimental_formPreviewTitle === false) {\n    return null\n  }\n  return (\n    <TitleContainer marginBottom={6} space={4}>\n      {!isSingleton && (\n        <Inline space={1}>\n          <Text muted size={1}>\n            {schemaType.title ?? schemaType.name}\n          </Text>\n          {description && (\n            <Tooltip content={description} placement=\"right\">\n              <InfoOutlineIcon data-testid=\"schema-description-icon\" />\n            </Tooltip>\n          )}\n        </Inline>\n      )}\n      <Heading as=\"h2\" data-heading muted={!title} data-testid=\"document-panel-document-title\">\n        {title ?? t('document-view.form-view.form-title-fallback')}\n      </Heading>\n    </TitleContainer>\n  )\n}\n","import {Box, Container, Flex, focusFirstDescendant, Spinner, Text} from '@sanity/ui'\nimport {type FormEvent, forwardRef, useCallback, useEffect, useMemo, useState} from 'react'\nimport {tap} from 'rxjs/operators'\nimport {\n  createPatchChannel,\n  type DocumentMutationEvent,\n  type DocumentRebaseEvent,\n  FormBuilder,\n  type FormDocumentValue,\n  fromMutationPatches,\n  type PatchMsg,\n  PresenceOverlay,\n  useConditionalToast,\n  useDocumentPresence,\n  useDocumentStore,\n  usePerspective,\n  useTranslation,\n} from 'sanity'\nimport {useEffectEvent} from 'use-effect-event'\n\nimport {Delay} from '../../../../components'\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {useDocumentTitle} from '../../useDocumentTitle'\nimport {FormHeader} from './FormHeader'\n\ninterface FormViewProps {\n  hidden: boolean\n  margins: [number, number, number, number]\n}\n\nconst preventDefault = (ev: FormEvent) => ev.preventDefault()\n\nexport const FormView = forwardRef<HTMLDivElement, FormViewProps>(function FormView(props, ref) {\n  const {hidden, margins} = props\n\n  const {\n    collapsedFieldSets,\n    collapsedPaths,\n    displayed: value,\n    editState,\n    documentId,\n    documentType,\n    fieldActions,\n    onChange,\n    validation,\n    ready,\n    formState,\n    onFocus,\n    connectionState,\n    onBlur,\n    onSetCollapsedPath,\n    onPathOpen,\n    onSetCollapsedFieldSet,\n    onSetActiveFieldGroup,\n    openPath,\n  } = useDocumentPane()\n  const {selectedReleaseId} = usePerspective()\n  const documentStore = useDocumentStore()\n  const presence = useDocumentPresence(documentId)\n  const {title} = useDocumentTitle()\n  // The `patchChannel` is an INTERNAL publish/subscribe channel that we use to notify form-builder\n  // nodes about both remote and local patches.\n  // - Used by the Portable Text input to modify selections.\n  // - Used by `withDocument` to reset value.\n  const [patchChannel] = useState(() => createPatchChannel())\n\n  const isLocked = editState?.transactionSyncLock?.enabled\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const conditionalToastParams = useMemo(\n    () => ({\n      id: `sync-lock`,\n      status: 'warning' as const,\n      enabled: isLocked,\n      title: t('document-view.form-view.sync-lock-toast.title'),\n      description: t('document-view.form-view.sync-lock-toast.description'),\n      closable: true,\n    }),\n    [isLocked, t],\n  )\n\n  useConditionalToast(conditionalToastParams)\n\n  useEffect(() => {\n    const sub = documentStore.pair\n      .documentEvents(documentId, documentType, selectedReleaseId)\n      .pipe(\n        tap((event) => {\n          if (event.type === 'mutation') {\n            patchChannel.publish(prepareMutationEvent(event))\n          }\n\n          if (event.type === 'rebase') {\n            patchChannel.publish(prepareRebaseEvent(event))\n          }\n        }),\n      )\n      .subscribe()\n\n    return () => {\n      sub.unsubscribe()\n    }\n  }, [documentId, documentStore, documentType, patchChannel, selectedReleaseId])\n\n  const hasRev = Boolean(value?._rev)\n  const handleInitialValue = useEffectEvent(() => {\n    // this is a workaround for an issue that caused the document pushed to withDocument to get\n    // stuck at the first initial value.\n    // This effect is triggered only when the document goes from not having a revision, to getting one\n    // so it will kick in as soon as the document is received from the backend\n    patchChannel.publish({\n      type: 'mutation',\n      patches: [],\n      snapshot: value,\n    })\n  })\n  useEffect(() => {\n    if (hasRev) {\n      handleInitialValue()\n    }\n    // React to changes in hasRev only\n  }, [hasRev])\n\n  const [formRef, setFormRef] = useState<null | HTMLDivElement>(null)\n\n  // We only want to run it on first mount\n  const [focusedFirstDescendant, setFocusedFirstDescendant] = useState(false)\n  useEffect(() => {\n    // Only focus on the first descendant if there is not already a focus path\n    // This is to avoid stealing focus from intent links\n    if (!focusedFirstDescendant && ready && !formState?.focusPath.length && formRef) {\n      setFocusedFirstDescendant(true)\n      focusFirstDescendant(formRef)\n    }\n  }, [focusedFirstDescendant, formRef, formState?.focusPath.length, ready])\n\n  const setRef = useCallback(\n    (node: HTMLDivElement | null) => {\n      setFormRef(node)\n      if (typeof ref === 'function') {\n        ref(node)\n      } else if (ref) {\n        ref.current = node\n      }\n    },\n    [ref],\n  )\n\n  const isReadOnly = connectionState === 'reconnecting' || formState?.readOnly || !editState?.ready\n\n  return (\n    <Container\n      hidden={hidden}\n      paddingX={4}\n      paddingTop={5}\n      paddingBottom={9}\n      sizing=\"border\"\n      width={1}\n    >\n      <PresenceOverlay margins={margins}>\n        <Box\n          as=\"form\"\n          onSubmit={preventDefault}\n          ref={setRef}\n          data-testid=\"form-view\"\n          data-read-only={isReadOnly ? 'true' : undefined}\n        >\n          {connectionState === 'connecting' && !editState?.draft && !editState?.published ? (\n            <Delay ms={300}>\n              {/* TODO: replace with loading block */}\n              <Flex align=\"center\" direction=\"column\" height=\"fill\" justify=\"center\">\n                <Spinner muted />\n                <Box marginTop={3}>\n                  <Text align=\"center\" muted size={1}>\n                    {t('document-view.form-view.loading')}\n                  </Text>\n                </Box>\n              </Flex>\n            </Delay>\n          ) : formState === null || hidden ? (\n            <Box padding={2}>\n              <Text>{t('document-view.form-view.form-hidden')}</Text>\n            </Box>\n          ) : (\n            <>\n              <FormHeader documentId={documentId} schemaType={formState.schemaType} title={title} />\n              <FormBuilder\n                __internal_fieldActions={fieldActions}\n                __internal_patchChannel={patchChannel}\n                changed={formState.changed}\n                collapsedFieldSets={collapsedFieldSets}\n                collapsedPaths={collapsedPaths}\n                focused={formState.focused}\n                focusPath={formState.focusPath}\n                groups={formState.groups}\n                id=\"root\"\n                members={formState.members}\n                onChange={onChange}\n                onFieldGroupSelect={onSetActiveFieldGroup}\n                onPathBlur={onBlur}\n                onPathFocus={onFocus}\n                onPathOpen={onPathOpen}\n                onSetFieldSetCollapsed={onSetCollapsedFieldSet}\n                onSetPathCollapsed={onSetCollapsedPath}\n                openPath={openPath}\n                presence={presence}\n                readOnly={isReadOnly}\n                schemaType={formState.schemaType}\n                validation={validation}\n                value={\n                  // note: the form state doesn't have a typed concept of a \"document\" value\n                  // but these should be compatible\n                  formState.value as FormDocumentValue\n                }\n              />\n            </>\n          )}\n        </Box>\n      </PresenceOverlay>\n    </Container>\n  )\n})\n\nfunction prepareMutationEvent(event: DocumentMutationEvent): PatchMsg {\n  const patches = event.mutations.map((mut) => mut.patch).filter(Boolean)\n\n  return {\n    type: 'mutation',\n    snapshot: event.document,\n    patches: fromMutationPatches(event.origin, patches),\n  }\n}\n\nfunction prepareRebaseEvent(event: DocumentRebaseEvent): PatchMsg {\n  const remotePatches = event.remoteMutations.map((mut) => mut.patch).filter(Boolean)\n  const localPatches = event.localMutations.map((mut) => mut.patch).filter(Boolean)\n\n  return {\n    type: 'rebase',\n    snapshot: event.document,\n    patches: fromMutationPatches('remote', remotePatches).concat(\n      fromMutationPatches('local', localPatches),\n    ),\n  }\n}\n","import {TabList} from '@sanity/ui'\nimport {type ComponentType, type ReactNode, useCallback} from 'react'\n\nimport {Tab} from '../../../../../ui-components'\nimport {usePaneRouter} from '../../../../components'\nimport {useDocumentPane} from '../../useDocumentPane'\n\n/**\n * This component will render the tabs for the document pane, following this rules:\n *  if the view tabs are wider than 200px it collapses to a dropdown\n *  if the header is smaller than 480px it collapses to a dropdown\n * For this we need to first measure the pane header width and then the tabs width.\n *\n * Gotcha, if the tabs are wider han 200px it renders a dropdown and if then the tabs change to be smaller than 200px\n * it will not change back to tabs, this is a limitation of the current implementation but an ok tradeoff to avoid mounting\n * ghost elements just to measure the width.\n */\nexport function DocumentHeaderTabs() {\n  const {activeViewId, paneKey, views} = useDocumentPane()\n\n  const tabPanelId = `${paneKey}tabpanel`\n\n  return (\n    <TabList space={1}>\n      {views.map((view, index) => (\n        <DocumentHeaderTab\n          key={view.id}\n          icon={view.icon}\n          id={`${paneKey}tab-${view.id}`}\n          isActive={activeViewId === view.id}\n          label={view.title}\n          tabPanelId={tabPanelId}\n          viewId={index === 0 ? null : (view.id ?? null)}\n        />\n      ))}\n    </TabList>\n  )\n}\n\nfunction DocumentHeaderTab(props: {\n  icon?: ComponentType | ReactNode\n  id: string\n  isActive: boolean\n  label: string\n  tabPanelId: string\n  viewId: string | null\n}) {\n  const {icon, id, isActive, label, tabPanelId, viewId, ...rest} = props\n  const {ready, editState} = useDocumentPane()\n  const {setView} = usePaneRouter()\n  const handleClick = useCallback(() => setView(viewId), [setView, viewId])\n\n  return (\n    <Tab\n      {...rest} // required to enable <TabList> keyboard navigation\n      aria-controls={tabPanelId}\n      disabled={!ready && !editState?.draft && !editState?.published}\n      icon={icon}\n      id={id}\n      label={label}\n      onClick={handleClick}\n      selected={isActive}\n    />\n  )\n}\n","import {useTranslation} from 'sanity'\n\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {useDocumentTitle} from '../../useDocumentTitle'\n\nexport function DocumentHeaderTitle(): React.JSX.Element {\n  const {connectionState, schemaType, title, value: documentValue} = useDocumentPane()\n  const {title: documentTitle, error} = useDocumentTitle()\n  const subscribed = Boolean(documentValue)\n\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  if (connectionState === 'connecting' && !subscribed) {\n    return <></>\n  }\n\n  if (title) {\n    return <>{title}</>\n  }\n\n  if (!documentValue) {\n    return (\n      <>\n        {t('panes.document-header-title.new.text', {\n          schemaType: schemaType?.title || schemaType?.name,\n        })}\n      </>\n    )\n  }\n\n  if (error) {\n    return <>{t('panes.document-header-title.error.text', {error: error})}</>\n  }\n\n  return (\n    <>\n      {documentTitle || (\n        <span style={{color: 'var(--card-muted-fg-color)'}}>\n          {t('panes.document-header-title.untitled.text')}\n        </span>\n      )}\n    </>\n  )\n}\n","import {StarFilledIcon, StarIcon} from '@sanity/icons'\nimport {Text} from '@sanity/ui'\nimport {type ComponentType} from 'react'\nimport {useManageFavorite, type UseManageFavoriteProps, useTranslation} from 'sanity'\n\nimport {Button} from '../../../../../ui-components/button/Button'\nimport {structureLocaleNamespace} from '../../../../i18n'\n\nexport const FavoriteToggle: ComponentType<UseManageFavoriteProps & {documentExists: boolean}> = ({\n  documentExists,\n  ...props\n}) => {\n  const {isFavorited, isReady, favorite, unfavorite} = useManageFavorite(props)\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const description = t(\n    isFavorited\n      ? 'document.favorites.remove-from-favorites'\n      : 'document.favorites.add-to-favorites',\n  )\n\n  return (\n    <Button\n      mode=\"bleed\"\n      onClick={isFavorited ? unfavorite : favorite}\n      disabled={!isReady || !documentExists}\n      aria-label={description}\n      aria-live=\"assertive\"\n      tooltipProps={{\n        content: <Text size={1}>{description}</Text>,\n        placement: 'right',\n      }}\n    >\n      <Text size={1}>{isFavorited ? <StarFilledIcon /> : <StarIcon />}</Text>\n    </Button>\n  )\n}\n","import {ArrowLeftIcon} from '@sanity/icons'\nimport {memo, useMemo} from 'react'\nimport {CapabilityGate, getPublishedId, useActiveWorkspace, useTranslation} from 'sanity'\n\nimport {Button} from '../../../../../ui-components'\nimport {PaneHeader, usePane, usePaneRouter} from '../../../../components'\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {useStructureTool} from '../../../../useStructureTool'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {DocumentHeaderTabs} from './DocumentHeaderTabs'\nimport {DocumentHeaderTitle} from './DocumentHeaderTitle'\nimport {FavoriteToggle} from './FavoriteToggle'\n\n/**\n * When not collapsed this component will render the title and the tabs.\n * This component will render inside the document panel and not with the DocumentPanelHeader\n */\nexport const DocumentPanelSubHeader = memo(function DocumentPanelHeader() {\n  const {editState, connectionState, views, documentId, displayed} = useDocumentPane()\n  const {features} = useStructureTool()\n  const {index, BackLink} = usePaneRouter()\n  const {activeWorkspace} = useActiveWorkspace()\n  const publishedDocId = getPublishedId(documentId)\n\n  const showTabs = views.length > 1\n\n  const {collapsed, isLast} = usePane()\n  // Prevent focus if this is the last (non-collapsed) pane.\n  const tabIndex = isLast && !collapsed ? -1 : 0\n\n  // show the back button if both the feature is enabled and the current pane\n  // is not the first\n  const showBackButton = features.backButton && index > 0\n\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const title = useMemo(() => <DocumentHeaderTitle />, [])\n  const tabs = useMemo(() => showTabs && <DocumentHeaderTabs />, [showTabs])\n\n  const backButton = useMemo(\n    () =>\n      showBackButton && (\n        <Button\n          as={BackLink}\n          data-as=\"a\"\n          icon={ArrowLeftIcon}\n          mode=\"bleed\"\n          tooltipProps={{content: t('pane-header.back-button.text')}}\n        />\n      ),\n    [BackLink, showBackButton, t],\n  )\n\n  const favoriteToggle = (\n    <CapabilityGate capability=\"comlink\" condition=\"available\">\n      <FavoriteToggle\n        resourceType=\"studio\"\n        documentId={publishedDocId}\n        documentType={displayed?._type ?? ''}\n        resourceId={[activeWorkspace.projectId, activeWorkspace.dataset].join('.')}\n        schemaName={activeWorkspace.name}\n        projectId={activeWorkspace.projectId}\n        dataset={activeWorkspace.dataset}\n        documentExists={\n          (editState?.ready &&\n            (editState.version ?? editState.draft ?? editState.published) !== null) ??\n          false\n        }\n      />\n    </CapabilityGate>\n  )\n\n  return (\n    <PaneHeader\n      loading={connectionState === 'connecting' && !editState?.draft && !editState?.published}\n      title={title}\n      tabs={tabs}\n      tabIndex={tabIndex}\n      backButton={backButton}\n      appendTitle={favoriteToggle}\n    />\n  )\n})\n","import {BoundaryElementProvider, Box, Flex, PortalProvider, usePortal} from '@sanity/ui'\nimport {useEffect, useMemo, useRef, useState} from 'react'\nimport {\n  getSanityCreateLinkMetadata,\n  getVersionFromId,\n  isGoingToUnpublish,\n  isNewDocument,\n  isPerspectiveWriteable,\n  isReleaseDocument,\n  isReleaseScheduledOrScheduling,\n  isSanityCreateLinked,\n  isSystemBundle,\n  LegacyLayerProvider,\n  type ReleaseDocument,\n  ScrollContainer,\n  usePerspective,\n  useWorkspace,\n  VirtualizerScrollInstanceProvider,\n} from 'sanity'\nimport {css, styled} from 'styled-components'\n\nimport {PaneContent, usePane, usePaneLayout, usePaneRouter} from '../../../components'\nimport {hasObsoleteDraft} from '../../../hasObsoleteDraft'\nimport {mustChooseNewDocumentDestination} from '../../../mustChooseNewDocumentDestination'\nimport {useStructureTool} from '../../../useStructureTool'\nimport {DocumentInspectorPanel} from '../documentInspector'\nimport {InspectDialog} from '../inspectDialog'\nimport {useDocumentPane} from '../useDocumentPane'\nimport {\n  DeletedDocumentBanners,\n  DeprecatedDocumentTypeBanner,\n  InsufficientPermissionBanner,\n  ReferenceChangedBanner,\n} from './banners'\nimport {ArchivedReleaseDocumentBanner} from './banners/ArchivedReleaseDocumentBanner'\nimport {CanvasLinkedBanner} from './banners/CanvasLinkedBanner'\nimport {ChooseNewDocumentDestinationBanner} from './banners/ChooseNewDocumentDestinationBanner'\nimport {CreateLinkedBanner} from './banners/CreateLinkedBanner'\nimport {DocumentNotInReleaseBanner} from './banners/DocumentNotInReleaseBanner'\nimport {ObsoleteDraftBanner} from './banners/ObsoleteDraftBanner'\nimport {OpenReleaseToEditBanner} from './banners/OpenReleaseToEditBanner'\nimport {RevisionNotFoundBanner} from './banners/RevisionNotFoundBanner'\nimport {ScheduledReleaseBanner} from './banners/ScheduledReleaseBanner'\nimport {UnpublishedDocumentBanner} from './banners/UnpublishedDocumentBanner'\nimport {FormView} from './documentViews'\nimport {DocumentPanelSubHeader} from './header/DocumentPanelSubHeader'\n\ninterface DocumentPanelProps {\n  footerHeight: number | null\n  headerHeight: number | null\n  isInspectOpen: boolean\n  rootElement: HTMLDivElement | null\n  setDocumentPanelPortalElement: (el: HTMLElement | null) => void\n  footer: React.ReactNode\n}\n\nconst DocumentBox = styled(Box)({\n  position: 'relative',\n})\n\nconst Scroller = styled(ScrollContainer)<{$disabled: boolean}>(({$disabled}) => {\n  if ($disabled) {\n    return {height: '100%'}\n  }\n\n  return css`\n    height: 100%;\n    overflow: auto;\n    position: relative;\n    scroll-behavior: smooth;\n    outline: none;\n  `\n})\n\nexport const DocumentPanel = function DocumentPanel(props: DocumentPanelProps) {\n  const {\n    footerHeight,\n    headerHeight,\n    isInspectOpen,\n    rootElement,\n    setDocumentPanelPortalElement,\n    footer,\n  } = props\n  const {\n    activeViewId,\n    displayed,\n    documentId,\n    editState,\n    inspector,\n    value,\n    views,\n    ready,\n    schemaType,\n    permissions,\n    isPermissionsLoading,\n  } = useDocumentPane()\n  const createLinkMetadata = getSanityCreateLinkMetadata(value)\n  const showCreateBanner = isSanityCreateLinked(createLinkMetadata)\n\n  const {params} = usePaneRouter()\n  const {collapsed: layoutCollapsed} = usePaneLayout()\n  const {collapsed} = usePane()\n  const parentPortal = usePortal()\n  const {features} = useStructureTool()\n  const [_portalElement, setPortalElement] = useState<HTMLDivElement | null>(null)\n  const [documentScrollElement, setDocumentScrollElement] = useState<HTMLDivElement | null>(null)\n  const formContainerElement = useRef<HTMLDivElement | null>(null)\n  const workspace = useWorkspace()\n\n  const requiredPermission = value._createdAt ? 'update' : 'create'\n\n  const activeView = useMemo(\n    () => views.find((view) => view.id === activeViewId) || views[0] || {type: 'form'},\n    [activeViewId, views],\n  )\n\n  // Use a local portal container when split panes is supported\n  const portalElement: HTMLElement | null = features.splitPanes\n    ? _portalElement || parentPortal.element\n    : parentPortal.element\n\n  // Calculate the height of the header\n  const margins: [number, number, number, number] = useMemo(() => {\n    if (layoutCollapsed) {\n      return [headerHeight || 0, 0, footerHeight ? footerHeight + 2 : 2, 0]\n    }\n\n    return [0, 0, 2, 0]\n  }, [layoutCollapsed, footerHeight, headerHeight])\n\n  const formViewHidden = activeView.type !== 'form'\n\n  const activeViewNode = useMemo(() => {\n    if (activeView.type === 'component' && activeView.component) {\n      const ActiveViewComponent = activeView.component\n      return (\n        <ActiveViewComponent\n          document={{\n            draft: editState?.draft || null,\n            displayed: displayed || value,\n            historical: displayed,\n            published: editState?.published || null,\n          }}\n          documentId={documentId}\n          options={activeView.options}\n          schemaType={schemaType}\n        />\n      )\n    }\n    return false\n  }, [activeView, displayed, documentId, editState?.draft, editState?.published, schemaType, value])\n\n  // Scroll to top as `documentId` changes\n  useEffect(() => {\n    if (!documentScrollElement?.scrollTo) return\n    documentScrollElement.scrollTo(0, 0)\n  }, [documentId, documentScrollElement])\n\n  // Pass portal element to `DocumentPane`\n  useEffect(() => {\n    if (portalElement) {\n      setDocumentPanelPortalElement(portalElement)\n    }\n  }, [portalElement, setDocumentPanelPortalElement])\n\n  const inspectDialog = useMemo(() => {\n    return isInspectOpen ? <InspectDialog value={displayed || value} /> : null\n  }, [isInspectOpen, displayed, value])\n\n  const showInspector = Boolean(!collapsed && inspector)\n  const {selectedPerspective, selectedReleaseId} = usePerspective()\n\n  // eslint-disable-next-line complexity\n  const banners = useMemo(() => {\n    if (params?.historyVersion) {\n      return <ArchivedReleaseDocumentBanner />\n    }\n\n    const isScheduledRelease =\n      isReleaseDocument(selectedPerspective) && isReleaseScheduledOrScheduling(selectedPerspective)\n\n    const documentInScheduledRelease = Boolean(\n      isScheduledRelease &&\n        displayed?._id &&\n        getVersionFromId(displayed?._id) === selectedReleaseId,\n    )\n\n    const isSelectedPerspectiveWriteable = isPerspectiveWriteable({\n      selectedPerspective,\n      isDraftModelEnabled: workspace.document.drafts.enabled,\n      schemaType,\n    })\n\n    if (\n      mustChooseNewDocumentDestination({\n        isSelectedPerspectiveWriteable,\n        editState,\n      })\n    ) {\n      return (\n        !isSelectedPerspectiveWriteable.result && (\n          <ChooseNewDocumentDestinationBanner\n            schemaType={schemaType}\n            selectedPerspective={selectedPerspective}\n            reason={isSelectedPerspectiveWriteable.reason}\n          />\n        )\n      )\n    }\n\n    if (documentInScheduledRelease) {\n      return <ScheduledReleaseBanner currentRelease={selectedPerspective as ReleaseDocument} />\n    }\n    const isPinnedDraftOrPublish = isSystemBundle(selectedPerspective)\n    const isCurrentVersionGoingToUnpublish =\n      editState?.version && isGoingToUnpublish(editState?.version)\n\n    if (\n      displayed?._id &&\n      getVersionFromId(displayed._id) !== selectedReleaseId &&\n      ready &&\n      !isPinnedDraftOrPublish &&\n      isNewDocument(editState) === false &&\n      !isCurrentVersionGoingToUnpublish\n    ) {\n      return (\n        <DocumentNotInReleaseBanner\n          documentId={value._id}\n          currentRelease={selectedPerspective as ReleaseDocument}\n          isScheduledRelease={isScheduledRelease}\n        />\n      )\n    }\n\n    const displayedHasObsoleteDraft = hasObsoleteDraft({\n      editState,\n      workspace,\n      schemaType,\n    })\n\n    if (activeView.type === 'form' && !selectedReleaseId && displayedHasObsoleteDraft.result) {\n      if (displayedHasObsoleteDraft.reason === 'DRAFT_MODEL_INACTIVE') {\n        return (\n          <ObsoleteDraftBanner\n            displayed={displayed}\n            documentId={documentId}\n            schemaType={schemaType}\n            i18nKey=\"banners.obsolete-draft.draft-model-inactive.text\"\n          />\n        )\n      }\n\n      if (displayedHasObsoleteDraft.reason === 'LIVE_EDIT_ACTIVE') {\n        return (\n          <ObsoleteDraftBanner\n            displayed={displayed}\n            documentId={documentId}\n            schemaType={schemaType}\n            i18nKey=\"banners.live-edit-draft-banner.text\"\n            isEditBlocking\n          />\n        )\n      }\n    }\n\n    if (activeView.type !== 'form' || isPermissionsLoading) return null\n\n    return (\n      <>\n        {showCreateBanner && <CreateLinkedBanner />}\n        {!permissions?.granted && (\n          <InsufficientPermissionBanner requiredPermission={requiredPermission} />\n        )}\n        <RevisionNotFoundBanner />\n        <ReferenceChangedBanner />\n        <DeprecatedDocumentTypeBanner />\n        <CanvasLinkedBanner />\n        <DeletedDocumentBanners />\n        <UnpublishedDocumentBanner />\n        <OpenReleaseToEditBanner\n          documentId={displayed?._id ?? documentId}\n          isPinnedDraftOrPublished={isPinnedDraftOrPublish}\n        />\n      </>\n    )\n  }, [\n    params?.historyVersion,\n    selectedPerspective,\n    displayed,\n    selectedReleaseId,\n    editState,\n    ready,\n    activeView.type,\n    isPermissionsLoading,\n    showCreateBanner,\n    permissions?.granted,\n    requiredPermission,\n    documentId,\n    value._id,\n    schemaType,\n    workspace,\n  ])\n  const showFormView = features.resizablePanes || !showInspector\n  return (\n    <PaneContent>\n      <Flex height=\"fill\">\n        {showFormView && (\n          <Flex height=\"fill\" direction=\"column\" width=\"fill\" flex={2}>\n            <LegacyLayerProvider zOffset=\"paneHeader\">\n              {banners}\n              <DocumentPanelSubHeader />\n            </LegacyLayerProvider>\n            <DocumentBox flex={2} overflow=\"hidden\">\n              <PortalProvider\n                element={portalElement}\n                __unstable_elements={{documentScrollElement: documentScrollElement}}\n              >\n                <BoundaryElementProvider element={documentScrollElement}>\n                  <VirtualizerScrollInstanceProvider\n                    scrollElement={documentScrollElement}\n                    containerElement={formContainerElement}\n                  >\n                    <Scroller\n                      $disabled={layoutCollapsed || false}\n                      data-testid=\"document-panel-scroller\"\n                      ref={setDocumentScrollElement}\n                    >\n                      <FormView\n                        hidden={formViewHidden}\n                        margins={margins}\n                        ref={formContainerElement}\n                      />\n                      {activeViewNode}\n                    </Scroller>\n\n                    {inspectDialog}\n\n                    <div data-testid=\"document-panel-portal\" ref={setPortalElement} />\n                  </VirtualizerScrollInstanceProvider>\n                </BoundaryElementProvider>\n              </PortalProvider>\n            </DocumentBox>\n\n            {footer}\n          </Flex>\n        )}\n        {showInspector && (\n          <BoundaryElementProvider element={rootElement}>\n            <DocumentInspectorPanel\n              documentId={documentId}\n              documentType={schemaType.name}\n              flex={1}\n            />\n          </BoundaryElementProvider>\n        )}\n      </Flex>\n    </PaneContent>\n  )\n}\nDocumentPanel.displayName = 'DocumentPanel'\n","import {negate} from 'lodash'\n\nimport {type _PaneMenuGroup, type _PaneMenuItem, type _PaneMenuNode} from './components/pane/types'\nimport {type DocumentFieldMenuActionNode, type PaneMenuItem, type PaneMenuItemGroup} from './types'\n\nexport function isMenuNodeButton(node: _PaneMenuNode): node is _PaneMenuItem | _PaneMenuGroup {\n  return (node.type === 'item' || node.type === 'group') && node.renderAsButton\n}\n\nexport const isNotMenuNodeButton = negate(isMenuNodeButton)\n\nexport function resolveMenuNodes(params: {\n  actionHandler: (item: PaneMenuItem) => void\n  fieldActions?: DocumentFieldMenuActionNode[]\n  menuItems: PaneMenuItem[]\n  menuItemGroups: PaneMenuItemGroup[]\n}): _PaneMenuNode[] {\n  const {fieldActions = [], menuItems, menuItemGroups} = params\n\n  const nodes: _PaneMenuNode[] = []\n\n  let keyOffset = 0\n\n  for (let i = 0; i < fieldActions.length; i += 1) {\n    const a = fieldActions[i]\n\n    nodes.push(mapFieldActionToPaneMenuNode(a, `${i}-${a.type}`))\n  }\n\n  keyOffset += nodes.length\n\n  const groups: _PaneMenuGroup[] = []\n\n  for (const itemGroup of menuItemGroups) {\n    const group = groups.find((g) => g.key === itemGroup.id)\n\n    if (!group) {\n      groups.push({\n        type: 'group',\n        key: itemGroup.id,\n\n        children: [],\n        expanded: true,\n        renderAsButton: false,\n        title: itemGroup.title,\n        i18n: itemGroup.i18n,\n      })\n    }\n  }\n\n  const ungroupedItems: _PaneMenuItem[] = []\n\n  for (let i = 0; i < menuItems.length; i += 1) {\n    const item = menuItems[i]\n\n    let group = item.group && groups.find((g) => g.key === item.group)\n    const disabled = typeof item.disabled === 'string' ? {reason: item.disabled} : item.disabled\n\n    if (item.group && !group) {\n      group = {\n        type: 'group',\n        key: item.group,\n        disabled,\n        expanded: true,\n        icon: item.icon,\n        title: item.group,\n        children: [],\n        renderAsButton: false,\n      }\n      groups.push(group)\n    }\n\n    if (group) {\n      group.children.push({\n        type: 'item',\n        key: `${keyOffset + i}-item`,\n\n        hotkey: item.shortcut,\n        icon: item.icon,\n        intent: item.intent,\n        disabled,\n        onAction: () => params.actionHandler(item),\n        renderAsButton: item.showAsAction ?? false,\n        selected: item.selected,\n        title: item.title,\n        i18n: item.i18n,\n        tone: item.tone,\n      })\n    } else {\n      ungroupedItems.push({\n        type: 'item',\n        key: `${keyOffset + i}-item`,\n\n        hotkey: item.shortcut,\n        icon: item.icon,\n        intent: item.intent,\n        disabled,\n        onAction: () => params.actionHandler(item),\n        renderAsButton: item.showAsAction ?? false,\n        selected: item.selected,\n        title: item.title,\n        i18n: item.i18n,\n        tone: item.tone,\n      })\n    }\n  }\n\n  return [...ungroupedItems, ...groups, ...nodes]\n}\n\nfunction mapFieldActionToPaneMenuNode(a: DocumentFieldMenuActionNode, key: string): _PaneMenuNode {\n  if (a.type === 'divider') {\n    return {\n      type: 'divider',\n      key,\n    }\n  }\n\n  if (a.type === 'group') {\n    return {\n      type: 'group',\n      key,\n\n      children: a.children.map((child, childIdx) =>\n        mapFieldActionToPaneMenuNode(child, `${key}-${childIdx}-${child.type}`),\n      ),\n      disabled: a.disabled,\n      expanded: a.expanded ?? true,\n      icon: a.icon,\n      title: a.title,\n      i18n: a.i18n,\n      renderAsButton: a.renderAsButton ?? false,\n    }\n  }\n\n  return {\n    type: 'item',\n    key,\n    intent: a.intent,\n    disabled: a.disabled,\n    icon: a.icon,\n    iconRight: a.iconRight,\n    onAction: a.onAction,\n    renderAsButton: a.renderAsButton ?? false,\n    selected: a.selected,\n    title: a.title,\n    i18n: a.i18n,\n    tone: a.tone,\n  }\n}\n","/**\n * @internal\n */\nexport const _DEBUG = false\n\nexport const EMPTY_PARAMS = Object.freeze({})\nexport const LOADING_PANE = Symbol('LOADING_PANE')\n\nexport const DOCUMENT_PANEL_PORTAL_ELEMENT = 'documentPanelPortalElement'\n","import {type Placement} from '@sanity/ui'\n\nimport {type DialogProps} from '../../../../../ui-components'\n\nexport const POPOVER_FALLBACK_PLACEMENTS: Placement[] = ['left', 'bottom']\n\nexport const DIALOG_WIDTH_TO_UI_WIDTH: {[key: string]: DialogProps['width']} = {\n  small: 0,\n  medium: 1,\n  large: 2,\n  full: 'auto',\n}\n","import {\n  Box,\n  Button, // eslint-disable-line no-restricted-imports\n  Flex,\n  Grid,\n  Popover, // eslint-disable-line no-restricted-imports\n  Text,\n  useClickOutsideEvent,\n  useGlobalKeyDown,\n  useLayer,\n} from '@sanity/ui'\nimport {useCallback, useRef} from 'react'\nimport {type DocumentActionConfirmDialogProps, useTranslation} from 'sanity'\n\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {POPOVER_FALLBACK_PLACEMENTS} from './constants'\n\nexport function ConfirmDialog(props: {\n  dialog: DocumentActionConfirmDialogProps\n  referenceElement: HTMLElement | null\n}) {\n  const {dialog, referenceElement} = props\n\n  return (\n    <Popover\n      content={<ConfirmDialogContent dialog={dialog} />}\n      fallbackPlacements={POPOVER_FALLBACK_PLACEMENTS}\n      open\n      placement=\"top\"\n      portal\n      preventOverflow\n      referenceElement={referenceElement}\n    />\n  )\n}\n\n/**\n * Dialog rendered by custom document actions of dialog type `confirm`.\n * As these are user configurable with public facing APIs, internal studio ui-components are not used.\n */\nfunction ConfirmDialogContent(props: {dialog: DocumentActionConfirmDialogProps}) {\n  const {dialog} = props\n  const {\n    cancelButtonIcon,\n    cancelButtonText,\n    confirmButtonIcon,\n    confirmButtonText,\n    // color,\n    message,\n    onCancel,\n    onConfirm,\n    tone,\n  } = dialog\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {isTopLayer} = useLayer()\n  const ref = useRef<HTMLDivElement | null>(null)\n\n  const handleGlobalKeyDown = useCallback(\n    (event: any) => {\n      if (event.key === 'Escape' && isTopLayer) onCancel()\n    },\n    [isTopLayer, onCancel],\n  )\n\n  useGlobalKeyDown(handleGlobalKeyDown)\n  useClickOutsideEvent(isTopLayer && onCancel, () => [ref.current])\n\n  return (\n    <Flex direction=\"column\" ref={ref} style={{minWidth: 320 - 16, maxWidth: 400}}>\n      <Box flex={1} overflow=\"auto\" padding={4}>\n        <Text>{message}</Text>\n      </Box>\n      <Box paddingX={4} paddingY={3} style={{borderTop: '1px solid var(--card-border-color)'}}>\n        <Grid columns={2} gap={2}>\n          <Button\n            data-testid=\"confirm-dialog-cancel-button\"\n            icon={cancelButtonIcon}\n            onClick={onCancel}\n            mode=\"ghost\"\n            text={cancelButtonText || t('confirm-dialog.cancel-button.fallback-text')}\n          />\n          <Button\n            data-testid=\"confirm-dialog-confirm-button\"\n            icon={confirmButtonIcon}\n            onClick={onConfirm}\n            text={confirmButtonText || t('confirm-dialog.confirm-button.fallback-text')}\n            tone={tone}\n          />\n        </Grid>\n      </Box>\n    </Flex>\n  )\n}\n","import {\n  Box,\n  Dialog, // eslint-disable-line no-restricted-imports\n} from '@sanity/ui'\nimport {useId} from 'react'\nimport {type DocumentActionModalDialogProps, LegacyLayerProvider} from 'sanity'\n\nimport {DIALOG_WIDTH_TO_UI_WIDTH} from './constants'\n\n/**\n * Dialog rendered by custom document actions of dialog type `dialog`.\n * As these are user configurable with public facing APIs, internal studio ui-components are not used.\n */\nexport function ModalDialog(props: {dialog: DocumentActionModalDialogProps}) {\n  const {dialog} = props\n  const dialogId = useId()\n\n  const footer = dialog.footer && (\n    <Box paddingX={4} paddingY={3}>\n      {dialog.footer}\n    </Box>\n  )\n\n  return (\n    <LegacyLayerProvider zOffset=\"fullscreen\">\n      <Dialog\n        animate\n        __unstable_hideCloseButton={dialog.showCloseButton === false}\n        footer={footer}\n        header={dialog.header}\n        id={dialogId}\n        // eslint-disable-next-line react/jsx-handler-names\n        onClose={dialog.onClose}\n        // eslint-disable-next-line react/jsx-handler-names\n        onClickOutside={dialog.onClose}\n        width={dialog.width === undefined ? 1 : DIALOG_WIDTH_TO_UI_WIDTH[dialog.width]}\n      >\n        <Box padding={4}>{dialog.content}</Box>\n      </Dialog>\n    </LegacyLayerProvider>\n  )\n}\n","import {\n  Popover, // eslint-disable-line no-restricted-imports\n  useClickOutsideEvent,\n  useGlobalKeyDown,\n  useLayer,\n} from '@sanity/ui'\nimport {useCallback, useRef} from 'react'\nimport {type DocumentActionPopoverDialogProps} from 'sanity'\n\nimport {POPOVER_FALLBACK_PLACEMENTS} from './constants'\n\nexport function PopoverDialog(props: {\n  dialog: DocumentActionPopoverDialogProps\n  referenceElement: HTMLElement | null\n}) {\n  const {dialog, referenceElement} = props\n\n  return (\n    <Popover\n      content={<PopoverDialogContent dialog={dialog} />}\n      fallbackPlacements={POPOVER_FALLBACK_PLACEMENTS}\n      open\n      placement=\"top\"\n      portal\n      preventOverflow\n      referenceElement={referenceElement}\n    />\n  )\n}\n\n/**\n * Popover rendered by custom document actions of dialog type `popover`.\n * As these are user configurable with public facing APIs, internal studio ui-components are not used.\n */\nfunction PopoverDialogContent(props: {dialog: DocumentActionPopoverDialogProps}) {\n  const {dialog} = props\n  const {content, onClose} = dialog\n  const {isTopLayer} = useLayer()\n  const ref = useRef<HTMLDivElement | null>(null)\n\n  const handleGlobalKeyDown = useCallback(\n    (event: any) => {\n      if (event.key === 'Escape' && isTopLayer) onClose()\n    },\n    [isTopLayer, onClose],\n  )\n\n  useGlobalKeyDown(handleGlobalKeyDown)\n  useClickOutsideEvent(isTopLayer && onClose, () => [ref.current])\n\n  return <div ref={ref}>{content}</div>\n}\n","import {PortalProvider, Text, usePortal} from '@sanity/ui'\nimport {type ReactNode, useId} from 'react'\nimport {type DocumentActionDialogProps} from 'sanity'\n\nimport {Dialog} from '../../../../ui-components'\nimport {DOCUMENT_PANEL_PORTAL_ELEMENT} from '../../../constants'\nimport {ConfirmDialog} from './dialogs/ConfirmDialog'\nimport {ModalDialog} from './dialogs/ModalDialog'\nimport {PopoverDialog} from './dialogs/PopoverDialog'\n\nexport interface ActionStateDialogProps {\n  dialog: DocumentActionDialogProps\n  referenceElement?: HTMLElement | null\n}\n\n// A portal provider that uses the document panel portal element if it exists\n// as the portal element so that dialogs are scoped to the document panel\nfunction DocumentActionPortalProvider(props: {children: ReactNode}) {\n  const {children} = props\n  const {element, elements} = usePortal()\n  const portalElement = elements?.[DOCUMENT_PANEL_PORTAL_ELEMENT] || element\n\n  return <PortalProvider element={portalElement}>{children}</PortalProvider>\n}\n\nexport function ActionStateDialog(props: ActionStateDialogProps) {\n  const {dialog, referenceElement = null} = props\n  const modalId = useId()\n\n  if (dialog.type === 'confirm') {\n    return <ConfirmDialog dialog={dialog} referenceElement={referenceElement} />\n  }\n\n  if (dialog.type === 'popover') {\n    return <PopoverDialog dialog={dialog} referenceElement={referenceElement} />\n  }\n\n  if (dialog.type === 'dialog' || !dialog.type) {\n    return (\n      <DocumentActionPortalProvider>\n        <ModalDialog dialog={dialog} />\n      </DocumentActionPortalProvider>\n    )\n  }\n\n  if (dialog.type === 'custom') {\n    return <DocumentActionPortalProvider>{dialog?.component}</DocumentActionPortalProvider>\n  }\n\n  // @todo: add validation?\n  const unknownModal: any = dialog\n\n  console.warn(`Unsupported modal type ${unknownModal.type}`)\n\n  return (\n    <Dialog\n      id={modalId}\n      // eslint-disable-next-line react/jsx-handler-names\n      onClose={unknownModal.onClose}\n      // eslint-disable-next-line react/jsx-handler-names\n      onClickOutside={unknownModal.onClose}\n      width={1}\n    >\n      {unknownModal.content || (\n        // eslint-disable-next-line i18next/no-literal-string\n        <Text size={1}>\n          Unexpected modal type (<code>{unknownModal.type}</code>)\n        </Text>\n      )}\n    </Dialog>\n  )\n}\n","import {Menu} from '@sanity/ui'\nimport {memo, type ReactNode, useCallback, useId, useMemo, useState} from 'react'\nimport {\n  ContextMenuButton,\n  type DocumentActionDescription,\n  LegacyLayerProvider,\n  useTranslation,\n} from 'sanity'\n\nimport {MenuButton, MenuItem, type PopoverProps} from '../../../../ui-components'\nimport {structureLocaleNamespace} from '../../../i18n'\nimport {ActionStateDialog} from './ActionStateDialog'\n\nexport interface ActionMenuButtonProps {\n  actionStates: DocumentActionDescription[]\n  disabled: boolean\n}\n\n/**\n * @internal\n */\nexport const ActionDialogWrapper = memo(function ActionDialogWrapper({\n  actionStates,\n  children,\n  referenceElement,\n}: {\n  actionStates: DocumentActionDescription[]\n  children: ({handleAction}: {handleAction: (idx: number) => void}) => ReactNode\n  referenceElement?: HTMLElement | null\n}) {\n  const [actionIndex, setActionIndex] = useState(-1)\n  const currentAction = useMemo(() => actionStates[actionIndex], [actionIndex, actionStates])\n\n  const handleAction = useCallback((idx: number) => {\n    setActionIndex(idx)\n  }, [])\n\n  const result = useMemo(() => children({handleAction}), [children, handleAction])\n\n  return (\n    <>\n      {currentAction && currentAction.dialog && (\n        <LegacyLayerProvider zOffset=\"paneFooter\">\n          <ActionStateDialog dialog={currentAction.dialog} referenceElement={referenceElement} />\n        </LegacyLayerProvider>\n      )}\n      {result}\n    </>\n  )\n})\n\n/**\n * @internal\n */\nexport function ActionMenuButton(props: ActionMenuButtonProps) {\n  const {actionStates, disabled} = props\n  const idPrefix = useId()\n\n  const [referenceElement, setReferenceElement] = useState<HTMLButtonElement | null>(null)\n\n  const popoverProps: PopoverProps = useMemo(\n    () => ({\n      placement: 'top-end',\n      portal: true,\n      preventOverflow: true,\n    }),\n    [],\n  )\n\n  const {t} = useTranslation(structureLocaleNamespace)\n  const renderActionDialog = useCallback<\n    ({handleAction}: {handleAction: (idx: number) => void}) => ReactNode\n  >(\n    ({handleAction}) => (\n      <MenuButton\n        id={`${idPrefix}-action-menu`}\n        button={\n          <ContextMenuButton\n            aria-label={t('buttons.action-menu-button.aria-label')}\n            disabled={disabled}\n            data-testid=\"action-menu-button\"\n            tooltipProps={{content: t('buttons.action-menu-button.tooltip')}}\n          />\n        }\n        menu={\n          <Menu padding={1}>\n            {actionStates.map((actionState, idx) => (\n              <ActionMenuListItem\n                // oxlint-disable-next-line no-array-index-key\n                key={idx}\n                actionState={actionState}\n                disabled={disabled}\n                index={idx}\n                onAction={handleAction}\n              />\n            ))}\n          </Menu>\n        }\n        popover={popoverProps}\n        ref={setReferenceElement}\n      />\n    ),\n    [actionStates, disabled, idPrefix, popoverProps, t],\n  )\n\n  return (\n    <ActionDialogWrapper actionStates={actionStates} referenceElement={referenceElement}>\n      {renderActionDialog}\n    </ActionDialogWrapper>\n  )\n}\n\ninterface ActionMenuListItemProps {\n  actionState: DocumentActionDescription\n  disabled: boolean\n  index: number\n  onAction: (idx: number) => void\n}\n\nexport function ActionMenuListItem(props: ActionMenuListItemProps) {\n  const {actionState, disabled, index, onAction} = props\n  const {onHandle} = actionState\n\n  const handleClick = useCallback(() => {\n    onAction(index)\n    if (onHandle) onHandle()\n  }, [index, onAction, onHandle])\n\n  const hotkeys = useMemo(() => {\n    return actionState.shortcut\n      ? String(actionState.shortcut)\n          .split('+')\n          .map((s) => s.slice(0, 1).toUpperCase() + s.slice(1))\n      : undefined\n  }, [actionState.shortcut])\n\n  return (\n    <MenuItem\n      data-testid={`action-${actionState.label.replace(' ', '')}`}\n      disabled={disabled || Boolean(actionState.disabled)}\n      hotkeys={hotkeys}\n      icon={actionState.icon}\n      onClick={handleClick}\n      text={actionState.label}\n      tone={actionState.tone}\n      {...(actionState.disabled && {tooltipProps: {content: actionState.title}})}\n    />\n  )\n}\n","import {TrashIcon} from '@sanity/icons'\nimport {useCallback, useMemo, useState} from 'react'\nimport {\n  type DocumentActionComponent,\n  InsufficientPermissionsMessage,\n  useCurrentUser,\n  useDocumentOperation,\n  useDocumentPairPermissions,\n  useTranslation,\n} from 'sanity'\n\nimport {ConfirmDeleteDialog} from '../components'\nimport {structureLocaleNamespace} from '../i18n'\nimport {useDocumentPane} from '../panes/document/useDocumentPane'\n\nconst DISABLED_REASON_TITLE_KEY = {\n  NOTHING_TO_DELETE: 'action.delete.disabled.nothing-to-delete',\n  NOT_READY: 'action.delete.disabled.not-ready',\n}\n\n/** @internal */\nexport const DeleteAction: DocumentActionComponent = ({id, type, draft, onComplete, release}) => {\n  const {setIsDeleting: paneSetIsDeleting} = useDocumentPane()\n  const {delete: deleteOp} = useDocumentOperation(id, type, release)\n  const [isDeleting, setIsDeleting] = useState(false)\n  const [isConfirmDialogOpen, setConfirmDialogOpen] = useState(false)\n\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const handleCancel = useCallback(() => {\n    setConfirmDialogOpen(false)\n    onComplete()\n  }, [onComplete])\n\n  const handleConfirm = useCallback(() => {\n    setIsDeleting(true)\n    setConfirmDialogOpen(false)\n    paneSetIsDeleting(true)\n    deleteOp.execute()\n    onComplete()\n  }, [deleteOp, onComplete, paneSetIsDeleting])\n\n  const handle = useCallback(() => {\n    setConfirmDialogOpen(true)\n  }, [])\n\n  const [permissions, isPermissionsLoading] = useDocumentPairPermissions({\n    id,\n    type,\n    version: release,\n    permission: 'delete',\n  })\n\n  const currentUser = useCurrentUser()\n\n  return useMemo(() => {\n    if (!isPermissionsLoading && !permissions?.granted) {\n      return {\n        tone: 'critical',\n        icon: TrashIcon,\n        disabled: true,\n        label: t('action.delete.label'),\n        title: (\n          <InsufficientPermissionsMessage context=\"delete-document\" currentUser={currentUser} />\n        ),\n      }\n    }\n\n    return {\n      tone: 'critical',\n      icon: TrashIcon,\n      disabled: isDeleting || Boolean(deleteOp.disabled) || isPermissionsLoading,\n      title: (deleteOp.disabled && t(DISABLED_REASON_TITLE_KEY[deleteOp.disabled])) || '',\n      label: isDeleting ? t('action.delete.running.label') : t('action.delete.label'),\n      shortcut: 'Ctrl+Alt+D',\n      onHandle: handle,\n      dialog: isConfirmDialogOpen && {\n        type: 'custom',\n        component: (\n          <ConfirmDeleteDialog\n            action=\"delete\"\n            id={draft?._id || id}\n            type={type}\n            onCancel={handleCancel}\n            onConfirm={handleConfirm}\n          />\n        ),\n      },\n    }\n  }, [\n    currentUser,\n    deleteOp.disabled,\n    draft?._id,\n    handle,\n    handleCancel,\n    handleConfirm,\n    id,\n    isConfirmDialogOpen,\n    isDeleting,\n    isPermissionsLoading,\n    permissions?.granted,\n    t,\n    type,\n  ])\n}\n\nDeleteAction.action = 'delete'\nDeleteAction.displayName = 'DeleteAction'\n","import {ResetIcon} from '@sanity/icons'\nimport {useCallback, useMemo, useState} from 'react'\nimport {\n  type DocumentActionComponent,\n  type DocumentActionDialogProps,\n  InsufficientPermissionsMessage,\n  isPublishedId,\n  useCurrentUser,\n  useDocumentOperation,\n  useDocumentPairPermissions,\n  useTranslation,\n} from 'sanity'\n\nimport {structureLocaleNamespace} from '../i18n'\nimport {useDocumentPane} from '../panes/document/useDocumentPane'\n\nconst DISABLED_REASON_KEY = {\n  NO_CHANGES: 'action.discard-changes.disabled.no-change',\n  NOT_PUBLISHED: 'action.discard-changes.disabled.not-published',\n  NOT_READY: 'action.discard-changes.disabled.not-ready',\n} as const\n\n/** @internal */\nexport const DiscardChangesAction: DocumentActionComponent = ({\n  id,\n  type,\n  published,\n  liveEdit,\n  onComplete,\n  release,\n}) => {\n  const {discardChanges} = useDocumentOperation(id, type, release)\n  const [isConfirmDialogOpen, setConfirmDialogOpen] = useState(false)\n  const [permissions, isPermissionsLoading] = useDocumentPairPermissions({\n    id,\n    type,\n    version: release,\n    permission: 'discardDraft',\n  })\n  const currentUser = useCurrentUser()\n  const {displayed} = useDocumentPane()\n\n  const {t} = useTranslation(structureLocaleNamespace)\n  const isPublished = displayed?._id && isPublishedId(displayed?._id)\n\n  const handleConfirm = useCallback(() => {\n    discardChanges.execute()\n    onComplete()\n  }, [discardChanges, onComplete])\n\n  const handle = useCallback(() => {\n    setConfirmDialogOpen(true)\n  }, [])\n\n  const dialog: DocumentActionDialogProps | false = useMemo(\n    () =>\n      isConfirmDialogOpen && {\n        type: 'confirm',\n        tone: 'critical',\n        onCancel: onComplete,\n        onConfirm: handleConfirm,\n        message: t('action.discard-changes.confirm-dialog.confirm-discard-changes'),\n      },\n    [handleConfirm, isConfirmDialogOpen, onComplete, t],\n  )\n\n  return useMemo(() => {\n    if (!published || liveEdit || isPublished) {\n      return null\n    }\n\n    if (!isPermissionsLoading && !permissions?.granted) {\n      return {\n        tone: 'critical',\n        icon: ResetIcon,\n        disabled: true,\n        label: t('action.discard-changes.label'),\n        title: (\n          <InsufficientPermissionsMessage context=\"discard-changes\" currentUser={currentUser} />\n        ),\n      }\n    }\n\n    return {\n      tone: 'critical',\n      icon: ResetIcon,\n      disabled: Boolean(discardChanges.disabled) || isPermissionsLoading,\n      title: t((discardChanges.disabled && DISABLED_REASON_KEY[discardChanges.disabled]) || ''),\n      label: t('action.discard-changes.label'),\n      onHandle: handle,\n      dialog,\n    }\n  }, [\n    currentUser,\n    dialog,\n    discardChanges.disabled,\n    handle,\n    isPermissionsLoading,\n    isPublished,\n    liveEdit,\n    permissions?.granted,\n    published,\n    t,\n  ])\n}\n\nDiscardChangesAction.action = 'discardChanges'\nDiscardChangesAction.displayName = 'DiscardChangesAction'\n","import {CopyIcon} from '@sanity/icons'\nimport {uuid} from '@sanity/uuid'\nimport {useCallback, useMemo, useState} from 'react'\nimport {filter, firstValueFrom} from 'rxjs'\nimport {\n  type DuplicateDocumentActionComponent,\n  InsufficientPermissionsMessage,\n  useCurrentUser,\n  useDocumentOperation,\n  useDocumentPairPermissions,\n  useDocumentStore,\n  useTranslation,\n} from 'sanity'\nimport {useRouter} from 'sanity/router'\n\nimport {structureLocaleNamespace} from '../i18n'\n\nconst DISABLED_REASON_KEY = {\n  NOTHING_TO_DUPLICATE: 'action.duplicate.disabled.nothing-to-duplicate',\n  NOT_READY: 'action.duplicate.disabled.not-ready',\n}\n\n/** @internal */\nexport const DuplicateAction: DuplicateDocumentActionComponent = ({\n  id,\n  type,\n  onComplete,\n  release,\n  mapDocument,\n}) => {\n  const documentStore = useDocumentStore()\n  const {duplicate} = useDocumentOperation(id, type, release)\n  const {navigateIntent} = useRouter()\n  const [isDuplicating, setDuplicating] = useState(false)\n\n  const [permissions, isPermissionsLoading] = useDocumentPairPermissions({\n    id,\n    type,\n    version: release,\n    permission: 'duplicate',\n  })\n\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const currentUser = useCurrentUser()\n\n  const handle = useCallback(async () => {\n    const dupeId = uuid()\n\n    setDuplicating(true)\n\n    // set up the listener before executing\n    const duplicateSuccess = firstValueFrom(\n      documentStore.pair\n        .operationEvents(id, type)\n        .pipe(filter((e) => e.op === 'duplicate' && e.type === 'success')),\n    )\n    duplicate.execute(dupeId, {mapDocument})\n\n    // only navigate to the duplicated document when the operation is successful\n    await duplicateSuccess\n    navigateIntent('edit', {id: dupeId, type})\n\n    onComplete()\n  }, [documentStore.pair, duplicate, id, mapDocument, navigateIntent, onComplete, type])\n\n  return useMemo(() => {\n    if (!isPermissionsLoading && !permissions?.granted) {\n      return {\n        icon: CopyIcon,\n        disabled: true,\n        label: t('action.duplicate.label'),\n        title: (\n          <InsufficientPermissionsMessage context=\"duplicate-document\" currentUser={currentUser} />\n        ),\n      }\n    }\n\n    return {\n      icon: CopyIcon,\n      disabled: isDuplicating || Boolean(duplicate.disabled) || isPermissionsLoading,\n      label: isDuplicating ? t('action.duplicate.running.label') : t('action.duplicate.label'),\n      title: duplicate.disabled ? t(DISABLED_REASON_KEY[duplicate.disabled]) : '',\n      onHandle: handle,\n    }\n  }, [\n    currentUser,\n    duplicate.disabled,\n    handle,\n    isDuplicating,\n    isPermissionsLoading,\n    permissions?.granted,\n    t,\n  ])\n}\n\nDuplicateAction.action = 'duplicate'\nDuplicateAction.displayName = 'DuplicateAction'\n","import {RevertIcon} from '@sanity/icons'\nimport {useCallback, useEffect, useMemo, useRef, useState} from 'react'\nimport {\n  type DocumentActionComponent,\n  type DocumentActionDialogProps,\n  useDocumentOperation,\n  useDocumentOperationEvent,\n  useTranslation,\n} from 'sanity'\nimport {useRouter} from 'sanity/router'\n\nimport {structureLocaleNamespace} from '../i18n'\nimport {useDocumentPane} from '../panes/document/useDocumentPane'\n\n/** @internal */\nexport const HistoryRestoreAction: DocumentActionComponent = ({\n  id,\n  type,\n  revision,\n  onComplete,\n  release,\n}) => {\n  const {restore} = useDocumentOperation(id, type, release)\n  const {revisionNotFound} = useDocumentPane()\n  const event = useDocumentOperationEvent(id, type)\n  const {navigateIntent} = useRouter()\n  const prevEvent = useRef(event)\n  const [isConfirmDialogOpen, setConfirmDialogOpen] = useState(false)\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const handleConfirm = useCallback(() => {\n    restore.execute(revision!)\n    onComplete()\n  }, [restore, revision, onComplete])\n\n  /**\n   * If the restore operation is successful, navigate to the document edit view\n   */\n  useEffect(() => {\n    if (!event || event === prevEvent.current) return\n\n    if (event.type === 'success' && event.op === 'restore') {\n      navigateIntent('edit', {id, type})\n    }\n\n    prevEvent.current = event\n  }, [event, id, navigateIntent, type])\n\n  const handle = useCallback(() => {\n    setConfirmDialogOpen(true)\n  }, [])\n\n  const dialog: DocumentActionDialogProps | null = useMemo(() => {\n    if (isConfirmDialogOpen) {\n      return {\n        type: 'confirm',\n        tone: 'critical',\n        onCancel: onComplete,\n        onConfirm: handleConfirm,\n        message: t('action.restore.confirm.message'),\n      }\n    }\n\n    return null\n  }, [handleConfirm, isConfirmDialogOpen, onComplete, t])\n\n  const isRevisionInitial = revision === '@initial'\n  const isRevisionLatest = revision === undefined // undefined means latest revision\n\n  return useMemo(() => {\n    if (isRevisionLatest || revisionNotFound) {\n      return null\n    }\n\n    return {\n      label: t('action.restore.label'),\n      tone: 'caution',\n      onHandle: handle,\n      title: t(\n        isRevisionInitial\n          ? 'action.restore.disabled.cannot-restore-initial'\n          : 'action.restore.tooltip',\n      ),\n      icon: RevertIcon,\n      dialog,\n      disabled: isRevisionInitial,\n    }\n  }, [dialog, handle, isRevisionInitial, isRevisionLatest, revisionNotFound, t])\n}\n\nHistoryRestoreAction.action = 'restore'\nHistoryRestoreAction.displayName = 'HistoryRestoreAction'\n","import {defineEvent} from '@sanity/telemetry'\n\ninterface DocumentPublishedInfo {\n  /**\n   * The document was created and published straight away\n   */\n  publishedImmediately: boolean\n\n  /**\n   * The document had a previously published version when it was published\n   */\n  previouslyPublished: boolean\n}\nexport const DocumentPublished = defineEvent<DocumentPublishedInfo>({\n  name: 'Document Published',\n  version: 1,\n  description: 'User clicked the \"Publish\" button in the document pane',\n})\n","import {PublishIcon} from '@sanity/icons'\nimport {useTelemetry} from '@sanity/telemetry/react'\nimport {isValidationErrorMarker} from '@sanity/types'\nimport {useCallback, useEffect, useMemo, useState} from 'react'\nimport {\n  type DocumentActionComponent,\n  InsufficientPermissionsMessage,\n  isPublishedId,\n  type TFunction,\n  useCurrentUser,\n  useDocumentOperation,\n  useDocumentPairPermissions,\n  useEditState,\n  useRelativeTime,\n  useSyncState,\n  useTranslation,\n  useValidationStatus,\n} from 'sanity'\n\nimport {structureLocaleNamespace, type StructureLocaleResourceKeys} from '../i18n'\nimport {useDocumentPane} from '../panes/document/useDocumentPane'\nimport {DocumentPublished} from './__telemetry__/documentActions.telemetry'\n\nconst DISABLED_REASON_TITLE_KEY: Record<string, StructureLocaleResourceKeys> = {\n  LIVE_EDIT_ENABLED: 'action.publish.live-edit.publish-disabled',\n  ALREADY_PUBLISHED: 'action.publish.already-published.no-time-ago.tooltip',\n  NO_CHANGES: 'action.publish.no-changes.tooltip',\n  NOT_READY: 'action.publish.disabled.not-ready',\n} as const\n\nconst PUBLISHED_STATE = {status: 'published'} as const\n\nfunction getDisabledReason(\n  reason: keyof typeof DISABLED_REASON_TITLE_KEY,\n  publishedAt: string | undefined,\n  t: TFunction,\n) {\n  if (reason === 'ALREADY_PUBLISHED' && publishedAt) {\n    return <AlreadyPublished publishedAt={publishedAt} />\n  }\n  return t(DISABLED_REASON_TITLE_KEY[reason])\n}\n\nfunction AlreadyPublished({publishedAt}: {publishedAt: string}) {\n  const {t} = useTranslation(structureLocaleNamespace)\n  const timeSincePublished = useRelativeTime(publishedAt, {useTemporalPhrase: true})\n  return <span>{t('action.publish.already-published.tooltip', {timeSincePublished})}</span>\n}\n\n/** @internal */\nexport const PublishAction: DocumentActionComponent = (props) => {\n  const {id, type, liveEdit, draft, published, release} = props\n  const [publishState, setPublishState] = useState<\n    {status: 'publishing'; publishRevision: string | undefined} | {status: 'published'} | null\n  >(null)\n  const {publish} = useDocumentOperation(id, type)\n  const validationStatus = useValidationStatus(id, type)\n  const syncState = useSyncState(id, type)\n  const {changesOpen, documentId, documentType, value} = useDocumentPane()\n  const editState = useEditState(documentId, documentType)\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const revision = (editState?.draft || editState?.published || {})._rev\n\n  const hasValidationErrors = validationStatus.validation.some(isValidationErrorMarker)\n  // we use this to \"schedule\" publish after pending tasks (e.g. validation and sync) has completed\n  const [publishScheduled, setPublishScheduled] = useState<boolean>(false)\n  const isSyncing = syncState.isSyncing\n  const isValidating = validationStatus.isValidating\n  const [permissions, isPermissionsLoading] = useDocumentPairPermissions({\n    id,\n    type,\n    permission: 'publish',\n  })\n\n  const currentUser = useCurrentUser()\n\n  const title = publish.disabled\n    ? getDisabledReason(publish.disabled, (published || {})._updatedAt, t) || ''\n    : hasValidationErrors\n      ? t('action.publish.validation-issues.tooltip')\n      : ''\n\n  const currentPublishRevision = published?._rev\n\n  const doPublish = useCallback(() => {\n    publish.execute()\n    setPublishState({status: 'publishing', publishRevision: currentPublishRevision})\n  }, [publish, currentPublishRevision])\n\n  useEffect(() => {\n    // make sure the validation status is about the current revision and not an earlier one\n    const validationComplete =\n      validationStatus.isValidating === false && validationStatus.revision !== revision\n\n    if (!publishScheduled || isSyncing || !validationComplete) {\n      return\n    }\n\n    if (!hasValidationErrors) {\n      doPublish()\n    }\n    setPublishScheduled(false)\n  }, [\n    isSyncing,\n    doPublish,\n    hasValidationErrors,\n    publishScheduled,\n    validationStatus.revision,\n    revision,\n    isValidating,\n    validationStatus.isValidating,\n  ])\n\n  useEffect(() => {\n    const didPublish =\n      // All we need to check here is for the revision of the current published document\n      // to be different from what it was at the time of publish\n      // a successful publish will always lead to a new published revision\n      publishState?.status === 'publishing' &&\n      currentPublishRevision !== publishState.publishRevision\n\n    const nextState = didPublish ? PUBLISHED_STATE : null\n    const delay = didPublish ? 200 : 4000\n    const timer = setTimeout(() => {\n      setPublishState(nextState)\n    }, delay)\n    return () => clearTimeout(timer)\n  }, [changesOpen, publishState, currentPublishRevision])\n\n  const telemetry = useTelemetry()\n\n  const handle = useCallback(() => {\n    telemetry.log(DocumentPublished, {\n      publishedImmediately: !draft?._createdAt,\n      previouslyPublished: Boolean(published),\n    })\n    if (\n      syncState.isSyncing ||\n      validationStatus.isValidating ||\n      validationStatus.revision !== revision\n    ) {\n      setPublishScheduled(true)\n    } else {\n      doPublish()\n    }\n  }, [\n    telemetry,\n    draft?._createdAt,\n    published,\n    syncState.isSyncing,\n    validationStatus.isValidating,\n    validationStatus.revision,\n    revision,\n    doPublish,\n  ])\n\n  return useMemo(() => {\n    if (release) {\n      // Version documents are not publishable by this action, they should be published as part of a release\n      return null\n    }\n    if (liveEdit) {\n      // Live edit documents are not publishable by this action, they are published automatically\n      return null\n    }\n\n    /**\n     * When draft is null, if not a published or version document\n     * then it means the draft is yet to be saved - in this case don't disabled\n     * the publish button due to ALREADY_PUBLISHED reason\n     */\n    if (isPublishedId(value._id) && draft !== null) {\n      return {\n        tone: 'default',\n        icon: PublishIcon,\n        label: t('action.publish.label'),\n        title: getDisabledReason('ALREADY_PUBLISHED', published?._updatedAt, t),\n        disabled: true,\n      }\n    }\n\n    if (!isPermissionsLoading && !permissions?.granted) {\n      return {\n        tone: 'default',\n        icon: PublishIcon,\n        label: t('action.publish.label'),\n        title: (\n          <InsufficientPermissionsMessage context=\"publish-document\" currentUser={currentUser} />\n        ),\n        disabled: true,\n      }\n    }\n\n    const disabled = Boolean(\n      publishScheduled ||\n        editState?.transactionSyncLock?.enabled ||\n        publishState?.status === 'publishing' ||\n        publishState?.status === 'published' ||\n        hasValidationErrors ||\n        publish.disabled,\n    )\n\n    return {\n      disabled: disabled || isPermissionsLoading,\n      tone: 'default',\n      label:\n        publishState?.status === 'published'\n          ? t('action.publish.published.label')\n          : publishScheduled || publishState?.status === 'publishing'\n            ? t('action.publish.running.label')\n            : t('action.publish.draft.label'),\n      // @todo: Implement loading state, to show a `<Button loading />` state\n      // loading: publishScheduled || publishState === 'publishing',\n      icon: PublishIcon,\n      title: publishScheduled\n        ? t('action.publish.waiting')\n        : publishState?.status === 'published' || publishState?.status === 'publishing'\n          ? null\n          : title,\n      shortcut: disabled || publishScheduled ? null : 'Ctrl+Alt+P',\n      onHandle: handle,\n    }\n  }, [\n    release,\n    liveEdit,\n    value._id,\n    draft,\n    isPermissionsLoading,\n    permissions?.granted,\n    publishScheduled,\n    editState?.transactionSyncLock?.enabled,\n    publishState,\n    hasValidationErrors,\n    publish.disabled,\n    t,\n    title,\n    handle,\n    published?._updatedAt,\n    currentUser,\n  ])\n}\n\nPublishAction.action = 'publish'\nPublishAction.displayName = 'PublishAction'\n","import {UnpublishIcon} from '@sanity/icons'\nimport {useCallback, useMemo, useState} from 'react'\nimport {\n  type DocumentActionComponent,\n  type DocumentActionModalDialogProps,\n  InsufficientPermissionsMessage,\n  useCurrentUser,\n  useDocumentOperation,\n  useDocumentPairPermissions,\n  usePerspective,\n  useTranslation,\n} from 'sanity'\n\nimport {ConfirmDeleteDialog} from '../components'\nimport {structureLocaleNamespace} from '../i18n'\n\nconst DISABLED_REASON_KEY = {\n  NOT_PUBLISHED: 'action.unpublish.disabled.not-published',\n  NOT_READY: 'action.unpublish.disabled.not-ready',\n  LIVE_EDIT_ENABLED: 'action.unpublish.disabled.live-edit-enabled',\n}\n\n/** @internal */\nexport const UnpublishAction: DocumentActionComponent = ({\n  id,\n  type,\n  draft,\n  onComplete,\n  liveEdit,\n  release,\n}) => {\n  const {unpublish} = useDocumentOperation(id, type)\n  const [isConfirmDialogOpen, setConfirmDialogOpen] = useState(false)\n  const [permissions, isPermissionsLoading] = useDocumentPairPermissions({\n    id,\n    type,\n    permission: 'unpublish',\n  })\n  const currentUser = useCurrentUser()\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {selectedPerspective} = usePerspective()\n\n  const isDraft = selectedPerspective === 'drafts'\n\n  const handleCancel = useCallback(() => {\n    setConfirmDialogOpen(false)\n    onComplete()\n  }, [onComplete])\n\n  const handleConfirm = useCallback(() => {\n    setConfirmDialogOpen(false)\n    unpublish.execute()\n    onComplete()\n  }, [onComplete, unpublish])\n\n  const dialog: DocumentActionModalDialogProps | null = useMemo(() => {\n    if (isConfirmDialogOpen) {\n      return {\n        type: 'dialog',\n        onClose: onComplete,\n        content: (\n          <ConfirmDeleteDialog\n            id={draft?._id || id}\n            type={type}\n            action=\"unpublish\"\n            onCancel={handleCancel}\n            onConfirm={handleConfirm}\n          />\n        ),\n      }\n    }\n\n    return null\n  }, [draft, id, handleCancel, handleConfirm, isConfirmDialogOpen, onComplete, type])\n\n  return useMemo(() => {\n    if (release || isDraft) {\n      // Version documents cannot be unpublished by this action, they should be unpublished as part of a release\n      // Draft documents can't either\n      return null\n    }\n    if (liveEdit) {\n      return null\n    }\n\n    if (!isPermissionsLoading && !permissions?.granted) {\n      return {\n        tone: 'critical',\n        icon: UnpublishIcon,\n        label: 'Unpublish',\n        title: (\n          <InsufficientPermissionsMessage context=\"unpublish-document\" currentUser={currentUser} />\n        ),\n        disabled: true,\n      }\n    }\n\n    return {\n      tone: 'critical',\n      icon: UnpublishIcon,\n      disabled: Boolean(unpublish.disabled) || isPermissionsLoading,\n      label: t('action.unpublish.label'),\n      title: unpublish.disabled ? t(DISABLED_REASON_KEY[unpublish.disabled]) : '',\n      onHandle: () => setConfirmDialogOpen(true),\n      dialog,\n    }\n  }, [\n    release,\n    isDraft,\n    liveEdit,\n    isPermissionsLoading,\n    permissions?.granted,\n    unpublish.disabled,\n    t,\n    dialog,\n    currentUser,\n  ])\n}\n\nUnpublishAction.action = 'unpublish'\nUnpublishAction.displayName = 'UnpublishAction'\n","/* eslint-disable camelcase */\nimport {Flex, LayerProvider, Stack, Text} from '@sanity/ui'\nimport {memo, useCallback, useMemo, useState} from 'react'\nimport {\n  type DocumentActionComponent,\n  type DocumentActionDescription,\n  type DocumentActionProps,\n  Hotkeys,\n  isSanityDefinedAction,\n  usePerspective,\n  useSource,\n} from 'sanity'\n\nimport {Button, Tooltip} from '../../../../ui-components'\nimport {RenderActionCollectionState, type ResolvedAction} from '../../../components'\nimport {HistoryRestoreAction} from '../../../documentActions'\nimport {toLowerCaseNoSpaces} from '../../../util/toLowerCaseNoSpaces'\nimport {useDocumentPane} from '../useDocumentPane'\nimport {ActionMenuButton} from './ActionMenuButton'\nimport {ActionStateDialog} from './ActionStateDialog'\n\ninterface DocumentStatusBarActionsInnerProps {\n  disabled: boolean\n  states: ResolvedAction[]\n}\n\nconst DocumentStatusBarActionsInner = memo(function DocumentStatusBarActionsInner(\n  props: DocumentStatusBarActionsInnerProps,\n) {\n  const {disabled, states} = props\n  const {__internal_tasks} = useSource()\n  const {editState} = useDocumentPane()\n  const {selectedReleaseId} = usePerspective()\n  const [firstActionState, ...menuActionStates] = states\n  const [buttonElement, setButtonElement] = useState<HTMLButtonElement | null>(null)\n\n  // TODO: This could be refactored to use the tooltip from the button if the firstAction.title was updated to a string.\n  const tooltipContent = useMemo(() => {\n    if (!firstActionState || (!firstActionState.title && !firstActionState.shortcut)) return null\n\n    return (\n      <Flex style={{maxWidth: 300}} align=\"center\" gap={3}>\n        {firstActionState.title && <Text size={1}>{firstActionState.title}</Text>}\n        {firstActionState.shortcut && (\n          <Hotkeys\n            data-testid=\"document-status-bar-hotkeys\"\n            fontSize={1}\n            style={{marginTop: -4, marginBottom: -4}}\n            keys={String(firstActionState.shortcut)\n              .split('+')\n              .map((s) => s.slice(0, 1).toUpperCase() + s.slice(1).toLowerCase())}\n          />\n        )}\n      </Flex>\n    )\n  }, [firstActionState])\n  const showFirstActionButton = selectedReleaseId\n    ? // If the first action is a custom action and we are in a version document show it.\n      firstActionState && !isSanityDefinedAction(firstActionState)\n    : firstActionState && !editState?.liveEdit\n\n  const sideMenuItems = useMemo(() => {\n    return showFirstActionButton ? menuActionStates : [firstActionState, ...menuActionStates]\n  }, [showFirstActionButton, firstActionState, menuActionStates])\n\n  return (\n    <Flex align=\"center\" gap={1}>\n      {__internal_tasks && __internal_tasks.footerAction}\n      {showFirstActionButton && (\n        <LayerProvider zOffset={200}>\n          <Tooltip disabled={!tooltipContent} content={tooltipContent} placement=\"top\">\n            <Stack>\n              <Button\n                data-testid={`action-${toLowerCaseNoSpaces(firstActionState.label)}`}\n                disabled={disabled || Boolean(firstActionState.disabled)}\n                icon={firstActionState.icon}\n                // eslint-disable-next-line react/jsx-handler-names\n                onClick={firstActionState.onHandle}\n                ref={setButtonElement}\n                text={firstActionState.label}\n                tone={firstActionState.tone || 'primary'}\n              />\n            </Stack>\n          </Tooltip>\n        </LayerProvider>\n      )}\n      {sideMenuItems.length > 0 && (\n        <ActionMenuButton actionStates={sideMenuItems} disabled={disabled} />\n      )}\n      {firstActionState && firstActionState.dialog && (\n        <ActionStateDialog dialog={firstActionState.dialog} referenceElement={buttonElement} />\n      )}\n    </Flex>\n  )\n})\n\nexport const DocumentStatusBarActions = memo(function DocumentStatusBarActions() {\n  const {\n    actions: allActions,\n    connectionState,\n    documentId,\n    editState,\n    isInitialValueLoading,\n  } = useDocumentPane()\n\n  // The restore action has a dedicated place in the UI; it's only visible when the user is viewing\n  // a different document revision. It must be omitted from this collection.\n  const actions = useMemo(\n    () => (allActions ?? []).filter((action) => !isRestoreAction(action)),\n    [allActions],\n  )\n  const actionProps: Omit<DocumentActionProps, 'onComplete'> | null = useMemo(\n    () => (editState ? {...editState, initialValueResolved: !isInitialValueLoading} : null),\n    [editState, isInitialValueLoading],\n  )\n\n  const renderDocumentStatusBarActions = useCallback<\n    (props: {states: ResolvedAction[]}) => React.ReactNode\n  >(\n    ({states}) => (\n      <DocumentStatusBarActionsInner\n        // Use document ID as key to make sure that the actions state is reset when the document changes\n        key={documentId}\n        disabled={connectionState !== 'connected'}\n        states={states}\n      />\n    ),\n    [connectionState, documentId],\n  )\n\n  if (actions.length === 0 || !actionProps) {\n    return null\n  }\n\n  return (\n    <RenderActionCollectionState actions={actions} actionProps={actionProps} group=\"default\">\n      {renderDocumentStatusBarActions}\n    </RenderActionCollectionState>\n  )\n})\n\nexport const HistoryStatusBarActions = memo(function HistoryStatusBarActions() {\n  const {\n    actions,\n    connectionState,\n    editState,\n    revisionId: revision,\n    isInitialValueLoading,\n  } = useDocumentPane()\n\n  const disabled = (editState?.draft || editState?.published || {})._rev === revision\n  const actionProps: Omit<DocumentActionProps, 'onComplete'> | null = useMemo(\n    () =>\n      editState\n        ? {\n            ...editState,\n            revision: revision || undefined,\n            initialValueResolved: !isInitialValueLoading,\n          }\n        : null,\n    [editState, revision, isInitialValueLoading],\n  )\n\n  // If multiple `restore` actions are defined, ensure only the final one is used.\n  const historyActions = useMemo(() => (actions ?? []).filter(isRestoreAction).slice(-1), [actions])\n\n  const renderDocumentStatusBarActions = useCallback<\n    (props: {states: DocumentActionDescription[]}) => React.ReactNode\n  >(\n    ({states}) => (\n      <DocumentStatusBarActionsInner\n        disabled={connectionState !== 'connected' || Boolean(disabled)}\n        states={states}\n      />\n    ),\n    [connectionState, disabled],\n  )\n  if (!actionProps) {\n    return null\n  }\n  return (\n    <RenderActionCollectionState actions={historyActions} actionProps={actionProps} group=\"default\">\n      {renderDocumentStatusBarActions}\n    </RenderActionCollectionState>\n  )\n})\n\nexport function isRestoreAction(\n  action: DocumentActionComponent,\n): action is DocumentActionComponent & {action: 'restore'} {\n  return action.action === HistoryRestoreAction.action\n}\n","import {useEffect, useState} from 'react'\n\n/**\n * This hook is used to determine if the gradient should be shown on the chip scroll container.\n * It uses an IntersectionObserver to observe the last child of the container and sets the showGradient state based on the intersection.\n * @param containerRef - The ref to the container that contains all the chips\n * @returns showGradient - A boolean that determines if the gradient should be shown\n * @internal\n */\nexport function useChipScrollPosition(containerRef: React.RefObject<HTMLDivElement | null>) {\n  const [showGradient, setShowGradient] = useState(false)\n\n  useEffect(() => {\n    const checkOverflow = () => {\n      // container is the parent that contains all the chips\n      const container = containerRef.current\n      if (!container) return\n      const {scrollWidth, clientWidth} = container\n      const needsScrolling = scrollWidth > clientWidth\n\n      if (!needsScrolling) {\n        setShowGradient(false)\n        return\n      }\n\n      // Check if scrolled to the end\n      // becausee it doesn't need to show the gradient then\n      const {scrollLeft} = container\n      const isAtEnd = scrollLeft + clientWidth >= scrollWidth\n      setShowGradient(!isAtEnd)\n    }\n\n    function setupObservers() {\n      checkOverflow()\n      // container is the parent that contains all the chips\n      const container = containerRef.current\n      if (!container) return {intersectionObserver: null, mutationObserver: null}\n\n      const intersectionObserver = new IntersectionObserver((entries) => {\n        const entry = entries[0]\n\n        if (entry) {\n          setShowGradient(!entry.isIntersecting)\n        }\n      })\n\n      const updateLastChipObserver = () => {\n        // Disconnect previous observation\n        intersectionObserver.disconnect()\n\n        // Get the new last child\n        const lastChip = container.children[container.children.length - 1]\n        intersectionObserver.observe(lastChip)\n      }\n\n      // Set up initial observation\n      updateLastChipObserver()\n\n      // Set up mutation observer to watch for changes to children\n      // this is needed because sometimes the list of releases takes some time to be rendered\n      // otherwise it could accidentally set the last child as the \"drafts\" / \"published\" chip\n      const mutationObserver = new MutationObserver(() => {\n        updateLastChipObserver()\n        checkOverflow()\n      })\n\n      mutationObserver.observe(container, {\n        childList: true,\n        subtree: false,\n      })\n\n      return {intersectionObserver, mutationObserver}\n    }\n\n    const {intersectionObserver, mutationObserver} = setupObservers()\n\n    return () => {\n      intersectionObserver?.disconnect()\n      mutationObserver?.disconnect()\n    }\n  }, [containerRef])\n\n  return showGradient\n}\n","import {Text} from '@sanity/ui'\nimport {memo, useCallback, useMemo} from 'react'\nimport {\n  formatRelativeLocalePublishDate,\n  getReleaseIdFromReleaseDocumentId,\n  getReleaseTone,\n  getVersionFromId,\n  isDraftId,\n  isGoingToUnpublish,\n  isPublishedId,\n  isPublishedPerspective,\n  isReleaseScheduledOrScheduling,\n  isVersionId,\n  type ReleaseDocument,\n  type SanityDocumentLike,\n  Translate,\n  useActiveReleases,\n  useDateTimeFormat,\n  type UseDateTimeFormatOptions,\n  useOnlyHasVersions,\n  usePerspective,\n  useSchema,\n  useSetPerspective,\n  useTranslation,\n  useWorkspace,\n  VersionChip,\n} from 'sanity'\n\nimport {isLiveEditEnabled} from '../../../../../components/paneItem/helpers'\nimport {usePaneRouter} from '../../../../../components/paneRouter/usePaneRouter'\nimport {useFilteredReleases} from '../../../../../hooks/useFilteredReleases'\nimport {useDocumentPane} from '../../../useDocumentPane'\n\nconst TooltipContent = ({release}: {release: ReleaseDocument}) => {\n  const {t} = useTranslation()\n\n  if (release.state === 'archived') {\n    return <Text size={1}>{t('release.chip.tooltip.archived')}</Text>\n  }\n  if (release.metadata.releaseType === 'asap') {\n    return <Text size={1}>{t('release.type.asap')}</Text>\n  }\n  if (release.metadata.releaseType === 'scheduled') {\n    const isActive = release.state === 'active'\n\n    return (\n      release.metadata.intendedPublishAt && (\n        <Text size={1}>\n          {isActive ? (\n            <Translate\n              t={t}\n              i18nKey=\"release.chip.tooltip.intended-for-date\"\n              values={{\n                date: formatRelativeLocalePublishDate(release),\n              }}\n            />\n          ) : (\n            <Translate\n              t={t}\n              i18nKey=\"release.chip.tooltip.scheduled-for-date\"\n              values={{\n                date: formatRelativeLocalePublishDate(release),\n              }}\n            />\n          )}\n        </Text>\n      )\n    )\n  }\n\n  if (release.metadata.releaseType === 'undecided') {\n    return <Text size={1}>{t('release.type.undecided')}</Text>\n  }\n  return null\n}\n\nconst DATE_TIME_FORMAT: UseDateTimeFormatOptions = {\n  dateStyle: 'medium',\n  timeStyle: 'short',\n}\n\n// eslint-disable-next-line complexity\nexport const DocumentPerspectiveList = memo(function DocumentPerspectiveList() {\n  const {selectedReleaseId, selectedPerspectiveName} = usePerspective()\n  const {t} = useTranslation()\n  const setPerspective = useSetPerspective()\n  const {params, setParams} = usePaneRouter()\n  const dateTimeFormat = useDateTimeFormat(DATE_TIME_FORMAT)\n  const {loading} = useActiveReleases()\n  const schema = useSchema()\n  const {editState, displayed, documentType, documentId} = useDocumentPane()\n  const isCreatingDocument = displayed && !displayed._createdAt\n  const filteredReleases = useFilteredReleases({displayed, documentId})\n  const onlyHasVersions = useOnlyHasVersions({documentId})\n  const workspace = useWorkspace()\n\n  const handlePerspectiveChange = useCallback(\n    (perspective: Parameters<typeof setPerspective>[0]) => () => {\n      if (perspective === 'published' && params?.historyVersion) {\n        setParams({\n          ...params,\n          rev: params?.historyEvent || undefined,\n          since: undefined,\n          historyVersion: undefined,\n        })\n      }\n      setPerspective(perspective)\n    },\n    [setPerspective, setParams, params],\n  )\n\n  const schemaType = schema.get(documentType)\n  const isLiveEdit = schemaType ? isLiveEditEnabled(schemaType) : false\n\n  const isPublishedChipDisabled = useMemo(() => {\n    // If it's a live edit document the only option to edit it is through\n    // the published perspective, users should be able to select it.\n    if (isLiveEdit && !selectedReleaseId) return false\n\n    // If it's not live edit, we want to check for the existence of the published doc.\n    return !editState?.published\n  }, [isLiveEdit, selectedReleaseId, editState?.published])\n\n  const getReleaseChipState = useCallback(\n    (release: ReleaseDocument): {selected: boolean; disabled?: boolean} => {\n      if (!params?.historyVersion) {\n        const isCurrentVersionGoingToUnpublish =\n          editState?.version &&\n          isGoingToUnpublish(editState?.version) &&\n          getReleaseIdFromReleaseDocumentId(release._id) ===\n            getVersionFromId(editState?.version?._id)\n\n        return {\n          selected: Boolean(\n            getReleaseIdFromReleaseDocumentId(release._id) ===\n              getVersionFromId(displayed?._id || '') || isCurrentVersionGoingToUnpublish,\n          ),\n        }\n      }\n\n      const isReleaseHistoryMatch =\n        getReleaseIdFromReleaseDocumentId(release._id) === params.historyVersion\n\n      return {selected: isReleaseHistoryMatch, disabled: isReleaseHistoryMatch}\n    },\n    [displayed?._id, editState?.version, params?.historyVersion],\n  )\n\n  const isPublishSelected: boolean = useMemo(() => {\n    /**\n     * The publish perspective is selected when:\n     *  - the document is live edit and there is no draft\n     *  - the document is published and the selected perspective is published\n     */\n    if (isLiveEdit && !editState?.draft?._id && !selectedReleaseId) return true\n    if (\n      isPublishedId(displayed?._id || '') &&\n      isPublishedPerspective(selectedPerspectiveName || '')\n    ) {\n      return true\n    }\n    return false\n  }, [\n    displayed?._id,\n    editState?.draft?._id,\n    isLiveEdit,\n    selectedPerspectiveName,\n    selectedReleaseId,\n  ])\n\n  const isDraftSelected: boolean = useMemo(() => {\n    const displayedId = displayed?._id || ''\n    /** the draft is selected when:\n     * not viewing a historical version,\n     * when the document displayed is a draft,\n     * when the perspective is null,\n     * when the document is not published and the displayed version is draft,\n     * when there is no draft (new document),\n     */\n    if (isPublishSelected) return false\n    if (params?.historyVersion) return false\n    if (selectedPerspectiveName) return false\n    if (isVersionId(displayedId)) return false\n    if (isDraftId(displayedId)) return true\n    if (\n      isPublishedId(displayedId) &&\n      editState?.published &&\n      isPublishedPerspective(selectedPerspectiveName || '')\n    )\n      return false\n    return true\n  }, [\n    displayed?._id,\n    editState?.published,\n    isPublishSelected,\n    params?.historyVersion,\n    selectedPerspectiveName,\n  ])\n\n  const isDraftDisabled: boolean = useMemo(() => {\n    // Draft is disabled when the document has no published or draft but has versions\n    if (onlyHasVersions || (isCreatingDocument && selectedReleaseId)) {\n      return true\n    }\n\n    // Draft is disabled when we are creating a new document inside a release\n    // or when the document is live edit and there is no draft\n    if (!editState?.draft && !isLiveEdit) {\n      return false\n    }\n\n    if (isCreatingDocument && selectedReleaseId) return true\n    if (isLiveEdit) return true\n    return false\n  }, [editState?.draft, isCreatingDocument, isLiveEdit, onlyHasVersions, selectedReleaseId])\n\n  const isDraftModelEnabled = workspace.document.drafts?.enabled\n\n  return (\n    <>\n      <VersionChip\n        tooltipContent={\n          <Text size={1}>\n            {editState?.published && editState?.published?._updatedAt ? (\n              <Translate\n                t={t}\n                i18nKey=\"release.chip.tooltip.published-date\"\n                values={{date: dateTimeFormat.format(new Date(editState?.published._updatedAt))}}\n              />\n            ) : (\n              <>{t('release.chip.tooltip.not-published')}</>\n            )}\n          </Text>\n        }\n        disabled={isPublishedChipDisabled}\n        onClick={handlePerspectiveChange('published')}\n        selected={isPublishSelected}\n        text={t('release.chip.published')}\n        tone=\"positive\"\n        contextValues={{\n          documentId: editState?.published?._id || editState?.id || '',\n          menuReleaseId: editState?.published?._id || editState?.id || '',\n          releases: filteredReleases.notCurrentReleases,\n          releasesLoading: loading,\n          documentType,\n          fromRelease: 'published',\n          isVersion: false,\n          disabled: !editState?.published,\n        }}\n      />\n      {isDraftModelEnabled && (\n        <VersionChip\n          tooltipContent={\n            <Text size={1}>\n              {editState?.draft ? (\n                <>\n                  {editState?.draft._updatedAt ? (\n                    <Translate\n                      t={t}\n                      i18nKey=\"release.chip.tooltip.edited-date\"\n                      values={{date: dateTimeFormat.format(new Date(editState?.draft._updatedAt))}}\n                    />\n                  ) : (\n                    <Translate\n                      t={t}\n                      i18nKey=\"release.chip.tooltip.created-date\"\n                      values={{date: dateTimeFormat.format(new Date(editState?.draft._createdAt))}}\n                    />\n                  )}\n                </>\n              ) : (\n                <>\n                  {isLiveEdit\n                    ? t('release.chip.tooltip.draft-disabled.live-edit')\n                    : t('release.chip.tooltip.no-edits')}\n                </>\n              )}\n            </Text>\n          }\n          selected={isDraftSelected}\n          disabled={isDraftDisabled}\n          text={t('release.chip.draft')}\n          tone={editState?.draft ? 'caution' : 'neutral'}\n          onClick={handlePerspectiveChange('drafts')}\n          contextValues={{\n            documentId: editState?.draft?._id || editState?.published?._id || editState?.id || '',\n            menuReleaseId:\n              editState?.draft?._id || editState?.published?._id || editState?.id || '',\n            releases: filteredReleases.notCurrentReleases,\n            releasesLoading: loading,\n            documentType: documentType,\n            fromRelease: 'draft',\n            isVersion: false,\n          }}\n        />\n      )}\n      {filteredReleases.inCreation && (\n        <VersionChip\n          tooltipContent={<TooltipContent release={filteredReleases.inCreation} />}\n          selected\n          onClick={() => {}}\n          locked={false}\n          tone={getReleaseTone(filteredReleases.inCreation)}\n          text={\n            filteredReleases.inCreation.metadata.title || t('release.placeholder-untitled-release')\n          }\n          contextValues={{\n            disabled: true, // disable the chip context menu, this one is in creation\n            documentId: displayed?._id || '',\n            menuReleaseId: filteredReleases.inCreation._id,\n            releases: filteredReleases.notCurrentReleases,\n            releasesLoading: loading,\n            documentType,\n            fromRelease: getReleaseIdFromReleaseDocumentId(filteredReleases.inCreation._id),\n            releaseState: filteredReleases.inCreation.state,\n            isVersion: true,\n          }}\n        />\n      )}\n\n      {displayed &&\n        filteredReleases.currentReleases?.map((release) => (\n          <VersionChip\n            key={release._id}\n            tooltipContent={<TooltipContent release={release} />}\n            {...getReleaseChipState(release)}\n            onClick={handlePerspectiveChange(getReleaseIdFromReleaseDocumentId(release._id))}\n            text={release.metadata.title || t('release.placeholder-untitled-release')}\n            tone={getReleaseTone(release)}\n            locked={isReleaseScheduledOrScheduling(release)}\n            contextValues={{\n              documentId: displayed?._id || '',\n              menuReleaseId: release._id,\n              releases: filteredReleases.notCurrentReleases,\n              releasesLoading: loading,\n              documentType: documentType,\n              fromRelease: getReleaseIdFromReleaseDocumentId(release._id),\n              releaseState: release.state,\n              isVersion: true,\n              // displayed, in this instance is not going to be the version to compare to\n              // since it's going to be the published version\n              isGoingToUnpublish: editState?.version\n                ? isGoingToUnpublish(editState?.version as SanityDocumentLike)\n                : false,\n            }}\n          />\n        ))}\n    </>\n  )\n})\n","import {ArrowLeftIcon, CloseIcon, SplitVerticalIcon} from '@sanity/icons'\nimport {Box, Card, Flex} from '@sanity/ui'\n// eslint-disable-next-line camelcase\nimport {getTheme_v2, rgba} from '@sanity/ui/theme'\nimport {\n  type ForwardedRef,\n  forwardRef,\n  memo,\n  useCallback,\n  useDeferredValue,\n  useMemo,\n  useRef,\n  useState,\n} from 'react'\nimport {type DocumentActionDescription, useFieldActions, useTranslation} from 'sanity'\nimport {css, styled} from 'styled-components'\n\nimport {Button, TooltipDelayGroupProvider} from '../../../../../ui-components'\nimport {\n  PaneContextMenuButton,\n  PaneHeader,\n  PaneHeaderActionButton,\n  RenderActionCollectionState,\n  usePane,\n  usePaneRouter,\n} from '../../../../components'\nimport {type _PaneMenuNode} from '../../../../components/pane/types'\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {isMenuNodeButton, isNotMenuNodeButton, resolveMenuNodes} from '../../../../menuNodes'\nimport {type PaneMenuItem} from '../../../../types'\nimport {useStructureTool} from '../../../../useStructureTool'\nimport {ActionDialogWrapper, ActionMenuListItem} from '../../statusBar/ActionMenuButton'\nimport {isRestoreAction} from '../../statusBar/DocumentStatusBarActions'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {DocumentHeaderTitle} from './DocumentHeaderTitle'\nimport {useChipScrollPosition} from './hook/useChipScrollPosition'\nimport {DocumentPerspectiveList} from './perspective/DocumentPerspectiveList'\n\nexport interface DocumentPanelHeaderProps {\n  menuItems: PaneMenuItem[]\n}\n\nconst HorizontalScroller = styled(Card)<{$showGradient: boolean}>((props) => {\n  const theme = getTheme_v2(props.theme)\n\n  return css`\n    scrollbar-width: none;\n    z-index: 1;\n    flex: 1;\n    position: relative;\n    > div {\n      &::-webkit-scrollbar {\n        width: 0;\n        height: 0;\n      }\n    }\n\n    ${props.$showGradient &&\n    css`\n      &::after {\n        content: '';\n        display: block;\n        position: absolute;\n        top: 0;\n        right: 0;\n        bottom: 0;\n        width: 150px;\n        background: linear-gradient(to right, ${rgba(theme.color.bg, 0)}, var(--card-bg-color));\n        transition: 'opacity 300ms ease-out';\n        pointer-events: none;\n      }\n    `}\n  `\n})\n\nexport const DocumentPanelHeader = memo(\n  forwardRef(function DocumentPanelHeader(\n    _props: DocumentPanelHeaderProps,\n    ref: ForwardedRef<HTMLDivElement>,\n  ) {\n    const {menuItems} = _props\n    const {\n      actions: allActions,\n      editState,\n      onMenuAction,\n      isInitialValueLoading,\n      onPaneClose,\n      onPaneSplit,\n      menuItemGroups,\n      schemaType,\n      connectionState,\n      views,\n      unstable_languageFilter,\n    } = useDocumentPane()\n    const {features} = useStructureTool()\n    const {index, BackLink, hasGroupSiblings} = usePaneRouter()\n    const {actions: fieldActions} = useFieldActions()\n    const [referenceElement, setReferenceElement] = useState<HTMLElement | null>(null)\n    const scrollContainerRef = useRef<HTMLDivElement>(null)\n    const showGradient = useChipScrollPosition(scrollContainerRef)\n\n    // The restore action has a dedicated place in the UI; it's only visible when the user is\n    // viewing a different document revision. It must be omitted from this collection.\n    const actions = useMemo(\n      () => (allActions ?? []).filter((action) => !isRestoreAction(action)),\n      [allActions],\n    )\n\n    const menuNodes = useMemo(\n      () =>\n        resolveMenuNodes({actionHandler: onMenuAction, fieldActions, menuItems, menuItemGroups}),\n      [onMenuAction, fieldActions, menuItemGroups, menuItems],\n    )\n\n    const menuButtonNodes = useMemo(() => menuNodes.filter(isMenuNodeButton), [menuNodes])\n    const contextMenuNodes = useMemo(() => menuNodes.filter(isNotMenuNodeButton), [menuNodes])\n    const showTabs = views.length > 1\n\n    const {collapsed, isLast} = usePane()\n    // Prevent focus if this is the last (non-collapsed) pane.\n    const tabIndex = isLast && !collapsed ? -1 : 0\n\n    // there are three kinds of buttons possible:\n    //\n    // 1. split pane - creates a new split pane\n    // 2. close split pane — closes the current split pane\n    // 3. close pane group — closes the current pane group\n\n    // show the split pane button if they're enabled and there is more than one\n    // view available to use to create a split view\n    const showSplitPaneButton = features.splitViews && onPaneSplit && views.length > 1\n\n    // show the split pane button close button if the split button is showing\n    // and there is more than one split pane open (aka has-siblings)\n    const showSplitPaneCloseButton = showSplitPaneButton && hasGroupSiblings\n\n    // show the back button if both the feature is enabled and the current pane\n    // is not the first\n    const showBackButton = features.backButton && index > 0\n\n    // show the pane group close button if the `showSplitPaneCloseButton` is\n    // _not_ showing (the split pane button replaces the group close button)\n    // and if the back button is not showing (the back button and the close\n    // button do the same thing and shouldn't be shown at the same time)\n    // and if a BackLink component was provided\n    const showPaneGroupCloseButton = !showSplitPaneCloseButton && !showBackButton && !!BackLink\n\n    const {t} = useTranslation(structureLocaleNamespace)\n\n    const renderPaneActions = useCallback<\n      (props: {states: DocumentActionDescription[]}) => React.ReactNode\n    >(\n      ({states}) => (\n        <DocumentPanelHeaderActionDialogDeferred\n          contextMenuNodes={contextMenuNodes}\n          setReferenceElement={setReferenceElement}\n          referenceElement={referenceElement}\n          states={states}\n        />\n      ),\n      [contextMenuNodes, referenceElement],\n    )\n\n    const title = useMemo(() => <DocumentHeaderTitle />, [])\n    const backButton = useMemo(\n      () =>\n        showBackButton && (\n          <Button\n            as={BackLink}\n            data-as=\"a\"\n            icon={ArrowLeftIcon}\n            mode=\"bleed\"\n            tooltipProps={{content: t('pane-header.back-button.text')}}\n          />\n        ),\n      [BackLink, showBackButton, t],\n    )\n    const renderedActions = useMemo(\n      () => (\n        <Flex align=\"center\" gap={1}>\n          {unstable_languageFilter.length > 0 && (\n            <>\n              {unstable_languageFilter.map((LanguageFilterComponent, idx) => {\n                return (\n                  <LanguageFilterComponent key={`language-filter-${idx}`} schemaType={schemaType} />\n                )\n              })}\n            </>\n          )}\n\n          {menuButtonNodes.map((item) => (\n            <PaneHeaderActionButton key={item.key} node={item} />\n          ))}\n          {editState && (\n            <RenderActionCollectionState\n              actions={actions}\n              actionProps={{...editState, initialValueResolved: !isInitialValueLoading}}\n              group=\"paneActions\"\n            >\n              {renderPaneActions}\n            </RenderActionCollectionState>\n          )}\n\n          {showSplitPaneButton && (\n            <Button\n              key=\"split-pane-button\"\n              aria-label={t('buttons.split-pane-button.aria-label')}\n              icon={SplitVerticalIcon}\n              mode=\"bleed\"\n              onClick={onPaneSplit}\n              tooltipProps={{content: t('buttons.split-pane-button.tooltip')}}\n            />\n          )}\n\n          {showSplitPaneCloseButton && (\n            <Button\n              key=\"close-view-button\"\n              icon={CloseIcon}\n              mode=\"bleed\"\n              onClick={onPaneClose}\n              tooltipProps={{content: t('buttons.split-pane-close-button.title')}}\n            />\n          )}\n\n          {showPaneGroupCloseButton && (\n            <Button\n              key=\"close-view-button\"\n              icon={CloseIcon}\n              mode=\"bleed\"\n              tooltipProps={{content: t('buttons.split-pane-close-group-button.title')}}\n              as={BackLink}\n            />\n          )}\n        </Flex>\n      ),\n      [\n        BackLink,\n        actions,\n        editState,\n        isInitialValueLoading,\n        menuButtonNodes,\n        onPaneClose,\n        onPaneSplit,\n        renderPaneActions,\n        schemaType,\n        showPaneGroupCloseButton,\n        showSplitPaneButton,\n        showSplitPaneCloseButton,\n        t,\n        unstable_languageFilter,\n      ],\n    )\n\n    return (\n      <TooltipDelayGroupProvider>\n        {collapsed ? (\n          <PaneHeader\n            border\n            ref={ref}\n            loading={connectionState === 'connecting' && !editState?.draft && !editState?.published}\n            title={title}\n            tabIndex={tabIndex}\n            backButton={backButton}\n          />\n        ) : (\n          <Card hidden={collapsed} style={{lineHeight: 0}} borderBottom>\n            <Flex gap={3} paddingY={3}>\n              <HorizontalScroller $showGradient={showGradient}>\n                <Flex\n                  flex={1}\n                  gap={1}\n                  overflow=\"auto\"\n                  paddingX={3}\n                  data-testid=\"document-perspective-list\"\n                  ref={scrollContainerRef}\n                >\n                  <DocumentPerspectiveList />\n                </Flex>\n              </HorizontalScroller>\n\n              <Box flex=\"none\" paddingRight={3}>\n                {renderedActions}\n              </Box>\n            </Flex>\n          </Card>\n        )}\n      </TooltipDelayGroupProvider>\n    )\n  }),\n)\n\nconst DocumentPanelHeaderActionDialogDeferred = memo(\n  function DocumentPanelHeaderActionDialogDeferred(props: {\n    states: DocumentActionDescription[]\n    setReferenceElement: React.Dispatch<React.SetStateAction<HTMLElement | null>>\n    referenceElement: HTMLElement | null\n    contextMenuNodes: _PaneMenuNode[]\n  }) {\n    const {setReferenceElement, referenceElement, contextMenuNodes} = props\n    /**\n     * The purpose of this component is to allow deferring the rendering of document action hook states if the main thread becomes very busy.\n     * The `useDeferredValue` doesn't have an effect unless it's used to delay rendering a component that has `React.memo` to prevent unnecessary re-renders.\n     */\n    const states = useDeferredValue(props.states)\n\n    return (\n      <DocumentPanelHeaderActionDialog\n        setReferenceElement={setReferenceElement}\n        referenceElement={referenceElement}\n        contextMenuNodes={contextMenuNodes}\n        states={states}\n      />\n    )\n  },\n)\n\nconst DocumentPanelHeaderActionDialog = memo(function DocumentPanelHeaderActionDialog(props: {\n  states: DocumentActionDescription[]\n  setReferenceElement: React.Dispatch<React.SetStateAction<HTMLElement | null>>\n  referenceElement: HTMLElement | null\n  contextMenuNodes: _PaneMenuNode[]\n}) {\n  const {states, setReferenceElement, contextMenuNodes, referenceElement} = props\n\n  const renderActionDialog = useCallback<\n    ({handleAction}: {handleAction: (idx: number) => void}) => React.ReactNode\n  >(\n    ({handleAction}) => (\n      <div ref={setReferenceElement}>\n        <PaneContextMenuButton\n          key=\"context-menu\"\n          nodes={contextMenuNodes}\n          actionsNodes={\n            states.length > 0\n              ? states.map((actionState, actionIndex) => (\n                  <ActionMenuListItem\n                    key={actionState.label}\n                    actionState={actionState}\n                    disabled={Boolean(actionState.disabled)}\n                    index={actionIndex}\n                    onAction={handleAction}\n                  />\n                ))\n              : undefined\n          }\n        />\n      </div>\n    ),\n    [contextMenuNodes, setReferenceElement, states],\n  )\n\n  return (\n    <ActionDialogWrapper actionStates={states} referenceElement={referenceElement}>\n      {renderActionDialog}\n    </ActionDialogWrapper>\n  )\n})\n","import {Button, type ButtonProps} from '../../../ui-components'\n\ninterface SpacerButtonProps {\n  size?: ButtonProps['size']\n}\n\n/**\n * This renders a visually hidden <Button> component that is still contributes\n * to document layout.\n *\n * It's used to simplify padding in Sanity UI components that contain buttons which\n * may not always be rendered.\n *\n * TODO: let's find a more elegant solve to this layout shift problem\n *\n * @internal\n */\nexport function SpacerButton({size}: SpacerButtonProps) {\n  return (\n    <Button\n      aria-hidden\n      disabled\n      size={size}\n      style={{\n        pointerEvents: 'none',\n        visibility: 'hidden',\n        width: 0,\n      }}\n      text=\"-\"\n    />\n  )\n}\n","import {Badge, type BadgeTone, Inline} from '@sanity/ui'\nimport {memo, useCallback, useDeferredValue} from 'react'\nimport {type DocumentBadgeDescription} from 'sanity'\n\nimport {Tooltip} from '../../../../ui-components'\nimport {RenderBadgeCollectionState} from '../../../components'\nimport {useDocumentPane} from '../useDocumentPane'\n\ninterface DocumentBadgesInnerProps {\n  states: DocumentBadgeDescription[]\n}\n\nconst BADGE_TONES: Record<string, BadgeTone | undefined> = {\n  primary: 'primary',\n  success: 'positive',\n  warning: 'caution',\n  danger: 'critical',\n}\n\nconst DocumentBadgesInner = memo(function DocumentBadgesInner({states}: DocumentBadgesInnerProps) {\n  if (states.length === 0) {\n    return null\n  }\n  return (\n    <Inline space={1}>\n      {states.map((badge, index) => (\n        <Tooltip\n          key={`${badge.label}-${index}`}\n          content={badge.title}\n          disabled={!badge.title}\n          placement=\"top\"\n          portal\n        >\n          <Badge\n            fontSize={1}\n            mode=\"outline\"\n            paddingX={2}\n            paddingY={1}\n            radius={4}\n            tone={badge.color ? BADGE_TONES[badge.color] : undefined}\n            style={{whiteSpace: 'nowrap'}}\n          >\n            {badge.label}\n          </Badge>\n        </Tooltip>\n      ))}\n    </Inline>\n  )\n})\n\nconst DocumentBadgesDeferred = memo(function DocumentBadgesDeferred(\n  props: DocumentBadgesInnerProps,\n) {\n  /**\n   * The purpose of this component is to allow deferring the rendering of document action hook states if the main thread becomes very busy.\n   * The `useDeferredValue` doesn't have an effect unless it's used to delay rendering a component that has `React.memo` to prevent unnecessary re-renders.\n   */\n  const states = useDeferredValue(props.states)\n  return <DocumentBadgesInner states={states} />\n})\n\nexport function DocumentBadges() {\n  const {badges, editState} = useDocumentPane()\n\n  const renderDocumentBadges = useCallback<\n    (props: {states: DocumentBadgeDescription[]}) => React.ReactNode\n  >(({states}) => <DocumentBadgesDeferred states={states} />, [])\n\n  if (!editState || !badges) return null\n\n  return (\n    <RenderBadgeCollectionState badges={badges} badgeProps={editState}>\n      {renderDocumentBadges}\n    </RenderBadgeCollectionState>\n  )\n}\n","import {\n  AddIcon,\n  CloseIcon,\n  EditIcon,\n  type IconComponent,\n  PublishIcon,\n  TrashIcon,\n  UnpublishIcon,\n} from '@sanity/icons'\n\nexport const TIMELINE_ICON_COMPONENTS: {[key: string]: IconComponent | undefined} = {\n  create: AddIcon,\n  delete: TrashIcon,\n  discardDraft: CloseIcon,\n  initial: AddIcon,\n  editDraft: EditIcon,\n  editLive: EditIcon,\n  publish: PublishIcon,\n  unpublish: UnpublishIcon,\n}\n","import {type IconComponent} from '@sanity/icons'\nimport {type ChunkType} from 'sanity'\n\nimport {TIMELINE_ICON_COMPONENTS} from './constants'\n\nexport function getTimelineEventIconComponent(type: ChunkType): IconComponent | undefined {\n  return TIMELINE_ICON_COMPONENTS[type]\n}\n","import {ChevronLeftIcon} from '@sanity/icons'\nimport {type MouseEvent, useCallback} from 'react'\nimport {useTranslation} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Button} from '../../../../ui-components'\nimport {structureLocaleNamespace} from '../../../i18n'\nimport {TIMELINE_LIST_WRAPPER_ID} from './timeline'\n\n/**\n * This is a hack to force the scrollbar to not appear when the list is expanding,\n * if we don't do this the scrollbar will appear for a brief moment when the list is expanding and then disappear\n * when the list is fully expanded.\n */\nfunction hideScrollbarOnExpand(isExpanded: boolean) {\n  // Do nothing if the list is already expanded\n  if (isExpanded) return\n\n  const listWrapper = document.getElementById(TIMELINE_LIST_WRAPPER_ID)\n\n  if (listWrapper) {\n    const firstChildren = listWrapper.children[0] as HTMLElement\n    const hasScrollbar = firstChildren.scrollHeight > firstChildren.clientHeight\n    if (!hasScrollbar) {\n      //\n      const currentStyle = getComputedStyle(firstChildren).overflowY\n      // Add overflow hidden to the listWrapper to avoid the scrollbar to appear when expanding\n      firstChildren.style.overflowY = 'hidden'\n      setTimeout(() => {\n        // Reset the overflow style after the list is expanded\n        firstChildren.style.overflowY = currentStyle\n      }, 0)\n    }\n  }\n}\n\nconst FlipIcon = styled(ChevronLeftIcon)`\n  transition: transform 200ms;\n  &[data-expanded='true'] {\n    transform: rotate(-90deg);\n  }\n`\n\nexport function ExpandableTimelineItemButton({\n  isExpanded,\n  onExpand,\n}: {\n  isExpanded: boolean\n  onExpand: () => void\n}) {\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const handleExpandClick = useCallback(\n    (e: MouseEvent<HTMLButtonElement>) => {\n      e.stopPropagation()\n      hideScrollbarOnExpand(isExpanded)\n      onExpand()\n    },\n    [onExpand, isExpanded],\n  )\n\n  return (\n    <Button\n      mode=\"bleed\"\n      icon={<FlipIcon data-expanded={isExpanded} />}\n      tooltipProps={{\n        content: isExpanded\n          ? t('timeline-item.menu.action-collapse')\n          : t('timeline-item.menu.action-expand'),\n      }}\n      onClick={handleExpandClick}\n    />\n  )\n}\n","import {Box, Flex, Stack} from '@sanity/ui'\nimport {css, styled} from 'styled-components'\n\nexport const StackWrapper = styled(Stack)`\n  max-width: 200px;\n`\n\nexport const ListWrapper = styled(Flex)<{$maxHeight: string}>`\n  max-height: ${(props) => props.$maxHeight};\n  min-width: 244px;\n`\n\nexport const Root = styled(Box)<{$visible?: boolean}>(({$visible}) => {\n  return css`\n    opacity: 0;\n    pointer-events: none;\n    transition: opacity 0.2s;\n\n    ${$visible &&\n    css`\n      opacity: 1;\n      pointer-events: auto;\n    `}\n  `\n})\n","import {type ChunkType, type StudioLocaleResourceKeys} from 'sanity'\n\n/**\n * Maps from a chunk type to an i18n key for the operation\n *\n * @internal\n */\nexport const TIMELINE_ITEM_I18N_KEY_MAPPING: Record<ChunkType, StudioLocaleResourceKeys> = {\n  initial: 'timeline.operation.created-initial',\n  create: 'timeline.operation.created',\n  publish: 'timeline.operation.published',\n  editLive: 'timeline.operation.edited-live',\n  editDraft: 'timeline.operation.edited-draft',\n  unpublish: 'timeline.operation.unpublished',\n  discardDraft: 'timeline.operation.draft-discarded',\n  delete: 'timeline.operation.deleted',\n}\n","import {type AvatarSize, AvatarStack} from '@sanity/ui'\nimport {UserAvatar} from 'sanity'\n\ninterface UserAvatarStackProps {\n  maxLength?: number\n  userIds: string[]\n  size?: AvatarSize\n  withTooltip?: boolean\n}\n\nexport function UserAvatarStack({\n  maxLength,\n  userIds,\n  size,\n  withTooltip = true,\n}: UserAvatarStackProps) {\n  return (\n    <AvatarStack maxLength={maxLength} size={size}>\n      {userIds.map((userId) => (\n        <UserAvatar key={userId} user={userId} withTooltip={withTooltip} />\n      ))}\n    </AvatarStack>\n  )\n}\n","import {Box, Card, Flex, Skeleton, Stack, Text} from '@sanity/ui'\n// eslint-disable-next-line camelcase\nimport {getTheme_v2, type ThemeColorAvatarColorKey} from '@sanity/ui/theme'\nimport {type MouseEvent, useCallback, useMemo} from 'react'\nimport {\n  AvatarSkeleton,\n  type ChunkType,\n  type RelativeTimeOptions,\n  useDateTimeFormat,\n  UserAvatar,\n  useRelativeTime,\n  useTranslation,\n  useUser,\n} from 'sanity'\nimport {css, styled} from 'styled-components'\n\nimport {Tooltip} from '../../../../ui-components'\nimport {getTimelineEventIconComponent} from './helpers'\nimport {TIMELINE_ITEM_I18N_KEY_MAPPING} from './timelineI18n'\nimport {UserAvatarStack} from './userAvatarStack'\nimport {type ChunksWithCollapsedDrafts} from './utils'\n\nexport const IconBox = styled(Flex)<{$color: ThemeColorAvatarColorKey}>((props) => {\n  const theme = getTheme_v2(props.theme)\n  const color = props.$color\n\n  return css`\n    --card-icon-color: ${theme.color.avatar[color].fg};\n    background-color: ${theme.color.avatar[color].bg};\n    box-shadow: 0 0 0 1px var(--card-bg-color);\n\n    position: absolute;\n    width: ${theme.avatar.sizes[0].size}px;\n    height: ${theme.avatar.sizes[0].size}px;\n    right: -3px;\n    bottom: -3px;\n    border-radius: 50%;\n  `\n})\n\nconst TIMELINE_ITEM_EVENT_TONE: Record<ChunkType | 'withinSelection', ThemeColorAvatarColorKey> = {\n  initial: 'blue',\n  create: 'blue',\n  publish: 'green',\n  editLive: 'green',\n  editDraft: 'yellow',\n  unpublish: 'orange',\n  discardDraft: 'orange',\n  delete: 'red',\n  withinSelection: 'magenta',\n}\n\nexport interface TimelineItemProps {\n  chunk: ChunksWithCollapsedDrafts\n  isSelected: boolean\n  onSelect: (chunk: ChunksWithCollapsedDrafts) => void\n  collaborators?: Set<string>\n  optionsMenu?: React.ReactNode\n}\n\nconst RELATIVE_TIME_OPTIONS: RelativeTimeOptions = {\n  minimal: true,\n  useTemporalPhrase: true,\n}\n\nconst NameSkeleton = styled(Skeleton)((props) => {\n  const theme = getTheme_v2(props.theme)\n  return css`\n    width: 6ch;\n    height: ${theme.font.text.sizes[0].lineHeight}px;\n  `\n})\n\nconst UserLine = ({userId}: {userId: string}) => {\n  const [user, loading] = useUser(userId)\n\n  return (\n    <Flex key={userId} align=\"center\" gap={2} padding={1}>\n      <Box>{loading || !user ? <AvatarSkeleton animated /> : <UserAvatar user={user} />}</Box>\n      <Box>\n        {loading || !user?.displayName ? (\n          <Text size={1}>\n            <NameSkeleton animated />\n          </Text>\n        ) : (\n          <Text muted size={1}>\n            {user.displayName}\n          </Text>\n        )}\n      </Box>\n    </Flex>\n  )\n}\nconst TooltipContent = ({collaborators}: {collaborators: string[]}) => {\n  const {t} = useTranslation('studio')\n  return (\n    <Stack paddingBottom={1}>\n      <Box padding={1} paddingBottom={2}>\n        <Text size={1} weight=\"medium\">\n          {t('timeline.changes.title')}\n        </Text>\n      </Box>\n      {collaborators.map((userId) => (\n        <UserLine key={userId} userId={userId} />\n      ))}\n    </Stack>\n  )\n}\nexport function TimelineItem({\n  chunk,\n  isSelected,\n  onSelect,\n  collaborators,\n  optionsMenu,\n}: TimelineItemProps) {\n  const {t} = useTranslation('studio')\n  const {type, endTimestamp: timestamp} = chunk\n  const IconComponent = getTimelineEventIconComponent(type)\n  const authorUserIds = Array.from(chunk.authors)\n  const collaboratorsUsersIds = collaborators ? Array.from(collaborators) : []\n  const isSelectable = type !== 'delete'\n  const dateFormat = useDateTimeFormat({dateStyle: 'medium', timeStyle: 'short'})\n  const date = new Date(timestamp)\n\n  const updatedTimeAgo = useRelativeTime(date || '', RELATIVE_TIME_OPTIONS)\n\n  const formattedTimestamp = useMemo(() => {\n    const parsedDate = new Date(timestamp)\n    const formattedDate = dateFormat.format(parsedDate)\n\n    return formattedDate\n  }, [timestamp, dateFormat])\n\n  const handleClick = useCallback(\n    (evt: MouseEvent<HTMLDivElement>) => {\n      evt.preventDefault()\n      evt.stopPropagation()\n\n      if (isSelectable) {\n        onSelect(chunk)\n      }\n    },\n    [onSelect, chunk, isSelectable],\n  )\n\n  return (\n    <Flex align=\"center\" gap={1}>\n      <Card\n        as=\"button\"\n        onClick={handleClick}\n        padding={2}\n        pressed={isSelected}\n        radius={2}\n        data-ui=\"timelineItem\"\n        data-testid=\"timeline-item-button\"\n        data-chunk-id={chunk.id}\n      >\n        <Flex align=\"center\" gap={3}>\n          <div style={{position: 'relative'}}>\n            <UserAvatarStack maxLength={3} userIds={authorUserIds} size={2} />\n            <IconBox align=\"center\" justify=\"center\" $color={TIMELINE_ITEM_EVENT_TONE[type]}>\n              <Text size={0}>{IconComponent && <IconComponent />}</Text>\n            </IconBox>\n          </div>\n          <Stack space={2}>\n            <Text size={1} weight=\"medium\">\n              {t(TIMELINE_ITEM_I18N_KEY_MAPPING[type]) || <code>{type}</code>}\n            </Text>\n\n            <Text as=\"time\" size={1} muted dateTime={timestamp} title={formattedTimestamp}>\n              {updatedTimeAgo}\n            </Text>\n          </Stack>\n\n          {collaboratorsUsersIds.length > 0 && (\n            <Flex flex={1} justify=\"flex-end\" align=\"center\">\n              <Tooltip\n                placement=\"top\"\n                content={<TooltipContent collaborators={collaboratorsUsersIds} />}\n                portal\n              >\n                <Box paddingLeft={2} paddingY={2}>\n                  <UserAvatarStack\n                    maxLength={3}\n                    userIds={collaboratorsUsersIds}\n                    size={0}\n                    withTooltip={false}\n                  />\n                </Box>\n              </Tooltip>\n            </Flex>\n          )}\n        </Flex>\n      </Card>\n      {optionsMenu}\n    </Flex>\n  )\n}\n","import {type Chunk, type ChunkType} from 'sanity'\n\nexport type NonPublishChunk = Omit<Chunk, 'type'> & {\n  type: Exclude<ChunkType, 'publish'>\n  parentId?: string\n}\n\nexport type PublishChunk = Omit<Chunk, 'type'> & {\n  type: 'publish'\n  children: string[]\n  collaborators: Set<string>\n}\n\nexport const isNonPublishChunk = (chunk: Chunk): chunk is NonPublishChunk =>\n  chunk.type !== 'publish'\n\nexport const isPublishChunk = (chunk: Chunk): chunk is PublishChunk => chunk.type === 'publish'\n\n/**\n * searches for the previous publish action in the list of chunks\n * e.g. chunks = [publish, edit, publish, edit, edit] it needs to return the second publish action\n * e.g. chunks = [publish, edit, delete, edit, edit] it returns undefined\n */\n\nfunction getPreviousPublishAction(chunks: Chunk[]) {\n  let previousPublish: PublishChunk | null = null\n  // We need to iterate from the end to the start of the list\n  for (let index = chunks.length - 1; index >= 0; index--) {\n    const chunk = chunks[index]\n    if (isPublishChunk(chunk)) {\n      previousPublish = chunk\n      break\n    }\n    if (chunk.type === 'editDraft') {\n      continue\n    } else break\n  }\n\n  return previousPublish\n}\nexport type ChunksWithCollapsedDrafts = NonPublishChunk | PublishChunk\n\n/**\n * Takes an array of chunks and adds them metadata necessary for the timeline view.\n * for draft chunks, it will add the parentId of the published chunk if this draft action is now published\n * for published, it will add the children array and the collaborators array\n */\nexport function addChunksMetadata(chunks: Chunk[]): ChunksWithCollapsedDrafts[] {\n  const result: ChunksWithCollapsedDrafts[] = []\n\n  for (const chunk of chunks) {\n    if (isPublishChunk(chunk)) {\n      result.push({\n        ...chunk,\n        type: 'publish',\n        children: [],\n        collaborators: new Set(), // Initialize the collaborators array\n      })\n      continue\n    }\n    if (isNonPublishChunk(chunk)) {\n      const previousPublish = getPreviousPublishAction(result)\n      if (chunk.type === 'editDraft' && previousPublish?.type === 'publish') {\n        Array.from(chunk.authors).forEach((id) => {\n          previousPublish.collaborators.add(id)\n        })\n        previousPublish.children.push(chunk.id)\n        result.push({\n          ...chunk,\n          parentId: previousPublish.id,\n        })\n        continue\n      }\n    }\n    if (isNonPublishChunk(chunk)) {\n      result.push(chunk)\n    }\n  }\n\n  return result\n}\n","import {Box, Text} from '@sanity/ui'\nimport {useCallback, useEffect, useMemo, useState} from 'react'\nimport {\n  type Chunk,\n  CommandList,\n  type CommandListRenderItemCallback,\n  LoadingBlock,\n  useTranslation,\n} from 'sanity'\n\nimport {ExpandableTimelineItemButton} from './expandableTimelineItemButton'\nimport {ListWrapper, Root, StackWrapper} from './timeline.styled'\nimport {TimelineItem} from './timelineItem'\nimport {\n  addChunksMetadata,\n  type ChunksWithCollapsedDrafts,\n  isNonPublishChunk,\n  isPublishChunk,\n} from './utils'\n\ninterface TimelineProps {\n  chunks: Chunk[]\n  hasMoreChunks: boolean | null\n  lastChunk?: Chunk | null\n  onLoadMore: () => void\n  onSelect: (chunk: Chunk) => void\n  /**\n   * The list needs a predefined max height for the scroller to work.\n   */\n  listMaxHeight?: string\n}\n\nexport const TIMELINE_LIST_WRAPPER_ID = 'timeline-list-wrapper'\n\nexport const Timeline = ({\n  chunks,\n  hasMoreChunks,\n  lastChunk: selectedChunk,\n  onLoadMore,\n  onSelect,\n  listMaxHeight = 'calc(100vh - 280px)',\n}: TimelineProps) => {\n  const [mounted, setMounted] = useState(false)\n  const {t} = useTranslation('studio')\n  const selectedChunkId = selectedChunk?.id\n  const chunksWithMetadata = useMemo(() => addChunksMetadata(chunks), [chunks])\n\n  const [expandedParents, setExpandedParents] = useState<Set<string>>(() => {\n    if (selectedChunkId) {\n      // If the selected chunk is a draft, we need to expand its parent\n      const selected = chunksWithMetadata.find((chunk) => chunk.id === selectedChunkId)\n      if (selected && isNonPublishChunk(selected) && selected.parentId) {\n        return new Set([selected.parentId])\n      }\n    }\n    return new Set()\n  })\n\n  useEffect(() => {\n    // This effect ensures that when we reload the timeline with a selected draft, we expand its parent.\n    if (selectedChunkId) {\n      const selected = chunksWithMetadata.find((chunk) => chunk.id === selectedChunkId)\n      if (selected && isNonPublishChunk(selected) && selected.parentId) {\n        const parentId = selected.parentId\n        setExpandedParents((prev) => {\n          if (prev.has(parentId)) return prev\n          const next = new Set(prev)\n          next.add(parentId)\n          return next\n        })\n      }\n    }\n  }, [chunksWithMetadata, selectedChunkId])\n\n  const filteredChunks = useMemo(() => {\n    return chunksWithMetadata.filter((chunk) => {\n      if (isPublishChunk(chunk) || !chunk.parentId) return true\n      // If the chunk has a parent id keep it hidden until the parent is expanded.\n      return expandedParents.has(chunk.parentId)\n    })\n  }, [chunksWithMetadata, expandedParents])\n\n  useEffect(() => {\n    // This effect ensures that we load more chunks if the list is not long enough.\n    // This could happen if a parent chunk has multiple drafts, so you could end with a list of 50 transactions but only\n    // 1 parent chunk, the publish, which squashed all the changes.\n    // In that case, users will see the loading block at the bottom, but nothing will really be happening. Because they haven't reach the end of the list.\n    if (filteredChunks.length < 16 && hasMoreChunks) {\n      onLoadMore()\n    }\n  }, [filteredChunks, hasMoreChunks, onLoadMore])\n\n  const handleExpandParent = useCallback(\n    (parentId: string) => () =>\n      setExpandedParents((prev) => {\n        const next = new Set(prev)\n\n        if (prev.has(parentId)) next.delete(parentId)\n        else next.add(parentId)\n\n        return next\n      }),\n    [],\n  )\n\n  const selectedIndex = useMemo(\n    () =>\n      selectedChunkId ? filteredChunks.findIndex((chunk) => chunk.id === selectedChunkId) : -1,\n    [selectedChunkId, filteredChunks],\n  )\n  const handleSelectChunk = useCallback(\n    (chunk: ChunksWithCollapsedDrafts) => {\n      const timelineChunk = chunks.find((c) => c.id === chunk.id)\n      if (timelineChunk) onSelect(timelineChunk)\n      else {\n        console.error('TimelineItem: chunk not found')\n        onSelect(chunk)\n      }\n    },\n    [chunks, onSelect],\n  )\n\n  const renderItem = useCallback<CommandListRenderItemCallback<(typeof filteredChunks)[number]>>(\n    (chunk, {activeIndex}) => {\n      const isFirst = activeIndex === 0\n\n      return (\n        <Box\n          paddingBottom={1}\n          paddingTop={isFirst ? 1 : 0}\n          paddingRight={1}\n          paddingLeft={isNonPublishChunk(chunk) && chunk.parentId ? 4 : 1}\n        >\n          <TimelineItem\n            chunk={chunk}\n            isSelected={selectedChunkId === chunk.id}\n            onSelect={handleSelectChunk}\n            collaborators={isPublishChunk(chunk) ? chunk.collaborators : undefined}\n            optionsMenu={\n              isPublishChunk(chunk) && chunk.children.length > 0 ? (\n                <ExpandableTimelineItemButton\n                  isExpanded={expandedParents.has(chunk.id)}\n                  onExpand={handleExpandParent(chunk.id)}\n                />\n              ) : null\n            }\n          />\n          {activeIndex === filteredChunks.length - 1 && hasMoreChunks && <LoadingBlock />}\n        </Box>\n      )\n    },\n    [\n      expandedParents,\n      filteredChunks.length,\n      handleExpandParent,\n      handleSelectChunk,\n      hasMoreChunks,\n      selectedChunkId,\n    ],\n  )\n\n  useEffect(() => setMounted(true), [])\n\n  return (\n    <Root\n      /**\n       * We delay initial rendering if `selectedIndex` is present.\n       * This is a _temporary_ workaround to allow the virtual <CommandList>\n       * to scroll to a specific index prior to being displayed.\n       *\n       * Without this, there'll be a noticeable 'flash' where the virtual list\n       * will render with its child items at the top and then scroll into position.\n       */\n      $visible={!selectedIndex || mounted}\n      data-ui=\"timeline\"\n    >\n      {filteredChunks.length === 0 && (\n        <StackWrapper padding={3} space={3}>\n          <Text size={1} weight=\"medium\">\n            {t('timeline.error.no-document-history-title')}\n          </Text>\n          <Text muted size={1}>\n            {t('timeline.error.no-document-history-description')}\n          </Text>\n        </StackWrapper>\n      )}\n\n      {filteredChunks.length > 0 && (\n        <ListWrapper direction=\"column\" $maxHeight={listMaxHeight} id={TIMELINE_LIST_WRAPPER_ID}>\n          <CommandList\n            activeItemDataAttr=\"data-hovered\"\n            ariaLabel={t('timeline.list.aria-label')}\n            autoFocus=\"list\"\n            initialIndex={selectedIndex}\n            initialScrollAlign=\"center\"\n            itemHeight={57}\n            items={filteredChunks}\n            onEndReached={onLoadMore}\n            onEndReachedIndexOffset={20}\n            overscan={5}\n            renderItem={renderItem}\n            wrapAround={false}\n          />\n        </ListWrapper>\n      )}\n    </Root>\n  )\n}\n\nTimeline.displayName = 'Timeline'\n","import {ErrorOutlineIcon} from '@sanity/icons'\nimport {Flex, Stack} from '@sanity/ui'\nimport {TextWithTone, useTranslation} from 'sanity'\n\nexport function TimelineError({versionError}: {versionError?: boolean}) {\n  const {t} = useTranslation('studio')\n\n  return (\n    <Flex align=\"flex-start\" gap={3} padding={4}>\n      <TextWithTone tone=\"critical\">\n        <ErrorOutlineIcon />\n      </TextWithTone>\n      <Stack space={4}>\n        <TextWithTone size={1} tone=\"critical\" weight=\"medium\">\n          {versionError\n            ? t('timeline.error.load-document-changes-version-title')\n            : t('timeline.error.load-document-changes-title')}\n        </TextWithTone>\n        <TextWithTone size={1} tone=\"critical\">\n          {versionError\n            ? t('timeline.error.load-document-changes-version-description')\n            : t('timeline.error.load-document-changes-description')}\n        </TextWithTone>\n      </Stack>\n    </Flex>\n  )\n}\n","import {ChevronDownIcon} from '@sanity/icons'\nimport {\n  Flex,\n  type Placement,\n  PortalProvider,\n  useClickOutsideEvent,\n  useGlobalKeyDown,\n  useToast,\n} from '@sanity/ui'\nimport {useCallback, useMemo, useState} from 'react'\nimport {type Chunk, useTimelineSelector, useTranslation} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Button, Popover} from '../../../../ui-components'\nimport {useDocumentPane} from '../useDocumentPane'\nimport {Timeline} from './timeline'\nimport {TimelineError} from './TimelineError'\nimport {TIMELINE_ITEM_I18N_KEY_MAPPING} from './timelineI18n'\n\ninterface TimelineMenuProps {\n  chunk: Chunk | null\n  mode: 'rev' | 'since'\n  placement?: Placement\n}\n\nconst Root = styled(Popover)`\n  overflow: hidden;\n  overflow: clip;\n`\n\nexport const TIMELINE_MENU_PORTAL = 'timeline-menu'\n\nexport function TimelineMenu({chunk, mode, placement}: TimelineMenuProps) {\n  const {setTimelineRange, timelineError, ready, timelineStore} = useDocumentPane()\n  const [open, setOpen] = useState(false)\n  const [button, setButton] = useState<HTMLButtonElement | null>(null)\n  const [popoverRef, setPopoverRef] = useState<HTMLElement | null>(null)\n\n  const toast = useToast()\n\n  const chunks = useTimelineSelector(timelineStore, (state) => state.chunks)\n  const loading = useTimelineSelector(timelineStore, (state) => state.isLoading)\n  const hasMoreChunks = useTimelineSelector(timelineStore, (state) => state.hasMoreChunks)\n  const realRevChunk = useTimelineSelector(timelineStore, (state) => state.realRevChunk)\n  const sinceTime = useTimelineSelector(timelineStore, (state) => state.sinceTime)\n\n  const {t} = useTranslation('studio')\n\n  const handleOpen = useCallback(() => {\n    setOpen(true)\n  }, [])\n\n  const handleClose = useCallback(() => {\n    setOpen(false)\n  }, [])\n\n  const handleGlobalKeyDown = useCallback(\n    (event: KeyboardEvent) => {\n      if (open && (event.key === 'Escape' || event.key === 'Tab')) {\n        handleClose()\n        button?.focus()\n      }\n    },\n    [button, handleClose, open],\n  )\n\n  useGlobalKeyDown(handleGlobalKeyDown)\n  useClickOutsideEvent(open && handleClose, () => [button, popoverRef])\n\n  const selectRev = useCallback(\n    (revChunk: Chunk) => {\n      try {\n        const [sinceId, revId] = timelineStore?.findRangeForRev(revChunk) || [null, null]\n        setTimelineRange(sinceId, revId)\n      } catch (err) {\n        toast.push({\n          closable: true,\n          description: err.message,\n          status: 'error',\n          title: t('timeline.error.unable-to-load-revision'),\n        })\n      }\n    },\n    [setTimelineRange, t, timelineStore, toast],\n  )\n\n  const selectSince = useCallback(\n    (sinceChunk: Chunk) => {\n      try {\n        const [sinceId, revId] = timelineStore?.findRangeForSince(sinceChunk) || [null, null]\n        setTimelineRange(sinceId, revId)\n      } catch (err) {\n        toast.push({\n          closable: true,\n          description: err.message,\n          status: 'error',\n          title: t('timeline.error.unable-to-load-revision'),\n        })\n      }\n    },\n    [setTimelineRange, t, timelineStore, toast],\n  )\n\n  const handleLoadMore = useCallback(() => {\n    if (!loading) {\n      timelineStore?.loadMore()\n    }\n  }, [loading, timelineStore])\n\n  const content = useMemo(() => {\n    if (timelineError) return <TimelineError />\n\n    if (mode === 'rev') {\n      return (\n        <Timeline\n          chunks={chunks}\n          hasMoreChunks={hasMoreChunks}\n          lastChunk={realRevChunk}\n          onLoadMore={handleLoadMore}\n          onSelect={selectRev}\n        />\n      )\n    }\n\n    const filteredChunks = realRevChunk\n      ? chunks.filter((c) => c.index < realRevChunk.index)\n      : chunks\n    return (\n      <Timeline\n        chunks={filteredChunks}\n        hasMoreChunks={hasMoreChunks}\n        lastChunk={sinceTime}\n        onLoadMore={handleLoadMore}\n        onSelect={selectSince}\n      />\n    )\n  }, [\n    chunks,\n    handleLoadMore,\n    hasMoreChunks,\n    mode,\n    realRevChunk,\n    selectRev,\n    selectSince,\n    sinceTime,\n    timelineError,\n  ])\n\n  const formatParams = {\n    timestamp: {dateStyle: 'medium', timeStyle: 'short'},\n  }\n\n  const revLabel = chunk\n    ? t(TIMELINE_ITEM_I18N_KEY_MAPPING[chunk.type], {\n        context: 'timestamp',\n        timestamp: new Date(chunk?.endTimestamp),\n        formatParams,\n      })\n    : t('timeline.latest-revision')\n\n  const sinceLabel = chunk\n    ? t('timeline.since', {\n        timestamp: new Date(chunk?.endTimestamp),\n        formatParams,\n      })\n    : t('timeline.since-version-missing')\n\n  const buttonLabel = mode === 'rev' ? revLabel : sinceLabel\n\n  return (\n    <PortalProvider __unstable_elements={{[TIMELINE_MENU_PORTAL]: popoverRef}}>\n      <Root\n        data-testid=\"timeline-menu\"\n        constrainSize\n        content={open && content}\n        data-ui=\"versionMenu\"\n        open={open}\n        placement={placement}\n        matchReferenceWidth\n        portal\n        ref={setPopoverRef}\n      >\n        <Flex width={'fill'}>\n          <Button\n            data-testid={open ? 'timeline-menu-close-button' : 'timeline-menu-open-button'}\n            disabled={!ready}\n            mode=\"ghost\"\n            onClick={open ? handleClose : handleOpen}\n            ref={setButton}\n            selected={open}\n            width=\"fill\"\n            tooltipProps={null}\n            justify={'space-between'}\n            style={{\n              maxWidth: '100%',\n            }}\n            iconRight={ChevronDownIcon}\n            text={ready ? buttonLabel : t('timeline.loading-history')}\n          />\n        </Flex>\n      </Root>\n    </PortalProvider>\n  )\n}\n","import {motion} from 'framer-motion'\nimport {type ComponentProps} from 'react'\nimport {keyframes, styled} from 'styled-components'\n\nconst StyledMotionPath = styled(motion.path)`\n  transform-origin: center;\n`\n\ntype MotionCircleProps = Omit<ComponentProps<typeof motion.circle>, 'd'>\ntype MotionPathProps = Omit<ComponentProps<typeof motion.path>, 'd' | 'ref'>\n\nconst Circle = (props: MotionCircleProps) => (\n  <motion.circle fill=\"none\" r=\"8\" cx=\"12.5\" cy=\"12.5\" strokeWidth=\"1.2\" {...props} />\n)\nconst Arrows = (props: MotionPathProps) => (\n  <StyledMotionPath\n    fill=\"none\"\n    d=\"M14 17.5619L11.5 20.5L14.5 23.0619M11 7.43811L13.5 4.50001L10.5 1.93811\"\n    {...props}\n  />\n)\nconst Checkmark = (props: MotionPathProps) => (\n  <motion.path d=\"M9.5 12.1316L11.7414 14.5L16 10\" {...props} />\n)\n\nconst rotateAnimation = keyframes`\n  0% {\n    transform: rotate(0);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n`\nconst RotateGroup = styled.g`\n  transform-origin: center;\n\n  &[data-rotate] {\n    animation: ${rotateAnimation} 1s ease-in-out infinite;\n  }\n`\n\nconst root = {\n  syncing: {\n    scale: 1,\n    transition: {\n      duration: 0,\n    },\n  },\n  saved: {\n    scale: [1, 0.8, 1.2, 0.9, 1.1, 0.95, 1.05, 0.99, 1],\n    transition: {\n      duration: 0.5,\n      delay: 0.2,\n    },\n  },\n  changes: {transition: {duration: 0}},\n}\n\nconst circle = {\n  syncing: {\n    strokeDasharray: '0, 0, 23, 3, 23, 3',\n    strokeDashoffset: 10,\n    opacity: 1,\n    transition: {\n      duration: 0,\n    },\n  },\n  saved: {\n    strokeDasharray: '0, 0, 23, 0, 23, 0',\n    strokeDashoffset: 10,\n    opacity: 1,\n    transition: {\n      duration: 0.2,\n    },\n  },\n  changes: {\n    strokeDasharray: '0, 60, 23, 0, 23, 0',\n    strokeDashoffset: 0,\n    opacity: 0,\n    transition: {\n      duration: 0.5,\n    },\n  },\n}\n\nconst arrows = {\n  syncing: {\n    opacity: 1,\n    transition: {\n      duration: 0,\n    },\n  },\n  saved: {\n    opacity: 0,\n    transition: {\n      duration: 0.2,\n    },\n  },\n  changes: {\n    opacity: 0,\n  },\n}\n\nconst checkmark = {\n  syncing: {\n    pathLength: 0,\n    transition: {duration: 0},\n  },\n  saved: {\n    pathLength: 1,\n    transition: {\n      delay: 0.4,\n      duration: 0.3,\n    },\n  },\n  changes: {\n    pathLength: 0,\n    transition: {\n      duration: 0.2,\n    },\n  },\n}\n\ninterface AnimatedStatusIconProps {\n  status?: 'changes' | 'saved' | 'syncing'\n}\n\nexport function AnimatedStatusIcon(props: AnimatedStatusIconProps) {\n  const {status} = props\n\n  if (!status) {\n    return null\n  }\n\n  return (\n    <svg\n      width=\"1em\"\n      height=\"1em\"\n      viewBox=\"0 0 25 25\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth=\"1.2\"\n      data-sanity-icon=\"animated-status-icon\"\n    >\n      <motion.g variants={root} initial={status} animate={status}>\n        <RotateGroup data-rotate={status === 'changes' ? undefined : ''}>\n          <Arrows variants={arrows} initial={status} animate={status} />\n          <Circle variants={circle} initial={status} animate={status} />\n        </RotateGroup>\n        <Checkmark variants={checkmark} initial={status} animate={status} />\n      </motion.g>\n    </svg>\n  )\n}\n","import {type ButtonTone, Flex, Text} from '@sanity/ui'\nimport {TextWithTone, useTranslation} from 'sanity'\n\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {AnimatedStatusIcon} from './AnimatedStatusIcon'\n\ntype StatusType = 'saved' | 'syncing'\ninterface ReviewChangesButtonProps {\n  status?: StatusType\n}\n\nconst STATUS_DICTIONARY: Record<StatusType, {i18nKey: string; tone: ButtonTone}> = {\n  saved: {\n    i18nKey: 'status-bar.document-status-pulse.status.saved.text',\n    tone: 'positive',\n  },\n  syncing: {\n    i18nKey: 'status-bar.document-status-pulse.status.syncing.text',\n    tone: 'default',\n  },\n}\n\nexport const DocumentStatusPulse = (props: ReviewChangesButtonProps) => {\n  const {status} = props\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  if (status !== 'saved' && status !== 'syncing') {\n    return null\n  }\n\n  const currentStatus = STATUS_DICTIONARY[status]\n\n  return (\n    <Flex align=\"center\" gap={2} data-testid=\"pane-footer-document-status-pulse\">\n      <TextWithTone size={1} tone={currentStatus.tone}>\n        <AnimatedStatusIcon status={status} />\n      </TextWithTone>\n\n      <Text muted size={1}>\n        {t(currentStatus.i18nKey)}\n      </Text>\n    </Flex>\n  )\n}\n","import {\n  Box,\n  // eslint-disable-next-line no-restricted-imports\n  Button,\n  Flex,\n  Skeleton,\n  Text,\n} from '@sanity/ui'\nimport {AnimatePresence, motion} from 'framer-motion'\nimport {useEffect, useLayoutEffect, useMemo, useState} from 'react'\nimport {\n  AvatarSkeleton,\n  isPublishedPerspective,\n  TIMELINE_ITEM_I18N_KEY_MAPPING,\n  useEvents,\n  usePerspective,\n  UserAvatar,\n  useRelativeTime,\n  useSource,\n  useSyncState,\n  useTimelineSelector,\n  useTranslation,\n} from 'sanity'\n\nimport {HISTORY_INSPECTOR_NAME} from '../constants'\nimport {TIMELINE_ITEM_I18N_KEY_MAPPING as TIMELINE_ITEM_I18N_KEY_MAPPING_LEGACY} from '../timeline'\nimport {useDocumentPane} from '../useDocumentPane'\nimport {DocumentStatusPulse} from './DocumentStatusPulse'\n\nconst RELATIVE_TIME_OPTIONS = {\n  minimal: true,\n  useTemporalPhrase: true,\n} as const\n\nconst MotionButton = motion.create(Button)\nconst MotionBox = motion.create(Box)\n\nconst ButtonSkeleton = () => {\n  return (\n    <Flex align=\"center\" gap={3} paddingLeft={1} paddingRight={2} paddingY={2}>\n      <div style={{margin: -5}}>\n        <AvatarSkeleton $size={0} animated />\n      </div>\n      <Skeleton animated style={{width: '80px', height: '15px'}} radius={2} />\n    </Flex>\n  )\n}\n\nconst DocumentStatusButton = ({\n  author,\n  translationKey,\n  timestamp = '',\n}: {\n  author: string\n  translationKey: string\n  timestamp?: string\n}) => {\n  const {onHistoryOpen, inspector, onHistoryClose} = useDocumentPane()\n  const {t} = useTranslation()\n  const relativeTime = useRelativeTime(timestamp, RELATIVE_TIME_OPTIONS)\n\n  return (\n    <MotionButton\n      data-testid=\"pane-footer-document-status\"\n      animate={{opacity: 1}}\n      initial={{opacity: 0}}\n      exit={{opacity: 0}}\n      mode=\"bleed\"\n      onClick={inspector?.name === HISTORY_INSPECTOR_NAME ? onHistoryClose : onHistoryOpen}\n      padding={2}\n      muted\n    >\n      <Flex align=\"center\" flex=\"none\" gap={3}>\n        {author && (\n          <div style={{margin: -5}}>\n            <UserAvatar user={author} size={0} />\n          </div>\n        )}\n        <Text muted size={1}>\n          {t(translationKey)} {relativeTime}\n        </Text>\n      </Flex>\n    </MotionButton>\n  )\n}\n\nconst FallbackStatus = () => {\n  const {editState} = useDocumentPane()\n  const {selectedPerspective} = usePerspective()\n\n  const status = useMemo(() => {\n    if (isPublishedPerspective(selectedPerspective) && editState?.published?._updatedAt) {\n      return {\n        translationKey: TIMELINE_ITEM_I18N_KEY_MAPPING.published.createDocumentVersion,\n        timestamp: editState.published._updatedAt,\n      }\n    }\n    if (editState?.version?._updatedAt) {\n      return {\n        translationKey:\n          editState?.version?._updatedAt === editState?.version?._createdAt\n            ? TIMELINE_ITEM_I18N_KEY_MAPPING.version.createDocumentVersion\n            : TIMELINE_ITEM_I18N_KEY_MAPPING.version.editDocumentVersion,\n        timestamp: editState.version._updatedAt,\n      }\n    }\n    if (editState?.draft?._updatedAt) {\n      return {\n        translationKey:\n          editState?.draft?._updatedAt === editState?.draft?._createdAt\n            ? TIMELINE_ITEM_I18N_KEY_MAPPING.draft.createDocumentVersion\n            : TIMELINE_ITEM_I18N_KEY_MAPPING.draft.editDocumentVersion,\n        timestamp: editState.draft._updatedAt,\n      }\n    }\n    return null\n  }, [\n    selectedPerspective,\n    editState?.published?._updatedAt,\n    editState?.version?._updatedAt,\n    editState?.version?._createdAt,\n    editState?.draft?._updatedAt,\n    editState?.draft?._createdAt,\n  ])\n  if (!status) {\n    return null\n  }\n  return (\n    <DocumentStatusButton\n      author=\"\"\n      translationKey={status.translationKey}\n      timestamp={status.timestamp}\n    />\n  )\n}\n\nconst EventsStatus = () => {\n  const {events, loading} = useEvents()\n  const event = events?.[0]\n\n  if (!event && loading) {\n    return <ButtonSkeleton />\n  }\n  if (!event) {\n    return <FallbackStatus />\n  }\n\n  return (\n    <DocumentStatusButton\n      author={event.author}\n      translationKey={TIMELINE_ITEM_I18N_KEY_MAPPING[event.documentVariantType][event.type]}\n      timestamp={event.timestamp}\n    />\n  )\n}\n\nconst TimelineStatus = () => {\n  const {timelineStore} = useDocumentPane()\n  const chunks = useTimelineSelector(timelineStore, (state) => state.chunks)\n  const loading = useTimelineSelector(timelineStore, (state) => state.isLoading)\n  const event = chunks?.[0]\n\n  if (!event && loading) {\n    return <ButtonSkeleton />\n  }\n  if (!event) {\n    return <FallbackStatus />\n  }\n\n  const author = Array.from(event.authors)[0]\n  return (\n    <DocumentStatusButton\n      author={author}\n      translationKey={TIMELINE_ITEM_I18N_KEY_MAPPING_LEGACY[event.type]}\n      timestamp={event.endTimestamp}\n    />\n  )\n}\n\nconst SYNCING_TIMEOUT = 1000\nconst SAVED_TIMEOUT = 3000\n\nexport function DocumentStatusLine() {\n  const {documentId, documentType, editState, value} = useDocumentPane()\n  const [status, setStatus] = useState<'saved' | 'syncing' | null>(null)\n  const source = useSource()\n  const eventsEnabled = source.beta?.eventsAPI?.documents\n\n  const syncState = useSyncState(documentId, documentType, editState?.release)\n\n  const lastUpdated = value?._updatedAt\n\n  // eslint-disable-next-line consistent-return\n  useEffect(() => {\n    // Schedule an update to set the status to 'saved' when status changed to 'syncing.\n    // We use `syncState.isSyncing` here to avoid the status being set to 'saved' when the document is syncing.\n    if (status === 'syncing' && !syncState.isSyncing) {\n      const timerId = setTimeout(() => setStatus('saved'), SYNCING_TIMEOUT)\n      return () => clearTimeout(timerId)\n    }\n    // Schedule an update to clear the status when status changed to 'saved'\n    if (status === 'saved') {\n      const timerId = setTimeout(() => setStatus(null), SAVED_TIMEOUT)\n      return () => clearTimeout(timerId)\n    }\n  }, [status, lastUpdated, syncState.isSyncing])\n\n  // Clear the status when documentId changes to make sure we don't show the wrong status when opening a new document\n  useLayoutEffect(() => {\n    setStatus(null)\n  }, [documentId])\n\n  // Set status to 'syncing' when lastUpdated changes and we go from not syncing to syncing\n  useLayoutEffect(() => {\n    if (syncState.isSyncing) {\n      setStatus('syncing')\n    }\n  }, [syncState.isSyncing, lastUpdated])\n\n  return (\n    <AnimatePresence>\n      {status ? (\n        <MotionBox\n          paddingLeft={2}\n          animate={{opacity: 1}}\n          initial={{opacity: 0}}\n          exit={{opacity: 0}}\n        >\n          <DocumentStatusPulse status={status || undefined} />\n        </MotionBox>\n      ) : (\n        <>{eventsEnabled ? <EventsStatus /> : <TimelineStatus />}</>\n      )}\n    </AnimatePresence>\n  )\n}\n","import {RestoreIcon} from '@sanity/icons'\nimport {Box, Flex, Text} from '@sanity/ui'\nimport {format} from 'date-fns'\nimport {Translate, useTranslation} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {useDocumentPane} from '../useDocumentPane'\n\nexport const StatusText = styled(Text)`\n  color: var(--card-muted-fg-color);\n\n  em {\n    color: var(--card-fg-color);\n    font-weight: 500;\n    font-style: normal;\n  }\n`\n\nexport function RevisionStatusLine(): React.JSX.Element {\n  const {displayed, revisionNotFound} = useDocumentPane()\n  const {t} = useTranslation()\n  const date = displayed?._updatedAt || displayed?._createdAt\n\n  const message = {\n    name: 'revision',\n    text: date ? (\n      <Translate\n        t={t}\n        i18nKey=\"document-status.revision-from\"\n        values={{\n          date: format(new Date(date), `MMM d, yyyy '@' pp`),\n        }}\n      />\n    ) : null,\n    tone: 'caution',\n  }\n\n  return (\n    <>\n      <Flex flex={1} gap={3} padding={2}>\n        <Box flex=\"none\">\n          <Text size={1}>\n            <RestoreIcon />\n          </Text>\n        </Box>\n        <Box flex={1}>\n          <StatusText size={1} textOverflow=\"ellipsis\">\n            {revisionNotFound ? (\n              <Translate t={t} i18nKey=\"document-status.revision-not-found\" />\n            ) : (\n              message.text\n            )}\n          </StatusText>\n        </Box>\n      </Flex>\n    </>\n  )\n}\n","import {useLayoutEffect} from 'react'\nimport {resizeObserver} from 'sanity'\n\nexport function useResizeObserver({\n  element,\n  onResize,\n}: {\n  element?: HTMLDivElement | null\n  onResize: (event: ResizeObserverEntry) => void\n}): void {\n  useLayoutEffect(() => {\n    if (element) {\n      resizeObserver.observe(element, onResize)\n    }\n\n    return () => {\n      if (element) {\n        resizeObserver.unobserve(element)\n      }\n    }\n  }, [element, onResize])\n}\n","import {Card, Flex} from '@sanity/ui'\nimport {motion} from 'framer-motion'\nimport {type Ref, useCallback, useMemo, useState} from 'react'\nimport {\n  type CreateLinkMetadata,\n  isPublishedPerspective,\n  isReleaseDocument,\n  isSanityCreateLinked,\n  usePerspective,\n  useSanityCreateConfig,\n} from 'sanity'\n\nimport {usePaneRouter} from '../../../components'\nimport {SpacerButton} from '../../../components/spacerButton'\nimport {DOCUMENT_PANEL_PORTAL_ELEMENT} from '../../../constants'\nimport {EMPTY_PARAMS} from '../constants'\nimport {useDocumentPane} from '../useDocumentPane'\nimport {useDocumentTitle} from '../useDocumentTitle'\nimport {DocumentBadges} from './DocumentBadges'\nimport {DocumentStatusBarActions, HistoryStatusBarActions} from './DocumentStatusBarActions'\nimport {DocumentStatusLine} from './DocumentStatusLine'\nimport {RevisionStatusLine} from './RevisionStatusLine'\nimport {useResizeObserver} from './useResizeObserver'\n\nexport interface DocumentStatusBarProps {\n  actionsBoxRef?: Ref<HTMLDivElement>\n  createLinkMetadata?: CreateLinkMetadata\n}\n\nconst CONTAINER_BREAKPOINT = 480 // px\n\nconst AnimatedCard = motion.create(Card)\n\nexport function DocumentStatusBar(props: DocumentStatusBarProps) {\n  const {actionsBoxRef, createLinkMetadata} = props\n  const {editState, onChange: onDocumentChange, revisionNotFound} = useDocumentPane()\n  const {params = EMPTY_PARAMS} = usePaneRouter()\n  const {selectedPerspective} = usePerspective()\n  const {title} = useDocumentTitle()\n\n  const CreateLinkedActions = useSanityCreateConfig().components?.documentLinkedActions\n\n  const showingRevision = Boolean(params.rev)\n  const [collapsed, setCollapsed] = useState<boolean | null>(null)\n  const [rootElement, setRootElement] = useState<HTMLDivElement | null>(null)\n\n  const handleResize = useCallback((event: ResizeObserverEntry) => {\n    setCollapsed(event.contentRect.width < CONTAINER_BREAKPOINT)\n  }, [])\n\n  useResizeObserver({element: rootElement, onResize: handleResize})\n\n  const shouldRender = useMemo(() => {\n    const isReady = Boolean(editState?.ready && typeof collapsed === 'boolean')\n    if (selectedPerspective) {\n      if (isPublishedPerspective(selectedPerspective)) {\n        return isReady && Boolean(editState?.published)\n      }\n      if (isReleaseDocument(selectedPerspective)) {\n        return isReady && Boolean(editState?.version)\n      }\n    }\n    return isReady\n  }, [collapsed, editState?.published, editState?.ready, editState?.version, selectedPerspective])\n\n  let actions: React.JSX.Element | null = null\n  if (createLinkMetadata && isSanityCreateLinked(createLinkMetadata) && CreateLinkedActions) {\n    actions = (\n      <CreateLinkedActions\n        metadata={createLinkMetadata}\n        panelPortalElementId={DOCUMENT_PANEL_PORTAL_ELEMENT}\n        onDocumentChange={onDocumentChange}\n        documentTitle={title}\n      />\n    )\n  } else if (showingRevision) {\n    actions = <HistoryStatusBarActions />\n  } else {\n    actions = <DocumentStatusBarActions />\n  }\n\n  if (showingRevision && revisionNotFound) {\n    return null\n  }\n\n  return (\n    <AnimatedCard\n      key={showingRevision ? 'revision' : 'published'}\n      initial={{opacity: 0.2}}\n      animate={{opacity: 1, transition: {duration: 0.3}}}\n      tone={showingRevision ? 'caution' : undefined}\n      radius={3}\n      ref={setRootElement}\n      sizing=\"border\"\n      padding={2}\n    >\n      {shouldRender && (\n        <Flex\n          align=\"stretch\"\n          gap={1}\n          justify=\"space-between\"\n          paddingLeft={showingRevision ? 0 : 1}\n          paddingRight={showingRevision ? 0 : 1}\n        >\n          <Flex align=\"center\" flex={1} gap={collapsed ? 2 : 3} wrap=\"wrap\" paddingRight={3}>\n            <Flex align=\"center\">\n              {showingRevision ? <RevisionStatusLine /> : <DocumentStatusLine />}\n              <SpacerButton />\n            </Flex>\n            <DocumentBadges />\n          </Flex>\n\n          <Flex\n            align=\"flex-start\"\n            justify=\"flex-end\"\n            ref={actionsBoxRef}\n            style={{flexShrink: 0, marginLeft: 'auto'}}\n          >\n            <SpacerButton />\n            {actions}\n          </Flex>\n        </Flex>\n      )}\n    </AnimatedCard>\n  )\n}\n","import {isHotkey} from 'is-hotkey-esm'\nimport {\n  type ElementType,\n  type HTMLProps,\n  memo,\n  type Ref,\n  useCallback,\n  useMemo,\n  useState,\n} from 'react'\nimport {type DocumentActionDescription, type DocumentActionProps, LegacyLayerProvider} from 'sanity'\n\nimport {RenderActionCollectionState} from '../../../components'\nimport {ActionStateDialog} from '../statusBar'\nimport {useDocumentPane} from '../useDocumentPane'\n\nexport interface KeyboardShortcutResponderProps {\n  actionsBoxElement: HTMLElement | null\n  activeIndex: number\n  as?: ElementType\n  currentMinWidth?: number\n  flex?: number\n  id: string\n  minWidth?: number\n  onActionStart: (index: number) => void\n  rootRef: Ref<HTMLDivElement>\n  states: DocumentActionDescription[]\n}\n\nconst KeyboardShortcutResponder = memo(function KeyboardShortcutResponder(\n  props: KeyboardShortcutResponderProps & Omit<HTMLProps<HTMLDivElement>, 'as' | 'height'>,\n) {\n  const {\n    actionsBoxElement,\n    activeIndex,\n    as: As = 'div',\n    children,\n    id,\n    onActionStart,\n    onKeyDown,\n    rootRef,\n    states,\n    ...rest\n  } = props\n\n  const activeAction = states[activeIndex]\n\n  const handleKeyDown = useCallback(\n    (event: any) => {\n      const matchingStates = states.filter(\n        (state) => state.shortcut && isHotkey(state.shortcut, event),\n      )\n\n      const matchingState = matchingStates[0]\n\n      if (matchingStates.length > 1) {\n        console.warn(\n          `Keyboard shortcut conflict: More than one document action matches the shortcut \"${matchingState.shortcut}\"`,\n        )\n      }\n\n      if (matchingState && !matchingState.disabled && matchingState.onHandle) {\n        event.preventDefault()\n        matchingState.onHandle()\n        onActionStart(states.indexOf(matchingState))\n        return\n      }\n\n      if (onKeyDown) {\n        onKeyDown(event)\n      }\n    },\n    [onActionStart, onKeyDown, states],\n  )\n\n  return (\n    <As id={id} onKeyDown={handleKeyDown} tabIndex={-1} {...rest} ref={rootRef}>\n      {children}\n      {activeAction && activeAction.dialog && (\n        <LegacyLayerProvider zOffset=\"paneFooter\">\n          <ActionStateDialog dialog={activeAction.dialog} referenceElement={actionsBoxElement} />\n        </LegacyLayerProvider>\n      )}\n    </As>\n  )\n})\n\nexport interface DocumentActionShortcutsProps {\n  actionsBoxElement: HTMLElement | null\n  as?: ElementType\n  currentMinWidth?: number\n  debug?: boolean\n  flex: number\n  id: string\n  minWidth: number\n  rootRef: Ref<HTMLDivElement>\n}\n\nexport const DocumentActionShortcuts = memo(\n  (props: DocumentActionShortcutsProps & Omit<HTMLProps<HTMLDivElement>, 'as'>) => {\n    const {actionsBoxElement, as = 'div', children, ...rest} = props\n    const {actions, editState, isInitialValueLoading, revisionId} = useDocumentPane()\n    const [activeIndex, setActiveIndex] = useState(-1)\n\n    const onActionStart = useCallback((idx: number) => {\n      setActiveIndex(idx)\n    }, [])\n\n    const actionProps: DocumentActionProps | null = useMemo(\n      () =>\n        editState && {\n          ...editState,\n\n          // @todo: what to call here?\n          onComplete: () => undefined,\n\n          revision: revisionId || undefined,\n          initialValueResolved: !isInitialValueLoading,\n        },\n      [editState, isInitialValueLoading, revisionId],\n    )\n\n    const renderDocumentActionShortcuts = useCallback<\n      (props: {states: DocumentActionDescription[]}) => React.ReactNode\n    >(\n      ({states}) => (\n        <KeyboardShortcutResponder\n          {...rest}\n          activeIndex={activeIndex}\n          actionsBoxElement={actionsBoxElement}\n          as={as}\n          onActionStart={onActionStart}\n          states={states}\n        >\n          {children}\n        </KeyboardShortcutResponder>\n      ),\n      [actionsBoxElement, activeIndex, as, children, onActionStart, rest],\n    )\n\n    if (!actionProps || !actions) return null\n\n    return (\n      <RenderActionCollectionState actionProps={actionProps} actions={actions}>\n        {renderDocumentActionShortcuts}\n      </RenderActionCollectionState>\n    )\n  },\n)\n\nDocumentActionShortcuts.displayName = 'Memo(DocumentActionShortcuts)'\n","import {EarthAmericasIcon, JsonIcon, LinkIcon, TransferIcon} from '@sanity/icons'\nimport {type DocumentInspector, type DocumentInspectorMenuItem, type TFunction} from 'sanity'\n\nimport {type DocumentIdStack} from '../../hooks/useDocumentIdStack'\nimport {type PaneMenuItem, type StructureToolFeatures} from '../../types'\nimport {INSPECT_ACTION_PREFIX} from './constants'\n\ninterface GetMenuItemsParams {\n  currentInspector?: DocumentInspector\n  features: StructureToolFeatures\n  hasValue: boolean\n  inspectors: DocumentInspector[]\n  previewUrl?: string | null\n  documentIdStack?: DocumentIdStack\n  inspectorMenuItems: DocumentInspectorMenuItem[]\n  t: TFunction\n}\n\nfunction getInspectorItems({\n  currentInspector,\n  hasValue,\n  inspectors,\n  inspectorMenuItems,\n}: GetMenuItemsParams): PaneMenuItem[] {\n  return inspectors\n    .map((inspector, index) => {\n      const menuItem = inspectorMenuItems[index]\n\n      if (!menuItem || menuItem.hidden) return null\n\n      return {\n        action: `${INSPECT_ACTION_PREFIX}${inspector.name}`,\n        group: menuItem.showAsAction ? undefined : 'inspectors',\n        icon: menuItem.icon,\n        disabled: !hasValue,\n        selected: currentInspector?.name === inspector.name,\n        shortcut: menuItem.hotkeys?.join('+'),\n        showAsAction: menuItem.showAsAction,\n        title: menuItem.title,\n        tone: menuItem.tone,\n      }\n    })\n    .filter(Boolean) as PaneMenuItem[]\n}\n\nfunction getInspectItem({hasValue, t}: GetMenuItemsParams): PaneMenuItem {\n  return {\n    action: 'inspect',\n    group: 'inspectors',\n    title: t('document-inspector.menu-item.title'),\n    icon: JsonIcon,\n    disabled: !hasValue,\n    shortcut: 'Ctrl+Alt+I',\n  }\n}\n\nfunction getCompareVersionsItem({documentIdStack, t}: GetMenuItemsParams): PaneMenuItem | null {\n  const disabled = typeof documentIdStack?.previousId === 'undefined' && {\n    reason: t('compare-versions.menu-item.disabled-reason'),\n  }\n\n  return {\n    action: 'compareVersions',\n    group: 'inspectors',\n    title: t('compare-versions.menu-item.title'),\n    icon: TransferIcon,\n    disabled,\n  }\n}\n\nexport function getProductionPreviewItem({previewUrl, t}: GetMenuItemsParams): PaneMenuItem | null {\n  if (!previewUrl) return null\n\n  return {\n    action: 'production-preview',\n    group: 'links',\n    title: t('production-preview.menu-item.title'),\n    icon: EarthAmericasIcon,\n    shortcut: 'Ctrl+Alt+O',\n  }\n}\n\nexport function getMenuItems(params: GetMenuItemsParams): PaneMenuItem[] {\n  const inspectorItems = getInspectorItems(params)\n  const items = [\n    // Get production preview item\n    getProductionPreviewItem(params),\n    getCompareVersionsItem(params),\n  ].filter(Boolean) as PaneMenuItem[]\n\n  return [\n    // Always present document menu item to copy current url to clipboard\n    {\n      action: 'copy-document-url',\n      showAsAction: true,\n      title: params.t('action.copy-document-url.label'),\n      icon: LinkIcon,\n    },\n    ...inspectorItems,\n\n    // TODO: convert to inspector or document view?\n    getInspectItem(params),\n\n    ...items,\n  ]\n}\n","import {Card, Code, Stack, Text} from '@sanity/ui'\nimport {isDev, Translate, useTranslation} from 'sanity'\n\nimport {ErrorPane} from '../../error'\n\ninterface DocumentLayoutErrorProps {\n  currentMinWidth?: number\n  documentType?: string\n  minWidth?: number\n  paneKey: string\n  value?: Record<string, unknown>\n}\n\nexport function DocumentLayoutError(props: DocumentLayoutErrorProps) {\n  const {documentType, value, currentMinWidth, paneKey, minWidth} = props\n  const {t} = useTranslation()\n\n  return (\n    <ErrorPane\n      currentMinWidth={currentMinWidth}\n      flex={2.5}\n      minWidth={minWidth}\n      paneKey={paneKey}\n      title={\n        <Translate\n          t={t}\n          i18nKey=\"panes.document-pane.document-unknown-type.title\"\n          values={{documentType}}\n        />\n      }\n      tone=\"caution\"\n    >\n      <Stack space={4}>\n        {documentType && (\n          <Text as=\"p\">\n            <Translate\n              t={t}\n              i18nKey=\"panes.document-pane.document-unknown-type.text\"\n              values={{documentType}}\n            />\n          </Text>\n        )}\n\n        {!documentType && (\n          <Text as=\"p\">{t('panes.document-pane.document-unknown-type.without-schema.text')}</Text>\n        )}\n\n        {isDev && value && (\n          /* eslint-disable i18next/no-literal-string */\n          <>\n            <Text as=\"p\">Here is the JSON representation of the document:</Text>\n\n            <Card padding={3} overflow=\"auto\" radius={2} shadow={1} tone=\"inherit\">\n              <Code language=\"json\" size={[1, 1, 2]}>\n                {JSON.stringify(value, null, 2)}\n              </Code>\n            </Card>\n          </>\n          /* eslint-enable i18next/no-literal-string */\n        )}\n      </Stack>\n    </ErrorPane>\n  )\n}\n","import {DialogProvider, type DialogProviderProps, PortalProvider} from '@sanity/ui'\nimport {type Dispatch, type SetStateAction, useMemo} from 'react'\nimport {getSanityCreateLinkMetadata, useZIndex} from 'sanity'\n\nimport {TooltipDelayGroupProvider} from '../../../../ui-components/tooltipDelayGroupProvider/TooltipDelayGroupProvider'\nimport {PaneFooter} from '../../../components'\nimport {DOCUMENT_PANEL_PORTAL_ELEMENT} from '../../../constants'\nimport {DocumentStatusBar} from '../statusBar'\nimport {useDocumentPane} from '../useDocumentPane'\n\nconst DIALOG_PROVIDER_POSITION: DialogProviderProps['position'] = [\n  // We use the `position: fixed` for dialogs on narrower screens (first two media breakpoints).\n  'fixed',\n  'fixed',\n  // And we use the `position: absolute` strategy (within panes) on wide screens.\n  'absolute',\n]\n\nexport function DocumentLayoutFooter({\n  documentPanelPortalElement,\n  setFooterElement,\n  setActionsBoxElement,\n}: {\n  documentPanelPortalElement: HTMLElement | null\n  setFooterElement: Dispatch<SetStateAction<HTMLDivElement | null>>\n  setActionsBoxElement: Dispatch<SetStateAction<HTMLDivElement | null>>\n}) {\n  const zOffsets = useZIndex()\n\n  const {value} = useDocumentPane()\n  const portalElements = useMemo(\n    () => ({[DOCUMENT_PANEL_PORTAL_ELEMENT]: documentPanelPortalElement}),\n    [documentPanelPortalElement],\n  )\n\n  const createLinkMetadata = getSanityCreateLinkMetadata(value)\n  return (\n    // These providers are added because we want the dialogs in `DocumentStatusBar` to be scoped to the document pane\n    // The portal element comes from `DocumentPanel`.\n    <PortalProvider __unstable_elements={portalElements}>\n      <DialogProvider position={DIALOG_PROVIDER_POSITION} zOffset={zOffsets.portal}>\n        <PaneFooter ref={setFooterElement} padding={1}>\n          <TooltipDelayGroupProvider>\n            <DocumentStatusBar\n              actionsBoxRef={setActionsBoxElement}\n              createLinkMetadata={createLinkMetadata}\n            />\n          </TooltipDelayGroupProvider>\n        </PaneFooter>\n      </DialogProvider>\n    </PortalProvider>\n  )\n}\n","import {DialogProvider, type DialogProviderProps, Flex, useElementRect} from '@sanity/ui'\nimport {isHotkey} from 'is-hotkey-esm'\nimport {useCallback, useMemo, useState} from 'react'\nimport {\n  ChangeConnectorRoot,\n  type DocumentFieldActionNode,\n  type DocumentInspectorMenuItem,\n  FieldActionsProvider,\n  FieldActionsResolver,\n  GetFormValueProvider,\n  type Path,\n  useGlobalCopyPasteElementHandler,\n  useTranslation,\n  useZIndex,\n} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Pane, usePaneLayout, usePaneRouter} from '../../../components'\nimport {useDocumentIdStack} from '../../../hooks/useDocumentIdStack'\nimport {structureLocaleNamespace} from '../../../i18n'\nimport {useStructureTool} from '../../../useStructureTool'\nimport {\n  DOCUMENT_INSPECTOR_MIN_WIDTH,\n  DOCUMENT_PANEL_INITIAL_MIN_WIDTH,\n  DOCUMENT_PANEL_MIN_WIDTH,\n} from '../constants'\nimport {DocumentInspectorMenuItemsResolver} from '../DocumentInspectorMenuItemsResolver'\nimport {DocumentOperationResults} from '../DocumentOperationResults'\nimport {DocumentPanel} from '../documentPanel'\nimport {DocumentPanelHeader} from '../documentPanel/header'\nimport {DocumentActionShortcuts} from '../keyboardShortcuts'\nimport {getMenuItems} from '../menuItems'\nimport {useDocumentPane} from '../useDocumentPane'\nimport {DocumentLayoutError} from './DocumentLayoutError'\nimport {DocumentLayoutFooter} from './DocumentLayoutFooter'\n\nconst EMPTY_ARRAY: [] = []\n\nconst DIALOG_PROVIDER_POSITION: DialogProviderProps['position'] = [\n  // We use the `position: fixed` for dialogs on narrower screens (first two media breakpoints).\n  'fixed',\n  'fixed',\n  // And we use the `position: absolute` strategy (within panes) on wide screens.\n  'absolute',\n]\n\nconst StyledChangeConnectorRoot = styled(ChangeConnectorRoot)`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  min-height: 0;\n  min-width: 0;\n`\n\nexport function DocumentLayout() {\n  const {\n    changesOpen,\n    displayed,\n    documentId,\n    documentType,\n    editState,\n    fieldActions,\n    focusPath,\n    inspectOpen,\n    inspector,\n    inspectors,\n    onFocus,\n    onHistoryOpen,\n    onMenuAction,\n    onPathOpen,\n    paneKey,\n    schemaType,\n    value,\n    isInitialValueLoading,\n    ready,\n    previewUrl,\n  } = useDocumentPane()\n  const {params: paneParams} = usePaneRouter()\n  const {features} = useStructureTool()\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {collapsed: layoutCollapsed} = usePaneLayout()\n\n  const zOffsets = useZIndex()\n\n  const [rootElement, setRootElement] = useState<HTMLDivElement | null>(null)\n  const [footerElement, setFooterElement] = useState<HTMLDivElement | null>(null)\n  const [headerElement, setHeaderElement] = useState<HTMLDivElement | null>(null)\n\n  const [actionsBoxElement, setActionsBoxElement] = useState<HTMLDivElement | null>(null)\n  const [documentPanelPortalElement, setDocumentPanelPortalElement] = useState<HTMLElement | null>(\n    null,\n  )\n\n  useGlobalCopyPasteElementHandler({\n    element: rootElement,\n    focusPath,\n    value,\n  })\n\n  const [inspectorMenuItems, setInspectorMenuItems] = useState<DocumentInspectorMenuItem[]>([])\n  const [rootFieldActionNodes, setRootFieldActionNodes] = useState<DocumentFieldActionNode[]>([])\n\n  const footerRect = useElementRect(footerElement)\n  const headerRect = useElementRect(headerElement)\n  const footerHeight = footerRect?.height\n  const headerHeight = headerRect?.height\n  const currentMinWidth =\n    DOCUMENT_PANEL_INITIAL_MIN_WIDTH + (inspector ? DOCUMENT_INSPECTOR_MIN_WIDTH : 0)\n  const minWidth = DOCUMENT_PANEL_MIN_WIDTH + (inspector ? DOCUMENT_INSPECTOR_MIN_WIDTH : 0)\n\n  const currentInspector = useMemo(\n    () => inspectors?.find((i) => i.name === inspector?.name),\n    [inspectors, inspector?.name],\n  )\n\n  const documentIdStack = useDocumentIdStack({displayed, documentId, editState})\n\n  const hasValue = Boolean(value)\n\n  const menuItems = useMemo(\n    () =>\n      getMenuItems({\n        currentInspector,\n        features,\n        hasValue,\n        inspectorMenuItems,\n        inspectors,\n        previewUrl,\n        documentIdStack,\n        t,\n      }),\n    [\n      currentInspector,\n      documentIdStack,\n      features,\n      hasValue,\n      inspectorMenuItems,\n      inspectors,\n      previewUrl,\n      t,\n    ],\n  )\n\n  const handleKeyUp = useCallback(\n    (event: React.KeyboardEvent<HTMLDivElement>) => {\n      for (const item of menuItems) {\n        if (item.shortcut) {\n          if (isHotkey(item.shortcut, event)) {\n            event.preventDefault()\n            event.stopPropagation()\n            onMenuAction(item)\n            return\n          }\n        }\n      }\n    },\n    [onMenuAction, menuItems],\n  )\n\n  const onConnectorSetFocus = useCallback(\n    (path: Path) => {\n      onPathOpen(path)\n      onFocus(path)\n    },\n    [onPathOpen, onFocus],\n  )\n\n  if (!schemaType) {\n    return (\n      <DocumentLayoutError\n        currentMinWidth={currentMinWidth}\n        documentType={documentType}\n        minWidth={minWidth}\n        paneKey={paneKey}\n        value={value}\n      />\n    )\n  }\n\n  return (\n    <GetFormValueProvider value={value}>\n      {inspectors.length > 0 && (\n        <DocumentInspectorMenuItemsResolver\n          documentId={documentId}\n          documentType={documentType}\n          inspectors={inspectors}\n          onMenuItems={setInspectorMenuItems}\n        />\n      )}\n\n      {fieldActions.length > 0 && schemaType && (\n        <FieldActionsResolver\n          actions={fieldActions}\n          documentId={documentId}\n          documentType={documentType}\n          onActions={setRootFieldActionNodes}\n          path={EMPTY_ARRAY}\n          schemaType={schemaType}\n        />\n      )}\n\n      <FieldActionsProvider actions={rootFieldActionNodes} path={EMPTY_ARRAY}>\n        <DocumentActionShortcuts\n          actionsBoxElement={actionsBoxElement}\n          as={Pane}\n          currentMinWidth={currentMinWidth}\n          data-testid=\"document-pane\"\n          flex={2.5}\n          id={paneKey}\n          minWidth={minWidth}\n          onKeyUp={handleKeyUp}\n          rootRef={setRootElement}\n        >\n          <DocumentPanelHeader ref={setHeaderElement} menuItems={menuItems} />\n          <DialogProvider position={DIALOG_PROVIDER_POSITION} zOffset={zOffsets.paneDialog}>\n            <Flex direction=\"column\" flex={1} height={layoutCollapsed ? undefined : 'fill'}>\n              <StyledChangeConnectorRoot\n                data-testid=\"change-connector-root\"\n                isReviewChangesOpen={changesOpen && paneParams?.changesInspectorTab === 'review'}\n                onOpenReviewChanges={onHistoryOpen}\n                onSetFocus={onConnectorSetFocus}\n              >\n                <DocumentPanel\n                  footerHeight={footerHeight || null}\n                  headerHeight={headerHeight || null}\n                  isInspectOpen={inspectOpen}\n                  rootElement={rootElement}\n                  setDocumentPanelPortalElement={setDocumentPanelPortalElement}\n                  footer={\n                    <DocumentLayoutFooter\n                      documentPanelPortalElement={documentPanelPortalElement}\n                      setFooterElement={setFooterElement}\n                      setActionsBoxElement={setActionsBoxElement}\n                    />\n                  }\n                />\n              </StyledChangeConnectorRoot>\n            </Flex>\n          </DialogProvider>\n          <DocumentOperationResults />\n        </DocumentActionShortcuts>\n      </FieldActionsProvider>\n    </GetFormValueProvider>\n  )\n}\n","import {type ComponentType} from 'react'\nimport {type DocumentLayoutProps, useMiddlewareComponents} from 'sanity'\n\nimport {DocumentLayout} from './DocumentLayout'\nimport {pickDocumentLayoutComponent} from './pickDocumentLayoutComponent'\n\n/**\n * A hook that returns the document layout composed\n * by the Components API (`document.components.layout`).\n */\nexport function useDocumentLayoutComponent(): ComponentType<\n  Omit<DocumentLayoutProps, 'renderDefault'>\n> {\n  return useMiddlewareComponents({\n    pick: pickDocumentLayoutComponent,\n    defaultComponent: DocumentLayout,\n  })\n}\n","import {type SanityDocument} from '@sanity/types'\nimport {useEffect, useState} from 'react'\nimport {useHistoryStore, useTimelineSelector, useTimelineStore} from 'sanity'\n\nexport const useDocumentLastRev = (documentId: string, documentType: string) => {\n  const historyStore = useHistoryStore()\n  const [lastRevisionDocument, setLastRevisionDocument] = useState<SanityDocument | null>(null)\n  const [loading, setLoading] = useState(false)\n\n  // Get the timeline store to access lastNonDeletedRevId\n  // needs to be done this way because otherwise the revision id will not be the most updated\n  // in case if you edit the document in between deletes, for example\n  const timelineStore = useTimelineStore({\n    documentId,\n    documentType,\n  })\n\n  // Get the lastNonDeletedRevId from the timeline store\n  const lastNonDeletedRevId = useTimelineSelector(\n    timelineStore,\n    (state) => state.lastNonDeletedRevId,\n  )\n\n  useEffect(() => {\n    if (lastNonDeletedRevId && documentId) {\n      setLoading(true)\n      historyStore\n        .getDocumentAtRevision(documentId, lastNonDeletedRevId)\n        .then((document) => {\n          setLastRevisionDocument(document || null)\n          setLoading(false)\n        })\n        .catch(() => {\n          setLastRevisionDocument(null)\n          setLoading(false)\n        })\n    } else {\n      setLastRevisionDocument(null)\n      setLoading(false)\n    }\n  }, [documentId, lastNonDeletedRevId, historyStore])\n\n  return {lastRevisionDocument, loading}\n}\n","import {defineEvent} from '@sanity/telemetry'\n\n/**\n * @internal\n */\nexport const DocumentURLCopied = defineEvent({\n  name: 'DocumentURLCopied',\n  version: 1,\n  description: 'User copied document URL to clipboard',\n})\n","import {type Template} from 'sanity'\n\ninterface InitialValueOptions {\n  documentType: string\n  panePayload?: unknown\n  templateName?: string\n  templateParams?: Record<string, unknown>\n  urlTemplate?: string\n}\n\n/**\n * @internal\n */\nexport function getInitialValueTemplateOpts(\n  templates: Template[],\n  opts: InitialValueOptions,\n): {templateName: string; templateParams: Record<string, unknown>} {\n  const payload = opts.panePayload || {}\n  const structureNodeTemplate = opts.templateName\n\n  if (opts.urlTemplate && structureNodeTemplate && structureNodeTemplate !== opts.urlTemplate) {\n    console.warn(\n      `Conflicting templates: URL says \"${opts.urlTemplate}\", structure node says \"${structureNodeTemplate}\". Using \"${structureNodeTemplate}\".`,\n    )\n  }\n\n  const template = structureNodeTemplate || opts.urlTemplate\n  const typeTemplates = templates.filter((t) => t.schemaType === opts.documentType)\n\n  const templateParams = {\n    ...opts.templateParams,\n    ...(typeof payload === 'object' ? payload || {} : {}),\n  }\n\n  let templateName = template\n\n  // If we have not specified a specific template, and we only have a single\n  // template available for a schema type, use it\n  if (!template && typeTemplates.length === 1) {\n    templateName = typeTemplates[0].id\n  }\n\n  return {templateName: templateName!, templateParams}\n}\n","import {useMemo} from 'react'\nimport {useInitialValue, useTemplates, useUnique} from 'sanity'\n\nimport {type PaneRouterContextValue, usePaneRouter} from '../../components'\nimport {type DocumentPaneNode} from '../../types'\nimport {getInitialValueTemplateOpts} from './getInitialValueTemplateOpts'\n\nexport const useDocumentPaneInitialValue = ({\n  paneOptions,\n  documentType,\n  documentId,\n  params,\n}: {\n  paneOptions: DocumentPaneNode['options']\n  documentType: string\n  documentId: string\n  params: NonNullable<PaneRouterContextValue['params']>\n}) => {\n  const templates = useTemplates()\n  const paneRouter = usePaneRouter()\n  const panePayload = useUnique(paneRouter.payload)\n\n  const {templateName, templateParams} = useMemo(\n    () =>\n      getInitialValueTemplateOpts(templates, {\n        documentType,\n        templateName: paneOptions.template,\n        templateParams: paneOptions.templateParameters,\n        panePayload,\n        urlTemplate: params.template,\n      }),\n    [documentType, paneOptions, params.template, panePayload, templates],\n  )\n\n  const initialValueRaw = useInitialValue({\n    documentId,\n    documentType,\n    templateName,\n    templateParams,\n    version: params.version,\n  })\n\n  const initialValue = useUnique(initialValueRaw)\n  return initialValue\n}\n","import {useCallback, useEffect, useMemo, useRef, useState} from 'react'\nimport {type DocumentInspector, useSource} from 'sanity'\n\nimport {type PaneRouterContextValue} from '../../components'\nimport {type PaneMenuItem} from '../../types'\nimport {useStructureTool} from '../../useStructureTool'\nimport {HISTORY_INSPECTOR_NAME, INSPECT_ACTION_PREFIX} from './constants'\n\nexport function useDocumentPaneInspector({\n  documentId,\n  documentType,\n  params,\n  setParams,\n}: {\n  params: NonNullable<PaneRouterContextValue['params']>\n  documentId: string\n  documentType: string\n  setParams: (params: Record<string, string | undefined>) => void\n}) {\n  const {features} = useStructureTool()\n  const source = useSource()\n  const inspectorsResolver = source.document.inspectors\n\n  const inspectors: DocumentInspector[] = useMemo(\n    () => inspectorsResolver({documentId, documentType}),\n    [documentId, documentType, inspectorsResolver],\n  )\n\n  const [inspectorName, setInspectorName] = useState<string | null>(() => params.inspect || null)\n\n  // Handle inspector name changes from URL\n  const inspectParamRef = useRef<string | undefined>(params.inspect)\n  useEffect(() => {\n    if (inspectParamRef.current !== params.inspect) {\n      inspectParamRef.current = params.inspect\n      setInspectorName(params.inspect || null)\n    }\n  }, [params.inspect])\n\n  const currentInspector = useMemo(\n    () => inspectors?.find((i) => i.name === inspectorName),\n    [inspectors, inspectorName],\n  )\n  const historyInspector = useMemo(\n    () => inspectors.find((i) => i.name === HISTORY_INSPECTOR_NAME),\n    [inspectors],\n  )\n\n  const changesOpen = currentInspector?.name === HISTORY_INSPECTOR_NAME\n\n  const closeInspector = useCallback(\n    (closeInspectorName?: string) => {\n      const inspector = closeInspectorName && inspectors.find((i) => i.name === closeInspectorName)\n\n      if (closeInspectorName && !inspector) {\n        console.warn(`No inspector named \"${closeInspectorName}\"`)\n        return\n      }\n\n      if (!currentInspector) {\n        return\n      }\n\n      if (inspector) {\n        const result = inspector.onClose?.({params}) ?? {params}\n\n        setInspectorName(null)\n        inspectParamRef.current = undefined\n\n        setParams({...result.params, inspect: undefined})\n\n        return\n      }\n\n      if (currentInspector) {\n        const result = currentInspector.onClose?.({params}) ?? {params}\n\n        setInspectorName(null)\n        inspectParamRef.current = undefined\n\n        setParams({...result.params, inspect: undefined})\n      }\n    },\n    [currentInspector, inspectors, params, setParams],\n  )\n\n  const openInspector = useCallback(\n    (nextInspectorName: string, paneParams?: Record<string, string>) => {\n      const nextInspector = inspectors.find((i) => i.name === nextInspectorName)\n\n      if (!nextInspector) {\n        console.warn(`No inspector named \"${nextInspectorName}\"`)\n        return\n      }\n\n      // if the inspector is already open, only update params\n      if (currentInspector?.name === nextInspector.name) {\n        setParams({...params, ...paneParams, inspect: nextInspector.name})\n        return\n      }\n\n      let currentParams = params\n\n      if (currentInspector) {\n        const closeResult = nextInspector.onClose?.({params: currentParams}) ?? {\n          params: currentParams,\n        }\n\n        currentParams = closeResult.params\n      }\n\n      const result = nextInspector.onOpen?.({params: currentParams}) ?? {params: currentParams}\n\n      setInspectorName(nextInspector.name)\n      inspectParamRef.current = nextInspector.name\n\n      setParams({...result.params, ...paneParams, inspect: nextInspector.name})\n    },\n    [currentInspector, inspectors, params, setParams],\n  )\n  const handleHistoryClose = useCallback(() => {\n    if (historyInspector) {\n      closeInspector(historyInspector.name)\n    }\n  }, [closeInspector, historyInspector])\n\n  const handleHistoryOpen = useCallback(() => {\n    if (!features.reviewChanges) {\n      return\n    }\n\n    if (historyInspector) {\n      openInspector(historyInspector.name, {changesInspectorTab: 'review'})\n    }\n  }, [features.reviewChanges, openInspector, historyInspector])\n\n  const inspectOpen = params.inspect === 'on'\n\n  const toggleLegacyInspect = useCallback(\n    (toggle = !inspectOpen) => {\n      if (toggle) {\n        setParams({...params, inspect: 'on'})\n      } else {\n        setParams({...params, inspect: undefined})\n      }\n    },\n    [inspectOpen, params, setParams],\n  )\n\n  const handleLegacyInspectClose = useCallback(\n    () => toggleLegacyInspect(false),\n    [toggleLegacyInspect],\n  )\n\n  const handleInspectorAction = useCallback(\n    (item: PaneMenuItem) => {\n      if (item.action === 'inspect') {\n        toggleLegacyInspect(true)\n        return true\n      }\n\n      if (typeof item.action !== 'string') return false\n      const nextInspectorName = item.action.slice(INSPECT_ACTION_PREFIX.length)\n      const nextInspector = inspectors.find((i) => i.name === nextInspectorName)\n\n      if (nextInspector) {\n        if (nextInspector.name === inspectorName) {\n          closeInspector(nextInspector.name)\n        } else {\n          openInspector(nextInspector.name)\n        }\n        return true\n      }\n      return false\n    },\n    [closeInspector, inspectorName, inspectors, openInspector, toggleLegacyInspect],\n  )\n\n  return {\n    changesOpen,\n    currentInspector,\n    inspectors,\n    closeInspector,\n    openInspector,\n    handleHistoryClose,\n    handleHistoryOpen,\n    handleInspectorAction,\n    // TODO: Deprecate this legacy inspect toggle it's used to render the <InspectDialog /> component\n    handleLegacyInspectClose,\n    inspectOpen,\n  }\n}\n","import {type SanityDocument} from '@sanity/types'\nimport {useEffect, useMemo} from 'react'\nimport {useObservable} from 'react-rx'\nimport {BehaviorSubject, from, of} from 'rxjs'\nimport {catchError, debounceTime, distinctUntilChanged, switchMap} from 'rxjs/operators'\nimport {isRecord, useSource} from 'sanity'\n\nconst isSanityDocument = (value: unknown): value is SanityDocument =>\n  isRecord(value) && typeof value._id === 'string' && typeof value._type === 'string'\n\nexport function usePreviewUrl(value: Partial<SanityDocument> | undefined): string | undefined {\n  const {resolveProductionUrl} = useSource().document\n  const subject = useMemo(\n    () => new BehaviorSubject<Partial<SanityDocument> | undefined>(undefined),\n    [],\n  )\n\n  useEffect(() => {\n    subject.next(value)\n  }, [subject, value])\n\n  const resolvedUrlObservable = useMemo(() => {\n    return subject.asObservable().pipe(\n      // this so that the preview URL isn't fetched on every keystroke\n      distinctUntilChanged(),\n      debounceTime(500),\n      switchMap((document) =>\n        isSanityDocument(document) ? from(resolveProductionUrl({document})) : of(undefined),\n      ),\n      distinctUntilChanged(),\n      catchError((err) => {\n        const message =\n          isRecord(err) && typeof err.message === 'string' ? err.message : 'Unknown error'\n        throw new Error(`An error was thrown while trying to get your preview url: ${message}`)\n      }),\n    )\n  }, [resolveProductionUrl, subject])\n\n  return useObservable(resolvedUrlObservable)\n}\n","import {useTelemetry} from '@sanity/telemetry/react'\nimport {type ObjectSchemaType, type SanityDocument, type SanityDocumentLike} from '@sanity/types'\nimport {useToast} from '@sanity/ui'\nimport {fromString as pathFromString, resolveKeyedPath} from '@sanity/util/paths'\nimport {memo, useCallback, useEffect, useMemo, useRef, useState} from 'react'\nimport {\n  type DocumentActionsContext,\n  type DocumentActionsVersionType,\n  type DocumentFieldAction,\n  type EditStateFor,\n  EMPTY_ARRAY,\n  getPublishedId,\n  isGoingToUnpublish,\n  isPerspectiveWriteable,\n  isVersionId,\n  type PartialContext,\n  useCopyPaste,\n  useDocumentForm,\n  usePerspective,\n  useSchema,\n  useSource,\n  useStudioUrl,\n  useTranslation,\n  useUnique,\n  useWorkspace,\n} from 'sanity'\nimport {DocumentPaneContext} from 'sanity/_singletons'\n\nimport {usePaneRouter} from '../../components'\nimport {useDiffViewRouter} from '../../diffView/hooks/useDiffViewRouter'\nimport {useDocumentIdStack} from '../../hooks/useDocumentIdStack'\nimport {useDocumentLastRev} from '../../hooks/useDocumentLastRev'\nimport {structureLocaleNamespace} from '../../i18n'\nimport {type PaneMenuItem} from '../../types'\nimport {DocumentURLCopied} from './__telemetry__'\nimport {DEFAULT_MENU_ITEM_GROUPS, EMPTY_PARAMS, INSPECT_ACTION_PREFIX} from './constants'\nimport {type DocumentPaneContextValue} from './DocumentPaneContext'\nimport {\n  type DocumentPaneProviderProps as DocumentPaneProviderWrapperProps,\n  type HistoryStoreProps,\n} from './types'\nimport {useDocumentPaneInitialValue} from './useDocumentPaneInitialValue'\nimport {useDocumentPaneInspector} from './useDocumentPaneInspector'\nimport {usePreviewUrl} from './usePreviewUrl'\n\ninterface DocumentPaneProviderProps extends DocumentPaneProviderWrapperProps {\n  historyStore: HistoryStoreProps\n}\n\n/**\n * @internal\n */\n// eslint-disable-next-line max-statements\nexport const DocumentPaneProvider = memo((props: DocumentPaneProviderProps) => {\n  const {children, index, pane, paneKey, onFocusPath, forcedVersion, historyStore} = props\n  const {\n    store: timelineStore,\n    error: timelineError,\n    ready: timelineReady,\n    revisionDocument,\n    onOlderRevision,\n    sinceDocument,\n    isPristine,\n    revisionId,\n    lastNonDeletedRevId,\n  } = historyStore\n\n  const schema = useSchema()\n  const {setDocumentMeta} = useCopyPaste()\n  const {\n    document: {\n      actions: documentActions,\n      badges: documentBadges,\n      unstable_fieldActions: fieldActionsResolver,\n      unstable_languageFilter: languageFilterResolver,\n      drafts: {enabled: draftsEnabled},\n    },\n  } = useSource()\n  const telemetry = useTelemetry()\n  const paneRouter = usePaneRouter()\n  const setPaneParams = paneRouter.setParams\n  const {push: pushToast} = useToast()\n  const {\n    options,\n    menuItemGroups = DEFAULT_MENU_ITEM_GROUPS,\n    title = null,\n    views: viewsProp = [],\n  } = pane\n  const paneOptions = useUnique(options)\n  const documentIdRaw = paneOptions.id\n  const documentId = getPublishedId(documentIdRaw)\n  const documentType = options.type\n  const params = useUnique(paneRouter.params) || EMPTY_PARAMS\n  const {buildStudioUrl} = useStudioUrl()\n\n  const perspective = usePerspective()\n\n  const {\n    document: {\n      drafts: {enabled: isDraftModelEnabled},\n    },\n  } = useWorkspace()\n\n  const {selectedReleaseId, selectedPerspectiveName} = useMemo(() => {\n    // TODO: COREL - Remove this after updating sanity-assist to use <PerspectiveProvider>\n    if (forcedVersion) {\n      return forcedVersion\n    }\n    return {\n      selectedPerspectiveName: perspective.selectedPerspectiveName,\n      selectedReleaseId: perspective.selectedReleaseId,\n    }\n  }, [forcedVersion, perspective.selectedPerspectiveName, perspective.selectedReleaseId])\n\n  const diffViewRouter = useDiffViewRouter()\n\n  const initialValue = useDocumentPaneInitialValue({\n    paneOptions,\n    documentId,\n    documentType,\n    params,\n  })\n\n  const isInitialValueLoading = initialValue.loading\n  const {\n    changesOpen,\n    currentInspector,\n    inspectors,\n    closeInspector,\n    openInspector,\n    handleHistoryClose,\n    handleHistoryOpen,\n    handleInspectorAction,\n    inspectOpen,\n    handleLegacyInspectClose,\n  } = useDocumentPaneInspector({documentId, documentType, params, setParams: setPaneParams})\n\n  const [isDeleting, setIsDeleting] = useState(false)\n  const {lastRevisionDocument} = useDocumentLastRev(documentId, documentType)\n\n  /**\n   * Determine if the current document is deleted.\n   *\n   * When the timeline is available – we check for the absence of an editable document pair\n   * (both draft + published versions) as well as a non 'pristine' timeline (i.e. a timeline that consists\n   * of at least one chunk).\n   *\n   * In the _very rare_ case where the timeline cannot be loaded – we skip this check and always assume\n   * the document is NOT deleted. Since we can't accurately determine document deleted status without history,\n   * skipping this check means that in these cases, users will at least be able to create new documents\n   * without them being incorrectly marked as deleted.\n   */\n  const getIsDeleted = useCallback(\n    (editState: EditStateFor) => {\n      if (!timelineReady) return false\n      return (\n        Boolean(!editState?.draft && !editState?.published && !editState?.version) && !isPristine\n      )\n    },\n    [timelineReady, isPristine],\n  )\n\n  const getComparisonValue = useCallback(\n    (editState: EditStateFor) => {\n      return changesOpen ? sinceDocument || editState?.published : editState?.published || null\n    },\n    [changesOpen, sinceDocument],\n  )\n\n  const schemaType = schema.get(documentType) as ObjectSchemaType | undefined\n\n  const getIsReadOnly = useCallback(\n    (editState: EditStateFor): boolean => {\n      const isDeleted = getIsDeleted(editState)\n      const seeingHistoryDocument = Boolean(params.rev)\n      return (\n        seeingHistoryDocument ||\n        isDeleting ||\n        isDeleted ||\n        !isPerspectiveWriteable({\n          selectedPerspective: perspective.selectedPerspective,\n          isDraftModelEnabled,\n          schemaType,\n        }).result\n      )\n    },\n    [\n      getIsDeleted,\n      isDeleting,\n      isDraftModelEnabled,\n      params.rev,\n      perspective.selectedPerspective,\n      schemaType,\n    ],\n  )\n\n  const getDisplayed = useCallback(\n    (value: SanityDocumentLike) => {\n      if (onOlderRevision) {\n        return revisionDocument || {_id: value._id, _type: value._type}\n      }\n\n      // If the document is deleted (no draft, published, or version), return the last revision\n      const isDeleted = !value._createdAt && !value._updatedAt\n      if (isDeleted && lastNonDeletedRevId) {\n        // Return the fetched last revision document if available\n        if (lastRevisionDocument) {\n          return lastRevisionDocument\n        }\n      }\n\n      return value\n    },\n    [onOlderRevision, revisionDocument, lastNonDeletedRevId, lastRevisionDocument],\n  )\n\n  const {\n    editState,\n    connectionState,\n    focusPath,\n    onChange,\n    validation,\n    ready: formReady,\n    value,\n    formState,\n    permissions,\n    onPathOpen,\n    isPermissionsLoading,\n    formStateRef,\n    onProgrammaticFocus,\n\n    collapsedFieldSets,\n    collapsedPaths,\n    onBlur,\n    onFocus,\n    onSetActiveFieldGroup,\n    onSetCollapsedPath,\n    onSetCollapsedFieldSet,\n    openPath,\n  } = useDocumentForm({\n    changesOpen,\n    documentType,\n    documentId,\n    initialValue: initialValue,\n    comparisonValue: getComparisonValue,\n    releaseId: selectedReleaseId,\n    selectedPerspectiveName,\n    initialFocusPath: params.path ? pathFromString(params.path) : EMPTY_ARRAY,\n    readOnly: getIsReadOnly,\n    onFocusPath,\n    getFormDocumentValue: getDisplayed,\n  })\n\n  const getDocumentVersionType = useCallback(() => {\n    let version: DocumentActionsVersionType\n    switch (true) {\n      case Boolean(params.rev):\n        version = 'revision'\n        break\n      case selectedReleaseId && isVersionId(value._id):\n        version = 'version'\n        break\n      case selectedPerspectiveName === 'published':\n        version = 'published'\n        break\n      case draftsEnabled:\n        version = 'draft'\n        break\n      default:\n        version = 'published'\n    }\n\n    return version\n  }, [params.rev, selectedReleaseId, value._id, selectedPerspectiveName, draftsEnabled])\n\n  const actionsPerspective = useMemo(() => getDocumentVersionType(), [getDocumentVersionType])\n\n  const documentActionsProps: PartialContext<DocumentActionsContext> = useMemo(\n    () => ({\n      schemaType: documentType,\n      documentId,\n      versionType: actionsPerspective,\n      releaseId: selectedReleaseId,\n    }),\n    [documentType, documentId, actionsPerspective, selectedReleaseId],\n  )\n\n  // Resolve document actions\n  const actions = useMemo(\n    () => documentActions(documentActionsProps),\n    [documentActions, documentActionsProps],\n  )\n\n  // Resolve document badges\n  const badges = useMemo(\n    () => documentBadges({schemaType: documentType, documentId}),\n    [documentBadges, documentId, documentType],\n  )\n\n  // Resolve document language filter\n  const languageFilter = useMemo(\n    () => languageFilterResolver({schemaType: documentType, documentId}),\n    [documentId, documentType, languageFilterResolver],\n  )\n\n  const views = useUnique(viewsProp)\n\n  const activeViewId = params.view || (views[0] && views[0].id) || null\n\n  // TODO: this may cause a lot of churn. May be a good idea to prevent these\n  // requests unless the menu is open somehow\n  const previewUrl = usePreviewUrl(value)\n\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const fieldActions: DocumentFieldAction[] = useMemo(\n    () => (schemaType ? fieldActionsResolver({documentId, documentType, schemaType}) : []),\n    [documentId, documentType, fieldActionsResolver, schemaType],\n  )\n\n  /**\n   * Note that in addition to connection and edit state, we also wait for a valid document timeline\n   * range to be loaded. This means if we're loading an older revision, the full transaction range must\n   * be loaded in full prior to the document being displayed.\n   *\n   * Previously, visiting studio URLs with timeline params would display the 'current' document and then\n   * 'snap' in the older revision, which was disorienting and could happen mid-edit.\n   *\n   * In the event that the timeline cannot be loaded due to TimelineController errors or blocked requests,\n   * we skip this readiness check to ensure that users aren't locked out of editing. Trying to select\n   * a timeline revision in this instance will display an error localized to the popover itself.\n   */\n  const ready = formReady && (!params.rev || timelineReady || !!timelineError)\n\n  const displayed: Partial<SanityDocument> | undefined = useMemo(\n    () => getDisplayed(value),\n    [getDisplayed, value],\n  )\n\n  const {previousId} = useDocumentIdStack({displayed, documentId, editState})\n\n  const setTimelineRange = useCallback(\n    (newSince: string, newRev: string | null) => {\n      setPaneParams({\n        ...params,\n        since: newSince,\n        rev: newRev || undefined,\n      })\n    },\n    [params, setPaneParams],\n  )\n\n  const handlePaneClose = useCallback(() => paneRouter.closeCurrent(), [paneRouter])\n\n  const handlePaneSplit = useCallback(() => paneRouter.duplicateCurrent(), [paneRouter])\n\n  const handleMenuAction = useCallback(\n    async (item: PaneMenuItem) => {\n      if (item.action === 'production-preview' && previewUrl) {\n        window.open(previewUrl)\n        return true\n      }\n\n      if (item.action === 'copy-document-url' && navigator) {\n        telemetry.log(DocumentURLCopied)\n        // Chose to copy the user's current URL instead of\n        // the document's edit intent link because\n        // of bugs when resolving a document that has\n        // multiple access paths within Structure\n        const copyUrl = buildStudioUrl({\n          coreUi: (url) => `${url}/intent/edit/id=${documentId};type=${documentType}`,\n        })\n        await navigator.clipboard.writeText(copyUrl)\n        pushToast({\n          id: 'copy-document-url',\n          status: 'info',\n          title: t('panes.document-operation-results.operation-success_copy-url'),\n        })\n        return true\n      }\n\n      if (item.action === 'reviewChanges') {\n        handleHistoryOpen()\n        return true\n      }\n\n      if (\n        item.action === 'inspect' ||\n        (typeof item.action === 'string' && item.action.startsWith(INSPECT_ACTION_PREFIX))\n      ) {\n        handleInspectorAction(item)\n      }\n\n      if (item.action === 'compareVersions' && typeof previousId !== 'undefined') {\n        diffViewRouter.navigateDiffView({\n          mode: 'version',\n          previousDocument: {\n            type: documentType,\n            id: previousId,\n          },\n          nextDocument: {\n            type: documentType,\n            id: value._id,\n          },\n        })\n        return true\n      }\n\n      return false\n    },\n    [\n      previewUrl,\n      previousId,\n      telemetry,\n      buildStudioUrl,\n      pushToast,\n      t,\n      documentId,\n      documentType,\n      handleHistoryOpen,\n      handleInspectorAction,\n      diffViewRouter,\n      value._id,\n    ],\n  )\n\n  useEffect(() => {\n    setDocumentMeta({\n      documentId,\n      documentType,\n      schemaType: schemaType!,\n      onChange,\n    })\n  }, [documentId, documentType, schemaType, onChange, setDocumentMeta])\n\n  const compareValue = useMemo(() => getComparisonValue(editState), [editState, getComparisonValue])\n  const isDeleted = useMemo(() => getIsDeleted(editState), [editState, getIsDeleted])\n  const revisionNotFound = onOlderRevision && !revisionDocument\n\n  const currentDisplayed = useMemo(() => {\n    if (editState.version && isGoingToUnpublish(editState.version)) {\n      return editState.published\n    }\n    return displayed\n  }, [editState.version, editState.published, displayed])\n\n  const documentPane: DocumentPaneContextValue = useMemo(\n    () =>\n      ({\n        actions,\n        activeViewId,\n        badges,\n        changesOpen,\n        closeInspector,\n        collapsedFieldSets,\n        collapsedPaths,\n        compareValue,\n        connectionState,\n        displayed: currentDisplayed,\n        documentId,\n        documentIdRaw,\n        documentType,\n        editState,\n        fieldActions,\n        focusPath,\n        inspector: currentInspector || null,\n        inspectors,\n        onBlur,\n        onChange,\n        onFocus,\n        onPathOpen,\n        onHistoryClose: handleHistoryClose,\n        onHistoryOpen: handleHistoryOpen,\n        onInspectClose: handleLegacyInspectClose,\n        onMenuAction: handleMenuAction,\n        onPaneClose: handlePaneClose,\n        onPaneSplit: handlePaneSplit,\n        onSetActiveFieldGroup,\n        onSetCollapsedPath,\n        onSetCollapsedFieldSet,\n        openInspector,\n        openPath,\n        index,\n        inspectOpen,\n        validation,\n        menuItemGroups: menuItemGroups || [],\n        paneKey,\n        previewUrl,\n        ready,\n        schemaType: schemaType!,\n        isPermissionsLoading,\n        isInitialValueLoading,\n        permissions,\n        setTimelineRange,\n        setIsDeleting,\n        isDeleting,\n        isDeleted,\n        timelineError,\n        timelineStore,\n        title,\n        value,\n        selectedReleaseId,\n        views,\n        formState,\n        unstable_languageFilter: languageFilter,\n        revisionId,\n        revisionNotFound,\n        lastNonDeletedRevId,\n        lastRevisionDocument,\n      }) satisfies DocumentPaneContextValue,\n    [\n      actions,\n      activeViewId,\n      badges,\n      changesOpen,\n      closeInspector,\n      collapsedFieldSets,\n      collapsedPaths,\n      compareValue,\n      connectionState,\n      currentDisplayed,\n      documentId,\n      documentIdRaw,\n      documentType,\n      editState,\n      fieldActions,\n      focusPath,\n      currentInspector,\n      inspectors,\n      onBlur,\n      onChange,\n      onFocus,\n      onPathOpen,\n      handleHistoryClose,\n      handleHistoryOpen,\n      handleLegacyInspectClose,\n      handleMenuAction,\n      handlePaneClose,\n      handlePaneSplit,\n      onSetActiveFieldGroup,\n      onSetCollapsedPath,\n      onSetCollapsedFieldSet,\n      openInspector,\n      openPath,\n      index,\n      inspectOpen,\n      validation,\n      menuItemGroups,\n      paneKey,\n      previewUrl,\n      ready,\n      schemaType,\n      isPermissionsLoading,\n      isInitialValueLoading,\n      permissions,\n      setTimelineRange,\n      isDeleting,\n      isDeleted,\n      timelineError,\n      timelineStore,\n      title,\n      value,\n      selectedReleaseId,\n      views,\n      formState,\n      languageFilter,\n      revisionId,\n      revisionNotFound,\n      lastNonDeletedRevId,\n      lastRevisionDocument,\n    ],\n  )\n\n  const pathRef = useRef<string | undefined>(undefined)\n  useEffect(() => {\n    if (ready && params.path) {\n      const {path, ...restParams} = params\n\n      // trigger a focus when `params.path` changes\n      if (path !== pathRef.current) {\n        const pathFromUrl = resolveKeyedPath(formStateRef.current?.value, pathFromString(path))\n        onProgrammaticFocus(pathFromUrl)\n      }\n\n      // remove the `path`-param from url after we have consumed it as the initial focus path\n      paneRouter.setParams(restParams)\n    }\n    pathRef.current = params.path\n\n    return undefined\n  }, [formStateRef, onProgrammaticFocus, paneRouter, params, ready])\n\n  return (\n    <DocumentPaneContext.Provider value={documentPane}>{children}</DocumentPaneContext.Provider>\n  )\n})\n\nDocumentPaneProvider.displayName = 'Memo(DocumentPaneProvider)'\n","import {type ObjectSchemaType} from '@sanity/types'\nimport {useMemo} from 'react'\nimport {\n  EMPTY_ARRAY,\n  EventsProvider,\n  getDraftId,\n  getPublishedId,\n  getReleaseIdFromReleaseDocumentId,\n  getVersionId,\n  isDeleteDocumentGroupEvent,\n  isDeleteDocumentVersionEvent,\n  PerspectiveProvider,\n  useArchivedReleases,\n  useEditState,\n  useEventsStore,\n  usePerspective,\n  useSchema,\n} from 'sanity'\n\nimport {usePaneRouter} from '../../components'\nimport {EMPTY_PARAMS} from './constants'\nimport {usePaneOptions} from './DocumentPane'\nimport {DocumentPaneProvider} from './DocumentPaneProvider'\nimport {type DocumentPaneProviderProps} from './types'\n\nexport const DocumentEventsPane = (props: DocumentPaneProviderProps) => {\n  const {params = EMPTY_PARAMS} = usePaneRouter()\n  const options = usePaneOptions(props.pane.options, params)\n  const schema = useSchema()\n  const documentType = options.type\n  const schemaType = schema.get(options.type) as ObjectSchemaType | undefined\n  const liveEdit = Boolean(schemaType?.liveEdit)\n\n  const {selectedPerspectiveName, selectedReleaseId, selectedPerspective} = usePerspective()\n  const {data: archivedReleases} = useArchivedReleases()\n  const editState = useEditState(\n    getPublishedId(options.id),\n    documentType,\n    'default',\n    selectedReleaseId,\n  )\n\n  const showingPublishedOnDraft = liveEdit && selectedPerspective === 'drafts' && !editState?.draft\n  const {rev, since} = params\n  const historyVersion = params.historyVersion\n\n  const documentId = useMemo(() => {\n    if (showingPublishedOnDraft) {\n      return getPublishedId(options.id)\n    }\n    if (\n      historyVersion &&\n      archivedReleases.some(\n        (release) => getReleaseIdFromReleaseDocumentId(release._id) === historyVersion,\n      )\n    ) {\n      // Check if we have a release that matches with this historyVersion\n      return getVersionId(options.id, historyVersion)\n    }\n    if (typeof selectedPerspectiveName === 'undefined') {\n      return getDraftId(options.id)\n    }\n    if (selectedPerspectiveName === 'published') {\n      return getPublishedId(options.id)\n    }\n    if (selectedReleaseId) {\n      return getVersionId(options.id, selectedPerspectiveName)\n    }\n    return options.id\n  }, [\n    archivedReleases,\n    historyVersion,\n    selectedPerspectiveName,\n    options.id,\n    showingPublishedOnDraft,\n    selectedReleaseId,\n  ])\n\n  const eventsStore = useEventsStore({documentId, documentType: options.type, rev, since})\n\n  const historyStoreProps = useMemo(\n    () => ({\n      error: eventsStore.error,\n      revisionId: eventsStore.revision?.revisionId || null,\n      onOlderRevision: Boolean(rev && !eventsStore.revision?.loading),\n      revisionDocument: eventsStore.revision?.document || null,\n      sinceDocument: eventsStore.sinceRevision?.document || null,\n      ready: !eventsStore.loading,\n      isPristine: Boolean(eventsStore.events.length === 0),\n      lastNonDeletedRevId:\n        eventsStore.events.find(\n          (e) => !isDeleteDocumentGroupEvent(e) && !isDeleteDocumentVersionEvent(e),\n        )?.id || null,\n    }),\n    [eventsStore, rev],\n  )\n\n  const value = useMemo(() => eventsStore, [eventsStore])\n\n  return (\n    <EventsProvider value={value}>\n      {historyVersion ? (\n        <PerspectiveProvider\n          selectedPerspectiveName={historyVersion}\n          excludedPerspectives={EMPTY_ARRAY}\n        >\n          <DocumentPaneProvider {...props} historyStore={historyStoreProps} />\n        </PerspectiveProvider>\n      ) : (\n        <DocumentPaneProvider {...props} historyStore={historyStoreProps} />\n      )}\n    </EventsProvider>\n  )\n}\n","import {type SanityDocument} from '@sanity/types'\nimport {useMemo, useState} from 'react'\nimport {getPublishedId, useTimelineSelector, useTimelineStore} from 'sanity'\n\nimport {usePaneRouter} from '../../components'\nimport {EMPTY_PARAMS} from './constants'\nimport {usePaneOptions} from './DocumentPane'\nimport {DocumentPaneProvider} from './DocumentPaneProvider'\nimport {type DocumentPaneProviderProps} from './types'\n\nexport const DocumentPaneWithLegacyTimelineStore = (props: DocumentPaneProviderProps) => {\n  const {pane} = props\n  const paneRouter = usePaneRouter()\n  const options = usePaneOptions(pane.options, paneRouter.params)\n\n  const params = paneRouter.params || EMPTY_PARAMS\n\n  const [timelineError, setTimelineError] = useState<Error | null>(null)\n\n  const store = useTimelineStore({\n    documentId: getPublishedId(options.id),\n    documentType: options.type,\n    onError: setTimelineError,\n    rev: params.rev,\n    since: params.since,\n  })\n\n  const onOlderRevision = useTimelineSelector(store, (state) => state.onOlderRevision)\n  const revTime = useTimelineSelector(store, (state) => state.revTime)\n  const sinceAttributes = useTimelineSelector(store, (state) => state.sinceAttributes)\n  const timelineDisplayed = useTimelineSelector(store, (state) => state.timelineDisplayed)\n  const timelineReady = useTimelineSelector(store, (state) => state.timelineReady)\n  const isPristine = useTimelineSelector(store, (state) => state.isPristine)\n  const lastNonDeletedRevId = useTimelineSelector(store, (state) => state.lastNonDeletedRevId)\n\n  const historyStoreProps = useMemo(\n    () => ({\n      store,\n      error: timelineError,\n      revisionId: revTime?.id || null,\n      onOlderRevision: onOlderRevision,\n      revisionDocument: timelineDisplayed as SanityDocument | null,\n      sinceDocument: sinceAttributes as SanityDocument | null,\n      ready: timelineReady,\n      isPristine: Boolean(isPristine),\n      lastNonDeletedRevId,\n    }),\n    [\n      store,\n      timelineError,\n      revTime?.id,\n      onOlderRevision,\n      timelineDisplayed,\n      sinceAttributes,\n      timelineReady,\n      isPristine,\n      lastNonDeletedRevId,\n    ],\n  )\n  return <DocumentPaneProvider {...props} historyStore={historyStoreProps} />\n}\n","import {memo} from 'react'\nimport {useSource} from 'sanity'\n\nimport {DocumentEventsPane} from './DocumentEventsPane'\nimport {DocumentPaneWithLegacyTimelineStore} from './DocumentPaneLegacyTimeline'\nimport {type DocumentPaneProviderProps} from './types'\n\n/**\n * @internal\n */\nexport const DocumentPaneProviderWrapper = memo((props: DocumentPaneProviderProps) => {\n  const source = useSource()\n  if (source.beta?.eventsAPI?.documents) {\n    return <DocumentEventsPane {...props} />\n  }\n  return <DocumentPaneWithLegacyTimelineStore {...props} />\n})\nDocumentPaneProviderWrapper.displayName = 'Memo(DocumentPaneProviderWrapper)'\n","import {useEffect, useRef} from 'react'\nimport {usePerspective} from 'sanity'\nimport {useEffectEvent} from 'use-effect-event'\n\nimport {usePaneRouter} from '../../components'\nimport {EMPTY_PARAMS} from './constants'\n\n/**\n * This hooks takes care of resetting the history related params when the perspective changes.\n * It needs to be placed in a stable component, like the `DocumentPane`, which won't be unmounted when the perspective changes.\n */\nexport function useResetHistoryParams() {\n  const {params = EMPTY_PARAMS, setParams} = usePaneRouter()\n\n  const {selectedPerspectiveName} = usePerspective()\n  const isMounted = useRef(false)\n\n  const updateHistoryParams = useEffectEvent((_perspective?: string) => {\n    // Check if any of the history related params are set, and reset them, don't unnecessarily update the params\n    const PARAMS_TO_UPDATE = ['since', 'historyVersion', 'rev', 'preserveRev']\n    const shouldUpdateParams = PARAMS_TO_UPDATE.some((param) => params[param])\n    if (!shouldUpdateParams) return\n\n    setParams({\n      ...params,\n      // Reset the history related params when the perspective changes, as they don't make sense\n      // in the context of the new perspective - preserveRev is used when setting draft revision.\n      rev: params.preserveRev === 'true' ? params.rev : undefined,\n      preserveRev: undefined,\n      since: undefined,\n      historyVersion: undefined,\n    })\n  })\n  useEffect(() => {\n    // Skip the first run to avoid resetting the params on initial load\n    if (isMounted.current) {\n      updateHistoryParams(selectedPerspectiveName)\n    }\n  }, [selectedPerspectiveName])\n\n  useEffect(() => {\n    isMounted.current = true\n    return () => {\n      isMounted.current = false\n    }\n  }, [])\n}\n","import {type Path} from '@sanity/types'\nimport {Stack, Text} from '@sanity/ui'\nimport {fromString as pathFromString} from '@sanity/util/paths'\nimport {memo, useMemo} from 'react'\nimport {\n  CopyPasteProvider,\n  ReferenceInputOptionsProvider,\n  SourceProvider,\n  Translate,\n  useDocumentType,\n  usePerspective,\n  useSource,\n  useTemplatePermissions,\n  useTemplates,\n  useTranslation,\n} from 'sanity'\n\nimport {usePaneRouter} from '../../components'\nimport {DiffViewDocumentLayout} from '../../diffView/plugin/DiffViewDocumentLayout'\nimport {structureLocaleNamespace} from '../../i18n'\nimport {type DocumentPaneNode} from '../../types'\nimport {ErrorPane} from '../error'\nimport {LoadingPane} from '../loading'\nimport {CommentsWrapper} from './comments'\nimport {useDocumentLayoutComponent} from './document-layout'\nimport {DocumentPaneProviderWrapper} from './DocumentPaneProviderWrapper'\nimport {type DocumentPaneProviderProps} from './types'\nimport {useResetHistoryParams} from './useResetHistoryParams'\n\ntype DocumentPaneOptions = DocumentPaneNode['options']\n\n/**\n * @internal\n */\nexport const DocumentPane = memo(function DocumentPane(props: DocumentPaneProviderProps) {\n  const {name: parentSourceName} = useSource()\n\n  return (\n    <SourceProvider name={props.pane.source || parentSourceName}>\n      <CopyPasteProvider>\n        <DocumentPaneInner {...props} />\n      </CopyPasteProvider>\n    </SourceProvider>\n  )\n})\n\nfunction DocumentPaneInner(props: DocumentPaneProviderProps) {\n  const {pane, paneKey} = props\n  const {resolveNewDocumentOptions} = useSource().document\n  const {selectedPerspectiveName} = usePerspective()\n  const paneRouter = usePaneRouter()\n  const options = usePaneOptions(pane.options, paneRouter.params)\n  const {documentType, isLoaded: isDocumentLoaded} = useDocumentType(options.id, options.type)\n  useResetHistoryParams()\n  const DocumentLayout = useDocumentLayoutComponent()\n\n  // The templates that should be creatable from inside this document pane.\n  // For example, from the \"Create new\" menu in reference inputs.\n  const templateItems = useMemo(() => {\n    return resolveNewDocumentOptions({\n      type: 'document',\n      documentId: options.id,\n      schemaType: options.type,\n    })\n  }, [options.id, options.type, resolveNewDocumentOptions])\n\n  const [templatePermissions, isTemplatePermissionsLoading] = useTemplatePermissions({\n    templateItems,\n  })\n  const isLoaded = isDocumentLoaded && !isTemplatePermissionsLoading\n\n  const providerProps = useMemo(() => {\n    return isLoaded && documentType && options.type !== documentType\n      ? mergeDocumentType(props, options, documentType)\n      : props\n  }, [props, documentType, isLoaded, options])\n\n  const {ReferenceChildLink, handleEditReference, groupIndex, routerPanesState} = paneRouter\n  const childParams = routerPanesState[groupIndex + 1]?.[0].params || {}\n  const routerPanesStateLength = routerPanesState.length\n  const {parentRefPath} = childParams\n\n  const activePath: {path: Path; state: 'selected' | 'pressed' | 'none'} = useMemo(() => {\n    return parentRefPath\n      ? {\n          path: pathFromString(parentRefPath),\n          state:\n            groupIndex >= routerPanesStateLength - 1\n              ? 'none'\n              : groupIndex >= routerPanesStateLength - 2\n                ? 'selected'\n                : 'pressed',\n        }\n      : {path: [], state: 'none'}\n  }, [parentRefPath, groupIndex, routerPanesStateLength])\n\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  if (options.type === '*' && !isLoaded) {\n    return (\n      <LoadingPane\n        flex={2.5}\n        minWidth={320}\n        paneKey={paneKey}\n        title={t('panes.document-pane.document-not-found.loading')}\n      />\n    )\n  }\n\n  if (!documentType) {\n    return (\n      <ErrorPane\n        flex={2.5}\n        minWidth={320}\n        paneKey={paneKey}\n        title={t('panes.document-pane.document-not-found.title')}\n      >\n        <Stack space={4}>\n          <Text as=\"p\">\n            <Translate\n              t={t}\n              i18nKey=\"panes.document-pane.document-not-found.text\"\n              values={{id: options.id}}\n              components={{Code: ({children}) => <code>{children}</code>}}\n            />\n          </Text>\n        </Stack>\n      </ErrorPane>\n    )\n  }\n\n  return (\n    <DocumentPaneProviderWrapper\n      // this needs to be here to avoid formState from being re-used across (incompatible) document types\n      // see https://github.com/sanity-io/sanity/discussions/3794 for a description of the problem\n      key={`${documentType}-${options.id}-${selectedPerspectiveName || ''}`}\n      {...providerProps}\n    >\n      {/* NOTE: this is a temporary location for this provider until we */}\n      {/* stabilize the reference input options formally in the form builder */}\n      <ReferenceInputOptionsProvider\n        EditReferenceLinkComponent={ReferenceChildLink}\n        onEditReference={handleEditReference}\n        initialValueTemplateItems={templatePermissions}\n        activePath={activePath}\n      >\n        <DiffViewDocumentLayout documentId={options.id} documentType={options.type}>\n          <CommentsWrapper documentId={options.id} documentType={options.type}>\n            <DocumentLayout documentId={options.id} documentType={options.type} />\n          </CommentsWrapper>\n        </DiffViewDocumentLayout>\n      </ReferenceInputOptionsProvider>\n    </DocumentPaneProviderWrapper>\n  )\n}\n\n/**\n * @internal\n */\nexport function usePaneOptions(\n  options: DocumentPaneOptions,\n  params: Record<string, string | undefined> = {},\n): DocumentPaneOptions {\n  const templates = useTemplates()\n\n  return useMemo(() => {\n    // The document type is provided, so return\n    if (options.type && options.type !== '*') {\n      return options\n    }\n\n    // Attempt to derive document type from the template configuration\n    const templateName = options.template || params.template\n    const template = templateName ? templates.find((t) => t.id === templateName) : undefined\n    const documentType = template?.schemaType\n\n    // No document type was found in a template\n    if (!documentType) {\n      return options\n    }\n\n    // The template provided the document type, so modify the pane’s `options` property\n    return {...options, type: documentType}\n  }, [options, params.template, templates])\n}\n\nfunction mergeDocumentType(\n  props: DocumentPaneProviderProps,\n  options: DocumentPaneOptions,\n  documentType: string,\n): DocumentPaneProviderProps {\n  return {\n    ...props,\n    pane: {\n      ...props.pane,\n      options: {...options, type: documentType},\n    },\n  }\n}\n","import {type ComponentType, type ForwardedRef, forwardRef, useContext, useMemo} from 'react'\nimport {PaneRouterContext} from 'sanity/_singletons'\nimport {StateLink} from 'sanity/router'\n\nimport {type BackLinkProps} from './types'\n\n/**\n * @internal\n */\nexport const BackLink = forwardRef(function BackLink(\n  props: BackLinkProps,\n  ref: ForwardedRef<HTMLAnchorElement>,\n) {\n  const {routerPanesState, groupIndex} = useContext(PaneRouterContext)\n  const panes = useMemo(() => routerPanesState.slice(0, groupIndex), [groupIndex, routerPanesState])\n  const state = useMemo(() => ({panes}), [panes])\n\n  return <StateLink {...props} ref={ref} state={state} />\n}) as ComponentType<BackLinkProps>\n","import {type ForwardedRef, forwardRef, useContext} from 'react'\nimport {PaneRouterContext} from 'sanity/_singletons'\nimport {StateLink} from 'sanity/router'\n\nimport {type ChildLinkProps} from './types'\n\n/**\n * @internal\n */\nexport const ChildLink = forwardRef(function ChildLink(\n  props: ChildLinkProps,\n  ref: ForwardedRef<HTMLAnchorElement>,\n) {\n  const {childId, childPayload, childParameters, ...rest} = props\n  const {routerPanesState, groupIndex} = useContext(PaneRouterContext)\n\n  return (\n    <StateLink\n      {...rest}\n      ref={ref}\n      state={{\n        panes: [\n          ...routerPanesState.slice(0, groupIndex + 1),\n          [{id: childId, params: childParameters, payload: childPayload}],\n        ],\n      }}\n    />\n  )\n})\n","import {type ForwardedRef, forwardRef, type ReactNode, useContext, useMemo} from 'react'\nimport {useUnique} from 'sanity'\nimport {PaneRouterContext} from 'sanity/_singletons'\nimport {StateLink} from 'sanity/router'\n\ninterface ParameterizedLinkProps {\n  params?: Record<string, string>\n  payload?: unknown\n  children?: ReactNode\n}\n\n/**\n * @internal\n */\nexport const ParameterizedLink = forwardRef(function ParameterizedLink(\n  props: ParameterizedLinkProps,\n  ref: ForwardedRef<HTMLAnchorElement>,\n) {\n  const {routerPanesState: currentPanes, groupIndex, siblingIndex} = useContext(PaneRouterContext)\n  const {params, payload, ...rest} = props\n  const nextParams = useUnique(params)\n  const nextPayload = useUnique(payload)\n\n  const nextState = useMemo(() => {\n    const currentGroup = currentPanes[groupIndex]\n    const currentSibling = currentGroup[siblingIndex]\n\n    const nextSibling = {\n      ...currentSibling,\n      params: nextParams ?? currentSibling.params,\n      payload: nextPayload ?? currentSibling.payload,\n    }\n\n    const nextGroup = [\n      ...currentGroup.slice(0, siblingIndex),\n      nextSibling,\n      ...currentGroup.slice(siblingIndex + 1),\n    ]\n\n    const nextPanes = [\n      ...currentPanes.slice(0, groupIndex),\n      nextGroup,\n      ...currentPanes.slice(groupIndex + 1),\n    ]\n\n    return {panes: nextPanes}\n  }, [currentPanes, groupIndex, nextParams, nextPayload, siblingIndex])\n\n  return <StateLink ref={ref} {...rest} state={nextState} />\n})\n","import {toString as pathToString} from '@sanity/util/paths'\nimport {type ForwardedRef, forwardRef} from 'react'\n\nimport {ChildLink} from './ChildLink'\nimport {type ReferenceChildLinkProps} from './types'\n\nexport const ReferenceChildLink = forwardRef(function ReferenceChildLink(\n  {documentId, documentType, parentRefPath, children, template, ...rest}: ReferenceChildLinkProps,\n  ref: ForwardedRef<HTMLAnchorElement>,\n) {\n  return (\n    <ChildLink\n      {...rest}\n      ref={ref}\n      childId={documentId}\n      childPayload={template?.params}\n      childParameters={{\n        type: documentType,\n        parentRefPath: pathToString(parentRefPath),\n        ...(template && {template: template?.id}),\n      }}\n    >\n      {children}\n    </ChildLink>\n  )\n})\n","import {toString as pathToString} from '@sanity/util/paths'\nimport {omit} from 'lodash'\nimport {type ReactNode, useCallback, useMemo} from 'react'\nimport {PaneRouterContext} from 'sanity/_singletons'\nimport {useRouter, useRouterState} from 'sanity/router'\n\nimport {type RouterPaneGroup, type RouterPanes, type RouterPaneSibling} from '../../types'\nimport {usePaneLayout} from '../pane/usePaneLayout'\nimport {BackLink} from './BackLink'\nimport {ChildLink} from './ChildLink'\nimport {ParameterizedLink} from './ParameterizedLink'\nimport {ReferenceChildLink} from './ReferenceChildLink'\nimport {type PaneRouterContextValue} from './types'\n\nconst emptyArray: never[] = []\n\n/**\n * @internal\n */\nexport function PaneRouterProvider(props: {\n  children: ReactNode\n  flatIndex: number\n  index: number\n  params: Record<string, string | undefined>\n  payload: unknown\n  siblingIndex: number\n}) {\n  const {children, flatIndex, index, params, payload, siblingIndex} = props\n  const {navigate, navigateIntent, resolvePathFromState} = useRouter()\n  const routerState = useRouterState()\n  const {panes, expand} = usePaneLayout()\n  const routerPaneGroups: RouterPaneGroup[] = useMemo(\n    () => (routerState?.panes || emptyArray) as RouterPanes,\n    [routerState?.panes],\n  )\n  const lastPane = useMemo(() => panes?.[panes.length - 2], [panes])\n\n  const groupIndex = index - 1\n\n  const createNextRouterState = useCallback(\n    (modifier: (siblings: RouterPaneGroup, item: RouterPaneSibling) => RouterPaneGroup) => {\n      const currentGroup = routerPaneGroups[groupIndex] || []\n      const currentItem = currentGroup[siblingIndex]\n      const nextGroup = modifier(currentGroup, currentItem)\n      const nextPanes = [\n        ...routerPaneGroups.slice(0, groupIndex),\n        nextGroup,\n        ...routerPaneGroups.slice(groupIndex + 1),\n      ]\n      const nextRouterState = {...routerState, panes: nextPanes}\n\n      return nextRouterState\n    },\n    [groupIndex, routerPaneGroups, routerState, siblingIndex],\n  )\n\n  const modifyCurrentGroup = useCallback(\n    (modifier: (siblings: RouterPaneGroup, item: RouterPaneSibling) => RouterPaneGroup) => {\n      const nextRouterState = createNextRouterState(modifier)\n      setTimeout(() => navigate(nextRouterState), 0)\n      return nextRouterState\n    },\n    [createNextRouterState, navigate],\n  )\n\n  const createPathWithParams: PaneRouterContextValue['createPathWithParams'] = useCallback(\n    (nextParams) => {\n      const nextRouterState = createNextRouterState((siblings, item) => [\n        ...siblings.slice(0, siblingIndex),\n        {...item, params: nextParams},\n        ...siblings.slice(siblingIndex + 1),\n      ])\n\n      return resolvePathFromState(nextRouterState)\n    },\n    [createNextRouterState, resolvePathFromState, siblingIndex],\n  )\n\n  const setPayload: PaneRouterContextValue['setPayload'] = useCallback(\n    (nextPayload) => {\n      modifyCurrentGroup((siblings, item) => [\n        ...siblings.slice(0, siblingIndex),\n        {...item, payload: nextPayload},\n        ...siblings.slice(siblingIndex + 1),\n      ])\n    },\n    [modifyCurrentGroup, siblingIndex],\n  )\n\n  const setParams: PaneRouterContextValue['setParams'] = useCallback(\n    (nextParams) => {\n      modifyCurrentGroup((siblings, item) => [\n        ...siblings.slice(0, siblingIndex),\n        {...item, params: nextParams},\n        ...siblings.slice(siblingIndex + 1),\n      ])\n    },\n    [modifyCurrentGroup, siblingIndex],\n  )\n\n  const handleEditReference: PaneRouterContextValue['handleEditReference'] = useCallback(\n    ({id, parentRefPath, type, template, version}) => {\n      navigate({\n        panes: [\n          ...routerPaneGroups.slice(0, groupIndex + 1),\n          [\n            {\n              id,\n              params: {\n                template: template.id,\n                parentRefPath: pathToString(parentRefPath),\n                type,\n                version,\n              },\n              payload: template.params,\n            },\n          ],\n        ],\n      })\n    },\n    [groupIndex, navigate, routerPaneGroups],\n  )\n\n  const ctx: PaneRouterContextValue = useMemo(\n    () => ({\n      // Zero-based index (position) of pane, visually\n      index: flatIndex,\n\n      // Zero-based index of pane group (within URL structure)\n      groupIndex,\n\n      // Zero-based index of pane within sibling group\n      siblingIndex,\n\n      // Payload of the current pane\n      payload,\n\n      // Params of the current pane\n      params,\n\n      // Whether or not the pane has any siblings (within the same group)\n      hasGroupSiblings: routerPaneGroups[groupIndex]\n        ? routerPaneGroups[groupIndex].length > 1\n        : false,\n\n      // The length of the current group\n      groupLength: routerPaneGroups[groupIndex] ? routerPaneGroups[groupIndex].length : 0,\n\n      // Current router state for the \"panes\" property\n      routerPanesState: routerPaneGroups,\n\n      // Curried StateLink that passes the correct state automatically\n      ChildLink,\n\n      // Curried StateLink that pops off the last pane group\n      // Only pass if this is not the first pane\n      BackLink: flatIndex ? BackLink : undefined,\n\n      // A specialized `ChildLink` that takes in the needed props to open a\n      // referenced document to the right\n      ReferenceChildLink,\n\n      // Similar to `ReferenceChildLink` expect without the wrapping component\n      handleEditReference,\n\n      // Curried StateLink that passed the correct state, but merges params/payload\n      ParameterizedLink,\n\n      // Replaces the current pane with a new one\n      replaceCurrent: (opts = {}): void => {\n        modifyCurrentGroup(() => [\n          {id: opts.id || '', payload: opts.payload, params: opts.params || {}},\n        ])\n      },\n\n      // Removes the current pane from the group\n      closeCurrent: (): void => {\n        modifyCurrentGroup((siblings, item) =>\n          siblings.length > 1 ? siblings.filter((sibling) => sibling !== item) : siblings,\n        )\n      },\n\n      // Removes all panes to the right including current\n      closeCurrentAndAfter: (expandLast = true): void => {\n        if (expandLast && lastPane) {\n          expand(lastPane.element)\n        }\n        navigate({\n          panes: routerPaneGroups.slice(0, groupIndex),\n        })\n      },\n\n      // Duplicate the current pane, with optional overrides for payload, parameters\n      duplicateCurrent: (options): void => {\n        modifyCurrentGroup((siblings, item) => {\n          const duplicatedItem = {\n            ...item,\n            payload: options?.payload || item.payload,\n            params: options?.params || item.params,\n          }\n\n          return [\n            ...siblings.slice(0, siblingIndex),\n            duplicatedItem,\n            ...siblings.slice(siblingIndex),\n          ]\n        })\n      },\n\n      // Set the view for the current pane\n      setView: (viewId) => {\n        const restParams = omit(params, 'view')\n        return setParams(viewId ? {...restParams, view: viewId} : restParams)\n      },\n\n      // Set the parameters for the current pane\n      setParams,\n\n      // Set the payload for the current pane\n      setPayload,\n\n      // A function that returns a path with the given parameters\n      createPathWithParams,\n\n      // Proxied navigation to a given intent. Consider just exposing `router` instead?\n      navigateIntent,\n    }),\n    [\n      flatIndex,\n      groupIndex,\n      siblingIndex,\n      payload,\n      params,\n      routerPaneGroups,\n      handleEditReference,\n      setParams,\n      setPayload,\n      createPathWithParams,\n      navigateIntent,\n      modifyCurrentGroup,\n      lastPane,\n      navigate,\n      expand,\n    ],\n  )\n\n  return <PaneRouterContext.Provider value={ctx}>{children}</PaneRouterContext.Provider>\n}\n","import {Box, Text} from '@sanity/ui'\nimport {isRecord, Translate, useTranslation} from 'sanity'\n\nimport {Pane, PaneContent, PaneHeader} from '../../components/pane'\nimport {structureLocaleNamespace} from '../../i18n'\n\ninterface UnknownPaneProps {\n  isSelected: boolean\n  pane: unknown\n  paneKey: string\n}\n\n/**\n * @internal\n */\nexport function UnknownPane(props: UnknownPaneProps) {\n  const {isSelected, pane, paneKey} = props\n  const type = (isRecord(pane) && pane.type) || null\n  const {t} = useTranslation(structureLocaleNamespace)\n  return (\n    <Pane id={paneKey} selected={isSelected}>\n      <PaneHeader title={t('panes.unknown-pane-type.title')} />\n      <PaneContent>\n        <Box padding={4}>\n          {typeof type === 'string' ? (\n            <Text as=\"p\" muted>\n              <Translate\n                t={t}\n                i18nKey=\"panes.unknown-pane-type.unknown-type.text\"\n                values={{type}}\n              />\n            </Text>\n          ) : (\n            <Text as=\"p\" muted>\n              <Translate t={t} i18nKey=\"panes.unknown-pane-type.missing-type.text\" />\n            </Text>\n          )}\n        </Box>\n      </PaneContent>\n    </Pane>\n  )\n}\n","import {isEqual} from 'lodash'\nimport {lazy, memo, Suspense} from 'react'\n\nimport {PaneRouterProvider} from '../components/paneRouter'\nimport {type PaneNode} from '../types'\nimport {LoadingPane} from './loading'\nimport {UnknownPane} from './unknown'\n\ninterface StructureToolPaneProps {\n  active: boolean\n  childItemId: string | null\n  groupIndex: number\n  index: number\n  itemId: string\n  pane: PaneNode\n  paneKey: string\n  params: Record<string, string | undefined> & {perspective?: string}\n  payload: unknown\n  path: string\n  selected: boolean\n  siblingIndex: number\n}\n\n// TODO: audit this creates separate chunks\nconst paneMap = {\n  component: lazy(() => import('./userComponent')),\n  document: lazy(() => import('./document/pane')),\n  documentList: lazy(() => import('./documentList/pane')),\n  list: lazy(() => import('./list')),\n}\n\n/**\n * NOTE: The same pane might appear multiple times (split pane), so use index as tiebreaker\n *\n * @internal\n */\nexport const StructureToolPane = memo(\n  function StructureToolPane(props: StructureToolPaneProps) {\n    const {\n      active,\n      childItemId,\n      groupIndex,\n      index,\n      itemId,\n      pane,\n      paneKey,\n      params,\n      payload,\n      path,\n      selected,\n      siblingIndex,\n    } = props\n\n    const PaneComponent = paneMap[pane.type] || UnknownPane\n\n    return (\n      <PaneRouterProvider\n        flatIndex={index}\n        index={groupIndex}\n        params={params}\n        payload={payload}\n        siblingIndex={siblingIndex}\n      >\n        <Suspense fallback={<LoadingPane paneKey={paneKey} path={path} selected={selected} />}>\n          <PaneComponent\n            childItemId={childItemId || ''}\n            index={index}\n            itemId={itemId}\n            isActive={active}\n            isSelected={selected}\n            paneKey={paneKey}\n            // @ts-expect-error TS doesn't know how to handle this intersection\n            pane={pane}\n          />\n        </Suspense>\n      </PaneRouterProvider>\n    )\n  },\n  (\n    {params: prevParams = {}, payload: prevPayload = null, ...prev},\n    {params: nextParams = {}, payload: nextPayload = null, ...next},\n  ) => {\n    // deeply compare these objects (it's okay, they're small)\n    if (!isEqual(prevParams, nextParams)) return false\n    if (!isEqual(prevPayload, nextPayload)) return false\n\n    const keys = new Set([...Object.keys(prev), ...Object.keys(next)]) as Set<\n      keyof typeof next | keyof typeof prev\n    >\n\n    // then shallow equal the rest\n    for (const key of keys) {\n      if (prev[key] !== next[key]) return false\n    }\n\n    return true\n  },\n)\n","import {type SanityDocumentLike} from '@sanity/types'\nimport {useSchema, useTranslation} from 'sanity'\n\nimport {structureLocaleNamespace} from '../i18n'\nimport {useDocumentTitle} from '../panes'\n\nexport interface DocTitleProps {\n  document: SanityDocumentLike\n}\n\nexport function DocTitle(props: DocTitleProps) {\n  const {document: documentValue} = props\n  const schema = useSchema()\n  const schemaType = schema.get(documentValue._type)\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {title} = useDocumentTitle()\n\n  if (!schemaType) {\n    return <code>{t('doc-title.unknown-schema-type.text', {schemaType: documentValue._type})}</code>\n  }\n\n  return (\n    <>\n      {title || (\n        <span style={{color: 'var(--card-muted-fg-color)'}}>{t('doc-title.fallback.text')}</span>\n      )}\n    </>\n  )\n}\n","import {InfoOutlineIcon} from '@sanity/icons'\nimport {Box, Flex, Inline, rem, Text} from '@sanity/ui'\nimport {useTranslation} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Tooltip} from '../../../ui-components'\nimport {structureLocaleNamespace} from '../../i18n'\n\nexport const ChevronWrapper = styled(Box)`\n  margin-left: auto;\n`\n\nexport const CrossDatasetReferencesDetails = styled.details`\n  flex: none;\n\n  &[open] ${ChevronWrapper} {\n    transform: rotate(180deg);\n  }\n`\n\nexport const CrossDatasetReferencesSummary = styled.summary`\n  list-style: none;\n\n  &::-webkit-details-marker {\n    display: none;\n  }\n`\n\nexport const Table = styled.table`\n  width: 100%;\n  text-align: left;\n  padding: 0 ${({theme}) => rem(theme.sanity.space[2])};\n  border-collapse: collapse;\n\n  th {\n    padding: ${({theme}) => rem(theme.sanity.space[1])};\n  }\n\n  td {\n    padding: 0 ${({theme}) => rem(theme.sanity.space[1])};\n  }\n\n  tr > *:last-child {\n    text-align: right;\n  }\n`\n\nexport const DocumentIdFlex = styled(Flex)`\n  min-height: 33px;\n`\n\nexport const OtherReferenceCount = (props: {totalCount: number; references: unknown[]}) => {\n  const {t} = useTranslation(structureLocaleNamespace)\n  const difference = props.totalCount - props.references.length\n\n  if (!difference) return null\n\n  return (\n    <Box padding={2}>\n      <Inline space={2}>\n        <Text size={1} muted>\n          {t('confirm-delete-dialog.other-reference-count.title', {count: difference})}\n        </Text>\n\n        <Tooltip\n          portal\n          placement=\"top\"\n          content={t('confirm-delete-dialog.other-reference-count.tooltip')}\n        >\n          <Text size={1} muted>\n            <InfoOutlineIcon />\n          </Text>\n        </Tooltip>\n      </Inline>\n    </Box>\n  )\n}\n","import {type SanityDocument, type SchemaType} from '@sanity/types'\nimport {Flex} from '@sanity/ui'\nimport {type ComponentType, useMemo} from 'react'\nimport {useObservable} from 'react-rx'\nimport {\n  type DocumentPresence,\n  DocumentPreviewPresence,\n  type DocumentPreviewStore,\n  DocumentStatus,\n  DocumentStatusIndicator,\n  type GeneralPreviewLayoutKey,\n  getPreviewStateObservable,\n  getPreviewValueWithFallback,\n  SanityDefaultPreview,\n  useDocumentVersionInfo,\n  usePerspective,\n} from 'sanity'\n\nimport {TooltipDelayGroupProvider} from '../../../ui-components'\n\nexport interface PaneItemPreviewProps {\n  documentPreviewStore: DocumentPreviewStore\n  icon: ComponentType | false\n  layout: GeneralPreviewLayoutKey\n  presence?: DocumentPresence[]\n  schemaType: SchemaType\n  value: SanityDocument\n}\n\n/**\n * Preview component for _documents_ rendered in structure panes.\n *\n * Note that non-document previews are not handled by this component,\n * despite being pane items! Non-document previews bypass this entirely\n * and are rendered by `<SanityDefaultPreview>`.\n */\nexport function PaneItemPreview(props: PaneItemPreviewProps) {\n  const {icon, layout, presence, schemaType, value} = props\n\n  const versionsInfo = useDocumentVersionInfo(value._id)\n\n  const {perspectiveStack} = usePerspective()\n  const previewStateObservable = useMemo(() => {\n    return getPreviewStateObservable(\n      props.documentPreviewStore,\n      schemaType,\n      value._id,\n      perspectiveStack,\n    )\n  }, [props.documentPreviewStore, schemaType, value._id, perspectiveStack])\n\n  const {\n    snapshot,\n    original,\n    isLoading: previewIsLoading,\n  } = useObservable(previewStateObservable, {\n    snapshot: null,\n    isLoading: true,\n    original: null,\n  })\n\n  const isLoading = previewIsLoading\n\n  const status = isLoading ? null : (\n    <TooltipDelayGroupProvider>\n      <Flex align=\"center\" gap={3}>\n        {presence && presence.length > 0 && <DocumentPreviewPresence presence={presence} />}\n        <DocumentStatusIndicator\n          draft={versionsInfo.draft}\n          published={versionsInfo.published}\n          versions={versionsInfo.versions}\n        />\n      </Flex>\n    </TooltipDelayGroupProvider>\n  )\n\n  const tooltip = (\n    <DocumentStatus\n      draft={versionsInfo.draft}\n      published={versionsInfo.published}\n      versions={versionsInfo.versions}\n    />\n  )\n\n  return (\n    <SanityDefaultPreview\n      {...getPreviewValueWithFallback({snapshot, original, fallback: value})}\n      isPlaceholder={isLoading}\n      icon={icon}\n      layout={layout}\n      status={status}\n      tooltip={tooltip}\n    />\n  )\n}\n","import {type SanityDocument, type SchemaType} from '@sanity/types'\nimport {type ReactNode, useCallback} from 'react'\nimport {\n  type FIXME,\n  getPublishedId,\n  PreviewCard,\n  useDocumentPresence,\n  useDocumentPreviewStore,\n} from 'sanity'\n\nimport {PaneItemPreview} from '../paneItem/PaneItemPreview'\nimport {usePaneRouter} from '../paneRouter'\n\nconst EMPTY_ARRAY: [] = []\n\ninterface ReferencePreviewLinkProps {\n  onClick?: () => void\n  type: SchemaType & {icon?: any}\n  value: SanityDocument\n}\n\nexport function ReferencePreviewLink(props: ReferencePreviewLinkProps) {\n  const {onClick, type, value} = props\n  const publishedId = getPublishedId(value?._id)\n  const documentPresence = useDocumentPresence(publishedId)\n  const documentPreviewStore = useDocumentPreviewStore()\n  const {ReferenceChildLink} = usePaneRouter()\n\n  const Link = useCallback(\n    function LinkComponent(linkProps: {children: ReactNode}) {\n      return (\n        <ReferenceChildLink\n          documentId={value?._id}\n          documentType={type?.name}\n          parentRefPath={EMPTY_ARRAY}\n          {...linkProps}\n        />\n      )\n    },\n    [ReferenceChildLink, type?.name, value?._id],\n  )\n\n  return (\n    <PreviewCard __unstable_focusRing as={Link as FIXME} data-as=\"a\" onClick={onClick} radius={2}>\n      <PaneItemPreview\n        documentPreviewStore={documentPreviewStore}\n        icon={type?.icon}\n        layout=\"compact\"\n        presence={documentPresence?.length > 0 ? documentPresence : EMPTY_ARRAY}\n        schemaType={type}\n        value={value}\n      />\n    </PreviewCard>\n  )\n}\n","import {\n  ChevronDownIcon,\n  CopyIcon,\n  DocumentsIcon,\n  UnknownIcon,\n  WarningOutlineIcon,\n} from '@sanity/icons'\nimport {Box, Card, Flex, Stack, Text, useToast} from '@sanity/ui'\nimport {useCallback} from 'react'\nimport {SanityDefaultPreview, Translate, useSchema, useTranslation} from 'sanity'\n\nimport {Button} from '../../../ui-components'\nimport {structureLocaleNamespace} from '../../i18n'\nimport {\n  ChevronWrapper,\n  CrossDatasetReferencesDetails,\n  CrossDatasetReferencesSummary,\n  DocumentIdFlex,\n  OtherReferenceCount,\n  Table,\n} from './ConfirmDeleteDialogBody.styles'\nimport {ReferencePreviewLink} from './ReferencePreviewLink'\nimport {type ReferringDocuments} from './useReferringDocuments'\n\ntype DeletionConfirmationDialogBodyProps = Required<ReferringDocuments> & {\n  documentTitle: React.ReactNode\n  action: 'unpublish' | 'delete'\n  onReferenceLinkClick?: () => void\n}\n\n/**\n * The inner part of the `ConfirmDeleteDialog`. This is ran when both the\n * `crossDatasetReferences` and `internalReferences` are loaded.\n */\nexport function ConfirmDeleteDialogBody({\n  crossDatasetReferences,\n  internalReferences,\n  documentTitle,\n  totalCount,\n  action,\n  datasetNames,\n  hasUnknownDatasetNames,\n  onReferenceLinkClick,\n}: DeletionConfirmationDialogBodyProps) {\n  const schema = useSchema()\n  const toast = useToast()\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const renderPreviewItem = useCallback(\n    (item: any) => {\n      const type = schema.get(item._type)\n      if (type) {\n        return <ReferencePreviewLink type={type} value={item} onClick={onReferenceLinkClick} />\n      }\n\n      return (\n        // Padding added to match the ReferencePreviewLink styling\n        <Box padding={2}>\n          <SanityDefaultPreview\n            icon={UnknownIcon}\n            title={t('confirm-delete-dialog.preview-item.preview-unavailable.title')}\n            subtitle={t('confirm-delete-dialog.preview-item.preview-unavailable.subtitle', {\n              documentId: item._id,\n            })}\n            layout=\"default\"\n          />\n        </Box>\n      )\n    },\n    [schema, t, onReferenceLinkClick],\n  )\n\n  if (internalReferences?.totalCount === 0 && crossDatasetReferences?.totalCount === 0) {\n    return (\n      <Text as=\"p\" size={1}>\n        <Translate\n          t={t}\n          i18nKey=\"confirm-delete-dialog.confirmation.text\"\n          context={action}\n          components={{DocumentTitle: () => <strong>{documentTitle}</strong>}}\n        />\n      </Text>\n    )\n  }\n\n  // We do some extra checks to handle cases where you have unavailable dataset\n  // name(s) due to permissions, both alone and in combination with known datasets\n\n  // This normalizes one or more undefined dataset names to the catch-all `unavailable`\n  const normalizedDatasetNames = [\n    ...datasetNames,\n    ...(hasUnknownDatasetNames ? ['unavailable'] : []),\n  ]\n\n  const datasetSubtitle = t('confirm-delete-dialog.cdr-summary.subtitle', {\n    count: normalizedDatasetNames.length,\n    datasets: normalizedDatasetNames.join(', '),\n    context: hasUnknownDatasetNames && normalizedDatasetNames.length ? 'unavailable' : '',\n  })\n\n  return (\n    <Flex direction=\"column\" gap={4}>\n      <Card padding={3} radius={2} tone=\"caution\" flex=\"none\">\n        <Flex>\n          <Text aria-hidden=\"true\" size={1}>\n            <WarningOutlineIcon />\n          </Text>\n          <Box flex={1} marginLeft={3}>\n            <Text size={1}>\n              <Translate\n                i18nKey=\"confirm-delete-dialog.referring-document-count.text\"\n                components={{DocumentTitle: () => documentTitle}}\n                t={t}\n                values={{count: totalCount}}\n              />\n            </Text>\n          </Box>\n        </Flex>\n      </Card>\n      <Box flex=\"none\">\n        <Text size={1}>\n          <Translate\n            i18nKey=\"confirm-delete-dialog.referring-documents-descriptor.text\"\n            t={t}\n            context={action}\n            components={{DocumentTitle: () => documentTitle}}\n          />\n        </Text>\n      </Box>\n      <Card radius={2} shadow={1} flex=\"auto\" padding={2}>\n        <Flex direction=\"column\">\n          {internalReferences.totalCount > 0 && (\n            <Stack as=\"ul\" marginBottom={2} space={2} data-testid=\"internal-references\">\n              {internalReferences?.references.map((item) => (\n                <Box key={item._id} as=\"li\">\n                  {renderPreviewItem(item)}\n                </Box>\n              ))}\n\n              {internalReferences.totalCount > internalReferences.references.length && (\n                <Box as=\"li\" padding={3}>\n                  <OtherReferenceCount {...internalReferences} />\n                </Box>\n              )}\n            </Stack>\n          )}\n\n          {crossDatasetReferences.totalCount > 0 && (\n            <CrossDatasetReferencesDetails\n              data-testid=\"cross-dataset-references\"\n              style={{\n                // only add the border if needed\n                borderTop:\n                  internalReferences.totalCount > 0\n                    ? '1px solid var(--card-shadow-outline-color)'\n                    : undefined,\n              }}\n            >\n              <CrossDatasetReferencesSummary>\n                <Card\n                  as=\"a\"\n                  marginTop={internalReferences.totalCount > 0 ? 2 : 0}\n                  radius={2}\n                  shadow={1}\n                  paddingY={1}\n                >\n                  <Flex align=\"center\" gap={3} paddingX={3} paddingY={1}>\n                    <Text size={1}>\n                      <DocumentsIcon />\n                    </Text>\n                    <Stack space={2}>\n                      <Text textOverflow=\"ellipsis\" size={1}>\n                        {t('confirm-delete-dialog.cdr-summary.title', {\n                          count: normalizedDatasetNames.length,\n                          documentCount: t('confirm-delete-dialog.cdr-summary.document-count', {\n                            count: crossDatasetReferences.totalCount,\n                          }),\n                        })}\n                      </Text>\n                      <Text title={datasetSubtitle} textOverflow=\"ellipsis\" size={1} muted>\n                        {datasetSubtitle}\n                      </Text>\n                    </Stack>\n                    <ChevronWrapper>\n                      <Text muted size={1}>\n                        <ChevronDownIcon />\n                      </Text>\n                    </ChevronWrapper>\n                  </Flex>\n                </Card>\n              </CrossDatasetReferencesSummary>\n\n              <Box overflow=\"auto\" paddingTop={2}>\n                <Table>\n                  <thead>\n                    <tr>\n                      <th>\n                        <Text muted size={1} style={{minWidth: '5rem'}} weight=\"medium\">\n                          {t('confirm-delete-dialog.cdr-table.project-id.label')}\n                        </Text>\n                      </th>\n                      <th>\n                        <Text muted size={1} weight=\"medium\">\n                          {t('confirm-delete-dialog.cdr-table.dataset.label')}\n                        </Text>\n                      </th>\n                      <th>\n                        <Text muted size={1} weight=\"medium\">\n                          {t('confirm-delete-dialog.cdr-table.document-id.label')}\n                        </Text>\n                      </th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {crossDatasetReferences.references\n                      .filter((reference): reference is Required<typeof reference> => {\n                        return 'projectId' in reference\n                      })\n                      .map(({projectId, datasetName, documentId}, index) => (\n                        <tr key={`${documentId}-${index}`}>\n                          <td>\n                            <Text size={1}>{projectId}</Text>\n                          </td>\n                          <td>\n                            <Text size={1}>{datasetName || 'unavailable'}</Text>\n                          </td>\n                          <td>\n                            <DocumentIdFlex align=\"center\" gap={2} justify=\"flex-end\">\n                              <Text textOverflow=\"ellipsis\" size={1}>\n                                {documentId || 'unavailable'}\n                              </Text>\n                              {documentId && (\n                                <Button\n                                  mode=\"bleed\"\n                                  icon={CopyIcon}\n                                  tooltipProps={{\n                                    content: t(\n                                      'confirm-delete-dialog.cdr-table.copy-id-button.tooltip',\n                                    ),\n                                  }}\n                                  // eslint-disable-next-line react/jsx-no-bind\n                                  onClick={() => {\n                                    navigator.clipboard.writeText(documentId).catch(() => {\n                                      toast.push({\n                                        status: 'error',\n                                        title: t(\n                                          'confirm-delete-dialog.cdr-table.id-copied-toast.title-failed',\n                                        ),\n                                      })\n                                    })\n                                  }}\n                                />\n                              )}\n                            </DocumentIdFlex>\n                          </td>\n                        </tr>\n                      ))}\n                  </tbody>\n                </Table>\n\n                <OtherReferenceCount {...crossDatasetReferences} />\n              </Box>\n            </CrossDatasetReferencesDetails>\n          )}\n        </Flex>\n      </Card>\n      <Box flex=\"none\">\n        <Text size={1}>\n          <Translate\n            i18nKey=\"confirm-delete-dialog.referential-integrity-disclaimer.text\"\n            t={t}\n            context={action}\n            components={{DocumentTitle: () => documentTitle}}\n          />\n        </Text>\n      </Box>\n    </Flex>\n  )\n}\n","import {type ClientError, type SanityClient} from '@sanity/client'\nimport {useMemo} from 'react'\nimport {EMPTY, fromEvent, type Observable, of, timer} from 'rxjs'\nimport {\n  catchError,\n  distinctUntilChanged,\n  map,\n  shareReplay,\n  startWith,\n  switchMap,\n} from 'rxjs/operators'\nimport {\n  type AvailabilityResponse,\n  createHookFromObservableFactory,\n  DEFAULT_STUDIO_CLIENT_OPTIONS,\n  type DocumentStore,\n  getDraftId,\n  getPublishedId,\n  useClient,\n  useDocumentStore,\n} from 'sanity'\n\n// this is used in place of `instanceof` so the matching can be more robust and\n// won't have any issues with dual packages etc\n// https://nodejs.org/api/packages.html#dual-package-hazard\nfunction isClientError(e: unknown): e is ClientError {\n  if (typeof e !== 'object') return false\n  if (!e) return false\n  return 'statusCode' in e && 'response' in e\n}\n\nconst POLL_INTERVAL = 5000\n\n// only fetches when the document is visible\nlet visiblePoll$: Observable<number>\nconst getVisiblePoll$ = () => {\n  if (!visiblePoll$) {\n    visiblePoll$ = fromEvent(document, 'visibilitychange').pipe(\n      // add empty emission to have this fire on creation\n      startWith(null),\n      map(() => document.visibilityState === 'visible'),\n      distinctUntilChanged(),\n      switchMap((visible) =>\n        visible\n          ? // using timer instead of interval since timer will emit on creation\n            timer(0, POLL_INTERVAL)\n          : EMPTY,\n      ),\n      shareReplay({refCount: true, bufferSize: 1}),\n    )\n  }\n  return visiblePoll$\n}\n\nexport type ReferringDocuments = {\n  isLoading: boolean\n  totalCount: number\n  projectIds: string[]\n  datasetNames: string[]\n  hasUnknownDatasetNames: boolean\n  internalReferences?: {\n    totalCount: number\n    references: Array<{_id: string; _type: string}>\n  }\n  crossDatasetReferences?: {\n    totalCount: number\n    references: Array<{\n      /**\n       * The project ID of the document that is currently referencing the subject\n       * document. Unlike `documentId` and `datasetName`, this should always be\n       * defined.\n       */\n      projectId: string\n      /**\n       * The ID of the document that is currently referencing the subject\n       * document. This will be omitted if there is no access to the current\n       * project and dataset pair (e.g. if no `sanity-project-token` were\n       * configured)\n       */\n      documentId?: string\n      /**\n       * The dataset name that is currently referencing the subject document.\n       * This will be omitted if there is no access to the current project and\n       * dataset pair (e.g. if no `sanity-project-token` were configured)\n       */\n      datasetName?: string\n    }>\n  }\n}\n\nfunction getDocumentExistence(\n  documentId: string,\n  {versionedClient}: {versionedClient: SanityClient},\n): Observable<string | undefined> {\n  const draftId = getDraftId(documentId)\n  const publishedId = getPublishedId(documentId)\n  const requestOptions = {\n    uri: versionedClient.getDataUrl('doc', `${draftId},${publishedId}`),\n    json: true,\n    query: {excludeContent: 'true'},\n    tag: 'use-referring-documents.document-existence',\n  }\n  return versionedClient.observable.request<AvailabilityResponse>(requestOptions).pipe(\n    map(({omitted}) => {\n      const nonExistant = omitted.filter((doc) => doc.reason === 'existence')\n      if (nonExistant.length === 2) {\n        // None of the documents exist\n        return undefined\n      }\n\n      if (nonExistant.length === 0) {\n        // Both exist, so use the published one\n        return publishedId\n      }\n\n      // If the draft does not exist, use the published ID, and vice versa\n      return nonExistant.some((doc) => doc.id === draftId) ? publishedId : draftId\n    }),\n  )\n}\n\n/**\n * fetches the cross-dataset references using the client observable.request\n * method (for that requests can be automatically cancelled)\n */\nfunction fetchCrossDatasetReferences(\n  documentId: string,\n  context: {versionedClient: SanityClient},\n): Observable<ReferringDocuments['crossDatasetReferences']> {\n  const {versionedClient} = context\n\n  return getVisiblePoll$().pipe(\n    switchMap(() => getDocumentExistence(documentId, context)),\n    switchMap((checkDocumentId) => {\n      if (!checkDocumentId) {\n        return of({totalCount: 0, references: []})\n      }\n\n      const currentDataset = versionedClient.config().dataset\n\n      return versionedClient.observable\n        .request({\n          url: `/data/references/${currentDataset}/documents/${checkDocumentId}/to?excludeInternalReferences=true&excludePaths=true`,\n          tag: 'use-referring-documents.external',\n        })\n        .pipe(\n          catchError((e) => {\n            // it's possible that referencing document doesn't exist yet so the\n            // API will return a 404. In those cases, we want to catch and return\n            // a response with no references\n            if (isClientError(e) && e.statusCode === 404) {\n              return of({totalCount: 0, references: []})\n            }\n\n            throw e\n          }),\n        )\n    }),\n  )\n}\n\nconst useInternalReferences = createHookFromObservableFactory(\n  ([documentId, documentStore]: [string, DocumentStore]) => {\n    const referencesClause = '*[references($documentId)][0...100]{_id,_type}'\n    const totalClause = 'count(*[references($documentId)])'\n    const fetchQuery = `{\"references\":${referencesClause},\"totalCount\":${totalClause}}`\n    const listenQuery = '*[references($documentId)]'\n\n    return documentStore.listenQuery(\n      {fetch: fetchQuery, listen: listenQuery},\n      {documentId},\n      {tag: 'use-referring-documents', transitions: ['appear', 'disappear'], throttleTime: 5000},\n    ) as Observable<ReferringDocuments['internalReferences']>\n  },\n)\n\nconst useCrossDatasetReferences = createHookFromObservableFactory(\n  ([documentId, versionedClient]: [string, SanityClient]) => {\n    // (documentId: string, versionedClient: SanityClient) => {\n    return getVisiblePoll$().pipe(\n      switchMap(() =>\n        fetchCrossDatasetReferences(documentId, {\n          versionedClient,\n        }),\n      ),\n    )\n  },\n)\n\nexport function useReferringDocuments(documentId: string): ReferringDocuments {\n  const versionedClient = useClient(DEFAULT_STUDIO_CLIENT_OPTIONS)\n\n  const documentStore = useDocumentStore()\n  const publishedId = getPublishedId(documentId)\n\n  const [internalReferences, isInternalReferencesLoading] = useInternalReferences(\n    useMemo(() => [publishedId, documentStore], [documentStore, publishedId]),\n  )\n\n  const [crossDatasetReferences, isCrossDatasetReferencesLoading] = useCrossDatasetReferences(\n    useMemo(() => [publishedId, versionedClient], [publishedId, versionedClient]),\n  )\n\n  const projectIds = useMemo(() => {\n    return Array.from(\n      new Set(\n        crossDatasetReferences?.references\n          .map((crossDatasetReference) => crossDatasetReference.projectId)\n          .filter(Boolean),\n      ),\n    ).sort()\n  }, [crossDatasetReferences?.references])\n\n  const datasetNames = useMemo(() => {\n    return Array.from(\n      new Set<string>(\n        crossDatasetReferences?.references\n          // .filter((name) => typeof name === 'string')\n          .map((crossDatasetReference) => crossDatasetReference?.datasetName || '')\n          .filter((datasetName) => Boolean(datasetName) && datasetName !== ''),\n      ),\n    ).sort()\n  }, [crossDatasetReferences?.references])\n\n  const hasUnknownDatasetNames = useMemo(() => {\n    return Boolean(\n      crossDatasetReferences?.references.some(\n        (crossDatasetReference) => typeof crossDatasetReference.datasetName !== 'string',\n      ),\n    )\n  }, [crossDatasetReferences?.references])\n\n  return {\n    totalCount: (internalReferences?.totalCount || 0) + (crossDatasetReferences?.totalCount || 0),\n    projectIds,\n    datasetNames,\n    hasUnknownDatasetNames,\n    internalReferences,\n    crossDatasetReferences,\n    isLoading: isInternalReferencesLoading || isCrossDatasetReferencesLoading,\n  }\n}\n","import {Box, Flex} from '@sanity/ui'\nimport {useId, useMemo} from 'react'\nimport {LoadingBlock, useTranslation} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Dialog} from '../../../ui-components'\nimport {structureLocaleNamespace} from '../../i18n'\nimport {DocTitle} from '../DocTitle'\nimport {ConfirmDeleteDialogBody} from './ConfirmDeleteDialogBody'\nimport {useReferringDocuments} from './useReferringDocuments'\n\n/** @internal */\nexport const DialogBody = styled(Box)`\n  box-sizing: border-box;\n`\n\n/** @internal */\nexport const LoadingContainer = styled(Flex).attrs({\n  align: 'center',\n  direction: 'column',\n  justify: 'center',\n})`\n  height: 110px;\n`\n\n/** @internal */\nexport interface ConfirmDeleteDialogProps {\n  /**\n   * Incoming document ID used to find other referencing documents. This\n   * field respects draft IDs (e.g. if you pass in a published ID when one\n   * doesn't exist the document title may not show up).\n   */\n  id: string\n  /**\n   * The schema typename of the incoming document\n   */\n  type: string\n  /**\n   * The name of the action being done. (e.g. the `'unpublish'` action requires\n   * the same document deletion confirmation).\n   */\n  action?: 'delete' | 'unpublish'\n  onCancel: () => void\n  onConfirm: () => void\n}\n\n/**\n * A confirmation dialog used to prevent unwanted document deletes. Loads all\n * the referencing internal and cross-data references prior to showing the\n * delete button.\n *\n * @internal\n */\nexport function ConfirmDeleteDialog({\n  id,\n  type,\n  action = 'delete',\n  onCancel,\n  onConfirm,\n}: ConfirmDeleteDialogProps) {\n  const {t} = useTranslation(structureLocaleNamespace)\n  const dialogId = `deletion-confirmation-${useId()}`\n  const {\n    internalReferences,\n    crossDatasetReferences,\n    isLoading,\n    totalCount,\n    projectIds,\n    datasetNames,\n    hasUnknownDatasetNames,\n  } = useReferringDocuments(id)\n  const documentTitle = <DocTitle document={useMemo(() => ({_id: id, _type: type}), [id, type])} />\n  const showConfirmButton = !isLoading\n\n  return (\n    <Dialog\n      width={1}\n      id={dialogId}\n      header={t('confirm-delete-dialog.header.text', {context: action})}\n      footer={{\n        cancelButton: {\n          onClick: onCancel,\n          text: t('confirm-delete-dialog.cancel-button.text'),\n        },\n        confirmButton: showConfirmButton\n          ? {\n              text:\n                totalCount > 0\n                  ? t('confirm-delete-dialog.confirm-anyway-button.text', {context: action})\n                  : t('confirm-delete-dialog.confirm-button.text', {context: action}),\n              onClick: onConfirm,\n            }\n          : undefined,\n      }}\n      onClose={onCancel}\n      onClickOutside={onCancel}\n    >\n      <DialogBody>\n        {crossDatasetReferences && internalReferences && !isLoading ? (\n          <ConfirmDeleteDialogBody\n            crossDatasetReferences={crossDatasetReferences}\n            internalReferences={internalReferences}\n            documentTitle={documentTitle}\n            isLoading={isLoading}\n            totalCount={totalCount}\n            action={action}\n            projectIds={projectIds}\n            datasetNames={datasetNames}\n            hasUnknownDatasetNames={hasUnknownDatasetNames}\n            onReferenceLinkClick={onCancel}\n          />\n        ) : (\n          <LoadingContainer data-testid=\"loading-container\">\n            <LoadingBlock showText title={t('confirm-delete-dialog.loading.text')} />\n          </LoadingContainer>\n        )}\n      </DialogBody>\n    </Dialog>\n  )\n}\n","import {Box, Text} from '@sanity/ui'\nimport {type ComponentProps, useCallback, useId, useState} from 'react'\nimport {useTranslation} from 'sanity'\n\nimport {Dialog, ErrorBoundary} from '../../../ui-components'\nimport {structureLocaleNamespace} from '../../i18n'\nimport {ConfirmDeleteDialog, type ConfirmDeleteDialogProps} from './ConfirmDeleteDialog'\n\nexport type {ConfirmDeleteDialogProps}\n\ntype ArgType<T> = T extends (arg: infer U) => unknown ? U : never\ntype ErrorInfo = ArgType<ComponentProps<typeof ErrorBoundary>['onCatch']>\n\n/** @internal */\nfunction ConfirmDeleteDialogContainer(props: ConfirmDeleteDialogProps) {\n  const {t} = useTranslation(structureLocaleNamespace)\n  const id = useId()\n  const [error, setError] = useState<ErrorInfo | null>(null)\n  const handleRetry = useCallback(() => setError(null), [])\n\n  return error ? (\n    <Dialog\n      id={`dialog-error-${id}`}\n      data-testid=\"confirm-delete-error-dialog\"\n      header={t('confirm-delete-dialog.error.title.text')}\n      footer={{\n        confirmButton: {\n          text: t('confirm-delete-dialog.error.retry-button.text'),\n          onClick: handleRetry,\n          tone: 'default',\n        },\n      }}\n      onClose={props.onCancel}\n    >\n      <Box padding={4}>\n        <Text size={1}>{t('confirm-delete-dialog.error.message.text')}</Text>\n      </Box>\n    </Dialog>\n  ) : (\n    <ErrorBoundary onCatch={setError}>\n      <ConfirmDeleteDialog {...props} />\n    </ErrorBoundary>\n  )\n}\n\nexport {ConfirmDeleteDialogContainer as ConfirmDeleteDialog}\n","import {type ComponentProps, type ForwardedRef, forwardRef, type ReactNode, useMemo} from 'react'\nimport {IntentLink} from 'sanity/router'\n\nimport {Button, type ButtonProps} from '../../ui-components'\nimport {type PaneMenuItem} from '../types'\n\ntype RouterIntent = NonNullable<PaneMenuItem['intent']>\n\nexport const IntentButton = forwardRef(function IntentButton(\n  props: {\n    intent: RouterIntent\n  } & ButtonProps &\n    Omit<ComponentProps<typeof Button>, 'as' | 'href' | 'type'>,\n  ref: ForwardedRef<HTMLAnchorElement>,\n) {\n  const {intent, ...restProps} = props\n\n  const Link = useMemo(\n    () =>\n      // eslint-disable-next-line @typescript-eslint/no-shadow\n      forwardRef(function Link(\n        linkProps: {children: ReactNode},\n        linkRef: ForwardedRef<HTMLAnchorElement>,\n      ) {\n        return (\n          <IntentLink\n            {...linkProps}\n            intent={intent.type}\n            params={intent.params}\n            ref={linkRef}\n            searchParams={intent.searchParams}\n          />\n        )\n      }),\n    [intent],\n  )\n\n  return props.disabled ? (\n    <Button {...restProps} as=\"a\" role=\"link\" aria-disabled=\"true\" />\n  ) : (\n    <Button {...restProps} as={Link} data-as=\"a\" ref={ref as ForwardedRef<HTMLButtonElement>} />\n  )\n})\n","import {type ComponentProps, type ReactNode} from 'react'\nimport {InsufficientPermissionsMessage, useCurrentUser, useTranslation} from 'sanity'\n\nimport {Tooltip} from '../../../ui-components'\nimport {structureLocaleNamespace} from '../../i18n'\n\ninterface InsufficientPermissionsMessageTooltipProps {\n  reveal: boolean\n  /**\n   * delegates to `InsufficientPermissionsMessage`'s `context` prop\n   * @see InsufficientPermissionsMessage\n   */\n  context: ComponentProps<typeof InsufficientPermissionsMessage>['context']\n  loading: boolean\n  children: ReactNode\n}\n\nexport function InsufficientPermissionsMessageTooltip({\n  reveal,\n  context,\n  loading,\n  children,\n}: InsufficientPermissionsMessageTooltipProps) {\n  const currentUser = useCurrentUser()\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  if (!reveal) {\n    return <>{children}</>\n  }\n\n  return (\n    <Tooltip\n      content={\n        loading ? (\n          t('insufficient-permissions-message-tooltip.loading-text')\n        ) : (\n          <InsufficientPermissionsMessage context={context} currentUser={currentUser} />\n        )\n      }\n      portal\n    >\n      {/* this wrapping div is to allow mouse events */}\n      {/* while the child element is disabled */}\n      <div>{children}</div>\n    </Tooltip>\n  )\n}\n","import {AddIcon} from '@sanity/icons'\nimport {Menu} from '@sanity/ui'\nimport {type ComponentProps, type ForwardedRef, forwardRef, useMemo} from 'react'\nimport {\n  type InitialValueTemplateItem,\n  type ReleaseId,\n  type Template,\n  type TemplatePermissionsResult,\n  useGetI18nText,\n  usePerspective,\n  useTemplatePermissions,\n  useTemplates,\n  useTranslation,\n} from 'sanity'\nimport {IntentLink} from 'sanity/router'\n\nimport {Button, MenuButton, MenuItem, type PopoverProps} from '../../../ui-components'\nimport {structureLocaleNamespace} from '../../i18n'\nimport {IntentButton} from '../IntentButton'\nimport {InsufficientPermissionsMessageTooltip} from './InsufficientPermissionsMessageTooltip'\n\nexport type PaneHeaderIntentProps = ComponentProps<typeof IntentButton>['intent']\n\nconst POPOVER_PROPS: PopoverProps = {\n  constrainSize: true,\n  placement: 'bottom',\n  portal: true,\n}\n\nconst getIntent = (\n  templates: Template[],\n  item: InitialValueTemplateItem,\n  version?: ReleaseId,\n): PaneHeaderIntentProps | null => {\n  const typeName = templates.find((t) => t.id === item.templateId)?.schemaType\n  if (!typeName) return null\n\n  const baseParams = {\n    template: item.templateId,\n    type: typeName,\n    version,\n    id: item.initialDocumentId,\n  }\n\n  return {\n    type: 'create',\n    params: item.parameters ? [baseParams, item.parameters] : baseParams,\n    searchParams: version ? [['perspective', version]] : undefined,\n  }\n}\n\ninterface PaneHeaderCreateButtonProps {\n  templateItems: InitialValueTemplateItem[]\n}\n\nexport function PaneHeaderCreateButton({templateItems}: PaneHeaderCreateButtonProps) {\n  const templates = useTemplates()\n  const {selectedReleaseId} = usePerspective()\n\n  const {t} = useTranslation(structureLocaleNamespace)\n  const getI18nText = useGetI18nText([...templateItems, ...templates])\n\n  const [templatePermissions, isTemplatePermissionsLoading] = useTemplatePermissions({\n    templateItems,\n  })\n\n  const nothingGranted = useMemo(() => {\n    return (\n      !isTemplatePermissionsLoading &&\n      templatePermissions?.length !== 0 &&\n      templatePermissions?.every((permission) => !permission.granted)\n    )\n  }, [isTemplatePermissionsLoading, templatePermissions])\n\n  const permissionsById = useMemo(() => {\n    if (!templatePermissions) return {}\n    return templatePermissions.reduce<Record<string, TemplatePermissionsResult | undefined>>(\n      (acc, permission) => {\n        acc[permission.id] = permission\n        return acc\n      },\n      {},\n    )\n  }, [templatePermissions])\n\n  if (templateItems.length === 0) return null\n\n  if (nothingGranted) {\n    return (\n      <InsufficientPermissionsMessageTooltip\n        context=\"create-document-type\"\n        reveal\n        loading={isTemplatePermissionsLoading}\n      >\n        <Button\n          aria-label={t('pane-header.disabled-created-button.aria-label')}\n          icon={AddIcon}\n          data-testid=\"action-intent-button\"\n          disabled\n          mode=\"bleed\"\n          // This button handles the tooltip in a special way, won't reuse the forced tooltip.\n          tooltipProps={null}\n        />\n      </InsufficientPermissionsMessageTooltip>\n    )\n  }\n\n  if (templateItems.length === 1) {\n    const firstItem = templateItems[0]\n    const permissions = permissionsById[firstItem.id]\n    const disabled = !permissions?.granted\n    const intent = getIntent(templates, firstItem, selectedReleaseId)\n    if (!intent) return null\n\n    return (\n      <InsufficientPermissionsMessageTooltip\n        reveal={disabled}\n        loading={isTemplatePermissionsLoading}\n        context=\"create-document-type\"\n      >\n        <IntentButton\n          aria-label={getI18nText(firstItem).title}\n          icon={firstItem.icon || AddIcon}\n          intent={intent}\n          mode=\"bleed\"\n          disabled={disabled}\n          data-testid=\"action-intent-button\"\n          tooltipProps={{content: t('pane-header.create-new-button.tooltip')}}\n        />\n      </InsufficientPermissionsMessageTooltip>\n    )\n  }\n\n  return (\n    <MenuButton\n      button={\n        <Button\n          icon={AddIcon}\n          mode=\"bleed\"\n          data-testid=\"multi-action-intent-button\"\n          tooltipProps={{content: t('pane-header.create-new-button.tooltip')}}\n        />\n      }\n      id=\"create-menu\"\n      menu={\n        <Menu>\n          {templateItems.map((item, itemIndex) => {\n            const permissions = permissionsById[item.id]\n            const disabled = !permissions?.granted\n            const intent = getIntent(templates, item, selectedReleaseId)\n            const template = templates.find((i) => i.id === item.templateId)\n            if (!template || !intent) return null\n\n            const Link = forwardRef((linkProps, linkRef: ForwardedRef<never>) =>\n              disabled ? (\n                <button type=\"button\" disabled {...linkProps} ref={linkRef} />\n              ) : (\n                <IntentLink\n                  {...linkProps}\n                  intent={intent.type}\n                  params={intent.params}\n                  searchParams={intent.searchParams}\n                  ref={linkRef}\n                />\n              ),\n            )\n\n            Link.displayName = 'Link'\n\n            const {title} = getI18nText({\n              ...item,\n              // replace the title with the template title\n              title: item.title || getI18nText(template).title,\n            })\n\n            return (\n              <InsufficientPermissionsMessageTooltip\n                key={item.id}\n                context=\"create-document-type\"\n                reveal={disabled}\n                loading={isTemplatePermissionsLoading}\n              >\n                <MenuItem\n                  as={Link}\n                  data-as={disabled ? 'button' : 'a'}\n                  text={title}\n                  aria-label={\n                    disabled ? t('pane-header.disabled-created-button.aria-label') : title\n                  }\n                  disabled={disabled}\n                  data-testid={`action-intent-button-${itemIndex}`}\n                />\n              </InsufficientPermissionsMessageTooltip>\n            )\n          })}\n        </Menu>\n      }\n      popover={POPOVER_PROPS}\n    />\n  )\n}\n","import {Flex} from '@sanity/ui'\nimport {uniqBy} from 'lodash'\nimport {memo, useCallback, useMemo} from 'react'\nimport {EMPTY_ARRAY, EMPTY_OBJECT, type InitialValueTemplateItem, useTemplates} from 'sanity'\n\nimport {isMenuNodeButton, isNotMenuNodeButton, resolveMenuNodes} from '../../menuNodes'\nimport {\n  type PaneMenuItem,\n  type PaneMenuItemGroup,\n  type StructureToolPaneActionHandler,\n} from '../../types'\nimport {PaneContextMenuButton} from '../pane/PaneContextMenuButton'\nimport {PaneHeaderActionButton} from '../pane/PaneHeaderActionButton'\nimport {PaneHeaderCreateButton} from './PaneHeaderCreateButton'\n\nfunction isNonNullable<T>(value: T): value is NonNullable<T> {\n  return value !== null && value !== undefined\n}\n\n/**\n * hashes an object to a string where the order of the keys don't matter\n */\nconst hashObject = (value: unknown) => {\n  const sortObject = (v: unknown): unknown => {\n    if (typeof v !== 'object' || !v) return v\n    if (Array.isArray(v)) return v.map(sortObject)\n    return Object.entries(v).sort(([keyA], [keyB]) => keyA.localeCompare(keyB, 'en'))\n  }\n\n  const normalize = (v: unknown) => JSON.parse(JSON.stringify(v))\n\n  return JSON.stringify(sortObject(normalize(value)))\n}\n\ninterface PaneHeaderActionsProps {\n  initialValueTemplateItems?: InitialValueTemplateItem[]\n  menuItems?: PaneMenuItem[]\n  menuItemGroups?: PaneMenuItemGroup[]\n  actionHandlers?: Record<string, StructureToolPaneActionHandler>\n}\n\nexport const PaneHeaderActions = memo(function PaneHeaderActions(props: PaneHeaderActionsProps) {\n  const {\n    initialValueTemplateItems: initialValueTemplateItemsFromStructure = EMPTY_ARRAY,\n    menuItems = EMPTY_ARRAY,\n    menuItemGroups = EMPTY_ARRAY,\n    actionHandlers = EMPTY_OBJECT as Record<string, StructureToolPaneActionHandler>,\n  } = props\n\n  const templates = useTemplates()\n\n  const handleAction = useCallback(\n    (item: PaneMenuItem) => {\n      if (typeof item.action === 'string' && !(item.action in actionHandlers)) {\n        console.warn('No handler for action:', item.action)\n        return false\n      }\n\n      const handler =\n        typeof item.action === 'function'\n          ? item.action\n          : typeof item.action === 'string'\n            ? actionHandlers[item.action]\n            : null\n\n      if (handler) {\n        handler(item.params as Record<string, string>)\n        return true\n      }\n\n      return false\n    },\n    [actionHandlers],\n  )\n\n  const menuNodes = useMemo(\n    () =>\n      resolveMenuNodes({\n        actionHandler: handleAction,\n        menuItemGroups,\n        menuItems: menuItems\n          // remove items with `create` intents because those will get combined\n          // into one action button (see `initialValueTemplateItemFromMenuItems`)\n          .filter((item) => item.intent?.type !== 'create'),\n      }),\n    [handleAction, menuItemGroups, menuItems],\n  )\n\n  const actionNodes = useMemo(() => menuNodes.filter(isMenuNodeButton), [menuNodes])\n  const contextMenuNodes = useMemo(() => menuNodes.filter(isNotMenuNodeButton), [menuNodes])\n\n  const initialValueTemplateItemFromMenuItems = useMemo(() => {\n    return menuItems\n      .map((item, menuItemIndex) => {\n        if (item.intent?.type !== 'create') return null\n\n        const {params} = item.intent\n        if (!params) return null\n\n        const intentParams = Array.isArray(params) ? params[0] : params\n        const templateParams = Array.isArray(params) ? params[1] : undefined\n\n        // fallback to the schema type name as the template ID.\n        // by default, the initial template values are populated from every\n        // document type in the schema\n        const templateId = intentParams.template || intentParams.type\n        if (!templateId) return null\n\n        // eslint-disable-next-line max-nested-callbacks\n        const template = templates.find((t) => t.id === templateId)\n        // the template doesn't exist then the action might be disabled\n        if (!template) return null\n\n        const initialDocumentId = intentParams.id\n\n        return {\n          item,\n          template,\n          templateParams,\n          menuItemIndex,\n          initialDocumentId,\n        }\n      })\n      .filter(isNonNullable)\n      .map(({initialDocumentId, item, template, menuItemIndex, templateParams}) => {\n        const initialValueTemplateItem: InitialValueTemplateItem = {\n          id: `menuItem${menuItemIndex}`,\n          initialDocumentId,\n          templateId: template.id,\n          type: 'initialValueTemplateItem',\n          title: item.title || template.title,\n          i18n: item.i18n || template.i18n,\n          icon: item.icon as InitialValueTemplateItem['icon'],\n          description: template.description,\n          parameters: templateParams,\n          schemaType: template.schemaType,\n        }\n\n        return initialValueTemplateItem\n      })\n  }, [menuItems, templates])\n\n  const combinedInitialValueTemplates = useMemo(() => {\n    // this de-dupes create actions\n    return uniqBy(\n      [...initialValueTemplateItemFromMenuItems, ...initialValueTemplateItemsFromStructure],\n      (item) => hashObject([item.initialDocumentId, item.templateId, item.parameters]),\n    )\n  }, [initialValueTemplateItemFromMenuItems, initialValueTemplateItemsFromStructure])\n\n  return (\n    <Flex gap={1}>\n      <PaneHeaderCreateButton templateItems={combinedInitialValueTemplates} />\n\n      {actionNodes.map((node) => (\n        <PaneHeaderActionButton key={node.key} node={node} />\n      ))}\n\n      {contextMenuNodes.length > 0 && <PaneContextMenuButton nodes={contextMenuNodes} />}\n    </Flex>\n  )\n})\n","import {WarningOutlineIcon} from '@sanity/icons'\nimport {type SanityDocument} from '@sanity/types'\nimport {type GeneralPreviewLayoutKey, SanityDefaultPreview, Translate, useTranslation} from 'sanity'\n\nimport {structureLocaleNamespace} from '../i18n'\n\nexport interface MissingSchemaTypeProps {\n  layout?: GeneralPreviewLayoutKey\n  value: SanityDocument\n}\n\nexport function MissingSchemaType(props: MissingSchemaTypeProps) {\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {layout, value} = props\n\n  return (\n    <SanityDefaultPreview\n      title={\n        <em>\n          <Translate\n            t={t}\n            i18nKey=\"pane-item.missing-schema-type.title\"\n            components={{Code: 'code'}}\n            values={{documentType: value._type}}\n          />\n        </em>\n      }\n      subtitle={\n        <Translate\n          t={t}\n          i18nKey=\"pane-item.missing-schema-type.subtitle\"\n          components={{Code: 'code'}}\n          values={{documentId: value._id}}\n        />\n      }\n      // eslint-disable-next-line react/jsx-no-bind\n      media={() => <WarningOutlineIcon />}\n      layout={layout}\n    />\n  )\n}\n","import {ChevronRightIcon, DocumentIcon, FolderIcon} from '@sanity/icons'\nimport {\n  isSanityDocument,\n  type PreviewValue,\n  type SanityDocument,\n  type SchemaType,\n} from '@sanity/types'\nimport {Box, type CardProps, Text} from '@sanity/ui'\nimport {\n  type ComponentType,\n  type MouseEvent,\n  startTransition,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react'\nimport {\n  type FIXME,\n  type GeneralPreviewLayoutKey,\n  getPublishedId,\n  PreviewCard,\n  SanityDefaultPreview,\n  useDocumentPresence,\n  useDocumentPreviewStore,\n  useEditState,\n  useSchema,\n} from 'sanity'\n\nimport {MissingSchemaType} from '../MissingSchemaType'\nimport {usePaneRouter} from '../paneRouter'\nimport {PaneItemPreview} from './PaneItemPreview'\n\ninterface PaneItemProps {\n  id: string\n  layout?: GeneralPreviewLayoutKey\n  icon?: ComponentType<any> | false\n  pressed?: boolean\n  selected?: boolean\n  title?: string\n  value?: PreviewValue | SanityDocument\n  schemaType?: SchemaType\n  margin?: CardProps['margin']\n  marginBottom?: CardProps['marginBottom']\n  marginTop?: CardProps['marginTop']\n}\n\n/**\n * Return `false` if we explicitly disable the icon.\n * Otherwise return the passed icon or the schema type icon as a backup.\n */\nexport function getIconWithFallback(\n  icon: ComponentType<any> | false | undefined,\n  schemaType: SchemaType | undefined,\n  defaultIcon: ComponentType<any>,\n): ComponentType<any> | false {\n  if (icon === false) {\n    return false\n  }\n\n  return icon || (schemaType && schemaType.icon) || defaultIcon || false\n}\n\nexport function PaneItem(props: PaneItemProps) {\n  const {\n    icon,\n    id,\n    layout = 'default',\n    pressed,\n    schemaType,\n    selected,\n    title,\n    value,\n    margin,\n    marginBottom,\n    marginTop,\n  } = props\n  const schema = useSchema()\n  const documentPreviewStore = useDocumentPreviewStore()\n  const {ChildLink} = usePaneRouter()\n  const documentPresence = useDocumentPresence(id)\n  const hasSchemaType = Boolean(schemaType && schemaType.name && schema.get(schemaType.name))\n  const [clicked, setClicked] = useState<boolean>(false)\n\n  const preview = useMemo(() => {\n    if (value && isSanityDocument(value)) {\n      if (!schemaType || !hasSchemaType) {\n        return <MissingSchemaType value={value} />\n      }\n\n      return (\n        <PaneItemPreview\n          documentPreviewStore={documentPreviewStore}\n          icon={getIconWithFallback(icon, schemaType, DocumentIcon)}\n          layout={layout}\n          schemaType={schemaType}\n          value={value}\n          presence={documentPresence}\n        />\n      )\n    }\n\n    // Always render non-document values as compact previews\n    return (\n      <SanityDefaultPreview\n        status={\n          <Box style={{opacity: 0.5}}>\n            <Text muted size={1}>\n              <ChevronRightIcon />\n            </Text>\n          </Box>\n        }\n        icon={getIconWithFallback(icon, schemaType, FolderIcon)}\n        layout=\"compact\"\n        title={title}\n      />\n    )\n  }, [\n    documentPreviewStore,\n    hasSchemaType,\n    icon,\n    layout,\n    schemaType,\n    title,\n    value,\n    documentPresence,\n  ])\n\n  const handleClick = useCallback((e: MouseEvent<HTMLElement>) => {\n    if (e.metaKey) {\n      setClicked(false)\n      return\n    }\n\n    setClicked(true)\n  }, [])\n\n  // Reset `clicked` state when `selected` prop changes\n  useEffect(() => setClicked(false), [selected])\n\n  // Preloads the edit state on hover, using concurrent rendering with `startTransition` so preloads can be interrupted and not block rendering\n  const [preloading, setPreload] = useState(false)\n  const timeoutRef = useRef<ReturnType<typeof setTimeout> | null>(null)\n  const handleMouseEnter = useCallback(() => {\n    timeoutRef.current = setTimeout(() => startTransition(() => setPreload(true)), 400)\n  }, [])\n  const handleMouseLeave = useCallback(() => {\n    if (timeoutRef.current) clearTimeout(timeoutRef.current)\n    startTransition(() => setPreload(false))\n  }, [])\n\n  return (\n    <PreviewCard\n      data-testid={`pane-item-${title}`}\n      __unstable_focusRing\n      as={ChildLink as FIXME}\n      // @ts-expect-error - `childId` is a valid prop on `ChildLink`\n      childId={id}\n      data-as=\"a\"\n      margin={margin}\n      marginBottom={marginBottom}\n      marginTop={marginTop}\n      onClick={handleClick}\n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={handleMouseLeave}\n      pressed={pressed}\n      radius={2}\n      selected={selected || clicked}\n      sizing=\"border\"\n      tabIndex={-1}\n      tone=\"inherit\"\n    >\n      {preview}\n      {preloading && schemaType?.name && value && isSanityDocument(value) && (\n        <PreloadDocumentPane documentId={id} documentType={schemaType.name} />\n      )}\n    </PreviewCard>\n  )\n}\n\nfunction PreloadDocumentPane(props: {documentId: string; documentType: string}) {\n  const {documentId, documentType} = props\n  // Preload the edit state for the document, and keep it alive until mouse leave\n  useEditState(getPublishedId(documentId), documentType)\n\n  return null\n}\nPreloadDocumentPane.displayName = 'PreloadDocumentPane'\n","import {memo, type ReactNode, useMemo} from 'react'\nimport {\n  type DocumentActionComponent,\n  type DocumentActionDescription,\n  type DocumentActionGroup,\n  type DocumentActionProps,\n  getDraftId,\n  GetHookCollectionState,\n  getPublishedId,\n  useCanvasCompanionDoc,\n  useTranslation,\n} from 'sanity'\n\nimport {structureLocaleNamespace} from '../i18n'\n\n/** @internal */\nexport interface Action<Args, Description> {\n  (args: Args): Description | null\n}\nexport interface ResolvedAction extends DocumentActionDescription {\n  action?: DocumentActionComponent['action']\n}\n\n/** @internal */\nexport interface RenderActionCollectionProps {\n  actions: Action<DocumentActionProps, DocumentActionDescription>[]\n  actionProps: Omit<DocumentActionProps, 'onComplete'>\n  children: (props: {states: ResolvedAction[]}) => ReactNode\n  onActionComplete?: () => void\n  group?: DocumentActionGroup\n}\n\n/** @internal */\nexport const RenderActionCollectionState = memo((props: RenderActionCollectionProps) => {\n  const {actions, children, actionProps, onActionComplete, group} = props\n\n  return (\n    <GetHookCollectionState<Omit<DocumentActionProps, 'onComplete'>, ResolvedAction>\n      onReset={onActionComplete}\n      hooks={actions}\n      args={actionProps}\n      group={group}\n    >\n      {({states}) => (\n        <ActionsGuardWrapper\n          states={states}\n          documentId={\n            actionProps.liveEditSchemaType\n              ? getPublishedId(actionProps.id)\n              : getDraftId(actionProps.id)\n          }\n        >\n          {children}\n        </ActionsGuardWrapper>\n      )}\n    </GetHookCollectionState>\n  )\n})\nRenderActionCollectionState.displayName = 'Memo(RenderActionCollectionState)'\n\n/**\n * This is a list of the actions that are supported when a document is linked to Canvas.\n * Custom actions and actions that are not supported by Canvas will be disabled and will include a tooltip explaining that the action is not supported.\n */\nconst SUPPORTED_LINKED_TO_CANVAS_ACTIONS: DocumentActionComponent['action'][] = [\n  'delete',\n  'duplicate',\n  'publish',\n  'unpublish',\n  'unlinkFromCanvas',\n  'editInCanvas',\n  'linkToCanvas',\n  'schedule',\n]\n\ninterface ActionsGuardWrapperProps {\n  states: ResolvedAction[]\n  documentId: string\n  children: (props: {states: ResolvedAction[]}) => ReactNode\n}\n\nconst ActionsGuardWrapper = (props: ActionsGuardWrapperProps) => {\n  const {states, children, documentId} = props\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {isLinked} = useCanvasCompanionDoc(documentId)\n\n  const result = useMemo(() => {\n    if (isLinked) {\n      return children({\n        states: states.map((s) => {\n          if (!s.action || !SUPPORTED_LINKED_TO_CANVAS_ACTIONS.includes(s.action)) {\n            return {\n              ...s,\n              disabled: true,\n              title: t('action.disabled-by-canvas.tooltip'),\n            }\n          }\n          return s\n        }),\n      })\n    }\n    return children({states})\n  }, [children, states, t, isLinked])\n\n  return result\n}\n","import {memo, type ReactNode} from 'react'\nimport {\n  type DocumentBadgeDescription,\n  type DocumentBadgeProps,\n  type EditStateFor,\n  GetHookCollectionState,\n} from 'sanity'\n\n/** @internal */\nexport interface Badge<Args, Description> {\n  (args: Args): Description | null\n}\n\n/** @internal */\nexport interface RenderBadgeCollectionProps {\n  badges: Badge<DocumentBadgeProps, DocumentBadgeDescription>[]\n  badgeProps: EditStateFor\n  children: (props: {states: DocumentBadgeDescription[]}) => ReactNode\n}\n\n/** @internal */\nexport const RenderBadgeCollectionState = memo((props: RenderBadgeCollectionProps) => {\n  const {badges, children, badgeProps} = props\n\n  return (\n    <GetHookCollectionState<EditStateFor, DocumentBadgeDescription>\n      hooks={badges}\n      args={badgeProps}\n    >\n      {children}\n    </GetHookCollectionState>\n  )\n})\nRenderBadgeCollectionState.displayName = 'Memo(RenderBadgeCollectionState)'\n","import {type SortOrder} from './types'\n\nexport const PARTIAL_PAGE_LIMIT = 100\nexport const FULL_LIST_LIMIT = 2000\nexport const DEFAULT_ORDERING: SortOrder = {by: [{field: '_updatedAt', direction: 'desc'}]}\nexport const EMPTY_RECORD: Record<string, unknown> = {}\n\nexport const ENABLE_LRU_MEMO = true\n","import {type SanityDocument} from '@sanity/types'\nimport {Box, Container, Flex, Heading, Stack, Text} from '@sanity/ui'\nimport {useCallback, useEffect, useMemo, useState} from 'react'\nimport {\n  CommandList,\n  type CommandListRenderItemCallback,\n  ErrorActions,\n  type GeneralPreviewLayoutKey,\n  getPublishedId,\n  isDev,\n  LoadingBlock,\n  SanityDefaultPreview,\n  Translate,\n  useSchema,\n  useTranslation,\n} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Delay, PaneContent, PaneItem, usePane, usePaneLayout} from '../../components'\nimport {structureLocaleNamespace} from '../../i18n'\nimport {FULL_LIST_LIMIT} from './constants'\nimport {type DocumentListPaneItem, type LoadingVariant} from './types'\n\nconst RootBox = styled(Box)<{$opacity?: number}>`\n  position: relative;\n  opacity: ${(props) => props.$opacity || 1};\n  transition: opacity 0.4s;\n`\n\nconst CommandListBox = styled(Box)`\n  position: absolute;\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n`\n\ninterface DocumentListPaneContentProps {\n  childItemId?: string\n  error: {message: string} | null\n  filterIsSimpleTypeConstraint: boolean\n  hasMaxItems?: boolean\n  muted?: boolean\n  hasSearchQuery: boolean\n  isActive?: boolean\n  isLazyLoading: boolean\n  isLoading: boolean\n  isConnected?: boolean\n  autoRetry?: boolean\n  canRetry: boolean\n  retryCount?: number\n  isRetrying?: boolean\n  items: DocumentListPaneItem[]\n  layout?: GeneralPreviewLayoutKey\n  loadingVariant?: LoadingVariant\n  onEndReached: () => void\n  onRetry?: () => void\n  paneTitle: string\n  searchInputElement: HTMLInputElement | null\n  showIcons: boolean\n}\n\nconst SKELETON_ITEMS = [...Array(30).keys()]\n\nfunction LoadingView(props: {layout?: GeneralPreviewLayoutKey}) {\n  const {layout} = props\n\n  return (\n    <Stack paddingX={3} paddingY={2} paddingTop={0} space={1}>\n      {SKELETON_ITEMS.map((num) => (\n        <SanityDefaultPreview key={num} isPlaceholder layout={layout} />\n      ))}\n    </Stack>\n  )\n}\n\nexport function DocumentListPaneContent(props: DocumentListPaneContentProps) {\n  const {\n    childItemId,\n    error,\n    isRetrying,\n    autoRetry,\n    filterIsSimpleTypeConstraint,\n    hasMaxItems,\n    hasSearchQuery,\n    isActive,\n    isLazyLoading,\n    muted,\n    isLoading,\n    isConnected,\n    retryCount,\n    canRetry,\n    items,\n    layout,\n    loadingVariant,\n    onEndReached,\n    onRetry,\n    paneTitle,\n    searchInputElement,\n    showIcons,\n  } = props\n\n  const schema = useSchema()\n\n  const {collapsed: layoutCollapsed} = usePaneLayout()\n  const {collapsed, index} = usePane()\n  const [shouldRender, setShouldRender] = useState(!collapsed)\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const handleEndReached = useCallback(() => {\n    if (shouldRender) {\n      onEndReached()\n    }\n  }, [onEndReached, shouldRender])\n\n  useEffect(() => {\n    if (collapsed) return undefined\n\n    const timer = setTimeout(() => {\n      setShouldRender(true)\n    }, 0)\n\n    return () => {\n      clearTimeout(timer)\n    }\n  }, [collapsed, items])\n\n  const renderItem = useCallback<CommandListRenderItemCallback<SanityDocument>>(\n    (item, {activeIndex}) => {\n      const publishedId = getPublishedId(item._id)\n      const isSelected = childItemId === publishedId\n      const pressed = !isActive && isSelected\n      const selected = isActive && isSelected\n      const isLastItem = activeIndex === items.length - 1\n      const showSpinner = isLastItem && isLazyLoading\n      const showMaxItemsMessage = isLastItem && hasMaxItems\n\n      return (\n        <>\n          <PaneItem\n            icon={showIcons === false ? false : undefined}\n            id={publishedId}\n            layout={layout}\n            marginBottom={1}\n            pressed={pressed}\n            schemaType={schema.get(item._type)}\n            selected={selected}\n            value={item}\n          />\n\n          {showSpinner && <LoadingBlock />}\n\n          {showMaxItemsMessage && (\n            <Box marginY={1} paddingX={3} paddingY={4}>\n              <Text align=\"center\" muted size={1}>\n                {t('panes.document-list-pane.max-items.text', {limit: FULL_LIST_LIMIT})}\n              </Text>\n            </Box>\n          )}\n        </>\n      )\n    },\n    [childItemId, isActive, items.length, layout, schema, showIcons, hasMaxItems, isLazyLoading, t],\n  )\n\n  const noDocumentsContent = useMemo(() => {\n    if (hasSearchQuery) {\n      return (\n        <Flex align=\"center\" direction=\"column\" height=\"fill\" justify=\"center\">\n          <Container width={1}>\n            <Box paddingX={4} paddingY={5}>\n              <Text align=\"center\" muted>\n                {t('panes.document-list-pane.no-documents.text')}\n              </Text>\n            </Box>\n          </Container>\n        </Flex>\n      )\n    }\n\n    return (\n      <Flex align=\"center\" direction=\"column\" height=\"fill\" justify=\"center\">\n        <Container width={1}>\n          <Box paddingX={4} paddingY={5}>\n            <Text align=\"center\" muted>\n              {filterIsSimpleTypeConstraint\n                ? t('panes.document-list-pane.no-documents-of-type.text')\n                : t('panes.document-list-pane.no-matching-documents.text')}\n            </Text>\n          </Box>\n        </Container>\n      </Flex>\n    )\n  }, [filterIsSimpleTypeConstraint, hasSearchQuery, t])\n\n  const mainContent = useMemo(() => {\n    if (!shouldRender) {\n      return null\n    }\n\n    const isOnline = window.navigator.onLine\n    if (error) {\n      return (\n        <Flex align=\"center\" direction=\"column\" height=\"fill\" justify=\"center\">\n          <Container width={1}>\n            <Stack paddingX={4} paddingY={5} space={4}>\n              <Heading as=\"h3\">{t('panes.document-list-pane.error.title')}</Heading>\n              <Text as=\"p\">\n                {isDev ? (\n                  <Translate\n                    t={t}\n                    i18nKey=\"panes.document-list-pane.error.text.dev\"\n                    values={{error: error.message}}\n                    components={{Code: ({children}) => <code>{children}</code>}}\n                  />\n                ) : isOnline ? (\n                  t('panes.document-list-pane.error.text')\n                ) : (\n                  t('panes.document-list-pane.error.text.offline')\n                )}\n              </Text>\n              <ErrorActions\n                error={error}\n                eventId={null}\n                onRetry={isOnline && canRetry ? onRetry : undefined}\n                isRetrying={isRetrying}\n              />\n              {canRetry ? (\n                <Text as=\"p\" muted size={1}>\n                  {isRetrying\n                    ? t('panes.document-list-pane.error.retrying', {count: retryCount})\n                    : autoRetry\n                      ? t('panes.document-list-pane.error.will-retry-automatically', {\n                          count: retryCount,\n                        })\n                      : t('panes.document-list-pane.error.max-retries-attempted', {\n                          count: retryCount,\n                        })}\n                </Text>\n              ) : null}\n            </Stack>\n          </Container>\n        </Flex>\n      )\n    }\n\n    if (isConnected && !isLoading && items.length === 0) {\n      return noDocumentsContent\n    }\n\n    if (loadingVariant === 'initial' && isLoading) {\n      return (\n        <Delay ms={300}>\n          <LoadingView layout={layout} />\n        </Delay>\n      )\n    }\n\n    if (loadingVariant === 'spinner' && isLoading) {\n      return null\n    }\n\n    // prevents bug when panes won't render if first rendered while collapsed\n    const key = `${index}-${collapsed}`\n\n    return (\n      <RootBox overflow=\"hidden\" height=\"fill\" $opacity={muted ? 0.8 : 1}>\n        <CommandListBox>\n          <CommandList\n            key={key}\n            activeItemDataAttr=\"data-hovered\"\n            ariaLabel={paneTitle}\n            canReceiveFocus\n            inputElement={searchInputElement}\n            itemHeight={51}\n            items={items}\n            onEndReached={handleEndReached}\n            onlyShowSelectionWhenActive\n            overscan={10}\n            paddingBottom={1}\n            paddingX={3}\n            renderItem={renderItem}\n            wrapAround={false}\n          />\n        </CommandListBox>\n      </RootBox>\n    )\n  }, [\n    autoRetry,\n    canRetry,\n    collapsed,\n    error,\n    handleEndReached,\n    index,\n    isConnected,\n    isLoading,\n    isRetrying,\n    items,\n    layout,\n    loadingVariant,\n    muted,\n    noDocumentsContent,\n    onRetry,\n    paneTitle,\n    renderItem,\n    retryCount,\n    searchInputElement,\n    shouldRender,\n    t,\n  ])\n\n  return (\n    <PaneContent\n      data-testid=\"document-list-pane\"\n      overflow={layoutCollapsed || loadingVariant === 'initial' ? 'hidden' : 'auto'}\n    >\n      {mainContent}\n    </PaneContent>\n  )\n}\n","import {\n  isIndexSegment,\n  isKeySegment,\n  isReferenceSchemaType,\n  type ObjectField,\n  type ObjectFieldType,\n  type ObjectSchemaType,\n  type SanityDocumentLike,\n  type SchemaType,\n} from '@sanity/types'\nimport * as PathUtils from '@sanity/util/paths'\nimport {type ExprNode, parse} from 'groq-js'\nimport {collate, getPublishedId} from 'sanity'\n\nimport {type DocumentListPaneItem, type SortOrder} from './types'\n\nexport function getDocumentKey(value: DocumentListPaneItem, index: number): string {\n  return value._id ? getPublishedId(value._id) : `item-${index}`\n}\n\nexport function removePublishedWithDrafts(documents: SanityDocumentLike[]): DocumentListPaneItem[] {\n  return collate(documents).map((entry) => {\n    const doc = entry.draft || entry.published || entry.versions[0]\n    const hasDraft = Boolean(entry.draft)\n\n    return {\n      ...doc,\n      hasPublished: !!entry.published,\n      hasDraft,\n    }\n  }) as any\n}\n\nexport function applyOrderingFunctions(order: SortOrder, schemaType: ObjectSchemaType): SortOrder {\n  const orderBy = order.by.map((by) => {\n    // Skip those that already have a mapper\n    if (by.mapWith) {\n      return by\n    }\n\n    const fieldType = tryResolveSchemaTypeForPath(schemaType, by.field)\n    if (!fieldType) {\n      return by\n    }\n\n    // Note: order matters here, since the jsonType of a date field is `string`,\n    // but we want to apply `datetime()`, not `lower()`\n    if (fieldExtendsType(fieldType, 'datetime')) {\n      return {...by, mapWith: 'dateTime'}\n    }\n\n    if (fieldType.jsonType === 'string') {\n      return {...by, mapWith: 'lower'}\n    }\n\n    return by\n  })\n\n  return orderBy.every((item, index) => item === order.by[index]) ? order : {...order, by: orderBy}\n}\n\nfunction tryResolveSchemaTypeForPath(baseType: SchemaType, path: string): SchemaType | undefined {\n  const pathSegments = PathUtils.fromString(path)\n\n  let current: SchemaType | undefined = baseType\n  for (const segment of pathSegments) {\n    if (!current) {\n      return undefined\n    }\n\n    if (typeof segment === 'string') {\n      current = getFieldTypeByName(current, segment)\n      continue\n    }\n\n    const isArrayAccessor = isKeySegment(segment) || isIndexSegment(segment)\n    if (!isArrayAccessor || current.jsonType !== 'array') {\n      return undefined\n    }\n\n    const [memberType, otherType] = current.of || []\n    if (otherType || !memberType) {\n      // Can't figure out the type without knowing the value\n      return undefined\n    }\n\n    if (!isReferenceSchemaType(memberType)) {\n      current = memberType\n      continue\n    }\n\n    const [refType, otherRefType] = memberType.to || []\n    if (otherRefType || !refType) {\n      // Can't figure out the type without knowing the value\n      return undefined\n    }\n\n    current = refType\n  }\n\n  return current\n}\n\nfunction getFieldTypeByName(type: SchemaType, fieldName: string): SchemaType | undefined {\n  if (!('fields' in type)) {\n    return undefined\n  }\n\n  const fieldType = type.fields.find((field) => field.name === fieldName)\n  return fieldType ? fieldType.type : undefined\n}\n\nexport function fieldExtendsType(field: ObjectField | ObjectFieldType, ofType: string): boolean {\n  let current: SchemaType | undefined = field.type\n  while (current) {\n    if (current.name === ofType) {\n      return true\n    }\n\n    if (!current.type && current.jsonType === ofType) {\n      return true\n    }\n\n    current = current.type\n  }\n\n  return false\n}\n\n/**\n * Recursively extract static `_type`s from GROQ filter expressions. If the\n * types can't be statically determined then it will return `null`.\n */\n// eslint-disable-next-line complexity\nfunction findTypes(node: ExprNode): Set<string> | null {\n  switch (node.type) {\n    case 'OpCall': {\n      const {left, right} = node\n\n      switch (node.op) {\n        // e.g. `a == b`\n        case '==': {\n          // e.g. `_type == 'value'`\n          if (left.type === 'AccessAttribute' && left.name === '_type' && !left.base) {\n            if (right.type !== 'Value' || typeof right.value !== 'string') return null\n            return new Set([right.value])\n          }\n\n          // e.g. `'value' == _type`\n          if (right.type === 'AccessAttribute' && right.name === '_type' && !right.base) {\n            if (left.type !== 'Value' || typeof left.value !== 'string') return null\n            return new Set([left.value])\n          }\n\n          // otherwise, we can't determine the types statically\n          return null\n        }\n\n        // e.g. `a in b`\n        case 'in': {\n          // if `_type` is not on the left hand side of `in` then it can't be determined\n          if (left.type !== 'AccessAttribute' || left.name !== '_type' || left.base) return null\n          // if the right hand side is not an array then the types can't be determined\n          if (right.type !== 'Array') return null\n\n          const types = new Set<string>()\n          // iterate through all the types\n          for (const element of right.elements) {\n            // if we find a splat, then early return, we can't determine the types\n            if (element.isSplat) return null\n            // if the array element is not just a simple value, then early return\n            if (element.value.type !== 'Value') return null\n            // if the array element value is not a string, then early return\n            if (typeof element.value.value !== 'string') return null\n            // otherwise add the element value to the set of types\n            types.add(element.value.value)\n          }\n\n          // if there were any elements in the types set, return it\n          if (types.size) return types\n          // otherwise, the set of types cannot be determined\n          return null\n        }\n\n        default: {\n          return null\n        }\n      }\n    }\n\n    // groups can just be unwrapped, the AST preserves the order\n    case 'Group': {\n      return findTypes(node.base)\n    }\n\n    // e.g. `_type == 'a' || _type == 'b'`\n    // with Or nodes, if we can't determine the types for either the left or\n    // right hand side then we can't determine the types for any\n    // e.g. `_type == 'a' || isActive`\n    // — can't determine types because `isActive` could be true on another types\n    case 'Or': {\n      const left = findTypes(node.left)\n      if (!left) return null\n\n      const right = findTypes(node.right)\n      if (!right) return null\n\n      return new Set([...left, ...right])\n    }\n\n    // e.g. `_type == 'a' && isActive`\n    // with And nodes, we can determine the types as long as we can determine\n    // the types for one side. We can't determine the types if both are `null`.\n    case 'And': {\n      const left = findTypes(node.left)\n      const right = findTypes(node.right)\n\n      if (!left && !right) return null\n      return new Set([...(left || []), ...(right || [])])\n    }\n\n    default: {\n      return null\n    }\n  }\n}\n\nexport function findStaticTypesInFilter(\n  filter: string,\n  params: Record<string, unknown> = {},\n): string[] | null {\n  try {\n    const types = findTypes(parse(filter, {params}))\n    if (!types) return null\n\n    return Array.from(types).sort()\n  } catch {\n    // if we couldn't parse the filter, just return `null`\n    return null\n  }\n}\n","import {type ClientPerspective, type SanityClient} from '@sanity/client'\nimport {\n  asyncScheduler,\n  defer,\n  filter,\n  map,\n  merge,\n  mergeMap,\n  type Observable,\n  of,\n  partition,\n  share,\n  throttleTime,\n  throwError,\n  timer,\n} from 'rxjs'\nimport {scan} from 'rxjs/operators'\nimport {exhaustMapWithTrailing} from 'rxjs-exhaustmap-with-trailing'\nimport {\n  createSearch,\n  createSWR,\n  getSearchableTypes,\n  type SanityDocumentLike,\n  type Schema,\n  type SearchOptions,\n  type SearchStrategy,\n} from 'sanity'\n\nimport {getExtendedProjection} from '../../structureBuilder/util/getExtendedProjection'\nimport {type SortOrder} from './types'\n\ninterface ListenQueryOptions {\n  client: SanityClient\n  filter: string\n  limit: number\n  params: Record<string, unknown>\n  schema: Schema\n  searchQuery: string\n  sort: SortOrder\n  perspective?: ClientPerspective\n  staticTypeNames?: string[] | null\n  maxFieldDepth?: number\n  searchStrategy?: SearchStrategy\n}\n\nexport type SearchQueryEvent =\n  | {\n      type: 'reconnect'\n    }\n  | {type: 'result'; documents: SanityDocumentLike[]}\n\nexport interface SearchQueryState {\n  connected: boolean\n  fromCache: boolean\n  documents: SanityDocumentLike[]\n}\n\nconst swr = createSWR<{connected: boolean; documents: SanityDocumentLike[]}>({maxSize: 100})\n\nexport function listenSearchQuery(options: ListenQueryOptions): Observable<SearchQueryState> {\n  const {\n    client,\n    schema,\n    sort,\n    perspective,\n    limit,\n    params,\n    filter: groqFilter,\n    searchQuery,\n    staticTypeNames,\n    maxFieldDepth,\n    searchStrategy,\n  } = options\n  const sortBy = sort.by\n  const extendedProjection = sort?.extendedProjection\n\n  // Listen for changes with the given filter and params, and whenever a change occurs, we want to\n  // re-fetch the documents that match the search query (see below).\n  // We use a separate listener since the search query is too large to use in a listen query.\n  const events$ = defer(() => {\n    return client.listen(`*[${groqFilter}]`, params, {\n      events: ['welcome', 'mutation', 'reconnect'],\n      includeAllVersions: true,\n      includeResult: false,\n      visibility: 'query',\n      tag: 'listen-search-query',\n    })\n  }).pipe(\n    mergeMap((ev, i) => {\n      const isFirst = i === 0\n      // If we can't establish a connection to the /listen endpoint, the first event we receive will be 'reconnect'\n      // So if we get \"reconnect\" as the first event actually means \"Connection can't be established\"\n      if (isFirst && ev.type === 'reconnect') {\n        // if it's neither welcome nor reconnect, something unexpected has happened.\n        return throwError(() => new Error(`Failed to establish EventSource connection`))\n      }\n      // When a connection is successfully established, the first event will be 'welcome'\n      if (isFirst && ev.type !== 'welcome') {\n        // if it's neither welcome nor reconnect, something unexpected has happened.\n        return throwError(() => new Error(`Received unexpected type of first event \"${ev.type}\"`))\n      }\n      return of(ev)\n    }),\n    share(),\n  )\n\n  const [welcome$, mutationAndReconnect$] = partition(events$, (ev) => ev.type === 'welcome')\n\n  const swrKey = JSON.stringify({\n    fiilter: groqFilter,\n    limit,\n    params,\n    searchQuery,\n    perspective,\n    sort,\n    staticTypeNames,\n  })\n\n  return merge(\n    welcome$,\n    mutationAndReconnect$.pipe(throttleTime(1000, asyncScheduler, {leading: true, trailing: true})),\n  ).pipe(\n    exhaustMapWithTrailing((event): Observable<SearchQueryEvent> => {\n      // Get the types names to use for searching.\n      // If we have a static list of types, we can skip fetching the types and use the static list.\n      const typeNames$ = staticTypeNames\n        ? of(staticTypeNames)\n        : client.observable.fetch(`array::unique(*[${groqFilter}][]._type)`, params)\n\n      // Use the type names to create a search query and fetch the documents that match the query.\n      return typeNames$.pipe(\n        mergeMap((typeNames: string[]) => {\n          const types = getSearchableTypes(schema, staticTypeNames || []).filter((type) => {\n            if (typeNames.includes(type.name)) {\n              // make a call to getExtendedProjection in strict mode to verify that all fields are\n              // known. This method will throw an exception if there are any unknown fields specified\n              // in the sort by list\n              getExtendedProjection(type, sort.by, true)\n              return true\n            }\n            return false\n          })\n\n          const search = createSearch(types, client, {\n            filter: groqFilter,\n            params,\n            strategy: searchStrategy,\n            maxDepth: maxFieldDepth,\n          })\n\n          const doFetch = () => {\n            const searchTerms = {\n              query: searchQuery || '',\n              types,\n            }\n\n            const searchOptions: SearchOptions = {\n              __unstable_extendedProjection: extendedProjection,\n              comments: [`findability-source: ${searchQuery ? 'list-query' : 'list'}`],\n              limit,\n              skipSortByScore: true,\n              sort: sortBy,\n              perspective,\n            }\n\n            return search(searchTerms, searchOptions).pipe(\n              map((result) =>\n                // eslint-disable-next-line max-nested-callbacks\n                result.hits.map(({hit}) => hit),\n              ),\n              map((hits) => ({type: 'result' as const, documents: hits})),\n            )\n          }\n\n          if (event.type === 'mutation' && event.visibility !== 'query') {\n            // Even though the listener request specifies visibility=query, the events are not guaranteed to be delivered with visibility=query\n            // If the event we are responding to arrives with visibility != query, we add a little delay to allow for the updated document to be available for queries\n            // See https://www.sanity.io/docs/listening#visibility-c4786e55c3ff\n            return timer(1200).pipe(mergeMap(doFetch))\n          }\n          if (event.type === 'reconnect') {\n            return of(event)\n          }\n          return doFetch()\n        }),\n      )\n    }),\n    scan(\n      (\n        acc: null | {connected: boolean; documents: SanityDocumentLike[]},\n        event: SearchQueryEvent,\n      ) => ({\n        connected: event.type !== 'reconnect',\n        documents: event.type === 'result' ? event.documents : acc?.documents || [],\n      }),\n      null as null | {connected: boolean; documents: SanityDocumentLike[]},\n    ),\n    filter((v) => v !== null),\n    swr(swrKey),\n    map(({fromCache, value}): SearchQueryState => ({fromCache, ...value})),\n  )\n}\n","import {ChannelError, ClientError, type ClientPerspective, ServerError} from '@sanity/client'\nimport {observableCallback} from 'observable-callback'\nimport {useMemo, useState} from 'react'\nimport {useObservable} from 'react-rx'\nimport {concat, fromEvent, merge, NEVER, of, timer} from 'rxjs'\nimport {\n  filter,\n  map,\n  mergeMap,\n  scan,\n  share,\n  shareReplay,\n  switchMap,\n  take,\n  takeUntil,\n  withLatestFrom,\n} from 'rxjs/operators'\nimport {\n  catchWithCount,\n  DEFAULT_STUDIO_CLIENT_OPTIONS,\n  useClient,\n  useSchema,\n  useSearchMaxFieldDepth,\n  useWorkspace,\n} from 'sanity'\n\nimport {DEFAULT_ORDERING, FULL_LIST_LIMIT, PARTIAL_PAGE_LIMIT} from './constants'\nimport {findStaticTypesInFilter, removePublishedWithDrafts} from './helpers'\nimport {listenSearchQuery} from './listenSearchQuery'\nimport {type DocumentListPaneItem, type SortOrder} from './types'\n\ninterface UseDocumentListOpts {\n  apiVersion?: string\n  filter: string\n  perspective?: ClientPerspective\n  params: Record<string, unknown>\n  searchQuery: string | null\n  sortOrder?: SortOrder\n}\n\ninterface DocumentListState {\n  error: {message: string} | null\n  isLoadingFullList: boolean\n  isLoading: boolean\n  connected?: boolean\n  isRetrying: boolean\n  autoRetry: boolean\n  canRetry: boolean\n  retryCount: number\n  fromCache?: boolean\n  items: DocumentListPaneItem[]\n}\n\nconst INITIAL_QUERY_STATE: DocumentListState = {\n  error: null,\n  isRetrying: false,\n  retryCount: 0,\n  autoRetry: false,\n  canRetry: false,\n  isLoading: true,\n  isLoadingFullList: false,\n  fromCache: false,\n  items: [],\n}\n\ninterface UseDocumentListHookValue extends DocumentListState {\n  onRetry: () => void\n  onLoadFullList: () => void\n}\n\n/**\n * Determine whether an error should be possible to retry\n * @param error - Any caught error\n */\nfunction isRetriableError(error: unknown) {\n  if (error instanceof ChannelError) {\n    // Usually indicative of a bad or malformed request\n    return false\n  }\n  if (error instanceof ServerError) {\n    // >= 500\n    return true\n  }\n  if (error instanceof ClientError) {\n    // >= 400\n    // note: 403 Forbidden makes sense to retry, because it's a potentially passing condition\n    return error.statusCode === 403\n  }\n  return true\n}\n\n/**\n * @internal\n */\nexport function useDocumentList(opts: UseDocumentListOpts): UseDocumentListHookValue {\n  const {\n    filter: searchFilter,\n    params: paramsProp,\n    sortOrder,\n    searchQuery,\n    perspective,\n    apiVersion,\n  } = opts\n  const client = useClient({\n    ...DEFAULT_STUDIO_CLIENT_OPTIONS,\n    apiVersion: apiVersion || DEFAULT_STUDIO_CLIENT_OPTIONS.apiVersion,\n  })\n  const {strategy: searchStrategy} = useWorkspace().search\n  const schema = useSchema()\n  const maxFieldDepth = useSearchMaxFieldDepth()\n\n  // Get the type name from the filter, if it is a simple type filter.\n  const typeNameFromFilter = useMemo(\n    () => findStaticTypesInFilter(searchFilter, paramsProp),\n    [searchFilter, paramsProp],\n  )\n\n  const [[onRetry$, onRetry]] = useState(() => observableCallback())\n  const [[onFetchFullList$, onLoadFullList]] = useState(() => observableCallback())\n\n  const queryResults$ = useMemo(() => {\n    const listenSearchQueryArgs = {\n      client,\n      filter: searchFilter,\n      limit: PARTIAL_PAGE_LIMIT,\n      params: paramsProp,\n      schema,\n      perspective,\n      searchQuery: searchQuery || '',\n      sort: sortOrder || DEFAULT_ORDERING,\n      staticTypeNames: typeNameFromFilter,\n      maxFieldDepth,\n      searchStrategy,\n    }\n\n    const partialList$ = listenSearchQuery(listenSearchQueryArgs).pipe(\n      shareReplay({refCount: true, bufferSize: 1}),\n    )\n\n    // we want to fetch the full list if the last result of the partial list is at the limit\n    const fullList$ = onFetchFullList$.pipe(\n      withLatestFrom(partialList$),\n      filter(([, result]) => result?.documents.length === PARTIAL_PAGE_LIMIT),\n      // we want to set up the full list listener only once\n      take(1),\n      mergeMap(() =>\n        concat(\n          of({type: 'loadFullList' as const}),\n          listenSearchQuery({...listenSearchQueryArgs, limit: FULL_LIST_LIMIT}).pipe(\n            map((result) => ({type: 'result' as const, result})),\n          ),\n        ),\n      ),\n      share(),\n    )\n\n    // The combined search results from both partial page and full list\n    return merge(\n      partialList$.pipe(\n        map((result) => ({\n          type: 'result' as const,\n          result,\n        })),\n        // when the full list listener kicks off, we want to stop the partial list listener\n        takeUntil(fullList$),\n      ),\n      fullList$,\n    ).pipe(\n      catchWithCount((lastError, retryCount, caught$) => {\n        const error = safeError(lastError)\n        const isOnline = window.navigator.onLine\n        const canRetry = isOnline && isRetriableError(lastError)\n        const autoRetry = retryCount < 10\n        const retries = merge(\n          isOnline ? onRetry$ : fromEvent(window, 'online'),\n          isOnline && autoRetry ? timer(retryCount * 1_000) : NEVER,\n        ).pipe(\n          take(1),\n          switchMap(() =>\n            merge(\n              of({\n                type: 'error' as const,\n                error,\n                retrying: true,\n                autoRetry,\n                canRetry,\n                retryCount,\n              }),\n              caught$,\n            ),\n          ),\n        )\n        return concat(\n          of({\n            type: 'error' as const,\n            error,\n            retrying: false,\n            autoRetry,\n            canRetry,\n            retryCount,\n          }),\n          retries,\n        )\n      }),\n      scan((prev, event) => {\n        if (event.type === 'error') {\n          return {\n            ...prev,\n            error: event.error,\n            retryCount: event.retryCount,\n            isRetrying: event.retrying,\n            autoRetry: event.autoRetry,\n            canRetry: event.canRetry,\n          }\n        }\n        if (event.type === 'result') {\n          return {\n            ...prev,\n            error: null,\n            isRetrying: false,\n            fromCache: event.result.fromCache,\n            connected: event.result.connected,\n            isLoading: false,\n            items: removePublishedWithDrafts(event.result.documents),\n            isLoadingFullList: false,\n          }\n        }\n        if (event.type === 'loadFullList') {\n          return {\n            ...prev,\n            error: null,\n            isLoadingFullList: true,\n          }\n        }\n        // @ts-expect-error - all cases should be covered\n        throw new Error(`Unexpected event type: ${event.type}`)\n      }, INITIAL_QUERY_STATE),\n    )\n  }, [\n    client,\n    searchFilter,\n    paramsProp,\n    schema,\n    perspective,\n    searchQuery,\n    sortOrder,\n    typeNameFromFilter,\n    maxFieldDepth,\n    searchStrategy,\n    onFetchFullList$,\n    onRetry$,\n  ])\n\n  const {\n    error,\n    items,\n    isLoading,\n    fromCache,\n    connected,\n    canRetry,\n    isLoadingFullList,\n    isRetrying,\n    autoRetry,\n    retryCount,\n  } = useObservable(queryResults$, INITIAL_QUERY_STATE)\n\n  return {\n    error,\n    onRetry,\n    isLoading,\n    items,\n    isRetrying,\n    canRetry,\n    retryCount,\n    autoRetry,\n    connected,\n    fromCache,\n    onLoadFullList,\n    isLoadingFullList,\n  }\n}\n\n// todo: candidate for re-use\nconst nonErrorThrownWarning = `[WARNING: This was thrown as a non-error. Only Error instances should be thrown]`\nfunction safeError(thrown: unknown): Error {\n  if (thrown instanceof Error) {\n    return thrown\n  }\n  if (typeof thrown === 'object' && thrown !== null) {\n    if ('message' in thrown && typeof thrown.message === 'string') {\n      return new Error(`${thrown.message} ${nonErrorThrownWarning}`)\n    }\n    return new Error(`${String(thrown)} ${nonErrorThrownWarning}`)\n  }\n  return new Error(`${String(thrown)} ${nonErrorThrownWarning}`)\n}\n","import {SearchIcon, SpinnerIcon} from '@sanity/icons'\nimport {Box, TextInput} from '@sanity/ui'\nimport {memo, useCallback, useEffect, useMemo, useState} from 'react'\nimport {useObservableEvent} from 'react-rx'\nimport {debounce, map, type Observable, of, tap, timer} from 'rxjs'\nimport {\n  type GeneralPreviewLayoutKey,\n  useActiveReleases,\n  useI18nText,\n  usePerspective,\n  useReconnectingToast,\n  useSchema,\n  useTranslation,\n  useUnique,\n} from 'sanity'\nimport {keyframes, styled} from 'styled-components'\n\nimport {structureLocaleNamespace} from '../../i18n'\nimport {type BaseStructureToolPaneProps} from '../types'\nimport {EMPTY_RECORD, FULL_LIST_LIMIT} from './constants'\nimport {DocumentListPaneContent} from './DocumentListPaneContent'\nimport {applyOrderingFunctions, findStaticTypesInFilter} from './helpers'\nimport {useShallowUnique} from './PaneContainer'\nimport {type LoadingVariant, type SortOrder} from './types'\nimport {useDocumentList} from './useDocumentList'\n\n/**\n * @internal\n */\nexport type DocumentListPaneProps = BaseStructureToolPaneProps<'documentList'> & {\n  sortOrder?: SortOrder\n  layout?: Exclude<GeneralPreviewLayoutKey, 'sheetList'>\n}\n\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`\n\nconst fadeIn = keyframes`\n  0% {\n    opacity: 0;\n  }\n  50% {\n    opacity: 0.1;\n  }\n  100% {\n    opacity: 0.4;\n  }\n`\n\nconst AnimatedSpinnerIcon = styled(SpinnerIcon)`\n  animation: ${rotate} 500ms linear infinite;\n`\n\nconst SubtleSpinnerIcon = styled(SpinnerIcon)`\n  animation: ${rotate} 1500ms linear infinite;\n  opacity: 0.4;\n`\n\nconst DelayedSubtleSpinnerIcon = styled(SpinnerIcon)`\n  animation:\n    ${rotate} 1500ms linear infinite,\n    ${fadeIn} 1000ms linear;\n  opacity: 0.4;\n`\n\n/**\n * @internal\n */\n\nexport const DocumentListPane = memo(function DocumentListPane(props: DocumentListPaneProps) {\n  const {childItemId, isActive, pane, paneKey, sortOrder: sortOrderRaw, layout} = props\n  const schema = useSchema()\n  const releases = useActiveReleases()\n  const {perspectiveStack} = usePerspective()\n  const {displayOptions, options} = pane\n  const {apiVersion, filter} = options\n  const params = useShallowUnique(options.params || EMPTY_RECORD)\n  const typeName = useMemo(() => {\n    const staticTypes = findStaticTypesInFilter(filter, params)\n    if (staticTypes?.length === 1) return staticTypes[0]\n    return null\n  }, [filter, params])\n\n  const showIcons = displayOptions?.showIcons !== false\n\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {title} = useI18nText(pane)\n\n  const [searchQuery, setSearchQuery] = useState<string>('')\n  const [searchInputValue, setSearchInputValue] = useState<string>('')\n  const [searchInputElement, setSearchInputElement] = useState<HTMLInputElement | null>(null)\n\n  const sortWithOrderingFn =\n    typeName && sortOrderRaw\n      ? applyOrderingFunctions(sortOrderRaw, schema.get(typeName) as any)\n      : sortOrderRaw\n\n  const sortOrder = useUnique(sortWithOrderingFn)\n\n  const {\n    error,\n    isLoadingFullList,\n    isLoading: documentListIsLoading,\n    items,\n    fromCache,\n    isRetrying,\n    autoRetry,\n    canRetry,\n    retryCount,\n    connected,\n    onLoadFullList,\n    onRetry,\n  } = useDocumentList({\n    apiVersion,\n    filter,\n    perspective: perspectiveStack,\n    params,\n    searchQuery: searchQuery?.trim(),\n    sortOrder,\n  })\n\n  const isLoading = documentListIsLoading || releases.loading\n\n  const handleQueryChange = useObservableEvent(\n    (event$: Observable<React.ChangeEvent<HTMLInputElement>>) => {\n      return event$.pipe(\n        map((event) => event.target.value),\n        tap(setSearchInputValue),\n        debounce((value) => (value === '' ? of('') : timer(300))),\n        tap(setSearchQuery),\n      )\n    },\n  )\n\n  const handleClearSearch = useCallback(() => {\n    setSearchQuery('')\n    setSearchInputValue('')\n  }, [])\n\n  const handleSearchKeyDown = useCallback(\n    (event: React.KeyboardEvent<HTMLInputElement>) => {\n      if (event.key === 'Escape') {\n        handleClearSearch()\n      }\n    },\n    [handleClearSearch],\n  )\n\n  const [enableSearchSpinner, setEnableSearchSpinner] = useState<string | void>()\n\n  useEffect(() => {\n    if (!enableSearchSpinner && !isLoading) {\n      setEnableSearchSpinner(paneKey)\n    }\n  }, [enableSearchSpinner, isLoading, paneKey])\n\n  useEffect(() => {\n    // Clear search field and disable search spinner\n    // when switching between panes (i.e. when paneKey changes).\n    handleClearSearch()\n    setEnableSearchSpinner()\n  }, [paneKey, handleClearSearch])\n\n  const loadingVariant: LoadingVariant = useMemo(() => {\n    if (connected && isLoading && enableSearchSpinner === paneKey) {\n      return 'spinner'\n    }\n    if (connected && fromCache) {\n      return 'subtle'\n    }\n\n    return 'initial'\n  }, [connected, enableSearchSpinner, fromCache, isLoading, paneKey])\n\n  const textInputIcon = useMemo(() => {\n    if (loadingVariant === 'spinner') {\n      return AnimatedSpinnerIcon\n    }\n    if (searchInputValue && loadingVariant === 'subtle') {\n      return SubtleSpinnerIcon\n    }\n    return SearchIcon\n  }, [loadingVariant, searchInputValue])\n\n  useReconnectingToast(!connected)\n\n  return (\n    <>\n      <Box paddingX={3} paddingBottom={3}>\n        <TextInput\n          aria-label={t('panes.document-list-pane.search-input.aria-label')}\n          autoComplete=\"off\"\n          border={false}\n          clearButton={Boolean(searchQuery)}\n          fontSize={[2, 2, 1]}\n          icon={textInputIcon}\n          iconRight={\n            !connected || (loadingVariant === 'subtle' && !searchInputValue)\n              ? DelayedSubtleSpinnerIcon\n              : null\n          }\n          onChange={handleQueryChange}\n          onClear={handleClearSearch}\n          onKeyDown={handleSearchKeyDown}\n          padding={2}\n          placeholder={t('panes.document-list-pane.search-input.placeholder')}\n          radius={2}\n          ref={setSearchInputElement}\n          spellCheck={false}\n          value={searchInputValue}\n        />\n      </Box>\n      <DocumentListPaneContent\n        key={paneKey}\n        childItemId={childItemId}\n        error={error}\n        filterIsSimpleTypeConstraint={!!typeName}\n        hasMaxItems={items.length === FULL_LIST_LIMIT}\n        hasSearchQuery={Boolean(searchQuery)}\n        isActive={isActive}\n        isLazyLoading={isLoadingFullList}\n        isLoading={isLoading}\n        autoRetry={autoRetry}\n        canRetry={canRetry}\n        retryCount={retryCount}\n        isRetrying={isRetrying}\n        isConnected={connected}\n        items={items}\n        layout={layout}\n        muted={loadingVariant === 'subtle'}\n        loadingVariant={loadingVariant}\n        onEndReached={onLoadFullList}\n        onRetry={onRetry}\n        paneTitle={title}\n        searchInputElement={searchInputElement}\n        showIcons={showIcons}\n      />\n    </>\n  )\n})\n","import {ArrowLeftIcon} from '@sanity/icons'\nimport {memo, type ReactNode, useMemo} from 'react'\nimport {type GeneralPreviewLayoutKey, type InitialValueTemplateItem} from 'sanity'\n\nimport {Button, TooltipDelayGroupProvider} from '../../../ui-components'\nimport {\n  BackLink,\n  PaneHeader as StructurePaneHeader,\n  PaneHeaderActions,\n  usePane,\n} from '../../components'\nimport {\n  type PaneMenuItem,\n  type PaneMenuItemGroup,\n  type StructureToolPaneActionHandler,\n} from '../../types'\nimport {useStructureTool} from '../../useStructureTool'\nimport {type SortOrder} from './types'\n\ninterface PaneHeaderProps {\n  contentAfter?: ReactNode\n  index: number\n  initialValueTemplates?: InitialValueTemplateItem[]\n  menuItemGroups?: PaneMenuItemGroup[]\n  menuItems?: PaneMenuItem[]\n  setLayout: (layout: GeneralPreviewLayoutKey) => void\n  setSortOrder: (sortOrder: SortOrder) => void\n  title: string\n}\n\nexport const PaneHeader = memo(\n  ({\n    contentAfter,\n    index,\n    initialValueTemplates = [],\n    menuItemGroups = [],\n    menuItems = [],\n    setLayout,\n    setSortOrder,\n    title,\n  }: PaneHeaderProps) => {\n    const {features} = useStructureTool()\n    const {collapsed, isLast} = usePane()\n    // Prevent focus if this is the last (non-collapsed) pane.\n    const tabIndex = isLast && !collapsed ? -1 : 0\n\n    const actionHandlers = useMemo((): Record<string, StructureToolPaneActionHandler> => {\n      return {\n        setLayout: ({layout: value}: {layout: GeneralPreviewLayoutKey}) => {\n          setLayout(value)\n        },\n        setSortOrder: (sort: SortOrder) => {\n          setSortOrder(sort)\n        },\n      }\n    }, [setLayout, setSortOrder])\n\n    return (\n      <TooltipDelayGroupProvider>\n        <StructurePaneHeader\n          actions={\n            <PaneHeaderActions\n              initialValueTemplateItems={initialValueTemplates}\n              actionHandlers={actionHandlers}\n              menuItemGroups={menuItemGroups}\n              menuItems={menuItems}\n            />\n          }\n          backButton={\n            features.backButton &&\n            index > 0 && (\n              <Button\n                as={BackLink}\n                data-as=\"a\"\n                icon={ArrowLeftIcon}\n                mode=\"bleed\"\n                tooltipProps={{content: 'Back'}}\n              />\n            )\n          }\n          contentAfter={contentAfter}\n          tabIndex={tabIndex}\n          title={title}\n        />\n      </TooltipDelayGroupProvider>\n    )\n  },\n)\n\nPaneHeader.displayName = 'Memo(PaneHeader)'\n","'use no memo'\n// The `use no memo` directive is due to a known issue with react-table and react compiler: https://github.com/TanStack/table/issues/5567\n\nimport {type SanityDocument} from '@sanity/client'\nimport {Checkbox} from '@sanity/ui'\nimport {type CellContext} from '@tanstack/react-table'\nimport {type MouseEvent, useCallback} from 'react'\n\nexport function DocumentSheetListSelect(props: CellContext<SanityDocument, unknown>) {\n  const {row, table} = props\n\n  const {selectedAnchor, setSelectedAnchor} = table.options.meta || {}\n\n  const handleOnClick = useCallback(\n    (e: MouseEvent<HTMLInputElement>) => {\n      if (e.shiftKey && selectedAnchor !== null && selectedAnchor !== undefined) {\n        const shiftClickIndex = row.index\n        const lowerIndex = shiftClickIndex < selectedAnchor ? shiftClickIndex : selectedAnchor\n        const upperIndex = shiftClickIndex < selectedAnchor ? selectedAnchor : shiftClickIndex\n\n        const additionalSelectedRows = table\n          .getRowModel()\n          .flatRows.slice(lowerIndex, upperIndex + 1)\n          .map(({id}) => id)\n\n        const currentSelectedRows = table.getSelectedRowModel().rows.map(({id}) => id)\n        table.setRowSelection(() =>\n          [...additionalSelectedRows, ...currentSelectedRows].reduce(\n            (nextSelectedRows, rowId) => ({...nextSelectedRows, [rowId]: true}),\n            {},\n          ),\n        )\n      } else if (setSelectedAnchor) {\n        const isRowCurrentlySelected = row.getIsSelected()\n        if (isRowCurrentlySelected) {\n          // about to unselect so invalidate current anchor\n          setSelectedAnchor(null)\n        } else {\n          // override anchor with new selection index\n          setSelectedAnchor(row.index)\n        }\n\n        row.toggleSelected()\n      }\n    },\n    [selectedAnchor, row, setSelectedAnchor, table],\n  )\n\n  return (\n    <Checkbox\n      style={{paddingLeft: 4}}\n      checked={props.row.getIsSelected()}\n      disabled={!props.row.getCanSelect()}\n      // onChange doesn't have shiftKey in event, but want to control this checkbox\n      // need to define noop onChange to suppress the warning\n      // eslint-disable-next-line react/jsx-no-bind\n      onChange={() => null}\n      onClick={handleOnClick}\n    />\n  )\n}\n","import {type SanityDocument} from '@sanity/types'\nimport {type Table} from '@tanstack/react-table'\nimport {type ReactNode, useCallback, useContext, useEffect, useMemo, useState} from 'react'\nimport {DocumentSheetListContext} from 'sanity/_singletons'\n\ninterface DocumentSheetListProviderProps {\n  children?: ReactNode\n  table: Table<SanityDocument>\n}\n\ntype SelectedCellDetails = {\n  colId: string\n  rowIndex: number\n  state: 'focused' | 'selected'\n} | null\n\n/** @internal */\nexport interface DocumentSheetListContextValue {\n  focusAnchorCell: () => void\n  resetFocusSelection: () => void\n  setSelectedAnchorCell: (colId: string, rowIndex: number) => void\n  getStateByCellId: (\n    colId: string,\n    rowIndex: number,\n  ) => 'focused' | 'selectedAnchor' | 'selectedRange' | null\n  submitFocusedCell: () => void\n}\n\n/** @internal */\nexport const useDocumentSheetListContext = (): DocumentSheetListContextValue => {\n  const context = useContext(DocumentSheetListContext)\n\n  if (context === undefined) {\n    throw new Error('useDocumentSheetListContext must be used within an DocumentSheetListProvider')\n  }\n  return context\n}\n\n/** @internal */\nexport function DocumentSheetListProvider({\n  children,\n  table,\n}: DocumentSheetListProviderProps): ReactNode {\n  const [selectedAnchorCellDetails, setSelectedAnchorCellDetails] =\n    useState<SelectedCellDetails>(null)\n  const [selectedRangeCellIndexes, setSelectedRangeCellIndexes] = useState<number[]>([])\n\n  const clearAndSetFocusSelection = useCallback(\n    (nextAnchorDetails: SelectedCellDetails = null) => {\n      if (\n        selectedAnchorCellDetails?.state === 'focused' &&\n        document.activeElement instanceof HTMLElement\n      ) {\n        document.activeElement.blur()\n      }\n\n      setSelectedAnchorCellDetails(nextAnchorDetails)\n      setSelectedRangeCellIndexes([])\n    },\n    [selectedAnchorCellDetails],\n  )\n\n  const resetFocusSelection = useCallback(\n    () => clearAndSetFocusSelection(),\n    [clearAndSetFocusSelection],\n  )\n\n  const changeSelectionColumn = useCallback(\n    (direction: 'left' | 'right') => {\n      if (!selectedAnchorCellDetails) return\n\n      const visibleColumns = table.getVisibleLeafColumns()\n      const columnIndexAfterMove =\n        visibleColumns.findIndex((col) => col.id === selectedAnchorCellDetails.colId) +\n        (direction === 'left' ? -1 : 1)\n\n      if (columnIndexAfterMove < 0 || columnIndexAfterMove >= visibleColumns.length) return\n\n      clearAndSetFocusSelection({\n        colId: visibleColumns[columnIndexAfterMove].id,\n        rowIndex: selectedAnchorCellDetails.rowIndex,\n        state: 'selected',\n      })\n    },\n    [clearAndSetFocusSelection, selectedAnchorCellDetails, table],\n  )\n\n  const changeSelectionRange = useCallback(\n    (direction: 'up' | 'down') => {\n      if (!selectedAnchorCellDetails) return\n\n      setSelectedRangeCellIndexes((previousSelection) => {\n        const {rowIndex: anchorIndex} = selectedAnchorCellDetails\n        const getNextIndex = (startingIndex: number) =>\n          startingIndex + (direction === 'down' ? 1 : -1)\n        // if no cells are selected, select the cell in the direction\n        if (!previousSelection.length) {\n          const firstSelectedIndex = getNextIndex(anchorIndex)\n          if (firstSelectedIndex < 0) return []\n          return [firstSelectedIndex]\n        }\n        const lastIndexSelected = previousSelection[previousSelection.length - 1]\n        const nextIndex = getNextIndex(lastIndexSelected)\n\n        // if the cell in the direction is out of bounds, return the previous selection\n        if (nextIndex < 0) return previousSelection\n\n        // if the cell in the direction is the same as the focused cell, deselect all cells\n        if (nextIndex === anchorIndex) return []\n\n        // if the cell in the direction is already selected, deselect the last selected cell\n        if (previousSelection.includes(nextIndex)) {\n          return previousSelection.slice(0, -1)\n        }\n\n        return [...previousSelection, nextIndex]\n      })\n    },\n    [selectedAnchorCellDetails],\n  )\n\n  const setSelectedAnchorCell = useCallback(\n    (colId: string, rowIndex: number) => {\n      clearAndSetFocusSelection({colId, rowIndex, state: 'selected'})\n    },\n    [clearAndSetFocusSelection],\n  )\n\n  const handleEscapePress = useCallback(() => {\n    if (!selectedAnchorCellDetails) return\n    if (selectedRangeCellIndexes.length) {\n      // only clear selected range if it exists\n      setSelectedRangeCellIndexes([])\n    } else {\n      const nextAnchorCellDetails: SelectedCellDetails =\n        selectedAnchorCellDetails.state === 'selected'\n          ? null\n          : {\n              ...selectedAnchorCellDetails,\n              state: 'selected',\n            }\n      clearAndSetFocusSelection(nextAnchorCellDetails)\n    }\n  }, [clearAndSetFocusSelection, selectedAnchorCellDetails, selectedRangeCellIndexes.length])\n\n  const handleUpDownKey = useCallback(\n    (isShiftKey: boolean, key: string) => {\n      if (!selectedAnchorCellDetails) return\n\n      const direction = key === 'ArrowDown' ? 'down' : 'up'\n      const offset = direction === 'down' ? 1 : -1\n\n      if (isShiftKey) {\n        changeSelectionRange(direction)\n      } else {\n        const newSelectedCellRowIndex = selectedAnchorCellDetails.rowIndex + offset\n        if (newSelectedCellRowIndex < 0) return\n\n        setSelectedAnchorCell(selectedAnchorCellDetails.colId, newSelectedCellRowIndex)\n      }\n    },\n    [changeSelectionRange, selectedAnchorCellDetails, setSelectedAnchorCell],\n  )\n\n  const handleAnchorKeydown = useCallback(\n    (event: KeyboardEvent) => {\n      if (!selectedAnchorCellDetails) return\n\n      const {key, shiftKey} = event\n\n      switch (key) {\n        case 'Shift':\n          break // shift allow should do nothing\n\n        case 'Escape':\n          handleEscapePress()\n          break\n\n        case 'ArrowDown':\n        case 'ArrowUp':\n          event.preventDefault()\n          handleUpDownKey(shiftKey, key)\n          break\n\n        case 'ArrowLeft':\n        case 'ArrowRight':\n          // when cell is focused, arrows should have default behavior\n          // only prevent default when cell is selected\n          if (selectedAnchorCellDetails.state === 'selected') {\n            event.preventDefault()\n            changeSelectionColumn(key === 'ArrowLeft' ? 'left' : 'right')\n          }\n          break\n\n        default:\n          break\n      }\n    },\n    [selectedAnchorCellDetails, handleEscapePress, handleUpDownKey, changeSelectionColumn],\n  )\n\n  const handleAnchorClick = useCallback(\n    (event: MouseEvent) => {\n      if (!selectedAnchorCellDetails) return\n      const isClickInAnchorCell = document\n        .getElementById(\n          `cell-${selectedAnchorCellDetails.colId}-${selectedAnchorCellDetails.rowIndex}`,\n        )\n        ?.contains(event.target as Node)\n\n      if (!isClickInAnchorCell) resetFocusSelection()\n    },\n    [resetFocusSelection, selectedAnchorCellDetails],\n  )\n\n  useEffect(() => {\n    if (selectedAnchorCellDetails) {\n      document.addEventListener('keydown', handleAnchorKeydown)\n      document.addEventListener('click', handleAnchorClick)\n    }\n\n    return () => {\n      if (selectedAnchorCellDetails) {\n        document.removeEventListener('keydown', handleAnchorKeydown)\n        document.removeEventListener('click', handleAnchorClick)\n      }\n    }\n  }, [handleAnchorClick, handleAnchorKeydown, selectedAnchorCellDetails])\n\n  const focusAnchorCell = useCallback(\n    () =>\n      setSelectedAnchorCellDetails((anchorCellDetails) => {\n        if (!anchorCellDetails) return null\n\n        return {...anchorCellDetails, state: 'focused'}\n      }),\n    [],\n  )\n\n  const getStateByCellId = useCallback(\n    (colId: string, rowIndex: number) => {\n      if (selectedAnchorCellDetails?.colId !== colId) return null\n\n      if (selectedAnchorCellDetails.rowIndex === rowIndex)\n        return selectedAnchorCellDetails.state === 'focused' ? 'focused' : 'selectedAnchor'\n\n      if (selectedRangeCellIndexes.includes(rowIndex)) return 'selectedRange'\n\n      return null\n    },\n    [selectedAnchorCellDetails, selectedRangeCellIndexes],\n  )\n\n  const submitFocusedCell = useCallback(() => {\n    if (!selectedAnchorCellDetails) return\n\n    clearAndSetFocusSelection({\n      colId: selectedAnchorCellDetails.colId,\n      rowIndex: selectedAnchorCellDetails.rowIndex + 1,\n      state: 'selected',\n    })\n  }, [clearAndSetFocusSelection, selectedAnchorCellDetails])\n\n  const value = useMemo<DocumentSheetListContextValue>(\n    () => ({\n      focusAnchorCell,\n      resetFocusSelection,\n      setSelectedAnchorCell,\n      getStateByCellId,\n      submitFocusedCell,\n    }),\n    [\n      focusAnchorCell,\n      resetFocusSelection,\n      setSelectedAnchorCell,\n      getStateByCellId,\n      submitFocusedCell,\n    ],\n  )\n\n  return (\n    <DocumentSheetListContext.Provider value={value}>{children}</DocumentSheetListContext.Provider>\n  )\n}\n","'use no memo'\n// The `use no memo` directive is due to a known issue with react-table and react compiler: https://github.com/TanStack/table/issues/5567\n\n/* eslint-disable i18next/no-literal-string */\nimport {type ObjectFieldType} from '@sanity/types'\nimport {Select, TextInput} from '@sanity/ui'\nimport {type Cell, type CellContext, flexRender} from '@tanstack/react-table'\nimport {type MouseEventHandler, useCallback, useEffect, useRef, useState} from 'react'\nimport {type SanityDocument} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {useDocumentSheetListContext} from './DocumentSheetListProvider'\n\nconst DataCell = styled.td<{width: number}>`\n  display: flex;\n  overflow: hidden;\n  box-sizing: border-box;\n  width: ${({width}) => width}px;\n  border-top: 1px solid var(--card-border-color);\n  background-color: var(--card-bg-color);\n`\n\nconst PinnedDataCell = styled(DataCell)`\n  position: sticky;\n  z-index: 2;\n`\n\ninterface SheetListCellInnerProps extends CellContext<SanityDocument, unknown> {\n  fieldType: ObjectFieldType\n}\n\ntype CellInputElement = HTMLInputElement | HTMLSelectElement\ntype InputRef = CellInputElement | null\n\n/** @internal */\nexport function SheetListCellInner(props: SheetListCellInnerProps) {\n  const {getValue, column, row, fieldType} = props\n  const cellId = `cell-${column.id}-${row.index}`\n  const [renderValue, setRenderValue] = useState<string>(getValue() as string)\n  const [isDirty, setIsDirty] = useState(false)\n  const inputRef = useRef<InputRef>(null)\n  const {\n    focusAnchorCell,\n    resetFocusSelection,\n    setSelectedAnchorCell,\n    getStateByCellId,\n    submitFocusedCell,\n  } = useDocumentSheetListContext()\n  const cellState = getStateByCellId(column.id, row.index)\n\n  const handleOnFocus = useCallback(() => {\n    // reselect in cases where focus achieved without initial mousedown\n    setSelectedAnchorCell(column.id, row.index)\n    focusAnchorCell()\n  }, [column.id, focusAnchorCell, row.index, setSelectedAnchorCell])\n  const {patchDocument} = props.table.options.meta || {}\n\n  const handleProgrammaticFocus = () => {\n    inputRef.current?.focus()\n    if (inputRef.current instanceof HTMLInputElement) {\n      inputRef.current.select()\n    }\n  }\n\n  const handleOnMouseDown: MouseEventHandler<CellInputElement> = (event) => {\n    if (event.detail === 2) {\n      handleProgrammaticFocus()\n    } else {\n      event.preventDefault()\n      setSelectedAnchorCell(column.id, row.index)\n    }\n  }\n\n  const handleOnEnterDown = useCallback(\n    (event: KeyboardEvent) => {\n      const {key} = event\n      if (key === 'Enter') {\n        if (cellState === 'selectedAnchor') handleProgrammaticFocus()\n        if (cellState === 'focused') submitFocusedCell()\n      }\n    },\n    [cellState, submitFocusedCell],\n  )\n\n  const handleOnChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setIsDirty(true)\n    setRenderValue(event.target.value)\n  }\n\n  const handleOnBlur = () => {\n    if (isDirty) {\n      patchDocument?.(row.id, column.id, renderValue)\n      setIsDirty(false)\n    }\n    resetFocusSelection()\n  }\n\n  const handlePaste = useCallback(\n    (event: ClipboardEvent) => {\n      const clipboardData = event.clipboardData?.getData('Text')\n\n      if (typeof clipboardData === 'string' || typeof clipboardData === 'number') {\n        setRenderValue(clipboardData)\n        // patch immediately when pasting\n        patchDocument?.(row.id, column.id, clipboardData)\n      }\n    },\n    [column.id, patchDocument, row.id],\n  )\n\n  const handleCopy = useCallback(() => {\n    navigator.clipboard.writeText(renderValue.toString())\n  }, [renderValue])\n\n  useEffect(() => {\n    if (cellState === 'selectedAnchor' || cellState === 'focused')\n      // only listen for enter key when cell is focused or anchor\n      document.addEventListener('keydown', handleOnEnterDown)\n    if (cellState === 'selectedAnchor' || cellState === 'selectedRange')\n      // if cell is selected, paste events should be handled\n      document.addEventListener('paste', handlePaste)\n\n    if (cellState === 'selectedAnchor')\n      // only allow copying when cell is selected anchor\n      document.addEventListener('copy', handleCopy)\n\n    return () => {\n      if (cellState === 'selectedAnchor' || cellState === 'focused')\n        document.removeEventListener('keydown', handleOnEnterDown)\n      if (cellState === 'selectedAnchor' || cellState === 'selectedRange')\n        document.removeEventListener('paste', handlePaste)\n      if (cellState === 'selectedAnchor') document.removeEventListener('copy', handleCopy)\n    }\n  }, [\n    cellId,\n    cellState,\n    column.id,\n    getStateByCellId,\n    handleCopy,\n    handleOnEnterDown,\n    handlePaste,\n    row.index,\n  ])\n\n  const getBorderStyle = () => {\n    if (cellState === 'focused') return '2px solid blue'\n    if (cellState === 'selectedRange') return '1px solid green'\n    if (cellState === 'selectedAnchor') return '1px solid blue'\n\n    return '1px solid transparent'\n  }\n\n  const inputProps = {\n    'onFocus': handleOnFocus,\n    'onBlur': handleOnBlur,\n    'onMouseDown': handleOnMouseDown,\n    'aria-selected': !!cellState,\n    'data-testid': cellId,\n    'id': cellId,\n    'ref': (ref: InputRef) => {\n      inputRef.current = ref\n    },\n  }\n\n  if (fieldType.name === 'boolean') {\n    return (\n      <Select\n        {...inputProps}\n        onChange={() => null}\n        radius={0}\n        style={{\n          boxShadow: 'none',\n          border: getBorderStyle(),\n          padding: 0,\n        }}\n        value={JSON.stringify(renderValue)}\n      >\n        <option value=\"True\">True</option>\n        <option value=\"False\">False</option>\n      </Select>\n    )\n  }\n\n  return (\n    <TextInput\n      {...inputProps}\n      size={0}\n      radius={0}\n      border={false}\n      style={{\n        border: getBorderStyle(),\n        padding: '22px 16px',\n      }}\n      value={\n        typeof renderValue === 'string' || typeof renderValue === 'number'\n          ? renderValue\n          : JSON.stringify(renderValue)\n      }\n      onChange={handleOnChange}\n    />\n  )\n}\n\n/** @internal */\nexport function SheetListCell(cell: Cell<SanityDocument, unknown>) {\n  const isPinned = cell.column.getIsPinned()\n  const Cell = isPinned ? PinnedDataCell : DataCell\n  const borderWidth = isPinned && cell.column.getIsLastColumn('left') ? 2 : 1\n\n  return (\n    <Cell\n      key={cell.row.original._id + cell.id}\n      style={{\n        left: cell.column.getStart('left') ?? undefined,\n        borderRight: `${borderWidth}px solid var(--card-border-color)`,\n      }}\n      width={cell.column.getSize()}\n    >\n      {flexRender(cell.column.columnDef.cell, cell.getContext?.())}\n    </Cell>\n  )\n}\n","'use no memo'\n// The `use no memo` directive is due to a known issue with react-table and react compiler: https://github.com/TanStack/table/issues/5567\n\nimport {isObjectSchemaType, type ObjectSchemaType} from '@sanity/types'\nimport {Box, Checkbox, Flex, Text} from '@sanity/ui'\nimport {\n  type AccessorKeyColumnDef,\n  createColumnHelper,\n  type GroupColumnDef,\n  type VisibilityState,\n} from '@tanstack/react-table'\nimport {useMemo} from 'react'\nimport {useObservable} from 'react-rx'\nimport {\n  type DocumentPreviewStore,\n  DocumentStatusIndicator,\n  getPreviewStateObservable,\n  type SanityDocument,\n  type SchemaType,\n  useDocumentPreviewStore,\n  useDocumentVersionInfo,\n} from 'sanity'\n\nimport {DocumentSheetListSelect} from './DocumentSheetListSelect'\nimport {SheetListCellInner} from './SheetListCell'\n\nexport const VISIBLE_COLUMN_LIMIT = 5\n\nconst PreviewCell = (props: {\n  documentPreviewStore: DocumentPreviewStore\n  schemaType: SchemaType\n  row: {\n    original: SanityDocument\n  }\n}) => {\n  const {documentPreviewStore, row, schemaType} = props\n  const previewStateObservable = useMemo(\n    () => getPreviewStateObservable(documentPreviewStore, schemaType, row.original._id),\n    [documentPreviewStore, row.original._id, schemaType],\n  )\n\n  const versionsInfo = useDocumentVersionInfo(row.original._id)\n\n  const {snapshot, isLoading} = useObservable(previewStateObservable, {\n    snapshot: null,\n    isLoading: true,\n  })\n  if (isLoading) {\n    return (\n      <Text size={1} muted>\n        Loading...\n      </Text>\n    )\n  }\n  const displayValue = (snapshot?.title ?? 'Untitled') as string\n\n  return (\n    <Flex align=\"center\" gap={3}>\n      <DocumentStatusIndicator\n        draft={versionsInfo.draft}\n        published={versionsInfo.published}\n        versions={undefined}\n      />\n      <Text size={1}>{displayValue}</Text>\n    </Flex>\n  )\n}\n\nconst columnHelper = createColumnHelper<SanityDocument>()\nconst SUPPORTED_FIELDS = ['string', 'number', 'boolean']\n\ntype Columns = (\n  | AccessorKeyColumnDef<SanityDocument, unknown>\n  | GroupColumnDef<SanityDocument, unknown>\n)[]\n\nconst getColsFromSchemaType = (schemaType: ObjectSchemaType, parentalField?: string): Columns => {\n  return schemaType.fields.reduce<Columns>((tableColumns: Columns, field) => {\n    const {type, name} = field\n    if (SUPPORTED_FIELDS.includes(type.name)) {\n      const nextCol = columnHelper.accessor(\n        // accessor must use dot notation for internal tanstack method of reading cell data\n        parentalField ? `${parentalField}.${field.name}` : field.name,\n        {\n          id: parentalField ? `${parentalField}_${field.name}` : field.name,\n          header: field.type.title,\n          enableHiding: true,\n          cell: (info) => <SheetListCellInner {...info} fieldType={type} />,\n        },\n      )\n\n      return [...tableColumns, nextCol]\n    }\n\n    // if first layer nested object\n    if (type.name === 'object' && isObjectSchemaType(type) && !parentalField) {\n      return [\n        ...tableColumns,\n        columnHelper.group({header: name, columns: getColsFromSchemaType(type, field.name)}),\n      ]\n    }\n\n    return tableColumns\n  }, [])\n}\n\n// Type guard function to check if a column is of type GroupColumnDef\nfunction isAccessorKeyColumnDef(\n  column: Columns[number],\n): column is AccessorKeyColumnDef<SanityDocument, unknown> {\n  return 'accessorKey' in column\n}\nfunction isGroupColumnDef(\n  column: AccessorKeyColumnDef<SanityDocument, unknown> | GroupColumnDef<SanityDocument, unknown>,\n): column is GroupColumnDef<SanityDocument, unknown> {\n  return 'columns' in column\n}\n\nconst flatColumns = (cols: Columns): AccessorKeyColumnDef<SanityDocument, unknown>[] => {\n  return cols.flatMap((col) => {\n    if (isAccessorKeyColumnDef(col)) {\n      return col\n    }\n    if (isGroupColumnDef(col)) {\n      return col.columns ? flatColumns(col.columns) : []\n    }\n    return []\n  })\n}\n\nexport function useDocumentSheetColumns(documentSchemaType?: ObjectSchemaType) {\n  const documentPreviewStore = useDocumentPreviewStore()\n\n  const columns: Columns = useMemo(() => {\n    if (!documentSchemaType) {\n      return []\n    }\n    return [\n      columnHelper.display({\n        id: 'selected',\n        enableHiding: false,\n        header: (info) => (\n          <Box>\n            <Checkbox\n              style={{paddingLeft: 4}}\n              indeterminate={info.table.getIsSomeRowsSelected()}\n              onChange={info.table.getToggleAllPageRowsSelectedHandler()}\n            />\n            {/* eslint-disable-next-line i18next/no-literal-string */}\n            {info.table.getSelectedRowModel().rows.length} selected\n          </Box>\n        ),\n        cell: DocumentSheetListSelect,\n      }),\n      columnHelper.accessor('Preview', {\n        enableHiding: false,\n        id: 'Preview',\n        cell: (info) => {\n          return (\n            <PreviewCell\n              {...info}\n              documentPreviewStore={documentPreviewStore}\n              schemaType={documentSchemaType}\n            />\n          )\n        },\n      }),\n      ...getColsFromSchemaType(documentSchemaType),\n    ]\n  }, [documentPreviewStore, documentSchemaType])\n\n  const [initialColumnsVisibility]: [VisibilityState, number] = useMemo(\n    () =>\n      flatColumns(columns).reduce<[VisibilityState, number]>(\n        ([accCols, countAllowedVisible], column) => {\n          if (!column.id) throw new Error('Column must have an id')\n          const visibilityKey = column.id\n\n          // this column is always visible\n          if (!column.enableHiding) {\n            return [{...accCols, [visibilityKey]: true}, countAllowedVisible]\n          }\n\n          // have already reached column visibility limit, hide column by default\n          if (countAllowedVisible === VISIBLE_COLUMN_LIMIT) {\n            return [{...accCols, [visibilityKey]: false}, countAllowedVisible]\n          }\n\n          return [{...accCols, [visibilityKey]: true}, countAllowedVisible + 1]\n        },\n        [{}, 0],\n      ),\n    [columns],\n  )\n\n  return {columns, initialColumnsVisibility}\n}\n","'use no memo'\n// The `use no memo` directive is due to a known issue with react-table and react compiler: https://github.com/TanStack/table/issues/5567\n\nimport {Box, Checkbox, Flex, Menu, Stack, Text} from '@sanity/ui'\nimport {type Column, type Table} from '@tanstack/react-table'\nimport {useCallback} from 'react'\nimport {type SanityDocument, useTranslation} from 'sanity'\n\nimport {Button, MenuButton} from '../../../../ui-components'\nimport {VISIBLE_COLUMN_LIMIT} from './useDocumentSheetColumns'\n\ntype ColumnsControlProps = {\n  table: Table<SanityDocument>\n}\n\nexport function ColumnsControl({table}: ColumnsControlProps) {\n  const {t} = useTranslation()\n  const isVisibleLimitReached =\n    table.getVisibleLeafColumns().filter((col) => col.getCanHide()).length >= VISIBLE_COLUMN_LIMIT\n\n  const setInitialColumns = useCallback(() => {\n    table.resetColumnVisibility()\n  }, [table])\n\n  const handleColumnOnChange = (column: Column<SanityDocument, unknown>) => () => {\n    column.toggleVisibility()\n  }\n\n  const getColumnVisibilityDisabled = (column: Column<SanityDocument, unknown>) => {\n    const isColumnVisible = column.getIsVisible()\n    const isSingleColumnVisible =\n      table.getVisibleLeafColumns().filter((col) => col.getCanHide()).length === 1\n\n    return (isVisibleLimitReached && !isColumnVisible) || (isSingleColumnVisible && isColumnVisible)\n  }\n\n  return (\n    <MenuButton\n      button={<Button mode=\"bleed\" text={t('sheet-list.edit-columns')} />}\n      id=\"columns-control\"\n      menu={\n        <Menu padding={3} paddingTop={4} style={{width: 240}}>\n          <Flex direction=\"column\" height=\"fill\" gap={3}>\n            <Text weight=\"semibold\" size={1}>\n              {t('sheet-list.select-fields')}\n            </Text>\n            <Flex style={{flex: '1 1 auto', maxHeight: 320, overflowY: 'scroll'}}>\n              <Stack>\n                {table\n                  .getAllLeafColumns()\n                  .filter((column) => column.getCanHide())\n                  .map((column) => (\n                    <Flex key={column.id} marginY={2} align=\"center\">\n                      <Checkbox\n                        readOnly={getColumnVisibilityDisabled(column)}\n                        checked={column.getIsVisible()}\n                        onChange={handleColumnOnChange(column)}\n                        id={`col-visibility-${column.id}`}\n                        style={{display: 'block'}}\n                      />\n                      <Box flex={1} paddingLeft={3}>\n                        <Text size={1}>\n                          <label htmlFor={`col-visibility-${column.id}`}>\n                            {column.columnDef.header?.toString()}\n                          </label>\n                        </Text>\n                      </Box>\n                    </Flex>\n                  ))}\n              </Stack>\n            </Flex>\n            <Button\n              width=\"fill\"\n              mode=\"ghost\"\n              text={t('sheet-list.reset-columns')}\n              onClick={setInitialColumns}\n            />\n          </Flex>\n        </Menu>\n      }\n      placement=\"bottom\"\n      popover={{portal: true}}\n    />\n  )\n}\n","import {Flex} from '@sanity/ui'\nimport {Filters, SearchHeader, useSearchState} from 'sanity'\nimport {styled} from 'styled-components'\n\nconst SearchContainer = styled(Flex)`\n  flex-shrink: 0;\n`\n\nexport function DocumentSheetListFilter() {\n  const {\n    state: {filtersVisible},\n  } = useSearchState()\n\n  return (\n    <SearchContainer>\n      <SearchHeader />\n      {filtersVisible && <Filters showTypeFilter={false} />}\n    </SearchContainer>\n  )\n}\n","'use no memo'\n// The `use no memo` directive is due to a known issue with react-table and react compiler: https://github.com/TanStack/table/issues/5567\n\nimport {CloseIcon, EllipsisHorizontalIcon} from '@sanity/icons'\nimport {type SanityDocument} from '@sanity/types'\nimport {Box, Flex, Menu, Text} from '@sanity/ui'\nimport {flexRender, type Header as HeaderType, type HeaderGroup} from '@tanstack/react-table'\nimport {useTranslation} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Button, MenuButton, MenuItem, Tooltip} from '../../../../ui-components'\n\nconst Header = styled.th<{width: number}>`\n  margin: 16px;\n  z-index: 1;\n  padding: 22px 0px;\n  border-top: 1px solid var(--card-border-color);\n  background-color: var(--card-badge-default-bg-color);\n  box-sizing: border-box;\n  text-align: left;\n  width: ${({width}) => width}px;\n  max-width: ${({width}) => width}px;\n`\n\nconst PinnedHeader = styled(Header)`\n  position: sticky;\n  z-index: 2;\n`\n\nconst HoverMenu = styled.div`\n  visibility: hidden;\n\n  ${Header}:hover & {\n    visibility: visible;\n  }\n`\n\ntype DocumentSheetListHeaderProps = {\n  header: HeaderType<SanityDocument, unknown>\n  headerGroup: HeaderGroup<SanityDocument>\n}\n\nexport function DocumentSheetListHeader(props: DocumentSheetListHeaderProps) {\n  const {header, headerGroup} = props\n  const {t} = useTranslation()\n\n  const isPinned = header.column.getIsPinned()\n\n  const headerTitle =\n    headerGroup.depth > 0 && !header.column.parent ? null : (\n      <Text size={1} weight=\"semibold\" textOverflow=\"ellipsis\">\n        {flexRender(header.column.columnDef.header, header.getContext())}\n      </Text>\n    )\n\n  const HeaderTag = isPinned ? PinnedHeader : Header\n\n  const canShowHeaderMenu =\n    header.column.getCanHide() &&\n    (headerGroup.depth === 0 ? !header.column.columns.length : header.column.parent)\n\n  const borderWidth = isPinned && header.column.getIsLastColumn('left') ? 2 : 1\n\n  return (\n    <HeaderTag\n      key={header.id}\n      style={{\n        left: header.column.getStart('left') ?? undefined,\n        borderRight: `${borderWidth}px solid var(--card-border-color)`,\n      }}\n      data-testid={`header-${header.id}`}\n      width={header.getSize()}\n    >\n      <Flex justify=\"space-between\" marginX={2} align=\"baseline\">\n        <Tooltip delay={500} content={headerTitle}>\n          <Box style={{boxSizing: 'border-box'}} marginLeft={3} marginRight={3}>\n            {headerTitle}\n          </Box>\n        </Tooltip>\n        {canShowHeaderMenu && (\n          <HoverMenu>\n            <MenuButton\n              button={\n                <Button\n                  tooltipProps={{content: 'Open field menu'}}\n                  mode=\"bleed\"\n                  icon={EllipsisHorizontalIcon}\n                  data-testid=\"field-menu-button\"\n                />\n              }\n              id=\"field menu\"\n              popover={{placement: 'bottom-end'}}\n              menu={\n                <Menu>\n                  <MenuItem\n                    text={t('sheet-list.hide-field')}\n                    icon={CloseIcon}\n                    onClick={() => header.column.toggleVisibility()}\n                  />\n                </Menu>\n              }\n            />\n          </HoverMenu>\n        )}\n      </Flex>\n    </HeaderTag>\n  )\n}\n","'use no memo'\n// The `use no memo` directive is due to a known issue with react-table and react compiler: https://github.com/TanStack/table/issues/5567\n\n/* eslint-disable i18next/no-literal-string */\n/* eslint-disable react/jsx-no-bind */\nimport {\n  ChevronLeftIcon,\n  ChevronRightIcon,\n  DoubleChevronLeftIcon,\n  DoubleChevronRightIcon,\n} from '@sanity/icons'\nimport {Flex, Text} from '@sanity/ui'\nimport {type Table} from '@tanstack/react-table'\nimport {type SanityDocument} from 'sanity'\n\nimport {Button, TooltipDelayGroupProvider} from '../../../../ui-components'\n\nexport function DocumentSheetListPaginator({table}: {table: Table<SanityDocument>}) {\n  return (\n    <TooltipDelayGroupProvider>\n      <Flex gap={3} align={'center'}>\n        <Button\n          onClick={() => table.setPageIndex(0)}\n          disabled={!table.getCanPreviousPage()}\n          icon={DoubleChevronLeftIcon}\n          tooltipProps={{\n            content: 'Go to first page',\n          }}\n        />\n        <Button\n          onClick={() => table.previousPage()}\n          disabled={!table.getCanPreviousPage()}\n          icon={ChevronLeftIcon}\n          tooltipProps={{\n            content: 'Go to previous page',\n          }}\n        />\n        <Text style={{whiteSpace: 'nowrap'}}>\n          {table.getState().pagination.pageIndex + 1} of {table.getPageCount()}\n        </Text>\n\n        <Button\n          onClick={() => table.nextPage()}\n          disabled={!table.getCanNextPage()}\n          icon={ChevronRightIcon}\n          tooltipProps={{\n            content: 'Go to next page',\n          }}\n        />\n        <Button\n          onClick={() => table.setPageIndex(table.getPageCount() - 1)}\n          disabled={!table.getCanNextPage()}\n          icon={DoubleChevronRightIcon}\n          tooltipProps={{\n            content: 'Go to last page',\n          }}\n        />\n        <select\n          value={table.getState().pagination.pageSize}\n          onChange={(e) => {\n            table.setPageSize(Number(e.target.value))\n          }}\n        >\n          {[25, 50, 100].map((pageSize) => (\n            <option key={pageSize} value={pageSize}>\n              {pageSize}\n            </option>\n          ))}\n        </select>\n      </Flex>\n    </TooltipDelayGroupProvider>\n  )\n}\n","import {type ListenEvent, type ListenOptions} from '@sanity/client'\nimport {useCallback, useEffect, useMemo, useReducer, useState} from 'react'\nimport {catchError, of} from 'rxjs'\nimport {DEFAULT_STUDIO_CLIENT_OPTIONS, getDraftId, type SanityDocument, useClient} from 'sanity'\n\ninterface DocumentDeletedAction {\n  id: string\n  type: 'DOCUMENT_DELETED'\n}\n\ninterface DocumentUpdatedAction {\n  payload: SanityDocument\n  type: 'DOCUMENT_UPDATED'\n}\n\ninterface DocumentsSetAction {\n  documents: SanityDocument[]\n  type: 'DOCUMENTS_SET'\n}\n\ninterface DocumentReceivedAction {\n  payload: SanityDocument\n  type: 'DOCUMENT_RECEIVED'\n}\n\nexport type DocumentsReducerAction =\n  | DocumentDeletedAction\n  | DocumentUpdatedAction\n  | DocumentsSetAction\n  | DocumentReceivedAction\n\nexport interface DocumentsReducerState {\n  documents: Record<string, SanityDocument>\n}\n\nfunction createDocumentsSet(documents: SanityDocument[]) {\n  const documentsById = documents.reduce((acc, doc) => ({...acc, [doc._id]: doc}), {})\n  return documentsById\n}\n\nfunction documentsReducer(\n  state: DocumentsReducerState,\n  action: DocumentsReducerAction,\n): DocumentsReducerState {\n  switch (action.type) {\n    case 'DOCUMENTS_SET': {\n      // Create an object with the documents id as key\n      const documents = createDocumentsSet(action.documents)\n\n      return {\n        ...state,\n        documents: documents,\n      }\n    }\n\n    case 'DOCUMENT_RECEIVED': {\n      const nextDocumentResult = action.payload as SanityDocument\n\n      return {\n        ...state,\n        documents: {\n          ...state.documents,\n          [nextDocumentResult._id]: nextDocumentResult,\n        },\n      }\n    }\n\n    case 'DOCUMENT_DELETED': {\n      const {[action.id]: _, ...restDocuments} = state.documents\n\n      return {\n        ...state,\n        documents: restDocuments,\n      }\n    }\n\n    case 'DOCUMENT_UPDATED': {\n      const updatedDocument = action.payload\n      const id = updatedDocument._id as string\n      const document = state.documents[id]\n\n      const nextDocument = {\n        // Add existing document data\n        ...document,\n        // Add incoming document data\n        ...updatedDocument,\n      } satisfies SanityDocument\n\n      return {\n        ...state,\n        documents: {\n          ...state.documents,\n          [id]: nextDocument,\n        },\n      }\n    }\n\n    default:\n      return state\n  }\n}\n\nconst LISTEN_OPTIONS: ListenOptions = {\n  events: ['welcome', 'mutation', 'reconnect'],\n  includeResult: true,\n  visibility: 'query',\n  includeAllVersions: true,\n  tag: 'document-sheet-list-store',\n}\n\n/**\n * TODO:\n * [] Lazy load more documents, reduce initial fetch.\n * [] Add support for sorting and filtering.\n * []  Make a projection of the query according to the schema. e.g. get only the primitive fields and the _id to reduce the data payload.\n */\nexport function useDocumentSheetListStore({\n  filter,\n  params,\n  apiVersion,\n}: {\n  filter: string\n  params?: Record<string, unknown>\n  apiVersion?: string\n}) {\n  const QUERY = `*[${filter}][0...2000]`\n  const client = useClient({\n    ...DEFAULT_STUDIO_CLIENT_OPTIONS,\n    apiVersion: apiVersion || DEFAULT_STUDIO_CLIENT_OPTIONS.apiVersion,\n  })\n  const [state, dispatch] = useReducer(documentsReducer, {\n    documents: {},\n  })\n  const [isLoading, setIsLoading] = useState<boolean>(client !== null)\n  const [error, setError] = useState<Error | null>(null)\n\n  const initialFetch = useCallback(async () => {\n    if (!client) {\n      setIsLoading(false)\n      return\n    }\n    try {\n      const res = await client.fetch(QUERY, params)\n      dispatch({type: 'DOCUMENTS_SET', documents: res})\n      setIsLoading(false)\n    } catch (err) {\n      setError(err)\n    }\n  }, [client, params, QUERY])\n\n  const handleListenerEvent = useCallback(\n    async (event: ListenEvent<Record<string, SanityDocument>>) => {\n      // Fetch all documents on initial connection\n      if (event.type === 'welcome') {\n        setIsLoading(true)\n        await initialFetch()\n        setIsLoading(false)\n      }\n\n      // The reconnect event means that we are trying to reconnect to the realtime listener.\n      // In this case we set loading to true to indicate that we're trying to\n      // reconnect. Once a connection has been established, the welcome event\n      // will be received and we'll fetch all documents again (above).\n      if (event.type === 'reconnect') {\n        setIsLoading(true)\n      }\n\n      // Handle mutations (create, update, delete) from the realtime listener\n      // and update the documents store accordingly\n      if (event.type === 'mutation') {\n        if (event.transition === 'appear') {\n          const nextDocument = event.result as SanityDocument | undefined\n\n          if (nextDocument) {\n            dispatch({\n              type: 'DOCUMENT_RECEIVED',\n              payload: nextDocument,\n            })\n          }\n        }\n\n        if (event.transition === 'disappear') {\n          dispatch({type: 'DOCUMENT_DELETED', id: event.documentId})\n        }\n\n        if (event.transition === 'update') {\n          const updatedDocument = event.result as SanityDocument | undefined\n\n          if (updatedDocument) {\n            dispatch({\n              type: 'DOCUMENT_UPDATED',\n              payload: updatedDocument,\n            })\n          }\n        }\n      }\n    },\n    [initialFetch],\n  )\n\n  const listener$ = useMemo(() => {\n    if (!client) return of()\n\n    const events$ = client.observable.listen(QUERY, params, LISTEN_OPTIONS).pipe(\n      catchError((err) => {\n        setError(err)\n        return of(err)\n      }),\n    )\n\n    return events$\n  }, [client, params, QUERY])\n\n  useEffect(() => {\n    const sub = listener$.subscribe(handleListenerEvent)\n\n    return () => {\n      sub?.unsubscribe()\n    }\n  }, [handleListenerEvent, listener$])\n\n  // Contemplate that we could have drafts and live documents here, merge them.\n  const dataAsArray = useMemo(() => {\n    // Joins the drafts and the live documents\n    const uniques = Object.keys(state.documents).reduce(\n      (acc: {[key: string]: SanityDocument}, key) => {\n        const document = state.documents[key]\n        const isDraft = document._id === getDraftId(document._id)\n        const id = isDraft ? document._id : getDraftId(document._id)\n        // If we already have the document, and this document is not the draft one, it means\n        // the draft hast already been added to the list, so we skip it.\n        if (acc[id] && !isDraft) {\n          return acc\n        }\n        acc[id] = document\n        return acc\n      },\n      {},\n    )\n    return Object.values(uniques)\n  }, [state.documents])\n\n  return {\n    data: dataAsArray,\n    isLoading,\n    error,\n  }\n}\n","import {useMemo} from 'react'\nimport {getPublishedId, useSearchState} from 'sanity'\n\nimport {useDocumentSheetListStore} from './useDocumentSheetListStore'\n\ninterface DocumentSheetListOptions {\n  /** The schemaType.name  */\n  typeName: string\n}\n\nexport function useDocumentSheetList({typeName}: DocumentSheetListOptions) {\n  const {state} = useSearchState()\n\n  const items = useMemo(() => {\n    const map = new Map()\n    state.result.hits.forEach((h) => map.set(getPublishedId(h.hit._id), h.hit))\n    return map\n  }, [state.result.hits])\n\n  // The store is listening to all the documents that match with the _type filter.\n  const {data, isLoading} = useDocumentSheetListStore({\n    filter: `_type == \"${typeName}\"`,\n  })\n\n  // Only return the documents that match with the serverSide filter items.\n  const documents = useMemo(() => {\n    return data.filter((doc) => items.has(getPublishedId(doc._id)))\n  }, [data, items])\n\n  return {data: documents, isLoading}\n}\n","'use no memo'\n// The `use no memo` directive is due to a known issue with react-table and react compiler: https://github.com/TanStack/table/issues/5567\n\nimport {isDocumentSchemaType, type ObjectSchemaType, type SanityDocument} from '@sanity/types'\nimport {Box, Flex, Text} from '@sanity/ui'\nimport {\n  getCoreRowModel,\n  getFilteredRowModel,\n  getPaginationRowModel,\n  type Row,\n  useReactTable,\n} from '@tanstack/react-table'\nimport {useCallback, useEffect, useState} from 'react'\nimport {SearchProvider, useSchema, useSearchState} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {type BaseStructureToolPaneProps} from '../../types'\nimport {ColumnsControl} from './ColumnsControl'\nimport {DocumentSheetListFilter} from './DocumentSheetListFilter'\nimport {DocumentSheetListHeader} from './DocumentSheetListHeader'\nimport {DocumentSheetListPaginator} from './DocumentSheetListPaginator'\nimport {DocumentSheetListProvider} from './DocumentSheetListProvider'\nimport {SheetListCell} from './SheetListCell'\nimport {useDocumentSheetColumns} from './useDocumentSheetColumns'\nimport {useDocumentSheetList} from './useDocumentSheetList'\n\ntype DocumentSheetListPaneProps = BaseStructureToolPaneProps<'documentList'>\n\nconst PaneContainer = styled(Flex)`\n  height: 100%;\n`\nconst TableContainer = styled.div`\n  overflow: auto; //our scrollable table container\n  position: relative; //needed for sticky header\n`\nconst Table = styled.table`\n  border-collapse: separate;\n  border-spacing: 0;\n  font-family: arial, sans-serif;\n  white-space: nowrap;\n  width: 100%;\n  border: 1px solid lightgray;\n\n  thead {\n    display: grid;\n    position: sticky;\n    top: 0;\n    z-index: 10;\n  }\n  tr {\n    padding: 0;\n  }\n  tr:last-child {\n    border-bottom: none;\n  }\n`\n\nfunction DocumentSheetListPaneInner({\n  documentSchemaType,\n}: DocumentSheetListPaneProps & {documentSchemaType: ObjectSchemaType}) {\n  const {dispatch, state} = useSearchState()\n  const {columns, initialColumnsVisibility} = useDocumentSheetColumns(documentSchemaType)\n  const {data} = useDocumentSheetList({\n    typeName: documentSchemaType.name,\n  })\n  const [selectedAnchor, setSelectedAnchor] = useState<number | null>(null)\n\n  const totalRows = state.result.hits.length\n  const table = useReactTable({\n    data,\n    columns,\n    getCoreRowModel: getCoreRowModel(),\n    getFilteredRowModel: getFilteredRowModel(),\n    getPaginationRowModel: getPaginationRowModel(),\n    // Avoids resetting the page index when the data changes, e.g. a mutation is received\n    autoResetPageIndex: false,\n    initialState: {\n      columnPinning: {left: ['selected', 'Preview']},\n      pagination: {pageSize: 25},\n      columnVisibility: initialColumnsVisibility,\n    },\n    getRowId: (row) => row._id,\n    meta: {\n      selectedAnchor,\n      setSelectedAnchor,\n      patchDocument: (documentId, fieldId, value) => null,\n    },\n  })\n\n  const {rows} = table.getRowModel()\n\n  useEffect(() => {\n    dispatch({type: 'TERMS_TYPE_ADD', schemaType: documentSchemaType})\n    return () => {\n      dispatch({type: 'TERMS_TYPE_REMOVE', schemaType: documentSchemaType})\n    }\n  }, [documentSchemaType, dispatch])\n\n  const renderRow = useCallback((row: Row<SanityDocument>) => {\n    return (\n      <Box\n        key={row.original._id + row.id}\n        as=\"tr\"\n        paddingY={2}\n        style={{display: 'flex', width: '100%'}}\n      >\n        {row.getVisibleCells().map((cell) => (\n          <SheetListCell key={row.original._id + cell.id} {...cell} />\n        ))}\n      </Box>\n    )\n  }, [])\n\n  const rowsCount = `Total: ${totalRows} rows, showing ${rows.length} rows`\n  return (\n    <PaneContainer direction=\"column\" paddingX={3} data-testid=\"document-sheet-list-pane\">\n      <Flex direction=\"row\" align=\"center\" paddingY={3} paddingX={1} justify=\"space-between\">\n        <Flex direction=\"row\" align=\"center\">\n          <DocumentSheetListFilter />\n          <Text size={0} muted>\n            {rowsCount}\n          </Text>\n        </Flex>\n        <ColumnsControl table={table} />\n      </Flex>\n      <TableContainer>\n        <DocumentSheetListProvider table={table}>\n          <Table>\n            <thead>\n              {table.getHeaderGroups().map((headerGroup) => (\n                <Box key={headerGroup.id} as=\"tr\">\n                  {headerGroup.headers.map((header) => (\n                    <DocumentSheetListHeader\n                      key={header.id}\n                      header={header}\n                      headerGroup={headerGroup}\n                    />\n                  ))}\n                </Box>\n              ))}\n            </thead>\n            <tbody>{table.getRowModel().rows.map(renderRow)}</tbody>\n          </Table>\n        </DocumentSheetListProvider>\n      </TableContainer>\n      <Flex justify={'flex-end'} padding={3} gap={4} paddingY={5}>\n        <DocumentSheetListPaginator table={table} />\n      </Flex>\n    </PaneContainer>\n  )\n}\n\nexport function DocumentSheetListPane(props: DocumentSheetListPaneProps) {\n  const schema = useSchema()\n  const typeName = props.pane.schemaTypeName\n\n  const schemaType = schema.get(typeName)\n  if (!schemaType || !isDocumentSchemaType(schemaType)) {\n    throw new Error(`Schema type \"${typeName}\" not found or not a document schema`)\n  }\n  return (\n    <SearchProvider>\n      <DocumentSheetListPaneInner {...props} documentSchemaType={schemaType} />\n    </SearchProvider>\n  )\n}\n","import {Card, Code} from '@sanity/ui'\nimport {isEqual} from 'lodash'\nimport {memo, useMemo, useState} from 'react'\nimport {\n  EMPTY_ARRAY,\n  type GeneralDocumentListLayoutKey,\n  SourceProvider,\n  useI18nText,\n  useSource,\n} from 'sanity'\nimport shallowEquals from 'shallow-equals'\n\nimport {Pane} from '../../components/pane'\nimport {_DEBUG} from '../../constants'\nimport {type PaneMenuItem} from '../../types'\nimport {useStructureToolSetting} from '../../useStructureToolSetting'\nimport {type BaseStructureToolPaneProps} from '../types'\nimport {DEFAULT_ORDERING, EMPTY_RECORD} from './constants'\nimport {DocumentListPane} from './DocumentListPane'\nimport {findStaticTypesInFilter} from './helpers'\nimport {PaneHeader} from './PaneHeader'\nimport {DocumentSheetListPane} from './sheetList/DocumentSheetListPane'\nimport {type SortOrder} from './types'\n\nconst addSelectedStateToMenuItems = (options: {\n  menuItems?: PaneMenuItem[]\n  sortOrderRaw?: SortOrder\n  layout?: GeneralDocumentListLayoutKey\n}) => {\n  const {menuItems, sortOrderRaw, layout} = options\n\n  return menuItems?.map((item) => {\n    if (item.params?.layout) {\n      return {\n        ...item,\n        selected: layout === item.params?.layout,\n      }\n    }\n\n    if (item?.params?.by) {\n      return {\n        ...item,\n        selected: isEqual(sortOrderRaw?.by, item?.params?.by || EMPTY_ARRAY),\n      }\n    }\n\n    return {...item, selected: false}\n  })\n}\n\nexport function useShallowUnique<ValueType>(value: ValueType): ValueType {\n  const [previous, setPrevious] = useState<ValueType>(value)\n  if (!shallowEquals(previous, value)) {\n    setPrevious(value)\n    return value\n  }\n  return previous\n}\n\n/**\n * @internal\n */\nexport const PaneContainer = memo(function PaneContainer(\n  props: BaseStructureToolPaneProps<'documentList'>,\n) {\n  const {index, isSelected, pane, paneKey} = props\n  const {name: parentSourceName} = useSource()\n\n  const {\n    defaultLayout = 'default',\n    initialValueTemplates = EMPTY_ARRAY,\n    menuItemGroups,\n    menuItems,\n    options,\n  } = pane\n  const {defaultOrdering = EMPTY_ARRAY, filter} = options\n  const params = useShallowUnique(options.params || EMPTY_RECORD)\n  const sourceName = pane.source\n  const typeName = useMemo(() => {\n    const staticTypes = findStaticTypesInFilter(filter, params)\n    if (staticTypes?.length === 1) return staticTypes[0]\n    return null\n  }, [filter, params])\n\n  const [layout, setLayout] = useStructureToolSetting<GeneralDocumentListLayoutKey>(\n    'layout',\n    typeName ?? pane.id, //pane.id for anything that is not documentTypeList\n    defaultLayout,\n  )\n\n  const {title} = useI18nText(pane)\n\n  // Ensure that we use the defaultOrdering value from structure builder if any as the default\n  const defaultSortOrder = useMemo(() => {\n    return defaultOrdering?.length > 0 ? {by: defaultOrdering} : DEFAULT_ORDERING\n  }, [defaultOrdering])\n\n  const [sortOrderRaw, setSortOrder] = useStructureToolSetting<SortOrder>(\n    'sort-order',\n    typeName ?? pane.id, //pane.id for anything that is not documentTypeList\n    defaultSortOrder,\n  )\n\n  const menuItemsWithSelectedState = useMemo(\n    () =>\n      addSelectedStateToMenuItems({\n        menuItems,\n        sortOrderRaw,\n        layout,\n      }),\n    [layout, menuItems, sortOrderRaw],\n  )\n\n  const isSheetListLayout = layout === 'sheetList'\n  const paneLayout = isSheetListLayout ? (\n    <DocumentSheetListPane key={props.pane.id} {...props} />\n  ) : (\n    <DocumentListPane {...props} sortOrder={sortOrderRaw} layout={layout} />\n  )\n\n  return (\n    <SourceProvider name={sourceName || parentSourceName}>\n      <Pane\n        data-ui=\"DocumentListPane\"\n        id={paneKey}\n        minWidth={320}\n        {...(isSheetListLayout ? {} : {currentMaxWidth: 350, maxWidth: 640})}\n        selected={isSelected}\n      >\n        {_DEBUG && (\n          <Card padding={4} tone=\"transparent\">\n            <Code>{pane.source || '(none)'}</Code>\n          </Card>\n        )}\n\n        <PaneHeader\n          index={index}\n          initialValueTemplates={initialValueTemplates}\n          menuItemGroups={menuItemGroups}\n          menuItems={menuItemsWithSelectedState}\n          setLayout={setLayout}\n          setSortOrder={setSortOrder}\n          title={title}\n        />\n        {paneLayout}\n      </Pane>\n    </SourceProvider>\n  )\n})\nPaneContainer.displayName = 'Memo(PaneContainer)'\n","import {type DocumentBadgeComponent} from 'sanity'\n\n/** @internal */\nexport const LiveEditBadge: DocumentBadgeComponent = (props) => {\n  const {liveEditSchemaType, version} = props\n\n  if (liveEditSchemaType && !version) {\n    return {\n      label: 'Live',\n      color: 'danger',\n    }\n  }\n\n  return null\n}\nLiveEditBadge.displayName = 'LiveEditBadge'\n","import {uuid} from '@sanity/uuid'\n\nimport {EMPTY_PARAMS, type LOADING_PANE} from './constants'\nimport {type PaneNode, type RouterPanes} from './types'\n\nconst state: {\n  activePanes: Array<PaneNode | typeof LOADING_PANE>\n} = {activePanes: []}\n\nexport function setActivePanes(panes: Array<PaneNode | typeof LOADING_PANE>): void {\n  state.activePanes = panes\n}\n\n/**\n * This function looks at the _active panes_ to resolve an intent. this type of\n * intent resolution is faster and does not cause the panes to reset\n *\n * @internal\n */\nexport function getIntentState(\n  intent: string,\n  params: Record<string, string>,\n  routerState: {panes?: RouterPanes} | undefined,\n  payload: unknown,\n): {panes: RouterPanes} | {intent: string; params: Record<string, string>; payload: unknown} {\n  const panes = routerState?.panes || []\n  const activePanes = state.activePanes || []\n  const editDocumentId = params.id || uuid()\n\n  // Loop through open panes and see if any of them can handle the intent\n  for (let i = activePanes.length - 1; i >= 0; i--) {\n    const pane = activePanes[i]\n\n    if (typeof pane !== 'object') continue\n\n    // NOTE: if you update this logic, please also update the similar handler in\n    // `resolveIntent.ts`\n    if (\n      pane.canHandleIntent?.(intent, params, {\n        pane,\n        index: i,\n      }) ||\n      // see `resolveIntent.ts` for more info\n      (pane.type === 'documentList' &&\n        pane.schemaTypeName === params.type &&\n        pane.options.filter === '_type == $type')\n    ) {\n      const paneParams = getPaneParams(intent, params)\n\n      return {\n        panes: panes\n          .slice(0, i)\n          .concat([[{id: editDocumentId, params: paneParams, payload}]]) as RouterPanes,\n      }\n    }\n  }\n\n  return {intent: intent, params, payload}\n}\n\nfunction getPaneParams(\n  intent: string,\n  {template, version}: Record<string, string>,\n): {template?: string; version?: string} {\n  if (intent !== 'create') return EMPTY_PARAMS\n  if (template && version) return {template, version}\n  if (template) return {template}\n  if (version) return {version}\n  return EMPTY_PARAMS\n}\n","import {type ObjectDiff} from '@sanity/diff'\nimport {BoundaryElementProvider, Box, Card, Flex, Text} from '@sanity/ui'\nimport {useMemo, useState} from 'react'\nimport {\n  ChangeFieldWrapper,\n  ChangeList,\n  type DocumentChangeContextInstance,\n  LoadingBlock,\n  NoChanges,\n  type ObjectSchemaType,\n  ScrollContainer,\n  usePerspective,\n  useTimelineSelector,\n  useTranslation,\n} from 'sanity'\nimport {DocumentChangeContext} from 'sanity/_singletons'\nimport {styled} from 'styled-components'\n\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {TimelineMenu} from '../../timeline'\nimport {TimelineError} from '../../timeline/TimelineError'\nimport {useDocumentPane} from '../../useDocumentPane'\n\nconst Scroller = styled(ScrollContainer)`\n  height: 100%;\n  overflow: auto;\n  position: relative;\n  scroll-behavior: smooth;\n`\n\nconst Grid = styled(Box)`\n  &:not([hidden]) {\n    display: grid;\n  }\n  grid-template-columns: 48px 1fr;\n  align-items: center;\n  gap: 0.25em;\n`\n\nexport function ChangesInspector({showChanges}: {showChanges: boolean}): React.JSX.Element {\n  const {documentId, schemaType, timelineError, timelineStore, value} = useDocumentPane()\n  const {selectedReleaseId} = usePerspective()\n\n  const [scrollRef, setScrollRef] = useState<HTMLDivElement | null>(null)\n\n  const rev = useTimelineSelector(timelineStore, (state) => state.revTime)\n  const diff = useTimelineSelector(timelineStore, (state) => state.diff)\n  const onOlderRevision = useTimelineSelector(timelineStore, (state) => state.onOlderRevision)\n  const selectionState = useTimelineSelector(timelineStore, (state) => state.selectionState)\n  const sinceTime = useTimelineSelector(timelineStore, (state) => state.sinceTime)\n  const loading = selectionState === 'loading'\n  const isComparingCurrent = !onOlderRevision\n\n  // Note that we are using the studio core namespace here, as changes theoretically should\n  // be part of Sanity core (needs to be moved from structure at some point)\n  const {t: structureT} = useTranslation(structureLocaleNamespace)\n\n  const documentContext: DocumentChangeContextInstance = useMemo(\n    () => ({\n      documentId,\n      schemaType,\n      FieldWrapper: (props) => <ChangeFieldWrapper {...props} hasRevertHover={false} />,\n      rootDiff: diff,\n      isComparingCurrent,\n      value,\n      showFromValue: true,\n    }),\n    [documentId, diff, isComparingCurrent, schemaType, value],\n  )\n\n  if (selectedReleaseId) {\n    return (\n      <Flex data-testid=\"review-changes-pane\" direction=\"column\" height=\"fill\">\n        <Card flex={1} padding={2} paddingTop={0}>\n          <TimelineError versionError />\n        </Card>\n      </Flex>\n    )\n  }\n\n  return (\n    <Flex data-testid=\"review-changes-pane\" direction=\"column\" height=\"fill\" overflow=\"hidden\">\n      <Box padding={3}>\n        <Grid paddingX={2} paddingBottom={2}>\n          <Text size={1} muted>\n            {structureT('changes.from.label')}\n          </Text>\n\n          <TimelineMenu mode=\"since\" chunk={sinceTime} placement=\"bottom-start\" />\n          <Text size={1} muted>\n            {structureT('changes.to.label')}\n          </Text>\n          <TimelineMenu chunk={rev} mode=\"rev\" placement=\"bottom-end\" />\n        </Grid>\n      </Box>\n\n      <Card flex={1} paddingX={2} paddingY={2}>\n        <BoundaryElementProvider element={scrollRef}>\n          <Scroller data-ui=\"Scroller\" ref={setScrollRef}>\n            <Box flex={1} paddingX={3} height=\"fill\">\n              {showChanges && (\n                <Content\n                  diff={diff}\n                  documentContext={documentContext}\n                  error={timelineError}\n                  loading={loading}\n                  schemaType={schemaType}\n                />\n              )}\n            </Box>\n          </Scroller>\n        </BoundaryElementProvider>\n      </Card>\n    </Flex>\n  )\n}\n\nfunction Content({\n  error,\n  diff,\n  documentContext,\n  loading,\n  schemaType,\n}: {\n  error?: Error | null\n  diff: ObjectDiff<any> | null\n  documentContext: DocumentChangeContextInstance\n  loading: boolean\n  schemaType: ObjectSchemaType\n}) {\n  if (error) {\n    return <NoChanges />\n  }\n\n  if (loading) {\n    return <LoadingBlock showText />\n  }\n\n  if (!diff) {\n    return <NoChanges />\n  }\n\n  return (\n    <DocumentChangeContext.Provider value={documentContext}>\n      <ChangeList diff={diff} schemaType={schemaType} />\n    </DocumentChangeContext.Provider>\n  )\n}\n","import {Card, Flex} from '@sanity/ui'\nimport {type MouseEvent, useCallback} from 'react'\nimport {\n  type DocumentGroupEvent,\n  Event,\n  isDeleteDocumentGroupEvent,\n  isDeleteDocumentVersionEvent,\n  isScheduleDocumentVersionEvent,\n  isUnpublishDocumentEvent,\n  isUnscheduleDocumentVersionEvent,\n  useTranslation,\n} from 'sanity'\n\nimport {Tooltip} from '../../../../../ui-components'\n\nexport interface TimelineItemProps {\n  event: DocumentGroupEvent\n  isSelected: boolean\n  onSelect: (chunk: DocumentGroupEvent) => void\n  optionsMenu?: React.ReactNode\n}\n\nconst getIsSelectable = (event: DocumentGroupEvent) => {\n  return (\n    !isDeleteDocumentVersionEvent(event) &&\n    !isDeleteDocumentGroupEvent(event) &&\n    !isUnpublishDocumentEvent(event) &&\n    !isScheduleDocumentVersionEvent(event) &&\n    !isUnscheduleDocumentVersionEvent(event)\n  )\n}\n\nexport function EventTimelineItem({event, isSelected, onSelect, optionsMenu}: TimelineItemProps) {\n  const {t} = useTranslation('studio')\n  const isSelectable = getIsSelectable(event)\n  const handleClick = useCallback(\n    (evt: MouseEvent<HTMLDivElement>) => {\n      evt.preventDefault()\n      evt.stopPropagation()\n\n      if (isSelectable) {\n        onSelect(event)\n      }\n    },\n    [onSelect, event, isSelectable],\n  )\n  return (\n    <Flex gap={1}>\n      <Tooltip content={isSelectable ? '' : t('changes.not-selectable')} disabled={isSelectable}>\n        <Card\n          as={isSelectable ? 'button' : 'div'}\n          onClick={handleClick}\n          padding={2}\n          pressed={isSelected}\n          radius={2}\n          data-ui=\"timelineItem\"\n          data-testid=\"timeline-item-button\"\n          data-chunk-timestamp={event.timestamp}\n          style={{\n            cursor: isSelectable ? 'pointer' : 'default',\n            width: '100%',\n          }}\n        >\n          <Event event={event} showChangesBy=\"tooltip\" />\n        </Card>\n      </Tooltip>\n      {optionsMenu}\n    </Flex>\n  )\n}\n","import {\n  Flex,\n  Menu,\n  // eslint-disable-next-line no-restricted-imports\n  MenuItem,\n  Text,\n  usePortal,\n} from '@sanity/ui'\nimport {useCallback} from 'react'\nimport {\n  ContextMenuButton,\n  getReleaseIdFromReleaseDocumentId,\n  getReleaseTone,\n  getVersionFromId,\n  isReleaseDocument,\n  type PublishDocumentVersionEvent,\n  RELEASES_INTENT,\n  Translate,\n  useSetPerspective,\n  useTranslation,\n  VersionInlineBadge,\n} from 'sanity'\nimport {IntentLink} from 'sanity/router'\n\nimport {MenuButton} from '../../../../../ui-components'\nimport {usePaneRouter} from '../../../../components/paneRouter/usePaneRouter'\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {TIMELINE_MENU_PORTAL} from '../timelineMenu'\n\nexport function PublishedEventMenu({event}: {event: PublishDocumentVersionEvent}) {\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {t: tCore} = useTranslation()\n  const portalContext = usePortal()\n  const {params, setParams} = usePaneRouter()\n  const setPerspective = useSetPerspective()\n\n  const handleOpenReleaseDocument = useCallback(() => {\n    setParams({\n      ...params,\n      rev: event.versionRevisionId || '@lastPublished',\n      since: undefined,\n      historyEvent: event.id,\n      historyVersion: getVersionFromId(event.versionId),\n    })\n  }, [setParams, params, event])\n\n  const handleOpenDraftDocument = useCallback(() => {\n    setParams({\n      ...params,\n      rev: event.versionRevisionId,\n      preserveRev: 'true',\n      since: undefined,\n    })\n    setTimeout(() => {\n      // A bug is generated when we change the perspective and the params at the same time\n      // Resetting the params to the value it had before, because the paneRouter uses the previous value\n      setPerspective('drafts')\n    }, 100)\n  }, [setParams, params, event.versionRevisionId, setPerspective])\n\n  const VersionBadge = ({children}: {children: React.ReactNode}) => {\n    return (\n      <VersionInlineBadge\n        $tone={\n          event.release\n            ? isReleaseDocument(event.release)\n              ? getReleaseTone(event.release)\n              : 'default'\n            : undefined\n        }\n      >\n        {children}\n      </VersionInlineBadge>\n    )\n  }\n  const isMenuDisabled = event.release && !isReleaseDocument(event.release)\n  return (\n    <MenuButton\n      id={`timeline-item-menu-button-${event.versionId}`}\n      button={\n        <ContextMenuButton\n          aria-label={t('timeline-item.menu-button.aria-label')}\n          tooltipProps={{\n            content: isMenuDisabled\n              ? t('timeline-item.not-found-release.tooltip', {\n                  releaseId: event.release?._id\n                    ? getReleaseIdFromReleaseDocumentId(event.release._id)\n                    : undefined,\n                })\n              : t('timeline-item.menu-button.tooltip'),\n          }}\n          disabled={isMenuDisabled}\n        />\n      }\n      menu={\n        <Menu padding={1}>\n          {event.release ? (\n            <>\n              <IntentLink\n                intent={RELEASES_INTENT}\n                params={{id: getReleaseIdFromReleaseDocumentId(event.release._id)}}\n                style={{textDecoration: 'none'}}\n              >\n                <MenuItem padding={3}>\n                  <Flex align={'center'} justify=\"flex-start\">\n                    <Text size={1} style={{textDecoration: 'none'}}>\n                      <Translate\n                        components={{\n                          VersionBadge: ({children}) => <VersionBadge>{children}</VersionBadge>,\n                        }}\n                        i18nKey=\"events.open.release\"\n                        values={{\n                          releaseTitle:\n                            event.release.metadata?.title ||\n                            tCore('release.placeholder-untitled-release'),\n                        }}\n                        t={t}\n                      />\n                    </Text>\n                  </Flex>\n                </MenuItem>\n              </IntentLink>\n              <MenuItem onClick={handleOpenReleaseDocument}>\n                <Flex align={'center'} justify=\"flex-start\">\n                  <Text size={1}>\n                    <Translate\n                      components={{\n                        VersionBadge: ({children}) => <VersionBadge>{children}</VersionBadge>,\n                      }}\n                      i18nKey=\"events.inspect.release\"\n                      values={{\n                        releaseTitle:\n                          event.release.metadata?.title ||\n                          tCore('release.placeholder-untitled-release'),\n                      }}\n                      t={t}\n                    />\n                  </Text>\n                </Flex>\n              </MenuItem>\n            </>\n          ) : (\n            <MenuItem onClick={handleOpenDraftDocument} disabled={!event.versionRevisionId}>\n              <Flex align={'center'}>\n                <Text size={1}>\n                  <Translate\n                    components={{\n                      VersionBadge: ({children}) => (\n                        <VersionInlineBadge $tone=\"caution\">{children}</VersionInlineBadge>\n                      ),\n                    }}\n                    i18nKey=\"events.open.draft\"\n                    t={t}\n                  />\n                </Text>\n              </Flex>\n            </MenuItem>\n          )}\n        </Menu>\n      }\n      popover={{\n        // when used inside the timeline menu we want to keep the element inside the popover, to avoid closing the popover when clicking expand.\n        portal: portalContext.elements?.[TIMELINE_MENU_PORTAL] ? TIMELINE_MENU_PORTAL : true,\n        placement: 'bottom',\n        fallbackPlacements: ['bottom-end', 'bottom-start'],\n      }}\n    />\n  )\n}\n","import {Box, Flex, Spinner, Stack, Text} from '@sanity/ui'\nimport {motion, type Variants} from 'framer-motion'\nimport {useCallback, useEffect, useMemo, useState} from 'react'\nimport {\n  CommandList,\n  type CommandListRenderItemCallback,\n  type DocumentGroupEvent,\n  getDocumentVariantType,\n  isCreateDocumentVersionEvent,\n  isDeleteDocumentVersionEvent,\n  isEditDocumentVersionEvent,\n  isPublishDocumentVersionEvent,\n  LoadingBlock,\n  useTranslation,\n} from 'sanity'\n\nimport {ExpandableTimelineItemButton} from '../expandableTimelineItemButton'\nimport {ListWrapper, Root} from '../timeline.styled'\nimport {EventTimelineItem} from './EventTimelineItem'\nimport {PublishedEventMenu} from './PublishedEventMenu'\n\ninterface TimelineProps {\n  events: DocumentGroupEvent[]\n  hasMoreEvents: boolean | null\n  selectedEventId?: string\n  onLoadMore: () => void\n  onSelect: (event: DocumentGroupEvent) => void\n  fetchEventChildren: (event: DocumentGroupEvent) => Promise<void>\n  /**\n   * The list needs a predefined max height for the scroller to work.\n   */\n  listMaxHeight?: string\n}\n\nconst TimelineItemWrapper = motion.create(Box)\nconst CHILDREN_ITEMS_VARIANTS: Variants = {\n  initial: {\n    opacity: 0,\n  },\n  animate: {\n    opacity: 1,\n  },\n  exit: {\n    opacity: 0,\n  },\n}\n\nconst ITEM_HEIGHT = 57\n\nexport const TIMELINE_LIST_WRAPPER_ID = 'timeline-list-wrapper'\n\nexport const EventsTimeline = ({\n  events: allEvents,\n  hasMoreEvents,\n  selectedEventId,\n  onLoadMore,\n  onSelect,\n  listMaxHeight = 'calc(100vh - 280px)',\n  fetchEventChildren,\n}: TimelineProps) => {\n  const [mounted, setMounted] = useState(false)\n  const {t} = useTranslation('studio')\n  const [expandedParents, setExpandedParents] = useState<Set<string>>(() => {\n    if (selectedEventId) {\n      // Find that event and if it has a parent, expand the parent.\n      const selectedEvent = allEvents.find((event) => event.id === selectedEventId)\n      if (selectedEvent && 'parentId' in selectedEvent && selectedEvent.parentId) {\n        return new Set([selectedEvent.parentId])\n      }\n    }\n    return new Set()\n  })\n  const [expandingParents, setExpandingParents] = useState<Set<string>>(new Set())\n\n  const events = useMemo(() => {\n    return allEvents.filter((event) => {\n      if (isCreateDocumentVersionEvent(event) && event.parentId) {\n        // Check if it's the last event in the list, in that case, we want to show it\n        const isLastEvent = allEvents[allEvents.length - 1].id === event.id\n        if (isLastEvent) return true\n        return expandedParents.has(event.parentId)\n      }\n      if (isEditDocumentVersionEvent(event) && event.parentId) {\n        return expandedParents.has(event.parentId)\n      }\n      return true\n    })\n  }, [expandedParents, allEvents])\n\n  const handleExpandParent = useCallback(\n    (event: DocumentGroupEvent) => async () => {\n      const parentId = event.id\n\n      let isExpanding = false\n      setExpandedParents((prev) => {\n        const next = new Set(prev)\n\n        if (prev.has(parentId)) next.delete(parentId)\n        else {\n          isExpanding = true\n          next.add(parentId)\n        }\n\n        return next\n      })\n      if (isExpanding) {\n        setExpandingParents((prev) => {\n          const next = new Set(prev)\n          next.add(parentId)\n          return next\n        })\n        await fetchEventChildren(event)\n        setExpandingParents((prev) => {\n          const next = new Set(prev)\n          next.delete(parentId)\n          return next\n        })\n      }\n    },\n    [fetchEventChildren, setExpandingParents],\n  )\n\n  const handleSelectChunk = useCallback(\n    (event: DocumentGroupEvent) => {\n      onSelect(event)\n    },\n    [onSelect],\n  )\n\n  const renderOptionsMenu = useCallback(\n    (event: DocumentGroupEvent) => {\n      const documentVariantType = getDocumentVariantType(event.documentId)\n      if (isPublishDocumentVersionEvent(event) && documentVariantType === 'published') {\n        return <PublishedEventMenu event={event} />\n      }\n      if (\n        (isPublishDocumentVersionEvent(event) &&\n          documentVariantType === 'draft' &&\n          event.creationEvent) ||\n        (isDeleteDocumentVersionEvent(event) && event.creationEvent)\n      ) {\n        return (\n          <ExpandableTimelineItemButton\n            isExpanded={expandedParents.has(event.id)}\n            onExpand={handleExpandParent(event)}\n          />\n        )\n      }\n      return null\n    },\n    [expandedParents, handleExpandParent],\n  )\n\n  const renderItem = useCallback<CommandListRenderItemCallback<DocumentGroupEvent[][number]>>(\n    (event, {activeIndex}) => {\n      /**\n       * The create version event will be present while expanding (loading the edits), so we are attaching to it the loading block at the top.\n       * - publishEvent (expanding?)\n       * --- loadingBlock  ~createEvent~\n       * */\n      const showExpandingLoader =\n        isCreateDocumentVersionEvent(event) &&\n        event.parentId &&\n        expandingParents.has(event.parentId)\n\n      const isLastEvent = activeIndex === events.length - 1\n      if (showExpandingLoader) {\n        return (\n          <TimelineItemWrapper\n            animate={{opacity: 1}}\n            initial={{opacity: 0}}\n            transition={{duration: 0.2, delay: 0.2}}\n          >\n            {/* We need this item to match the same height as the rest of the list items, which is 57px */}\n            <Flex align=\"center\" justify=\"center\" style={{height: ITEM_HEIGHT}}>\n              <Spinner />\n            </Flex>\n          </TimelineItemWrapper>\n        )\n      }\n      return (\n        <TimelineItemWrapper\n          key={event.timestamp}\n          paddingBottom={1}\n          paddingRight={1}\n          animate=\"animate\"\n          exit=\"exit\"\n          initial=\"initial\"\n          variants={'parentId' in event ? CHILDREN_ITEMS_VARIANTS : undefined}\n          paddingLeft={\n            (isEditDocumentVersionEvent(event) || isCreateDocumentVersionEvent(event)) &&\n            event.parentId &&\n            !isLastEvent\n              ? 4\n              : 1\n          }\n        >\n          <EventTimelineItem\n            event={event}\n            isSelected={event.id === selectedEventId}\n            onSelect={handleSelectChunk}\n            optionsMenu={renderOptionsMenu(event)}\n          />\n\n          {isLastEvent && hasMoreEvents && <LoadingBlock />}\n        </TimelineItemWrapper>\n      )\n    },\n    [\n      expandingParents,\n      selectedEventId,\n      handleSelectChunk,\n      renderOptionsMenu,\n      events.length,\n      hasMoreEvents,\n    ],\n  )\n\n  useEffect(() => setMounted(true), [])\n  const selectedIndex = events.findIndex((event) => event.id === selectedEventId)\n\n  return (\n    <Root\n      /**\n       * We delay initial rendering if `selectedIndex` is present.\n       * This is a _temporary_ workaround to allow the virtual <CommandList>\n       * to scroll to a specific index prior to being displayed.\n       *\n       * Without this, there'll be a noticeable 'flash' where the virtual list\n       * will render with its child items at the top and then scroll into position.\n       */\n      $visible={!selectedIndex || mounted}\n      data-ui=\"timeline\"\n    >\n      {events.length > 0 ? (\n        <ListWrapper direction=\"column\" $maxHeight={listMaxHeight} id={TIMELINE_LIST_WRAPPER_ID}>\n          <CommandList\n            activeItemDataAttr=\"data-hovered\"\n            ariaLabel={t('timeline.list.aria-label')}\n            autoFocus=\"list\"\n            initialIndex={selectedIndex}\n            initialScrollAlign=\"center\"\n            itemHeight={ITEM_HEIGHT}\n            items={events}\n            onEndReached={onLoadMore}\n            onEndReachedIndexOffset={20}\n            overscan={5}\n            renderItem={renderItem}\n            wrapAround={false}\n          />\n        </ListWrapper>\n      ) : (\n        <Stack padding={3} space={3}>\n          <Text size={1} weight=\"medium\">\n            {t('timeline.error.no-document-history-title')}\n          </Text>\n          <Text muted size={1}>\n            {t('timeline.error.no-document-history-description')}\n          </Text>\n        </Stack>\n      )}\n    </Root>\n  )\n}\n\nEventsTimeline.displayName = 'EventsTimeline'\n","import {ChevronDownIcon} from '@sanity/icons'\nimport {\n  Flex,\n  type Placement,\n  PortalProvider,\n  useClickOutsideEvent,\n  useGlobalKeyDown,\n  useToast,\n} from '@sanity/ui'\nimport {useCallback, useMemo, useState} from 'react'\nimport {\n  type DocumentGroupEvent,\n  isDeleteDocumentGroupEvent,\n  isDeleteDocumentVersionEvent,\n  isScheduleDocumentVersionEvent,\n  isUnpublishDocumentEvent,\n  isUnscheduleDocumentVersionEvent,\n  TIMELINE_ITEM_I18N_KEY_MAPPING,\n  useEvents,\n  useTranslation,\n} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Button, Popover} from '../../../../../ui-components'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {TimelineError} from '../TimelineError'\nimport {EventsTimeline} from './EventsTimeline'\n\ninterface TimelineMenuProps {\n  event: DocumentGroupEvent | null\n  events: DocumentGroupEvent[]\n  mode: 'rev' | 'since'\n  placement?: Placement\n}\n\nconst Root = styled(Popover)`\n  overflow: hidden;\n  overflow: clip;\n`\n\nexport const TIMELINE_MENU_PORTAL = 'timeline-menu'\n\nconst formatParams = {\n  timestamp: {dateStyle: 'medium', timeStyle: 'short'},\n}\n\nexport function EventsTimelineMenu({event, events, mode, placement}: TimelineMenuProps) {\n  const {setTimelineRange} = useDocumentPane()\n  const [open, setOpen] = useState(false)\n  const [button, setButton] = useState<HTMLButtonElement | null>(null)\n  const [popoverRef, setPopoverRef] = useState<HTMLElement | null>(null)\n  const toast = useToast()\n  const {\n    nextCursor,\n    loading,\n    error: eventsError,\n    findRangeForRevision,\n    findRangeForSince,\n    loadMoreEvents,\n    expandEvent,\n  } = useEvents()\n\n  const {t} = useTranslation('studio')\n\n  const handleOpen = useCallback(() => {\n    setOpen(true)\n  }, [])\n\n  const handleClose = useCallback(() => {\n    setOpen(false)\n  }, [])\n\n  const handleGlobalKeyDown = useCallback(\n    (e: KeyboardEvent) => {\n      if (open && (e.key === 'Escape' || e.key === 'Tab')) {\n        handleClose()\n        button?.focus()\n      }\n    },\n    [button, handleClose, open],\n  )\n\n  useGlobalKeyDown(handleGlobalKeyDown)\n  useClickOutsideEvent(open && handleClose, () => [button, popoverRef])\n\n  const selectRev = useCallback(\n    (revEvent: DocumentGroupEvent) => {\n      try {\n        if (\n          isDeleteDocumentVersionEvent(revEvent) ||\n          isDeleteDocumentGroupEvent(revEvent) ||\n          isUnpublishDocumentEvent(revEvent) ||\n          isScheduleDocumentVersionEvent(revEvent) ||\n          isUnscheduleDocumentVersionEvent(revEvent)\n        ) {\n          console.error('Event is not selectable')\n          return\n        }\n        const [since, rev] = findRangeForRevision(revEvent?.id)\n        setTimelineRange(since, rev)\n        handleClose()\n      } catch (err) {\n        toast.push({\n          closable: true,\n          description: err.message,\n          status: 'error',\n          title: t('timeline.error.unable-to-load-revision'),\n        })\n      }\n    },\n    [t, toast, setTimelineRange, findRangeForRevision, handleClose],\n  )\n\n  const selectSince = useCallback(\n    (sinceEvent: DocumentGroupEvent) => {\n      try {\n        const [since, rev] = findRangeForSince(sinceEvent.id)\n        setTimelineRange(since, rev)\n        handleClose()\n      } catch (err) {\n        toast.push({\n          closable: true,\n          description: err.message,\n          status: 'error',\n          title: t('timeline.error.unable-to-load-revision'),\n        })\n      }\n    },\n    [findRangeForSince, setTimelineRange, toast, t, handleClose],\n  )\n\n  const handleLoadMore = useCallback(() => {\n    if (!loading && nextCursor) {\n      loadMoreEvents()\n    }\n  }, [loading, loadMoreEvents, nextCursor])\n\n  const content = useMemo(() => {\n    if (eventsError) return <TimelineError />\n\n    return (\n      <EventsTimeline\n        events={events}\n        fetchEventChildren={expandEvent}\n        hasMoreEvents={Boolean(nextCursor)}\n        selectedEventId={event?.id}\n        onLoadMore={handleLoadMore}\n        onSelect={mode === 'rev' ? selectRev : selectSince}\n      />\n    )\n  }, [\n    eventsError,\n    mode,\n    expandEvent,\n    events,\n    nextCursor,\n    event?.id,\n    handleLoadMore,\n    selectSince,\n    selectRev,\n  ])\n\n  const revLabel = event\n    ? t(TIMELINE_ITEM_I18N_KEY_MAPPING[event.documentVariantType][event.type], {\n        context: 'timestamp',\n        timestamp: new Date(event.timestamp),\n        formatParams,\n      })\n    : t('timeline.latest-revision')\n\n  const sinceLabel = event\n    ? t(TIMELINE_ITEM_I18N_KEY_MAPPING[event.documentVariantType][event.type], {\n        context: 'timestamp',\n        timestamp: new Date(event.timestamp),\n        formatParams,\n      })\n    : events.length > 0\n      ? t('timeline.since-version-missing')\n      : t('timeline.no-previous-events')\n\n  const buttonLabel = mode === 'rev' ? revLabel : sinceLabel\n\n  return (\n    <PortalProvider __unstable_elements={{[TIMELINE_MENU_PORTAL]: popoverRef}}>\n      <Root\n        data-testid=\"timeline-menu\"\n        constrainSize\n        content={open && content}\n        data-ui=\"versionMenu\"\n        open={open}\n        placement={placement}\n        matchReferenceWidth\n        portal\n        ref={setPopoverRef}\n      >\n        <Flex width={'fill'}>\n          <Button\n            data-testid={open ? 'timeline-menu-close-button' : 'timeline-menu-open-button'}\n            disabled={loading || !events.length}\n            mode=\"ghost\"\n            onClick={open ? handleClose : handleOpen}\n            ref={setButton}\n            selected={open}\n            width=\"fill\"\n            tooltipProps={null}\n            justify={'space-between'}\n            style={{\n              maxWidth: '100%',\n            }}\n            iconRight={ChevronDownIcon}\n            text={loading ? t('timeline.loading-history') : buttonLabel}\n          />\n        </Flex>\n      </Root>\n    </PortalProvider>\n  )\n}\n","import {diffInput, wrap} from '@sanity/diff'\nimport {BoundaryElementProvider, Box, Card, Flex, Spinner, Stack, Text} from '@sanity/ui'\nimport {motion} from 'framer-motion'\nimport {type ReactElement, useMemo, useState} from 'react'\nimport {useObservable} from 'react-rx'\nimport {\n  ChangeFieldWrapper,\n  ChangeList,\n  ChangesError,\n  type DocumentChangeContextInstance,\n  type DocumentGroupEvent,\n  isReleaseDocument,\n  LoadingBlock,\n  NoChanges,\n  type ObjectDiff,\n  type ObjectSchemaType,\n  ScrollContainer,\n  Translate,\n  useEvents,\n  usePerspective,\n  useTranslation,\n} from 'sanity'\nimport {DocumentChangeContext} from 'sanity/_singletons'\nimport {styled} from 'styled-components'\n\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {EventsTimelineMenu} from '../../timeline/events/EventsTimelineMenu'\nimport {useDocumentPane} from '../../useDocumentPane'\n\nconst Scroller = styled(ScrollContainer)`\n  height: 100%;\n  overflow: auto;\n  position: relative;\n  scroll-behavior: smooth;\n`\n\nconst Grid = styled(Box)`\n  &:not([hidden]) {\n    display: grid;\n  }\n  grid-template-columns: 48px 1fr;\n  align-items: center;\n  gap: 0.25em;\n`\n\nconst SpinnerContainer = styled(Flex)`\n  width: 100%;\n  position: absolute;\n  bottom: -4px;\n`\n\nconst DIFF_INITIAL_VALUE = {\n  diff: null,\n  loading: true,\n  error: null,\n}\n\nconst CompareWithPublishedView = () => {\n  const {documentId, schemaType, editState, displayed} = useDocumentPane()\n  const {selectedPerspective, selectedPerspectiveName, selectedReleaseId} = usePerspective()\n  const {t} = useTranslation(structureLocaleNamespace)\n  const rootDiff = useMemo(() => {\n    const diff = diffInput(\n      wrap(editState?.published ?? {}, {author: ''}),\n      wrap(displayed ?? {}, {author: ''}),\n    ) as ObjectDiff\n\n    return diff\n  }, [editState?.published, displayed])\n\n  if (selectedReleaseId && !editState?.version) {\n    return null\n  }\n  if (selectedPerspective === 'drafts' && !editState?.draft) {\n    return null\n  }\n  if (selectedPerspectiveName === 'published' || !displayed?._rev) {\n    return null\n  }\n  return (\n    <Stack space={2} marginBottom={3}>\n      <Card borderBottom paddingBottom={3}>\n        <Stack space={3} paddingTop={1}>\n          <Text size={1} weight=\"medium\">\n            {t('events.compare-with-published.title')}\n          </Text>\n          <Text size={1} muted>\n            <Translate\n              i18nKey=\"events.compare-with-published.description\"\n              t={t}\n              values={{\n                version: isReleaseDocument(selectedPerspective)\n                  ? selectedPerspective.metadata?.title\n                  : 'draft',\n              }}\n            />\n          </Text>\n        </Stack>\n      </Card>\n      <DocumentChangeContext.Provider\n        value={{\n          documentId,\n          schemaType,\n          rootDiff,\n          isComparingCurrent: true,\n          FieldWrapper: (props) => props.children,\n          value: displayed,\n          showFromValue: true,\n        }}\n      >\n        <Box paddingY={1}>\n          <ChangeList diff={rootDiff} schemaType={schemaType} />\n        </Box>\n      </DocumentChangeContext.Provider>\n    </Stack>\n  )\n}\nexport function EventsInspector({showChanges}: {showChanges: boolean}): ReactElement {\n  const {documentId, schemaType, timelineError, value, formState} = useDocumentPane()\n  const [scrollRef, setScrollRef] = useState<HTMLDivElement | null>(null)\n\n  const {events, revision, sinceRevision, getChangesList} = useEvents()\n\n  const isComparingCurrent = !revision?.revisionId\n  const changesList$ = useMemo(() => getChangesList(), [getChangesList])\n  const {\n    diff,\n    loading: diffLoading,\n    error: diffError,\n  } = useObservable(changesList$, DIFF_INITIAL_VALUE)\n\n  const {t} = useTranslation('studio')\n\n  const documentContext: DocumentChangeContextInstance = useMemo(() => {\n    return {\n      documentId,\n      schemaType,\n      FieldWrapper: (props) =>\n        props.path.length > 0 ? <ChangeFieldWrapper {...props} /> : props.children,\n      rootDiff: diff,\n      isComparingCurrent: isComparingCurrent && !formState?.readOnly,\n      value,\n      showFromValue: true,\n    }\n  }, [diff, documentId, isComparingCurrent, formState?.readOnly, schemaType, value])\n\n  const [sinceEvent, toEvent] = useMemo(() => {\n    if (!events) return [null, null]\n    return [\n      events.find((e) => e.id === sinceRevision?.revisionId) || null,\n      events.find((e) => e.id === revision?.revisionId) || events[0],\n    ]\n  }, [events, revision?.revisionId, sinceRevision?.revisionId])\n\n  const sinceEvents = useMemo(() => {\n    // The sinceEvents need to account the toEvent showing only events that are older than the toEvent\n    if (!toEvent) return events.slice(1)\n    return events.slice(events.indexOf(toEvent) + 1).map((event) => {\n      // If the to event has a parent id, we need to remove the parent id from the since events or they won't be rendered, as they have no parent to expand.\n      if (\n        ('parentId' in toEvent && 'parentId' in event && event.parentId === toEvent.parentId) ||\n        ('parentId' in event && toEvent.id === event.parentId)\n      ) {\n        return {...event, parentId: undefined}\n      }\n      return event\n    })\n  }, [events, toEvent])\n  if (!events.length) {\n    return (\n      <Box paddingX={2}>\n        <Stack padding={3} space={3}>\n          <Text size={1} weight=\"medium\">\n            {t('timeline.error.no-document-history-title')}\n          </Text>\n          <Text muted size={1}>\n            {t('timeline.error.no-document-history-description')}\n          </Text>\n        </Stack>\n      </Box>\n    )\n  }\n  return (\n    <Flex data-testid=\"review-changes-pane\" direction=\"column\" height=\"fill\" overflow=\"hidden\">\n      <Box padding={3} style={{position: 'relative'}}>\n        <Grid paddingX={2} paddingBottom={2}>\n          <Text size={1} muted>\n            {t('changes.inspector.from-label')}\n          </Text>\n          <EventsTimelineMenu\n            event={sinceEvent || null}\n            events={sinceEvents}\n            mode=\"since\"\n            placement=\"bottom-start\"\n          />\n          <Text size={1} muted>\n            {t('changes.inspector.to-label')}\n          </Text>\n          <EventsTimelineMenu\n            event={toEvent || null}\n            events={events}\n            mode=\"rev\"\n            placement=\"bottom-end\"\n          />\n        </Grid>\n        {diffLoading && (\n          <motion.div\n            animate={{opacity: 1}}\n            initial={{opacity: 0}}\n            transition={{delay: 0.2, duration: 0.2}}\n          >\n            <SpinnerContainer justify=\"center\" align=\"center\" gap={2}>\n              <Text muted size={0}>\n                {t('changes.loading-changes')}\n              </Text>\n              <Spinner size={0} />\n            </SpinnerContainer>\n          </motion.div>\n        )}\n      </Box>\n\n      <Card flex={1} paddingX={2} paddingY={2}>\n        <BoundaryElementProvider element={scrollRef}>\n          <Scroller data-ui=\"Scroller\" ref={setScrollRef}>\n            <Box flex={1} paddingX={3} height=\"fill\">\n              {showChanges && (\n                <Content\n                  documentContext={documentContext}\n                  error={timelineError || diffError}\n                  loading={revision?.loading || sinceRevision?.loading || false}\n                  schemaType={schemaType}\n                  sameRevisionSelected={sinceEvent?.id === toEvent?.id}\n                  sinceEvent={sinceEvent}\n                />\n              )}\n            </Box>\n          </Scroller>\n        </BoundaryElementProvider>\n      </Card>\n    </Flex>\n  )\n}\n\nfunction Content({\n  error,\n  documentContext,\n  loading,\n  schemaType,\n  sameRevisionSelected,\n  sinceEvent,\n}: {\n  error?: Error | null\n  documentContext: DocumentChangeContextInstance\n  loading: boolean\n  schemaType: ObjectSchemaType\n  sameRevisionSelected: boolean\n  sinceEvent: DocumentGroupEvent | null\n}) {\n  if (error) {\n    return (\n      <>\n        <CompareWithPublishedView />\n        {sinceEvent?.type !== 'historyCleared' && <ChangesError error={error} />}\n      </>\n    )\n  }\n\n  if (loading) {\n    return <LoadingBlock showText />\n  }\n  if (sameRevisionSelected) {\n    return <SameRevisionSelected />\n  }\n\n  if (!documentContext.rootDiff) {\n    return (\n      <motion.div\n        animate={{opacity: 1}}\n        initial={{opacity: 0}}\n        transition={{delay: 0.2, duration: 0.2}}\n      >\n        <NoChanges />\n      </motion.div>\n    )\n  }\n\n  return (\n    <DocumentChangeContext.Provider value={documentContext}>\n      <Box paddingY={1}>\n        <ChangeList diff={documentContext.rootDiff} schemaType={schemaType} />\n      </Box>\n    </DocumentChangeContext.Provider>\n  )\n}\n\nfunction SameRevisionSelected() {\n  const {t} = useTranslation('')\n  return (\n    <motion.div\n      animate={{opacity: 1}}\n      initial={{opacity: 0}}\n      transition={{delay: 0.2, duration: 0.2}}\n    >\n      <Stack space={3} paddingTop={2}>\n        <Text size={1} weight=\"medium\" as=\"h3\">\n          {t('changes.same-revision-selected-title')}\n        </Text>\n        <Text as=\"p\" size={1} muted>\n          <Translate i18nKey=\"changes.same-revision-selected-description\" t={t} />\n        </Text>\n      </Stack>\n    </motion.div>\n  )\n}\n","import {BoundaryElementProvider, Card, Flex, useToast} from '@sanity/ui'\nimport {useCallback, useState} from 'react'\nimport {\n  type DocumentGroupEvent,\n  isDeleteDocumentGroupEvent,\n  isDeleteDocumentVersionEvent,\n  isScheduleDocumentVersionEvent,\n  isUnpublishDocumentEvent,\n  isUnscheduleDocumentVersionEvent,\n  LoadingBlock,\n  ScrollContainer,\n  useEvents,\n  useTranslation,\n} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {EventsTimeline} from '../../timeline/events/EventsTimeline'\nimport {TimelineError} from '../../timeline/TimelineError'\nimport {useDocumentPane} from '../../useDocumentPane'\n\nconst Scroller = styled(ScrollContainer)`\n  height: 100%;\n  overflow: auto;\n  position: relative;\n  scroll-behavior: smooth;\n`\n\nexport function EventsSelector({showList}: {showList: boolean}) {\n  const [scrollRef, setScrollRef] = useState<HTMLDivElement | null>(null)\n  const [listHeight, setListHeight] = useState(0)\n  const {setTimelineRange} = useDocumentPane()\n  const getScrollerRef = useCallback(\n    (el: HTMLDivElement | null) => {\n      if (!listHeight && el) {\n        /**\n         * Hacky solution, the list height needs to be defined, it cannot be obtained from the parent using a `max-height: 100%`\n         * Because the scroller won't work properly and it won't scroll to the selected element on mount.\n         * To fix this, this component will set the list height to the height of the parent element - 1px, to avoid a double scroll line.\n         */\n        setListHeight(el.clientHeight ? el.clientHeight - 1 : 0)\n        setScrollRef(el)\n      }\n    },\n    [listHeight],\n  )\n  const {\n    events,\n    nextCursor,\n    loading,\n    error,\n    revision,\n    loadMoreEvents,\n    findRangeForRevision,\n    expandEvent,\n  } = useEvents()\n\n  const {t} = useTranslation('studio')\n  const toast = useToast()\n\n  const selectRev = useCallback(\n    (event: DocumentGroupEvent) => {\n      try {\n        if (\n          isDeleteDocumentVersionEvent(event) ||\n          isDeleteDocumentGroupEvent(event) ||\n          isUnpublishDocumentEvent(event) ||\n          isScheduleDocumentVersionEvent(event) ||\n          isUnscheduleDocumentVersionEvent(event)\n        ) {\n          console.error('Event is not selectable')\n          return\n        }\n        const [since, rev] = findRangeForRevision(event.id)\n        setTimelineRange(since, rev)\n      } catch (err) {\n        toast.push({\n          closable: true,\n          description: err.message,\n          status: 'error',\n          title: t('timeline.error.unable-to-load-revision'),\n        })\n      }\n    },\n    [t, toast, setTimelineRange, findRangeForRevision],\n  )\n\n  const initialLoad = loading && !events.length\n  return (\n    <Flex data-testid=\"review-changes-pane\" direction=\"column\" height=\"fill\">\n      <Card flex={1} padding={2} paddingTop={0}>\n        {error ? (\n          <TimelineError />\n        ) : (\n          <BoundaryElementProvider element={scrollRef}>\n            <Scroller data-ui=\"Scroller\" ref={getScrollerRef}>\n              {listHeight &&\n              // This forces the list to unmount and remount, which is needed to reset the scroll position\n              showList &&\n              !initialLoad ? (\n                <EventsTimeline\n                  events={events}\n                  fetchEventChildren={expandEvent}\n                  hasMoreEvents={Boolean(nextCursor)}\n                  // If we have a revision, we select it, otherwise we select the first event\n                  selectedEventId={revision?.revisionId || events[0]?.id}\n                  onLoadMore={loadMoreEvents}\n                  onSelect={selectRev}\n                  listMaxHeight={`${listHeight}px`}\n                />\n              ) : null}\n              {loading && <LoadingBlock />}\n            </Scroller>\n          </BoundaryElementProvider>\n        )}\n      </Card>\n    </Flex>\n  )\n}\n","import {BoundaryElementProvider, Card, Flex, useToast} from '@sanity/ui'\nimport {useCallback, useState} from 'react'\nimport {\n  type Chunk,\n  ScrollContainer,\n  usePerspective,\n  useTimelineSelector,\n  useTranslation,\n} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Timeline} from '../../timeline'\nimport {TimelineError} from '../../timeline/TimelineError'\nimport {useDocumentPane} from '../../useDocumentPane'\n\nconst Scroller = styled(ScrollContainer)`\n  height: 100%;\n  overflow: auto;\n  position: relative;\n  scroll-behavior: smooth;\n`\n\nexport function HistorySelector({showList}: {showList: boolean}) {\n  const {timelineError, setTimelineRange, timelineStore} = useDocumentPane()\n  const {selectedReleaseId} = usePerspective()\n  const [scrollRef, setScrollRef] = useState<HTMLDivElement | null>(null)\n  const [listHeight, setListHeight] = useState(0)\n\n  const getScrollerRef = useCallback((el: HTMLDivElement | null) => {\n    if (!el?.clientHeight) return\n    /**\n     * Hacky solution, the list height needs to be defined, it cannot be obtained from the parent using a `max-height: 100%`\n     * Because the scroller won't work properly and it won't scroll to the selected element on mount.\n     * To fix this, this component will set the list height to the height of the parent element - 1px, to avoid a double scroll line.\n     */\n    setListHeight(el.clientHeight - 1)\n    setScrollRef(el)\n  }, [])\n\n  const chunks = useTimelineSelector(timelineStore, (state) => state.chunks)\n  const realRevChunk = useTimelineSelector(timelineStore, (state) => state.realRevChunk)\n  const hasMoreChunks = useTimelineSelector(timelineStore, (state) => state.hasMoreChunks)\n  const loading = useTimelineSelector(timelineStore, (state) => state.isLoading)\n\n  const {t} = useTranslation('studio')\n  const toast = useToast()\n  const selectRev = useCallback(\n    (revChunk: Chunk) => {\n      try {\n        const [sinceId, revId] = timelineStore?.findRangeForRev(revChunk) || [null, null]\n        setTimelineRange(sinceId, revId)\n      } catch (err) {\n        toast.push({\n          closable: true,\n          description: err.message,\n          status: 'error',\n          title: t('timeline.error.unable-to-load-revision'),\n        })\n      }\n    },\n    [setTimelineRange, t, timelineStore, toast],\n  )\n\n  const handleLoadMore = useCallback(() => {\n    // If updated, be sure to update the TimeLineMenu component as well\n    if (!loading) {\n      timelineStore?.loadMore()\n    }\n  }, [loading, timelineStore])\n\n  return (\n    <Flex data-testid=\"review-changes-pane\" direction=\"column\" height=\"fill\">\n      <Card flex={1} padding={2} paddingTop={0}>\n        {timelineError || selectedReleaseId ? (\n          <TimelineError versionError={Boolean(selectedReleaseId)} />\n        ) : (\n          <BoundaryElementProvider element={scrollRef}>\n            <Scroller data-ui=\"Scroller\" ref={getScrollerRef}>\n              {listHeight &&\n              // This forces the list to unmount and remount, which is needed to reset the scroll position\n              showList ? (\n                <Timeline\n                  chunks={chunks}\n                  hasMoreChunks={hasMoreChunks}\n                  lastChunk={realRevChunk}\n                  onLoadMore={handleLoadMore}\n                  onSelect={selectRev}\n                  listMaxHeight={`${listHeight}px`}\n                />\n              ) : null}\n            </Scroller>\n          </BoundaryElementProvider>\n        )}\n      </Card>\n    </Flex>\n  )\n}\n","import {CloseIcon, InfoOutlineIcon} from '@sanity/icons'\nimport {Box, Card, Flex, TabList, TabPanel, Text} from '@sanity/ui'\nimport {useState} from 'react'\nimport {\n  type DocumentInspectorProps,\n  isReleaseDocument,\n  Translate,\n  usePerspective,\n  useSource,\n  useTranslation,\n} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Button, Tab, Tooltip} from '../../../../../ui-components'\nimport {usePaneRouter} from '../../../../components/paneRouter/usePaneRouter'\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {HISTORY_INSPECTOR_NAME} from '../../constants'\nimport {ChangesInspector} from './ChangesInspector'\nimport {EventsInspector} from './EventsInspector'\nimport {EventsSelector} from './EventsSelector'\nimport {HistorySelector} from './HistorySelector'\n\nconst FadeInFlex = styled(Flex)`\n  opacity: 0;\n  transition: opacity 200ms;\n  &[data-ready] {\n    opacity: 1;\n  }\n`\nconst TABS = ['history', 'review'] as const\nconst isValidTab = (tab: string | undefined): tab is (typeof TABS)[number] =>\n  // @ts-expect-error TS doesn't understand the type guard\n  tab && TABS.includes(tab)\n\nexport function ChangesTabs(props: DocumentInspectorProps) {\n  const {params, setParams} = usePaneRouter()\n  const source = useSource()\n  const [parentRef, setParentRef] = useState<HTMLDivElement | null>(null)\n  const {t} = useTranslation(structureLocaleNamespace)\n  const isReady = params?.inspect === HISTORY_INSPECTOR_NAME\n  const {selectedPerspective} = usePerspective()\n\n  const paneRouterTab = isValidTab(params?.changesInspectorTab)\n    ? params.changesInspectorTab\n    : TABS[0]\n\n  const setPaneRouterTab = (tab: (typeof TABS)[number]) =>\n    setParams({\n      ...params,\n      changesInspectorTab: tab,\n      // Reset the since when changing the tab, as it's not relevant for the history tab\n      since: tab === 'history' ? undefined : params?.since,\n    })\n\n  const perspectiveName = isReleaseDocument(selectedPerspective)\n    ? selectedPerspective.metadata.title\n    : selectedPerspective === 'drafts'\n      ? t('compare-versions.status.draft')\n      : t('compare-versions.status.published')\n\n  return (\n    <FadeInFlex\n      direction=\"column\"\n      padding={0}\n      height=\"fill\"\n      data-ready={isReady ? '' : undefined}\n      ref={setParentRef}\n    >\n      <Card paddingBottom={1}>\n        <Flex align=\"center\" padding={3} gap={2}>\n          <TabList space={1} flex={1}>\n            <Tab\n              aria-controls=\"history-panel\"\n              id=\"history-tab\"\n              label={t('changes.tab.history')}\n              onClick={() => setPaneRouterTab('history')}\n              selected={paneRouterTab === 'history'}\n            />\n            <Tab\n              aria-controls=\"review-changes-panel\"\n              id=\"changes-tab\"\n              label={t('changes.tab.review-changes')}\n              onClick={() => setPaneRouterTab('review')}\n              selected={paneRouterTab === 'review'}\n            />\n          </TabList>\n          <Button\n            aria-label={t('changes.action.close-label')}\n            icon={CloseIcon}\n            mode=\"bleed\"\n            onClick={props.onClose}\n            tooltipProps={{content: t('document-inspector.close-button.tooltip')}}\n          />\n        </Flex>\n      </Card>\n      <Card padding={2} marginBottom={3} marginX={3} tone=\"neutral\" border radius={3}>\n        <Flex gap={2} align=\"flex-start\">\n          <Tooltip\n            portal\n            placement=\"bottom-end\"\n            boundaryElement={parentRef}\n            content={\n              <Box flex={1} padding={1}>\n                <Text size={1}>\n                  <Translate t={t} i18nKey=\"changes.banner.tooltip\" />\n                </Text>\n              </Box>\n            }\n          >\n            <Text size={0} muted>\n              <InfoOutlineIcon fontSize={1} />\n            </Text>\n          </Tooltip>\n          <Text size={0} muted>\n            <Translate\n              t={t}\n              values={{\n                perspective: perspectiveName,\n              }}\n              i18nKey=\"changes.banner.description\"\n            />\n          </Text>\n        </Flex>\n      </Card>\n\n      <TabPanel\n        aria-labelledby=\"history-tab\"\n        height=\"fill\"\n        hidden={paneRouterTab !== 'history'}\n        id=\"history-panel\"\n      >\n        {source.beta?.eventsAPI?.documents ? (\n          <EventsSelector showList={paneRouterTab === 'history'} />\n        ) : (\n          <HistorySelector showList={paneRouterTab === 'history'} />\n        )}\n      </TabPanel>\n\n      <TabPanel\n        aria-labelledby=\"review-tab\"\n        hidden={paneRouterTab !== 'review'}\n        id=\"review-panel\"\n        height=\"fill\"\n      >\n        {source.beta?.eventsAPI?.documents ? (\n          <>\n            {paneRouterTab === 'review' ? (\n              <EventsInspector showChanges={paneRouterTab === 'review'} />\n            ) : null}\n          </>\n        ) : (\n          <ChangesInspector showChanges={paneRouterTab === 'review'} />\n        )}\n      </TabPanel>\n    </FadeInFlex>\n  )\n}\n","import {RestoreIcon} from '@sanity/icons'\nimport {type DocumentInspector, useTranslation} from 'sanity'\n\nimport {useStructureTool} from '../../../../useStructureTool'\nimport {HISTORY_INSPECTOR_NAME} from '../../constants'\nimport {ChangesTabs} from './ChangesTabs'\n\nexport const changesInspector: DocumentInspector = {\n  name: HISTORY_INSPECTOR_NAME,\n  useMenuItem: () => {\n    const {features} = useStructureTool()\n    const {t} = useTranslation()\n\n    return {\n      hidden: !features.reviewChanges,\n      icon: RestoreIcon,\n      title: t('changes.title'),\n    }\n  },\n  component: ChangesTabs,\n  onClose: ({params}) => ({\n    params: {\n      ...params,\n      since: undefined,\n      rev: undefined,\n      changesInspectorTab: undefined,\n      historyVersion: undefined,\n    },\n  }),\n  onOpen: ({params}) => ({params: {...params, since: '@lastPublished'}}),\n}\n","/* eslint-disable no-loop-func */\n\nimport {type Path, type SanityDocument, type SchemaType} from '@sanity/types'\nimport {isArray, isRecord} from 'sanity'\n\n// eslint-disable-next-line max-statements\nexport function getPathTitles(options: {\n  path: Path\n  schemaType: SchemaType\n  value: Partial<SanityDocument> | null\n}): Array<{name: string; title?: string}> {\n  const {path, schemaType, value} = options\n  const result: Array<{name: string; title?: string}> = []\n\n  let s = schemaType\n  let v: unknown = value\n\n  for (const segment of path) {\n    // field name\n    if (typeof segment === 'string') {\n      if (!isRecord(v) && v !== undefined) {\n        throw new Error(`Parent value is not an object, cannot get path segment: .${segment}`)\n      }\n\n      if (s.jsonType !== 'object') {\n        throw new Error(\n          `Parent type is not an object schema type, cannot get path segment: .${segment}`,\n        )\n      }\n\n      v = v?.[segment]\n\n      const field = s.fields.find((f) => f.name === segment)\n\n      if (!field) {\n        result.push({name: segment})\n        return result\n      }\n\n      s = field.type\n\n      result.push(s)\n\n      continue\n    }\n\n    // array item index\n    if (typeof segment === 'number') {\n      if (!isArray(v) && v !== undefined) {\n        throw new Error(`Parent value is not an array, cannot get path segment: [${segment}]`)\n      }\n\n      if (s.jsonType !== 'array') {\n        throw new Error(\n          `Parent type is not an array schema type, cannot get path segment: [${segment}]`,\n        )\n      }\n\n      v = v?.[segment]\n\n      const itemType = s.of.find((ofType) => {\n        if (typeof v === 'string') {\n          return ofType.jsonType === 'string'\n        }\n\n        if (typeof v === 'number') {\n          return ofType.jsonType === 'number'\n        }\n\n        if (typeof v === 'boolean') {\n          return ofType.jsonType === 'boolean'\n        }\n\n        if (isRecord(v)) {\n          return ofType.name === v?._type\n        }\n\n        return false\n      })\n\n      if (!itemType) {\n        throw new Error(`Item type not found: [${segment}]`)\n      }\n\n      s = itemType\n\n      result.push(s)\n\n      continue\n    }\n\n    // array item key\n    if (isRecord(segment) && segment._key) {\n      // if the value is undefined, it likely means that is has been deleted, so return the result\n      if (typeof v === 'undefined') {\n        return result\n      }\n\n      if (!isArray(v)) {\n        throw new Error(\n          `Parent value is not an array, cannot get path segment: [_key == ${segment}]`,\n        )\n      }\n\n      if (s.jsonType !== 'array') {\n        throw new Error(\n          `Parent type is not an array schema type, cannot get path segment: .${segment}`,\n        )\n      }\n\n      const values = v ?? []\n\n      v = values.find((i) => isRecord(i) && i._key === segment._key)\n\n      // in situations where the segment key exists but it could not be found in the values array\n      // means that the specific item has been deleted from the array\n      // and therefore we not need to continue running the validation for it\n      if (typeof v === 'undefined') {\n        return result\n      }\n\n      if (!isRecord(v)) {\n        throw new Error(`Array item not found: [_key == ${segment._key}]`)\n      }\n\n      const ofType = s.of.find((i) => isRecord(v) && i.name === v?._type)\n\n      if (!ofType) {\n        throw new Error(`Array item type not found: .${v?._type}`)\n      }\n\n      s = ofType\n\n      result.push(s)\n\n      continue\n    }\n\n    throw new Error(`Invalid path segment: ${JSON.stringify(segment)}`)\n  }\n\n  return result\n}\n","import {\n  ErrorOutlineIcon,\n  type IconComponent,\n  InfoOutlineIcon,\n  WarningOutlineIcon,\n} from '@sanity/icons'\nimport {\n  type ObjectSchemaType,\n  type Path,\n  type SanityDocument,\n  type SchemaType,\n  type ValidationMarker,\n} from '@sanity/types'\nimport {Box, Card, type CardTone, Flex, Stack, Text} from '@sanity/ui'\nimport {type ErrorInfo, Fragment, useCallback, useMemo, useState} from 'react'\nimport {type DocumentInspectorProps, isGoingToUnpublish, useTranslation} from 'sanity'\n\nimport {ErrorBoundary} from '../../../../../ui-components'\nimport {DocumentInspectorHeader} from '../../documentInspector'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {getPathTitles} from './getPathTitles'\n\nconst MARKER_ICON: Record<'error' | 'warning' | 'info', IconComponent> = {\n  error: ErrorOutlineIcon,\n  warning: WarningOutlineIcon,\n  info: InfoOutlineIcon,\n}\n\nconst MARKER_TONE: Record<'error' | 'warning' | 'info', CardTone> = {\n  error: 'critical',\n  warning: 'caution',\n  info: 'primary',\n}\n\nexport function ValidationInspector(props: DocumentInspectorProps) {\n  const {onClose} = props\n  const {onFocus, onPathOpen, schemaType, validation, value, editState} = useDocumentPane()\n  const {t} = useTranslation('validation')\n\n  const handleOpen = useCallback(\n    (path: Path) => {\n      onPathOpen(path)\n      onFocus(path)\n    },\n    [onFocus, onPathOpen],\n  )\n\n  const isVersionGoingToUnpublish =\n    editState && editState.version && isGoingToUnpublish(editState.version as SanityDocument)\n\n  return (\n    <Flex direction=\"column\" height=\"fill\" overflow=\"hidden\">\n      <DocumentInspectorHeader\n        as=\"header\"\n        closeButtonLabel={t('panel.close-button-aria-label')}\n        flex=\"none\"\n        onClose={onClose}\n        title={t('panel.title')}\n      />\n\n      <Card flex={1} overflow=\"auto\" padding={3}>\n        {isVersionGoingToUnpublish ? (\n          <Box padding={2}>\n            <Text muted size={1}>\n              {t('panel.unpublish-message')}\n            </Text>\n          </Box>\n        ) : (\n          <>\n            {validation.length === 0 && (\n              <Box padding={2}>\n                <Text muted size={1}>\n                  {t('panel.no-errors-message')}\n                </Text>\n              </Box>\n            )}\n            {validation.length > 0 && (\n              <Stack space={2}>\n                {validation.map((marker, i) => (\n                  <ValidationCard\n                    // oxlint-disable-next-line no-array-index-key\n                    key={i}\n                    marker={marker}\n                    onOpen={handleOpen}\n                    schemaType={schemaType}\n                    value={value}\n                  />\n                ))}\n              </Stack>\n            )}\n          </>\n        )}\n      </Card>\n    </Flex>\n  )\n}\n\nfunction ValidationCard(props: {\n  marker: ValidationMarker\n  onOpen: (path: Path) => void\n  schemaType: ObjectSchemaType\n  value: Partial<SanityDocument> | null\n}) {\n  const {marker, onOpen, schemaType, value} = props\n  const handleOpen = useCallback(() => onOpen(marker.path), [marker, onOpen])\n  const [errorInfo, setErrorInfo] = useState<{error: Error; info: ErrorInfo} | null>(null)\n  const Icon = MARKER_ICON[marker.level]\n\n  return (\n    <ErrorBoundary onCatch={setErrorInfo}>\n      {errorInfo && (\n        <Card padding={3} radius={2} tone=\"critical\">\n          <Text size={1}>{errorInfo.error.message}</Text>\n        </Card>\n      )}\n\n      {!errorInfo && (\n        <Card\n          __unstable_focusRing\n          as=\"button\"\n          onClick={handleOpen}\n          padding={3}\n          radius={2}\n          tone={MARKER_TONE[marker.level]}\n        >\n          <Flex align=\"flex-start\" gap={3}>\n            <Box flex=\"none\">\n              <Text size={1}>\n                <Icon />\n              </Text>\n            </Box>\n\n            <Stack flex={1} space={2}>\n              <DocumentNodePathBreadcrumbs\n                path={marker.path}\n                schemaType={schemaType}\n                value={value}\n              />\n\n              <Text muted size={1}>\n                {marker.message}\n              </Text>\n            </Stack>\n          </Flex>\n        </Card>\n      )}\n    </ErrorBoundary>\n  )\n}\n\nfunction DocumentNodePathBreadcrumbs(props: {\n  path: Path\n  schemaType: SchemaType\n  value: Partial<SanityDocument> | null\n}) {\n  const {path, schemaType, value} = props\n\n  const pathTitles = useMemo(() => {\n    try {\n      return getPathTitles({path, schemaType, value})\n    } catch (e) {\n      console.error(e)\n    }\n    return null\n  }, [path, schemaType, value])\n\n  if (!pathTitles?.length) return null\n\n  return (\n    <Text size={1}>\n      {pathTitles.map((t, i) => (\n        // oxlint-disable-next-line no-array-index-key\n        <Fragment key={i}>\n          {i > 0 && <span style={{color: 'var(--card-muted-fg-color)', opacity: 0.5}}> / </span>}\n          <span style={{fontWeight: 500}}>{t.title || t.name}</span>\n        </Fragment>\n      ))}\n    </Text>\n  )\n}\n","import {CheckmarkCircleIcon, ErrorOutlineIcon, WarningOutlineIcon} from '@sanity/icons'\nimport {useMemo} from 'react'\nimport {\n  type DocumentInspector,\n  type DocumentInspectorMenuItem,\n  type DocumentInspectorUseMenuItemProps,\n  type FormNodeValidation,\n  isGoingToUnpublish,\n  isValidationError,\n  isValidationWarning,\n  usePerspective,\n  useTranslation,\n  useValidationStatus,\n} from 'sanity'\n\nimport {VALIDATION_INSPECTOR_NAME} from '../../constants'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {ValidationInspector} from './ValidationInspector'\n\nfunction useMenuItem(props: DocumentInspectorUseMenuItemProps): DocumentInspectorMenuItem {\n  const {documentId, documentType} = props\n  const {t} = useTranslation('validation')\n  const {selectedReleaseId} = usePerspective()\n  const {validation: validationMarkers} = useValidationStatus(\n    documentId,\n    documentType,\n    selectedReleaseId,\n  )\n  const {value} = useDocumentPane()\n\n  const validation: FormNodeValidation[] = useMemo(\n    () =>\n      validationMarkers.map((item) => ({\n        level: item.level,\n        message: item.message,\n        path: item.path,\n      })),\n    [validationMarkers],\n  )\n\n  const hasErrors = validation.some(isValidationError)\n  const hasWarnings = validation.some(isValidationWarning)\n  const isDocumentGoingToUnpublish = isGoingToUnpublish(value)\n\n  const icon = useMemo(() => {\n    if (hasErrors) return ErrorOutlineIcon\n    if (hasWarnings) return WarningOutlineIcon\n    return CheckmarkCircleIcon\n  }, [hasErrors, hasWarnings])\n\n  const tone = useMemo(() => {\n    if (hasErrors) return 'critical'\n    if (hasWarnings) return 'caution'\n    return 'positive'\n  }, [hasErrors, hasWarnings])\n\n  return {\n    hidden: validation.length === 0 || isDocumentGoingToUnpublish,\n    icon,\n    title: t('panel.title'),\n    tone,\n    showAsAction: true,\n  }\n}\n\nexport const validationInspector: DocumentInspector = {\n  name: VALIDATION_INSPECTOR_NAME,\n  component: ValidationInspector,\n  useMenuItem,\n}\n","import {omit} from 'lodash'\nimport {decodeJsonParams, encodeJsonParams, route} from 'sanity/router'\n\nimport {type RouterPaneGroup, type RouterPanes, type RouterPaneSibling} from './types'\n\nconst EMPTY_PARAMS = {}\n\n/**\n * @internal\n */\nexport function legacyEditParamsToState(params: string): Record<string, unknown> {\n  try {\n    return JSON.parse(decodeURIComponent(params))\n  } catch (err) {\n    console.warn('Failed to parse JSON parameters')\n    return {}\n  }\n}\n\nexport function encodePanesSegment(panes: RouterPanes): string {\n  return (panes || [])\n    .map((group) => group.map(encodeChunks).join('|'))\n    .map(encodeURIComponent)\n    .join(';')\n}\n\n/**\n * @internal\n */\nexport function legacyEditParamsToPath(params: Record<string, unknown>): string {\n  return JSON.stringify(params)\n}\n\n// http://localhost:3333/intent/create/template=book-by-author;type=book/eyJhdXRob3JJZCI6Imdycm0ifQ==\n\n/**\n * @internal\n */\nexport function toState(pathSegment: string): RouterPaneGroup[] {\n  return parsePanesSegment(decodeURIComponent(pathSegment))\n}\n\n/**\n * @internal\n */\nexport function toPath(panes: RouterPaneGroup[]): string {\n  return encodePanesSegment(panes)\n}\n\nexport const router = route.create('/', [\n  // \"Asynchronous intent resolving\" route\n  route.intents('/intent'),\n\n  // Legacy fallback route, will be redirected to new format\n  route.create('/edit/:type/:editDocumentId', [\n    route.create({\n      path: '/:params',\n      transform: {params: {toState: legacyEditParamsToState, toPath: legacyEditParamsToPath}},\n    }),\n  ]),\n\n  // The regular path - when the intent can be resolved to a specific pane\n  route.create({\n    path: '/:panes',\n    // Legacy URLs, used to handle redirects\n    children: [route.create('/:action', route.create('/:legacyEditDocumentId'))],\n    transform: {\n      panes: {toState, toPath},\n    },\n  }),\n])\n\n// old: authors;knut,{\"template\":\"diaryEntry\"}\n// new: authors;knut,view=diff,eyJyZXYxIjoiYWJjMTIzIiwicmV2MiI6ImRlZjQ1NiJ9|latest-posts\n\nconst panePattern = /^([.a-z0-9_-]+),?({.*?})?(?:(;|$))/i\nconst isParam = (str: string) => /^[a-z0-9]+=[^=]+/i.test(str)\nconst isPayloadLike = (str: string) => /^[A-Za-z0-9\\-_]+(?:={0,2})$/.test(str)\nconst exclusiveParams = ['view', 'since', 'rev', 'inspect', 'comment']\n\ntype Truthy<T> = T extends false\n  ? never\n  : T extends ''\n    ? never\n    : T extends 0\n      ? never\n      : T extends 0n\n        ? never\n        : T extends null | undefined\n          ? NonNullable<T>\n          : T\nconst isTruthy = Boolean as (t: unknown) => boolean as <T>(t: T) => t is Truthy<T>\n\nfunction parseChunks(chunks: string[], initial: RouterPaneSibling): RouterPaneSibling {\n  const sibling: RouterPaneSibling = {...initial, params: EMPTY_PARAMS, payload: undefined}\n  return chunks.reduce((pane, chunk) => {\n    if (isParam(chunk)) {\n      const key = chunk.slice(0, chunk.indexOf('='))\n      const value = chunk.slice(key.length + 1)\n      pane.params = {...pane.params, [decodeURIComponent(key)]: decodeURIComponent(value)}\n    } else if (isPayloadLike(chunk)) {\n      pane.payload = tryParseBase64Payload(chunk)\n    } else {\n      console.warn('Unknown pane segment: %s - skipping', chunk)\n    }\n\n    return pane\n  }, sibling)\n}\n\nfunction encodeChunks(pane: RouterPaneSibling, index: number, group: RouterPaneGroup): string {\n  const {payload, params = {}, id} = pane\n  const [firstSibling] = group\n  const paneIsFirstSibling = pane === firstSibling\n  const sameAsFirst = index !== 0 && id === firstSibling.id\n  const encodedPayload =\n    typeof payload === 'undefined' ? undefined : encodeJsonParams(payload as any)\n\n  const encodedParams = Object.entries(params)\n    .filter((entry): entry is [string, string] => {\n      const [key, value] = entry\n      if (!value) return false\n      if (paneIsFirstSibling) return true\n\n      // omit the value if it's the same as the value from the first sibling\n      const valueFromFirstSibling = firstSibling.params?.[key]\n      if (value === valueFromFirstSibling && !exclusiveParams.includes(key)) return false\n      return true\n    })\n    .map(([key, value]) => `${encodeURIComponent(key)}=${encodeURIComponent(value)}`)\n\n  return (\n    [sameAsFirst ? '' : id]\n      .concat([encodedParams.length > 0 && encodedParams, encodedPayload].filter(isTruthy).flat())\n      .join(',') || ','\n  )\n}\n\nexport function parsePanesSegment(str: string): RouterPanes {\n  if (str.indexOf(',{') !== -1) {\n    return parseOldPanesSegment(str)\n  }\n\n  return str\n    .split(';')\n    .map((group) => {\n      const [firstSibling, ...restOfSiblings] = group.split('|').map((segment) => {\n        const [id, ...chunks] = segment.split(',')\n        return parseChunks(chunks, {id})\n      })\n\n      return [\n        firstSibling,\n        ...restOfSiblings.map((sibling) => ({\n          ...firstSibling,\n          ...sibling,\n          id: sibling.id || firstSibling.id,\n          params: {...omit(firstSibling.params, exclusiveParams), ...sibling.params},\n          payload: sibling.payload || firstSibling.payload,\n        })),\n      ]\n    })\n    .filter((group) => group.length > 0)\n}\n\nfunction parseOldPanesSegment(str: string): RouterPanes {\n  const chunks: RouterPaneGroup = []\n\n  let buffer = str\n  while (buffer.length) {\n    const [match, id, payloadChunk] = buffer.match(panePattern) || []\n    if (!match) {\n      buffer = buffer.slice(1)\n      continue\n    }\n\n    const payload = payloadChunk && tryParsePayload(payloadChunk)\n    chunks.push({id, payload})\n\n    buffer = buffer.slice(match.length)\n  }\n\n  return [chunks]\n}\n\nfunction tryParsePayload(json: string) {\n  try {\n    return JSON.parse(json)\n  } catch (err) {\n    console.warn(`Failed to parse parameters: ${err.message}`)\n    return undefined\n  }\n}\n\nfunction tryParseBase64Payload(data: string): unknown {\n  try {\n    return data ? decodeJsonParams(data) : undefined\n  } catch (err) {\n    console.warn(`Failed to parse parameters: ${err.message}`)\n    return undefined\n  }\n}\n","import {MasterDetailIcon} from '@sanity/icons'\nimport {lazy} from 'react'\nimport {definePlugin} from 'sanity'\n\nimport {\n  DeleteAction,\n  DiscardChangesAction,\n  DuplicateAction,\n  HistoryRestoreAction,\n  PublishAction,\n  UnpublishAction,\n} from './documentActions'\nimport {LiveEditBadge} from './documentBadges'\nimport {getIntentState} from './getIntentState'\nimport {structureUsEnglishLocaleBundle} from './i18n'\nimport {changesInspector} from './panes/document/inspectors/changes'\nimport {validationInspector} from './panes/document/inspectors/validation'\nimport {router} from './router'\nimport {type StructureToolOptions} from './types'\n\nconst documentActions = [\n  PublishAction,\n  UnpublishAction,\n  DiscardChangesAction,\n  DuplicateAction,\n  DeleteAction,\n  HistoryRestoreAction,\n]\n\nconst documentBadges = [LiveEditBadge]\n\nconst inspectors = [validationInspector, changesInspector]\n\n/**\n * The structureTool is a studio plugin which adds the “structure tool” – a tool within\n * Sanity Studio in which content editors can drill down to specific documents to edit them.\n * You can configure your Studio's structure tool(s).\n *\n * @public\n * @param options - Options for the structure tool. See {@link StructureToolOptions}\n * @example Minimal example\n * ```ts\n * // sanity.config.ts\n * import { defineConfig } from 'sanity'\n * import { structureTool } from 'sanity/structure'\n *\n * export default defineConfig((\n *  // ...\n *  plugins: [\n *    structureTool() // use defaults\n *  ]\n * })\n * ```\n *\n * @example To customise your structure tool\n * ```ts\n * // sanity.config.ts\n * import { defineConfig } from 'sanity'\n * import { structureTool } from 'sanity/structure'\n * import { FaCar } from 'react-icons'\n\n * export default defineConfig((\n *\t // ...\n *   plugins: [\n *    structureTool({\n *      name: 'cars',\n *      title: 'Cars',\n *      icon: FaCar,\n *      structure: (S) => S.documentTypeList('car'),\n *      defaultDocumentNode: (S) =>\n *        S.document().views([\n *          S.view.form(),\n *          S.view.component(Preview).title('Preview')\n *        ])\n *    })\n *  ]\n * })\n * ```\n * */\nexport const structureTool = definePlugin<StructureToolOptions | void>((options) => {\n  const icon = options?.icon || MasterDetailIcon\n\n  return {\n    name: 'sanity/structure',\n    document: {\n      actions: (prevActions) => {\n        // NOTE: since it's possible to have several structure tools in one Studio,\n        // we need to check whether the document actions already exist in the Studio config\n        return Array.from(new Set([...prevActions, ...documentActions]))\n      },\n      badges: (prevBadges) => {\n        // NOTE: since it's possible to have several structure tools in one Studio,\n        // we need to check whether the document badges already exist in the Studio config\n        return Array.from(new Set([...prevBadges, ...documentBadges]))\n      },\n      inspectors: (prevInspectors) => {\n        // NOTE: since it's possible to have several structure tools in one Studio,\n        // we need to check whether the inspectors already exist in the Studio config\n        return Array.from(new Set([...prevInspectors, ...inspectors]))\n      },\n    },\n\n    tools: [\n      {\n        name: options?.name || 'structure',\n        title: options?.title || 'Structure',\n        icon,\n        component: lazy(() => import('./components/structureTool')),\n        canHandleIntent: (intent, params) => {\n          if (intent === 'create') return canHandleCreateIntent(params)\n          if (intent === 'edit') return canHandleEditIntent(params)\n          return false\n        },\n        getIntentState,\n        // Controlled by sanity/src/structure/components/structureTool/StructureTitle.tsx\n        controlsDocumentTitle: true,\n        options,\n        router,\n        __internalApplicationType: 'sanity/structure',\n      },\n    ],\n\n    i18n: {\n      bundles: [structureUsEnglishLocaleBundle],\n    },\n  }\n})\n\nfunction canHandleCreateIntent(params: Record<string, unknown>) {\n  // We can't handle create intents without a `type` parameter\n  if (!('type' in params)) {\n    return false\n  }\n\n  // We can handle any create intent as long as it has a `type` parameter,\n  // but we also know how to deal with templates, where other tools might not\n  return 'template' in params ? {template: true} : true\n}\n\nfunction canHandleEditIntent(params: Record<string, unknown>) {\n  // We can't handle edit intents without an `id` parameter\n  if (!('id' in params)) {\n    return false\n  }\n\n  // We can handle any edit intent with a document ID, but we're best at `structure` mode\n  // This ensures that other tools that can handle modes such as `presentation` or `batch`\n  // can take precedence over the structure tool\n  return 'mode' in params ? {mode: params.mode === 'structure'} : true\n}\n"],"names":["useCreatePathSyncChannel","$","_c","t0","Symbol","for","Subject","DIFF_VIEW_SEARCH_PARAMETER","DIFF_VIEW_PREVIOUS_DOCUMENT_SEARCH_PARAMETER","DIFF_VIEW_NEXT_DOCUMENT_SEARCH_PARAMETER","DIFF_SEARCH_PARAM_DELIMITER","useDiffViewRouter","navigate","state","routerState","useRouter","t1","mode","previousDocument","nextDocument","next","fromPairs","_searchParams","type","id","join","toPairs","navigateDiffView","filter","_temp","exitDiffView","t2","key","includes","diffViewModes","isDiffViewMode","maybeDiffViewMode","useDiffViewState","onParamsError","searchParams","URLSearchParams","get","anyParamSet","some","param","params","useMemo","parseParams","useEffect","result","errors","isActive","previousDocumentType","previousDocumentId","split","Boolean","nextDocumentType","nextDocumentId","push","length","documents","previous","useScrollMirror","elements","existentElements","scrollMirror","ScrollMirror","destroy","element","VersionModeHeaderLayout","styled","header","VersionModeHeaderLayoutSection","div","VersionModeHeader","documentId","t","useTranslation","structureLocaleNamespace","data","documentVersions","useDocumentVersions","activeReleases","useActiveReleases","releasesIds","flatMap","getVersionFromId","releases","release","releaseId","getReleaseIdFromReleaseDocumentId","_id","onSelectPreviousRelease","useCallback","selectedDocumentId","onSelectNextRelease","justifySelf","CloseIcon","VersionMenu","onSelectRelease","role","document","published","draft","useEditState","getPublishedId","selected","findRelease","tStructure","tCore","drafts","enabled","isDraftModelEnabled","useWorkspace","getMenuButtonProps","map","VersionMenuItem","onSelect","isSelected","onClick","getDraftId","getVersionId","tone","getReleaseTone","metadata","title","releaseType","formatRelativeLocalePublishDate","isReleaseScheduledOrScheduling","text","disabled","isReleaseDocument","icon","iconRight","undefined","isPublishedId","isDraftId","find","DialogLayout","pickDocumentLayoutComponent","plugin","components","unstable_layout","usePathSyncChannel","syncChannel","source","t3","t4","pipe","distinctUntilChanged","_temp2","path","state_0","deepEquals","Scroller","DiffViewPaneLayout","Card","Container","UiContainer","DiffViewPane","forwardRef","ref","documentType","scrollElement","compareDocument","containerElement","useRef","portalElement","setPortalElement","useState","boundaryElement","setBoundaryElement","pick","defaultComponent","DocumentLayout","useMiddlewareComponents","isInteractive","onOpenReviewChanges","noop","onSetFocus","isReviewChangesOpen","t5","t6","t7","t8","t9","t10","t11","t12","t13","t14","t15","t16","t17","t18","DiffViewDocument","compareValue","useCompareValue","patchChannel","perspectiveName","selectedPerspectiveName","comparisonValue","useDocumentForm","collapsedFieldSets","collapsedPaths","documentForm","formState","onBlur","onChange","onFocus","onProgrammaticFocus","onSetActiveFieldGroup","onSetCollapsedFieldSet","onSetCollapsedPath","ready","schemaType","value","isLoading","pathSyncChannel","onPathOpen","subscription","subscribe","unsubscribe","focusPath","changed","focused","groups","validation","members","presence","isVersionId","compareDocumentEditState","bb0","version","createPatchChannel","Link","a","EditReferenceLinkComponent","children","_documentId","intent","href","useIntentLink","DiffView","previousPaneElement","setPreviousPaneElement","nextPaneElement","setNextPaneElement","referenceInputOptionsContext","useContext","ReferenceInputOptionsContext","disableNew","diffViewReferenceInputOptionsContext","DiffViewDocumentLayout","toast","useToast","status","description","error","input","PANE_DEBUG","PANE_COLLAPSED_WIDTH","PANE_DEFAULT_MIN_WIDTH","usePaneLayout","pane","PaneLayoutContext","Error","Root","Layer","PaneDivider","resize","dragging","setDragging","event","preventDefault","startX","pageX","handleMouseMove","e","deltaX","handleMouseUp","e_0","window","removeEventListener","addEventListener","handleMouseDown","Pane","props","forwardedRef","currentMaxWidthProp","currentMinWidthProp","maxWidthProp","minWidthProp","restProps","currentMinWidth","currentMaxWidth","flex","minWidth","maxWidth","flexProp","rootElement","setRootElement","collapse","collapsed","layoutCollapsed","expand","expandedElement","mount","panes","p","indexOf","paneIndex","nextPane","isLast","expanded","nextCollapsed","current","useImperativeHandle","refValue","setRef","useLayoutEffect","handleCollapse","handleExpand","index","contextValue","bb1","hidden","divider","Infinity","style","t19","t20","t21","t22","t23","t24","t25","displayName","usePane","PaneContext","PaneContent","as","overflow","padding","toLowerCaseNoSpaces","str","toLocaleLowerCase","replaceAll","MENU_GROUP_POPOVER_PROPS","constrainSize","placement","portal","PaneMenuButtonItem","isAfterGroup","node","getI18nText","useGetI18nText","child","childIndex","child_0","childIndex_0","PaneContextMenuItemResolver","PaneContextMenuItem","reason","tooltipContent","useI18nText","hotkey","CheckmarkIcon","onAction","MenuItem","PaneContextIntentMenuItem","intentLink","handleClick","CONTEXT_MENU_POPOVER_PROPS","nodesHasTone","nodes","PaneContextMenuButton","actionsNodes","useId","hasCritical","hasCaution","nodeIndex","RootCard","PaneFooter","$border","css","Layout","Flex","TitleCard","theme","fg","bg","sanity","color","card","TitleTextSkeleton","TextSkeleton","TitleText","Text","PaneHeader","actions","backButton","border","contentAfter","loading","subActions","tabs","tabIndex","appendTitle","paneElement","paneRect","useElementRect","height","innerHeight","width","layoutStyle","handleTitleClick","handleLayoutClick","showTabsOrSubActions","getDisabledReason","disabledReason","ariaLabel","isDisabled","PaneHeaderActionButton","console","warn","PaneHeaderMenuItemActionButton","hotkeys","content","PaneHeaderActionIntentButton","PaneHeaderMenuGroupActionButton","UnknownIcon","Button","idx","_calcPaneResize","cache","left","right","sum","leftMinWidth","rightMinWidth","leftMaxWidth","Math","min","rightMaxWidth","minDeltaX","rightMinDeltaX","maxDeltaX","leftMaxDeltaX","_deltaX","max","leftW","rightW","leftFlex","rightFlex","_getDOMPath","el","parentElement","Array","from","childNodes","unshift","EMPTY_PATH","_sortElements","WeakMap","set","_sortByElementPath","b","_a","_b","len","i","aIndex","bIndex","sort","createPaneLayoutController","observers","optionsMap","userCollapsedElementSet","Set","rootWidth","resizeDataMap","Map","resizing","add","_notifyObservers","delete","options","original","splice","leftElement","leftIndex","leftOptions","rightElement","rightOptions","offsetWidth","leftResizeData","rightResizeData","nextRootElement","setRootWidth","nextRootWidth","observer","_elements","dataMap","lastElement","collapsedWidth","remaingWidth","userCollapsed","has","sizeCollapsed","resizeData","PaneLayout","onCollapse","onExpand","controller","setState","paneLayout","ErrorPane","paneKey","Delay","ms","setReady","timeoutId","setTimeout","clearTimeout","getWaitMessages","thresholds","messageKey","isDev","message","src","of","merge","threshold","mapTo","delay","DEFAULT_MESSAGE_KEY","Content","LoadingPane","memo","messageProp","resolvedMessage","currentMessage","setCurrentMessage","sub","contentElement","setContentElement","mounted","setMounted","_raf2","DELAY","useDocumentPane","documentPane","DocumentPaneContext","CommentsWrapper","CommentsProviderWrapper","useCommentsEnabled","connectionState","inspector","openInspector","selectedReleaseId","usePerspective","setParams","usePaneRouter","studioUrl","useStudioUrl","location","origin","resolveIntentLink","selectedCommentId","comment","paramsRef","commentId","inspect","COMMENTS_INSPECTOR_NAME","getCommentLink","handleClearSelectedComment","name","handleOpenCommentsInspector","PaneRouterContext","useFilteredReleases","displayed","archivedReleases","useArchivedReleases","isCreatingDocument","_createdAt","notCurrentReleases","currentReleases","inCreation","reduce","acc","versionDocExists","historyVersion","archivedRelease","r","useDocumentIdStack","editState","filteredReleases","systemStack","flat","releaseStack","stack","concat","position","findIndex","previousId","nextId","useStructureTool","structureTool","StructureToolContext","DOCUMENT_PANEL_MIN_WIDTH","DOCUMENT_PANEL_INITIAL_MIN_WIDTH","DOCUMENT_INSPECTOR_MIN_WIDTH","DOCUMENT_INSPECTOR_MAX_WIDTH","EMPTY_PARAMS","INSPECT_ACTION_PREFIX","DEFAULT_MENU_ITEM_GROUPS","HISTORY_INSPECTOR_NAME","VALIDATION_INSPECTOR_NAME","DocumentInspectorMenuItemsResolver","inspectors","onMenuItems","menuItems","setMenuItems","newFieldActions","setMenuItem","prev","InspectorMenuItems","useMenuItem","defineInspectorMenuItemComponent","InspectorMenuItem","menuItem","useUnique","useDocumentTitle","isDeleted","lastRevisionDocument","documentValue","subscribed","prepareForPreview","deletedDocumentPreview","error_0","useValuePreview","IGNORE_OPS","DocumentOperationResults","pushToast","documentPaneValue","documentTitleInfo","titleError","useDocumentOperationEvent","prevEvent","paneRouter","op","documentTitleBase","slice","documentTitle","cleanupId","closable","duration","context","Strong","closeCurrentAndAfter","isLiveEditEnabled","liveEdit","hasObsoleteDraft","workspace","draftExists","mustChooseNewDocumentDestination","isSelectedPerspectiveWriteable","isNewDocument","zIndex","lineHeight","DocumentInspectorHeader","closeButtonLabel","forwardedAs","onClose","DocumentInspectorPanel","closeInspector","features","handleClose","Component","component","resizablePanes","STRUCTURE_TOOL_NAMESPACE","useStructureToolSetting","namespace","defaultValue","keyValueStore","useKeyValueStore","keyValueStoreKey","getKey","value_0","useObservable","newValue","setKey","VIEW_MODE_PARSED","VIEW_MODE_RAW","VIEW_MODES","lru","LRU","maxSize","isExpanded","keyPath","cached","isArray","isRecord","toggleExpanded","selectElement","sel","getSelection","range","createRange","removeAllRanges","selectNodeContents","addRange","select","currentTarget","maybeSelectAll","keyCode","metaKey","ctrlKey","isDocumentLike","isString","_type","JSONInspectorWrapper","fonts","space","code","family","sizes","fontSize","rem","syntax","property","constant","string","boolean","number","Search","query","target","handleChange","SearchIcon","InspectDialog","onInspectClose","dialogIdPrefix","viewModeId","onViewModeChange","viewMode","setParsedViewMode","setRawViewMode","DocumentTitle","bottom","outline","ignoreCase","JSON","stringify","Banner","Icon","action","rest","paddingY","DeletedDocumentBanners","isDeleting","selectedPerspective","isPublishedPerspective","isDraftPerspective","DeletedDocumentBanner","restore","useDocumentOperation","navigateIntent","execute","handleRestore","ReadOnlyIcon","ArchivedReleaseBanner","DocumentRemoveIcon","DeprecatedDocumentTypeBanner","isDeprecatedSchemaType","deprecated","ErrorOutlineIcon","AskToEditDialogOpened","defineEvent","AskToEditRequestSent","MAX_NOTE_LENGTH","DialogBody","Box","attrs","align","direction","justify","RequestPermissionDialog","onRequestSubmitted","telemtry","useTelemetry","dialogId","projectId","useProjectId","apiVersion","client","useClient","zOffset","useZIndex","isSubmitting","setIsSubmitting","note","setNote","msgError","setMsgError","hasTooManyRequests","setHasTooManyRequests","hasBeenDenied","setHasBeenDenied","adminRole","observable","roles","request","url","startWith","catchError","requestedRole","method","body","requestUrl","then","log","catch","err","statusCode","response","errMessage","finally","onSubmit","fullscreen","cancelButton","confirmButton","role_0","appliesToUsers","LOADING_STATE","EMPTY_STATE","DECLINED_STATE","PENDING_STATE","EXPIRED_STATE","useRoleRequestsStatus","checkRoleRequests","checkRoleRequests$","tag","requests","projectRequests","resourceId","declinedRequest","isAfter","addWeeks","Date","createdAt","isBefore","InsufficientPermissionBanner","requiredPermission","currentUser","useCurrentUser","roleRequestStatus","requestStatusLoading","requestStatusError","requestSent","setRequestSent","requestPending","currentUserRoles","isOnlyViewer","showRequestPermissionDialog","setShowRequestPermissionDialog","listFormat","useListFormat","telemetry","roleTitles","formatToParts","Roles","count","part","ReferenceChangedBanner","documentPreviewStore","useDocumentPreviewStore","groupIndex","routerPanesState","replaceCurrent","BackLink","routerReferenceId","parentSibling","parentId","hasHistoryOpen","rev","parentRefPath","pathFromString","referenceInfoObservable","parentRefPathSegment","publishedId","keyedSegmentIndex","unstable_observePathsDocumentPair","debounceTime","availability","pathGet","snapshot","_ref","referenceInfo","handleReloadReference","available","SyncIcon","WarningOutlineIcon","ArchivedReleaseDocumentBanner","handleGoBack","historyEvent","since","VersionBadge","getVersionInlineBadge","Image","img","CANVAS_IMAGE_URL","CANVAS_APP_NAME","CanvasPopoverContent","useClickOutsideEvent","LaunchIcon","CanvasLinkedBannerContent","open","setOpen","documentVariantType","getDocumentVariantType","variantText","togglePopover","InfoOutlineIcon","CanvasLinkedBanner","companionDoc","useCanvasCompanionDoc","navigateToCanvas","useNavigateToCanvasDoc","canvasDocumentId","ChooseNewDocumentDestinationBanner","perspective","isPerspectiveWriteable","menuItemProps","CreateLinkedBanner","documentLinkedBannerContent","CreateLinkedBannerContent","useSanityCreateConfig","getSanityCreateLinkMetadata","createLinkMetadata","TOAST_DELAY","DocumentNotInReleaseBanner","currentRelease","isScheduledRelease","LATEST","createVersion","useVersionOperations","versionCreateState","setVersionCreateState","handleAddToRelease","lastUpdate","now","useCurrentTime","useConditionalToast","getTime","updateIntervalMs","currentTime","setCurrentTime","intervalId","setInterval","clearInterval","ResolvedLiveEdit","ObsoleteDraftBanner","i18nKey","isEditBlocking","isPublishing","setPublishing","isDiscarding","setDiscarding","publish","discardChanges","liveEditResolveType","handlePublish","handleDiscard","diffViewRouter","compareDraft","OpenReleaseToEditBanner","isPinnedDraftOrPublished","onlyHasVersions","useOnlyHasVersions","OpenReleaseToEditBannerInner","setPerspective","useSetPerspective","currentVersion","documentVersionsTitleList","handleGoToEdit","RevisionNotFoundBanner","revisionNotFound","ScheduledReleaseBanner","date","LockIcon","UnpublishedDocumentBanner","isCurrentVersionGoingToUnpublish","isGoingToUnpublish","UnpublishIcon","TitleContainer","Stack","heading","FormHeader","isSingleton","__experimental_formPreviewTitle","ev","FormView","margins","fieldActions","openPath","documentStore","useDocumentStore","useDocumentPresence","isLocked","transactionSyncLock","pair","documentEvents","tap","prepareMutationEvent","prepareRebaseEvent","hasRev","_rev","patches","handleInitialValue","useEffectEvent","formRef","setFormRef","focusedFirstDescendant","setFocusedFirstDescendant","focusFirstDescendant","isReadOnly","readOnly","mutations","mut","patch","fromMutationPatches","remotePatches","remoteMutations","localPatches","localMutations","DocumentHeaderTabs","activeViewId","views","tabPanelId","view","DocumentHeaderTab","label","viewId","setView","DocumentHeaderTitle","FavoriteToggle","documentExists","isFavorited","isReady","favorite","unfavorite","useManageFavorite","DocumentPanelSubHeader","activeWorkspace","useActiveWorkspace","publishedDocId","showTabs","showBackButton","ArrowLeftIcon","dataset","favoriteToggle","DocumentBox","ScrollContainer","$disabled","DocumentPanel","footerHeight","headerHeight","isInspectOpen","setDocumentPanelPortalElement","footer","permissions","isPermissionsLoading","isSanityCreateLinked","showCreateBanner","parentPortal","usePortal","_portalElement","documentScrollElement","setDocumentScrollElement","formContainerElement","activeView","splitPanes","formViewHidden","ActiveViewComponent","historical","activeViewNode","scrollTo","inspectDialog","showInspector","documentInScheduledRelease","isSystemBundle","isPinnedDraftOrPublish","displayedHasObsoleteDraft","granted","banners","showFormView","isMenuNodeButton","renderAsButton","isNotMenuNodeButton","negate","resolveMenuNodes","menuItemGroups","keyOffset","mapFieldActionToPaneMenuNode","itemGroup","g","i18n","ungroupedItems","item","group","shortcut","actionHandler","showAsAction","childIdx","_DEBUG","Object","freeze","LOADING_PANE","DOCUMENT_PANEL_PORTAL_ELEMENT","POPOVER_FALLBACK_PLACEMENTS","DIALOG_WIDTH_TO_UI_WIDTH","small","medium","large","full","ConfirmDialog","dialog","referenceElement","Popover","ConfirmDialogContent","cancelButtonIcon","cancelButtonText","confirmButtonIcon","confirmButtonText","onCancel","onConfirm","isTopLayer","useLayer","useGlobalKeyDown","borderTop","Grid","ModalDialog","showCloseButton","Dialog","PopoverDialog","PopoverDialogContent","DocumentActionPortalProvider","ActionStateDialog","modalId","unknownModal","ActionDialogWrapper","actionStates","actionIndex","setActionIndex","currentAction","handleAction","ActionMenuButton","idPrefix","setReferenceElement","preventOverflow","popoverProps","actionState","renderActionDialog","ActionMenuListItem","onHandle","String","replace","tooltipProps","s","toUpperCase","DISABLED_REASON_TITLE_KEY","NOTHING_TO_DELETE","NOT_READY","DeleteAction","onComplete","setIsDeleting","paneSetIsDeleting","deleteOp","isConfirmDialogOpen","setConfirmDialogOpen","handleCancel","handleConfirm","handle","permission","useDocumentPairPermissions","TrashIcon","ConfirmDeleteDialog","DISABLED_REASON_KEY","NO_CHANGES","NOT_PUBLISHED","DiscardChangesAction","isPublished","ResetIcon","NOTHING_TO_DUPLICATE","DuplicateAction","mapDocument","duplicate","isDuplicating","setDuplicating","dupeId","uuid","duplicateSuccess","firstValueFrom","operationEvents","CopyIcon","HistoryRestoreAction","revision","isRevisionInitial","isRevisionLatest","RevertIcon","DocumentPublished","LIVE_EDIT_ENABLED","ALREADY_PUBLISHED","PUBLISHED_STATE","publishedAt","AlreadyPublished","useTemporalPhrase","timeSincePublished","useRelativeTime","PublishAction","publishState","setPublishState","validationStatus","useValidationStatus","syncState","useSyncState","changesOpen","isValidationErrorMarker","hasValidationErrors","publishScheduled","setPublishScheduled","isSyncing","isValidating","_updatedAt","currentPublishRevision","publishRevision","doPublish","validationComplete","didPublish","nextState","timer","publishedImmediately","previouslyPublished","PublishIcon","UnpublishAction","unpublish","isDraft","DocumentStatusBarActionsInner","states","__internal_tasks","useSource","firstActionState","menuActionStates","buttonElement","setButtonElement","marginTop","marginBottom","showFirstActionButton","isSanityDefinedAction","sideMenuItems","footerAction","DocumentStatusBarActions","allActions","isInitialValueLoading","initialValueResolved","actionProps","renderDocumentStatusBarActions","HistoryStatusBarActions","revisionId","isRestoreAction","historyActions","toLowerCase","useChipScrollPosition","containerRef","showGradient","setShowGradient","checkOverflow","container","scrollWidth","clientWidth","scrollLeft","isAtEnd","setupObservers","container_0","intersectionObserver","mutationObserver","IntersectionObserver","entries","entry","isIntersecting","updateLastChipObserver","disconnect","lastChip","observe","MutationObserver","childList","subtree","intersectionObserver_0","mutationObserver_0","TooltipContent","intendedPublishAt","DATE_TIME_FORMAT","dateStyle","timeStyle","DocumentPerspectiveList","dateTimeFormat","useDateTimeFormat","schema","useSchema","handlePerspectiveChange","isLiveEdit","isPublishedChipDisabled","getReleaseChipState","isReleaseHistoryMatch","isPublishSelected","isDraftSelected","displayedId","isDraftDisabled","format","menuReleaseId","releasesLoading","fromRelease","isVersion","releaseState","HorizontalScroller","getTheme_v2","$showGradient","rgba","DocumentPanelHeader","_props","onMenuAction","onPaneClose","onPaneSplit","unstable_languageFilter","hasGroupSiblings","useFieldActions","scrollContainerRef","menuNodes","menuButtonNodes","contextMenuNodes","showSplitPaneButton","splitViews","showSplitPaneCloseButton","showPaneGroupCloseButton","renderPaneActions","renderedActions","LanguageFilterComponent","SplitVerticalIcon","DocumentPanelHeaderActionDialogDeferred","useDeferredValue","DocumentPanelHeaderActionDialog","SpacerButton","size","pointerEvents","visibility","BADGE_TONES","primary","success","warning","danger","DocumentBadgesInner","DocumentBadgesDeferred","DocumentBadges","badges","renderDocumentBadges","badge","whiteSpace","TIMELINE_ICON_COMPONENTS","create","AddIcon","discardDraft","initial","editDraft","EditIcon","editLive","getTimelineEventIconComponent","hideScrollbarOnExpand","listWrapper","getElementById","TIMELINE_LIST_WRAPPER_ID","firstChildren","scrollHeight","clientHeight","currentStyle","getComputedStyle","overflowY","FlipIcon","ChevronLeftIcon","ExpandableTimelineItemButton","stopPropagation","handleExpandClick","StackWrapper","ListWrapper","$maxHeight","$visible","TIMELINE_ITEM_I18N_KEY_MAPPING","UserAvatarStack","maxLength","userIds","withTooltip","userId","IconBox","$color","avatar","TIMELINE_ITEM_EVENT_TONE","withinSelection","RELATIVE_TIME_OPTIONS","minimal","NameSkeleton","Skeleton","font","UserLine","user","useUser","collaborators","TimelineItem","chunk","optionsMenu","endTimestamp","timestamp","IconComponent","authors","authorUserIds","collaboratorsUsersIds","isSelectable","dateFormat","updatedTimeAgo","parsedDate","formattedTimestamp","evt","isNonPublishChunk","isPublishChunk","getPreviousPublishAction","chunks","previousPublish","addChunksMetadata","forEach","Timeline","hasMoreChunks","lastChunk","selectedChunk","onLoadMore","listMaxHeight","selectedChunkId","chunksWithMetadata","expandedParents","setExpandedParents","filteredChunks","handleExpandParent","selectedIndex","handleSelectChunk","timelineChunk","c","renderItem","activeIndex","TimelineError","versionError","TIMELINE_MENU_PORTAL","TimelineMenu","setTimelineRange","timelineError","timelineStore","button","setButton","popoverRef","setPopoverRef","useTimelineSelector","realRevChunk","sinceTime","handleOpen","handleGlobalKeyDown","focus","selectRev","revChunk","sinceId","revId","findRangeForRev","selectSince","sinceChunk","findRangeForSince","handleLoadMore","loadMore","formatParams","revLabel","sinceLabel","buttonLabel","ChevronDownIcon","StyledMotionPath","motion","Circle","Arrows","Checkmark","rotateAnimation","keyframes","RotateGroup","root","syncing","scale","transition","saved","changes","circle","strokeDasharray","strokeDashoffset","opacity","arrows","checkmark","pathLength","AnimatedStatusIcon","STATUS_DICTIONARY","DocumentStatusPulse","currentStatus","MotionButton","MotionBox","ButtonSkeleton","margin","DocumentStatusButton","author","translationKey","onHistoryOpen","onHistoryClose","relativeTime","FallbackStatus","createDocumentVersion","editDocumentVersion","EventsStatus","events","useEvents","TimelineStatus","TIMELINE_ITEM_I18N_KEY_MAPPING_LEGACY","SYNCING_TIMEOUT","SAVED_TIMEOUT","DocumentStatusLine","setStatus","eventsEnabled","beta","eventsAPI","lastUpdated","timerId","timerId_0","StatusText","RevisionStatusLine","useResizeObserver","onResize","resizeObserver","unobserve","CONTAINER_BREAKPOINT","AnimatedCard","DocumentStatusBar","actionsBoxRef","onDocumentChange","CreateLinkedActions","documentLinkedActions","showingRevision","setCollapsed","contentRect","handleResize","shouldRender","flexShrink","marginLeft","KeyboardShortcutResponder","actionsBoxElement","onActionStart","onKeyDown","rootRef","As","activeAction","matchingStates","isHotkey","matchingState","handleKeyDown","DocumentActionShortcuts","setActiveIndex","renderDocumentActionShortcuts","getInspectorItems","currentInspector","hasValue","inspectorMenuItems","getInspectItem","JsonIcon","getCompareVersionsItem","documentIdStack","TransferIcon","getProductionPreviewItem","previewUrl","EarthAmericasIcon","getMenuItems","inspectorItems","items","LinkIcon","DocumentLayoutError","DIALOG_PROVIDER_POSITION","DocumentLayoutFooter","documentPanelPortalElement","setFooterElement","setActionsBoxElement","zOffsets","portalElements","EMPTY_ARRAY","StyledChangeConnectorRoot","ChangeConnectorRoot","inspectOpen","paneParams","footerElement","headerElement","setHeaderElement","useGlobalCopyPasteElementHandler","setInspectorMenuItems","rootFieldActionNodes","setRootFieldActionNodes","footerRect","headerRect","handleKeyUp","onConnectorSetFocus","paneDialog","changesInspectorTab","useDocumentLayoutComponent","useDocumentLastRev","historyStore","useHistoryStore","setLastRevisionDocument","setLoading","useTimelineStore","lastNonDeletedRevId","getDocumentAtRevision","DocumentURLCopied","getInitialValueTemplateOpts","templates","opts","payload","panePayload","structureNodeTemplate","templateName","urlTemplate","template","typeTemplates","templateParams","useDocumentPaneInitialValue","paneOptions","useTemplates","templateParameters","initialValueRaw","useInitialValue","useDocumentPaneInspector","inspectorsResolver","inspectorName","setInspectorName","inspectParamRef","historyInspector","closeInspectorName","nextInspectorName","nextInspector","currentParams","onOpen","handleHistoryClose","handleHistoryOpen","reviewChanges","toggleLegacyInspect","toggle","handleLegacyInspectClose","handleInspectorAction","isSanityDocument","usePreviewUrl","resolveProductionUrl","BehaviorSubject","subject","asObservable","switchMap","DocumentPaneProvider","onFocusPath","forcedVersion","store","timelineReady","revisionDocument","onOlderRevision","sinceDocument","isPristine","setDocumentMeta","useCopyPaste","documentActions","documentBadges","unstable_fieldActions","fieldActionsResolver","languageFilterResolver","draftsEnabled","setPaneParams","viewsProp","documentIdRaw","buildStudioUrl","initialValue","getIsDeleted","getComparisonValue","getIsReadOnly","getDisplayed","formReady","formStateRef","initialFocusPath","getFormDocumentValue","getDocumentVersionType","actionsPerspective","documentActionsProps","versionType","languageFilter","newSince","newRev","handlePaneClose","closeCurrent","handlePaneSplit","duplicateCurrent","handleMenuAction","navigator","copyUrl","coreUi","clipboard","writeText","startsWith","currentDisplayed","pathRef","restParams","pathFromUrl","resolveKeyedPath","DocumentEventsPane","usePaneOptions","showingPublishedOnDraft","eventsStore","useEventsStore","sinceRevision","historyStoreProps","isDeleteDocumentGroupEvent","isDeleteDocumentVersionEvent","DocumentPaneWithLegacyTimelineStore","setTimelineError","onError","revTime","sinceAttributes","_temp3","timelineDisplayed","_temp4","_temp5","_temp6","_temp7","state_1","state_2","state_3","state_4","state_5","DocumentPaneProviderWrapper","useResetHistoryParams","isMounted","_perspective","preserveRev","updateHistoryParams","DocumentPane","parentSourceName","DocumentPaneInner","resolveNewDocumentOptions","isLoaded","isDocumentLoaded","useDocumentType","templateItems","templatePermissions","isTemplatePermissionsLoading","useTemplatePermissions","mergeDocumentType","providerProps","ReferenceChildLink","handleEditReference","childParams","routerPanesStateLength","activePath","Code","ChildLink","childId","childParameters","childPayload","ParameterizedLink","currentPanes","siblingIndex","nextParams","nextPayload","currentGroup","currentSibling","nextSibling","nextGroup","pathToString","emptyArray","PaneRouterProvider","flatIndex","resolvePathFromState","useRouterState","routerPaneGroups","lastPane","modifier","currentItem","nextPanes","createNextRouterState","modifier_0","nextRouterState_0","nextRouterState","modifyCurrentGroup","nextRouterState_1","siblings","createPathWithParams","siblings_0","item_0","setPayload","nextParams_0","siblings_1","item_1","siblings_3","item_3","duplicatedItem","omit","groupLength","ctx","siblings_2","item_2","sibling","UnknownPane","paneMap","lazy","documentList","list","StructureToolPane","active","childItemId","itemId","PaneComponent","prevParams","prevPayload","isEqual","keys","DocTitle","ChevronWrapper","CrossDatasetReferencesDetails","details","CrossDatasetReferencesSummary","summary","Table","table","DocumentIdFlex","OtherReferenceCount","difference","totalCount","references","PaneItemPreview","layout","versionsInfo","useDocumentVersionInfo","perspectiveStack","getPreviewStateObservable","previewStateObservable","previewIsLoading","versions","tooltip","getPreviewValueWithFallback","fallback","ReferencePreviewLink","documentPresence","linkProps","ConfirmDeleteDialogBody","crossDatasetReferences","internalReferences","datasetNames","hasUnknownDatasetNames","onReferenceLinkClick","renderPreviewItem","normalizedDatasetNames","datasets","datasetSubtitle","documentCount","datasetName","reference","isClientError","POLL_INTERVAL","visiblePoll$","getVisiblePoll$","fromEvent","visibilityState","visible","EMPTY","shareReplay","refCount","bufferSize","getDocumentExistence","versionedClient","draftId","requestOptions","uri","getDataUrl","json","excludeContent","omitted","nonExistant","doc","fetchCrossDatasetReferences","checkDocumentId","currentDataset","config","useInternalReferences","createHookFromObservableFactory","listenQuery","fetch","listen","transitions","throttleTime","useCrossDatasetReferences","useReferringDocuments","DEFAULT_STUDIO_CLIENT_OPTIONS","isInternalReferencesLoading","isCrossDatasetReferencesLoading","projectIds","crossDatasetReference_1","crossDatasetReference","crossDatasetReference_0","LoadingContainer","showConfirmButton","ConfirmDeleteDialogContainer","setError","handleRetry","IntentButton","linkRef","InsufficientPermissionsMessageTooltip","reveal","POPOVER_PROPS","getIntent","typeName","templateId","baseParams","initialDocumentId","parameters","PaneHeaderCreateButton","nothingGranted","every","permissionsById","firstItem","itemIndex","disabled_0","intent_0","permission_0","isNonNullable","hashObject","sortObject","v","keyA","keyB","localeCompare","parse","PaneHeaderActions","initialValueTemplateItems","initialValueTemplateItemsFromStructure","actionHandlers","EMPTY_OBJECT","handler","actionNodes","initialValueTemplateItemFromMenuItems","menuItemIndex","intentParams","combinedInitialValueTemplates","uniqBy","MissingSchemaType","getIconWithFallback","defaultIcon","PaneItem","pressed","hasSchemaType","clicked","setClicked","DocumentIcon","FolderIcon","preview","preloading","setPreload","timeoutRef","startTransition","handleMouseEnter","handleMouseLeave","PreloadDocumentPane","RenderActionCollectionState","onActionComplete","liveEditSchemaType","SUPPORTED_LINKED_TO_CANVAS_ACTIONS","ActionsGuardWrapper","isLinked","RenderBadgeCollectionState","badgeProps","PARTIAL_PAGE_LIMIT","FULL_LIST_LIMIT","DEFAULT_ORDERING","by","field","EMPTY_RECORD","RootBox","$opacity","CommandListBox","SKELETON_ITEMS","LoadingView","num","DocumentListPaneContent","isRetrying","autoRetry","filterIsSimpleTypeConstraint","hasMaxItems","hasSearchQuery","isLazyLoading","muted","isConnected","retryCount","canRetry","loadingVariant","onEndReached","onRetry","paneTitle","searchInputElement","showIcons","setShouldRender","handleEndReached","isLastItem","showSpinner","showMaxItemsMessage","limit","noDocumentsContent","isOnline","onLine","mainContent","removePublishedWithDrafts","collate","hasDraft","hasPublished","applyOrderingFunctions","order","orderBy","mapWith","fieldType","tryResolveSchemaTypeForPath","fieldExtendsType","jsonType","baseType","pathSegments","PathUtils","fromString","segment","getFieldTypeByName","isKeySegment","isIndexSegment","memberType","otherType","isReferenceSchemaType","refType","otherRefType","to","fieldName","fields","ofType","findTypes","base","types","isSplat","findStaticTypesInFilter","swr","createSWR","listenSearchQuery","groqFilter","searchQuery","staticTypeNames","maxFieldDepth","searchStrategy","sortBy","extendedProjection","events$","defer","includeAllVersions","includeResult","mergeMap","isFirst","throwError","share","welcome$","mutationAndReconnect$","partition","swrKey","fiilter","asyncScheduler","leading","trailing","exhaustMapWithTrailing","typeNames","getSearchableTypes","getExtendedProjection","search","createSearch","strategy","maxDepth","doFetch","__unstable_extendedProjection","comments","skipSortByScore","hits","hit","scan","connected","fromCache","INITIAL_QUERY_STATE","isLoadingFullList","isRetriableError","ChannelError","ServerError","ClientError","useDocumentList","searchFilter","paramsProp","sortOrder","useSearchMaxFieldDepth","typeNameFromFilter","onRetry$","observableCallback","onFetchFullList$","onLoadFullList","queryResults$","listenSearchQueryArgs","partialList$","fullList$","withLatestFrom","take","takeUntil","catchWithCount","lastError","caught$","safeError","retries","NEVER","retrying","nonErrorThrownWarning","thrown","rotate","fadeIn","AnimatedSpinnerIcon","SpinnerIcon","SubtleSpinnerIcon","DelayedSubtleSpinnerIcon","DocumentListPane","sortOrderRaw","displayOptions","useShallowUnique","staticTypes","setSearchQuery","searchInputValue","setSearchInputValue","setSearchInputElement","sortWithOrderingFn","documentListIsLoading","trim","handleQueryChange","useObservableEvent","event$","debounce","handleClearSearch","handleSearchKeyDown","enableSearchSpinner","setEnableSearchSpinner","textInputIcon","useReconnectingToast","initialValueTemplates","setLayout","setSortOrder","StructurePaneHeader","DocumentSheetListSelect","row","selectedAnchor","setSelectedAnchor","meta","handleOnClick","shiftKey","shiftClickIndex","lowerIndex","upperIndex","additionalSelectedRows","getRowModel","flatRows","currentSelectedRows","getSelectedRowModel","rows","setRowSelection","nextSelectedRows","rowId","isRowCurrentlySelected","getIsSelected","toggleSelected","paddingLeft","getCanSelect","useDocumentSheetListContext","DocumentSheetListContext","DocumentSheetListProvider","selectedAnchorCellDetails","setSelectedAnchorCellDetails","selectedRangeCellIndexes","setSelectedRangeCellIndexes","clearAndSetFocusSelection","nextAnchorDetails","activeElement","HTMLElement","blur","resetFocusSelection","changeSelectionColumn","visibleColumns","getVisibleLeafColumns","columnIndexAfterMove","col","colId","rowIndex","changeSelectionRange","previousSelection","anchorIndex","getNextIndex","startingIndex","firstSelectedIndex","lastIndexSelected","nextIndex","setSelectedAnchorCell","handleEscapePress","nextAnchorCellDetails","handleUpDownKey","isShiftKey","offset","newSelectedCellRowIndex","handleAnchorKeydown","handleAnchorClick","contains","focusAnchorCell","anchorCellDetails","getStateByCellId","submitFocusedCell","DataCell","td","PinnedDataCell","SheetListCellInner","getValue","column","cellId","renderValue","setRenderValue","isDirty","setIsDirty","inputRef","cellState","handleOnFocus","patchDocument","handleProgrammaticFocus","HTMLInputElement","handleOnMouseDown","detail","handleOnEnterDown","handleOnChange","handleOnBlur","handlePaste","clipboardData","getData","handleCopy","toString","getBorderStyle","inputProps","boxShadow","SheetListCell","cell","isPinned","getIsPinned","Cell","borderWidth","getIsLastColumn","getStart","borderRight","getSize","flexRender","columnDef","getContext","VISIBLE_COLUMN_LIMIT","PreviewCell","displayValue","columnHelper","createColumnHelper","SUPPORTED_FIELDS","getColsFromSchemaType","parentalField","tableColumns","nextCol","accessor","enableHiding","info","isObjectSchemaType","columns","isAccessorKeyColumnDef","isGroupColumnDef","flatColumns","cols","useDocumentSheetColumns","documentSchemaType","display","getIsSomeRowsSelected","getToggleAllPageRowsSelectedHandler","initialColumnsVisibility","accCols","countAllowedVisible","visibilityKey","ColumnsControl","isVisibleLimitReached","getCanHide","setInitialColumns","resetColumnVisibility","handleColumnOnChange","toggleVisibility","getColumnVisibilityDisabled","isColumnVisible","getIsVisible","isSingleColumnVisible","maxHeight","getAllLeafColumns","SearchContainer","DocumentSheetListFilter","useSearchState","filtersVisible","Header","th","PinnedHeader","HoverMenu","DocumentSheetListHeader","headerGroup","headerTitle","depth","parent","HeaderTag","canShowHeaderMenu","boxSizing","EllipsisHorizontalIcon","DocumentSheetListPaginator","setPageIndex","getCanPreviousPage","DoubleChevronLeftIcon","previousPage","getState","pagination","pageIndex","getPageCount","nextPage","getCanNextPage","ChevronRightIcon","DoubleChevronRightIcon","pageSize","setPageSize","Number","createDocumentsSet","documentsReducer","nextDocumentResult","_","restDocuments","updatedDocument","LISTEN_OPTIONS","useDocumentSheetListStore","QUERY","dispatch","useReducer","setIsLoading","res","initialFetch","handleListenerEvent","err_0","listener$","uniques","values","dataAsArray","useDocumentSheetList","h","PaneContainer","TableContainer","DocumentSheetListPaneInner","totalRows","useReactTable","getCoreRowModel","getFilteredRowModel","getPaginationRowModel","autoResetPageIndex","initialState","columnPinning","columnVisibility","getRowId","fieldId","renderRow","getVisibleCells","rowsCount","getHeaderGroups","headers","DocumentSheetListPane","schemaTypeName","isDocumentSchemaType","addSelectedStateToMenuItems","setPrevious","shallowEquals","defaultLayout","defaultOrdering","sourceName","defaultSortOrder","menuItemsWithSelectedState","isSheetListLayout","LiveEditBadge","activePanes","setActivePanes","getIntentState","editDocumentId","canHandleIntent","getPaneParams","ChangesInspector","showChanges","scrollRef","setScrollRef","diff","selectionState","isComparingCurrent","structureT","FieldWrapper","rootDiff","showFromValue","documentContext","getIsSelectable","isUnpublishDocumentEvent","isScheduleDocumentVersionEvent","isUnscheduleDocumentVersionEvent","EventTimelineItem","cursor","PublishedEventMenu","portalContext","versionId","versionRevisionId","handleOpenReleaseDocument","handleOpenDraftDocument","isMenuDisabled","RELEASES_INTENT","textDecoration","children_0","releaseTitle","children_1","fallbackPlacements","children_2","TimelineItemWrapper","CHILDREN_ITEMS_VARIANTS","animate","exit","ITEM_HEIGHT","EventsTimeline","allEvents","hasMoreEvents","selectedEventId","fetchEventChildren","selectedEvent","expandingParents","setExpandingParents","isCreateDocumentVersionEvent","isEditDocumentVersionEvent","isExpanding","renderOptionsMenu","isPublishDocumentVersionEvent","creationEvent","showExpandingLoader","isLastEvent","EventsTimelineMenu","nextCursor","eventsError","findRangeForRevision","loadMoreEvents","expandEvent","revEvent","sinceEvent","SpinnerContainer","DIFF_INITIAL_VALUE","CompareWithPublishedView","diffInput","wrap","EventsInspector","getChangesList","changesList$","diffLoading","diffError","toEvent","sinceEvents","sameRevisionSelected","SameRevisionSelected","EventsSelector","showList","listHeight","setListHeight","getScrollerRef","initialLoad","HistorySelector","FadeInFlex","TABS","isValidTab","tab","ChangesTabs","parentRef","setParentRef","paneRouterTab","setPaneRouterTab","t26","t27","t28","t29","t30","t31","changesInspector","RestoreIcon","getPathTitles","f","itemType","_key","MARKER_ICON","MARKER_TONE","ValidationInspector","isVersionGoingToUnpublish","marker","ValidationCard","errorInfo","setErrorInfo","level","DocumentNodePathBreadcrumbs","pathTitles","Fragment","fontWeight","validationMarkers","hasErrors","isValidationError","hasWarnings","isValidationWarning","isDocumentGoingToUnpublish","CheckmarkCircleIcon","validationInspector","legacyEditParamsToState","decodeURIComponent","encodePanesSegment","encodeChunks","encodeURIComponent","legacyEditParamsToPath","toState","pathSegment","parsePanesSegment","toPath","router","route","intents","transform","panePattern","isParam","test","isPayloadLike","exclusiveParams","isTruthy","parseChunks","tryParseBase64Payload","firstSibling","paneIsFirstSibling","sameAsFirst","encodedPayload","encodeJsonParams","encodedParams","valueFromFirstSibling","parseOldPanesSegment","restOfSiblings","buffer","match","payloadChunk","tryParsePayload","decodeJsonParams","definePlugin","MasterDetailIcon","prevActions","prevBadges","prevInspectors","tools","canHandleCreateIntent","canHandleEditIntent","controlsDocumentTitle","__internalApplicationType","bundles","structureUsEnglishLocaleBundle"],"mappings":"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"}