{"version":3,"file":"pane.mjs","sources":["../../src/structure/diffView/hooks/useCreatePathSyncChannel.ts","../../src/structure/diffView/constants.ts","../../src/structure/diffView/hooks/useDiffViewRouter.ts","../../src/structure/diffView/types/diffViewMode.ts","../../src/structure/diffView/hooks/useDiffViewState.ts","../../src/structure/diffView/hooks/useScrollMirror.tsx","../../src/structure/diffView/utils/findRelease.ts","../../src/structure/diffView/versionMode/components/VersionModeHeader.tsx","../../src/structure/diffView/components/DialogLayout.ts","../../src/structure/panes/document/document-layout/pickDocumentLayoutComponent.ts","../../src/structure/diffView/hooks/usePathSyncChannel.ts","../../src/structure/diffView/components/Scroller.ts","../../src/structure/diffView/components/DiffViewPane.tsx","../../src/structure/diffView/components/EditReferenceLinkComponent.tsx","../../src/structure/diffView/components/DiffView.tsx","../../src/structure/diffView/plugin/DiffViewDocumentLayout.tsx","../../src/structure/components/pane/constants.ts","../../src/structure/components/pane/usePaneLayout.ts","../../src/structure/components/pane/PaneDivider.tsx","../../src/structure/components/pane/Pane.tsx","../../src/structure/components/pane/PaneContent.styles.tsx","../../src/structure/components/pane/usePane.ts","../../src/structure/components/pane/PaneContent.tsx","../../src/structure/util/toLowerCaseNoSpaces.tsx","../../src/structure/components/pane/PaneMenuButtonItem.tsx","../../src/structure/components/pane/PaneContextMenuButton.tsx","../../src/structure/components/pane/PaneFooter.styles.tsx","../../src/structure/components/pane/PaneFooter.tsx","../../src/structure/components/pane/PaneHeader.styles.tsx","../../src/structure/components/pane/PaneHeader.tsx","../../src/structure/components/pane/PaneHeaderActionButton.tsx","../../src/structure/components/pane/PaneLayout.styles.tsx","../../src/structure/components/pane/helpers/_calcPaneResize.ts","../../src/structure/components/pane/helpers/_getDOMPath.ts","../../src/structure/components/pane/helpers/_sortElements.ts","../../src/structure/components/pane/paneLayoutController.ts","../../src/structure/components/pane/PaneLayout.tsx","../../src/structure/panes/error/ErrorPane.tsx","../../src/structure/components/Delay.tsx","../../src/structure/panes/loading/getWaitMessages.ts","../../src/structure/panes/loading/LoadingPane.tsx","../../src/structure/panes/document/useDocumentPane.tsx","../../src/structure/panes/document/comments/CommentsWrapper.tsx","../../src/structure/components/paneRouter/usePaneRouter.ts","../../src/structure/hooks/useFilteredReleases.ts","../../src/structure/hooks/useDocumentIdStack.ts","../../src/structure/useStructureTool.ts","../../src/structure/panes/document/constants.ts","../../src/structure/panes/document/DocumentInspectorMenuItemsResolver.tsx","../../src/structure/panes/document/useDocumentTitle.ts","../../src/structure/panes/document/DocumentOperationResults.tsx","../../src/structure/components/paneItem/helpers.tsx","../../src/structure/hasObsoleteDraft.ts","../../src/structure/mustChooseNewDocumentDestination.ts","../../src/structure/panes/document/documentInspector/DocumentInspectorHeader.tsx","../../src/structure/panes/document/documentInspector/DocumentInspectorPanel.tsx","../../src/structure/useStructureToolSetting.ts","../../src/structure/panes/document/inspectDialog/constants.ts","../../src/structure/panes/document/inspectDialog/helpers.ts","../../src/structure/panes/document/inspectDialog/InspectDialog.styles.tsx","../../src/structure/panes/document/inspectDialog/Search.tsx","../../src/structure/panes/document/inspectDialog/InspectDialog.tsx","../../src/structure/panes/document/documentPanel/banners/Banner.tsx","../../src/structure/panes/document/documentPanel/banners/DeletedDocumentBanners.tsx","../../src/structure/panes/document/documentPanel/banners/DeprecatedDocumentTypeBanner.tsx","../../src/structure/components/requestPermissionDialog/__telemetry__/RequestPermissionDialog.telemetry.ts","../../src/structure/components/requestPermissionDialog/RequestPermissionDialog.tsx","../../src/structure/components/requestPermissionDialog/useRoleRequestsStatus.tsx","../../src/structure/panes/document/documentPanel/banners/InsufficientPermissionBanner.tsx","../../src/structure/panes/document/documentPanel/banners/ReferenceChangedBanner.tsx","../../src/structure/panes/document/documentPanel/banners/ScheduledDraftOverrideBanner.tsx","../../src/structure/panes/document/documentPanel/banners/ArchivedReleaseDocumentBanner.tsx","../../src/structure/panes/document/documentPanel/banners/CanvasLinkedBanner.tsx","../../src/structure/panes/document/documentPanel/banners/ChooseNewDocumentDestinationBanner.tsx","../../src/structure/panes/document/documentPanel/banners/CreateLinkedBanner.tsx","../../src/structure/panes/document/documentPanel/banners/DocumentNotInReleaseBanner.tsx","../../src/structure/panes/document/documentPanel/banners/__telemetry__/DraftLiveEditBanner.telemetry.ts","../../src/structure/panes/document/documentPanel/banners/ObsoleteDraftBanner.tsx","../../src/structure/panes/document/documentPanel/banners/OpenReleaseToEditBanner.tsx","../../src/structure/panes/document/documentPanel/banners/RevisionNotFoundBanner.tsx","../../src/structure/panes/document/documentPanel/banners/ScheduledReleaseBanner.tsx","../../src/structure/panes/document/documentPanel/banners/UnpublishedDocumentBanner.tsx","../../src/structure/panes/document/documentPanel/documentViews/FormHeader.tsx","../../src/structure/panes/document/documentPanel/documentViews/FormView.tsx","../../src/structure/panes/document/documentPanel/header/DocumentHeaderTabs.tsx","../../src/structure/panes/document/documentPanel/header/DocumentHeaderTitle.tsx","../../src/structure/panes/document/documentPanel/header/FavoriteToggle.tsx","../../src/structure/panes/document/documentPanel/header/DocumentPanelSubHeader.tsx","../../src/structure/panes/document/documentPanel/DocumentPanel.tsx","../../src/structure/menuNodes.ts","../../src/structure/constants.ts","../../src/structure/panes/document/statusBar/dialogs/constants.ts","../../src/structure/panes/document/statusBar/dialogs/ConfirmDialog.tsx","../../src/structure/panes/document/statusBar/dialogs/ModalDialog.tsx","../../src/structure/panes/document/statusBar/dialogs/PopoverDialog.tsx","../../src/structure/panes/document/statusBar/ActionStateDialog.tsx","../../src/structure/panes/document/statusBar/ActionMenuButton.tsx","../../src/structure/documentActions/DeleteAction.tsx","../../src/structure/documentActions/DiscardChangesAction.tsx","../../src/structure/documentActions/DuplicateAction.tsx","../../src/structure/documentActions/HistoryRestoreAction.tsx","../../src/structure/documentActions/__telemetry__/documentActions.telemetry.ts","../../src/structure/documentActions/PublishAction.tsx","../../src/structure/documentActions/UnpublishAction.tsx","../../src/structure/panes/document/statusBar/DocumentStatusBarActions.tsx","../../src/structure/panes/document/documentPanel/header/hook/useChipScrollPosition.tsx","../../src/structure/panes/document/documentPanel/header/perspective/DocumentPerspectiveList.tsx","../../src/structure/panes/document/documentPanel/header/DocumentPanelHeader.tsx","../../src/structure/components/spacerButton/SpacerButton.tsx","../../src/structure/panes/document/statusBar/DocumentBadges.tsx","../../src/structure/panes/document/timeline/constants.ts","../../src/structure/panes/document/timeline/helpers.ts","../../src/structure/panes/document/timeline/expandableTimelineItemButton.tsx","../../src/structure/panes/document/timeline/timeline.styled.tsx","../../src/structure/panes/document/timeline/timelineI18n.ts","../../src/structure/panes/document/timeline/userAvatarStack.tsx","../../src/structure/panes/document/timeline/timelineItem.tsx","../../src/structure/panes/document/timeline/utils.ts","../../src/structure/panes/document/timeline/timeline.tsx","../../src/structure/panes/document/timeline/TimelineError.tsx","../../src/structure/panes/document/timeline/timelineMenu.tsx","../../src/structure/panes/document/statusBar/DocumentStatusPulse/AnimatedStatusIcon.tsx","../../src/structure/panes/document/statusBar/DocumentStatusPulse/DocumentStatusPulse.tsx","../../src/structure/panes/document/statusBar/DocumentStatusLine.tsx","../../src/structure/panes/document/statusBar/RevisionStatusLine.tsx","../../src/structure/panes/document/statusBar/useResizeObserver.ts","../../src/structure/panes/document/statusBar/DocumentStatusBar.tsx","../../src/structure/panes/document/keyboardShortcuts/DocumentActionShortcuts.tsx","../../src/structure/panes/document/menuItems.ts","../../src/structure/panes/document/document-layout/DocumentLayoutError.tsx","../../src/structure/panes/document/document-layout/DocumentLayoutFooter.tsx","../../src/structure/panes/document/document-layout/DocumentLayout.tsx","../../src/structure/panes/document/document-layout/useDocumentLayoutComponent.ts","../../src/structure/hooks/useDocumentLastRev.ts","../../src/structure/panes/document/__telemetry__/documentPanes.telemetry.ts","../../src/structure/panes/document/getInitialValueTemplateOpts.ts","../../src/structure/panes/document/useDocumentPaneInitialValue.ts","../../src/structure/panes/document/useDocumentPaneInspector.ts","../../src/structure/panes/document/usePreviewUrl.ts","../../src/structure/panes/document/DocumentPaneProvider.tsx","../../src/structure/panes/document/DocumentEventsPane.tsx","../../src/structure/panes/document/DocumentPaneLegacyTimeline.tsx","../../src/structure/panes/document/DocumentPerspectiveProvider.tsx","../../src/structure/panes/document/DocumentPaneProviderWrapper.tsx","../../src/structure/panes/document/useResetHistoryParams.ts","../../src/structure/panes/document/DocumentPane.tsx","../../src/structure/components/paneRouter/BackLink.tsx","../../src/structure/components/paneRouter/ChildLink.tsx","../../src/structure/components/paneRouter/ParameterizedLink.tsx","../../src/structure/components/paneRouter/ReferenceChildLink.tsx","../../src/structure/components/paneRouter/PaneRouterProvider.tsx","../../src/structure/panes/unknown/UnknownPaneType.tsx","../../src/structure/panes/StructureToolPane.tsx","../../src/structure/components/DocTitle.tsx","../../src/structure/components/confirmDeleteDialog/ConfirmDeleteDialogBody.styles.tsx","../../src/structure/components/paneItem/PaneItemPreview.tsx","../../src/structure/components/confirmDeleteDialog/ReferencePreviewLink.tsx","../../src/structure/components/confirmDeleteDialog/ConfirmDeleteDialogBody.tsx","../../src/structure/components/confirmDeleteDialog/useReferringDocuments.ts","../../src/structure/components/confirmDeleteDialog/ConfirmDeleteDialog.tsx","../../src/structure/components/confirmDeleteDialog/index.tsx","../../src/structure/components/IntentButton.tsx","../../src/structure/components/paneHeaderActions/InsufficientPermissionsMessageTooltip.tsx","../../src/structure/components/paneHeaderActions/PaneHeaderCreateButton.tsx","../../src/structure/components/paneHeaderActions/PaneHeaderActions.tsx","../../src/structure/components/MissingSchemaType.tsx","../../src/structure/components/paneItem/PaneItem.tsx","../../src/structure/components/RenderActionCollectionState.tsx","../../src/structure/components/RenderBadgeCollectionState.tsx","../../src/structure/panes/documentList/constants.ts","../../src/structure/panes/documentList/DocumentListPaneContent.tsx","../../src/structure/panes/documentList/helpers.ts","../../src/structure/panes/documentList/listenSearchQuery.ts","../../src/structure/panes/documentList/useDocumentList.ts","../../src/structure/panes/documentList/DocumentListPane.tsx","../../src/structure/panes/documentList/PaneHeader.tsx","../../src/structure/panes/documentList/sheetList/DocumentSheetListSelect.tsx","../../src/structure/panes/documentList/sheetList/DocumentSheetListProvider.tsx","../../src/structure/panes/documentList/sheetList/SheetListCell.tsx","../../src/structure/panes/documentList/sheetList/useDocumentSheetColumns.tsx","../../src/structure/panes/documentList/sheetList/ColumnsControl.tsx","../../src/structure/panes/documentList/sheetList/DocumentSheetListFilter.tsx","../../src/structure/panes/documentList/sheetList/DocumentSheetListHeader.tsx","../../src/structure/panes/documentList/sheetList/DocumentSheetListPaginator.tsx","../../src/structure/panes/documentList/sheetList/useDocumentSheetListStore.ts","../../src/structure/panes/documentList/sheetList/useDocumentSheetList.ts","../../src/structure/panes/documentList/sheetList/DocumentSheetListPane.tsx","../../src/structure/panes/documentList/PaneContainer.tsx","../../src/structure/documentBadges/LiveEditBadge.ts","../../src/structure/getIntentState.ts","../../src/structure/panes/document/inspectors/changes/ChangesInspector.tsx","../../src/structure/panes/document/timeline/events/EventTimelineItem.tsx","../../src/structure/panes/document/timeline/events/PublishedEventMenu.tsx","../../src/structure/panes/document/timeline/events/EventsTimeline.tsx","../../src/structure/panes/document/timeline/events/EventsTimelineMenu.tsx","../../src/structure/panes/document/inspectors/changes/EventsInspector.tsx","../../src/structure/panes/document/inspectors/changes/EventsSelector.tsx","../../src/structure/panes/document/inspectors/changes/HistorySelector.tsx","../../src/structure/panes/document/inspectors/changes/ChangesTabs.tsx","../../src/structure/panes/document/inspectors/changes/index.ts","../../src/structure/panes/document/inspectors/validation/getPathTitles.ts","../../src/structure/panes/document/inspectors/validation/ValidationInspector.tsx","../../src/structure/panes/document/inspectors/validation/index.ts","../../src/structure/router.ts","../../src/structure/structureTool.ts"],"sourcesContent":["import {useMemo} from 'react'\nimport {Subject} from 'rxjs'\n\nimport {type PathSyncChannel, type PathSyncState} from '../types/pathSyncChannel'\n\n/**\n * @internal\n */\nexport function useCreatePathSyncChannel(): PathSyncChannel {\n  return useMemo(() => new Subject<PathSyncState>(), [])\n}\n","/**\n * @internal\n */\nexport const DIFF_VIEW_SEARCH_PARAMETER = 'diffView'\n\n/**\n * @internal\n */\nexport const DIFF_VIEW_PREVIOUS_DOCUMENT_SEARCH_PARAMETER = 'previousDocument'\n\n/**\n * @internal\n */\nexport const DIFF_VIEW_NEXT_DOCUMENT_SEARCH_PARAMETER = 'nextDocument'\n\n/**\n * @internal\n */\nexport const DIFF_SEARCH_PARAM_DELIMITER = ','\n","import {fromPairs, toPairs} from 'lodash'\nimport {useCallback} from 'react'\nimport {useRouter} from 'sanity/router'\n\nimport {\n  DIFF_SEARCH_PARAM_DELIMITER,\n  DIFF_VIEW_NEXT_DOCUMENT_SEARCH_PARAMETER,\n  DIFF_VIEW_PREVIOUS_DOCUMENT_SEARCH_PARAMETER,\n  DIFF_VIEW_SEARCH_PARAMETER,\n} from '../constants'\nimport {type DiffViewMode} from '../types/diffViewMode'\n\ntype NavigateDiffView = (\n  options: {\n    mode?: DiffViewMode\n  } & Partial<\n    Record<\n      'previousDocument' | 'nextDocument',\n      {\n        type: string\n        id: string\n      }\n    >\n  >,\n) => void\n\nexport interface DiffViewRouter {\n  navigateDiffView: NavigateDiffView\n  exitDiffView: () => void\n}\n\n/**\n * @internal\n */\nexport function useDiffViewRouter(): DiffViewRouter {\n  const {navigate, state: routerState} = useRouter()\n\n  const navigateDiffView = useCallback<NavigateDiffView>(\n    ({mode, previousDocument, nextDocument}) => {\n      const next = {\n        ...fromPairs(routerState._searchParams),\n        ...(mode\n          ? {\n              [DIFF_VIEW_SEARCH_PARAMETER]: mode,\n            }\n          : {}),\n        ...(previousDocument\n          ? {\n              [DIFF_VIEW_PREVIOUS_DOCUMENT_SEARCH_PARAMETER]: [\n                previousDocument.type,\n                previousDocument.id,\n              ].join(DIFF_SEARCH_PARAM_DELIMITER),\n            }\n          : {}),\n        ...(nextDocument\n          ? {\n              [DIFF_VIEW_NEXT_DOCUMENT_SEARCH_PARAMETER]: [nextDocument.type, nextDocument.id].join(\n                DIFF_SEARCH_PARAM_DELIMITER,\n              ),\n            }\n          : {}),\n      }\n\n      navigate({\n        ...routerState,\n        _searchParams: toPairs(next),\n      })\n    },\n    [navigate, routerState],\n  )\n\n  const exitDiffView = useCallback(() => {\n    navigate({\n      ...routerState,\n      _searchParams: (routerState._searchParams ?? []).filter(\n        ([key]) =>\n          ![\n            DIFF_VIEW_SEARCH_PARAMETER,\n            DIFF_VIEW_PREVIOUS_DOCUMENT_SEARCH_PARAMETER,\n            DIFF_VIEW_NEXT_DOCUMENT_SEARCH_PARAMETER,\n          ].includes(key),\n      ),\n    })\n  }, [navigate, routerState])\n\n  return {\n    navigateDiffView,\n    exitDiffView,\n  }\n}\n","/**\n * @internal\n */\nexport const diffViewModes = ['version'] as const\n\n/**\n * @internal\n */\nexport type DiffViewMode = (typeof diffViewModes)[number]\n","import {useEffect, useMemo} from 'react'\nimport {useRouter} from 'sanity/router'\n\nimport {\n  DIFF_SEARCH_PARAM_DELIMITER,\n  DIFF_VIEW_NEXT_DOCUMENT_SEARCH_PARAMETER,\n  DIFF_VIEW_PREVIOUS_DOCUMENT_SEARCH_PARAMETER,\n  DIFF_VIEW_SEARCH_PARAMETER,\n} from '../constants'\nimport {type DiffViewMode, diffViewModes} from '../types/diffViewMode'\n\nfunction isDiffViewMode(maybeDiffViewMode: unknown): maybeDiffViewMode is DiffViewMode {\n  return diffViewModes.includes(maybeDiffViewMode as DiffViewMode)\n}\n\ntype DiffViewState =\n  | {\n      isActive: true\n      state: 'ready'\n      mode: DiffViewMode\n      documents: Record<\n        'previous' | 'next',\n        {\n          type: string\n          id: string\n        }\n      >\n    }\n  | {\n      isActive: true\n      state: 'error'\n      mode: DiffViewMode\n      documents?: never\n    }\n  | {\n      isActive: false\n      state?: never\n      mode?: never\n      documents?: never\n    }\n\nexport function useDiffViewState({\n  onParamsError,\n}: {\n  onParamsError?: (errors: DiffViewStateErrorWithInput[]) => void\n} = {}): DiffViewState {\n  const {state: routerState} = useRouter()\n  const searchParams = new URLSearchParams(routerState._searchParams)\n  const previousDocument = searchParams.get(DIFF_VIEW_PREVIOUS_DOCUMENT_SEARCH_PARAMETER)\n  const nextDocument = searchParams.get(DIFF_VIEW_NEXT_DOCUMENT_SEARCH_PARAMETER)\n  const mode = searchParams.get(DIFF_VIEW_SEARCH_PARAMETER)\n  const anyParamSet = [previousDocument, nextDocument, mode].some((param) => param !== null)\n\n  const params = useMemo(\n    () =>\n      parseParams({\n        previousDocument: previousDocument ?? '',\n        nextDocument: nextDocument ?? '',\n        mode: mode ?? '',\n      }),\n    [mode, nextDocument, previousDocument],\n  )\n\n  useEffect(() => {\n    if (params.result === 'error' && anyParamSet) {\n      onParamsError?.(params.errors)\n    }\n  }, [anyParamSet, onParamsError, params])\n\n  if (params.result === 'error') {\n    return {\n      isActive: false,\n    }\n  }\n\n  return {\n    state: 'ready',\n    isActive: true,\n    ...params.params,\n  }\n}\n\ntype DiffViewStateError =\n  | 'invalidModeParam'\n  | 'invalidPreviousDocumentParam'\n  | 'invalidNextDocumentParam'\n\ntype DiffViewStateErrorWithInput = [error: DiffViewStateError, input: unknown]\n\ninterface ParamsSuccess {\n  result: 'success'\n  params: Pick<DiffViewState & {state: 'ready'}, 'mode' | 'documents'>\n}\n\ninterface ParamsError {\n  result: 'error'\n  errors: DiffViewStateErrorWithInput[]\n}\n\nfunction parseParams({\n  previousDocument,\n  nextDocument,\n  mode,\n}: {\n  previousDocument: string\n  nextDocument: string\n  mode: string\n}): ParamsSuccess | ParamsError {\n  const errors: DiffViewStateErrorWithInput[] = []\n\n  const [previousDocumentType, previousDocumentId] = previousDocument\n    .split(DIFF_SEARCH_PARAM_DELIMITER)\n    .filter(Boolean)\n\n  const [nextDocumentType, nextDocumentId] = nextDocument\n    .split(DIFF_SEARCH_PARAM_DELIMITER)\n    .filter(Boolean)\n\n  if (!isDiffViewMode(mode)) {\n    errors.push(['invalidModeParam', mode])\n  }\n\n  if (typeof previousDocumentType === 'undefined' || typeof previousDocumentId === 'undefined') {\n    errors.push(['invalidPreviousDocumentParam', previousDocument])\n  }\n\n  if (typeof nextDocumentType === 'undefined' || typeof nextDocumentId === 'undefined') {\n    errors.push(['invalidNextDocumentParam', nextDocument])\n  }\n\n  if (errors.length !== 0) {\n    return {\n      result: 'error',\n      errors,\n    }\n  }\n\n  return {\n    result: 'success',\n    params: {\n      mode,\n      documents: {\n        previous: {\n          type: previousDocumentType,\n          id: previousDocumentId,\n        },\n        next: {\n          type: nextDocumentType,\n          id: nextDocumentId,\n        },\n      },\n    },\n  } as ParamsSuccess\n}\n","import {useEffect} from 'react'\nimport ScrollMirror from 'scrollmirror'\n\n/**\n * Use the ScrollMirror library to synchronise the scroll position for an array of elements.\n *\n * @internal\n */\nexport function useScrollMirror(elements: (HTMLElement | null)[]): void {\n  useEffect(() => {\n    const existentElements = elements.filter((element) => element !== null)\n\n    if (existentElements.length === 0) {\n      return undefined\n    }\n\n    const scrollMirror = new ScrollMirror(existentElements)\n    return () => scrollMirror.destroy()\n  }, [elements])\n}\n","import {\n  getReleaseIdFromReleaseDocumentId,\n  getVersionFromId,\n  isDraftId,\n  isPublishedId,\n  type ReleaseDocument,\n} from 'sanity'\n\n/**\n * If the provided document id represents a version, find and return the corresponding release\n * document. Otherwise, return a string literal signifying whether the document id represents a\n * published or draft document.\n *\n * TODO: Return a type compatible with `TargetPerspective` (`\"draft\"` must be `\"drafts\"`).\n *\n * @internal\n */\nexport function findRelease(\n  documentId: string,\n  releases: ReleaseDocument[],\n): ReleaseDocument | 'published' | 'draft' | undefined {\n  if (isPublishedId(documentId)) {\n    return 'published'\n  }\n\n  if (isDraftId(documentId)) {\n    return 'draft'\n  }\n\n  return releases.find(\n    ({_id}) => getReleaseIdFromReleaseDocumentId(_id) === getVersionFromId(documentId),\n  )\n}\n","import {CloseIcon, LockIcon, TransferIcon} from '@sanity/icons'\nimport {\n  Box,\n  // eslint-disable-next-line no-restricted-imports -- we need more control over how the `Button` component is rendered\n  Button,\n  type ButtonTone,\n  Flex,\n  Menu,\n  // eslint-disable-next-line no-restricted-imports -- the `VersionModeHeader` component needs more control over how the `MenuItem` component is rendered\n  MenuItem,\n  Stack,\n  Text,\n} from '@sanity/ui'\n// eslint-disable-next-line @sanity/i18n/no-i18next-import -- figure out how to have the linter be fine with importing types-only\nimport {type TFunction} from 'i18next'\nimport {type ComponentProps, type ComponentType, useCallback, useMemo} from 'react'\nimport {\n  type DocumentLayoutProps,\n  formatRelativeLocalePublishDate,\n  getDraftId,\n  getPublishedId,\n  getReleaseIdFromReleaseDocumentId,\n  getReleaseTone,\n  getVersionFromId,\n  getVersionId,\n  isReleaseDocument,\n  isReleaseScheduledOrScheduling,\n  ReleaseAvatar,\n  type ReleaseDocument,\n  useActiveReleases,\n  useDocumentVersions,\n  useEditState,\n  useTranslation,\n  useWorkspace,\n} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {MenuButton} from '../../../../ui-components/menuButton/MenuButton'\nimport {structureLocaleNamespace} from '../../../i18n'\nimport {useDiffViewRouter} from '../../hooks/useDiffViewRouter'\nimport {useDiffViewState} from '../../hooks/useDiffViewState'\nimport {findRelease} from '../../utils/findRelease'\n\nconst VersionModeHeaderLayout = styled.header`\n  display: grid;\n  grid-area: header;\n  grid-template-columns: 1fr min-content 1fr;\n  border-block-end: 1px solid var(--card-border-color);\n`\n\nconst VersionModeHeaderLayoutSection = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n\n/**\n * The header component that is rendered when diff view is being used to compare versions of a\n * document.\n *\n * @internal\n */\nexport const VersionModeHeader: ComponentType<\n  {state: 'pending' | 'ready' | 'error'} & Pick<DocumentLayoutProps, 'documentId'>\n> = ({documentId, state}) => {\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {data: documentVersions} = useDocumentVersions({documentId})\n  const {exitDiffView, navigateDiffView} = useDiffViewRouter()\n  const {documents} = useDiffViewState()\n  const activeReleases = useActiveReleases()\n  const releasesIds = documentVersions.flatMap((id) => getVersionFromId(id) ?? [])\n\n  const releases = useMemo(() => {\n    return activeReleases.data.filter((release) => {\n      const releaseId = getReleaseIdFromReleaseDocumentId(release._id)\n      return typeof releaseId !== 'undefined' && releasesIds.includes(releaseId)\n    })\n  }, [activeReleases.data, releasesIds])\n\n  const onSelectPreviousRelease = useCallback(\n    (selectedDocumentId: string): void => {\n      if (typeof documents?.previous !== 'undefined') {\n        navigateDiffView({\n          previousDocument: {\n            ...documents.previous,\n            id: selectedDocumentId,\n          },\n        })\n      }\n    },\n    [documents?.previous, navigateDiffView],\n  )\n\n  const onSelectNextRelease = useCallback(\n    (selectedDocumentId: string): void => {\n      if (typeof documents?.next !== 'undefined') {\n        navigateDiffView({\n          nextDocument: {\n            ...documents.next,\n            id: selectedDocumentId,\n          },\n        })\n      }\n    },\n    [documents?.next, navigateDiffView],\n  )\n\n  return (\n    <VersionModeHeaderLayout>\n      <VersionModeHeaderLayoutSection>\n        <Box padding={4}>\n          <Text as=\"h1\" size={1} muted>\n            {t('compare-versions.title')}\n          </Text>\n        </Box>\n        {typeof documents?.previous !== 'undefined' && (\n          <VersionMenu\n            releases={releases}\n            onSelectRelease={onSelectPreviousRelease}\n            role=\"previous\"\n            documentId={documentId}\n            state={state}\n            document={documents.previous}\n          />\n        )}\n      </VersionModeHeaderLayoutSection>\n      <Flex align=\"center\" paddingX={3}>\n        <Text size={1}>\n          <TransferIcon />\n        </Text>\n      </Flex>\n      <VersionModeHeaderLayoutSection>\n        {typeof documents?.next !== 'undefined' && (\n          <VersionMenu\n            releases={releases}\n            onSelectRelease={onSelectNextRelease}\n            role=\"next\"\n            documentId={documentId}\n            state={state}\n            document={documents.next}\n          />\n        )}\n        <Box\n          padding={3}\n          style={{\n            justifySelf: 'end',\n          }}\n        >\n          <Button icon={CloseIcon} mode=\"bleed\" onClick={exitDiffView} padding={2} />\n        </Box>\n      </VersionModeHeaderLayoutSection>\n    </VersionModeHeaderLayout>\n  )\n}\n\ninterface VersionMenuProps {\n  state: 'pending' | 'ready' | 'error'\n  releases: ReleaseDocument[]\n  role: 'previous' | 'next'\n  onSelectRelease: (releaseId: string) => void\n  documentId: string\n  document: {\n    type: string\n    id: string\n  }\n}\n\nconst VersionMenu: ComponentType<VersionMenuProps> = ({\n  releases = [],\n  onSelectRelease,\n  role,\n  documentId,\n  document,\n}) => {\n  const {published, draft} = useEditState(getPublishedId(document.id), document.type)\n  const selected = useMemo(() => findRelease(document.id, releases), [document.id, releases])\n  const {t: tStructure} = useTranslation(structureLocaleNamespace)\n  const {t: tCore} = useTranslation()\n\n  const {\n    document: {\n      drafts: {enabled: isDraftModelEnabled},\n    },\n  } = useWorkspace()\n\n  return (\n    <MenuButton\n      id={role}\n      button={\n        <Button\n          type=\"button\"\n          mode=\"bleed\"\n          padding={2}\n          paddingRight={3}\n          radius=\"full\"\n          selected\n          {...getMenuButtonProps({selected, tCore, tStructure})}\n        />\n      }\n      menu={\n        <Menu>\n          {published && (\n            <VersionMenuItem\n              type=\"published\"\n              onSelect={onSelectRelease}\n              isSelected={selected === 'published'}\n              documentId={documentId}\n            />\n          )}\n          {isDraftModelEnabled && draft && (\n            <VersionMenuItem\n              type=\"draft\"\n              onSelect={onSelectRelease}\n              isSelected={selected === 'draft'}\n              documentId={documentId}\n            />\n          )}\n          {releases.map((release) => (\n            <VersionMenuItem\n              key={release._id}\n              release={release}\n              onSelect={onSelectRelease}\n              isSelected={typeof selected !== 'string' && selected?._id === release._id}\n              documentId={documentId}\n            />\n          ))}\n        </Menu>\n      }\n    />\n  )\n}\n\ntype VersionMenuItemProps = {\n  onSelect: (releaseId: string) => void\n  isSelected?: boolean\n  documentId: string\n} & (\n  | {\n      release: ReleaseDocument\n      type?: never\n    }\n  | {\n      type: 'published' | 'draft'\n      release?: never\n    }\n)\n\nconst VersionMenuItem: ComponentType<VersionMenuItemProps> = ({\n  type,\n  release,\n  onSelect,\n  isSelected,\n  documentId,\n}) => {\n  const {t: tCore} = useTranslation()\n  const {t: tStructure} = useTranslation(structureLocaleNamespace)\n\n  const onClick = useCallback(() => {\n    if (type === 'draft') {\n      onSelect(getDraftId(documentId))\n      return\n    }\n\n    if (type === 'published') {\n      onSelect(getPublishedId(documentId))\n      return\n    }\n\n    if (typeof release?._id !== 'undefined') {\n      onSelect(getVersionId(documentId, getReleaseIdFromReleaseDocumentId(release._id)))\n    }\n  }, [type, onSelect, documentId, release?._id])\n\n  if (type) {\n    const tone: ButtonTone = type === 'published' ? 'positive' : 'caution'\n\n    return (\n      <MenuItem padding={1} paddingRight={3} onClick={onClick} pressed={isSelected}>\n        <Flex gap={1}>\n          <ReleaseAvatar padding={2} tone={tone} />\n          <Box paddingY={2}>\n            <Text size={1} weight=\"medium\">\n              {tStructure(['compare-versions.status', type].join('.'))}\n            </Text>\n          </Box>\n        </Flex>\n      </MenuItem>\n    )\n  }\n\n  const tone: ButtonTone = release ? getReleaseTone(release) : 'neutral'\n\n  return (\n    <MenuItem padding={1} paddingRight={3} onClick={onClick} pressed={isSelected}>\n      <Flex gap={1}>\n        <ReleaseAvatar padding={2} tone={tone} />\n        <Stack flex={1} paddingY={2} paddingRight={2} space={2}>\n          <Text size={1} weight=\"medium\">\n            {release.metadata.title || tCore('release.placeholder-untitled-release')}\n          </Text>\n          {['asap', 'undecided'].includes(release.metadata.releaseType) && (\n            <Text muted size={1}>\n              {tCore(`release.type.${release.metadata.releaseType}`)}\n            </Text>\n          )}\n          {release.metadata.releaseType === 'scheduled' && (\n            <Text muted size={1}>\n              {formatRelativeLocalePublishDate(release)}\n            </Text>\n          )}\n        </Stack>\n        <Flex flex=\"none\">\n          {isReleaseScheduledOrScheduling(release) && (\n            <Box padding={2}>\n              <Text size={1}>\n                <LockIcon />\n              </Text>\n            </Box>\n          )}\n        </Flex>\n      </Flex>\n    </MenuItem>\n  )\n}\n\nfunction getMenuButtonProps({\n  selected,\n  tCore,\n  tStructure,\n}: {\n  selected?: ReleaseDocument | 'published' | 'draft'\n  tCore: TFunction\n  tStructure: TFunction\n}): Pick<ComponentProps<typeof Button>, 'text' | 'tone' | 'icon' | 'iconRight' | 'disabled'> {\n  if (typeof selected === 'undefined') {\n    return {\n      text: tCore('common.loading'),\n      tone: 'neutral',\n      disabled: true,\n    }\n  }\n\n  if (isReleaseDocument(selected)) {\n    const tone: ButtonTone = selected ? getReleaseTone(selected) : 'neutral'\n\n    return {\n      text: selected?.metadata.title || tCore('release.placeholder-untitled-release'),\n      icon: <ReleaseAvatar padding={1} tone={tone} />,\n      iconRight: selected && isReleaseScheduledOrScheduling(selected) ? <LockIcon /> : undefined,\n      tone,\n    }\n  }\n\n  const tone: ButtonTone = selected === 'published' ? 'positive' : 'caution'\n\n  return {\n    text: tStructure(['compare-versions.status', selected].join('.')),\n    icon: <ReleaseAvatar padding={1} tone={tone} />,\n    tone,\n  }\n}\n","import {styled} from 'styled-components'\n\nexport const DialogLayout = styled.div`\n  --offset-block: 40px;\n  display: grid;\n  height: calc(100vh - var(--offset-block));\n  min-height: 0;\n  overflow: hidden;\n  grid-template-areas:\n    'header header'\n    'previous-document next-document';\n  grid-template-columns: 1fr 1fr;\n  grid-template-rows: min-content minmax(0, 1fr);\n`\n","import {type ComponentType} from 'react'\nimport {type DocumentLayoutProps, type PluginOptions} from 'sanity'\n\n/**\n * Pick the document layout component when composing the component middleware chain.\n */\nexport function pickDocumentLayoutComponent(plugin: PluginOptions) {\n  return plugin.document?.components?.unstable_layout as ComponentType<\n    Omit<DocumentLayoutProps, 'renderDefault'>\n  >\n}\n","import {type Path} from '@sanity/types'\nimport {useCallback, useMemo} from 'react'\nimport deepEquals from 'react-fast-compare'\nimport {distinctUntilChanged, filter, map, type Observable} from 'rxjs'\n\nimport {type PathSyncChannelProps, type PathSyncState} from '../types/pathSyncChannel'\n\ntype Push = (state: PathSyncState) => void\n\n/**\n * Synchronise the open path between multiple document panes.\n *\n * @internal\n */\nexport function usePathSyncChannel({syncChannel, id}: PathSyncChannelProps): {\n  push: Push\n  path: Observable<Path>\n} {\n  const push = useCallback<Push>(\n    (state) => syncChannel.next({...state, source: id}),\n    [id, syncChannel],\n  )\n\n  const path = useMemo(\n    () =>\n      syncChannel.pipe(\n        distinctUntilChanged<PathSyncState>((previous, next) =>\n          deepEquals(previous.path, next.path),\n        ),\n        filter(({source}) => source !== id),\n        map((state) => state.path),\n      ),\n    [id, syncChannel],\n  )\n\n  return {\n    path,\n    push,\n  }\n}\n","import {styled} from 'styled-components'\n\nexport const Scroller = styled.div`\n  position: relative;\n  height: 100%;\n  overflow: auto;\n  scroll-behavior: smooth;\n  scrollbar-width: var(--scrollbar-width);\n  overscroll-behavior: contain;\n  will-change: scroll-position;\n`\n","import {type Path, type SanityDocument} from '@sanity/types'\nimport {\n  BoundaryElementProvider,\n  Card,\n  Container as UiContainer,\n  DialogProvider,\n  PortalProvider,\n} from '@sanity/ui'\nimport {noop} from 'lodash'\nimport {\n  type ComponentType,\n  type CSSProperties,\n  forwardRef,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react'\nimport {\n  ChangeIndicatorsTracker,\n  createPatchChannel,\n  FormBuilder,\n  getPublishedId,\n  getVersionFromId,\n  isDraftId,\n  isPublishedId,\n  isVersionId,\n  LoadingBlock,\n  type TargetPerspective,\n  useActiveReleases,\n  useDocumentForm,\n  useEditState,\n  useMiddlewareComponents,\n  VirtualizerScrollInstanceProvider,\n} from 'sanity'\nimport {CommentsEnabledContext, ReviewChangesContext} from 'sanity/_singletons'\nimport {styled} from 'styled-components'\n\nimport {pickDocumentLayoutComponent} from '../../panes/document/document-layout/pickDocumentLayoutComponent'\nimport {usePathSyncChannel} from '../hooks/usePathSyncChannel'\nimport {type PathSyncChannel} from '../types/pathSyncChannel'\nimport {findRelease} from '../utils/findRelease'\nimport {Scroller} from './Scroller'\n\nconst DiffViewPaneLayout = styled(Card)`\n  position: relative;\n  grid-area: var(--grid-area);\n`\n\nconst Container = styled(UiContainer)`\n  width: auto;\n`\n\ninterface DiffViewPaneProps {\n  documentType: string\n  documentId: string\n  role: 'previous' | 'next'\n  scrollElement: HTMLElement | null\n  syncChannel: PathSyncChannel\n  compareDocument: {\n    type: string\n    id: string\n  }\n}\n\nexport const DiffViewPane = forwardRef<HTMLDivElement, DiffViewPaneProps>(function DiffViewPane(\n  {role, documentType, documentId, scrollElement, syncChannel, compareDocument},\n  ref,\n) {\n  const containerElement = useRef<HTMLDivElement | null>(null)\n  const [portalElement, setPortalElement] = useState<HTMLDivElement | null>(null)\n  const [boundaryElement, setBoundaryElement] = useState<HTMLDivElement | null>(null)\n\n  const DocumentLayout = useMiddlewareComponents({\n    pick: pickDocumentLayoutComponent,\n    defaultComponent: useCallback(\n      () => (\n        <DiffViewDocument\n          compareDocument={compareDocument}\n          documentId={documentId}\n          documentType={documentType}\n          role={role}\n          scrollElement={scrollElement}\n          syncChannel={syncChannel}\n        />\n      ),\n      [compareDocument, documentId, documentType, role, scrollElement, syncChannel],\n    ),\n  })\n\n  return (\n    <ReviewChangesContext.Provider\n      value={{\n        // Render the change indicators inertly, because the diff view modal does not currently\n        // provide a way to display document inspectors.\n        isInteractive: false,\n        onOpenReviewChanges: noop,\n        onSetFocus: noop,\n        isReviewChangesOpen: false,\n      }}\n    >\n      <ChangeIndicatorsTracker>\n        <VirtualizerScrollInstanceProvider\n          scrollElement={scrollElement}\n          containerElement={containerElement}\n        >\n          <BoundaryElementProvider element={boundaryElement}>\n            <DiffViewPaneLayout\n              ref={setBoundaryElement}\n              style={\n                {\n                  '--grid-area': `${role}-document`,\n                } as CSSProperties\n              }\n              borderLeft={role === 'next'}\n            >\n              <Scroller\n                ref={ref}\n                style={\n                  {\n                    // The scroll position is synchronised between panes. This style hides the\n                    // scrollbar for all panes except the one displaying the next document.\n                    '--scrollbar-width': role !== 'next' && 'none',\n                  } as CSSProperties\n                }\n              >\n                <PortalProvider element={portalElement}>\n                  <DialogProvider position=\"absolute\">\n                    <Container ref={containerElement} padding={4} width={1}>\n                      <DocumentLayout documentId={documentId} documentType={documentType} />\n                    </Container>\n                  </DialogProvider>\n                </PortalProvider>\n              </Scroller>\n              <div data-testid=\"diffView-document-panel-portal\" ref={setPortalElement} />\n            </DiffViewPaneLayout>\n          </BoundaryElementProvider>\n        </VirtualizerScrollInstanceProvider>\n      </ChangeIndicatorsTracker>\n    </ReviewChangesContext.Provider>\n  )\n})\n\nconst DiffViewDocument: ComponentType<DiffViewPaneProps> = ({\n  role,\n  documentType,\n  documentId,\n  syncChannel,\n  compareDocument,\n}) => {\n  const compareValue = useCompareValue({compareDocument})\n  const {data: releases} = useActiveReleases()\n  const [patchChannel] = useState(() => createPatchChannel())\n  const perspective = useMemo(() => findRelease(documentId, releases), [documentId, releases])\n\n  const {\n    formState,\n    onChange,\n    onFocus,\n    onBlur,\n    onSetActiveFieldGroup,\n    onSetCollapsedFieldSet,\n    onSetCollapsedPath,\n    collapsedFieldSets,\n    ready,\n    collapsedPaths,\n    schemaType,\n    value,\n    onProgrammaticFocus,\n    ...documentForm\n  } = useDocumentForm({\n    documentId: getPublishedId(documentId),\n    documentType,\n    selectedPerspectiveName: perspectiveName(documentId),\n    releaseId: getVersionFromId(documentId),\n    comparisonValue: compareValue,\n  })\n\n  const isLoading = formState === null || !ready\n\n  const pathSyncChannel = usePathSyncChannel({\n    id: role,\n    syncChannel,\n  })\n\n  const onPathOpen = useCallback(\n    (path: Path) => {\n      documentForm.onPathOpen(path)\n      pathSyncChannel.push({source: role, path})\n    },\n    [documentForm, pathSyncChannel, role],\n  )\n\n  useEffect(() => {\n    const subscription = pathSyncChannel.path.subscribe(onProgrammaticFocus)\n    return () => subscription.unsubscribe()\n  }, [onProgrammaticFocus, pathSyncChannel.path])\n\n  return isLoading ? (\n    <LoadingBlock showText />\n  ) : (\n    <CommentsEnabledContext.Provider\n      value={{\n        enabled: false,\n        mode: null,\n      }}\n    >\n      <FormBuilder\n        __internal_patchChannel={patchChannel}\n        id={`diffView-pane-${role}`}\n        onChange={onChange}\n        onPathFocus={onFocus}\n        onPathOpen={onPathOpen}\n        onPathBlur={onBlur}\n        onFieldGroupSelect={onSetActiveFieldGroup}\n        onSetFieldSetCollapsed={onSetCollapsedFieldSet}\n        onSetPathCollapsed={onSetCollapsedPath}\n        collapsedPaths={collapsedPaths}\n        collapsedFieldSets={collapsedFieldSets}\n        focusPath={formState.focusPath}\n        changed={formState.changed}\n        focused={formState.focused}\n        groups={formState.groups}\n        validation={formState.validation}\n        members={formState.members}\n        perspective={sanitizeBundleName(perspective)}\n        presence={formState.presence}\n        schemaType={schemaType}\n        value={value}\n        compareValue={compareValue}\n      />\n    </CommentsEnabledContext.Provider>\n  )\n}\n\nfunction perspectiveName(documentId: string): string | undefined {\n  if (isVersionId(documentId)) {\n    return getVersionFromId(documentId)\n  }\n\n  if (isPublishedId(documentId)) {\n    return 'published'\n  }\n\n  return undefined\n}\n\ntype UseCompareValueOptions = Pick<DiffViewPaneProps, 'compareDocument'>\n\n/**\n * Fetch the contents of `compareDocument` for comparison with another version of the document.\n */\nfunction useCompareValue({compareDocument}: UseCompareValueOptions): SanityDocument | undefined {\n  const compareDocumentEditState = useEditState(\n    getPublishedId(compareDocument.id),\n    compareDocument.type,\n    'low',\n    getVersionFromId(compareDocument.id),\n  )\n\n  return useMemo(() => {\n    if (isVersionId(compareDocument.id)) {\n      return compareDocumentEditState.version ?? undefined\n    }\n\n    if (isDraftId(compareDocument.id)) {\n      return compareDocumentEditState.draft ?? undefined\n    }\n\n    if (isPublishedId(compareDocument.id)) {\n      return compareDocumentEditState.published ?? undefined\n    }\n\n    return undefined\n  }, [\n    compareDocument.id,\n    compareDocumentEditState.draft,\n    compareDocumentEditState.published,\n    compareDocumentEditState.version,\n  ])\n}\n\n// TODO: Refactor `findRelease` to return a type compatible with `TargetPerspective` (`\"draft\"` must be `\"drafts\"`), so that `sanitizeBundleName` can be removed.\nfunction sanitizeBundleName(bundle: ReturnType<typeof findRelease>): TargetPerspective | undefined {\n  if (bundle === 'draft') {\n    return 'drafts'\n  }\n\n  return bundle\n}\n","import {type ReferenceInputOptions} from 'sanity'\nimport {useIntentLink} from 'sanity/router'\nimport {styled} from 'styled-components'\n\nconst Link = styled.a`\n  flex: 1;\n  text-decoration: none;\n  color: inherit;\n`\n\nexport const EditReferenceLinkComponent: ReferenceInputOptions['EditReferenceLinkComponent'] = ({\n  children,\n  documentId: _documentId,\n  documentType,\n}) => {\n  const {href} = useIntentLink({\n    intent: 'edit',\n    params: {\n      id: _documentId,\n      type: documentType,\n    },\n  })\n\n  return (\n    <Link href={href} target=\"_blank\" rel=\"noopener noreferrer\">\n      {children}\n    </Link>\n  )\n}\n","import {type ComponentType, useContext, useMemo, useState} from 'react'\nimport {type DocumentLayoutProps} from 'sanity'\nimport {ReferenceInputOptionsContext} from 'sanity/_singletons'\n\nimport {Dialog} from '../../../ui-components/dialog/Dialog'\nimport {useCreatePathSyncChannel} from '../hooks/useCreatePathSyncChannel'\nimport {useDiffViewRouter} from '../hooks/useDiffViewRouter'\nimport {useDiffViewState} from '../hooks/useDiffViewState'\nimport {useScrollMirror} from '../hooks/useScrollMirror'\nimport {VersionModeHeader} from '../versionMode/components/VersionModeHeader'\nimport {DialogLayout} from './DialogLayout'\nimport {DiffViewPane} from './DiffViewPane'\nimport {EditReferenceLinkComponent} from './EditReferenceLinkComponent'\n\nexport const DiffView: ComponentType<Pick<DocumentLayoutProps, 'documentId'>> = ({documentId}) => {\n  const {documents, state, mode} = useDiffViewState()\n  const {exitDiffView} = useDiffViewRouter()\n  const syncChannel = useCreatePathSyncChannel()\n  const [previousPaneElement, setPreviousPaneElement] = useState<HTMLElement | null>(null)\n  const [nextPaneElement, setNextPaneElement] = useState<HTMLElement | null>(null)\n  const referenceInputOptionsContext = useContext(ReferenceInputOptionsContext)\n\n  const diffViewReferenceInputOptionsContext = useMemo(\n    () => ({\n      ...referenceInputOptionsContext,\n      disableNew: true,\n      EditReferenceLinkComponent,\n    }),\n    [referenceInputOptionsContext],\n  )\n\n  useScrollMirror([previousPaneElement, nextPaneElement])\n\n  return (\n    <ReferenceInputOptionsContext.Provider value={diffViewReferenceInputOptionsContext}>\n      <Dialog\n        id=\"diffView\"\n        width=\"auto\"\n        onClose={exitDiffView}\n        padding={false}\n        __unstable_hideCloseButton\n      >\n        <DialogLayout>\n          {mode === 'version' && <VersionModeHeader documentId={documentId} state={state} />}\n          {state === 'ready' && (\n            <>\n              <DiffViewPane\n                documentType={documents.previous.type}\n                documentId={documents.previous.id}\n                role=\"previous\"\n                ref={setPreviousPaneElement}\n                scrollElement={previousPaneElement}\n                syncChannel={syncChannel}\n                compareDocument={documents.previous}\n              />\n              <DiffViewPane\n                documentType={documents.next.type}\n                documentId={documents.next.id}\n                role=\"next\"\n                ref={setNextPaneElement}\n                scrollElement={nextPaneElement}\n                syncChannel={syncChannel}\n                // The previous document's edit state is used to calculate the diff inroduced by the next document.\n                compareDocument={documents.previous}\n              />\n            </>\n          )}\n        </DialogLayout>\n      </Dialog>\n    </ReferenceInputOptionsContext.Provider>\n  )\n}\n","import {useToast} from '@sanity/ui'\nimport {type ComponentType, type PropsWithChildren} from 'react'\nimport {type DocumentLayoutProps, useTranslation} from 'sanity'\n\nimport {structureLocaleNamespace} from '../../i18n'\nimport {DiffView} from '../components/DiffView'\nimport {useDiffViewState} from '../hooks/useDiffViewState'\n\nexport const DiffViewDocumentLayout: ComponentType<\n  PropsWithChildren<Pick<DocumentLayoutProps, 'documentId' | 'documentType'>>\n> = ({children, documentId}) => {\n  const toast = useToast()\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {isActive} = useDiffViewState({\n    onParamsError: (errors) => {\n      toast.push({\n        id: 'diffViewParamsParsingError',\n        status: 'error',\n        title: t('compare-version.error.invalidParams.title'),\n        description: (\n          <ul>\n            {errors.map(([error, input]) => (\n              <li key={error}>\n                {t(`compare-version.error.${error}`, {\n                  input,\n                })}\n              </li>\n            ))}\n          </ul>\n        ),\n      })\n    },\n  })\n\n  return (\n    <>\n      {children}\n      {isActive && <DiffView documentId={documentId} />}\n    </>\n  )\n}\n","/**\n * @internal\n */\nexport const PANE_DEBUG = false\n\n/**\n * @internal\n */\nexport const PANE_COLLAPSED_WIDTH = 51\n\n/**\n * @internal\n */\nexport const PANE_DEFAULT_MIN_WIDTH = PANE_COLLAPSED_WIDTH * 4\n","import {useContext} from 'react'\nimport {PaneLayoutContext} from 'sanity/_singletons'\n\nimport {type PaneLayoutContextValue} from './types'\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport function usePaneLayout(): PaneLayoutContextValue {\n  const pane = useContext(PaneLayoutContext)\n\n  if (!pane) {\n    throw new Error('PaneLayout: missing context value')\n  }\n\n  return pane\n}\n","import {Layer} from '@sanity/ui'\nimport {useCallback, useState} from 'react'\nimport {styled} from 'styled-components'\n\nimport {usePaneLayout} from './usePaneLayout'\n\nconst Root = styled(Layer)`\n  position: relative;\n  width: 1px;\n  min-width: 1px;\n\n  &:before {\n    content: '';\n    display: block;\n    position: absolute;\n    top: 0;\n    left: 0;\n    bottom: 0;\n    width: 1px;\n    background-color: var(--card-border-color);\n  }\n\n  &:not([data-disabled]) {\n    cursor: ew-resize;\n    width: 9px;\n    min-width: 9px;\n    margin: 0 -4px;\n\n    &:before {\n      left: 4px;\n    }\n\n    &:after {\n      content: '';\n      display: block;\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 9px;\n      bottom: 0;\n      background-color: var(--card-border-color);\n      opacity: 0;\n      transition: opacity 150ms;\n    }\n\n    &[data-dragging]:after,\n    &:hover:after {\n      opacity: 0.2;\n    }\n  }\n`\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport function PaneDivider({\n  disabled,\n  element,\n}: {\n  disabled?: boolean\n  element: HTMLElement | null\n}) {\n  const {resize} = usePaneLayout()\n  const [dragging, setDragging] = useState(false)\n\n  const handleMouseDown = useCallback(\n    (event: any) => {\n      if (!element) return\n\n      setDragging(true)\n\n      event.preventDefault()\n\n      const startX = event.pageX\n\n      resize('start', element, 0)\n\n      const handleMouseMove = (e: MouseEvent) => {\n        e.preventDefault()\n\n        const deltaX = e.pageX - startX\n\n        resize('move', element, deltaX)\n      }\n\n      const handleMouseUp = (e: MouseEvent) => {\n        e.preventDefault()\n\n        setDragging(false)\n\n        window.removeEventListener('mousemove', handleMouseMove)\n        window.removeEventListener('mouseup', handleMouseUp)\n\n        resize('end', element, 0)\n      }\n\n      window.addEventListener('mousemove', handleMouseMove)\n      window.addEventListener('mouseup', handleMouseUp)\n    },\n    [element, resize],\n  )\n\n  return (\n    <Root\n      data-disabled={disabled ? '' : undefined}\n      data-dragging={dragging ? '' : undefined}\n      onMouseDown={handleMouseDown}\n    />\n  )\n}\n","import {BoundaryElementProvider, Card, type CardProps, Code, Flex} from '@sanity/ui'\nimport {\n  type ForwardedRef,\n  forwardRef,\n  type HTMLProps,\n  type ReactNode,\n  useCallback,\n  useImperativeHandle,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react'\nimport {IsLastPaneProvider, LegacyLayerProvider} from 'sanity'\nimport {PaneContext} from 'sanity/_singletons'\nimport {styled} from 'styled-components'\n\nimport {PANE_COLLAPSED_WIDTH, PANE_DEBUG, PANE_DEFAULT_MIN_WIDTH} from './constants'\nimport {PaneDivider} from './PaneDivider'\nimport {usePaneLayout} from './usePaneLayout'\n\ninterface PaneProps {\n  children?: ReactNode\n  currentMinWidth?: number\n  currentMaxWidth?: number\n  flex?: number\n  id: string\n  minWidth?: number\n  maxWidth?: number\n  selected?: boolean\n}\n\nconst Root = styled(Card)`\n  outline: none;\n\n  // NOTE: This will render a border to the right side of each pane\n  // without taking up physical space.\n  box-shadow: 1px 0 0 var(--card-border-color);\n`\n\n/**\n * @hidden\n * @internal\n */\nexport const Pane = forwardRef(function Pane(\n  props: PaneProps &\n    Omit<CardProps, 'as' | 'overflow'> &\n    Omit<HTMLProps<HTMLDivElement>, 'as' | 'height' | 'hidden' | 'id' | 'style'>,\n  forwardedRef: ForwardedRef<HTMLDivElement>,\n) {\n  const {\n    children,\n    currentMinWidth: currentMinWidthProp,\n    currentMaxWidth: currentMaxWidthProp,\n    flex: flexProp = 1,\n    id,\n    minWidth: minWidthProp,\n    maxWidth: maxWidthProp,\n    selected = false,\n    ...restProps\n  } = props\n  const [rootElement, setRootElement] = useState<HTMLDivElement | null>(null)\n  const {\n    collapse,\n    collapsed: layoutCollapsed,\n    expand,\n    expandedElement,\n    mount,\n    panes,\n  } = usePaneLayout()\n  const pane = panes.find((p) => p.element === rootElement)\n  const paneIndex = pane && panes.indexOf(pane)\n  const nextPane = typeof paneIndex === 'number' ? panes[paneIndex + 1] : undefined\n  const isLast = paneIndex === panes.length - 1\n  const expanded = expandedElement === rootElement\n  const collapsed = layoutCollapsed ? false : pane?.collapsed || false\n  const nextCollapsed = nextPane?.collapsed || false\n  const ref = useRef<HTMLDivElement | null>(null)\n  const flex = pane?.flex ?? flexProp\n  const currentMinWidth = pane?.currentMinWidth ?? currentMinWidthProp\n  const currentMaxWidth = pane?.currentMaxWidth ?? currentMaxWidthProp\n\n  // Forward ref to parent\n  useImperativeHandle<HTMLDivElement | null, HTMLDivElement | null>(forwardedRef, () => ref.current)\n\n  const setRef = useCallback((refValue: HTMLDivElement | null) => {\n    setRootElement(refValue)\n    ref.current = refValue\n  }, [])\n\n  useLayoutEffect(() => {\n    if (!rootElement) return undefined\n    return mount(rootElement, {\n      currentMinWidth: currentMinWidthProp,\n      currentMaxWidth: currentMaxWidthProp,\n      flex: flexProp,\n      id,\n      minWidth: minWidthProp,\n      maxWidth: maxWidthProp,\n    })\n  }, [\n    currentMinWidthProp,\n    currentMaxWidthProp,\n    flexProp,\n    id,\n    minWidthProp,\n    maxWidthProp,\n    mount,\n    rootElement,\n  ])\n\n  const handleCollapse = useCallback(() => {\n    if (!rootElement) return\n    collapse(rootElement)\n  }, [collapse, rootElement])\n\n  const handleExpand = useCallback(() => {\n    if (!rootElement) return\n    expand(rootElement)\n  }, [expand, rootElement])\n\n  const contextValue = useMemo(\n    () => ({\n      collapse: handleCollapse,\n      collapsed: layoutCollapsed ? false : collapsed,\n      expand: handleExpand,\n      index: paneIndex,\n      isLast,\n      rootElement,\n    }),\n    [collapsed, handleCollapse, handleExpand, isLast, layoutCollapsed, paneIndex, rootElement],\n  )\n\n  const minWidth = useMemo(() => {\n    if (layoutCollapsed) {\n      return undefined\n    }\n\n    if (collapsed) return PANE_COLLAPSED_WIDTH\n\n    if (currentMinWidth === 0) {\n      return minWidthProp || PANE_DEFAULT_MIN_WIDTH\n    }\n\n    if (isLast) {\n      return minWidthProp || PANE_DEFAULT_MIN_WIDTH\n    }\n\n    return currentMinWidth || minWidthProp || PANE_DEFAULT_MIN_WIDTH\n  }, [collapsed, currentMinWidth, isLast, layoutCollapsed, minWidthProp])\n\n  const maxWidth = useMemo(() => {\n    if (collapsed) return PANE_COLLAPSED_WIDTH\n\n    if (layoutCollapsed && isLast) {\n      return undefined\n    }\n\n    if (isLast) {\n      if (maxWidthProp) {\n        return currentMaxWidth ?? maxWidthProp\n      }\n\n      return undefined\n    }\n\n    return currentMaxWidth ?? maxWidthProp\n  }, [collapsed, currentMaxWidth, isLast, layoutCollapsed, maxWidthProp])\n\n  const hidden = layoutCollapsed && !isLast\n\n  const divider = useMemo(\n    () =>\n      !isLast &&\n      !layoutCollapsed && (\n        <LegacyLayerProvider zOffset=\"paneResizer\">\n          <PaneDivider disabled={collapsed || nextCollapsed} element={rootElement} />\n        </LegacyLayerProvider>\n      ),\n    [collapsed, isLast, layoutCollapsed, nextCollapsed, rootElement],\n  )\n\n  const style = useMemo(\n    () => ({\n      flex,\n      minWidth,\n      maxWidth: maxWidth === Infinity ? undefined : maxWidth,\n    }),\n    [flex, minWidth, maxWidth],\n  )\n\n  return (\n    <>\n      <LegacyLayerProvider zOffset=\"pane\">\n        <PaneContext.Provider value={contextValue}>\n          <IsLastPaneProvider isLastPane={isLast}>\n            <Root\n              data-testid=\"pane\"\n              data-ui=\"Pane\"\n              tone=\"inherit\"\n              hidden={hidden}\n              id={id}\n              overflow={layoutCollapsed ? undefined : 'hidden'}\n              {...restProps}\n              data-pane-collapsed={collapsed ? '' : undefined}\n              data-pane-index={paneIndex}\n              data-pane-selected={selected ? '' : undefined}\n              ref={setRef}\n              style={style}\n            >\n              {PANE_DEBUG && (\n                <Card padding={4} tone={expanded ? 'primary' : 'caution'}>\n                  <Code size={1}>\n                    {[\n                      `#${paneIndex}`,\n                      `collapsed=${collapsed}`,\n                      `currentMinWidth=${currentMinWidth}`,\n                      `currentMaxWidth=${currentMaxWidth}`,\n                      `flex=${flex}`,\n                      `minWidth=${minWidth}`,\n                      `maxWidth=${maxWidth}`,\n                    ].join('\\n')}\n                  </Code>\n                </Card>\n              )}\n\n              <BoundaryElementProvider element={rootElement}>\n                {!hidden && (\n                  <Flex direction=\"column\" height=\"fill\">\n                    {children}\n                  </Flex>\n                )}\n              </BoundaryElementProvider>\n            </Root>\n          </IsLastPaneProvider>\n        </PaneContext.Provider>\n      </LegacyLayerProvider>\n\n      {divider}\n    </>\n  )\n})\n","import {Card} from '@sanity/ui'\nimport {styled} from 'styled-components'\n\nexport const Root = styled(Card)`\n  position: relative;\n  outline: none;\n`\n\nRoot.displayName = 'PaneContent__root'\n","import {useContext} from 'react'\nimport {PaneContext} from 'sanity/_singletons'\n\nimport {type PaneContextValue} from './types'\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport function usePane(): PaneContextValue {\n  const pane = useContext(PaneContext)\n\n  if (!pane) {\n    throw new Error('Pane: missing context value')\n  }\n\n  return pane\n}\n","import {type BoxOverflow} from '@sanity/ui'\nimport {type ElementType, type ForwardedRef, forwardRef, type HTMLProps} from 'react'\n\nimport {Root} from './PaneContent.styles'\nimport {usePane} from './usePane'\nimport {usePaneLayout} from './usePaneLayout'\n\ninterface PaneContentProps {\n  as?: ElementType | keyof React.JSX.IntrinsicElements\n  overflow?: BoxOverflow\n  padding?: number | number[]\n}\n\n/**\n * @hidden\n * @internal\n */\nexport const PaneContent = forwardRef(function PaneContent(\n  props: PaneContentProps & Omit<HTMLProps<HTMLDivElement>, 'as' | 'height' | 'ref'>,\n  ref: ForwardedRef<HTMLDivElement>,\n) {\n  const {as, children, overflow, padding, ...restProps} = props\n  const {collapsed} = usePane()\n  const {collapsed: layoutCollapsed} = usePaneLayout()\n\n  return (\n    <Root\n      data-testid=\"pane-content\"\n      forwardedAs={as}\n      {...restProps}\n      flex={1}\n      hidden={collapsed}\n      overflow={layoutCollapsed ? undefined : overflow}\n      padding={padding}\n      ref={ref}\n      tone=\"inherit\"\n    >\n      {children}\n    </Root>\n  )\n})\n","/**\n * Remove the spaces and lower case the string\n *\n * @param str - string to remove the spaces and lower case\n * @returns str with no spaces and lower case\n */\nexport function toLowerCaseNoSpaces(str: string | undefined): string {\n  if (!str) return ''\n  return str.toLocaleLowerCase().replaceAll(' ', '')\n}\n","import {CheckmarkIcon} from '@sanity/icons'\nimport {MenuDivider, Text} from '@sanity/ui'\nimport {type MouseEvent, useCallback} from 'react'\nimport {TooltipOfDisabled, useGetI18nText, useI18nText} from 'sanity'\nimport {useIntentLink} from 'sanity/router'\n\nimport {MenuGroup, MenuItem, type PopoverProps} from '../../../ui-components'\nimport {type Intent} from '../../structureBuilder'\nimport {toLowerCaseNoSpaces} from '../../util/toLowerCaseNoSpaces'\nimport {type _PaneMenuItem, type _PaneMenuNode} from './types'\n\nconst MENU_GROUP_POPOVER_PROPS: PopoverProps = {\n  constrainSize: true,\n  placement: 'left-start',\n  portal: true,\n}\n\nexport function PaneMenuButtonItem(props: {\n  disabled?: boolean\n  isAfterGroup: boolean\n  node: _PaneMenuNode\n}) {\n  const {disabled, isAfterGroup, node} = props\n  const getI18nText = useGetI18nText('i18n' in node ? node : undefined)\n\n  if (node.type === 'divider') {\n    return <MenuDivider />\n  }\n\n  const {title} = getI18nText(node)\n\n  if (node.type === 'group') {\n    if (node.children.length === 0) {\n      return null\n    }\n\n    if (node.expanded) {\n      return (\n        <>\n          {isAfterGroup && <MenuDivider />}\n          {node.children.map((child, childIndex) => (\n            <PaneMenuButtonItem\n              key={child.key}\n              disabled={disabled || Boolean(node.disabled)}\n              isAfterGroup={node.children[childIndex - 1]?.type === 'group'}\n              node={child}\n            />\n          ))}\n        </>\n      )\n    }\n\n    return (\n      <>\n        {isAfterGroup && <MenuDivider />}\n        <MenuGroup\n          disabled={disabled}\n          icon={node.icon}\n          popover={MENU_GROUP_POPOVER_PROPS}\n          text={title}\n        >\n          {node.children.map((child, childIndex) => (\n            <PaneMenuButtonItem\n              key={child.key}\n              disabled={disabled || Boolean(node.disabled)}\n              isAfterGroup={node.children[childIndex - 1]?.type === 'group'}\n              node={child}\n            />\n          ))}\n        </MenuGroup>\n      </>\n    )\n  }\n\n  return (\n    <>\n      {isAfterGroup && <MenuDivider />}\n      <PaneContextMenuItemResolver disabled={disabled} node={node} />\n    </>\n  )\n}\n\nfunction PaneContextMenuItemResolver(props: {disabled?: boolean; node: _PaneMenuItem}) {\n  const {node} = props\n\n  if (node.intent) {\n    return <PaneContextIntentMenuItem {...props} intent={node.intent} />\n  }\n\n  return <PaneContextMenuItem {...props} />\n}\n\nfunction PaneContextMenuItem(props: {disabled?: boolean; node: _PaneMenuItem}) {\n  const {disabled, node} = props\n  const tooltipContent = typeof node.disabled === 'object' && (\n    <Text size={1}>{node.disabled.reason}</Text>\n  )\n  const {title} = useI18nText(node)\n\n  return (\n    <TooltipOfDisabled content={tooltipContent} placement=\"left\">\n      <MenuItem\n        disabled={disabled || Boolean(node.disabled)}\n        hotkeys={node.hotkey?.split('+')}\n        icon={node.icon}\n        iconRight={node.iconRight || (node.selected && CheckmarkIcon)}\n        // eslint-disable-next-line react/jsx-handler-names\n        onClick={node.onAction}\n        pressed={node.selected}\n        text={title}\n        tone={node.tone}\n        data-testid={`action-${toLowerCaseNoSpaces(node.title)}`}\n      />\n    </TooltipOfDisabled>\n  )\n}\n\nfunction PaneContextIntentMenuItem(props: {\n  disabled?: boolean\n  intent: Intent\n  node: _PaneMenuItem\n}) {\n  const {disabled, intent, node} = props\n  const tooltipContent = typeof node.disabled === 'object' && (\n    <Text size={1}>{node.disabled.reason}</Text>\n  )\n  const intentLink = useIntentLink({intent: intent.type, params: intent.params})\n\n  const handleClick = useCallback(\n    (event: MouseEvent<HTMLDivElement>) => {\n      intentLink.onClick(event)\n      node.onAction()\n    },\n    [intentLink, node],\n  )\n\n  const {title} = useI18nText(node)\n\n  return (\n    <TooltipOfDisabled content={tooltipContent} placement=\"left\">\n      <MenuItem\n        as=\"a\"\n        disabled={disabled || Boolean(node.disabled)}\n        hotkeys={node.hotkey?.split('+')}\n        href={intentLink.href}\n        icon={node.icon}\n        iconRight={node.selected ? CheckmarkIcon : undefined}\n        onClick={handleClick}\n        pressed={node.selected}\n        text={title}\n        tone={node.tone}\n      />\n    </TooltipOfDisabled>\n  )\n}\n","import {Menu, MenuDivider} from '@sanity/ui'\nimport {type ReactNode, useId} from 'react'\nimport {ContextMenuButton} from 'sanity'\n\nimport {MenuButton, type PopoverProps} from '../../../ui-components'\nimport {PaneMenuButtonItem} from './PaneMenuButtonItem'\nimport {type _PaneMenuItem, type _PaneMenuNode} from './types'\n\ninterface PaneContextMenuButtonProps {\n  nodes: _PaneMenuNode[]\n  actionsNodes?: ReactNode\n}\n\nconst CONTEXT_MENU_POPOVER_PROPS: PopoverProps = {\n  constrainSize: true,\n  placement: 'bottom',\n  portal: true,\n}\n\nfunction nodesHasTone(nodes: _PaneMenuNode[], tone: NonNullable<_PaneMenuItem['tone']>): boolean {\n  return nodes.some((node) => {\n    return (\n      (node.type === 'item' && node.tone === tone) ||\n      (node.type === 'group' && nodesHasTone(node.children, tone))\n    )\n  })\n}\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport function PaneContextMenuButton(props: PaneContextMenuButtonProps) {\n  const {nodes, actionsNodes} = props\n  const id = useId()\n\n  const hasCritical = nodesHasTone(nodes, 'critical')\n  const hasCaution = nodesHasTone(nodes, 'caution')\n\n  return (\n    <MenuButton\n      button={\n        <ContextMenuButton\n          tone={hasCritical ? 'critical' : hasCaution ? 'caution' : undefined}\n          data-testid=\"pane-context-menu-button\"\n        />\n      }\n      id={id}\n      menu={\n        <Menu>\n          {actionsNodes && (\n            <>\n              {actionsNodes}\n              <MenuDivider />\n            </>\n          )}\n          {nodes.map((node, nodeIndex) => {\n            const isAfterGroup = nodes[nodeIndex - 1]?.type === 'group'\n            return <PaneMenuButtonItem key={node.key} isAfterGroup={isAfterGroup} node={node} />\n          })}\n        </Menu>\n      }\n      popover={CONTEXT_MENU_POPOVER_PROPS}\n    />\n  )\n}\n","import {Card, Layer} from '@sanity/ui'\nimport {styled} from 'styled-components'\n\nexport const Root = styled(Layer)`\n  position: sticky;\n  bottom: 0;\n`\n\nexport const RootCard = styled(Card)`\n  padding-bottom: env(safe-area-inset-bottom);\n`\n","import {Box} from '@sanity/ui'\nimport {type ForwardedRef, forwardRef, type ReactNode} from 'react'\nimport {LegacyLayerProvider} from 'sanity'\n\nimport {Root, RootCard} from './PaneFooter.styles'\nimport {usePane} from './usePane'\n\ninterface PaneFooterProps {\n  children?: ReactNode\n  padding?: number | number[]\n}\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport const PaneFooter = forwardRef(function PaneFooter(\n  props: PaneFooterProps,\n  ref: ForwardedRef<HTMLDivElement>,\n) {\n  const {children, padding} = props\n  const {collapsed} = usePane()\n\n  return (\n    <LegacyLayerProvider zOffset=\"paneFooter\">\n      <Root data-testid=\"pane-footer\" hidden={collapsed} ref={ref}>\n        <RootCard tone=\"inherit\">\n          <Box padding={padding}>{children}</Box>\n        </RootCard>\n      </Root>\n    </LegacyLayerProvider>\n  )\n})\n","import {Card, Flex, Layer, Text, TextSkeleton, type Theme} from '@sanity/ui'\nimport {css, styled} from 'styled-components'\n\ninterface RootProps {\n  $border?: boolean\n}\n\nexport const Root = styled(Layer)<RootProps>(({$border}) => {\n  return css`\n    line-height: 0;\n    position: sticky;\n    top: 0;\n\n    &:not([data-collapsed]):after {\n      content: '';\n      display: block;\n      position: absolute;\n      left: 0;\n      right: 0;\n      bottom: -1px;\n      border-bottom: 1px solid ${$border ? 'var(--card-border-color)' : 'transparent'};\n      opacity: 1;\n    }\n  `\n})\n\nexport const Layout = styled(Flex)`\n  transform-origin: calc(51px / 2);\n\n  [data-collapsed] > div > & {\n    transform: rotate(90deg);\n  }\n`\n\nexport const TitleCard = styled(Card)(({theme}: {theme: Theme}) => {\n  const {fg, bg} = theme.sanity.color.card.enabled\n\n  // Disable color updates on hover\n  return css`\n    background-color: ${bg};\n\n    [data-ui='Text'] {\n      color: ${fg};\n    }\n  `\n})\n\nexport const TitleTextSkeleton = styled(TextSkeleton)`\n  width: 66%;\n  max-width: 175px;\n`\n\nexport const TitleText = styled(Text)`\n  cursor: default;\n  outline: none;\n`\n","import {Box, Card, Flex, LayerProvider, useElementRect} from '@sanity/ui'\nimport {type ForwardedRef, forwardRef, type ReactNode, useCallback, useMemo} from 'react'\nimport {LegacyLayerProvider} from 'sanity'\n\nimport {Layout, Root, TitleCard, TitleText, TitleTextSkeleton} from './PaneHeader.styles'\nimport {usePane} from './usePane'\n\nexport type TabsType = 'default' | 'dropdown'\n\n/**\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport interface PaneHeaderProps {\n  actions?: ReactNode\n  backButton?: ReactNode\n  border?: boolean\n  contentAfter?: ReactNode\n  loading?: boolean\n  subActions?: ReactNode\n  tabIndex?: number\n  tabs?: ReactNode\n  title: ReactNode\n  appendTitle?: ReactNode\n}\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport const PaneHeader = forwardRef(function PaneHeader(\n  props: PaneHeaderProps,\n  ref: ForwardedRef<HTMLDivElement>,\n) {\n  const {\n    actions,\n    backButton,\n    border,\n    contentAfter,\n    loading,\n    subActions,\n    tabs,\n    tabIndex,\n    title,\n    appendTitle,\n  } = props\n  const {collapse, collapsed, expand, rootElement: paneElement} = usePane()\n  const paneRect = useElementRect(paneElement || null)\n\n  const layoutStyle = useMemo(\n    () => ({\n      width: collapsed ? paneRect?.height || window.innerHeight : undefined,\n    }),\n    [collapsed, paneRect],\n  )\n\n  const handleTitleClick = useCallback(() => {\n    if (collapsed) return\n    collapse()\n  }, [collapse, collapsed])\n\n  const handleLayoutClick = useCallback(() => {\n    if (!collapsed) return\n    expand()\n  }, [collapsed, expand])\n\n  const showTabsOrSubActions = Boolean(!collapsed && (tabs || subActions))\n\n  return (\n    <LayerProvider zOffset={100}>\n      <Root\n        $border={border}\n        data-collapsed={collapsed ? '' : undefined}\n        data-testid=\"pane-header\"\n        ref={ref}\n      >\n        <LegacyLayerProvider zOffset=\"paneHeader\">\n          <Card data-collapsed={collapsed ? '' : undefined} tone=\"inherit\">\n            <Layout\n              direction=\"column\"\n              gap={3}\n              onClick={handleLayoutClick}\n              padding={3}\n              sizing=\"border\"\n              style={layoutStyle}\n            >\n              <Flex align=\"flex-start\" gap={3}>\n                {backButton && <Box flex=\"none\">{backButton}</Box>}\n\n                <TitleCard\n                  __unstable_focusRing\n                  flex={1}\n                  onClick={handleTitleClick}\n                  paddingLeft={backButton ? 1 : 2}\n                  padding={2}\n                  tabIndex={tabIndex}\n                >\n                  {loading && (\n                    <Box>\n                      <TitleTextSkeleton animated radius={1} size={1} />\n                    </Box>\n                  )}\n                  {!loading && (\n                    <Flex align=\"center\" gap={1}>\n                      <TitleText size={1} textOverflow=\"ellipsis\" weight=\"semibold\">\n                        {title}\n                      </TitleText>\n                      {appendTitle}\n                    </Flex>\n                  )}\n                </TitleCard>\n\n                {actions && (\n                  <Box hidden={collapsed}>\n                    <LegacyLayerProvider zOffset=\"paneHeader\">{actions}</LegacyLayerProvider>\n                  </Box>\n                )}\n              </Flex>\n\n              {showTabsOrSubActions && (\n                <Flex align=\"center\" hidden={collapsed} overflow=\"auto\">\n                  <Box flex={1} marginRight={subActions ? 3 : 0}>\n                    {tabs}\n                  </Box>\n\n                  {subActions}\n                </Flex>\n              )}\n            </Layout>\n\n            {!collapsed && contentAfter}\n          </Card>\n        </LegacyLayerProvider>\n      </Root>\n    </LayerProvider>\n  )\n})\n","import {UnknownIcon} from '@sanity/icons'\nimport {Menu} from '@sanity/ui'\nimport {type MouseEvent, useCallback, useId} from 'react'\nimport {StatusButton, useI18nText, useTranslation} from 'sanity'\nimport {useIntentLink} from 'sanity/router'\n\nimport {Button, MenuButton} from '../../../ui-components'\nimport {type Intent} from '../../structureBuilder'\nimport {PaneMenuButtonItem} from './PaneMenuButtonItem'\nimport {type _PaneMenuGroup, type _PaneMenuItem} from './types'\n\nfunction getDisabledReason(node: _PaneMenuItem) {\n  if (!node.disabled) {\n    return {disabledReason: undefined, ariaLabel: undefined, isDisabled: false}\n  }\n\n  /**\n   * This component supports receiving a `reason: string | react.ReactNode`.\n   * We are casting it as string, to avoid the ts error, as content will be rendered into the tooltip which only accepts string, but it won't crash if it's a ReactNode.\n   * For the aria label, we want to check if it's actually a string, to avoid generating an aria-label with the value `[object Object]`.\n   */\n  const disabledReason =\n    typeof node.disabled === 'object' ? (node.disabled.reason as string) : undefined\n  const ariaLabel =\n    typeof node.disabled === 'object' && typeof node.disabled?.reason === 'string'\n      ? node.disabled.reason\n      : 'This is disabled'\n\n  return {disabledReason, ariaLabel, isDisabled: Boolean(node.disabled)}\n}\nexport interface PaneHeaderActionButtonProps {\n  node: _PaneMenuItem | _PaneMenuGroup\n}\n\nexport function PaneHeaderActionButton(props: PaneHeaderActionButtonProps) {\n  const {node} = props\n\n  if (node.type === 'item') {\n    return <PaneHeaderMenuItemActionButton node={node} />\n  }\n\n  if (node.type === 'group') {\n    return <PaneHeaderMenuGroupActionButton node={node} />\n  }\n\n  console.warn('unknown menu node (expected `type: \"item\" | \"group\"`):', node)\n\n  return null\n}\n\nexport interface PaneHeaderMenuItemActionButtonProps {\n  node: _PaneMenuItem\n}\n\nexport function PaneHeaderMenuItemActionButton(props: PaneHeaderMenuItemActionButtonProps) {\n  const {node} = props\n  const {title} = useI18nText(node)\n  const {t} = useTranslation()\n\n  if (node.intent) {\n    return <PaneHeaderActionIntentButton {...props} intent={node.intent} />\n  }\n\n  const {disabledReason, ariaLabel, isDisabled} = getDisabledReason(node)\n\n  return (\n    <StatusButton\n      disabled={isDisabled}\n      icon={node.icon}\n      // eslint-disable-next-line react/jsx-handler-names\n      onClick={node.onAction}\n      selected={node.selected}\n      tone={node.tone}\n      aria-label={ariaLabel || title || t('status-button.aria-label')}\n      tooltipProps={{\n        hotkeys: !isDisabled && node.hotkey ? node.hotkey.split('+') : undefined,\n        content: isDisabled ? disabledReason : title,\n      }}\n    />\n  )\n}\n\nfunction PaneHeaderActionIntentButton(props: {intent: Intent; node: _PaneMenuItem}) {\n  const {intent, node} = props\n  const intentLink = useIntentLink({intent: intent.type, params: intent.params})\n  const {t} = useTranslation()\n\n  const handleClick = useCallback(\n    (event: MouseEvent<HTMLButtonElement>) => {\n      intentLink.onClick(event)\n      node.onAction()\n    },\n    [intentLink, node],\n  )\n\n  const {disabledReason, ariaLabel, isDisabled} = getDisabledReason(node)\n\n  return (\n    <StatusButton\n      forwardedAs=\"a\"\n      disabled={isDisabled}\n      href={intentLink.href}\n      icon={node.icon}\n      onClick={handleClick}\n      selected={node.selected}\n      tone={node.tone}\n      aria-label={ariaLabel || node.title || t('status-button.aria-label')}\n      tooltipProps={{\n        hotkeys: !isDisabled && node.hotkey ? node.hotkey.split('+') : undefined,\n        content: isDisabled ? disabledReason : node.title,\n        placement: 'bottom',\n        portal: true,\n      }}\n    />\n  )\n}\n\nexport interface PaneHeaderMenuGroupActionButtonProps {\n  node: _PaneMenuGroup\n}\n\nfunction PaneHeaderMenuGroupActionButton(props: PaneHeaderMenuGroupActionButtonProps) {\n  const {node} = props\n  const {title} = useI18nText(node)\n\n  return (\n    <MenuButton\n      button={\n        <Button\n          disabled={!!node.disabled}\n          icon={node.icon ?? UnknownIcon}\n          label={title}\n          mode=\"bleed\"\n          tooltipProps={{content: node.title, portal: true}}\n        />\n      }\n      id={useId()}\n      menu={\n        <Menu>\n          {node.children.map((child, idx) => {\n            return (\n              <PaneMenuButtonItem\n                key={child.key}\n                disabled={Boolean(node.disabled)}\n                isAfterGroup={node.children[idx - 1]?.type === 'group'}\n                node={child}\n              />\n            )\n          })}\n        </Menu>\n      }\n    />\n  )\n}\n","import {Card} from '@sanity/ui'\nimport {styled} from 'styled-components'\n\nexport const Root = styled(Card)`\n  transition: opacity 200ms;\n  position: relative;\n  z-index: 1;\n  padding-left: env(safe-area-inset-left);\n  padding-right: env(safe-area-inset-right);\n  opacity: 0;\n\n  &:not([hidden]) {\n    display: flex;\n  }\n\n  &:not([data-collapsed]) {\n    overflow: auto;\n  }\n\n  &[data-mounted] {\n    opacity: 1;\n  }\n\n  &[data-resizing] {\n    pointer-events: none;\n  }\n`\n","import {PANE_DEFAULT_MIN_WIDTH} from '../constants'\nimport {type PaneConfigOpts, type PaneResizeCache} from '../types'\n\nexport function _calcPaneResize(\n  cache: PaneResizeCache,\n  left: PaneConfigOpts,\n  right: PaneConfigOpts,\n  deltaX: number,\n): {leftFlex: number; leftW: number; rightFlex: number; rightW: number} {\n  const sum = {\n    flex: cache.left.flex + cache.right.flex,\n    width: cache.left.width + cache.right.width,\n  }\n\n  const leftMinWidth = left.minWidth ?? PANE_DEFAULT_MIN_WIDTH\n  const rightMinWidth = right.minWidth ?? PANE_DEFAULT_MIN_WIDTH\n\n  const leftMaxWidth = Math.min(left.maxWidth || Infinity, sum.width - rightMinWidth)\n  const rightMaxWidth = Math.min(right.maxWidth || Infinity, sum.width - leftMinWidth)\n\n  // Get min. delta X\n  let minDeltaX = leftMinWidth - cache.left.width\n  const rightMinDeltaX = cache.right.width - rightMaxWidth\n  if (minDeltaX < rightMinDeltaX) {\n    minDeltaX = rightMinDeltaX\n  }\n\n  // Get max. delta X\n  let maxDeltaX = cache.right.width - rightMinWidth\n  const leftMaxDeltaX = leftMaxWidth - cache.left.width\n  if (maxDeltaX > leftMaxDeltaX) {\n    maxDeltaX = leftMaxDeltaX\n  }\n\n  const _deltaX = Math.min(Math.max(deltaX, minDeltaX), maxDeltaX)\n\n  const leftW = cache.left.width + _deltaX\n  const rightW = cache.right.width - _deltaX\n\n  const leftFlex = (leftW / sum.width) * sum.flex\n  const rightFlex = (rightW / sum.width) * sum.flex\n\n  return {leftFlex, leftW, rightFlex, rightW}\n}\n","/**\n * @internal\n */\nexport function _getDOMPath(rootElement: HTMLElement, el: HTMLElement): number[] {\n  const path: number[] = []\n\n  let e = el\n\n  while (e !== rootElement) {\n    const parentElement = e.parentElement\n\n    if (!parentElement) return path\n\n    const children = Array.from(parentElement.childNodes)\n    const index = children.indexOf(e)\n\n    path.unshift(index)\n\n    if (parentElement === rootElement) {\n      return path\n    }\n\n    e = parentElement\n  }\n\n  return path\n}\n","import {_getDOMPath} from './_getDOMPath'\n\nconst EMPTY_PATH: number[] = []\n\n/**\n * @internal\n */\nexport function _sortElements(rootElement: HTMLElement, elements: HTMLElement[]): void {\n  // Create a map containing the DOM path of each pane element.\n  // The DOM path is relative to the `rootElement`, and is used in the next step for sorting.\n  const map = new WeakMap<HTMLElement, number[]>()\n\n  for (const element of elements) {\n    map.set(element, _getDOMPath(rootElement, element))\n  }\n\n  const _sortByElementPath = (a: HTMLElement, b: HTMLElement) => {\n    const _a = map.get(a) || EMPTY_PATH\n    const _b = map.get(b) || EMPTY_PATH\n\n    const len = Math.max(_a.length, _b.length)\n\n    // Loop until there are different indexes\n    for (let i = 0; i < len; i += 1) {\n      const aIndex = _a[i] || -1\n      const bIndex = _b[i] || -1\n\n      if (aIndex !== bIndex) {\n        return aIndex - bIndex\n      }\n    }\n\n    return 0\n  }\n\n  elements.sort(_sortByElementPath)\n}\n","import {PANE_COLLAPSED_WIDTH, PANE_DEFAULT_MIN_WIDTH} from './constants'\nimport {_calcPaneResize, _sortElements} from './helpers'\nimport {\n  type PaneConfigOpts,\n  type PaneData,\n  type PaneResizeCache,\n  type PaneResizeData,\n} from './types'\n\nexport interface PaneLayoutState {\n  expandedElement: HTMLElement | null\n  panes: PaneData[]\n  resizing: boolean\n}\n\nexport type PaneLayoutStateObserver = (state: PaneLayoutState) => void\n\nexport interface PaneLayoutController {\n  collapse: (element: HTMLElement) => void\n  expand: (element: HTMLElement) => void\n  mount: (element: HTMLElement, options: PaneConfigOpts) => () => void\n  resize: (type: 'start' | 'move' | 'end', leftElement: HTMLElement, deltaX: number) => void\n  setRootElement: (nextRootElement: HTMLElement | null) => void\n  setRootWidth: (nextRootWidth: number) => void\n  subscribe: (observer: PaneLayoutStateObserver) => () => void\n}\n\nexport function createPaneLayoutController(): PaneLayoutController {\n  const observers: PaneLayoutStateObserver[] = []\n  const elements: HTMLElement[] = []\n  const optionsMap = new WeakMap<HTMLElement, PaneConfigOpts & {original: PaneConfigOpts}>()\n  const userCollapsedElementSet = new Set<HTMLElement>()\n  const cache: Partial<PaneResizeCache> = {}\n\n  // Mutable internal state\n  let rootElement: HTMLElement | null = null\n  let rootWidth = 0\n  let expandedElement: HTMLElement | null = null\n  let resizeDataMap = new Map<HTMLElement, PaneResizeData>()\n  let resizing = false\n\n  function collapse(element: HTMLElement) {\n    userCollapsedElementSet.add(element)\n\n    if (expandedElement === element) {\n      expandedElement = null\n    }\n\n    _notifyObservers()\n  }\n\n  function expand(element: HTMLElement) {\n    userCollapsedElementSet.delete(element)\n\n    expandedElement = element\n\n    _notifyObservers()\n  }\n\n  function mount(element: HTMLElement, options: PaneConfigOpts) {\n    optionsMap.set(element, {...options, original: options})\n\n    elements.push(element)\n\n    if (rootElement) {\n      _sortElements(rootElement, elements)\n    }\n\n    expand(element)\n\n    return () => {\n      const idx = elements.indexOf(element)\n\n      if (idx > -1) {\n        elements.splice(idx, 1)\n      }\n\n      optionsMap.delete(element)\n\n      _notifyObservers()\n    }\n  }\n\n  function resize(type: 'start' | 'move' | 'end', leftElement: HTMLElement, deltaX: number) {\n    const leftIndex = elements.indexOf(leftElement)\n    const leftOptions = optionsMap.get(leftElement)\n\n    if (!leftOptions) return\n\n    const rightElement = elements[leftIndex + 1]\n    const rightOptions = optionsMap.get(rightElement)\n\n    if (!rightOptions) return\n\n    if (type === 'start') {\n      resizing = true\n\n      cache.left = {\n        element: leftElement,\n        flex: leftOptions.flex || 1,\n        width: leftElement.offsetWidth,\n      }\n\n      cache.right = {\n        element: rightElement,\n        flex: rightOptions.flex || 1,\n        width: rightElement.offsetWidth,\n      }\n\n      _notifyObservers()\n    }\n\n    if (type === 'move' && cache.left && cache.right) {\n      resizeDataMap = new Map<HTMLElement, PaneResizeData>()\n\n      const {leftW, rightW, leftFlex, rightFlex} = _calcPaneResize(\n        cache as PaneResizeCache,\n        leftOptions,\n        rightOptions,\n        deltaX,\n      )\n\n      // update resize cache\n      resizeDataMap.set(leftElement, {flex: leftFlex, width: leftW})\n      resizeDataMap.set(rightElement, {flex: rightFlex, width: rightW})\n\n      _notifyObservers()\n    }\n\n    if (type === 'end') {\n      resizing = false\n\n      const leftResizeData = resizeDataMap.get(leftElement)\n      const rightResizeData = resizeDataMap.get(rightElement)\n\n      // Update left options\n      optionsMap.set(leftElement, {\n        ...leftOptions,\n        currentMinWidth: 0,\n        currentMaxWidth: leftOptions.maxWidth ?? Infinity,\n        flex: leftResizeData?.flex ?? leftOptions.flex,\n      })\n\n      // Update right options\n      optionsMap.set(rightElement, {\n        ...rightOptions,\n        currentMinWidth: 0,\n        currentMaxWidth: leftOptions.maxWidth ?? Infinity,\n        flex: rightResizeData?.flex ?? rightOptions.flex,\n      })\n\n      // Reset resize data map\n      resizeDataMap = new Map()\n\n      // Reset cache\n      delete cache.left\n      delete cache.right\n\n      _notifyObservers()\n    }\n  }\n\n  function setRootElement(nextRootElement: HTMLElement | null) {\n    rootElement = nextRootElement\n  }\n\n  function setRootWidth(nextRootWidth: number) {\n    rootWidth = nextRootWidth\n    _notifyObservers()\n  }\n\n  function subscribe(observer: PaneLayoutStateObserver) {\n    observers.push(observer)\n\n    return () => {\n      const idx = observers.push(observer)\n\n      if (idx > -1) {\n        observers.splice(idx, 1)\n      }\n    }\n  }\n\n  return {collapse, expand, mount, resize, setRootElement, setRootWidth, subscribe}\n\n  function _notifyObservers() {\n    if (!rootWidth) return\n\n    // Create a reversed array of pane elements, so we can loop over them backwards.\n    // Place the expanded element first (so it has the least chance of being collapsed).\n    const _elements: HTMLElement[] = []\n    for (const element of elements) {\n      if (element !== expandedElement) {\n        _elements.unshift(element)\n      }\n    }\n    if (expandedElement) {\n      _elements.unshift(expandedElement)\n    }\n\n    const dataMap = new WeakMap<HTMLElement, PaneData>()\n    const len = _elements.length\n    const lastElement = _elements[0]\n    const collapsedWidth = (len - 1) * PANE_COLLAPSED_WIDTH\n\n    let remaingWidth = rootWidth - collapsedWidth\n\n    for (const element of _elements) {\n      const options = optionsMap.get(element)\n\n      if (!options) {\n        continue\n      }\n\n      const minWidth = options.currentMinWidth || options.minWidth || PANE_DEFAULT_MIN_WIDTH\n      const isLast = element === lastElement\n\n      // A pane is collapsed if:\n      // - it’s explictly collapsed by the user\n      const userCollapsed = userCollapsedElementSet.has(element)\n      // - it’s minimum width is larger than the remaining width\n      const sizeCollapsed = minWidth > remaingWidth\n      // - if the element is not the last (expanded pane)\n      const collapsed = isLast ? false : userCollapsed || sizeCollapsed\n\n      const resizeData = resizeDataMap.get(element)\n\n      // Collect pane data\n      dataMap.set(element, {\n        element: element,\n        collapsed: collapsed,\n        currentMinWidth: resizeData?.width ?? options.currentMinWidth,\n        currentMaxWidth: resizeData?.width ?? options.currentMaxWidth,\n        flex: resizeData?.flex ?? options.flex ?? 1,\n      })\n\n      // Update remaining width\n      if (collapsed) {\n        remaingWidth -= PANE_COLLAPSED_WIDTH\n      } else {\n        remaingWidth -= minWidth - PANE_COLLAPSED_WIDTH\n      }\n    }\n\n    const panes: PaneData[] = []\n\n    for (const element of elements) {\n      const data = dataMap.get(element)\n\n      if (data) panes.push(data)\n    }\n\n    for (const observer of observers) {\n      observer({\n        expandedElement: expandedElement || elements[elements.length - 1] || null,\n        panes,\n        resizing,\n      })\n    }\n  }\n}\n","import {type CardProps, useElementRect} from '@sanity/ui'\nimport {type HTMLProps, useEffect, useMemo, useState} from 'react'\nimport {PaneLayoutContext} from 'sanity/_singletons'\n\nimport {Root} from './PaneLayout.styles'\nimport {createPaneLayoutController, type PaneLayoutState} from './paneLayoutController'\nimport {type PaneLayoutContextValue} from './types'\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport interface PaneLayoutProps {\n  minWidth?: number\n  onCollapse?: () => void\n  onExpand?: () => void\n}\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport function PaneLayout(\n  props: PaneLayoutProps &\n    CardProps &\n    Omit<HTMLProps<HTMLDivElement>, 'as' | 'height' | 'ref' | 'wrap'>,\n) {\n  const {children, minWidth, onCollapse, onExpand, ...restProps} = props\n  const [controller] = useState(() => createPaneLayoutController())\n  const [rootElement, setRootElement] = useState<HTMLDivElement | null>(null)\n  const rootRect = useElementRect(rootElement)\n  const width = rootRect?.width || 0\n  const collapsed = width === undefined || !minWidth ? undefined : width < minWidth\n  const [state, setState] = useState<PaneLayoutState>({\n    expandedElement: null,\n    panes: [],\n    resizing: false,\n  })\n\n  // Set root element\n  useEffect(() => controller.setRootElement(rootElement), [controller, rootElement])\n\n  // Set root size\n  useEffect(() => controller.setRootWidth(width), [controller, width])\n\n  // Subscribe to state changes\n  useEffect(() => controller.subscribe(setState), [controller])\n\n  // Call the `onCollapse` and `onExpand` callbacks as the `collapsed` boolean changes\n  useEffect(() => {\n    if (collapsed === undefined) return\n    if (collapsed && onCollapse) onCollapse()\n    if (!collapsed && onExpand) onExpand()\n  }, [collapsed, onCollapse, onExpand])\n\n  // This is the context value that gives each pane the information they need\n  const paneLayout: PaneLayoutContextValue = useMemo(\n    () => ({\n      collapse: controller.collapse,\n      collapsed,\n      expand: controller.expand,\n      expandedElement: state.expandedElement,\n      mount: controller.mount,\n      panes: state.panes,\n      resize: controller.resize,\n      resizing: state.resizing,\n    }),\n    [collapsed, controller, state.expandedElement, state.panes, state.resizing],\n  )\n\n  return (\n    <PaneLayoutContext.Provider value={paneLayout}>\n      <Root\n        data-ui=\"PaneLayout\"\n        {...restProps}\n        data-collapsed={collapsed ? '' : undefined}\n        // The `data-resizing` attribute is used to improve cursor behavior\n        data-resizing={state.resizing ? '' : undefined}\n        // The `data-mounted` attribute is used to fade in the layout and prevent flash of\n        // non-collapsed panes\n        data-mounted={width ? '' : undefined}\n        ref={setRootElement}\n      >\n        {children}\n      </Root>\n    </PaneLayoutContext.Provider>\n  )\n}\n","import {Box, type CardTone} from '@sanity/ui'\n\nimport {Pane, PaneContent, PaneHeader} from '../../components/pane'\n\n/**\n * @internal\n */\nexport function ErrorPane(props: {\n  children?: React.ReactNode\n  currentMinWidth?: number\n  flex?: number\n  minWidth?: number\n  paneKey: string\n  title?: React.ReactNode\n  tone?: CardTone\n}) {\n  const {\n    children,\n    currentMinWidth,\n    flex,\n    minWidth,\n    paneKey,\n    title = 'Error',\n    tone = 'critical',\n  } = props\n\n  return (\n    <Pane\n      currentMinWidth={currentMinWidth}\n      flex={flex}\n      id={paneKey}\n      minWidth={minWidth}\n      tone={tone}\n    >\n      <PaneHeader title={title} />\n      <PaneContent overflow=\"auto\">\n        <Box paddingX={4} paddingY={5}>\n          {children}\n        </Box>\n      </PaneContent>\n    </Pane>\n  )\n}\n","import {useEffect, useState} from 'react'\n\nexport function Delay({\n  children,\n  ms = 0,\n}: {\n  children?: React.JSX.Element | (() => React.JSX.Element)\n  ms?: number\n}): React.JSX.Element {\n  const [ready, setReady] = useState(ms <= 0)\n\n  useEffect(() => {\n    if (ms <= 0) {\n      return undefined\n    }\n\n    const timeoutId = setTimeout(() => setReady(true), ms)\n\n    return () => {\n      clearTimeout(timeoutId)\n    }\n  }, [ms])\n\n  if (!ready || !children) {\n    return <></>\n  }\n\n  return typeof children === 'function' ? children() : children\n}\n","import {merge, type Observable, of} from 'rxjs'\nimport {delay, mapTo} from 'rxjs/operators'\nimport {isDev} from 'sanity'\n\n/**\n * @internal\n */\nexport type WaitMessage = {messageKey: string} | {message: string}\n\n/**\n * @internal\n */\nexport function getWaitMessages(path: string[]): Observable<WaitMessage> {\n  const thresholds: (WaitMessage & {ms: number})[] = [\n    {ms: 300, messageKey: 'panes.resolving.default-message'},\n    {ms: 5000, messageKey: 'panes.resolving.slow-resolve-message'},\n  ]\n\n  if (isDev) {\n    const message = [\n      'Check console for errors?',\n      'Is your observable/promise resolving?',\n      path.length > 0 ? `Structure path: ${path.join(' ➝ ')}` : '',\n    ]\n\n    thresholds.push({\n      ms: 10000,\n      message: message.join('\\n'),\n    })\n  }\n\n  const src = of(null)\n\n  return merge(\n    ...thresholds.map((threshold) =>\n      src.pipe(\n        mapTo(\n          'messageKey' in threshold\n            ? {messageKey: threshold.messageKey}\n            : {message: threshold.message},\n        ),\n        delay(threshold.ms),\n      ),\n    ),\n  )\n}\n","import {_raf2, type CardTone, Flex} from '@sanity/ui'\nimport {memo, useEffect, useMemo, useState} from 'react'\nimport {type Observable} from 'rxjs'\nimport {LoadingBlock, useTranslation} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Delay} from '../../components/Delay'\nimport {Pane, PaneContent} from '../../components/pane'\nimport {structureLocaleNamespace} from '../../i18n'\nimport {getWaitMessages, type WaitMessage} from './getWaitMessages'\n\ninterface LoadingPaneProps {\n  delay?: number\n  flex?: number\n  message?: string | ((p: string[]) => string | Observable<WaitMessage>)\n  minWidth?: number\n  paneKey: string\n  path?: string\n  selected?: boolean\n  title?: string\n  tone?: CardTone\n}\n\nconst DELAY = false\nconst DEFAULT_MESSAGE_KEY = 'panes.resolving.default-message'\n\nconst Content = styled(Flex)`\n  opacity: 0;\n  transition: opacity 200ms;\n\n  &[data-mounted] {\n    opacity: 1;\n  }\n`\n\n/**\n * @internal\n */\nexport const LoadingPane = memo((props: LoadingPaneProps) => {\n  const {\n    delay = 300,\n    flex,\n    message: messageProp = getWaitMessages,\n    minWidth,\n    paneKey,\n    path,\n    selected,\n    title,\n    tone,\n  } = props\n\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const resolvedMessage = useMemo(() => {\n    if (typeof messageProp === 'function') {\n      return messageProp(path ? path.split(';') : [])\n    }\n\n    return messageProp\n  }, [messageProp, path])\n\n  const [currentMessage, setCurrentMessage] = useState<string | null>(() => {\n    if (typeof resolvedMessage === 'string') return resolvedMessage\n    return t(DEFAULT_MESSAGE_KEY)\n  })\n\n  useEffect(() => {\n    if (typeof resolvedMessage !== 'object') return undefined\n    if (typeof resolvedMessage.subscribe !== 'function') return undefined\n\n    const sub = resolvedMessage.subscribe((message) => {\n      setCurrentMessage('messageKey' in message ? t(message.messageKey) : message.message)\n    })\n\n    return () => sub.unsubscribe()\n  }, [resolvedMessage, t])\n\n  const [contentElement, setContentElement] = useState<HTMLDivElement | null>(null)\n  const [mounted, setMounted] = useState(false)\n\n  useEffect(() => {\n    if (!contentElement) return undefined\n    return _raf2(() => setMounted(true))\n  }, [contentElement])\n\n  const content = (\n    <Content\n      align=\"center\"\n      data-mounted={mounted ? '' : undefined}\n      direction=\"column\"\n      height=\"fill\"\n      justify=\"center\"\n      ref={setContentElement}\n    >\n      <LoadingBlock showText title={title || currentMessage} />\n    </Content>\n  )\n\n  return (\n    <Pane flex={flex} id={paneKey} minWidth={minWidth} selected={selected} tone={tone}>\n      <PaneContent>{DELAY ? <Delay ms={delay}>{content}</Delay> : content}</PaneContent>\n    </Pane>\n  )\n})\n\nLoadingPane.displayName = 'Memo(LoadingPane)'\n","import {useContext} from 'react'\nimport {DocumentPaneContext} from 'sanity/_singletons'\n\nimport {type DocumentPaneContextValue} from './DocumentPaneContext'\n\n/** @internal */\nexport function useDocumentPane(): DocumentPaneContextValue {\n  const documentPane = useContext(DocumentPaneContext)\n\n  if (!documentPane) {\n    throw new Error('DocumentPane: missing context value')\n  }\n\n  return documentPane\n}\n","import {useCallback, useLayoutEffect, useRef} from 'react'\nimport {\n  COMMENTS_INSPECTOR_NAME,\n  CommentsEnabledProvider,\n  CommentsProvider,\n  useCommentsEnabled,\n  usePerspective,\n  useStudioUrl,\n} from 'sanity'\nimport {useRouter} from 'sanity/router'\n\nimport {usePaneRouter} from '../../../components'\nimport {useDocumentPane} from '../useDocumentPane'\n\ninterface CommentsWrapperProps {\n  children: React.ReactNode\n  documentId: string\n  documentType: string\n}\n\n/**\n * @internal\n * A wrapper that conditionally wraps the document layout in a comments provider\n * if the feature is enabled for the project and the current document.\n */\nexport function CommentsWrapper(props: CommentsWrapperProps) {\n  const {children, documentId, documentType} = props\n\n  return (\n    <CommentsEnabledProvider documentId={documentId} documentType={documentType}>\n      <CommentsProviderWrapper documentId={documentId} documentType={documentType}>\n        {children}\n      </CommentsProviderWrapper>\n    </CommentsEnabledProvider>\n  )\n}\n\nfunction CommentsProviderWrapper(props: CommentsWrapperProps) {\n  const {children, documentId, documentType} = props\n\n  const {enabled} = useCommentsEnabled()\n  const {connectionState, onPathOpen, inspector, openInspector} = useDocumentPane()\n  const {selectedReleaseId} = usePerspective()\n  const {params, setParams} = usePaneRouter()\n  const {studioUrl} = useStudioUrl(window.location.origin)\n  const {resolveIntentLink} = useRouter()\n\n  const selectedCommentId = params?.comment\n  const paramsRef = useRef(params)\n\n  useLayoutEffect(() => {\n    paramsRef.current = params\n  }, [params])\n\n  const getCommentLink = useCallback(\n    (commentId: string) => {\n      const intentLink = resolveIntentLink('edit', {\n        id: documentId,\n        type: documentType,\n        inspect: COMMENTS_INSPECTOR_NAME,\n        comment: commentId,\n      })\n      return `${studioUrl}${intentLink}`\n    },\n    [documentId, documentType, resolveIntentLink, studioUrl],\n  )\n\n  const handleClearSelectedComment = useCallback(() => {\n    setParams({...paramsRef.current, comment: undefined})\n  }, [setParams])\n\n  const handleOpenCommentsInspector = useCallback(() => {\n    if (inspector?.name === COMMENTS_INSPECTOR_NAME) return\n\n    openInspector(COMMENTS_INSPECTOR_NAME)\n  }, [inspector?.name, openInspector])\n\n  // If comments are not enabled, render the default document layout\n  if (!enabled) {\n    return <>{children}</>\n  }\n\n  return (\n    <CommentsProvider\n      documentId={documentId}\n      documentType={documentType}\n      getCommentLink={getCommentLink}\n      isCommentsOpen={inspector?.name === COMMENTS_INSPECTOR_NAME}\n      isConnecting={connectionState === 'connecting'}\n      onClearSelectedComment={handleClearSelectedComment}\n      onCommentsOpen={handleOpenCommentsInspector}\n      onPathOpen={onPathOpen}\n      selectedCommentId={selectedCommentId}\n      sortOrder=\"desc\"\n      type=\"field\"\n      releaseId={selectedReleaseId}\n    >\n      {children}\n    </CommentsProvider>\n  )\n}\n","import {useContext} from 'react'\nimport {PaneRouterContext} from 'sanity/_singletons'\n\nimport {type PaneRouterContextValue} from './types'\n\n/**\n *\n * @hidden\n * @beta\n */\nexport function usePaneRouter(): PaneRouterContextValue {\n  return useContext(PaneRouterContext)\n}\n","import {useMemo} from 'react'\nimport {\n  getReleaseIdFromReleaseDocumentId,\n  getVersionFromId,\n  type ReleaseDocument,\n  useActiveReleases,\n  useArchivedReleases,\n  useDocumentVersions,\n  usePerspective,\n} from 'sanity'\n\nimport {usePaneRouter} from '../components/paneRouter/usePaneRouter'\nimport {type DocumentPaneContextValue} from '../panes/document/DocumentPaneContext'\n\ntype FilterReleases = {\n  notCurrentReleases: ReleaseDocument[]\n  currentReleases: ReleaseDocument[]\n  inCreation: ReleaseDocument | null\n}\n\n/**\n * @internal\n */\nexport function useFilteredReleases({\n  displayed,\n  documentId,\n}: Pick<DocumentPaneContextValue, 'displayed' | 'documentId'>): FilterReleases {\n  const {selectedReleaseId} = usePerspective()\n  const {data: releases} = useActiveReleases()\n  const {data: archivedReleases} = useArchivedReleases()\n  const {data: documentVersions} = useDocumentVersions({documentId})\n  const isCreatingDocument = displayed && !displayed._createdAt\n  const {params} = usePaneRouter()\n\n  return useMemo(() => {\n    if (!documentVersions) return {notCurrentReleases: [], currentReleases: [], inCreation: null}\n    // Gets the releases ids from the document versions, it means, the releases that the document belongs to\n    const releasesIds = documentVersions.map((id) => getVersionFromId(id))\n    const activeReleases = releases.reduce(\n      (acc: FilterReleases, release) => {\n        const versionDocExists = releasesIds.includes(\n          getReleaseIdFromReleaseDocumentId(release._id),\n        )\n        const releaseId = getReleaseIdFromReleaseDocumentId(release._id)\n        const isCreatingThisVersion =\n          isCreatingDocument &&\n          releaseId === getVersionFromId(displayed._id || '') &&\n          releaseId === selectedReleaseId\n\n        if (isCreatingThisVersion) {\n          acc.inCreation = release\n        } else if (versionDocExists) {\n          acc.currentReleases.push(release)\n        } else {\n          acc.notCurrentReleases.push(release)\n        }\n        return acc\n      },\n      {notCurrentReleases: [], currentReleases: [], inCreation: null},\n    )\n\n    // without historyVersion, version is not in an archived release\n    if (!params?.historyVersion) return activeReleases\n\n    const archivedRelease = archivedReleases.find(\n      (r) => getReleaseIdFromReleaseDocumentId(r._id) === params?.historyVersion,\n    )\n\n    // only for explicitly archived releases; published releases use published perspective\n    if (archivedRelease?.state === 'archived') {\n      activeReleases.currentReleases.push(archivedRelease)\n    }\n\n    return activeReleases\n  }, [\n    archivedReleases,\n    isCreatingDocument,\n    displayed?._id,\n    documentVersions,\n    params?.historyVersion,\n    releases,\n    selectedReleaseId,\n  ])\n}\n","import {useMemo} from 'react'\nimport {getReleaseIdFromReleaseDocumentId, getVersionId, useWorkspace} from 'sanity'\n\nimport {type DocumentPaneContextValue} from '../panes/document/DocumentPaneContext'\nimport {useFilteredReleases} from './useFilteredReleases'\n\n/**\n * @internal\n */\nexport interface DocumentIdStack {\n  /**\n   * The position of the displayed document within the stack.\n   */\n  position: number\n  /**\n   * The id of the previous document in the stack.\n   */\n  previousId?: string\n  /**\n   * The id of the next document in the stack.\n   */\n  nextId?: string\n  /**\n   * An array of document ids comprising the stack the displayed document is a member of, ordered per\n   * release layering.\n   */\n  stack: string[]\n}\n\n/**\n * Get a stack of document ids representing existing versions of the provided document with release\n * layering applied.\n *\n * @internal\n */\nexport function useDocumentIdStack({\n  displayed,\n  documentId,\n  editState,\n}: Pick<DocumentPaneContextValue, 'displayed' | 'documentId' | 'editState'>): DocumentIdStack {\n  const {\n    document: {\n      drafts: {enabled: isDraftModelEnabled},\n    },\n  } = useWorkspace()\n\n  const filteredReleases = useFilteredReleases({displayed, documentId})\n\n  const systemStack = [\n    editState?.published?._id,\n    isDraftModelEnabled ? editState?.draft?._id : [],\n  ].flat()\n\n  const releaseStack = filteredReleases.currentReleases.map(\n    (release) =>\n      editState?.id && getVersionId(editState.id, getReleaseIdFromReleaseDocumentId(release._id)),\n  )\n\n  const stack = systemStack.concat(releaseStack).filter((id) => typeof id === 'string')\n\n  const position = useMemo(\n    () => stack.findIndex((id) => id === displayed?._id),\n    [displayed?._id, stack],\n  )\n\n  const previousId = useMemo(() => stack[position - 1] ?? undefined, [position, stack])\n  const nextId = useMemo(() => stack[position + 1] ?? undefined, [position, stack])\n\n  return {\n    position,\n    previousId,\n    nextId,\n    stack,\n  }\n}\n","import {useContext} from 'react'\nimport {StructureToolContext} from 'sanity/_singletons'\n\nimport {type StructureToolContextValue} from './types'\n\n/** @internal */\nexport function useStructureTool(): StructureToolContextValue {\n  const structureTool = useContext(StructureToolContext)\n  if (!structureTool) throw new Error(`StructureTool: missing context value`)\n\n  return structureTool\n}\n","import {type PaneRouterContextValue} from '../../components'\nimport {type PaneMenuItemGroup} from '../../types'\n\nexport const DOCUMENT_PANEL_MIN_WIDTH = 320\nexport const DOCUMENT_PANEL_INITIAL_MIN_WIDTH = 600\n\nexport const DOCUMENT_INSPECTOR_MIN_WIDTH = 320\nexport const DOCUMENT_INSPECTOR_MAX_WIDTH = 540\n\nexport const EMPTY_PARAMS: NonNullable<PaneRouterContextValue['params']> = {}\n\nexport const INSPECT_ACTION_PREFIX = 'inspect:'\n\nexport const DEFAULT_MENU_ITEM_GROUPS: PaneMenuItemGroup[] = [{id: 'inspectors'}, {id: 'links'}]\n\n// inspectors\nexport const HISTORY_INSPECTOR_NAME = 'sanity/structure/history'\nexport const VALIDATION_INSPECTOR_NAME = 'sanity/structure/validation'\n","import {memo, useCallback, useEffect, useMemo, useState} from 'react'\nimport {type DocumentInspector, type DocumentInspectorMenuItem, useUnique} from 'sanity'\n\ninterface DocumentInspectorMenuItemsResolverProps {\n  documentId: string\n  documentType: string\n  inspectors: DocumentInspector[]\n  onMenuItems: (items: DocumentInspectorMenuItem[]) => void\n}\n\n// The menu item in a document inspector are resolved in a React hook (`useMenuItem`).\n// This means that the menu item needs to be resolved in a React component (in accordance with the rules of hooks).\n// In this component, we map over the configured inspectors and render a `InspectorMenuItem` for each.\n// The `InspectorMenuItem` will resolve the menu item in a React hook and call the `setMenuItem` callback\n// with the resolved menu item and the index of the inspector.\n// Finally, we call the `onMenuItems` callback with the resolved menu items.\nexport function DocumentInspectorMenuItemsResolver(props: DocumentInspectorMenuItemsResolverProps) {\n  const {documentId, documentType, inspectors, onMenuItems} = props\n\n  const len = inspectors.length\n  const [menuItems, setMenuItems] = useState<DocumentInspectorMenuItem[]>(() =>\n    Array.from(new Array(len)),\n  )\n\n  useEffect(() => {\n    if (menuItems.length !== len) {\n      const newFieldActions = Array.from(new Array(len))\n\n      for (let i = 0; i < len; i++) {\n        newFieldActions[i] = menuItems[i]\n      }\n\n      setMenuItems(newFieldActions)\n    }\n  }, [len, menuItems])\n\n  const setMenuItem = useCallback((index: number, node: DocumentInspectorMenuItem) => {\n    setMenuItems((prev) => {\n      const next = [...prev]\n      next[index] = node\n      return next\n    })\n  }, [])\n\n  useEffect(() => {\n    onMenuItems(menuItems.filter(Boolean))\n  }, [menuItems, onMenuItems])\n\n  const InspectorMenuItems = useMemo(() => {\n    return inspectors.map((inspector, index) => {\n      return inspector.useMenuItem\n        ? ([\n            defineInspectorMenuItemComponent({\n              documentId,\n              documentType,\n              index,\n              setMenuItem,\n              useMenuItem: inspector.useMenuItem,\n            }),\n            inspector.name,\n          ] as const)\n        : ([() => null, ''] as const)\n    })\n  }, [documentId, documentType, inspectors, setMenuItem])\n\n  return (\n    <>\n      {InspectorMenuItems.map(([InspectorMenuItem, key]) => key && <InspectorMenuItem key={key} />)}\n    </>\n  )\n}\nDocumentInspectorMenuItemsResolver.displayName = 'DocumentInspectorMenuItemsResolver'\n\nfunction defineInspectorMenuItemComponent({\n  documentId,\n  documentType,\n  index,\n  setMenuItem,\n  useMenuItem,\n}: {\n  documentId: string\n  documentType: string\n  index: number\n  setMenuItem: (index: number, node: DocumentInspectorMenuItem) => void\n  useMenuItem: NonNullable<DocumentInspector['useMenuItem']>\n}) {\n  return memo(function InspectorMenuItem() {\n    const menuItem = useMenuItem({\n      documentId,\n      documentType,\n    })\n    const node = useUnique(menuItem)\n\n    useEffect(() => {\n      setMenuItem(index, node)\n    }, [node])\n\n    return null\n  })\n}\n","import {useMemo} from 'react'\nimport {\n  prepareForPreview,\n  unstable_useValuePreview as useValuePreview,\n  useTranslation,\n} from 'sanity'\n\nimport {structureLocaleNamespace} from '../../i18n'\nimport {useDocumentPane} from './useDocumentPane'\n\n/**\n * useDocumentTitle hook return type.\n *\n * @beta\n * @hidden\n */\nexport interface UseDocumentTitle {\n  error?: string\n  title?: string\n}\n\n/**\n * React hook that returns the document title for the current document in the document pane.\n *\n * @beta\n * @hidden\n *\n * @returns The document title or error. See {@link UseDocumentTitle}\n */\nexport function useDocumentTitle(): UseDocumentTitle {\n  const {connectionState, schemaType, editState, isDeleted, lastRevisionDocument} =\n    useDocumentPane()\n  const {t} = useTranslation(structureLocaleNamespace)\n  // follows the same logic as the StructureTitle component\n  const documentValue = useMemo(() => {\n    return isDeleted\n      ? lastRevisionDocument\n      : editState?.version || editState?.draft || editState?.published\n  }, [isDeleted, lastRevisionDocument, editState])\n  const subscribed = Boolean(documentValue)\n\n  // For deleted documents, we need to handle the preview differently since useValuePreview\n  // will return null for deleted documents. Instead, we directly prepare the preview\n  // from the lastRevisionDocument data.\n  const deletedDocumentPreview = useMemo(() => {\n    if (isDeleted && lastRevisionDocument && schemaType) {\n      try {\n        const prepared = prepareForPreview(lastRevisionDocument, schemaType)\n        return prepared\n      } catch (error) {\n        console.warn('Failed to prepare preview for deleted document:', error)\n        return null\n      }\n    }\n    return null\n  }, [isDeleted, lastRevisionDocument, schemaType])\n\n  const {error, value} = useValuePreview({\n    // disable useValuePreview for deleted documents\n    enabled: subscribed && !isDeleted,\n    schemaType,\n    value: documentValue,\n  })\n\n  if (connectionState === 'connecting' && !subscribed) {\n    return {error: undefined, title: undefined}\n  }\n\n  // For deleted documents, use the directly prepared preview\n  if (isDeleted && deletedDocumentPreview) {\n    return {error: undefined, title: deletedDocumentPreview.title}\n  }\n\n  if (!value && !isDeleted) {\n    return {\n      error: undefined,\n      title: t('panes.document-header-title.new.text', {\n        schemaType: schemaType?.title || schemaType?.name,\n      }),\n    }\n  }\n\n  if (error) {\n    return {\n      error: t('panes.document-list-pane.error.text', {error: error.message}),\n      title: undefined,\n    }\n  }\n\n  return {error: undefined, title: value?.title}\n}\n","import {useToast} from '@sanity/ui'\nimport {memo, useEffect, useMemo, useRef} from 'react'\nimport {\n  isDocumentLimitError,\n  Translate,\n  useDocumentLimitsUpsellContext,\n  useDocumentOperationEvent,\n  useTranslation,\n} from 'sanity'\n\nimport {usePaneRouter} from '../../components'\nimport {structureLocaleNamespace} from '../../i18n'\nimport {useDocumentPane} from './useDocumentPane'\nimport {useDocumentTitle} from './useDocumentTitle'\n\nconst IGNORE_OPS = ['patch', 'commit']\n\nexport const DocumentOperationResults = memo(function DocumentOperationResults() {\n  const {push: pushToast} = useToast()\n  const {documentId, documentType, value: documentPaneValue} = useDocumentPane()\n  const documentTitleInfo = useDocumentTitle()\n  const titleError = documentTitleInfo.error\n  const event: any = useDocumentOperationEvent(documentId, documentType)\n  const prevEvent = useRef(event)\n  const paneRouter = usePaneRouter()\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {handleOpenDialog} = useDocumentLimitsUpsellContext()\n\n  const title = useMemo(() => {\n    // If title isn't set from document preview, use the title from the document pane value\n    if (\n      !documentTitleInfo.title &&\n      !titleError &&\n      !IGNORE_OPS.includes(event?.op) &&\n      typeof documentPaneValue.title === 'string' &&\n      event?.type === 'success'\n    ) {\n      return documentPaneValue.title\n    }\n    return documentTitleInfo.title\n  }, [documentTitleInfo.title, titleError, event, documentPaneValue.title])\n  //Truncate the document title and add \"...\" if it is over 25 characters\n  const documentTitleBase = title || t('panes.document-operation-results.operation-undefined-title')\n  const documentTitle =\n    documentTitleBase.length > 25 ? `${documentTitleBase.slice(0, 25)}...` : documentTitleBase\n\n  useEffect(() => {\n    if (!event || event === prevEvent.current) return\n\n    let cleanupId: number | undefined\n\n    if (event.type === 'error') {\n      if (isDocumentLimitError(event.error)) {\n        handleOpenDialog('document_action')\n        return\n      }\n      pushToast({\n        closable: true,\n        duration: 30000, // 30s\n        status: 'error',\n        title: t('panes.document-operation-results.operation-error', {context: event.op}),\n        description: (\n          <details>\n            <summary>{t('panes.document-operation-results.error.summary.title')}</summary>\n            {event.error.message}\n          </details>\n        ),\n      })\n    }\n\n    if (event.type === 'success' && !IGNORE_OPS.includes(event.op)) {\n      pushToast({\n        closable: true,\n        status: 'success',\n        title: (\n          <Translate\n            context={event.op}\n            i18nKey=\"panes.document-operation-results.operation-success\"\n            t={t}\n            values={{\n              op: event.op,\n              title: documentTitle,\n            }}\n            components={{\n              Strong: 'strong',\n            }}\n          />\n        ),\n      })\n    }\n\n    /**\n     * If the document was deleted successfully, close the pane.\n     */\n    if (event.type === 'success' && event.op === 'delete') {\n      // Wait until next tick to allow deletion toasts to appear first\n      cleanupId = setTimeout(() => paneRouter.closeCurrentAndAfter(), 0) as any as number\n    }\n\n    prevEvent.current = event\n\n    // eslint-disable-next-line consistent-return\n    return () => clearTimeout(cleanupId)\n  }, [event, paneRouter, pushToast, t, documentTitle, handleOpenDialog])\n\n  return null\n})\n","import {WarningOutlineIcon} from '@sanity/icons'\nimport {type PreviewValue, type SanityDocument, type SchemaType} from '@sanity/types'\nimport {assignWith} from 'lodash'\nimport {type ReactNode} from 'react'\nimport {combineLatest, type Observable, of} from 'rxjs'\nimport {map, startWith} from 'rxjs/operators'\nimport {type DocumentPreviewStore, getDraftId, getPublishedId} from 'sanity'\n\nimport {type PaneItemPreviewState} from './types'\n\nexport const isLiveEditEnabled = (schemaType: Pick<SchemaType, 'liveEdit'>) =>\n  schemaType.liveEdit === true\n\nexport const getMissingDocumentFallback = (item: SanityDocument) => ({\n  title: <em>{item.title ? String(item.title) : 'Missing document'}</em>,\n  subtitle: <em>{item.title ? `Missing document ID: ${item._id}` : `Document ID: ${item._id}`}</em>,\n  media: () => <WarningOutlineIcon />,\n})\n\nexport const getValueWithFallback = ({\n  value,\n  draft,\n  published,\n}: {\n  value: SanityDocument\n  draft?: Partial<SanityDocument> | PreviewValue | null\n  published?: Partial<SanityDocument> | PreviewValue | null\n}) => {\n  const snapshot = draft || published\n\n  if (!snapshot) {\n    return getMissingDocumentFallback(value)\n  }\n\n  return assignWith({}, snapshot, value, (objValue, srcValue) => {\n    return typeof srcValue === 'undefined' ? objValue : srcValue\n  })\n}\n\nexport function getPreviewStateObservable(\n  documentPreviewStore: DocumentPreviewStore,\n  schemaType: SchemaType,\n  documentId: string,\n  title: ReactNode,\n): Observable<PaneItemPreviewState> {\n  const draft$ = isLiveEditEnabled(schemaType)\n    ? of({snapshot: null})\n    : documentPreviewStore.observeForPreview(\n        {_type: 'reference', _ref: getDraftId(documentId)},\n        schemaType,\n      )\n\n  const published$ = documentPreviewStore.observeForPreview(\n    {_type: 'reference', _ref: getPublishedId(documentId)},\n    schemaType,\n  )\n\n  return combineLatest([draft$, published$]).pipe(\n    map(([draft, published]) => ({\n      draft: draft.snapshot ? {title, ...draft.snapshot} : null,\n      isLoading: false,\n      published: published.snapshot ? {title, ...published.snapshot} : null,\n    })),\n    startWith({draft: null, isLoading: true, published: null}),\n  )\n}\n","import {type SchemaType} from '@sanity/types'\nimport {type EditStateFor, type Workspace} from 'sanity'\n\nimport {isLiveEditEnabled} from './components/paneItem/helpers'\n\nexport interface Context {\n  editState: Pick<EditStateFor, 'ready' | 'draft' | 'published' | 'version'> | null\n  workspace: {\n    document: {\n      drafts: Pick<Workspace['document']['drafts'], 'enabled'>\n    }\n  }\n  schemaType: Pick<SchemaType, 'liveEdit'>\n}\n\n/**\n * Determine whether a document has an obsolete draft. This occurs if a document has a draft while\n * the draft model is inactive, or if a live-edit document has a draft.\n */\nexport function hasObsoleteDraft({editState, workspace, schemaType}: Context):\n  | {\n      result: true\n      reason: 'LIVE_EDIT_ACTIVE' | 'DRAFT_MODEL_INACTIVE'\n    }\n  | {result: false}\n  | {result: undefined} {\n  if (!editState?.ready) {\n    return {\n      result: undefined,\n    }\n  }\n\n  const draftExists = editState.draft !== null\n\n  const {\n    document: {\n      drafts: {enabled: isDraftModelEnabled},\n    },\n  } = workspace\n\n  if (draftExists === false) {\n    return {\n      result: false,\n    }\n  }\n\n  if (!isDraftModelEnabled) {\n    return {\n      result: true,\n      reason: 'DRAFT_MODEL_INACTIVE',\n    }\n  }\n\n  if (isLiveEditEnabled(schemaType)) {\n    return {\n      result: true,\n      reason: 'LIVE_EDIT_ACTIVE',\n    }\n  }\n\n  return {\n    result: false,\n  }\n}\n","import {type EditStateFor, isNewDocument, type isPerspectiveWriteable} from 'sanity'\n\n/**\n * Determine whether the user must choose a new perspective in order to create a document.\n *\n * @returns A boolean reflecting whether the user must choose a new perspective, and `undefined` while indeterminate.\n * @internal\n */\nexport function mustChooseNewDocumentDestination({\n  isSelectedPerspectiveWriteable,\n  editState,\n}: {\n  isSelectedPerspectiveWriteable: ReturnType<typeof isPerspectiveWriteable>\n  editState: Pick<EditStateFor, 'ready' | 'draft' | 'published' | 'version'> | null\n}): boolean | undefined {\n  return isNewDocument(editState) && !isSelectedPerspectiveWriteable.result\n}\n","import {CloseIcon} from '@sanity/icons'\nimport {Box, Card, type CardProps, Flex, Text} from '@sanity/ui'\nimport {type HTMLProps, type ReactNode} from 'react'\nimport {useTranslation} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Button} from '../../../../ui-components'\nimport {structureLocaleNamespace} from '../../../i18n'\n\nexport interface DocumentInspectorHeaderProps {\n  as?: CardProps['as']\n  closeButtonLabel: string\n  flex?: CardProps['flex']\n  onClose: () => void\n  title: ReactNode\n}\n\nconst Root = styled(Card)({\n  position: 'relative',\n  zIndex: '1',\n  lineHeight: '0',\n})\n\n/** @internal */\nexport function DocumentInspectorHeader(\n  props: DocumentInspectorHeaderProps & Omit<HTMLProps<HTMLDivElement>, 'as' | 'height' | 'ref'>,\n) {\n  const {as: forwardedAs, children, closeButtonLabel, onClose, title, ...restProps} = props\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  return (\n    <Root {...restProps} as={forwardedAs}>\n      <Flex padding={2}>\n        <Box flex={1} padding={3}>\n          <Text as=\"h1\" size={1} weight=\"medium\">\n            {title}\n          </Text>\n        </Box>\n        <Box flex=\"none\" padding={1}>\n          <Button\n            aria-label={closeButtonLabel}\n            icon={CloseIcon}\n            mode=\"bleed\"\n            onClick={onClose}\n            tooltipProps={{content: t('document-inspector.close-button.tooltip')}}\n          />\n        </Box>\n      </Flex>\n      {children}\n    </Root>\n  )\n}\n","import {Box} from '@sanity/ui'\nimport {useCallback} from 'react'\nimport {Resizable} from 'sanity'\n\nimport {usePane} from '../../../components'\nimport {useStructureTool} from '../../../useStructureTool'\nimport {DOCUMENT_INSPECTOR_MAX_WIDTH, DOCUMENT_INSPECTOR_MIN_WIDTH} from '../constants'\nimport {useDocumentPane} from '../useDocumentPane'\n\ninterface DocumentInspectorPanelProps {\n  documentId: string\n  documentType: string\n  flex?: number | number[]\n}\n\nexport function DocumentInspectorPanel(\n  props: DocumentInspectorPanelProps,\n): React.JSX.Element | null {\n  const {documentId, documentType, flex} = props\n  const {collapsed} = usePane()\n  const {closeInspector, inspector} = useDocumentPane()\n  const {features} = useStructureTool()\n\n  const handleClose = useCallback(() => {\n    if (inspector) closeInspector(inspector.name)\n  }, [closeInspector, inspector])\n\n  if (collapsed || !inspector) return null\n\n  const Component = inspector.component\n  const element = (\n    <Component onClose={handleClose} documentId={documentId} documentType={documentType} />\n  )\n\n  if (features.resizablePanes) {\n    return (\n      <Resizable\n        as=\"aside\"\n        data-ui=\"DocumentInspectorPanel\"\n        flex={flex}\n        resizerPosition=\"left\"\n        maxWidth={DOCUMENT_INSPECTOR_MAX_WIDTH}\n        minWidth={DOCUMENT_INSPECTOR_MIN_WIDTH}\n      >\n        {element}\n      </Resizable>\n    )\n  }\n\n  return (\n    <Box as=\"aside\" data-ui=\"DocumentInspectorPanel\" flex={flex}>\n      {element}\n    </Box>\n  )\n}\n","import {useCallback, useMemo} from 'react'\nimport {useObservable} from 'react-rx'\nimport {map} from 'rxjs/operators'\nimport {useKeyValueStore} from 'sanity'\n\nconst STRUCTURE_TOOL_NAMESPACE = 'studio.structure-tool'\n\n/**\n * @internal\n */\nexport function useStructureToolSetting<ValueType>(\n  namespace: string,\n  key: string | null,\n  defaultValue?: ValueType,\n): [ValueType | undefined, (_value: ValueType) => void] {\n  const keyValueStore = useKeyValueStore()\n\n  const keyValueStoreKey = [STRUCTURE_TOOL_NAMESPACE, namespace, key].filter(Boolean).join('.')\n\n  const value$ = useMemo(() => {\n    return keyValueStore\n      .getKey(keyValueStoreKey)\n      .pipe(map((value) => (value === null ? defaultValue : value)))\n  }, [defaultValue, keyValueStore, keyValueStoreKey])\n\n  const value = useObservable(value$, defaultValue) as ValueType\n  const set = useCallback(\n    (newValue: ValueType) => {\n      if (newValue !== value) {\n        keyValueStore.setKey(keyValueStoreKey, newValue as string)\n      }\n    },\n    [keyValueStore, keyValueStoreKey, value],\n  )\n\n  return useMemo(() => [value, set], [set, value])\n}\n","export const VIEW_MODE_PARSED = {id: 'parsed', title: 'document-inspector.view-mode.parsed'}\nexport const VIEW_MODE_RAW = {id: 'raw', title: 'document-inspector.view-mode.raw-json'}\nexport const VIEW_MODES = [VIEW_MODE_PARSED, VIEW_MODE_RAW]\n","import {type SanityDocumentLike} from '@sanity/types'\nimport LRU from 'quick-lru'\nimport {isRecord, isString} from 'sanity'\n\nconst lru = new LRU({maxSize: 1000})\n\nexport function isExpanded(keyPath: any, value: any): any {\n  const cached = lru.get(keyPath)\n\n  if (cached === undefined) {\n    lru.set(keyPath, Array.isArray(value) || isRecord(value))\n    return isExpanded(keyPath, value)\n  }\n\n  return cached\n}\n\nexport function toggleExpanded(event: any): void {\n  const {path} = event\n  const current = lru.get(path)\n\n  if (current === undefined) {\n    // something is wrong\n    return\n  }\n\n  lru.set(path, !current)\n}\n\nexport function selectElement(element: HTMLElement): void {\n  const sel = window.getSelection()\n\n  if (sel) {\n    const range = document.createRange()\n\n    sel.removeAllRanges()\n    range.selectNodeContents(element)\n    sel.addRange(range)\n  }\n}\n\nexport function select(event: any): void {\n  selectElement(event.currentTarget)\n}\n\nexport function maybeSelectAll(event: any): void {\n  const selectAll = event.keyCode === 65 && (event.metaKey || event.ctrlKey)\n\n  if (!selectAll) {\n    return\n  }\n\n  event.preventDefault()\n\n  selectElement(event.currentTarget)\n}\n\nexport function isDocumentLike(value: unknown): value is SanityDocumentLike {\n  return isRecord(value) && isString(value._id) && isString(value._type)\n}\n","import {rem, type Theme} from '@sanity/ui'\nimport {css, styled} from 'styled-components'\n\nexport const JSONInspectorWrapper = styled.div(({theme}: {theme: Theme}) => {\n  const {color, fonts, space} = theme.sanity\n\n  return css`\n    & .json-inspector,\n    & .json-inspector .json-inspector__selection {\n      font-family: ${fonts.code.family};\n      font-size: ${fonts.code.sizes[1].fontSize}px;\n      line-height: ${fonts.code.sizes[1].lineHeight}px;\n      color: var(--card-code-fg-color);\n    }\n\n    & .json-inspector .json-inspector__leaf {\n      padding-left: ${rem(space[4])};\n    }\n\n    & .json-inspector .json-inspector__leaf.json-inspector__leaf_root {\n      padding-top: ${rem(space[3])};\n      padding-left: 0;\n    }\n\n    & .json-inspector > .json-inspector__leaf_root > .json-inspector__line > .json-inspector__key {\n      display: none;\n    }\n\n    & .json-inspector .json-inspector__line {\n      display: block;\n      position: relative;\n      cursor: default;\n    }\n\n    & .json-inspector .json-inspector__line::after {\n      content: '';\n      position: absolute;\n      top: 0;\n      left: -200px;\n      right: -50px;\n      bottom: 0;\n      z-index: -1;\n      pointer-events: none;\n    }\n\n    & .json-inspector .json-inspector__line:hover::after {\n      background: var(--card-code-bg-color);\n    }\n\n    & .json-inspector .json-inspector__leaf_composite > .json-inspector__line {\n      cursor: pointer;\n    }\n\n    & .json-inspector .json-inspector__leaf_composite > .json-inspector__line::before {\n      content: '▸ ';\n      margin-left: calc(0 - ${rem(space[4])} + 3px);\n      font-size: ${fonts.code.sizes[1].fontSize}px;\n      line-height: ${fonts.code.sizes[1].lineHeight}px;\n    }\n\n    &\n      .json-inspector\n      .json-inspector__leaf_expanded.json-inspector__leaf_composite\n      > .json-inspector__line::before {\n      content: '▾ ';\n      font-size: ${fonts.code.sizes[1].fontSize}px;\n      line-height: ${fonts.code.sizes[1].lineHeight}px;\n    }\n\n    & .json-inspector .json-inspector__radio,\n    & .json-inspector .json-inspector__flatpath {\n      display: none;\n    }\n\n    & .json-inspector .json-inspector__value {\n      margin-left: ${rem(space[4] / 2)};\n    }\n\n    &\n      .json-inspector\n      > .json-inspector__leaf_root\n      > .json-inspector__line\n      > .json-inspector__key\n      + .json-inspector__value {\n      margin: 0;\n    }\n\n    & .json-inspector .json-inspector__key {\n      color: ${color.syntax.property};\n    }\n\n    & .json-inspector .json-inspector__value_helper,\n    & .json-inspector .json-inspector__value_null {\n      color: ${color.syntax.constant};\n    }\n\n    & .json-inspector .json-inspector__not-found {\n      padding-top: ${rem(space[3])};\n    }\n\n    & .json-inspector .json-inspector__value_string {\n      color: ${color.syntax.string};\n    }\n\n    & .json-inspector .json-inspector__value_boolean {\n      color: ${color.syntax.boolean};\n    }\n\n    & .json-inspector .json-inspector__value_number {\n      color: ${color.syntax.number};\n    }\n\n    & .json-inspector .json-inspector__show-original {\n      display: inline-block;\n      padding: 0 6px;\n      cursor: pointer;\n    }\n\n    & .json-inspector .json-inspector__show-original:hover {\n      color: inherit;\n    }\n\n    & .json-inspector .json-inspector__show-original::before {\n      content: '↔';\n    }\n\n    & .json-inspector .json-inspector__show-original:hover::after {\n      content: ' expand';\n    }\n  `\n})\n","import {SearchIcon} from '@sanity/icons'\nimport {TextInput} from '@sanity/ui'\nimport {type ChangeEvent, useCallback} from 'react'\nimport {useTranslation} from 'sanity'\n\nimport {structureLocaleNamespace} from '../../../i18n'\n\nexport function Search(props: {onChange: (q: string) => void; query: string}) {\n  const {onChange, query} = props\n\n  const handleChange = useCallback(\n    (event: ChangeEvent<HTMLInputElement>) => onChange(event.target.value),\n    [onChange],\n  )\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  return (\n    <TextInput\n      icon={SearchIcon}\n      onChange={handleChange}\n      placeholder={t('document-inspector.search.placeholder')}\n      radius={2}\n      value={query || ''}\n    />\n  )\n}\n","import {JsonInspector} from '@rexxars/react-json-inspector'\nimport {type SanityDocument} from '@sanity/types'\nimport {Card, Code, Flex, TabList, TabPanel} from '@sanity/ui'\nimport {useCallback} from 'react'\nimport {Translate, useTranslation} from 'sanity'\n\nimport {Dialog, Tab} from '../../../../ui-components'\nimport {DocTitle} from '../../../components'\nimport {structureLocaleNamespace} from '../../../i18n'\nimport {useStructureToolSetting} from '../../../useStructureToolSetting'\nimport {useDocumentPane} from '../useDocumentPane'\nimport {VIEW_MODE_PARSED, VIEW_MODE_RAW, VIEW_MODES} from './constants'\nimport {isDocumentLike, isExpanded, maybeSelectAll, select, toggleExpanded} from './helpers'\nimport {JSONInspectorWrapper} from './InspectDialog.styles'\nimport {Search} from './Search'\n\ninterface InspectDialogProps {\n  value: Partial<SanityDocument> | null\n}\n\nexport function InspectDialog(props: InspectDialogProps) {\n  const {value} = props\n  const {onInspectClose, paneKey} = useDocumentPane()\n  const dialogIdPrefix = `${paneKey}_inspect_`\n\n  /* this creates a view mode (the default that it opens with is the parsed tab) that is saved based on the paneKey\n  where the inspect dialog lives.\n  This also means that when a page is loaded, the state of the tabs remains and doesn't revert to the pane tab */\n  const [viewModeId, onViewModeChange] = useStructureToolSetting(\n    'inspect-view-mode',\n    null,\n    'parsed',\n  )\n\n  /* based on the view mode it shows the right tab content */\n  const viewMode = VIEW_MODES.find((mode) => mode.id === viewModeId)\n\n  const setParsedViewMode = useCallback(() => {\n    onViewModeChange(VIEW_MODE_PARSED.id)\n  }, [onViewModeChange])\n\n  const setRawViewMode = useCallback(() => {\n    onViewModeChange(VIEW_MODE_RAW.id)\n  }, [onViewModeChange])\n\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  return (\n    <Dialog\n      bodyHeight=\"fill\"\n      id={`${dialogIdPrefix}dialog`}\n      header={\n        isDocumentLike(value) ? (\n          <Translate\n            t={t}\n            i18nKey=\"document-inspector.dialog.title\"\n            components={{\n              DocumentTitle: () => (\n                <em>\n                  <DocTitle document={value} />\n                </em>\n              ),\n            }}\n          />\n        ) : (\n          <em>{t('document-inspector.dialog.title-no-value')}</em>\n        )\n      }\n      onClose={onInspectClose}\n      onClickOutside={onInspectClose}\n      padding={false}\n      width={2}\n    >\n      <Flex direction=\"column\" height=\"fill\">\n        <Card\n          padding={3}\n          paddingTop={0}\n          shadow={1}\n          style={{position: 'sticky', bottom: 0, zIndex: 3}}\n        >\n          <TabList space={1}>\n            <Tab\n              aria-controls={`${dialogIdPrefix}tabpanel`}\n              id={`${dialogIdPrefix}tab-${VIEW_MODE_PARSED.id}`}\n              label={t(VIEW_MODE_PARSED.title)}\n              onClick={setParsedViewMode}\n              selected={viewMode === VIEW_MODE_PARSED}\n            />\n            <Tab\n              aria-controls={`${dialogIdPrefix}tabpanel`}\n              id={`${dialogIdPrefix}tab-${VIEW_MODE_RAW.id}`}\n              label={t(VIEW_MODE_RAW.title)}\n              onClick={setRawViewMode}\n              selected={viewMode === VIEW_MODE_RAW}\n            />\n          </TabList>\n        </Card>\n\n        <TabPanel\n          aria-labelledby={`${dialogIdPrefix}tab-${viewModeId}`}\n          flex={1}\n          id={`${dialogIdPrefix}tabpanel`}\n          overflow=\"auto\"\n          padding={4}\n          style={{outline: 'none'}}\n        >\n          {viewMode === VIEW_MODE_PARSED && (\n            <JSONInspectorWrapper>\n              <JsonInspector\n                data={value}\n                isExpanded={isExpanded}\n                onClick={toggleExpanded}\n                search={Search}\n                filterOptions={{ignoreCase: true}}\n              />\n            </JSONInspectorWrapper>\n          )}\n\n          {viewMode === VIEW_MODE_RAW && (\n            <Code\n              language=\"json\"\n              tabIndex={0}\n              onKeyDown={maybeSelectAll}\n              onDoubleClick={select}\n              onFocus={select}\n              size={1}\n            >\n              {JSON.stringify(value, null, 2)}\n            </Code>\n          )}\n        </TabPanel>\n      </Flex>\n    </Dialog>\n  )\n}\n","import {Box, type ButtonMode, type ButtonTone, Card, type CardTone, Flex, Text} from '@sanity/ui'\nimport {type ComponentType, type ElementType, type ReactNode} from 'react'\n\nimport {Button} from '../../../../../ui-components'\n\ninterface BannerProps {\n  action?: {\n    as?: ElementType | keyof React.JSX.IntrinsicElements\n    icon?: ComponentType\n    onClick?: () => void\n    text: string\n    tone?: ButtonTone\n    disabled?: boolean\n    mode?: ButtonMode\n  }\n  content: ReactNode\n  icon?: ComponentType\n  tone?: CardTone\n  paddingY?: number\n}\n\nexport function Banner(props: BannerProps) {\n  const {action, content, icon: Icon, tone = 'transparent', paddingY = 2, ...rest} = props\n\n  return (\n    <Box padding={1}>\n      <Card radius={3} paddingX={2} paddingY={paddingY} tone={tone} {...rest}>\n        <Flex align=\"center\" gap={3} paddingX={2}>\n          {Icon && (\n            <Text size={0}>\n              <Icon />\n            </Text>\n          )}\n\n          <Flex align=\"center\" flex={1} gap={2} paddingY={2}>\n            {content}\n          </Flex>\n\n          {action && (\n            <Button {...action} mode={action.mode || 'ghost'} tone={action.tone || 'default'} />\n          )}\n        </Flex>\n      </Card>\n    </Box>\n  )\n}\n","import {DocumentRemoveIcon, ReadOnlyIcon} from '@sanity/icons'\nimport {Text} from '@sanity/ui'\nimport {useCallback} from 'react'\nimport {\n  isDraftPerspective,\n  isPublishedPerspective,\n  type ReleaseDocument,\n  Translate,\n  useDocumentOperation,\n  usePerspective,\n  useTranslation,\n} from 'sanity'\nimport {useRouter} from 'sanity/router'\n\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {Banner} from './Banner'\n\nexport function DeletedDocumentBanners() {\n  const {isDeleted, isDeleting, ready} = useDocumentPane()\n  const {selectedPerspective} = usePerspective()\n  if (!ready) return null\n  if (\n    !isPublishedPerspective(selectedPerspective) &&\n    !isDraftPerspective(selectedPerspective) &&\n    selectedPerspective.state === 'archived'\n  ) {\n    return <ArchivedReleaseBanner release={selectedPerspective as ReleaseDocument} />\n  }\n  if (isDeleted && !isDeleting) return <DeletedDocumentBanner />\n}\n\nfunction DeletedDocumentBanner() {\n  const {documentId, documentType} = useDocumentPane()\n  const {restore} = useDocumentOperation(documentId, documentType)\n  const {navigateIntent} = useRouter()\n\n  const handleRestore = useCallback(() => {\n    restore.execute('lastRevision')\n    navigateIntent('edit', {id: documentId, type: documentType})\n  }, [documentId, documentType, navigateIntent, restore])\n\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  return (\n    <Banner\n      action={{\n        onClick: handleRestore,\n        text: t('banners.deleted-document-banner.restore-button.text'),\n      }}\n      content={\n        <Text size={1} weight=\"medium\">\n          {t('banners.deleted-document-banner.text')}\n        </Text>\n      }\n      data-testid=\"deleted-document-banner\"\n      icon={ReadOnlyIcon}\n    />\n  )\n}\n\nconst ArchivedReleaseBanner = ({release}: {release: ReleaseDocument}) => {\n  const {t} = useTranslation()\n\n  return (\n    <Banner\n      tone=\"caution\"\n      content={\n        <Text size={1} weight=\"medium\">\n          <Translate\n            t={t}\n            i18nKey=\"banners.deleted-release-banner.text\"\n            values={{title: release.metadata?.title || t('release.placeholder-untitled-release')}}\n          />\n        </Text>\n      }\n      data-testid=\"deleted-release-banner\"\n      icon={DocumentRemoveIcon}\n    />\n  )\n}\n","import {ErrorOutlineIcon} from '@sanity/icons'\nimport {Text} from '@sanity/ui'\nimport {isDeprecatedSchemaType, Translate, useTranslation} from 'sanity'\n\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {Banner} from './Banner'\n\nexport function DeprecatedDocumentTypeBanner() {\n  const {schemaType} = useDocumentPane()\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  if (!isDeprecatedSchemaType(schemaType)) {\n    return null\n  }\n\n  return (\n    <Banner\n      content={\n        <Text size={1} weight=\"medium\">\n          <Translate t={t} i18nKey=\"banners.deprecated-document-type-banner.text\" />{' '}\n          {schemaType.deprecated.reason}\n        </Text>\n      }\n      data-testid=\"deprecated-document-type-banner\"\n      icon={ErrorOutlineIcon}\n    />\n  )\n}\n","import {defineEvent} from '@sanity/telemetry'\n\n/** @internal */\nexport const AskToEditDialogOpened = defineEvent({\n  name: 'Ask To Edit Dialog Opened',\n  version: 1,\n  description: 'User clicked the \"Ask to edit\" button in the document permissions banner',\n})\n\n/** @internal */\nexport const AskToEditRequestSent = defineEvent({\n  name: 'Ask To Edit Request Sent',\n  version: 1,\n  description: 'User sent a role change request from the dialog',\n})\n","import {useTelemetry} from '@sanity/telemetry/react'\nimport {Box, Card, DialogProvider, Flex, Stack, Text, TextInput, useToast} from '@sanity/ui'\nimport {useId, useMemo, useState} from 'react'\nimport {useObservable} from 'react-rx'\nimport {catchError, map, type Observable, of, startWith} from 'rxjs'\nimport {type Role, useClient, useProjectId, useTranslation, useZIndex} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Dialog} from '../../../ui-components'\nimport {structureLocaleNamespace} from '../../i18n'\nimport {AskToEditRequestSent} from './__telemetry__/RequestPermissionDialog.telemetry'\nimport {type AccessRequest} from './useRoleRequestsStatus'\n\nconst MAX_NOTE_LENGTH = 150\n\n/** @internal */\nexport const DialogBody = styled(Box)`\n  box-sizing: border-box;\n`\n\n/** @internal */\nexport const LoadingContainer = styled(Flex).attrs({\n  align: 'center',\n  direction: 'column',\n  justify: 'center',\n})`\n  height: 110px;\n`\n\n/** @internal */\nexport interface RequestPermissionDialogProps {\n  onClose?: () => void\n  onRequestSubmitted?: () => void\n}\n\n/**\n * A dialog that enables the user to request permission to change their\n * member role from \"Viewer\" to \"Editor\" or \"Admin\" depending on the\n * project's available roles.\n *\n * @internal\n */\nexport function RequestPermissionDialog({\n  onClose,\n  onRequestSubmitted,\n}: RequestPermissionDialogProps) {\n  const {t} = useTranslation(structureLocaleNamespace)\n  const telemtry = useTelemetry()\n  const dialogId = `request-permissions-${useId()}`\n  const projectId = useProjectId()\n  const client = useClient({apiVersion: '2024-09-26'})\n  const toast = useToast()\n  const zOffset = useZIndex()\n\n  const [isSubmitting, setIsSubmitting] = useState(false)\n\n  const [note, setNote] = useState('')\n\n  const [msgError, setMsgError] = useState<string | undefined>()\n  const [hasTooManyRequests, setHasTooManyRequests] = useState<boolean>(false)\n  const [hasBeenDenied, setHasBeenDenied] = useState<boolean>(false)\n\n  const requestedRole$: Observable<'administrator' | 'editor'> = useMemo(() => {\n    const adminRole = 'administrator' as const\n    if (!projectId || !client) return of(adminRole)\n    return client.observable\n      .request<(Role & {appliesToUsers?: boolean})[]>({url: `/projects/${projectId}/roles`})\n      .pipe(\n        map((roles) => {\n          const hasEditor = roles\n            .filter((role) => role?.appliesToUsers)\n            .find((role) => role.name === 'editor')\n          return hasEditor ? 'editor' : adminRole\n        }),\n        startWith(adminRole),\n        catchError(() => of(adminRole)),\n      )\n  }, [projectId, client])\n\n  const requestedRole = useObservable(requestedRole$)\n\n  const onSubmit = () => {\n    setIsSubmitting(true)\n    client\n      .request<AccessRequest | null>({\n        url: `/access/project/${projectId}/requests`,\n        method: 'post',\n        body: {note, requestUrl: window?.location.href, requestedRole, type: 'role'},\n      })\n      .then((request) => {\n        if (request) {\n          if (onRequestSubmitted) onRequestSubmitted()\n          telemtry.log(AskToEditRequestSent)\n          toast.push({title: 'Edit access requested'})\n        }\n      })\n      .catch((err) => {\n        const statusCode = err?.response?.statusCode\n        const errMessage = err?.response?.body?.message\n        if (statusCode === 429) {\n          // User is over their cross-project request limit\n          setHasTooManyRequests(true)\n          setMsgError(errMessage)\n        }\n        if (statusCode === 409) {\n          // If we get a 409, user has been denied on this project or has a valid pending request\n          // valid pending request should be handled by GET request above\n          setHasBeenDenied(true)\n          setMsgError(errMessage)\n        } else {\n          toast.push({\n            title: 'There was a problem submitting your request.',\n            status: 'error',\n          })\n        }\n      })\n      .finally(() => {\n        setIsSubmitting(false)\n      })\n  }\n\n  return (\n    <DialogProvider position={'fixed'} zOffset={zOffset.fullscreen}>\n      <Dialog\n        width={1}\n        id={dialogId}\n        header={t('request-permission-dialog.header.text')}\n        footer={{\n          cancelButton: {\n            onClick: onClose,\n            text: t('confirm-dialog.cancel-button.fallback-text'),\n          },\n          confirmButton: {\n            onClick: onSubmit,\n            loading: isSubmitting,\n            disabled: hasTooManyRequests || hasBeenDenied,\n            text: t('request-permission-dialog.confirm-button.text'),\n            tone: 'primary',\n            type: 'submit',\n          },\n        }}\n        onClose={onClose}\n        onClickOutside={onClose}\n      >\n        <DialogBody>\n          <Stack space={4}>\n            <Text>{t('request-permission-dialog.description.text')}</Text>\n            {hasTooManyRequests || hasBeenDenied ? (\n              <Card tone={'caution'} padding={3} radius={2} shadow={1}>\n                <Text size={1}>\n                  {hasTooManyRequests && (\n                    <>{msgError ?? t('request-permission-dialog.warning.limit-reached.text')}</>\n                  )}\n                  {hasBeenDenied && (\n                    <>{msgError ?? t('request-permission-dialog.warning.denied.text')}</>\n                  )}\n                </Text>\n              </Card>\n            ) : (\n              <Stack space={3} paddingBottom={0}>\n                <TextInput\n                  placeholder={t('request-permission-dialog.note-input.placeholder.text')}\n                  disabled={isSubmitting}\n                  onKeyDown={(e) => {\n                    if (e.key === 'Enter') onSubmit()\n                  }}\n                  maxLength={MAX_NOTE_LENGTH}\n                  value={note}\n                  onChange={(e) => {\n                    setNote(e.currentTarget.value)\n                  }}\n                />\n\n                <Text align=\"right\" muted size={1}>{`${note.length}/${MAX_NOTE_LENGTH}`}</Text>\n              </Stack>\n            )}\n          </Stack>\n        </DialogBody>\n      </Dialog>\n    </DialogProvider>\n  )\n}\n","import {addWeeks, isAfter, isBefore} from 'date-fns'\nimport {useMemo} from 'react'\nimport {useObservable} from 'react-rx'\nimport {of} from 'rxjs'\nimport {catchError, map, startWith} from 'rxjs/operators'\nimport {type SanityClient, useClient, useProjectId} from 'sanity'\n\n/** @internal */\nexport interface AccessRequest {\n  id: string\n  status: 'pending' | 'accepted' | 'declined'\n  resourceId: string\n  resourceType: 'project'\n  createdAt: string\n  updatedAt: string\n  updatedByUserId: string\n  requestedByUserId: string\n  requestedRole: string\n  type: 'access' | 'role'\n  note: string\n}\n\nconst LOADING_STATE = {loading: true, error: false, status: undefined}\nconst EMPTY_STATE = {loading: false, error: false, status: 'none'}\nconst DECLINED_STATE = {loading: false, error: false, status: 'declined'}\nconst PENDING_STATE = {loading: false, error: false, status: 'pending'}\nconst EXPIRED_STATE = {loading: false, error: false, status: 'expired'}\n\n/** @internal */\nexport const useRoleRequestsStatus = () => {\n  const client = useClient({apiVersion: '2024-07-01'})\n  const projectId = useProjectId()\n\n  const checkRoleRequests$ = useMemo(() => {\n    if (!client || !projectId) {\n      return of(EMPTY_STATE)\n    }\n\n    return checkRoleRequests(client, projectId)\n  }, [client, projectId])\n\n  const {loading, error, status} = useObservable(checkRoleRequests$, LOADING_STATE)\n  return {data: status, loading, error}\n}\n\nfunction checkRoleRequests(client: SanityClient, projectId: string) {\n  return client.observable\n    .request<AccessRequest[] | null>({\n      url: '/access/requests/me',\n      tag: 'use-role-requests-status',\n    })\n    .pipe(\n      map((requests) => {\n        if (!requests || requests.length === 0) {\n          return EMPTY_STATE\n        }\n\n        // Filter requests for the specific project and where type is 'role'\n        const projectRequests = requests.filter(\n          (request) => request.resourceId === projectId && request.type === 'role',\n        )\n\n        const declinedRequest = projectRequests.find((request) => request.status === 'declined')\n        if (\n          declinedRequest &&\n          isAfter(addWeeks(new Date(declinedRequest.createdAt), 2), new Date())\n        ) {\n          return DECLINED_STATE\n        }\n\n        const pendingRequest = projectRequests.find(\n          (request) =>\n            request.status === 'pending' &&\n            isAfter(addWeeks(new Date(request.createdAt), 2), new Date()),\n        )\n        if (pendingRequest) {\n          return PENDING_STATE\n        }\n\n        const oldPendingRequest = projectRequests.find(\n          (request) =>\n            request.status === 'pending' &&\n            isBefore(addWeeks(new Date(request.createdAt), 2), new Date()),\n        )\n\n        return oldPendingRequest ? EXPIRED_STATE : EMPTY_STATE\n      }),\n      catchError((err) => {\n        console.error('Failed to fetch access requests', err)\n        return of({loading: false, error: true, status: undefined})\n      }),\n      startWith(LOADING_STATE), // Start with loading state\n    )\n}\n","import {ReadOnlyIcon} from '@sanity/icons'\nimport {useTelemetry} from '@sanity/telemetry/react'\nimport {Text} from '@sanity/ui'\nimport {useMemo, useState} from 'react'\nimport {Translate, useCurrentUser, useListFormat, useTranslation} from 'sanity'\n\nimport {\n  RequestPermissionDialog,\n  useRoleRequestsStatus,\n} from '../../../../components/requestPermissionDialog'\nimport {AskToEditDialogOpened} from '../../../../components/requestPermissionDialog/__telemetry__/RequestPermissionDialog.telemetry'\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {Banner} from './Banner'\n\ninterface InsufficientPermissionBannerProps {\n  requiredPermission: 'update' | 'create'\n}\n\nexport function InsufficientPermissionBanner({\n  requiredPermission,\n}: InsufficientPermissionBannerProps) {\n  const currentUser = useCurrentUser()\n\n  const {\n    data: roleRequestStatus,\n    loading: requestStatusLoading,\n    error: requestStatusError,\n  } = useRoleRequestsStatus()\n  const [requestSent, setRequestSent] = useState(false)\n  const requestPending = useMemo(\n    () => roleRequestStatus === 'pending' || roleRequestStatus === 'declined' || requestSent,\n    [roleRequestStatus, requestSent],\n  )\n  const currentUserRoles = currentUser?.roles || []\n  const isOnlyViewer = currentUserRoles.length === 1 && currentUserRoles[0].name === 'viewer'\n  const [showRequestPermissionDialog, setShowRequestPermissionDialog] = useState(false)\n\n  const listFormat = useListFormat({style: 'short'})\n  const {t} = useTranslation(structureLocaleNamespace)\n  const telemetry = useTelemetry()\n\n  const roleTitles = currentUserRoles.map((role) => role.title)\n  const roles = listFormat\n    .formatToParts(roleTitles)\n    .map((part) =>\n      part.type === 'element' ? <code key={part.value}>{part.value}</code> : part.value,\n    )\n\n  return (\n    <>\n      <Banner\n        content={\n          <Text size={1} weight=\"medium\">\n            <Translate\n              t={t}\n              i18nKey=\"banners.permission-check-banner.missing-permission\"\n              components={{Roles: () => <>{roles}</>}}\n              values={{count: roles.length, roles: roleTitles}}\n              context={requiredPermission}\n            />\n          </Text>\n        }\n        action={\n          isOnlyViewer && roleRequestStatus && !requestStatusError && !requestStatusLoading\n            ? {\n                onClick: requestPending\n                  ? undefined\n                  : () => {\n                      setShowRequestPermissionDialog(true)\n                      telemetry.log(AskToEditDialogOpened)\n                    },\n                text: requestPending\n                  ? t('banners.permission-check-banner.request-permission-button.sent')\n                  : t('banners.permission-check-banner.request-permission-button.text'),\n                tone: requestPending ? 'default' : 'primary',\n                disabled: requestPending,\n                mode: requestPending ? 'bleed' : undefined,\n              }\n            : undefined\n        }\n        data-testid=\"permission-check-banner\"\n        icon={ReadOnlyIcon}\n      />\n      {showRequestPermissionDialog && (\n        <RequestPermissionDialog\n          onClose={() => setShowRequestPermissionDialog(false)}\n          onRequestSubmitted={() => {\n            setRequestSent(true)\n            setShowRequestPermissionDialog(false)\n          }}\n        />\n      )}\n    </>\n  )\n}\n","import {CloseIcon, SyncIcon, WarningOutlineIcon} from '@sanity/icons'\nimport {type KeyedSegment, type Reference} from '@sanity/types'\nimport {Text} from '@sanity/ui'\nimport {fromString as pathFromString, get as pathGet} from '@sanity/util/paths'\nimport {memo, useCallback, useMemo} from 'react'\nimport {useObservable} from 'react-rx'\nimport {concat, type Observable, of} from 'rxjs'\nimport {debounceTime, map} from 'rxjs/operators'\nimport {\n  type DocumentAvailability,\n  getPublishedId,\n  useDocumentPreviewStore,\n  usePerspective,\n  useTranslation,\n} from 'sanity'\n\nimport {usePaneRouter} from '../../../../components'\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {type RouterPaneGroup} from '../../../../types'\nimport {Banner} from './Banner'\n\ninterface ParentReferenceInfo {\n  loading: boolean\n  result?: {\n    availability: {\n      draft: DocumentAvailability\n      published: DocumentAvailability\n      version?: DocumentAvailability\n    }\n    refValue: string | undefined\n  }\n}\n\nexport const ReferenceChangedBanner = memo(() => {\n  const documentPreviewStore = useDocumentPreviewStore()\n  const {selectedReleaseId} = usePerspective()\n  const {params, groupIndex, routerPanesState, replaceCurrent, BackLink} = usePaneRouter()\n  const routerReferenceId = routerPanesState[groupIndex]?.[0].id\n  const parentGroup = routerPanesState[groupIndex - 1] as RouterPaneGroup | undefined\n  const parentSibling = parentGroup?.[0]\n  const parentId = parentSibling?.id\n  const hasHistoryOpen = Boolean(parentSibling?.params?.rev)\n  const parentRefPath = useMemo(() => {\n    return (params?.parentRefPath && pathFromString(params.parentRefPath)) || null\n  }, [params?.parentRefPath])\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  /**\n   * Loads information regarding the reference field of the parent pane. This\n   * is only applicable to child references (aka references-in-place).\n   *\n   * It utilizes the pane ID of the parent pane (which is a document ID) along\n   * with the `parentRefPath` router param on the current pane to find the\n   * current value of the reference field on the parent document.\n   *\n   * This is used to compare with the current pane's document ID. If the IDs\n   * don't match then this banner should reveal itself\n   */\n  const referenceInfoObservable = useMemo((): Observable<ParentReferenceInfo> => {\n    const parentRefPathSegment = parentRefPath?.[0] as string | undefined\n\n    // short-circuit: this document pane is not a child reference pane\n    if (!parentId || !parentRefPathSegment || !parentRefPath) {\n      return of({loading: false})\n    }\n\n    const publishedId = getPublishedId(parentId)\n    const path = pathFromString(parentRefPathSegment)\n\n    // note: observePaths doesn't support keyed path segments, so we need to select the nearest parent\n    const keyedSegmentIndex = path.findIndex(\n      (p): p is KeyedSegment => typeof p == 'object' && '_key' in p,\n    )\n\n    return concat(\n      // emit a loading state instantly\n      of({loading: true}),\n      // then emit the values from watching the published ID's path\n      documentPreviewStore\n        .unstable_observePathsDocumentPair(\n          publishedId,\n          (keyedSegmentIndex === -1 ? path : path.slice(0, keyedSegmentIndex)) as string[][],\n          {\n            version: selectedReleaseId,\n          },\n        )\n        .pipe(\n          // this debounce time is needed to prevent flashing banners due to\n          // the router state updating faster than the content-lake state. we\n          // debounce to wait for more emissions because the value pulled\n          // initially could be stale.\n          debounceTime(750),\n          map(\n            ({draft, published, version}): ParentReferenceInfo => ({\n              loading: false,\n              result: {\n                availability: {\n                  draft: draft.availability,\n                  published: published.availability,\n                  ...(version?.availability\n                    ? {\n                        version: version.availability,\n                      }\n                    : {}),\n                },\n                refValue: pathGet<Reference>(\n                  version?.snapshot || draft.snapshot || published.snapshot,\n                  parentRefPath,\n                )?._ref,\n              },\n            }),\n          ),\n        ),\n    )\n  }, [selectedReleaseId, documentPreviewStore, parentId, parentRefPath])\n  const referenceInfo = useObservable(referenceInfoObservable, {loading: true})\n\n  const handleReloadReference = useCallback(() => {\n    if (referenceInfo.loading) return\n\n    if (referenceInfo.result?.refValue) {\n      replaceCurrent({\n        id: referenceInfo.result.refValue,\n        params: params as Record<string, string>,\n      })\n    }\n  }, [referenceInfo.loading, referenceInfo.result, replaceCurrent, params])\n\n  const shouldHide =\n    // if `parentId` or `parentRefPath` is not present then this banner is n/a\n    !parentId ||\n    !parentRefPath ||\n    // if viewing this pane via history, then hide\n    hasHistoryOpen ||\n    // if loading, hide\n    referenceInfo.loading ||\n    // if the parent document is not available (e.g. due to permission denied or\n    // not found) we don't want to display a warning here, but instead rely on the\n    // parent view to display the appropriate message\n    (!referenceInfo.result?.availability.draft.available &&\n      !referenceInfo.result?.availability.published.available) ||\n    // if the references are the same, then hide the reference changed banner\n    referenceInfo.result?.refValue === routerReferenceId\n\n  if (shouldHide) return null\n\n  return (\n    <Banner\n      action={\n        referenceInfo.result?.refValue\n          ? {\n              onClick: handleReloadReference,\n              icon: SyncIcon,\n              text: t('banners.reference-changed-banner.reason-changed.reload-button.text'),\n            }\n          : {\n              as: BackLink,\n              icon: CloseIcon,\n              text: t('banners.reference-changed-banner.reason-removed.close-button.text'),\n            }\n      }\n      data-testid=\"reference-changed-banner\"\n      content={\n        <Text size={1} weight=\"medium\">\n          {referenceInfo.result?.refValue\n            ? t('banners.reference-changed-banner.reason-changed.text')\n            : t('banners.reference-changed-banner.reason-removed.text')}\n        </Text>\n      }\n      icon={WarningOutlineIcon}\n      tone=\"caution\"\n    />\n  )\n})\n\nReferenceChangedBanner.displayName = 'Memo(ReferenceChangedBanner)'\n","import {WarningOutlineIcon} from '@sanity/icons'\nimport {Text} from '@sanity/ui'\nimport {Translate, useTranslation} from 'sanity'\n\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {Banner} from './Banner'\n\nexport function ScheduledDraftOverrideBanner(): React.JSX.Element {\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  return (\n    <Banner\n      tone=\"caution\"\n      icon={WarningOutlineIcon}\n      content={\n        <Text size={1}>\n          <Translate t={t} i18nKey=\"banners.scheduled-draft-override-banner.text\" />\n        </Text>\n      }\n    />\n  )\n}\n","import {Text} from '@sanity/ui'\nimport {useMemo} from 'react'\nimport {\n  getReleaseIdFromReleaseDocumentId,\n  getVersionInlineBadge,\n  isCardinalityOneRelease,\n  Translate,\n  useArchivedReleases,\n  useTranslation,\n} from 'sanity'\n\nimport {usePaneRouter} from '../../../../components/paneRouter/usePaneRouter'\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {Banner} from './Banner'\n\nexport function ArchivedReleaseDocumentBanner(): React.JSX.Element {\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {t: tCore} = useTranslation()\n  const {data: archivedReleases} = useArchivedReleases()\n\n  const {params, setParams} = usePaneRouter()\n  const handleGoBack = () => {\n    setParams({\n      ...params,\n      rev: params?.historyEvent || undefined,\n      since: undefined,\n      historyVersion: undefined,\n    })\n  }\n\n  const release = useMemo(() => {\n    return archivedReleases.find(\n      (r) => getReleaseIdFromReleaseDocumentId(r._id) === params?.historyVersion,\n    )\n  }, [archivedReleases, params?.historyVersion])\n\n  const description = useMemo(() => {\n    if (release?.state === 'published') {\n      return 'banners.published-release.description'\n    }\n\n    if (release && isCardinalityOneRelease(release)) {\n      return 'banners.archived-scheduled-draft.description'\n    }\n\n    return 'banners.archived-release.description'\n  }, [release])\n\n  const title = release?.metadata.title || tCore('release.placeholder-untitled-release')\n\n  return (\n    <Banner\n      tone=\"caution\"\n      content={\n        <Text size={1}>\n          <Translate\n            t={t}\n            i18nKey={description}\n            values={{\n              title,\n            }}\n            components={{\n              VersionBadge: getVersionInlineBadge(release),\n            }}\n          />\n        </Text>\n      }\n      action={\n        params?.archivedRelease\n          ? undefined\n          : {\n              text: 'Go back to published version',\n              onClick: handleGoBack,\n            }\n      }\n    />\n  )\n}\n","import {ComposeSparklesIcon, InfoOutlineIcon, LaunchIcon} from '@sanity/icons'\nimport {Box, Card, Container, Flex, Heading, Text, useClickOutsideEvent} from '@sanity/ui'\nimport {useCallback, useMemo, useRef, useState} from 'react'\nimport {\n  getDocumentVariantType,\n  useCanvasCompanionDoc,\n  useNavigateToCanvasDoc,\n  useTranslation,\n} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Popover} from '../../../../../ui-components'\nimport {Button} from '../../../../../ui-components/button/Button'\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {Banner} from './Banner'\n\nconst Image = styled.img`\n  object-fit: cover;\n  width: 100%;\n  height: 100%;\n  height: 180px;\n  display: flex;\n`\nconst CANVAS_IMAGE_URL =\n  'https://cdn.sanity.io/images/pyrmmpch/production/b47224e2f3a7d1747e43b9da1ac31739250e628b-632x376.png'\n\nconst CANVAS_APP_NAME = 'Canvas'\nconst CanvasPopoverContent = ({onClose}: {onClose: () => void}) => {\n  const {t} = useTranslation(structureLocaleNamespace)\n  const ref = useRef<HTMLDivElement | null>(null)\n  useClickOutsideEvent(onClose, () => [ref.current])\n\n  return (\n    <Card radius={3} overflow={'hidden'} width={0} ref={ref}>\n      <Container width={0}>\n        <Image src={CANVAS_IMAGE_URL} alt={'Canvas'} />\n        <Flex paddingX={4} paddingBottom={4} paddingTop={3} direction={'column'}>\n          <Flex paddingY={1} gap={2}>\n            <Text size={1} weight=\"semibold\">\n              {CANVAS_APP_NAME}\n            </Text>\n            <Text size={1} muted>\n              <ComposeSparklesIcon />\n            </Text>\n          </Flex>\n          <Box paddingTop={3}>\n            <Heading size={1}>{t('canvas.banner.popover-heading')}</Heading>\n          </Box>\n          <Box paddingTop={4}>\n            <Text size={1}>{t('canvas.banner.popover-description')}</Text>\n          </Box>\n        </Flex>\n        <Flex width=\"full\" gap={3} justify=\"flex-end\" paddingX={4} paddingBottom={4}>\n          <Button\n            mode=\"bleed\"\n            text={t('canvas.banner.popover-button-text')}\n            autoFocus\n            tone=\"primary\"\n            href=\"https://snty.link/canvas-docs\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            as=\"a\"\n            iconRight={LaunchIcon}\n          />\n        </Flex>\n      </Container>\n    </Card>\n  )\n}\nconst CanvasLinkedBannerContent = ({documentId}: {documentId: string}) => {\n  const {t} = useTranslation(structureLocaleNamespace)\n  const [open, setOpen] = useState(false)\n  const documentVariantType = getDocumentVariantType(documentId)\n  const variantText = useMemo(() => {\n    if (documentVariantType === 'published') return t('canvas.banner.linked-text.published')\n    if (documentVariantType === 'draft') return t('canvas.banner.linked-text.draft')\n    return t('canvas.banner.linked-text.version')\n  }, [documentVariantType, t])\n\n  const togglePopover = useCallback(() => setOpen((prev) => !prev), [])\n  const onClose = useCallback(() => setOpen(false), [])\n  return (\n    <Flex align={'center'} gap={2}>\n      <Text size={1} weight=\"medium\">\n        {variantText}\n      </Text>\n      <Popover\n        open={open}\n        size={0}\n        tone=\"default\"\n        portal\n        placement=\"bottom-start\"\n        content={<CanvasPopoverContent onClose={onClose} />}\n      >\n        <Button\n          tooltipProps={null}\n          mode=\"bleed\"\n          tone=\"default\"\n          icon={InfoOutlineIcon}\n          onClick={togglePopover}\n        />\n      </Popover>\n    </Flex>\n  )\n}\n\nexport function CanvasLinkedBanner() {\n  const {documentId, displayed} = useDocumentPane()\n  const {t} = useTranslation(structureLocaleNamespace)\n  const id = displayed?._id || documentId\n  const {companionDoc} = useCanvasCompanionDoc(id)\n  const navigateToCanvas = useNavigateToCanvasDoc(companionDoc?.canvasDocumentId, 'banner')\n\n  if (!companionDoc) return null\n\n  return (\n    <Banner\n      tone=\"neutral\"\n      data-test-id=\"canvas-linked-banner\"\n      paddingY={0}\n      content={<CanvasLinkedBannerContent documentId={id} />}\n      action={{\n        mode: 'ghost',\n        text: t('canvas.banner.edit-in-canvas-action'),\n        onClick: navigateToCanvas,\n      }}\n    />\n  )\n}\n","import {WarningOutlineIcon} from '@sanity/icons'\nimport {type ObjectSchemaType} from '@sanity/types'\nimport {Flex, Text} from '@sanity/ui'\nimport {type ComponentType, useCallback} from 'react'\nimport {\n  getVersionInlineBadge,\n  isPerspectiveWriteable,\n  isReleaseDocument,\n  type PerspectiveNotWriteableReason,\n  ReleasesNav,\n  type ReleasesNavMenuItemPropsGetter,\n  type TargetPerspective,\n  Translate,\n  useTranslation,\n  useWorkspace,\n} from 'sanity'\n\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {Banner} from './Banner'\n\ninterface Props {\n  schemaType: ObjectSchemaType\n  selectedPerspective: TargetPerspective\n  reason: PerspectiveNotWriteableReason\n}\n\n/**\n * This banner is displayed when a user attempts to create a new document in a perspective that's\n * not writeable. For example:\n *\n * - The published perspective (unless the schema type supports live-editing).\n * - Any release that's locked.\n */\nexport const ChooseNewDocumentDestinationBanner: ComponentType<Props> = ({\n  schemaType,\n  selectedPerspective,\n  reason,\n}) => {\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const {\n    document: {\n      drafts: {enabled: isDraftModelEnabled},\n    },\n  } = useWorkspace()\n\n  const menuItemProps = useCallback<ReleasesNavMenuItemPropsGetter>(\n    ({perspective}) => ({\n      disabled: !isPerspectiveWriteable({\n        selectedPerspective: perspective,\n        isDraftModelEnabled,\n        schemaType,\n      }).result,\n    }),\n    [isDraftModelEnabled, schemaType],\n  )\n\n  return (\n    <Banner\n      tone=\"caution\"\n      icon={WarningOutlineIcon}\n      content={\n        <Flex align=\"center\" gap={2}>\n          <Text size={1}>\n            {reason === 'PUBLISHED_NOT_WRITEABLE' &&\n              t('banners.choose-new-document-destination.cannot-create-published-document')}\n            {reason === 'DRAFTS_NOT_WRITEABLE' &&\n              t('banners.choose-new-document-destination.cannot-create-draft-document')}\n            {reason === 'RELEASE_NOT_ACTIVE' && isReleaseDocument(selectedPerspective) && (\n              <Translate\n                t={t}\n                i18nKey=\"banners.choose-new-document-destination.release-inactive\"\n                values={{\n                  title: selectedPerspective.metadata.title,\n                }}\n                components={{\n                  VersionBadge: getVersionInlineBadge(selectedPerspective),\n                }}\n              />\n            )}\n            <> {t('banners.choose-new-document-destination.choose-destination')}</>\n          </Text>\n          <ReleasesNav menuItemProps={menuItemProps} />\n        </Flex>\n      }\n    />\n  )\n}\n","import {getSanityCreateLinkMetadata, useSanityCreateConfig} from 'sanity'\n\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {Banner} from './Banner'\n\nexport function CreateLinkedBanner() {\n  const {value} = useDocumentPane()\n  const {documentLinkedBannerContent: CreateLinkedBannerContent} =\n    useSanityCreateConfig().components ?? {}\n  const createLinkMetadata = getSanityCreateLinkMetadata(value)\n\n  if (!CreateLinkedBannerContent || !createLinkMetadata) return null\n\n  return (\n    <Banner\n      tone=\"transparent\"\n      data-test-id=\"sanity-create-read-only-banner\"\n      content={<CreateLinkedBannerContent metadata={createLinkMetadata} />}\n    />\n  )\n}\n","import {Text, useToast} from '@sanity/ui'\nimport {useCallback, useEffect, useState} from 'react'\nimport {\n  getReleaseIdFromReleaseDocumentId,\n  getReleaseTone,\n  getVersionInlineBadge,\n  LATEST,\n  type ReleaseDocument,\n  Translate,\n  useConditionalToast,\n  useTranslation,\n  useVersionOperations,\n} from 'sanity'\n\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {Banner} from './Banner'\n\n// How long to wait after user hit the \"Add to release\"-button before displaying the \"waiting…\" toast\nconst TOAST_DELAY = 1000\n\ntype VersionCreateState = {\n  status: 'creating' | 'created'\n  lastUpdate: Date\n}\n\nexport function DocumentNotInReleaseBanner({\n  documentId,\n  currentRelease,\n  isScheduledRelease,\n}: {\n  documentId: string\n  currentRelease: ReleaseDocument\n  isScheduledRelease?: boolean\n}): React.JSX.Element {\n  const tone = getReleaseTone(currentRelease ?? LATEST)\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {t: tCore} = useTranslation()\n\n  const {createVersion} = useVersionOperations()\n\n  const [versionCreateState, setVersionCreateState] = useState<VersionCreateState | undefined>()\n  const toast = useToast()\n  const handleAddToRelease = useCallback(async () => {\n    if (currentRelease._id) {\n      setVersionCreateState({status: 'creating', lastUpdate: new Date()})\n      try {\n        await createVersion(getReleaseIdFromReleaseDocumentId(currentRelease._id), documentId)\n        setVersionCreateState({status: 'created', lastUpdate: new Date()})\n      } catch (err) {\n        toast.push({\n          status: 'error',\n          closable: true,\n          title: t('banners.release.error.title'),\n          description: t('banners.release.error.description', {message: err.message}),\n        })\n        // Note: we only want to reset pending state in case of failure, not unconditionally the request completes (i.e. in a finally clause)\n        // this is because the UI won't reflect that the document was successfully added to the release until we get the result back over the listener\n        // once the listener event that adds the document to the release arrives the UI knows that a version exists,\n        // and this banner will not be rendered anymore\n        setVersionCreateState(undefined)\n      }\n    }\n  }, [createVersion, currentRelease._id, documentId, t, toast])\n\n  const now = useCurrentTime(200)\n\n  useConditionalToast({\n    status: 'info',\n    id: 'add-document-to-release',\n    enabled: Boolean(\n      versionCreateState?.status === 'created' &&\n        now.getTime() - versionCreateState.lastUpdate.getTime() > TOAST_DELAY,\n    ),\n    closable: true,\n    title: t('banners.release.waiting.title'),\n    description: t('banners.release.waiting.description'),\n  })\n\n  return (\n    <Banner\n      tone={tone}\n      content={\n        <Text size={1}>\n          <Translate\n            i18nKey=\"banners.release.not-in-release\"\n            t={t}\n            values={{\n              title:\n                currentRelease?.metadata?.title || tCore('release.placeholder-untitled-release'),\n            }}\n            components={{\n              VersionBadge: getVersionInlineBadge(currentRelease),\n            }}\n          />\n        </Text>\n      }\n      // Adding to a scheduled release is not allowed\n      action={\n        isScheduledRelease\n          ? undefined\n          : {\n              text: t('banners.release.action.add-to-release'),\n              tone: tone,\n              disabled: Boolean(versionCreateState),\n              onClick: handleAddToRelease,\n              mode: 'default',\n            }\n      }\n    />\n  )\n}\n\nfunction useCurrentTime(updateIntervalMs: number): Date {\n  const [currentTime, setCurrentTime] = useState(new Date())\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      setCurrentTime(new Date())\n    }, updateIntervalMs)\n    return () => clearInterval(intervalId)\n  }, [updateIntervalMs])\n  return currentTime\n}\n","import {defineEvent} from '@sanity/telemetry'\n\ninterface TypeInfo {\n  liveEditResolveType: 'publish' | 'discard'\n}\n\n/**\n * When a draft in a live edit document is published\n * @internal\n */\nexport const ResolvedLiveEdit = defineEvent<TypeInfo>({\n  name: 'LiveEdit Draft Resolved',\n  version: 1,\n  description: 'User resolved a draft of a live edit document to continue editing',\n})\n","import {type SanityDocument} from '@sanity/client'\nimport {ErrorOutlineIcon} from '@sanity/icons'\nimport {useTelemetry} from '@sanity/telemetry/react'\nimport {Flex, Text} from '@sanity/ui'\nimport {type ComponentType, useCallback, useEffect, useState} from 'react'\nimport {\n  getDraftId,\n  getPublishedId,\n  type ObjectSchemaType,\n  Translate,\n  useDocumentOperation,\n  useTranslation,\n} from 'sanity'\n\nimport {Button} from '../../../../../ui-components'\nimport {useDiffViewRouter} from '../../../../diffView/hooks/useDiffViewRouter'\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {ResolvedLiveEdit} from './__telemetry__/DraftLiveEditBanner.telemetry'\nimport {Banner} from './Banner'\n\ninterface ObsoleteDraftBannerProps {\n  displayed: Partial<SanityDocument> | null\n  documentId: string\n  schemaType: ObjectSchemaType\n  i18nKey: string\n  /**\n   * Whether the user is blocked from editing the document while an obsolete draft exists.\n   */\n  isEditBlocking?: boolean\n}\n\nexport const ObsoleteDraftBanner: ComponentType<ObsoleteDraftBannerProps> = ({\n  displayed,\n  documentId,\n  schemaType,\n  i18nKey,\n  isEditBlocking,\n}) => {\n  const {t} = useTranslation(structureLocaleNamespace)\n  const [isPublishing, setPublishing] = useState(false)\n  const [isDiscarding, setDiscarding] = useState(false)\n  const telemetry = useTelemetry()\n\n  const {publish, discardChanges} = useDocumentOperation(documentId, displayed?._type || '')\n\n  const handlePublish = useCallback(() => {\n    publish.execute()\n    setPublishing(true)\n    telemetry.log(ResolvedLiveEdit, {liveEditResolveType: 'publish'})\n  }, [publish, telemetry])\n\n  const handleDiscard = useCallback(() => {\n    discardChanges.execute()\n    setDiscarding(true)\n    telemetry.log(ResolvedLiveEdit, {liveEditResolveType: 'discard'})\n  }, [discardChanges, telemetry])\n\n  useEffect(() => {\n    return () => {\n      setPublishing(false)\n      setDiscarding(false)\n    }\n  })\n\n  const diffViewRouter = useDiffViewRouter()\n\n  const compareDraft = useCallback(() => {\n    if (typeof displayed?._id === 'undefined') {\n      return\n    }\n\n    diffViewRouter.navigateDiffView({\n      mode: 'version',\n      previousDocument: {\n        type: schemaType.name,\n        id: getPublishedId(displayed?._id),\n      },\n      nextDocument: {\n        type: schemaType.name,\n        id: getDraftId(displayed?._id),\n      },\n    })\n  }, [diffViewRouter, displayed?._id, schemaType.name])\n\n  return (\n    <Banner\n      content={\n        <Flex align=\"center\" justify=\"space-between\" gap={2}>\n          <Text size={1} weight=\"medium\">\n            <Translate t={t} i18nKey={i18nKey} values={{schemaType: schemaType.title}} />\n          </Text>\n          <Button\n            text={t('banners.obsolete-draft.actions.compare-draft.text')}\n            mode=\"ghost\"\n            onClick={compareDraft}\n          />\n          <Button\n            onClick={handlePublish}\n            text={t('banners.obsolete-draft.actions.publish-draft.text')}\n            tooltipProps={\n              isEditBlocking\n                ? {\n                    content: t('banners.live-edit-draft-banner.publish.tooltip'),\n                  }\n                : {}\n            }\n            loading={isPublishing}\n            tone=\"positive\"\n          />\n          <Button\n            onClick={handleDiscard}\n            text={t('banners.obsolete-draft.actions.discard-draft.text')}\n            tooltipProps={\n              isEditBlocking\n                ? {\n                    content: t('banners.live-edit-draft-banner.discard.tooltip'),\n                  }\n                : {}\n            }\n            loading={isDiscarding}\n            tone=\"caution\"\n          />\n        </Flex>\n      }\n      data-testid=\"live-edit-type-banner\"\n      icon={ErrorOutlineIcon}\n    />\n  )\n}\n","import {Flex, Text} from '@sanity/ui'\nimport {useCallback, useMemo} from 'react'\nimport {\n  getReleaseIdFromReleaseDocumentId,\n  getReleaseTone,\n  getVersionFromId,\n  isVersionId,\n  Translate,\n  useActiveReleases,\n  useDocumentVersions,\n  useOnlyHasVersions,\n  useSetPerspective,\n  useTranslation,\n  VersionInlineBadge,\n} from 'sanity'\n\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {Banner} from './Banner'\n\nexport function OpenReleaseToEditBanner({\n  documentId,\n  isPinnedDraftOrPublished,\n}: {\n  documentId: string\n  isPinnedDraftOrPublished: boolean\n}): React.JSX.Element | null {\n  const onlyHasVersions = useOnlyHasVersions({documentId})\n\n  /** this banner should only be rendered in specific cases\n   * 1. when the document is not a draft or published\n   * 2. when the document only has version or versions\n   * 3. when the global perspective is not set (published or draft)\n   */\n\n  if (!isVersionId(documentId)) {\n    return null\n  }\n\n  if (!onlyHasVersions || !isPinnedDraftOrPublished) {\n    return null\n  }\n\n  return <OpenReleaseToEditBannerInner documentId={documentId} />\n}\n\nexport function OpenReleaseToEditBannerInner({\n  documentId,\n}: {\n  documentId: string\n}): React.JSX.Element {\n  const {data: activeReleases} = useActiveReleases()\n  const setPerspective = useSetPerspective()\n  const releaseId = getVersionFromId(documentId) ?? ''\n  const currentVersion = useMemo(\n    () => activeReleases.find((version) => version._id.includes(releaseId)),\n    [activeReleases, releaseId],\n  )\n  const {t: tCore} = useTranslation()\n\n  const {data: documentVersions} = useDocumentVersions({documentId})\n\n  const documentVersionsTitleList = useMemo(\n    () =>\n      activeReleases\n        .filter((version) => {\n          return documentVersions.find((release) => {\n            const r = getVersionFromId(release) ?? ''\n            return getReleaseIdFromReleaseDocumentId(version._id) === r\n          })\n        })\n        .map((version) => version.metadata.title || tCore('release.placeholder-untitled-release')),\n    [activeReleases, documentVersions, tCore],\n  )\n  const tone = currentVersion && getReleaseTone(currentVersion)\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const handleGoToEdit = useCallback(async () => {\n    setPerspective(releaseId)\n  }, [releaseId, setPerspective])\n\n  return (\n    <Banner\n      tone={tone}\n      data-testid=\"open-release-to-edit-banner\"\n      content={\n        <Text size={1}>\n          <Flex direction={'row'} gap={1} wrap=\"wrap\">\n            {documentVersionsTitleList.length > 1 ? (\n              <Translate\n                t={t}\n                i18nKey=\"banners.release.navigate-to-edit-description-multiple\"\n                components={{\n                  VersionBadge: () => (\n                    <VersionInlineBadge> {documentVersionsTitleList[0]}</VersionInlineBadge>\n                  ),\n                }}\n                values={{count: documentVersionsTitleList.length - 1}}\n              />\n            ) : (\n              <Translate\n                t={t}\n                i18nKey=\"banners.release.navigate-to-edit-description-single\"\n                components={{\n                  VersionBadge: () => (\n                    <VersionInlineBadge> {documentVersionsTitleList[0]}</VersionInlineBadge>\n                  ),\n                }}\n              />\n            )}\n          </Flex>\n        </Text>\n      }\n      action={{\n        text: t('banners.release.action.open-to-edit'),\n        tone: tone,\n        onClick: handleGoToEdit,\n        mode: 'default',\n      }}\n    />\n  )\n}\n","import {WarningOutlineIcon} from '@sanity/icons'\nimport {Text} from '@sanity/ui'\nimport {useTranslation} from 'sanity'\n\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {Banner} from './Banner'\n\nexport function RevisionNotFoundBanner() {\n  const {revisionNotFound} = useDocumentPane()\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  if (!revisionNotFound) return null\n\n  return (\n    <Banner\n      tone=\"caution\"\n      data-test-id=\"revision-not-found-banner\"\n      icon={WarningOutlineIcon}\n      content={<Text size={1}>{t('banners.revision-not-found.description')}</Text>}\n    />\n  )\n}\n","import {LockIcon} from '@sanity/icons'\nimport {Text} from '@sanity/ui'\nimport {\n  formatRelativeLocalePublishDate,\n  getReleaseTone,\n  LATEST,\n  type ReleaseDocument,\n  Translate,\n  useTranslation,\n} from 'sanity'\n\nimport {Banner} from './Banner'\n\nexport function ScheduledReleaseBanner({\n  currentRelease,\n}: {\n  currentRelease: ReleaseDocument\n}): React.JSX.Element {\n  const tone = getReleaseTone(currentRelease ?? LATEST)\n\n  const {t: tCore} = useTranslation()\n\n  return (\n    <Banner\n      tone={tone}\n      icon={LockIcon}\n      content={\n        <Text size={1}>\n          <Translate\n            t={tCore}\n            i18nKey=\"release.banner.scheduled-for-publishing-on\"\n            values={{\n              date: formatRelativeLocalePublishDate(currentRelease),\n            }}\n          />\n        </Text>\n      }\n    />\n  )\n}\n","import {UnpublishIcon} from '@sanity/icons'\nimport {Stack, Text} from '@sanity/ui'\nimport {\n  getVersionInlineBadge,\n  isGoingToUnpublish,\n  isReleaseDocument,\n  Translate,\n  usePerspective,\n  useTranslation,\n} from 'sanity'\n\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {Banner} from './Banner'\n\nexport function UnpublishedDocumentBanner() {\n  const {value, editState} = useDocumentPane()\n  const {selectedPerspective} = usePerspective()\n  const isCurrentVersionGoingToUnpublish =\n    isGoingToUnpublish(value) || (editState?.version && isGoingToUnpublish(editState?.version))\n\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {t: tCore} = useTranslation()\n\n  if (isReleaseDocument(selectedPerspective) && isCurrentVersionGoingToUnpublish) {\n    const title =\n      selectedPerspective.metadata?.title || tCore('release.placeholder-untitled-release')\n\n    return (\n      <Banner\n        tone=\"critical\"\n        content={\n          <Stack space={2}>\n            <Text size={1}>\n              <Translate\n                t={t}\n                i18nKey=\"banners.unpublished-release-banner.text\"\n                values={{\n                  title,\n                }}\n                components={{\n                  VersionBadge: getVersionInlineBadge(selectedPerspective),\n                }}\n              />\n            </Text>\n            <Text size={1}>\n              <Translate t={t} i18nKey=\"banners.unpublished-release-banner.text-with-published\" />\n            </Text>\n          </Stack>\n        }\n        icon={UnpublishIcon}\n      />\n    )\n  }\n  return null\n}\n","import {InfoOutlineIcon} from '@sanity/icons'\nimport {type ObjectSchemaType} from '@sanity/types'\nimport {Heading, Inline, Stack, Text} from '@sanity/ui'\nimport {useTranslation} from 'sanity'\nimport {css, styled} from 'styled-components'\n\nimport {Tooltip} from '../../../../../ui-components'\nimport {structureLocaleNamespace} from '../../../../i18n'\n\ninterface DocumentHeaderProps {\n  documentId: string\n  schemaType: ObjectSchemaType\n  title?: string\n}\n\n/**\n * Use CSS container queries to conditionally render headings at different sizes.\n * We hide this entire container (including the document type) if container queries\n * not supported in the current browser.\n *\n * Note that usage of container queries in `styled-components` is only supported in `6.x`.\n * As such, studios that include `\"styled-components\": \"<6\"` as a dependency will only see\n * the largest heading size here, even if their browser supports it!\n */\n\nexport const TitleContainer = styled(Stack)`\n  ${({theme}) => {\n    return css`\n      @supports not (container-type: inline-size) {\n        display: none !important;\n      }\n\n      container-type: inline-size;\n\n      [data-heading] {\n        font-size: ${theme.sanity.fonts.heading.sizes[4].fontSize}px;\n        line-height: ${theme.sanity.fonts.heading.sizes[4].lineHeight}px;\n        overflow-wrap: break-word;\n        text-wrap: pretty;\n      }\n\n      @container (max-width: 560px) {\n        [data-heading] {\n          font-size: ${theme.sanity.fonts.heading.sizes[3].fontSize}px;\n          line-height: ${theme.sanity.fonts.heading.sizes[3].lineHeight}px;\n        }\n      }\n\n      @container (max-width: 420px) {\n        [data-heading] {\n          font-size: ${theme.sanity.fonts.heading.sizes[2].fontSize}px;\n          line-height: ${theme.sanity.fonts.heading.sizes[2].lineHeight}px;\n        }\n      }\n    `\n  }}\n`\n\n/**\n * Header containing current document title and type.\n * Document type is hidden if the document `_id` matches the current document `_type`.\n * The entire header is hidden if container queries are not supported.\n */\nexport const FormHeader = ({documentId, schemaType, title}: DocumentHeaderProps) => {\n  const isSingleton = documentId === schemaType.name\n  const description = schemaType.description\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  if (schemaType.__experimental_formPreviewTitle === false) {\n    return null\n  }\n  return (\n    <TitleContainer marginBottom={6} space={4}>\n      {!isSingleton && (\n        <Inline space={1}>\n          <Text muted size={1}>\n            {schemaType.title ?? schemaType.name}\n          </Text>\n          {description && (\n            <Tooltip content={description} placement=\"right\">\n              <InfoOutlineIcon data-testid=\"schema-description-icon\" />\n            </Tooltip>\n          )}\n        </Inline>\n      )}\n      <Heading as=\"h2\" data-heading muted={!title} data-testid=\"document-panel-document-title\">\n        {title ?? t('document-view.form-view.form-title-fallback')}\n      </Heading>\n    </TitleContainer>\n  )\n}\n","import {Box, Container, Flex, focusFirstDescendant, Spinner, Text} from '@sanity/ui'\nimport {type FormEvent, forwardRef, useCallback, useEffect, useMemo, useState} from 'react'\nimport {tap} from 'rxjs/operators'\nimport {\n  createPatchChannel,\n  type DocumentMutationEvent,\n  type DocumentRebaseEvent,\n  FormBuilder,\n  type FormDocumentValue,\n  fromMutationPatches,\n  type PatchMsg,\n  PresenceOverlay,\n  useConditionalToast,\n  useDocumentPresence,\n  useDocumentStore,\n  usePerspective,\n  useTranslation,\n} from 'sanity'\nimport {useEffectEvent} from 'use-effect-event'\n\nimport {Delay} from '../../../../components'\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {useDocumentTitle} from '../../useDocumentTitle'\nimport {FormHeader} from './FormHeader'\n\ninterface FormViewProps {\n  hidden: boolean\n  margins: [number, number, number, number]\n}\n\nconst preventDefault = (ev: FormEvent) => ev.preventDefault()\n\nexport const FormView = forwardRef<HTMLDivElement, FormViewProps>(function FormView(props, ref) {\n  const {hidden, margins} = props\n\n  const {\n    collapsedFieldSets,\n    collapsedPaths,\n    displayed: value,\n    editState,\n    documentId,\n    documentType,\n    fieldActions,\n    onChange,\n    validation,\n    ready,\n    formState,\n    onFocus,\n    connectionState,\n    onBlur,\n    onSetCollapsedPath,\n    onPathOpen,\n    onSetCollapsedFieldSet,\n    onSetActiveFieldGroup,\n    openPath,\n    compareValue,\n  } = useDocumentPane()\n  const {selectedReleaseId, selectedPerspective} = usePerspective()\n  const documentStore = useDocumentStore()\n  const presence = useDocumentPresence(documentId)\n  const {title} = useDocumentTitle()\n  // The `patchChannel` is an INTERNAL publish/subscribe channel that we use to notify form-builder\n  // nodes about both remote and local patches.\n  // - Used by the Portable Text input to modify selections.\n  // - Used by `withDocument` to reset value.\n  const [patchChannel] = useState(() => createPatchChannel())\n\n  const isLocked = editState?.transactionSyncLock?.enabled\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const conditionalToastParams = useMemo(\n    () => ({\n      id: `sync-lock`,\n      status: 'warning' as const,\n      enabled: isLocked,\n      title: t('document-view.form-view.sync-lock-toast.title'),\n      description: t('document-view.form-view.sync-lock-toast.description'),\n      closable: true,\n    }),\n    [isLocked, t],\n  )\n\n  useConditionalToast(conditionalToastParams)\n\n  useEffect(() => {\n    const sub = documentStore.pair\n      .documentEvents(documentId, documentType, selectedReleaseId)\n      .pipe(\n        tap((event) => {\n          if (event.type === 'mutation') {\n            patchChannel.publish(prepareMutationEvent(event))\n          }\n\n          if (event.type === 'rebase') {\n            patchChannel.publish(prepareRebaseEvent(event))\n          }\n        }),\n      )\n      .subscribe()\n\n    return () => {\n      sub.unsubscribe()\n    }\n  }, [documentId, documentStore, documentType, patchChannel, selectedReleaseId])\n\n  const hasRev = Boolean(value?._rev)\n  const handleInitialValue = useEffectEvent(() => {\n    // this is a workaround for an issue that caused the document pushed to withDocument to get\n    // stuck at the first initial value.\n    // This effect is triggered only when the document goes from not having a revision, to getting one\n    // so it will kick in as soon as the document is received from the backend\n    patchChannel.publish({\n      type: 'mutation',\n      patches: [],\n      snapshot: value,\n    })\n  })\n  useEffect(() => {\n    if (hasRev) {\n      handleInitialValue()\n    }\n    // React to changes in hasRev only\n  }, [hasRev])\n\n  const [formRef, setFormRef] = useState<null | HTMLDivElement>(null)\n\n  // We only want to run it on first mount\n  const [focusedFirstDescendant, setFocusedFirstDescendant] = useState(false)\n  useEffect(() => {\n    // Only focus on the first descendant if there is not already a focus path\n    // This is to avoid stealing focus from intent links\n    if (!focusedFirstDescendant && ready && !formState?.focusPath.length && formRef) {\n      setFocusedFirstDescendant(true)\n      focusFirstDescendant(formRef)\n    }\n  }, [focusedFirstDescendant, formRef, formState?.focusPath.length, ready])\n\n  const setRef = useCallback(\n    (node: HTMLDivElement | null) => {\n      setFormRef(node)\n      if (typeof ref === 'function') {\n        ref(node)\n      } else if (ref) {\n        ref.current = node\n      }\n    },\n    [ref],\n  )\n\n  const isReadOnly = connectionState === 'reconnecting' || formState?.readOnly || !editState?.ready\n\n  return (\n    <Container\n      hidden={hidden}\n      paddingX={4}\n      paddingTop={5}\n      paddingBottom={9}\n      sizing=\"border\"\n      width={1}\n    >\n      <PresenceOverlay margins={margins}>\n        <Box\n          as=\"form\"\n          onSubmit={preventDefault}\n          ref={setRef}\n          data-testid=\"form-view\"\n          data-read-only={isReadOnly ? 'true' : undefined}\n        >\n          {connectionState === 'connecting' && !editState?.draft && !editState?.published ? (\n            <Delay ms={300}>\n              {/* TODO: replace with loading block */}\n              <Flex align=\"center\" direction=\"column\" height=\"fill\" justify=\"center\">\n                <Spinner muted />\n                <Box marginTop={3}>\n                  <Text align=\"center\" muted size={1}>\n                    {t('document-view.form-view.loading')}\n                  </Text>\n                </Box>\n              </Flex>\n            </Delay>\n          ) : formState === null || hidden ? (\n            <Box padding={2}>\n              <Text>{t('document-view.form-view.form-hidden')}</Text>\n            </Box>\n          ) : (\n            <>\n              <FormHeader documentId={documentId} schemaType={formState.schemaType} title={title} />\n              <FormBuilder\n                __internal_fieldActions={fieldActions}\n                __internal_patchChannel={patchChannel}\n                changed={formState.changed}\n                collapsedFieldSets={collapsedFieldSets}\n                collapsedPaths={collapsedPaths}\n                compareValue={compareValue ?? undefined}\n                focused={formState.focused}\n                focusPath={formState.focusPath}\n                groups={formState.groups}\n                id=\"root\"\n                members={formState.members}\n                onChange={onChange}\n                onFieldGroupSelect={onSetActiveFieldGroup}\n                onPathBlur={onBlur}\n                onPathFocus={onFocus}\n                onPathOpen={onPathOpen}\n                onSetFieldSetCollapsed={onSetCollapsedFieldSet}\n                onSetPathCollapsed={onSetCollapsedPath}\n                openPath={openPath}\n                perspective={selectedPerspective}\n                presence={presence}\n                readOnly={isReadOnly}\n                schemaType={formState.schemaType}\n                validation={validation}\n                value={\n                  // note: the form state doesn't have a typed concept of a \"document\" value\n                  // but these should be compatible\n                  formState.value as FormDocumentValue\n                }\n              />\n            </>\n          )}\n        </Box>\n      </PresenceOverlay>\n    </Container>\n  )\n})\n\nfunction prepareMutationEvent(event: DocumentMutationEvent): PatchMsg {\n  const patches = event.mutations.map((mut) => mut.patch).filter(Boolean)\n\n  return {\n    type: 'mutation',\n    snapshot: event.document,\n    patches: fromMutationPatches(event.origin, patches),\n  }\n}\n\nfunction prepareRebaseEvent(event: DocumentRebaseEvent): PatchMsg {\n  const remotePatches = event.remoteMutations.map((mut) => mut.patch).filter(Boolean)\n  const localPatches = event.localMutations.map((mut) => mut.patch).filter(Boolean)\n\n  return {\n    type: 'rebase',\n    snapshot: event.document,\n    patches: fromMutationPatches('remote', remotePatches).concat(\n      fromMutationPatches('local', localPatches),\n    ),\n  }\n}\n","import {TabList} from '@sanity/ui'\nimport {type ComponentType, type ReactNode, useCallback} from 'react'\n\nimport {Tab} from '../../../../../ui-components'\nimport {usePaneRouter} from '../../../../components'\nimport {useDocumentPane} from '../../useDocumentPane'\n\n/**\n * This component will render the tabs for the document pane, following this rules:\n *  if the view tabs are wider than 200px it collapses to a dropdown\n *  if the header is smaller than 480px it collapses to a dropdown\n * For this we need to first measure the pane header width and then the tabs width.\n *\n * Gotcha, if the tabs are wider han 200px it renders a dropdown and if then the tabs change to be smaller than 200px\n * it will not change back to tabs, this is a limitation of the current implementation but an ok tradeoff to avoid mounting\n * ghost elements just to measure the width.\n */\nexport function DocumentHeaderTabs() {\n  const {activeViewId, paneKey, views} = useDocumentPane()\n\n  const tabPanelId = `${paneKey}tabpanel`\n\n  return (\n    <TabList space={1}>\n      {views.map((view, index) => (\n        <DocumentHeaderTab\n          key={view.id}\n          icon={view.icon}\n          id={`${paneKey}tab-${view.id}`}\n          isActive={activeViewId === view.id}\n          label={view.title}\n          tabPanelId={tabPanelId}\n          viewId={index === 0 ? null : (view.id ?? null)}\n        />\n      ))}\n    </TabList>\n  )\n}\n\nfunction DocumentHeaderTab(props: {\n  icon?: ComponentType | ReactNode\n  id: string\n  isActive: boolean\n  label: string\n  tabPanelId: string\n  viewId: string | null\n}) {\n  const {icon, id, isActive, label, tabPanelId, viewId, ...rest} = props\n  const {ready, editState} = useDocumentPane()\n  const {setView} = usePaneRouter()\n  const handleClick = useCallback(() => setView(viewId), [setView, viewId])\n\n  return (\n    <Tab\n      {...rest} // required to enable <TabList> keyboard navigation\n      aria-controls={tabPanelId}\n      disabled={!ready && !editState?.draft && !editState?.published}\n      icon={icon}\n      id={id}\n      label={label}\n      onClick={handleClick}\n      selected={isActive}\n    />\n  )\n}\n","import {useTranslation} from 'sanity'\n\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {useDocumentTitle} from '../../useDocumentTitle'\n\nexport function DocumentHeaderTitle(): React.JSX.Element {\n  const {connectionState, schemaType, title, value: documentValue} = useDocumentPane()\n  const {title: documentTitle, error} = useDocumentTitle()\n  const subscribed = Boolean(documentValue)\n\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  if (connectionState === 'connecting' && !subscribed) {\n    return <></>\n  }\n\n  if (title) {\n    return <>{title}</>\n  }\n\n  if (!documentValue) {\n    return (\n      <>\n        {t('panes.document-header-title.new.text', {\n          schemaType: schemaType?.title || schemaType?.name,\n        })}\n      </>\n    )\n  }\n\n  if (error) {\n    return <>{t('panes.document-header-title.error.text', {error: error})}</>\n  }\n\n  return (\n    <>\n      {documentTitle || (\n        <span style={{color: 'var(--card-muted-fg-color)'}}>\n          {t('panes.document-header-title.untitled.text')}\n        </span>\n      )}\n    </>\n  )\n}\n","import {StarFilledIcon, StarIcon} from '@sanity/icons'\nimport {Text} from '@sanity/ui'\nimport {type ComponentType} from 'react'\nimport {useManageFavorite, type UseManageFavoriteProps, useTranslation} from 'sanity'\n\nimport {Button} from '../../../../../ui-components/button/Button'\nimport {structureLocaleNamespace} from '../../../../i18n'\n\nexport const FavoriteToggle: ComponentType<UseManageFavoriteProps & {documentExists: boolean}> = ({\n  documentExists,\n  ...props\n}) => {\n  const {isFavorited, isReady, favorite, unfavorite} = useManageFavorite(props)\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const description = t(\n    isFavorited\n      ? 'document.favorites.remove-from-favorites'\n      : 'document.favorites.add-to-favorites',\n  )\n\n  return (\n    <Button\n      mode=\"bleed\"\n      onClick={isFavorited ? unfavorite : favorite}\n      disabled={!isReady || !documentExists}\n      aria-label={description}\n      aria-live=\"assertive\"\n      tooltipProps={{\n        content: <Text size={1}>{description}</Text>,\n        placement: 'right',\n      }}\n    >\n      <Text size={1}>{isFavorited ? <StarFilledIcon /> : <StarIcon />}</Text>\n    </Button>\n  )\n}\n","import {ArrowLeftIcon} from '@sanity/icons'\nimport {memo, useMemo} from 'react'\nimport {CapabilityGate, getPublishedId, useActiveWorkspace, useTranslation} from 'sanity'\n\nimport {Button} from '../../../../../ui-components'\nimport {PaneHeader, usePane, usePaneRouter} from '../../../../components'\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {useStructureTool} from '../../../../useStructureTool'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {DocumentHeaderTabs} from './DocumentHeaderTabs'\nimport {DocumentHeaderTitle} from './DocumentHeaderTitle'\nimport {FavoriteToggle} from './FavoriteToggle'\n\n/**\n * When not collapsed this component will render the title and the tabs.\n * This component will render inside the document panel and not with the DocumentPanelHeader\n */\nexport const DocumentPanelSubHeader = memo(function DocumentPanelHeader() {\n  const {editState, connectionState, views, documentId, displayed} = useDocumentPane()\n  const {features} = useStructureTool()\n  const {index, BackLink} = usePaneRouter()\n  const {activeWorkspace} = useActiveWorkspace()\n  const publishedDocId = getPublishedId(documentId)\n\n  const showTabs = views.length > 1\n\n  const {collapsed, isLast} = usePane()\n  // Prevent focus if this is the last (non-collapsed) pane.\n  const tabIndex = isLast && !collapsed ? -1 : 0\n\n  // show the back button if both the feature is enabled and the current pane\n  // is not the first\n  const showBackButton = features.backButton && index > 0\n\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const title = useMemo(() => <DocumentHeaderTitle />, [])\n  const tabs = useMemo(() => showTabs && <DocumentHeaderTabs />, [showTabs])\n\n  const backButton = useMemo(\n    () =>\n      showBackButton && (\n        <Button\n          as={BackLink}\n          data-as=\"a\"\n          icon={ArrowLeftIcon}\n          mode=\"bleed\"\n          tooltipProps={{content: t('pane-header.back-button.text')}}\n        />\n      ),\n    [BackLink, showBackButton, t],\n  )\n\n  const favoriteToggle = (\n    <CapabilityGate capability=\"comlink\" condition=\"available\">\n      <FavoriteToggle\n        resourceType=\"studio\"\n        documentId={publishedDocId}\n        documentType={displayed?._type ?? ''}\n        resourceId={[activeWorkspace.projectId, activeWorkspace.dataset].join('.')}\n        schemaName={activeWorkspace.name}\n        projectId={activeWorkspace.projectId}\n        dataset={activeWorkspace.dataset}\n        documentExists={\n          (editState?.ready &&\n            (editState.version ?? editState.draft ?? editState.published) !== null) ??\n          false\n        }\n      />\n    </CapabilityGate>\n  )\n\n  return (\n    <PaneHeader\n      loading={connectionState === 'connecting' && !editState?.draft && !editState?.published}\n      title={title}\n      tabs={tabs}\n      tabIndex={tabIndex}\n      backButton={backButton}\n      appendTitle={favoriteToggle}\n    />\n  )\n})\n","import {BoundaryElementProvider, Box, Flex, PortalProvider, usePortal} from '@sanity/ui'\nimport {useEffect, useMemo, useRef, useState} from 'react'\nimport {\n  getSanityCreateLinkMetadata,\n  getVersionFromId,\n  isCardinalityOneRelease,\n  isGoingToUnpublish,\n  isNewDocument,\n  isPerspectiveWriteable,\n  isReleaseDocument,\n  isReleaseScheduledOrScheduling,\n  isSanityCreateLinked,\n  isSystemBundle,\n  LegacyLayerProvider,\n  type ReleaseDocument,\n  ScrollContainer,\n  usePerspective,\n  useWorkspace,\n  VirtualizerScrollInstanceProvider,\n} from 'sanity'\nimport {css, styled} from 'styled-components'\n\nimport {PaneContent, usePane, usePaneLayout, usePaneRouter} from '../../../components'\nimport {hasObsoleteDraft} from '../../../hasObsoleteDraft'\nimport {useFilteredReleases} from '../../../hooks/useFilteredReleases'\nimport {mustChooseNewDocumentDestination} from '../../../mustChooseNewDocumentDestination'\nimport {useStructureTool} from '../../../useStructureTool'\nimport {DocumentInspectorPanel} from '../documentInspector'\nimport {InspectDialog} from '../inspectDialog'\nimport {useDocumentPane} from '../useDocumentPane'\nimport {\n  DeletedDocumentBanners,\n  DeprecatedDocumentTypeBanner,\n  InsufficientPermissionBanner,\n  ReferenceChangedBanner,\n  ScheduledDraftOverrideBanner,\n} from './banners'\nimport {ArchivedReleaseDocumentBanner} from './banners/ArchivedReleaseDocumentBanner'\nimport {CanvasLinkedBanner} from './banners/CanvasLinkedBanner'\nimport {ChooseNewDocumentDestinationBanner} from './banners/ChooseNewDocumentDestinationBanner'\nimport {CreateLinkedBanner} from './banners/CreateLinkedBanner'\nimport {DocumentNotInReleaseBanner} from './banners/DocumentNotInReleaseBanner'\nimport {ObsoleteDraftBanner} from './banners/ObsoleteDraftBanner'\nimport {OpenReleaseToEditBanner} from './banners/OpenReleaseToEditBanner'\nimport {RevisionNotFoundBanner} from './banners/RevisionNotFoundBanner'\nimport {ScheduledReleaseBanner} from './banners/ScheduledReleaseBanner'\nimport {UnpublishedDocumentBanner} from './banners/UnpublishedDocumentBanner'\nimport {FormView} from './documentViews'\nimport {DocumentPanelSubHeader} from './header/DocumentPanelSubHeader'\n\ninterface DocumentPanelProps {\n  footerHeight: number | null\n  headerHeight: number | null\n  isInspectOpen: boolean\n  rootElement: HTMLDivElement | null\n  setDocumentPanelPortalElement: (el: HTMLElement | null) => void\n  footer: React.ReactNode\n}\n\nconst DocumentBox = styled(Box)({\n  position: 'relative',\n})\n\nconst Scroller = styled(ScrollContainer)<{$disabled: boolean}>(({$disabled}) => {\n  if ($disabled) {\n    return {height: '100%'}\n  }\n\n  return css`\n    height: 100%;\n    overflow: auto;\n    position: relative;\n    scroll-behavior: smooth;\n    outline: none;\n  `\n})\n\nexport const DocumentPanel = function DocumentPanel(props: DocumentPanelProps) {\n  const {\n    footerHeight,\n    headerHeight,\n    isInspectOpen,\n    rootElement,\n    setDocumentPanelPortalElement,\n    footer,\n  } = props\n  const {\n    activeViewId,\n    displayed,\n    documentId,\n    editState,\n    inspector,\n    value,\n    views,\n    ready,\n    schemaType,\n    permissions,\n    isPermissionsLoading,\n  } = useDocumentPane()\n  const createLinkMetadata = getSanityCreateLinkMetadata(value)\n  const showCreateBanner = isSanityCreateLinked(createLinkMetadata)\n\n  const {params} = usePaneRouter()\n  const {collapsed: layoutCollapsed} = usePaneLayout()\n  const {collapsed} = usePane()\n  const parentPortal = usePortal()\n  const {features} = useStructureTool()\n  const [_portalElement, setPortalElement] = useState<HTMLDivElement | null>(null)\n  const [documentScrollElement, setDocumentScrollElement] = useState<HTMLDivElement | null>(null)\n  const formContainerElement = useRef<HTMLDivElement | null>(null)\n  const workspace = useWorkspace()\n\n  const requiredPermission = value._createdAt ? 'update' : 'create'\n\n  const activeView = useMemo(\n    () => views.find((view) => view.id === activeViewId) || views[0] || {type: 'form'},\n    [activeViewId, views],\n  )\n\n  // Use a local portal container when split panes is supported\n  const portalElement: HTMLElement | null = features.splitPanes\n    ? _portalElement || parentPortal.element\n    : parentPortal.element\n\n  // Calculate the height of the header\n  const margins: [number, number, number, number] = useMemo(() => {\n    if (layoutCollapsed) {\n      return [headerHeight || 0, 0, footerHeight ? footerHeight + 2 : 2, 0]\n    }\n\n    return [0, 0, 2, 0]\n  }, [layoutCollapsed, footerHeight, headerHeight])\n\n  const formViewHidden = activeView.type !== 'form'\n\n  const activeViewNode = useMemo(() => {\n    if (activeView.type === 'component' && activeView.component) {\n      const ActiveViewComponent = activeView.component\n      return (\n        <ActiveViewComponent\n          document={{\n            draft: editState?.draft || null,\n            displayed: displayed || value,\n            historical: displayed,\n            published: editState?.published || null,\n          }}\n          documentId={documentId}\n          options={activeView.options}\n          schemaType={schemaType}\n        />\n      )\n    }\n    return false\n  }, [activeView, displayed, documentId, editState?.draft, editState?.published, schemaType, value])\n\n  // Scroll to top as `documentId` changes\n  useEffect(() => {\n    if (!documentScrollElement?.scrollTo) return\n    documentScrollElement.scrollTo(0, 0)\n  }, [documentId, documentScrollElement])\n\n  // Pass portal element to `DocumentPane`\n  useEffect(() => {\n    if (portalElement) {\n      setDocumentPanelPortalElement(portalElement)\n    }\n  }, [portalElement, setDocumentPanelPortalElement])\n\n  const inspectDialog = useMemo(() => {\n    return isInspectOpen ? <InspectDialog value={displayed || value} /> : null\n  }, [isInspectOpen, displayed, value])\n\n  const showInspector = Boolean(!collapsed && inspector)\n  const {selectedPerspective, selectedReleaseId} = usePerspective()\n  const filteredReleases = useFilteredReleases({displayed, documentId})\n\n  // eslint-disable-next-line complexity\n  const banners = useMemo(() => {\n    if (params?.historyVersion) {\n      return <ArchivedReleaseDocumentBanner />\n    }\n\n    const isScheduledRelease =\n      isReleaseDocument(selectedPerspective) && isReleaseScheduledOrScheduling(selectedPerspective)\n\n    const documentInScheduledRelease = Boolean(\n      isScheduledRelease &&\n        displayed?._id &&\n        getVersionFromId(displayed?._id) === selectedReleaseId,\n    )\n\n    const isSelectedPerspectiveWriteable = isPerspectiveWriteable({\n      selectedPerspective,\n      isDraftModelEnabled: workspace.document.drafts.enabled,\n      schemaType,\n    })\n\n    if (\n      mustChooseNewDocumentDestination({\n        isSelectedPerspectiveWriteable,\n        editState,\n      })\n    ) {\n      return (\n        !isSelectedPerspectiveWriteable.result && (\n          <ChooseNewDocumentDestinationBanner\n            schemaType={schemaType}\n            selectedPerspective={selectedPerspective}\n            reason={isSelectedPerspectiveWriteable.reason}\n          />\n        )\n      )\n    }\n\n    if (documentInScheduledRelease) {\n      return <ScheduledReleaseBanner currentRelease={selectedPerspective as ReleaseDocument} />\n    }\n\n    const hasCardinalityOneReleases = filteredReleases.currentReleases.some(isCardinalityOneRelease)\n    if (selectedPerspective === 'drafts' && hasCardinalityOneReleases) {\n      return <ScheduledDraftOverrideBanner />\n    }\n\n    const isPinnedDraftOrPublish = isSystemBundle(selectedPerspective)\n    const isCurrentVersionGoingToUnpublish =\n      editState?.version && isGoingToUnpublish(editState?.version)\n\n    if (\n      displayed?._id &&\n      getVersionFromId(displayed._id) !== selectedReleaseId &&\n      ready &&\n      !isPinnedDraftOrPublish &&\n      isNewDocument(editState) === false &&\n      !isCurrentVersionGoingToUnpublish\n    ) {\n      return (\n        <DocumentNotInReleaseBanner\n          documentId={value._id}\n          currentRelease={selectedPerspective as ReleaseDocument}\n          isScheduledRelease={isScheduledRelease}\n        />\n      )\n    }\n\n    const displayedHasObsoleteDraft = hasObsoleteDraft({\n      editState,\n      workspace,\n      schemaType,\n    })\n\n    if (activeView.type === 'form' && !selectedReleaseId && displayedHasObsoleteDraft.result) {\n      if (displayedHasObsoleteDraft.reason === 'DRAFT_MODEL_INACTIVE') {\n        return (\n          <ObsoleteDraftBanner\n            displayed={displayed}\n            documentId={documentId}\n            schemaType={schemaType}\n            i18nKey=\"banners.obsolete-draft.draft-model-inactive.text\"\n          />\n        )\n      }\n\n      if (displayedHasObsoleteDraft.reason === 'LIVE_EDIT_ACTIVE') {\n        return (\n          <ObsoleteDraftBanner\n            displayed={displayed}\n            documentId={documentId}\n            schemaType={schemaType}\n            i18nKey=\"banners.live-edit-draft-banner.text\"\n            isEditBlocking\n          />\n        )\n      }\n    }\n\n    if (activeView.type !== 'form' || isPermissionsLoading) return null\n\n    return (\n      <>\n        {showCreateBanner && <CreateLinkedBanner />}\n        {!permissions?.granted && (\n          <InsufficientPermissionBanner requiredPermission={requiredPermission} />\n        )}\n        <RevisionNotFoundBanner />\n        <ReferenceChangedBanner />\n        <DeprecatedDocumentTypeBanner />\n        <CanvasLinkedBanner />\n        <DeletedDocumentBanners />\n        <UnpublishedDocumentBanner />\n        <OpenReleaseToEditBanner\n          documentId={displayed?._id ?? documentId}\n          isPinnedDraftOrPublished={isPinnedDraftOrPublish}\n        />\n      </>\n    )\n  }, [\n    params?.historyVersion,\n    selectedPerspective,\n    displayed,\n    selectedReleaseId,\n    editState,\n    ready,\n    activeView.type,\n    isPermissionsLoading,\n    showCreateBanner,\n    permissions?.granted,\n    requiredPermission,\n    documentId,\n    value._id,\n    schemaType,\n    filteredReleases,\n    workspace,\n  ])\n  const portalElements = useMemo(\n    () => ({documentScrollElement: documentScrollElement}),\n    [documentScrollElement],\n  )\n  const showFormView = features.resizablePanes || !showInspector\n  return (\n    <PaneContent>\n      <Flex height=\"fill\">\n        {showFormView && (\n          <Flex height=\"fill\" direction=\"column\" width=\"fill\" flex={2}>\n            <LegacyLayerProvider zOffset=\"paneHeader\">\n              {banners}\n              <DocumentPanelSubHeader />\n            </LegacyLayerProvider>\n            <DocumentBox flex={2} overflow=\"hidden\">\n              <PortalProvider element={portalElement} __unstable_elements={portalElements}>\n                <BoundaryElementProvider element={documentScrollElement}>\n                  <VirtualizerScrollInstanceProvider\n                    scrollElement={documentScrollElement}\n                    containerElement={formContainerElement}\n                  >\n                    <Scroller\n                      $disabled={layoutCollapsed || false}\n                      data-testid=\"document-panel-scroller\"\n                      ref={setDocumentScrollElement}\n                    >\n                      <FormView\n                        hidden={formViewHidden}\n                        margins={margins}\n                        ref={formContainerElement}\n                      />\n                      {activeViewNode}\n                    </Scroller>\n\n                    {inspectDialog}\n\n                    <div data-testid=\"document-panel-portal\" ref={setPortalElement} />\n                  </VirtualizerScrollInstanceProvider>\n                </BoundaryElementProvider>\n              </PortalProvider>\n            </DocumentBox>\n\n            {footer}\n          </Flex>\n        )}\n        {showInspector && (\n          <BoundaryElementProvider element={rootElement}>\n            <DocumentInspectorPanel\n              documentId={documentId}\n              documentType={schemaType.name}\n              flex={1}\n            />\n          </BoundaryElementProvider>\n        )}\n      </Flex>\n    </PaneContent>\n  )\n}\nDocumentPanel.displayName = 'DocumentPanel'\n","import {negate} from 'lodash'\n\nimport {type _PaneMenuGroup, type _PaneMenuItem, type _PaneMenuNode} from './components/pane/types'\nimport {type DocumentFieldMenuActionNode, type PaneMenuItem, type PaneMenuItemGroup} from './types'\n\nexport function isMenuNodeButton(node: _PaneMenuNode): node is _PaneMenuItem | _PaneMenuGroup {\n  return (node.type === 'item' || node.type === 'group') && node.renderAsButton\n}\n\nexport const isNotMenuNodeButton = negate(isMenuNodeButton)\n\nexport function resolveMenuNodes(params: {\n  actionHandler: (item: PaneMenuItem) => void\n  fieldActions?: DocumentFieldMenuActionNode[]\n  menuItems: PaneMenuItem[]\n  menuItemGroups: PaneMenuItemGroup[]\n}): _PaneMenuNode[] {\n  const {fieldActions = [], menuItems, menuItemGroups} = params\n\n  const nodes: _PaneMenuNode[] = []\n\n  let keyOffset = 0\n\n  for (let i = 0; i < fieldActions.length; i += 1) {\n    const a = fieldActions[i]\n\n    nodes.push(mapFieldActionToPaneMenuNode(a, `${i}-${a.type}`))\n  }\n\n  keyOffset += nodes.length\n\n  const groups: _PaneMenuGroup[] = []\n\n  for (const itemGroup of menuItemGroups) {\n    const group = groups.find((g) => g.key === itemGroup.id)\n\n    if (!group) {\n      groups.push({\n        type: 'group',\n        key: itemGroup.id,\n\n        children: [],\n        expanded: true,\n        renderAsButton: false,\n        title: itemGroup.title,\n        i18n: itemGroup.i18n,\n      })\n    }\n  }\n\n  const ungroupedItems: _PaneMenuItem[] = []\n\n  for (let i = 0; i < menuItems.length; i += 1) {\n    const item = menuItems[i]\n\n    let group = item.group && groups.find((g) => g.key === item.group)\n    const disabled = typeof item.disabled === 'string' ? {reason: item.disabled} : item.disabled\n\n    if (item.group && !group) {\n      group = {\n        type: 'group',\n        key: item.group,\n        disabled,\n        expanded: true,\n        icon: item.icon,\n        title: item.group,\n        children: [],\n        renderAsButton: false,\n      }\n      groups.push(group)\n    }\n\n    if (group) {\n      group.children.push({\n        type: 'item',\n        key: `${keyOffset + i}-item`,\n\n        hotkey: item.shortcut,\n        icon: item.icon,\n        intent: item.intent,\n        disabled,\n        onAction: () => params.actionHandler(item),\n        renderAsButton: item.showAsAction ?? false,\n        selected: item.selected,\n        title: item.title,\n        i18n: item.i18n,\n        tone: item.tone,\n      })\n    } else {\n      ungroupedItems.push({\n        type: 'item',\n        key: `${keyOffset + i}-item`,\n\n        hotkey: item.shortcut,\n        icon: item.icon,\n        intent: item.intent,\n        disabled,\n        onAction: () => params.actionHandler(item),\n        renderAsButton: item.showAsAction ?? false,\n        selected: item.selected,\n        title: item.title,\n        i18n: item.i18n,\n        tone: item.tone,\n      })\n    }\n  }\n\n  return [...ungroupedItems, ...groups, ...nodes]\n}\n\nfunction mapFieldActionToPaneMenuNode(a: DocumentFieldMenuActionNode, key: string): _PaneMenuNode {\n  if (a.type === 'divider') {\n    return {\n      type: 'divider',\n      key,\n    }\n  }\n\n  if (a.type === 'group') {\n    return {\n      type: 'group',\n      key,\n\n      children: a.children.map((child, childIdx) =>\n        mapFieldActionToPaneMenuNode(child, `${key}-${childIdx}-${child.type}`),\n      ),\n      disabled: a.disabled,\n      expanded: a.expanded ?? true,\n      icon: a.icon,\n      title: a.title,\n      i18n: a.i18n,\n      renderAsButton: a.renderAsButton ?? false,\n    }\n  }\n\n  return {\n    type: 'item',\n    key,\n    intent: a.intent,\n    disabled: a.disabled,\n    icon: a.icon,\n    iconRight: a.iconRight,\n    onAction: a.onAction,\n    renderAsButton: a.renderAsButton ?? false,\n    selected: a.selected,\n    title: a.title,\n    i18n: a.i18n,\n    tone: a.tone,\n  }\n}\n","/**\n * @internal\n */\nexport const _DEBUG = false\n\nexport const EMPTY_PARAMS = Object.freeze({})\nexport const LOADING_PANE = Symbol('LOADING_PANE')\n\nexport const DOCUMENT_PANEL_PORTAL_ELEMENT = 'documentPanelPortalElement'\n","import {type Placement} from '@sanity/ui'\n\nimport {type DialogProps} from '../../../../../ui-components'\n\nexport const POPOVER_FALLBACK_PLACEMENTS: Placement[] = ['left', 'bottom']\n\nexport const DIALOG_WIDTH_TO_UI_WIDTH: {[key: string]: DialogProps['width']} = {\n  small: 0,\n  medium: 1,\n  large: 2,\n  full: 'auto',\n}\n","import {type DocumentActionConfirmDialogProps, useTranslation} from 'sanity'\n\nimport {ConfirmPopover} from '../../../../../ui-components'\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {POPOVER_FALLBACK_PLACEMENTS} from './constants'\n\nexport function ConfirmDialog(props: {\n  dialog: DocumentActionConfirmDialogProps\n  referenceElement: HTMLElement | null\n}) {\n  const {dialog, referenceElement} = props\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const {\n    cancelButtonIcon,\n    cancelButtonText,\n    confirmButtonIcon,\n    confirmButtonText,\n    message,\n    onCancel,\n    onConfirm,\n    tone,\n  } = dialog\n\n  return (\n    <ConfirmPopover\n      cancelButtonIcon={cancelButtonIcon}\n      cancelButtonText={cancelButtonText || t('confirm-dialog.cancel-button.fallback-text')}\n      confirmButtonIcon={confirmButtonIcon}\n      confirmButtonText={confirmButtonText || t('confirm-dialog.confirm-button.fallback-text')}\n      message={message}\n      onCancel={onCancel}\n      onConfirm={onConfirm}\n      open\n      referenceElement={referenceElement}\n      tone={tone}\n      placement=\"top\"\n      fallbackPlacements={POPOVER_FALLBACK_PLACEMENTS}\n    />\n  )\n}\n","import {\n  Box,\n  Dialog, // eslint-disable-line no-restricted-imports\n} from '@sanity/ui'\nimport {useId} from 'react'\nimport {type DocumentActionModalDialogProps, LegacyLayerProvider} from 'sanity'\n\nimport {DIALOG_WIDTH_TO_UI_WIDTH} from './constants'\n\n/**\n * Dialog rendered by custom document actions of dialog type `dialog`.\n * As these are user configurable with public facing APIs, internal studio ui-components are not used.\n */\nexport function ModalDialog(props: {dialog: DocumentActionModalDialogProps}) {\n  const {dialog} = props\n  const dialogId = useId()\n\n  const footer = dialog.footer && (\n    <Box paddingX={4} paddingY={3}>\n      {dialog.footer}\n    </Box>\n  )\n\n  return (\n    <LegacyLayerProvider zOffset=\"fullscreen\">\n      <Dialog\n        animate\n        __unstable_hideCloseButton={dialog.showCloseButton === false}\n        footer={footer}\n        header={dialog.header}\n        id={dialogId}\n        // eslint-disable-next-line react/jsx-handler-names\n        onClose={dialog.onClose}\n        // eslint-disable-next-line react/jsx-handler-names\n        onClickOutside={dialog.onClose}\n        width={dialog.width === undefined ? 1 : DIALOG_WIDTH_TO_UI_WIDTH[dialog.width]}\n      >\n        <Box padding={4}>{dialog.content}</Box>\n      </Dialog>\n    </LegacyLayerProvider>\n  )\n}\n","import {\n  Popover, // eslint-disable-line no-restricted-imports\n  useClickOutsideEvent,\n  useGlobalKeyDown,\n  useLayer,\n} from '@sanity/ui'\nimport {useCallback, useRef} from 'react'\nimport {type DocumentActionPopoverDialogProps} from 'sanity'\n\nimport {POPOVER_FALLBACK_PLACEMENTS} from './constants'\n\nexport function PopoverDialog(props: {\n  dialog: DocumentActionPopoverDialogProps\n  referenceElement: HTMLElement | null\n}) {\n  const {dialog, referenceElement} = props\n\n  return (\n    <Popover\n      content={<PopoverDialogContent dialog={dialog} />}\n      fallbackPlacements={POPOVER_FALLBACK_PLACEMENTS}\n      open\n      placement=\"top\"\n      portal\n      preventOverflow\n      referenceElement={referenceElement}\n    />\n  )\n}\n\n/**\n * Popover rendered by custom document actions of dialog type `popover`.\n * As these are user configurable with public facing APIs, internal studio ui-components are not used.\n */\nfunction PopoverDialogContent(props: {dialog: DocumentActionPopoverDialogProps}) {\n  const {dialog} = props\n  const {content, onClose} = dialog\n  const {isTopLayer} = useLayer()\n  const ref = useRef<HTMLDivElement | null>(null)\n\n  const handleGlobalKeyDown = useCallback(\n    (event: any) => {\n      if (event.key === 'Escape' && isTopLayer) onClose()\n    },\n    [isTopLayer, onClose],\n  )\n\n  useGlobalKeyDown(handleGlobalKeyDown)\n  useClickOutsideEvent(isTopLayer && onClose, () => [ref.current])\n\n  return <div ref={ref}>{content}</div>\n}\n","import {PortalProvider, Text, usePortal} from '@sanity/ui'\nimport {type ReactNode, useId} from 'react'\nimport {type DocumentActionDialogProps} from 'sanity'\n\nimport {Dialog} from '../../../../ui-components'\nimport {DOCUMENT_PANEL_PORTAL_ELEMENT} from '../../../constants'\nimport {ConfirmDialog} from './dialogs/ConfirmDialog'\nimport {ModalDialog} from './dialogs/ModalDialog'\nimport {PopoverDialog} from './dialogs/PopoverDialog'\n\nexport interface ActionStateDialogProps {\n  dialog: DocumentActionDialogProps\n  referenceElement?: HTMLElement | null\n}\n\n// A portal provider that uses the document panel portal element if it exists\n// as the portal element so that dialogs are scoped to the document panel\nfunction DocumentActionPortalProvider(props: {children: ReactNode}) {\n  const {children} = props\n  const {element, elements} = usePortal()\n  const portalElement = elements?.[DOCUMENT_PANEL_PORTAL_ELEMENT] || element\n\n  return <PortalProvider element={portalElement}>{children}</PortalProvider>\n}\n\nexport function ActionStateDialog(props: ActionStateDialogProps) {\n  const {dialog, referenceElement = null} = props\n  const modalId = useId()\n\n  if (dialog.type === 'confirm') {\n    return <ConfirmDialog dialog={dialog} referenceElement={referenceElement} />\n  }\n\n  if (dialog.type === 'popover') {\n    return <PopoverDialog dialog={dialog} referenceElement={referenceElement} />\n  }\n\n  if (dialog.type === 'dialog' || !dialog.type) {\n    return (\n      <DocumentActionPortalProvider>\n        <ModalDialog dialog={dialog} />\n      </DocumentActionPortalProvider>\n    )\n  }\n\n  if (dialog.type === 'custom') {\n    return <DocumentActionPortalProvider>{dialog?.component}</DocumentActionPortalProvider>\n  }\n\n  // @todo: add validation?\n  const unknownModal: any = dialog\n\n  console.warn(`Unsupported modal type ${unknownModal.type}`)\n\n  return (\n    <Dialog\n      id={modalId}\n      // eslint-disable-next-line react/jsx-handler-names\n      onClose={unknownModal.onClose}\n      // eslint-disable-next-line react/jsx-handler-names\n      onClickOutside={unknownModal.onClose}\n      width={1}\n    >\n      {unknownModal.content || (\n        // eslint-disable-next-line i18next/no-literal-string\n        <Text size={1}>\n          Unexpected modal type (<code>{unknownModal.type}</code>)\n        </Text>\n      )}\n    </Dialog>\n  )\n}\n","import {Menu} from '@sanity/ui'\nimport {memo, type ReactNode, useCallback, useId, useMemo, useState} from 'react'\nimport {\n  ContextMenuButton,\n  type DocumentActionDescription,\n  LegacyLayerProvider,\n  useTranslation,\n} from 'sanity'\n\nimport {MenuButton, MenuItem, type PopoverProps} from '../../../../ui-components'\nimport {structureLocaleNamespace} from '../../../i18n'\nimport {ActionStateDialog} from './ActionStateDialog'\n\nexport interface ActionMenuButtonProps {\n  actionStates: DocumentActionDescription[]\n  disabled: boolean\n}\n\n/**\n * @internal\n */\nexport const ActionDialogWrapper = memo(function ActionDialogWrapper({\n  actionStates,\n  children,\n  referenceElement,\n}: {\n  actionStates: DocumentActionDescription[]\n  children: ({handleAction}: {handleAction: (idx: number) => void}) => ReactNode\n  referenceElement?: HTMLElement | null\n}) {\n  const [actionIndex, setActionIndex] = useState(-1)\n  const currentAction = useMemo(() => actionStates[actionIndex], [actionIndex, actionStates])\n\n  const handleAction = useCallback((idx: number) => {\n    setActionIndex(idx)\n  }, [])\n\n  const result = useMemo(() => children({handleAction}), [children, handleAction])\n\n  return (\n    <>\n      {currentAction && currentAction.dialog && (\n        <LegacyLayerProvider zOffset=\"paneFooter\">\n          <ActionStateDialog dialog={currentAction.dialog} referenceElement={referenceElement} />\n        </LegacyLayerProvider>\n      )}\n      {result}\n    </>\n  )\n})\n\n/**\n * @internal\n */\nexport function ActionMenuButton(props: ActionMenuButtonProps) {\n  const {actionStates, disabled} = props\n  const idPrefix = useId()\n\n  const [referenceElement, setReferenceElement] = useState<HTMLButtonElement | null>(null)\n\n  const popoverProps: PopoverProps = useMemo(\n    () => ({\n      placement: 'top-end',\n      portal: true,\n      preventOverflow: true,\n    }),\n    [],\n  )\n\n  const {t} = useTranslation(structureLocaleNamespace)\n  const renderActionDialog = useCallback<\n    ({handleAction}: {handleAction: (idx: number) => void}) => ReactNode\n  >(\n    ({handleAction}) => (\n      <MenuButton\n        id={`${idPrefix}-action-menu`}\n        button={\n          <ContextMenuButton\n            aria-label={t('buttons.action-menu-button.aria-label')}\n            disabled={disabled}\n            data-testid=\"action-menu-button\"\n            tooltipProps={{content: t('buttons.action-menu-button.tooltip')}}\n          />\n        }\n        menu={\n          <Menu padding={1}>\n            {actionStates.map((actionState, idx) => (\n              <ActionMenuListItem\n                // oxlint-disable-next-line no-array-index-key\n                key={idx}\n                actionState={actionState}\n                disabled={disabled}\n                index={idx}\n                onAction={handleAction}\n              />\n            ))}\n          </Menu>\n        }\n        popover={popoverProps}\n        ref={setReferenceElement}\n      />\n    ),\n    [actionStates, disabled, idPrefix, popoverProps, t],\n  )\n\n  return (\n    <ActionDialogWrapper actionStates={actionStates} referenceElement={referenceElement}>\n      {renderActionDialog}\n    </ActionDialogWrapper>\n  )\n}\n\ninterface ActionMenuListItemProps {\n  actionState: DocumentActionDescription\n  disabled: boolean\n  index: number\n  onAction: (idx: number) => void\n}\n\nexport function ActionMenuListItem(props: ActionMenuListItemProps) {\n  const {actionState, disabled, index, onAction} = props\n  const {onHandle} = actionState\n\n  const handleClick = useCallback(() => {\n    onAction(index)\n    if (onHandle) onHandle()\n  }, [index, onAction, onHandle])\n\n  const hotkeys = useMemo(() => {\n    return actionState.shortcut\n      ? String(actionState.shortcut)\n          .split('+')\n          .map((s) => s.slice(0, 1).toUpperCase() + s.slice(1))\n      : undefined\n  }, [actionState.shortcut])\n\n  return (\n    <MenuItem\n      data-testid={`action-${actionState.label.replace(' ', '')}`}\n      disabled={disabled || Boolean(actionState.disabled)}\n      hotkeys={hotkeys}\n      icon={actionState.icon}\n      onClick={handleClick}\n      text={actionState.label}\n      tone={actionState.tone}\n      {...(actionState.disabled && {tooltipProps: {content: actionState.title}})}\n    />\n  )\n}\n","import {TrashIcon} from '@sanity/icons'\nimport {useCallback, useMemo, useState} from 'react'\nimport {\n  type DocumentActionComponent,\n  InsufficientPermissionsMessage,\n  useCurrentUser,\n  useDocumentOperation,\n  useDocumentPairPermissions,\n  useTranslation,\n} from 'sanity'\n\nimport {ConfirmDeleteDialog} from '../components'\nimport {structureLocaleNamespace} from '../i18n'\nimport {useDocumentPane} from '../panes/document/useDocumentPane'\n\nconst DISABLED_REASON_TITLE_KEY = {\n  NOTHING_TO_DELETE: 'action.delete.disabled.nothing-to-delete',\n  NOT_READY: 'action.delete.disabled.not-ready',\n}\n\n/** @internal */\nexport const DeleteAction: DocumentActionComponent = ({id, type, draft, onComplete, release}) => {\n  const {setIsDeleting: paneSetIsDeleting} = useDocumentPane()\n  const {delete: deleteOp} = useDocumentOperation(id, type, release)\n  const [isDeleting, setIsDeleting] = useState(false)\n  const [isConfirmDialogOpen, setConfirmDialogOpen] = useState(false)\n\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const handleCancel = useCallback(() => {\n    setConfirmDialogOpen(false)\n    onComplete()\n  }, [onComplete])\n\n  const handleConfirm = useCallback(() => {\n    setIsDeleting(true)\n    setConfirmDialogOpen(false)\n    paneSetIsDeleting(true)\n    deleteOp.execute()\n    onComplete()\n  }, [deleteOp, onComplete, paneSetIsDeleting])\n\n  const handle = useCallback(() => {\n    setConfirmDialogOpen(true)\n  }, [])\n\n  const [permissions, isPermissionsLoading] = useDocumentPairPermissions({\n    id,\n    type,\n    version: release,\n    permission: 'delete',\n  })\n\n  const currentUser = useCurrentUser()\n\n  return useMemo(() => {\n    if (!isPermissionsLoading && !permissions?.granted) {\n      return {\n        tone: 'critical',\n        icon: TrashIcon,\n        disabled: true,\n        label: t('action.delete.label'),\n        title: (\n          <InsufficientPermissionsMessage context=\"delete-document\" currentUser={currentUser} />\n        ),\n      }\n    }\n\n    return {\n      tone: 'critical',\n      icon: TrashIcon,\n      disabled: isDeleting || Boolean(deleteOp.disabled) || isPermissionsLoading,\n      title: (deleteOp.disabled && t(DISABLED_REASON_TITLE_KEY[deleteOp.disabled])) || '',\n      label: isDeleting ? t('action.delete.running.label') : t('action.delete.label'),\n      shortcut: 'Ctrl+Alt+D',\n      onHandle: handle,\n      dialog: isConfirmDialogOpen && {\n        type: 'custom',\n        component: (\n          <ConfirmDeleteDialog\n            action=\"delete\"\n            id={draft?._id || id}\n            type={type}\n            onCancel={handleCancel}\n            onConfirm={handleConfirm}\n          />\n        ),\n      },\n    }\n  }, [\n    currentUser,\n    deleteOp.disabled,\n    draft?._id,\n    handle,\n    handleCancel,\n    handleConfirm,\n    id,\n    isConfirmDialogOpen,\n    isDeleting,\n    isPermissionsLoading,\n    permissions?.granted,\n    t,\n    type,\n  ])\n}\n\nDeleteAction.action = 'delete'\nDeleteAction.displayName = 'DeleteAction'\n","import {ResetIcon} from '@sanity/icons'\nimport {useCallback, useMemo, useState} from 'react'\nimport {\n  type DocumentActionComponent,\n  type DocumentActionDialogProps,\n  InsufficientPermissionsMessage,\n  isPublishedId,\n  useCurrentUser,\n  useDocumentOperation,\n  useDocumentPairPermissions,\n  useTranslation,\n} from 'sanity'\n\nimport {structureLocaleNamespace} from '../i18n'\nimport {useDocumentPane} from '../panes/document/useDocumentPane'\n\nconst DISABLED_REASON_KEY = {\n  NO_CHANGES: 'action.discard-changes.disabled.no-change',\n  NOT_PUBLISHED: 'action.discard-changes.disabled.not-published',\n  NOT_READY: 'action.discard-changes.disabled.not-ready',\n} as const\n\n/** @internal */\nexport const DiscardChangesAction: DocumentActionComponent = ({\n  id,\n  type,\n  published,\n  liveEdit,\n  onComplete,\n  release,\n}) => {\n  const {discardChanges} = useDocumentOperation(id, type, release)\n  const [isConfirmDialogOpen, setConfirmDialogOpen] = useState(false)\n  const [permissions, isPermissionsLoading] = useDocumentPairPermissions({\n    id,\n    type,\n    version: release,\n    permission: 'discardDraft',\n  })\n  const currentUser = useCurrentUser()\n  const {displayed} = useDocumentPane()\n\n  const {t} = useTranslation(structureLocaleNamespace)\n  const isPublished = displayed?._id && isPublishedId(displayed?._id)\n\n  const handleConfirm = useCallback(() => {\n    discardChanges.execute()\n    onComplete()\n  }, [discardChanges, onComplete])\n\n  const handle = useCallback(() => {\n    setConfirmDialogOpen(true)\n  }, [])\n\n  const dialog: DocumentActionDialogProps | false = useMemo(\n    () =>\n      isConfirmDialogOpen && {\n        type: 'confirm',\n        tone: 'critical',\n        onCancel: onComplete,\n        onConfirm: handleConfirm,\n        message: t('action.discard-changes.confirm-dialog.confirm-discard-changes'),\n      },\n    [handleConfirm, isConfirmDialogOpen, onComplete, t],\n  )\n\n  return useMemo(() => {\n    if (!published || liveEdit || isPublished) {\n      return null\n    }\n\n    if (!isPermissionsLoading && !permissions?.granted) {\n      return {\n        tone: 'critical',\n        icon: ResetIcon,\n        disabled: true,\n        label: t('action.discard-changes.label'),\n        title: (\n          <InsufficientPermissionsMessage context=\"discard-changes\" currentUser={currentUser} />\n        ),\n      }\n    }\n\n    return {\n      tone: 'critical',\n      icon: ResetIcon,\n      disabled: Boolean(discardChanges.disabled) || isPermissionsLoading,\n      title: t((discardChanges.disabled && DISABLED_REASON_KEY[discardChanges.disabled]) || ''),\n      label: t('action.discard-changes.label'),\n      onHandle: handle,\n      dialog,\n    }\n  }, [\n    currentUser,\n    dialog,\n    discardChanges.disabled,\n    handle,\n    isPermissionsLoading,\n    isPublished,\n    liveEdit,\n    permissions?.granted,\n    published,\n    t,\n  ])\n}\n\nDiscardChangesAction.action = 'discardChanges'\nDiscardChangesAction.displayName = 'DiscardChangesAction'\n","import {CopyIcon} from '@sanity/icons'\nimport {uuid} from '@sanity/uuid'\nimport {useCallback, useMemo, useState} from 'react'\nimport {filter, firstValueFrom} from 'rxjs'\nimport {\n  type DuplicateDocumentActionComponent,\n  InsufficientPermissionsMessage,\n  useCurrentUser,\n  useDocumentOperation,\n  useDocumentPairPermissions,\n  useDocumentStore,\n  useTranslation,\n} from 'sanity'\nimport {useRouter} from 'sanity/router'\n\nimport {structureLocaleNamespace} from '../i18n'\n\nconst DISABLED_REASON_KEY = {\n  NOTHING_TO_DUPLICATE: 'action.duplicate.disabled.nothing-to-duplicate',\n  NOT_READY: 'action.duplicate.disabled.not-ready',\n}\n\n/** @internal */\nexport const DuplicateAction: DuplicateDocumentActionComponent = ({\n  id,\n  type,\n  onComplete,\n  release,\n  mapDocument,\n}) => {\n  const documentStore = useDocumentStore()\n  const {duplicate} = useDocumentOperation(id, type, release)\n  const {navigateIntent} = useRouter()\n  const [isDuplicating, setDuplicating] = useState(false)\n\n  const [permissions, isPermissionsLoading] = useDocumentPairPermissions({\n    id,\n    type,\n    version: release,\n    permission: 'duplicate',\n  })\n\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const currentUser = useCurrentUser()\n\n  const handle = useCallback(async () => {\n    const dupeId = uuid()\n\n    setDuplicating(true)\n\n    // set up the listener before executing\n    const duplicateSuccess = firstValueFrom(\n      documentStore.pair\n        .operationEvents(id, type)\n        .pipe(filter((e) => e.op === 'duplicate' && e.type === 'success')),\n    )\n    duplicate.execute(dupeId, {mapDocument})\n\n    // only navigate to the duplicated document when the operation is successful\n    await duplicateSuccess\n    navigateIntent('edit', {id: dupeId, type})\n\n    onComplete()\n  }, [documentStore.pair, duplicate, id, mapDocument, navigateIntent, onComplete, type])\n\n  return useMemo(() => {\n    if (!isPermissionsLoading && !permissions?.granted) {\n      return {\n        icon: CopyIcon,\n        disabled: true,\n        label: t('action.duplicate.label'),\n        title: (\n          <InsufficientPermissionsMessage context=\"duplicate-document\" currentUser={currentUser} />\n        ),\n      }\n    }\n\n    return {\n      icon: CopyIcon,\n      disabled: isDuplicating || Boolean(duplicate.disabled) || isPermissionsLoading,\n      label: isDuplicating ? t('action.duplicate.running.label') : t('action.duplicate.label'),\n      title: duplicate.disabled ? t(DISABLED_REASON_KEY[duplicate.disabled]) : '',\n      onHandle: handle,\n    }\n  }, [\n    currentUser,\n    duplicate.disabled,\n    handle,\n    isDuplicating,\n    isPermissionsLoading,\n    permissions?.granted,\n    t,\n  ])\n}\n\nDuplicateAction.action = 'duplicate'\nDuplicateAction.displayName = 'DuplicateAction'\n","import {RevertIcon} from '@sanity/icons'\nimport {useCallback, useEffect, useMemo, useRef, useState} from 'react'\nimport {\n  type DocumentActionComponent,\n  type DocumentActionDialogProps,\n  useDocumentOperation,\n  useDocumentOperationEvent,\n  useTranslation,\n} from 'sanity'\nimport {useRouter} from 'sanity/router'\n\nimport {structureLocaleNamespace} from '../i18n'\nimport {useDocumentPane} from '../panes/document/useDocumentPane'\n\n/** @internal */\nexport const HistoryRestoreAction: DocumentActionComponent = ({\n  id,\n  type,\n  revision,\n  onComplete,\n  release,\n}) => {\n  const {restore} = useDocumentOperation(id, type, release)\n  const {revisionNotFound} = useDocumentPane()\n  const event = useDocumentOperationEvent(id, type)\n  const {navigateIntent} = useRouter()\n  const prevEvent = useRef(event)\n  const [isConfirmDialogOpen, setConfirmDialogOpen] = useState(false)\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const handleConfirm = useCallback(() => {\n    restore.execute(revision!)\n    onComplete()\n  }, [restore, revision, onComplete])\n\n  /**\n   * If the restore operation is successful, navigate to the document edit view\n   */\n  useEffect(() => {\n    if (!event || event === prevEvent.current) return\n\n    if (event.type === 'success' && event.op === 'restore') {\n      navigateIntent('edit', {id, type})\n    }\n\n    prevEvent.current = event\n  }, [event, id, navigateIntent, type])\n\n  const handle = useCallback(() => {\n    setConfirmDialogOpen(true)\n  }, [])\n\n  const dialog: DocumentActionDialogProps | null = useMemo(() => {\n    if (isConfirmDialogOpen) {\n      return {\n        type: 'confirm',\n        tone: 'critical',\n        onCancel: onComplete,\n        onConfirm: handleConfirm,\n        message: t('action.restore.confirm.message'),\n      }\n    }\n\n    return null\n  }, [handleConfirm, isConfirmDialogOpen, onComplete, t])\n\n  const isRevisionInitial = revision === '@initial'\n  const isRevisionLatest = revision === undefined // undefined means latest revision\n\n  return useMemo(() => {\n    if (isRevisionLatest || revisionNotFound) {\n      return null\n    }\n\n    return {\n      label: t('action.restore.label'),\n      tone: 'caution',\n      onHandle: handle,\n      title: t(\n        isRevisionInitial\n          ? 'action.restore.disabled.cannot-restore-initial'\n          : 'action.restore.tooltip',\n      ),\n      icon: RevertIcon,\n      dialog,\n      disabled: isRevisionInitial,\n    }\n  }, [dialog, handle, isRevisionInitial, isRevisionLatest, revisionNotFound, t])\n}\n\nHistoryRestoreAction.action = 'restore'\nHistoryRestoreAction.displayName = 'HistoryRestoreAction'\n","import {defineEvent} from '@sanity/telemetry'\n\ninterface DocumentPublishedInfo {\n  /**\n   * The document was created and published straight away\n   */\n  publishedImmediately: boolean\n\n  /**\n   * The document had a previously published version when it was published\n   */\n  previouslyPublished: boolean\n}\nexport const DocumentPublished = defineEvent<DocumentPublishedInfo>({\n  name: 'Document Published',\n  version: 1,\n  description: 'User clicked the \"Publish\" button in the document pane',\n})\n","import {PublishIcon} from '@sanity/icons'\nimport {useTelemetry} from '@sanity/telemetry/react'\nimport {isValidationErrorMarker} from '@sanity/types'\nimport {useCallback, useEffect, useMemo, useState} from 'react'\nimport {\n  type DocumentActionComponent,\n  InsufficientPermissionsMessage,\n  isPublishedId,\n  type TFunction,\n  useCurrentUser,\n  useDocumentOperation,\n  useDocumentPairPermissions,\n  useEditState,\n  useRelativeTime,\n  useSyncState,\n  useTranslation,\n  useValidationStatus,\n} from 'sanity'\n\nimport {structureLocaleNamespace, type StructureLocaleResourceKeys} from '../i18n'\nimport {useDocumentPane} from '../panes/document/useDocumentPane'\nimport {DocumentPublished} from './__telemetry__/documentActions.telemetry'\n\nconst DISABLED_REASON_TITLE_KEY: Record<string, StructureLocaleResourceKeys> = {\n  LIVE_EDIT_ENABLED: 'action.publish.live-edit.publish-disabled',\n  ALREADY_PUBLISHED: 'action.publish.already-published.no-time-ago.tooltip',\n  NO_CHANGES: 'action.publish.no-changes.tooltip',\n  NOT_READY: 'action.publish.disabled.not-ready',\n} as const\n\nconst PUBLISHED_STATE = {status: 'published'} as const\n\nfunction getDisabledReason(\n  reason: keyof typeof DISABLED_REASON_TITLE_KEY,\n  publishedAt: string | undefined,\n  t: TFunction,\n) {\n  if (reason === 'ALREADY_PUBLISHED' && publishedAt) {\n    return <AlreadyPublished publishedAt={publishedAt} />\n  }\n  return t(DISABLED_REASON_TITLE_KEY[reason])\n}\n\nfunction AlreadyPublished({publishedAt}: {publishedAt: string}) {\n  const {t} = useTranslation(structureLocaleNamespace)\n  const timeSincePublished = useRelativeTime(publishedAt, {useTemporalPhrase: true})\n  return <span>{t('action.publish.already-published.tooltip', {timeSincePublished})}</span>\n}\n\n/** @internal */\nexport const PublishAction: DocumentActionComponent = (props) => {\n  const {id, type, liveEdit, draft, published, release} = props\n  const [publishState, setPublishState] = useState<\n    {status: 'publishing'; publishRevision: string | undefined} | {status: 'published'} | null\n  >(null)\n  const {publish} = useDocumentOperation(id, type)\n  const validationStatus = useValidationStatus(id, type)\n  const syncState = useSyncState(id, type)\n  const {changesOpen, documentId, documentType, value} = useDocumentPane()\n  const editState = useEditState(documentId, documentType)\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const revision = (editState?.draft || editState?.published || {})._rev\n\n  const hasValidationErrors = validationStatus.validation.some(isValidationErrorMarker)\n  // we use this to \"schedule\" publish after pending tasks (e.g. validation and sync) has completed\n  const [publishScheduled, setPublishScheduled] = useState<boolean>(false)\n  const isSyncing = syncState.isSyncing\n  const isValidating = validationStatus.isValidating\n  const [permissions, isPermissionsLoading] = useDocumentPairPermissions({\n    id,\n    type,\n    permission: 'publish',\n  })\n\n  const currentUser = useCurrentUser()\n\n  const title = publish.disabled\n    ? getDisabledReason(publish.disabled, (published || {})._updatedAt, t) || ''\n    : hasValidationErrors\n      ? t('action.publish.validation-issues.tooltip')\n      : ''\n\n  const currentPublishRevision = published?._rev\n\n  const doPublish = useCallback(() => {\n    publish.execute()\n    setPublishState({status: 'publishing', publishRevision: currentPublishRevision})\n  }, [publish, currentPublishRevision])\n\n  useEffect(() => {\n    // make sure the validation status is about the current revision and not an earlier one\n    const validationComplete =\n      validationStatus.isValidating === false && validationStatus.revision !== revision\n\n    if (!publishScheduled || isSyncing || !validationComplete) {\n      return\n    }\n\n    if (!hasValidationErrors) {\n      doPublish()\n    }\n    setPublishScheduled(false)\n  }, [\n    isSyncing,\n    doPublish,\n    hasValidationErrors,\n    publishScheduled,\n    validationStatus.revision,\n    revision,\n    isValidating,\n    validationStatus.isValidating,\n  ])\n\n  useEffect(() => {\n    const didPublish =\n      // All we need to check here is for the revision of the current published document\n      // to be different from what it was at the time of publish\n      // a successful publish will always lead to a new published revision\n      publishState?.status === 'publishing' &&\n      currentPublishRevision !== publishState.publishRevision\n\n    const nextState = didPublish ? PUBLISHED_STATE : null\n    const delay = didPublish ? 200 : 4000\n    const timer = setTimeout(() => {\n      setPublishState(nextState)\n    }, delay)\n    return () => clearTimeout(timer)\n  }, [changesOpen, publishState, currentPublishRevision])\n\n  const telemetry = useTelemetry()\n\n  const handle = useCallback(() => {\n    telemetry.log(DocumentPublished, {\n      publishedImmediately: !draft?._createdAt,\n      previouslyPublished: Boolean(published),\n    })\n    if (\n      syncState.isSyncing ||\n      validationStatus.isValidating ||\n      validationStatus.revision !== revision\n    ) {\n      setPublishScheduled(true)\n    } else {\n      doPublish()\n    }\n  }, [\n    telemetry,\n    draft?._createdAt,\n    published,\n    syncState.isSyncing,\n    validationStatus.isValidating,\n    validationStatus.revision,\n    revision,\n    doPublish,\n  ])\n\n  return useMemo(() => {\n    if (release) {\n      // Version documents are not publishable by this action, they should be published as part of a release\n      return null\n    }\n    if (liveEdit) {\n      // Live edit documents are not publishable by this action, they are published automatically\n      return null\n    }\n\n    /**\n     * When draft is null, if not a published or version document\n     * then it means the draft is yet to be saved - in this case don't disabled\n     * the publish button due to ALREADY_PUBLISHED reason\n     */\n    if (isPublishedId(value._id) && draft !== null) {\n      return {\n        tone: 'default',\n        icon: PublishIcon,\n        label: t('action.publish.label'),\n        title: getDisabledReason('ALREADY_PUBLISHED', published?._updatedAt, t),\n        disabled: true,\n      }\n    }\n\n    if (!isPermissionsLoading && !permissions?.granted) {\n      return {\n        tone: 'default',\n        icon: PublishIcon,\n        label: t('action.publish.label'),\n        title: (\n          <InsufficientPermissionsMessage context=\"publish-document\" currentUser={currentUser} />\n        ),\n        disabled: true,\n      }\n    }\n\n    const disabled = Boolean(\n      publishScheduled ||\n        editState?.transactionSyncLock?.enabled ||\n        publishState?.status === 'publishing' ||\n        publishState?.status === 'published' ||\n        hasValidationErrors ||\n        publish.disabled,\n    )\n\n    return {\n      disabled: disabled || isPermissionsLoading,\n      tone: 'default',\n      label:\n        publishState?.status === 'published'\n          ? t('action.publish.published.label')\n          : publishScheduled || publishState?.status === 'publishing'\n            ? t('action.publish.running.label')\n            : t('action.publish.draft.label'),\n      // @todo: Implement loading state, to show a `<Button loading />` state\n      // loading: publishScheduled || publishState === 'publishing',\n      icon: PublishIcon,\n      title: publishScheduled\n        ? t('action.publish.waiting')\n        : publishState?.status === 'published' || publishState?.status === 'publishing'\n          ? null\n          : title,\n      shortcut: disabled || publishScheduled ? null : 'Ctrl+Alt+P',\n      onHandle: handle,\n    }\n  }, [\n    release,\n    liveEdit,\n    value._id,\n    draft,\n    isPermissionsLoading,\n    permissions?.granted,\n    publishScheduled,\n    editState?.transactionSyncLock?.enabled,\n    publishState,\n    hasValidationErrors,\n    publish.disabled,\n    t,\n    title,\n    handle,\n    published?._updatedAt,\n    currentUser,\n  ])\n}\n\nPublishAction.action = 'publish'\nPublishAction.displayName = 'PublishAction'\n","import {UnpublishIcon} from '@sanity/icons'\nimport {useCallback, useMemo, useState} from 'react'\nimport {\n  type DocumentActionComponent,\n  type DocumentActionModalDialogProps,\n  InsufficientPermissionsMessage,\n  useCurrentUser,\n  useDocumentOperation,\n  useDocumentPairPermissions,\n  usePerspective,\n  useTranslation,\n} from 'sanity'\n\nimport {ConfirmDeleteDialog} from '../components'\nimport {structureLocaleNamespace} from '../i18n'\n\nconst DISABLED_REASON_KEY = {\n  NOT_PUBLISHED: 'action.unpublish.disabled.not-published',\n  NOT_READY: 'action.unpublish.disabled.not-ready',\n  LIVE_EDIT_ENABLED: 'action.unpublish.disabled.live-edit-enabled',\n}\n\n/** @internal */\nexport const UnpublishAction: DocumentActionComponent = ({\n  id,\n  type,\n  draft,\n  onComplete,\n  liveEdit,\n  release,\n}) => {\n  const {unpublish} = useDocumentOperation(id, type)\n  const [isConfirmDialogOpen, setConfirmDialogOpen] = useState(false)\n  const [permissions, isPermissionsLoading] = useDocumentPairPermissions({\n    id,\n    type,\n    permission: 'unpublish',\n  })\n  const currentUser = useCurrentUser()\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {selectedPerspective} = usePerspective()\n\n  const isDraft = selectedPerspective === 'drafts'\n\n  const handleCancel = useCallback(() => {\n    setConfirmDialogOpen(false)\n    onComplete()\n  }, [onComplete])\n\n  const handleConfirm = useCallback(() => {\n    setConfirmDialogOpen(false)\n    unpublish.execute()\n    onComplete()\n  }, [onComplete, unpublish])\n\n  const dialog: DocumentActionModalDialogProps | null = useMemo(() => {\n    if (isConfirmDialogOpen) {\n      return {\n        type: 'dialog',\n        onClose: onComplete,\n        content: (\n          <ConfirmDeleteDialog\n            id={draft?._id || id}\n            type={type}\n            action=\"unpublish\"\n            onCancel={handleCancel}\n            onConfirm={handleConfirm}\n          />\n        ),\n      }\n    }\n\n    return null\n  }, [draft, id, handleCancel, handleConfirm, isConfirmDialogOpen, onComplete, type])\n\n  return useMemo(() => {\n    if (release || isDraft) {\n      // Version documents cannot be unpublished by this action, they should be unpublished as part of a release\n      // Draft documents can't either\n      return null\n    }\n    if (liveEdit) {\n      return null\n    }\n\n    if (!isPermissionsLoading && !permissions?.granted) {\n      return {\n        tone: 'critical',\n        icon: UnpublishIcon,\n        label: 'Unpublish',\n        title: (\n          <InsufficientPermissionsMessage context=\"unpublish-document\" currentUser={currentUser} />\n        ),\n        disabled: true,\n      }\n    }\n\n    return {\n      tone: 'critical',\n      icon: UnpublishIcon,\n      disabled: Boolean(unpublish.disabled) || isPermissionsLoading,\n      label: t('action.unpublish.label'),\n      title: unpublish.disabled ? t(DISABLED_REASON_KEY[unpublish.disabled]) : '',\n      onHandle: () => setConfirmDialogOpen(true),\n      dialog,\n    }\n  }, [\n    release,\n    isDraft,\n    liveEdit,\n    isPermissionsLoading,\n    permissions?.granted,\n    unpublish.disabled,\n    t,\n    dialog,\n    currentUser,\n  ])\n}\n\nUnpublishAction.action = 'unpublish'\nUnpublishAction.displayName = 'UnpublishAction'\n","/* eslint-disable camelcase */\nimport {Flex, LayerProvider, Stack, Text} from '@sanity/ui'\nimport {memo, useCallback, useMemo, useState} from 'react'\nimport {\n  type DocumentActionComponent,\n  type DocumentActionDescription,\n  type DocumentActionProps,\n  Hotkeys,\n  isSanityDefinedAction,\n  usePerspective,\n  useSource,\n} from 'sanity'\n\nimport {Button, Tooltip} from '../../../../ui-components'\nimport {RenderActionCollectionState, type ResolvedAction, usePaneRouter} from '../../../components'\nimport {HistoryRestoreAction} from '../../../documentActions'\nimport {toLowerCaseNoSpaces} from '../../../util/toLowerCaseNoSpaces'\nimport {useDocumentPane} from '../useDocumentPane'\nimport {ActionMenuButton} from './ActionMenuButton'\nimport {ActionStateDialog} from './ActionStateDialog'\n\ninterface DocumentStatusBarActionsInnerProps {\n  disabled: boolean\n  states: ResolvedAction[]\n}\n\nconst DocumentStatusBarActionsInner = memo(function DocumentStatusBarActionsInner(\n  props: DocumentStatusBarActionsInnerProps,\n) {\n  const {disabled, states} = props\n  const {__internal_tasks} = useSource()\n  const {editState} = useDocumentPane()\n  const {params} = usePaneRouter()\n  const showingRevision = Boolean(params?.rev)\n\n  const {selectedReleaseId} = usePerspective()\n  const [firstActionState, ...menuActionStates] = states\n  const [buttonElement, setButtonElement] = useState<HTMLButtonElement | null>(null)\n\n  // TODO: This could be refactored to use the tooltip from the button if the firstAction.title was updated to a string.\n  const tooltipContent = useMemo(() => {\n    if (!firstActionState || (!firstActionState.title && !firstActionState.shortcut)) return null\n\n    return (\n      <Flex style={{maxWidth: 300}} align=\"center\" gap={3}>\n        {firstActionState.title && <Text size={1}>{firstActionState.title}</Text>}\n        {firstActionState.shortcut && (\n          <Hotkeys\n            data-testid=\"document-status-bar-hotkeys\"\n            fontSize={1}\n            style={{marginTop: -4, marginBottom: -4}}\n            keys={String(firstActionState.shortcut)\n              .split('+')\n              .map((s) => s.slice(0, 1).toUpperCase() + s.slice(1).toLowerCase())}\n          />\n        )}\n      </Flex>\n    )\n  }, [firstActionState])\n\n  const showFirstActionButton = showingRevision\n    ? Boolean(firstActionState)\n    : selectedReleaseId\n      ? // If the first action is a custom action and we are in a version document show it.\n        firstActionState && !isSanityDefinedAction(firstActionState)\n      : firstActionState && !editState?.liveEdit\n\n  const sideMenuItems = useMemo(() => {\n    return showFirstActionButton ? menuActionStates : [firstActionState, ...menuActionStates]\n  }, [showFirstActionButton, firstActionState, menuActionStates])\n\n  return (\n    <Flex align=\"center\" gap={1}>\n      {__internal_tasks && __internal_tasks.footerAction}\n      {showFirstActionButton && (\n        <LayerProvider zOffset={200}>\n          <Tooltip disabled={!tooltipContent} content={tooltipContent} placement=\"top\">\n            <Stack>\n              <Button\n                data-testid={`action-${toLowerCaseNoSpaces(firstActionState.label)}`}\n                disabled={disabled || Boolean(firstActionState.disabled)}\n                icon={firstActionState.icon}\n                // eslint-disable-next-line react/jsx-handler-names\n                onClick={firstActionState.onHandle}\n                ref={setButtonElement}\n                text={firstActionState.label}\n                tone={firstActionState.tone || 'primary'}\n              />\n            </Stack>\n          </Tooltip>\n        </LayerProvider>\n      )}\n      {sideMenuItems.length > 0 && (\n        <ActionMenuButton actionStates={sideMenuItems} disabled={disabled} />\n      )}\n      {showFirstActionButton && firstActionState && firstActionState.dialog && (\n        <ActionStateDialog dialog={firstActionState.dialog} referenceElement={buttonElement} />\n      )}\n    </Flex>\n  )\n})\n\nexport const DocumentStatusBarActions = memo(function DocumentStatusBarActions() {\n  const {\n    actions: allActions,\n    connectionState,\n    documentId,\n    editState,\n    isInitialValueLoading,\n  } = useDocumentPane()\n\n  // The restore action has a dedicated place in the UI; it's only visible when the user is viewing\n  // a different document revision. It must be omitted from this collection.\n  const actions = useMemo(\n    () => (allActions ?? []).filter((action) => !isRestoreAction(action)),\n    [allActions],\n  )\n  const actionProps: Omit<DocumentActionProps, 'onComplete'> | null = useMemo(\n    () => (editState ? {...editState, initialValueResolved: !isInitialValueLoading} : null),\n    [editState, isInitialValueLoading],\n  )\n\n  const renderDocumentStatusBarActions = useCallback<\n    (props: {states: ResolvedAction[]}) => React.ReactNode\n  >(\n    ({states}) => (\n      <DocumentStatusBarActionsInner\n        // Use document ID as key to make sure that the actions state is reset when the document changes\n        key={documentId}\n        disabled={connectionState !== 'connected'}\n        states={states}\n      />\n    ),\n    [connectionState, documentId],\n  )\n\n  if (actions.length === 0 || !actionProps) {\n    return null\n  }\n\n  return (\n    <RenderActionCollectionState actions={actions} actionProps={actionProps} group=\"default\">\n      {renderDocumentStatusBarActions}\n    </RenderActionCollectionState>\n  )\n})\n\nexport const HistoryStatusBarActions = memo(function HistoryStatusBarActions() {\n  const {\n    actions,\n    connectionState,\n    editState,\n    revisionId: revision,\n    isInitialValueLoading,\n  } = useDocumentPane()\n\n  const disabled = (editState?.draft || editState?.published || {})._rev === revision\n  const actionProps: Omit<DocumentActionProps, 'onComplete'> | null = useMemo(\n    () =>\n      editState\n        ? {\n            ...editState,\n            revision: revision || undefined,\n            initialValueResolved: !isInitialValueLoading,\n          }\n        : null,\n    [editState, revision, isInitialValueLoading],\n  )\n\n  // If multiple `restore` actions are defined, ensure only the final one is used.\n  const historyActions = useMemo(() => (actions ?? []).filter(isRestoreAction).slice(-1), [actions])\n\n  const renderDocumentStatusBarActions = useCallback<\n    (props: {states: DocumentActionDescription[]}) => React.ReactNode\n  >(\n    ({states}) => (\n      <DocumentStatusBarActionsInner\n        disabled={connectionState !== 'connected' || Boolean(disabled)}\n        states={states}\n      />\n    ),\n    [connectionState, disabled],\n  )\n  if (!actionProps) {\n    return null\n  }\n  return (\n    <RenderActionCollectionState actions={historyActions} actionProps={actionProps} group=\"default\">\n      {renderDocumentStatusBarActions}\n    </RenderActionCollectionState>\n  )\n})\n\nexport function isRestoreAction(\n  action: DocumentActionComponent,\n): action is DocumentActionComponent & {action: 'restore'} {\n  return action.action === HistoryRestoreAction.action\n}\n","import {useEffect, useState} from 'react'\n\n/**\n * This hook is used to determine if the gradient should be shown on the chip scroll container.\n * It uses an IntersectionObserver to observe the last child of the container and sets the showGradient state based on the intersection.\n * @param containerRef - The ref to the container that contains all the chips\n * @returns showGradient - A boolean that determines if the gradient should be shown\n * @internal\n */\nexport function useChipScrollPosition(containerRef: React.RefObject<HTMLDivElement | null>) {\n  const [showGradient, setShowGradient] = useState(false)\n\n  useEffect(() => {\n    const checkOverflow = () => {\n      // container is the parent that contains all the chips\n      const container = containerRef.current\n      if (!container) return\n      const {scrollWidth, clientWidth} = container\n      const needsScrolling = scrollWidth > clientWidth\n\n      if (!needsScrolling) {\n        setShowGradient(false)\n        return\n      }\n\n      // Check if scrolled to the end\n      // becausee it doesn't need to show the gradient then\n      const {scrollLeft} = container\n      const isAtEnd = scrollLeft + clientWidth >= scrollWidth\n      setShowGradient(!isAtEnd)\n    }\n\n    function setupObservers() {\n      checkOverflow()\n      // container is the parent that contains all the chips\n      const container = containerRef.current\n      if (!container) return {intersectionObserver: null, mutationObserver: null}\n\n      const intersectionObserver = new IntersectionObserver((entries) => {\n        const entry = entries[0]\n\n        if (entry) {\n          setShowGradient(!entry.isIntersecting)\n        }\n      })\n\n      const updateLastChipObserver = () => {\n        // Disconnect previous observation\n        intersectionObserver.disconnect()\n\n        // Get the new last child\n        const lastChip = container.children[container.children.length - 1]\n        intersectionObserver.observe(lastChip)\n      }\n\n      // Set up initial observation\n      updateLastChipObserver()\n\n      // Set up mutation observer to watch for changes to children\n      // this is needed because sometimes the list of releases takes some time to be rendered\n      // otherwise it could accidentally set the last child as the \"drafts\" / \"published\" chip\n      const mutationObserver = new MutationObserver(() => {\n        updateLastChipObserver()\n        checkOverflow()\n      })\n\n      mutationObserver.observe(container, {\n        childList: true,\n        subtree: false,\n      })\n\n      return {intersectionObserver, mutationObserver}\n    }\n\n    const {intersectionObserver, mutationObserver} = setupObservers()\n\n    return () => {\n      intersectionObserver?.disconnect()\n      mutationObserver?.disconnect()\n    }\n  }, [containerRef])\n\n  return showGradient\n}\n","import {Text} from '@sanity/ui'\nimport {memo, useCallback, useMemo} from 'react'\nimport {\n  formatRelativeLocalePublishDate,\n  getReleaseIdFromReleaseDocumentId,\n  getReleaseTone,\n  getVersionFromId,\n  isDraftId,\n  isGoingToUnpublish,\n  isPublishedId,\n  isPublishedPerspective,\n  isReleaseScheduledOrScheduling,\n  isVersionId,\n  type ReleaseDocument,\n  type SanityDocumentLike,\n  Translate,\n  useActiveReleases,\n  useDateTimeFormat,\n  type UseDateTimeFormatOptions,\n  useOnlyHasVersions,\n  usePerspective,\n  useSchema,\n  useSetPerspective,\n  useTranslation,\n  useWorkspace,\n  VersionChip,\n} from 'sanity'\n\nimport {isLiveEditEnabled} from '../../../../../components/paneItem/helpers'\nimport {usePaneRouter} from '../../../../../components/paneRouter/usePaneRouter'\nimport {useFilteredReleases} from '../../../../../hooks/useFilteredReleases'\nimport {useDocumentPane} from '../../../useDocumentPane'\n\nconst TooltipContent = ({release}: {release: ReleaseDocument}) => {\n  const {t} = useTranslation()\n\n  if (release.state === 'archived') {\n    return <Text size={1}>{t('release.chip.tooltip.archived')}</Text>\n  }\n  if (release.metadata.releaseType === 'asap') {\n    return <Text size={1}>{t('release.type.asap')}</Text>\n  }\n  if (release.metadata.releaseType === 'scheduled') {\n    const isActive = release.state === 'active'\n\n    return (\n      release.metadata.intendedPublishAt && (\n        <Text size={1}>\n          {isActive ? (\n            <Translate\n              t={t}\n              i18nKey=\"release.chip.tooltip.intended-for-date\"\n              values={{\n                date: formatRelativeLocalePublishDate(release),\n              }}\n            />\n          ) : (\n            <Translate\n              t={t}\n              i18nKey=\"release.chip.tooltip.scheduled-for-date\"\n              values={{\n                date: formatRelativeLocalePublishDate(release),\n              }}\n            />\n          )}\n        </Text>\n      )\n    )\n  }\n\n  if (release.metadata.releaseType === 'undecided') {\n    return <Text size={1}>{t('release.type.undecided')}</Text>\n  }\n  return null\n}\n\nconst DATE_TIME_FORMAT: UseDateTimeFormatOptions = {\n  dateStyle: 'medium',\n  timeStyle: 'short',\n}\n\n// eslint-disable-next-line complexity\nexport const DocumentPerspectiveList = memo(function DocumentPerspectiveList() {\n  const {selectedReleaseId, selectedPerspectiveName} = usePerspective()\n  const {t} = useTranslation()\n  const setPerspective = useSetPerspective()\n  const {params, setParams} = usePaneRouter()\n  const dateTimeFormat = useDateTimeFormat(DATE_TIME_FORMAT)\n  const {loading} = useActiveReleases()\n  const schema = useSchema()\n  const {editState, displayed, documentType, documentId} = useDocumentPane()\n  const isCreatingDocument = displayed && !displayed._createdAt\n  const filteredReleases = useFilteredReleases({displayed, documentId})\n  const onlyHasVersions = useOnlyHasVersions({documentId})\n  const workspace = useWorkspace()\n\n  const handlePerspectiveChange = useCallback(\n    (perspective: Parameters<typeof setPerspective>[0]) => () => {\n      if (perspective === 'published' && params?.historyVersion) {\n        setParams({\n          ...params,\n          rev: params?.historyEvent || undefined,\n          since: undefined,\n          historyVersion: undefined,\n        })\n      }\n      setPerspective(perspective)\n    },\n    [setPerspective, setParams, params],\n  )\n\n  const schemaType = schema.get(documentType)\n  const isLiveEdit = schemaType ? isLiveEditEnabled(schemaType) : false\n\n  const isPublishedChipDisabled = useMemo(() => {\n    // If it's a live edit document the only option to edit it is through\n    // the published perspective, users should be able to select it.\n    if (isLiveEdit && !selectedReleaseId) return false\n\n    // If it's not live edit, we want to check for the existence of the published doc.\n    return !editState?.published\n  }, [isLiveEdit, selectedReleaseId, editState?.published])\n\n  const getReleaseChipState = useCallback(\n    (release: ReleaseDocument): {selected: boolean; disabled?: boolean} => {\n      if (!params?.historyVersion) {\n        const isCurrentVersionGoingToUnpublish =\n          editState?.version &&\n          isGoingToUnpublish(editState?.version) &&\n          getReleaseIdFromReleaseDocumentId(release._id) ===\n            getVersionFromId(editState?.version?._id)\n\n        return {\n          selected: Boolean(\n            getReleaseIdFromReleaseDocumentId(release._id) ===\n              getVersionFromId(displayed?._id || '') || isCurrentVersionGoingToUnpublish,\n          ),\n        }\n      }\n\n      const isReleaseHistoryMatch =\n        getReleaseIdFromReleaseDocumentId(release._id) === params.historyVersion\n\n      return {selected: isReleaseHistoryMatch, disabled: isReleaseHistoryMatch}\n    },\n    [displayed?._id, editState?.version, params?.historyVersion],\n  )\n\n  const isPublishSelected: boolean = useMemo(() => {\n    /**\n     * The publish perspective is selected when:\n     *  - the document is live edit and there is no draft\n     *  - the document is published and the selected perspective is published\n     */\n    if (isLiveEdit && !editState?.draft?._id && !selectedReleaseId) return true\n    if (\n      isPublishedId(displayed?._id || '') &&\n      isPublishedPerspective(selectedPerspectiveName || '')\n    ) {\n      return true\n    }\n    return false\n  }, [\n    displayed?._id,\n    editState?.draft?._id,\n    isLiveEdit,\n    selectedPerspectiveName,\n    selectedReleaseId,\n  ])\n\n  const isDraftSelected: boolean = useMemo(() => {\n    const displayedId = displayed?._id || ''\n    /** the draft is selected when:\n     * not viewing a historical version,\n     * when the document displayed is a draft,\n     * when the perspective is null,\n     * when the document is not published and the displayed version is draft,\n     * when there is no draft (new document),\n     */\n    if (isPublishSelected) return false\n    if (params?.historyVersion) return false\n    if (selectedPerspectiveName) return false\n    if (isVersionId(displayedId)) return false\n    if (isDraftId(displayedId)) return true\n    if (\n      isPublishedId(displayedId) &&\n      editState?.published &&\n      isPublishedPerspective(selectedPerspectiveName || '')\n    )\n      return false\n    return true\n  }, [\n    displayed?._id,\n    editState?.published,\n    isPublishSelected,\n    params?.historyVersion,\n    selectedPerspectiveName,\n  ])\n\n  const isDraftDisabled: boolean = useMemo(() => {\n    // Draft is disabled when the document has no published or draft but has versions\n    if (onlyHasVersions || (isCreatingDocument && selectedReleaseId)) {\n      return true\n    }\n\n    // Draft is disabled when we are creating a new document inside a release\n    // or when the document is live edit and there is no draft\n    if (!editState?.draft && !isLiveEdit) {\n      return false\n    }\n\n    if (isCreatingDocument && selectedReleaseId) return true\n    if (isLiveEdit) return true\n    return false\n  }, [editState?.draft, isCreatingDocument, isLiveEdit, onlyHasVersions, selectedReleaseId])\n\n  const isDraftModelEnabled = workspace.document.drafts?.enabled\n\n  return (\n    <>\n      <VersionChip\n        tooltipContent={\n          <Text size={1}>\n            {editState?.published && editState?.published?._updatedAt ? (\n              <Translate\n                t={t}\n                i18nKey=\"release.chip.tooltip.published-date\"\n                values={{date: dateTimeFormat.format(new Date(editState?.published._updatedAt))}}\n              />\n            ) : (\n              <>{t('release.chip.tooltip.not-published')}</>\n            )}\n          </Text>\n        }\n        disabled={isPublishedChipDisabled}\n        onClick={handlePerspectiveChange('published')}\n        selected={isPublishSelected}\n        text={t('release.chip.published')}\n        tone=\"positive\"\n        contextValues={{\n          documentId: editState?.published?._id || editState?.id || '',\n          menuReleaseId: editState?.published?._id || editState?.id || '',\n          releases: filteredReleases.notCurrentReleases,\n          releasesLoading: loading,\n          documentType,\n          fromRelease: 'published',\n          isVersion: false,\n          disabled: !editState?.published,\n        }}\n      />\n      {isDraftModelEnabled && (\n        <VersionChip\n          tooltipContent={\n            <Text size={1}>\n              {editState?.draft ? (\n                <>\n                  {editState?.draft._updatedAt ? (\n                    <Translate\n                      t={t}\n                      i18nKey=\"release.chip.tooltip.edited-date\"\n                      values={{date: dateTimeFormat.format(new Date(editState?.draft._updatedAt))}}\n                    />\n                  ) : (\n                    <Translate\n                      t={t}\n                      i18nKey=\"release.chip.tooltip.created-date\"\n                      values={{date: dateTimeFormat.format(new Date(editState?.draft._createdAt))}}\n                    />\n                  )}\n                </>\n              ) : (\n                <>\n                  {isLiveEdit\n                    ? t('release.chip.tooltip.draft-disabled.live-edit')\n                    : t('release.chip.tooltip.no-edits')}\n                </>\n              )}\n            </Text>\n          }\n          selected={isDraftSelected}\n          disabled={isDraftDisabled}\n          text={t('release.chip.draft')}\n          tone={editState?.draft ? 'caution' : 'neutral'}\n          onClick={handlePerspectiveChange('drafts')}\n          contextValues={{\n            documentId: editState?.draft?._id || editState?.published?._id || editState?.id || '',\n            menuReleaseId:\n              editState?.draft?._id || editState?.published?._id || editState?.id || '',\n            releases: filteredReleases.notCurrentReleases,\n            releasesLoading: loading,\n            documentType: documentType,\n            fromRelease: 'draft',\n            isVersion: false,\n          }}\n        />\n      )}\n      {filteredReleases.inCreation && (\n        <VersionChip\n          tooltipContent={<TooltipContent release={filteredReleases.inCreation} />}\n          selected\n          onClick={() => {}}\n          locked={false}\n          tone={getReleaseTone(filteredReleases.inCreation)}\n          text={\n            filteredReleases.inCreation.metadata.title || t('release.placeholder-untitled-release')\n          }\n          contextValues={{\n            disabled: true, // disable the chip context menu, this one is in creation\n            documentId: displayed?._id || '',\n            menuReleaseId: filteredReleases.inCreation._id,\n            releases: filteredReleases.notCurrentReleases,\n            releasesLoading: loading,\n            documentType,\n            fromRelease: getReleaseIdFromReleaseDocumentId(filteredReleases.inCreation._id),\n            releaseState: filteredReleases.inCreation.state,\n            isVersion: true,\n            release: filteredReleases.inCreation,\n          }}\n        />\n      )}\n\n      {displayed &&\n        filteredReleases.currentReleases?.map((release) => (\n          <VersionChip\n            key={release._id}\n            tooltipContent={<TooltipContent release={release} />}\n            {...getReleaseChipState(release)}\n            onClick={handlePerspectiveChange(getReleaseIdFromReleaseDocumentId(release._id))}\n            text={release.metadata.title || t('release.placeholder-untitled-release')}\n            tone={getReleaseTone(release)}\n            locked={isReleaseScheduledOrScheduling(release)}\n            contextValues={{\n              documentId: displayed?._id || '',\n              menuReleaseId: release._id,\n              releases: filteredReleases.notCurrentReleases,\n              releasesLoading: loading,\n              documentType: documentType,\n              fromRelease: getReleaseIdFromReleaseDocumentId(release._id),\n              releaseState: release.state,\n              isVersion: true,\n              // displayed, in this instance is not going to be the version to compare to\n              // since it's going to be the published version\n              isGoingToUnpublish: editState?.version\n                ? isGoingToUnpublish(editState?.version as SanityDocumentLike)\n                : false,\n              release,\n            }}\n          />\n        ))}\n    </>\n  )\n})\n","import {ArrowLeftIcon, CloseIcon, SplitVerticalIcon} from '@sanity/icons'\nimport {Box, Card, Flex} from '@sanity/ui'\n// eslint-disable-next-line camelcase\nimport {getTheme_v2, rgba} from '@sanity/ui/theme'\nimport {\n  type ForwardedRef,\n  forwardRef,\n  memo,\n  useCallback,\n  useDeferredValue,\n  useMemo,\n  useRef,\n  useState,\n} from 'react'\nimport {type DocumentActionDescription, useFieldActions, useTranslation} from 'sanity'\nimport {css, styled} from 'styled-components'\n\nimport {Button, TooltipDelayGroupProvider} from '../../../../../ui-components'\nimport {\n  PaneContextMenuButton,\n  PaneHeader,\n  PaneHeaderActionButton,\n  RenderActionCollectionState,\n  usePane,\n  usePaneRouter,\n} from '../../../../components'\nimport {type _PaneMenuNode} from '../../../../components/pane/types'\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {isMenuNodeButton, isNotMenuNodeButton, resolveMenuNodes} from '../../../../menuNodes'\nimport {type PaneMenuItem} from '../../../../types'\nimport {useStructureTool} from '../../../../useStructureTool'\nimport {ActionDialogWrapper, ActionMenuListItem} from '../../statusBar/ActionMenuButton'\nimport {isRestoreAction} from '../../statusBar/DocumentStatusBarActions'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {DocumentHeaderTitle} from './DocumentHeaderTitle'\nimport {useChipScrollPosition} from './hook/useChipScrollPosition'\nimport {DocumentPerspectiveList} from './perspective/DocumentPerspectiveList'\n\nexport interface DocumentPanelHeaderProps {\n  menuItems: PaneMenuItem[]\n}\n\nconst HorizontalScroller = styled(Card)<{$showGradient: boolean}>((props) => {\n  const theme = getTheme_v2(props.theme)\n\n  return css`\n    scrollbar-width: none;\n    z-index: 1;\n    flex: 1;\n    position: relative;\n    > div {\n      &::-webkit-scrollbar {\n        width: 0;\n        height: 0;\n      }\n    }\n\n    ${props.$showGradient &&\n    css`\n      &::after {\n        content: '';\n        display: block;\n        position: absolute;\n        top: 0;\n        right: 0;\n        bottom: 0;\n        width: 150px;\n        background: linear-gradient(to right, ${rgba(theme.color.bg, 0)}, var(--card-bg-color));\n        transition: 'opacity 300ms ease-out';\n        pointer-events: none;\n      }\n    `}\n  `\n})\n\nexport const DocumentPanelHeader = memo(\n  forwardRef(function DocumentPanelHeader(\n    _props: DocumentPanelHeaderProps,\n    ref: ForwardedRef<HTMLDivElement>,\n  ) {\n    const {menuItems} = _props\n    const {\n      actions: allActions,\n      editState,\n      onMenuAction,\n      isInitialValueLoading,\n      onPaneClose,\n      onPaneSplit,\n      menuItemGroups,\n      schemaType,\n      connectionState,\n      views,\n      unstable_languageFilter,\n    } = useDocumentPane()\n    const {features} = useStructureTool()\n    const {index, BackLink, hasGroupSiblings} = usePaneRouter()\n    const {actions: fieldActions} = useFieldActions()\n    const [referenceElement, setReferenceElement] = useState<HTMLElement | null>(null)\n    const scrollContainerRef = useRef<HTMLDivElement>(null)\n    const showGradient = useChipScrollPosition(scrollContainerRef)\n\n    // The restore action has a dedicated place in the UI; it's only visible when the user is\n    // viewing a different document revision. It must be omitted from this collection.\n    const actions = useMemo(\n      () => (allActions ?? []).filter((action) => !isRestoreAction(action)),\n      [allActions],\n    )\n\n    const menuNodes = useMemo(\n      () =>\n        resolveMenuNodes({actionHandler: onMenuAction, fieldActions, menuItems, menuItemGroups}),\n      [onMenuAction, fieldActions, menuItemGroups, menuItems],\n    )\n\n    const menuButtonNodes = useMemo(() => menuNodes.filter(isMenuNodeButton), [menuNodes])\n    const contextMenuNodes = useMemo(() => menuNodes.filter(isNotMenuNodeButton), [menuNodes])\n    const showTabs = views.length > 1\n\n    const {collapsed, isLast} = usePane()\n    // Prevent focus if this is the last (non-collapsed) pane.\n    const tabIndex = isLast && !collapsed ? -1 : 0\n\n    // there are three kinds of buttons possible:\n    //\n    // 1. split pane - creates a new split pane\n    // 2. close split pane — closes the current split pane\n    // 3. close pane group — closes the current pane group\n\n    // show the split pane button if they're enabled and there is more than one\n    // view available to use to create a split view\n    const showSplitPaneButton = features.splitViews && onPaneSplit && views.length > 1\n\n    // show the split pane button close button if the split button is showing\n    // and there is more than one split pane open (aka has-siblings)\n    const showSplitPaneCloseButton = showSplitPaneButton && hasGroupSiblings\n\n    // show the back button if both the feature is enabled and the current pane\n    // is not the first\n    const showBackButton = features.backButton && index > 0\n\n    // show the pane group close button if the `showSplitPaneCloseButton` is\n    // _not_ showing (the split pane button replaces the group close button)\n    // and if the back button is not showing (the back button and the close\n    // button do the same thing and shouldn't be shown at the same time)\n    // and if a BackLink component was provided\n    const showPaneGroupCloseButton = !showSplitPaneCloseButton && !showBackButton && !!BackLink\n\n    const {t} = useTranslation(structureLocaleNamespace)\n\n    const renderPaneActions = useCallback<\n      (props: {states: DocumentActionDescription[]}) => React.ReactNode\n    >(\n      ({states}) => (\n        <DocumentPanelHeaderActionDialogDeferred\n          contextMenuNodes={contextMenuNodes}\n          setReferenceElement={setReferenceElement}\n          referenceElement={referenceElement}\n          states={states}\n        />\n      ),\n      [contextMenuNodes, referenceElement],\n    )\n\n    const title = useMemo(() => <DocumentHeaderTitle />, [])\n    const backButton = useMemo(\n      () =>\n        showBackButton && (\n          <Button\n            as={BackLink}\n            data-as=\"a\"\n            icon={ArrowLeftIcon}\n            mode=\"bleed\"\n            tooltipProps={{content: t('pane-header.back-button.text')}}\n          />\n        ),\n      [BackLink, showBackButton, t],\n    )\n    const renderedActions = useMemo(\n      () => (\n        <Flex align=\"center\" gap={1}>\n          {unstable_languageFilter.length > 0 && (\n            <>\n              {unstable_languageFilter.map((LanguageFilterComponent, idx) => {\n                return (\n                  <LanguageFilterComponent key={`language-filter-${idx}`} schemaType={schemaType} />\n                )\n              })}\n            </>\n          )}\n\n          {menuButtonNodes.map((item) => (\n            <PaneHeaderActionButton key={item.key} node={item} />\n          ))}\n          {editState && (\n            <RenderActionCollectionState\n              actions={actions}\n              actionProps={{...editState, initialValueResolved: !isInitialValueLoading}}\n              group=\"paneActions\"\n            >\n              {renderPaneActions}\n            </RenderActionCollectionState>\n          )}\n\n          {showSplitPaneButton && (\n            <Button\n              key=\"split-pane-button\"\n              aria-label={t('buttons.split-pane-button.aria-label')}\n              icon={SplitVerticalIcon}\n              mode=\"bleed\"\n              onClick={onPaneSplit}\n              tooltipProps={{content: t('buttons.split-pane-button.tooltip')}}\n            />\n          )}\n\n          {showSplitPaneCloseButton && (\n            <Button\n              key=\"close-view-button\"\n              icon={CloseIcon}\n              mode=\"bleed\"\n              onClick={onPaneClose}\n              tooltipProps={{content: t('buttons.split-pane-close-button.title')}}\n            />\n          )}\n\n          {showPaneGroupCloseButton && (\n            <Button\n              key=\"close-view-button\"\n              icon={CloseIcon}\n              mode=\"bleed\"\n              tooltipProps={{content: t('buttons.split-pane-close-group-button.title')}}\n              as={BackLink}\n            />\n          )}\n        </Flex>\n      ),\n      [\n        BackLink,\n        actions,\n        editState,\n        isInitialValueLoading,\n        menuButtonNodes,\n        onPaneClose,\n        onPaneSplit,\n        renderPaneActions,\n        schemaType,\n        showPaneGroupCloseButton,\n        showSplitPaneButton,\n        showSplitPaneCloseButton,\n        t,\n        unstable_languageFilter,\n      ],\n    )\n\n    return (\n      <TooltipDelayGroupProvider>\n        {collapsed ? (\n          <PaneHeader\n            border\n            ref={ref}\n            loading={connectionState === 'connecting' && !editState?.draft && !editState?.published}\n            title={title}\n            tabIndex={tabIndex}\n            backButton={backButton}\n          />\n        ) : (\n          <Card hidden={collapsed} style={{lineHeight: 0}} borderBottom>\n            <Flex gap={3} paddingY={3}>\n              <HorizontalScroller $showGradient={showGradient}>\n                <Flex\n                  flex={1}\n                  gap={1}\n                  overflow=\"auto\"\n                  paddingX={3}\n                  data-testid=\"document-perspective-list\"\n                  ref={scrollContainerRef}\n                >\n                  <DocumentPerspectiveList />\n                </Flex>\n              </HorizontalScroller>\n\n              <Box flex=\"none\" paddingRight={3}>\n                {renderedActions}\n              </Box>\n            </Flex>\n          </Card>\n        )}\n      </TooltipDelayGroupProvider>\n    )\n  }),\n)\n\nconst DocumentPanelHeaderActionDialogDeferred = memo(\n  function DocumentPanelHeaderActionDialogDeferred(props: {\n    states: DocumentActionDescription[]\n    setReferenceElement: React.Dispatch<React.SetStateAction<HTMLElement | null>>\n    referenceElement: HTMLElement | null\n    contextMenuNodes: _PaneMenuNode[]\n  }) {\n    const {setReferenceElement, referenceElement, contextMenuNodes} = props\n    /**\n     * The purpose of this component is to allow deferring the rendering of document action hook states if the main thread becomes very busy.\n     * The `useDeferredValue` doesn't have an effect unless it's used to delay rendering a component that has `React.memo` to prevent unnecessary re-renders.\n     */\n    const states = useDeferredValue(props.states)\n\n    return (\n      <DocumentPanelHeaderActionDialog\n        setReferenceElement={setReferenceElement}\n        referenceElement={referenceElement}\n        contextMenuNodes={contextMenuNodes}\n        states={states}\n      />\n    )\n  },\n)\n\nconst DocumentPanelHeaderActionDialog = memo(function DocumentPanelHeaderActionDialog(props: {\n  states: DocumentActionDescription[]\n  setReferenceElement: React.Dispatch<React.SetStateAction<HTMLElement | null>>\n  referenceElement: HTMLElement | null\n  contextMenuNodes: _PaneMenuNode[]\n}) {\n  const {states, setReferenceElement, contextMenuNodes, referenceElement} = props\n\n  const renderActionDialog = useCallback<\n    ({handleAction}: {handleAction: (idx: number) => void}) => React.ReactNode\n  >(\n    ({handleAction}) => (\n      <div ref={setReferenceElement}>\n        <PaneContextMenuButton\n          key=\"context-menu\"\n          nodes={contextMenuNodes}\n          actionsNodes={\n            states.length > 0\n              ? states.map((actionState, actionIndex) => (\n                  <ActionMenuListItem\n                    key={actionState.label}\n                    actionState={actionState}\n                    disabled={Boolean(actionState.disabled)}\n                    index={actionIndex}\n                    onAction={handleAction}\n                  />\n                ))\n              : undefined\n          }\n        />\n      </div>\n    ),\n    [contextMenuNodes, setReferenceElement, states],\n  )\n\n  return (\n    <ActionDialogWrapper actionStates={states} referenceElement={referenceElement}>\n      {renderActionDialog}\n    </ActionDialogWrapper>\n  )\n})\n","import {Button, type ButtonProps} from '../../../ui-components'\n\ninterface SpacerButtonProps {\n  size?: ButtonProps['size']\n}\n\n/**\n * This renders a visually hidden <Button> component that is still contributes\n * to document layout.\n *\n * It's used to simplify padding in Sanity UI components that contain buttons which\n * may not always be rendered.\n *\n * TODO: let's find a more elegant solve to this layout shift problem\n *\n * @internal\n */\nexport function SpacerButton({size}: SpacerButtonProps) {\n  return (\n    <Button\n      aria-hidden\n      disabled\n      size={size}\n      style={{\n        pointerEvents: 'none',\n        visibility: 'hidden',\n        width: 0,\n      }}\n      text=\"-\"\n    />\n  )\n}\n","import {Badge, type BadgeTone, Inline} from '@sanity/ui'\nimport {memo, useCallback, useDeferredValue} from 'react'\nimport {type DocumentBadgeDescription} from 'sanity'\n\nimport {Tooltip} from '../../../../ui-components'\nimport {RenderBadgeCollectionState} from '../../../components'\nimport {useDocumentPane} from '../useDocumentPane'\n\ninterface DocumentBadgesInnerProps {\n  states: DocumentBadgeDescription[]\n}\n\nconst BADGE_TONES: Record<string, BadgeTone | undefined> = {\n  primary: 'primary',\n  success: 'positive',\n  warning: 'caution',\n  danger: 'critical',\n}\n\nconst DocumentBadgesInner = memo(function DocumentBadgesInner({states}: DocumentBadgesInnerProps) {\n  if (states.length === 0) {\n    return null\n  }\n  return (\n    <Inline space={1}>\n      {states.map((badge, index) => (\n        <Tooltip\n          key={`${badge.label}-${index}`}\n          content={badge.title}\n          disabled={!badge.title}\n          placement=\"top\"\n          portal\n        >\n          <Badge\n            fontSize={1}\n            mode=\"outline\"\n            paddingX={2}\n            paddingY={1}\n            radius={4}\n            tone={badge.color ? BADGE_TONES[badge.color] : undefined}\n            style={{whiteSpace: 'nowrap'}}\n          >\n            {badge.label}\n          </Badge>\n        </Tooltip>\n      ))}\n    </Inline>\n  )\n})\n\nconst DocumentBadgesDeferred = memo(function DocumentBadgesDeferred(\n  props: DocumentBadgesInnerProps,\n) {\n  /**\n   * The purpose of this component is to allow deferring the rendering of document action hook states if the main thread becomes very busy.\n   * The `useDeferredValue` doesn't have an effect unless it's used to delay rendering a component that has `React.memo` to prevent unnecessary re-renders.\n   */\n  const states = useDeferredValue(props.states)\n  return <DocumentBadgesInner states={states} />\n})\n\nexport function DocumentBadges() {\n  const {badges, editState} = useDocumentPane()\n\n  const renderDocumentBadges = useCallback<\n    (props: {states: DocumentBadgeDescription[]}) => React.ReactNode\n  >(({states}) => <DocumentBadgesDeferred states={states} />, [])\n\n  if (!editState || !badges) return null\n\n  return (\n    <RenderBadgeCollectionState badges={badges} badgeProps={editState}>\n      {renderDocumentBadges}\n    </RenderBadgeCollectionState>\n  )\n}\n","import {\n  AddIcon,\n  CloseIcon,\n  EditIcon,\n  type IconComponent,\n  PublishIcon,\n  TrashIcon,\n  UnpublishIcon,\n} from '@sanity/icons'\n\nexport const TIMELINE_ICON_COMPONENTS: {[key: string]: IconComponent | undefined} = {\n  create: AddIcon,\n  delete: TrashIcon,\n  discardDraft: CloseIcon,\n  initial: AddIcon,\n  editDraft: EditIcon,\n  editLive: EditIcon,\n  publish: PublishIcon,\n  unpublish: UnpublishIcon,\n}\n","import {type IconComponent} from '@sanity/icons'\nimport {type ChunkType} from 'sanity'\n\nimport {TIMELINE_ICON_COMPONENTS} from './constants'\n\nexport function getTimelineEventIconComponent(type: ChunkType): IconComponent | undefined {\n  return TIMELINE_ICON_COMPONENTS[type]\n}\n","import {ChevronLeftIcon} from '@sanity/icons'\nimport {type MouseEvent, useCallback} from 'react'\nimport {useTranslation} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Button} from '../../../../ui-components'\nimport {structureLocaleNamespace} from '../../../i18n'\nimport {TIMELINE_LIST_WRAPPER_ID} from './timeline'\n\n/**\n * This is a hack to force the scrollbar to not appear when the list is expanding,\n * if we don't do this the scrollbar will appear for a brief moment when the list is expanding and then disappear\n * when the list is fully expanded.\n */\nfunction hideScrollbarOnExpand(isExpanded: boolean) {\n  // Do nothing if the list is already expanded\n  if (isExpanded) return\n\n  const listWrapper = document.getElementById(TIMELINE_LIST_WRAPPER_ID)\n\n  if (listWrapper) {\n    const firstChildren = listWrapper.children[0] as HTMLElement\n    const hasScrollbar = firstChildren.scrollHeight > firstChildren.clientHeight\n    if (!hasScrollbar) {\n      //\n      const currentStyle = getComputedStyle(firstChildren).overflowY\n      // Add overflow hidden to the listWrapper to avoid the scrollbar to appear when expanding\n      firstChildren.style.overflowY = 'hidden'\n      setTimeout(() => {\n        // Reset the overflow style after the list is expanded\n        firstChildren.style.overflowY = currentStyle\n      }, 0)\n    }\n  }\n}\n\nconst FlipIcon = styled(ChevronLeftIcon)`\n  transition: transform 200ms;\n  &[data-expanded='true'] {\n    transform: rotate(-90deg);\n  }\n`\n\nexport function ExpandableTimelineItemButton({\n  isExpanded,\n  onExpand,\n}: {\n  isExpanded: boolean\n  onExpand: () => void\n}) {\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const handleExpandClick = useCallback(\n    (e: MouseEvent<HTMLButtonElement>) => {\n      e.stopPropagation()\n      hideScrollbarOnExpand(isExpanded)\n      onExpand()\n    },\n    [onExpand, isExpanded],\n  )\n\n  return (\n    <Button\n      mode=\"bleed\"\n      icon={<FlipIcon data-expanded={isExpanded} />}\n      tooltipProps={{\n        content: isExpanded\n          ? t('timeline-item.menu.action-collapse')\n          : t('timeline-item.menu.action-expand'),\n      }}\n      onClick={handleExpandClick}\n    />\n  )\n}\n","import {Box, Flex, Stack} from '@sanity/ui'\nimport {css, styled} from 'styled-components'\n\nexport const StackWrapper = styled(Stack)`\n  max-width: 200px;\n`\n\nexport const ListWrapper = styled(Flex)<{$maxHeight: string}>`\n  max-height: ${(props) => props.$maxHeight};\n  min-width: 244px;\n`\n\nexport const Root = styled(Box)<{$visible?: boolean}>(({$visible}) => {\n  return css`\n    opacity: 0;\n    pointer-events: none;\n    transition: opacity 0.2s;\n\n    ${$visible &&\n    css`\n      opacity: 1;\n      pointer-events: auto;\n    `}\n  `\n})\n","import {type ChunkType, type StudioLocaleResourceKeys} from 'sanity'\n\n/**\n * Maps from a chunk type to an i18n key for the operation\n *\n * @internal\n */\nexport const TIMELINE_ITEM_I18N_KEY_MAPPING: Record<ChunkType, StudioLocaleResourceKeys> = {\n  initial: 'timeline.operation.created-initial',\n  create: 'timeline.operation.created',\n  publish: 'timeline.operation.published',\n  editLive: 'timeline.operation.edited-live',\n  editDraft: 'timeline.operation.edited-draft',\n  unpublish: 'timeline.operation.unpublished',\n  discardDraft: 'timeline.operation.draft-discarded',\n  delete: 'timeline.operation.deleted',\n}\n","import {type AvatarSize, AvatarStack} from '@sanity/ui'\nimport {UserAvatar} from 'sanity'\n\ninterface UserAvatarStackProps {\n  maxLength?: number\n  userIds: string[]\n  size?: AvatarSize\n  withTooltip?: boolean\n}\n\nexport function UserAvatarStack({\n  maxLength,\n  userIds,\n  size,\n  withTooltip = true,\n}: UserAvatarStackProps) {\n  return (\n    <AvatarStack maxLength={maxLength} size={size}>\n      {userIds.map((userId) => (\n        <UserAvatar key={userId} user={userId} withTooltip={withTooltip} />\n      ))}\n    </AvatarStack>\n  )\n}\n","import {Box, Card, Flex, Skeleton, Stack, Text} from '@sanity/ui'\n// eslint-disable-next-line camelcase\nimport {getTheme_v2, type ThemeColorAvatarColorKey} from '@sanity/ui/theme'\nimport {type MouseEvent, useCallback, useMemo} from 'react'\nimport {\n  AvatarSkeleton,\n  type ChunkType,\n  type RelativeTimeOptions,\n  useDateTimeFormat,\n  UserAvatar,\n  useRelativeTime,\n  useTranslation,\n  useUser,\n} from 'sanity'\nimport {css, styled} from 'styled-components'\n\nimport {Tooltip} from '../../../../ui-components'\nimport {getTimelineEventIconComponent} from './helpers'\nimport {TIMELINE_ITEM_I18N_KEY_MAPPING} from './timelineI18n'\nimport {UserAvatarStack} from './userAvatarStack'\nimport {type ChunksWithCollapsedDrafts} from './utils'\n\nexport const IconBox = styled(Flex)<{$color: ThemeColorAvatarColorKey}>((props) => {\n  const theme = getTheme_v2(props.theme)\n  const color = props.$color\n\n  return css`\n    --card-icon-color: ${theme.color.avatar[color].fg};\n    background-color: ${theme.color.avatar[color].bg};\n    box-shadow: 0 0 0 1px var(--card-bg-color);\n\n    position: absolute;\n    width: ${theme.avatar.sizes[0].size}px;\n    height: ${theme.avatar.sizes[0].size}px;\n    right: -3px;\n    bottom: -3px;\n    border-radius: 50%;\n  `\n})\n\nconst TIMELINE_ITEM_EVENT_TONE: Record<ChunkType | 'withinSelection', ThemeColorAvatarColorKey> = {\n  initial: 'blue',\n  create: 'blue',\n  publish: 'green',\n  editLive: 'green',\n  editDraft: 'yellow',\n  unpublish: 'orange',\n  discardDraft: 'orange',\n  delete: 'red',\n  withinSelection: 'magenta',\n}\n\nexport interface TimelineItemProps {\n  chunk: ChunksWithCollapsedDrafts\n  isSelected: boolean\n  onSelect: (chunk: ChunksWithCollapsedDrafts) => void\n  collaborators?: Set<string>\n  optionsMenu?: React.ReactNode\n}\n\nconst RELATIVE_TIME_OPTIONS: RelativeTimeOptions = {\n  minimal: true,\n  useTemporalPhrase: true,\n}\n\nconst NameSkeleton = styled(Skeleton)((props) => {\n  const theme = getTheme_v2(props.theme)\n  return css`\n    width: 6ch;\n    height: ${theme.font.text.sizes[0].lineHeight}px;\n  `\n})\n\nconst UserLine = ({userId}: {userId: string}) => {\n  const [user, loading] = useUser(userId)\n\n  return (\n    <Flex key={userId} align=\"center\" gap={2} padding={1}>\n      <Box>{loading || !user ? <AvatarSkeleton animated /> : <UserAvatar user={user} />}</Box>\n      <Box>\n        {loading || !user?.displayName ? (\n          <Text size={1}>\n            <NameSkeleton animated />\n          </Text>\n        ) : (\n          <Text muted size={1}>\n            {user.displayName}\n          </Text>\n        )}\n      </Box>\n    </Flex>\n  )\n}\nconst TooltipContent = ({collaborators}: {collaborators: string[]}) => {\n  const {t} = useTranslation('studio')\n  return (\n    <Stack paddingBottom={1}>\n      <Box padding={1} paddingBottom={2}>\n        <Text size={1} weight=\"medium\">\n          {t('timeline.changes.title')}\n        </Text>\n      </Box>\n      {collaborators.map((userId) => (\n        <UserLine key={userId} userId={userId} />\n      ))}\n    </Stack>\n  )\n}\nexport function TimelineItem({\n  chunk,\n  isSelected,\n  onSelect,\n  collaborators,\n  optionsMenu,\n}: TimelineItemProps) {\n  const {t} = useTranslation('studio')\n  const {type, endTimestamp: timestamp} = chunk\n  const IconComponent = getTimelineEventIconComponent(type)\n  const authorUserIds = Array.from(chunk.authors)\n  const collaboratorsUsersIds = collaborators ? Array.from(collaborators) : []\n  const isSelectable = type !== 'delete'\n  const dateFormat = useDateTimeFormat({dateStyle: 'medium', timeStyle: 'short'})\n  const date = new Date(timestamp)\n\n  const updatedTimeAgo = useRelativeTime(date || '', RELATIVE_TIME_OPTIONS)\n\n  const formattedTimestamp = useMemo(() => {\n    const parsedDate = new Date(timestamp)\n    const formattedDate = dateFormat.format(parsedDate)\n\n    return formattedDate\n  }, [timestamp, dateFormat])\n\n  const handleClick = useCallback(\n    (evt: MouseEvent<HTMLDivElement>) => {\n      evt.preventDefault()\n      evt.stopPropagation()\n\n      if (isSelectable) {\n        onSelect(chunk)\n      }\n    },\n    [onSelect, chunk, isSelectable],\n  )\n\n  return (\n    <Flex align=\"center\" gap={1}>\n      <Card\n        as=\"button\"\n        onClick={handleClick}\n        padding={2}\n        pressed={isSelected}\n        radius={2}\n        data-ui=\"timelineItem\"\n        data-testid=\"timeline-item-button\"\n        data-chunk-id={chunk.id}\n      >\n        <Flex align=\"center\" gap={3}>\n          <div style={{position: 'relative'}}>\n            <UserAvatarStack maxLength={3} userIds={authorUserIds} size={2} />\n            <IconBox align=\"center\" justify=\"center\" $color={TIMELINE_ITEM_EVENT_TONE[type]}>\n              <Text size={0}>{IconComponent && <IconComponent />}</Text>\n            </IconBox>\n          </div>\n          <Stack space={2}>\n            <Text size={1} weight=\"medium\">\n              {t(TIMELINE_ITEM_I18N_KEY_MAPPING[type]) || <code>{type}</code>}\n            </Text>\n\n            <Text as=\"time\" size={1} muted dateTime={timestamp} title={formattedTimestamp}>\n              {updatedTimeAgo}\n            </Text>\n          </Stack>\n\n          {collaboratorsUsersIds.length > 0 && (\n            <Flex flex={1} justify=\"flex-end\" align=\"center\">\n              <Tooltip\n                placement=\"top\"\n                content={<TooltipContent collaborators={collaboratorsUsersIds} />}\n                portal\n              >\n                <Box paddingLeft={2} paddingY={2}>\n                  <UserAvatarStack\n                    maxLength={3}\n                    userIds={collaboratorsUsersIds}\n                    size={0}\n                    withTooltip={false}\n                  />\n                </Box>\n              </Tooltip>\n            </Flex>\n          )}\n        </Flex>\n      </Card>\n      {optionsMenu}\n    </Flex>\n  )\n}\n","import {type Chunk, type ChunkType} from 'sanity'\n\nexport type NonPublishChunk = Omit<Chunk, 'type'> & {\n  type: Exclude<ChunkType, 'publish'>\n  parentId?: string\n}\n\nexport type PublishChunk = Omit<Chunk, 'type'> & {\n  type: 'publish'\n  children: string[]\n  collaborators: Set<string>\n}\n\nexport const isNonPublishChunk = (chunk: Chunk): chunk is NonPublishChunk =>\n  chunk.type !== 'publish'\n\nexport const isPublishChunk = (chunk: Chunk): chunk is PublishChunk => chunk.type === 'publish'\n\n/**\n * searches for the previous publish action in the list of chunks\n * e.g. chunks = [publish, edit, publish, edit, edit] it needs to return the second publish action\n * e.g. chunks = [publish, edit, delete, edit, edit] it returns undefined\n */\n\nfunction getPreviousPublishAction(chunks: Chunk[]) {\n  let previousPublish: PublishChunk | null = null\n  // We need to iterate from the end to the start of the list\n  for (let index = chunks.length - 1; index >= 0; index--) {\n    const chunk = chunks[index]\n    if (isPublishChunk(chunk)) {\n      previousPublish = chunk\n      break\n    }\n    if (chunk.type === 'editDraft') {\n      continue\n    } else break\n  }\n\n  return previousPublish\n}\nexport type ChunksWithCollapsedDrafts = NonPublishChunk | PublishChunk\n\n/**\n * Takes an array of chunks and adds them metadata necessary for the timeline view.\n * for draft chunks, it will add the parentId of the published chunk if this draft action is now published\n * for published, it will add the children array and the collaborators array\n */\nexport function addChunksMetadata(chunks: Chunk[]): ChunksWithCollapsedDrafts[] {\n  const result: ChunksWithCollapsedDrafts[] = []\n\n  for (const chunk of chunks) {\n    if (isPublishChunk(chunk)) {\n      result.push({\n        ...chunk,\n        type: 'publish',\n        children: [],\n        collaborators: new Set(), // Initialize the collaborators array\n      })\n      continue\n    }\n    if (isNonPublishChunk(chunk)) {\n      const previousPublish = getPreviousPublishAction(result)\n      if (chunk.type === 'editDraft' && previousPublish?.type === 'publish') {\n        Array.from(chunk.authors).forEach((id) => {\n          previousPublish.collaborators.add(id)\n        })\n        previousPublish.children.push(chunk.id)\n        result.push({\n          ...chunk,\n          parentId: previousPublish.id,\n        })\n        continue\n      }\n    }\n    if (isNonPublishChunk(chunk)) {\n      result.push(chunk)\n    }\n  }\n\n  return result\n}\n","import {Box, Text} from '@sanity/ui'\nimport {useCallback, useEffect, useMemo, useState} from 'react'\nimport {\n  type Chunk,\n  CommandList,\n  type CommandListRenderItemCallback,\n  LoadingBlock,\n  useTranslation,\n} from 'sanity'\n\nimport {ExpandableTimelineItemButton} from './expandableTimelineItemButton'\nimport {ListWrapper, Root, StackWrapper} from './timeline.styled'\nimport {TimelineItem} from './timelineItem'\nimport {\n  addChunksMetadata,\n  type ChunksWithCollapsedDrafts,\n  isNonPublishChunk,\n  isPublishChunk,\n} from './utils'\n\ninterface TimelineProps {\n  chunks: Chunk[]\n  hasMoreChunks: boolean | null\n  lastChunk?: Chunk | null\n  onLoadMore: () => void\n  onSelect: (chunk: Chunk) => void\n  /**\n   * The list needs a predefined max height for the scroller to work.\n   */\n  listMaxHeight?: string\n}\n\nexport const TIMELINE_LIST_WRAPPER_ID = 'timeline-list-wrapper'\n\nexport const Timeline = ({\n  chunks,\n  hasMoreChunks,\n  lastChunk: selectedChunk,\n  onLoadMore,\n  onSelect,\n  listMaxHeight = 'calc(100vh - 280px)',\n}: TimelineProps) => {\n  const [mounted, setMounted] = useState(false)\n  const {t} = useTranslation('studio')\n  const selectedChunkId = selectedChunk?.id\n  const chunksWithMetadata = useMemo(() => addChunksMetadata(chunks), [chunks])\n\n  const [expandedParents, setExpandedParents] = useState<Set<string>>(() => {\n    if (selectedChunkId) {\n      // If the selected chunk is a draft, we need to expand its parent\n      const selected = chunksWithMetadata.find((chunk) => chunk.id === selectedChunkId)\n      if (selected && isNonPublishChunk(selected) && selected.parentId) {\n        return new Set([selected.parentId])\n      }\n    }\n    return new Set()\n  })\n\n  useEffect(() => {\n    // This effect ensures that when we reload the timeline with a selected draft, we expand its parent.\n    if (selectedChunkId) {\n      const selected = chunksWithMetadata.find((chunk) => chunk.id === selectedChunkId)\n      if (selected && isNonPublishChunk(selected) && selected.parentId) {\n        const parentId = selected.parentId\n        setExpandedParents((prev) => {\n          if (prev.has(parentId)) return prev\n          const next = new Set(prev)\n          next.add(parentId)\n          return next\n        })\n      }\n    }\n  }, [chunksWithMetadata, selectedChunkId])\n\n  const filteredChunks = useMemo(() => {\n    return chunksWithMetadata.filter((chunk) => {\n      if (isPublishChunk(chunk) || !chunk.parentId) return true\n      // If the chunk has a parent id keep it hidden until the parent is expanded.\n      return expandedParents.has(chunk.parentId)\n    })\n  }, [chunksWithMetadata, expandedParents])\n\n  useEffect(() => {\n    // This effect ensures that we load more chunks if the list is not long enough.\n    // This could happen if a parent chunk has multiple drafts, so you could end with a list of 50 transactions but only\n    // 1 parent chunk, the publish, which squashed all the changes.\n    // In that case, users will see the loading block at the bottom, but nothing will really be happening. Because they haven't reach the end of the list.\n    if (filteredChunks.length < 16 && hasMoreChunks) {\n      onLoadMore()\n    }\n  }, [filteredChunks, hasMoreChunks, onLoadMore])\n\n  const handleExpandParent = useCallback(\n    (parentId: string) => () =>\n      setExpandedParents((prev) => {\n        const next = new Set(prev)\n\n        if (prev.has(parentId)) next.delete(parentId)\n        else next.add(parentId)\n\n        return next\n      }),\n    [],\n  )\n\n  const selectedIndex = useMemo(\n    () =>\n      selectedChunkId ? filteredChunks.findIndex((chunk) => chunk.id === selectedChunkId) : -1,\n    [selectedChunkId, filteredChunks],\n  )\n  const handleSelectChunk = useCallback(\n    (chunk: ChunksWithCollapsedDrafts) => {\n      const timelineChunk = chunks.find((c) => c.id === chunk.id)\n      if (timelineChunk) onSelect(timelineChunk)\n      else {\n        console.error('TimelineItem: chunk not found')\n        onSelect(chunk)\n      }\n    },\n    [chunks, onSelect],\n  )\n\n  const renderItem = useCallback<CommandListRenderItemCallback<(typeof filteredChunks)[number]>>(\n    (chunk, {activeIndex}) => {\n      const isFirst = activeIndex === 0\n\n      return (\n        <Box\n          paddingBottom={1}\n          paddingTop={isFirst ? 1 : 0}\n          paddingRight={1}\n          paddingLeft={isNonPublishChunk(chunk) && chunk.parentId ? 4 : 1}\n        >\n          <TimelineItem\n            chunk={chunk}\n            isSelected={selectedChunkId === chunk.id}\n            onSelect={handleSelectChunk}\n            collaborators={isPublishChunk(chunk) ? chunk.collaborators : undefined}\n            optionsMenu={\n              isPublishChunk(chunk) && chunk.children.length > 0 ? (\n                <ExpandableTimelineItemButton\n                  isExpanded={expandedParents.has(chunk.id)}\n                  onExpand={handleExpandParent(chunk.id)}\n                />\n              ) : null\n            }\n          />\n          {activeIndex === filteredChunks.length - 1 && hasMoreChunks && <LoadingBlock />}\n        </Box>\n      )\n    },\n    [\n      expandedParents,\n      filteredChunks.length,\n      handleExpandParent,\n      handleSelectChunk,\n      hasMoreChunks,\n      selectedChunkId,\n    ],\n  )\n\n  useEffect(() => setMounted(true), [])\n\n  return (\n    <Root\n      /**\n       * We delay initial rendering if `selectedIndex` is present.\n       * This is a _temporary_ workaround to allow the virtual <CommandList>\n       * to scroll to a specific index prior to being displayed.\n       *\n       * Without this, there'll be a noticeable 'flash' where the virtual list\n       * will render with its child items at the top and then scroll into position.\n       */\n      $visible={!selectedIndex || mounted}\n      data-ui=\"timeline\"\n    >\n      {filteredChunks.length === 0 && (\n        <StackWrapper padding={3} space={3}>\n          <Text size={1} weight=\"medium\">\n            {t('timeline.error.no-document-history-title')}\n          </Text>\n          <Text muted size={1}>\n            {t('timeline.error.no-document-history-description')}\n          </Text>\n        </StackWrapper>\n      )}\n\n      {filteredChunks.length > 0 && (\n        <ListWrapper direction=\"column\" $maxHeight={listMaxHeight} id={TIMELINE_LIST_WRAPPER_ID}>\n          <CommandList\n            activeItemDataAttr=\"data-hovered\"\n            ariaLabel={t('timeline.list.aria-label')}\n            autoFocus=\"list\"\n            initialIndex={selectedIndex}\n            initialScrollAlign=\"center\"\n            itemHeight={57}\n            items={filteredChunks}\n            onEndReached={onLoadMore}\n            onEndReachedIndexOffset={20}\n            overscan={5}\n            renderItem={renderItem}\n            wrapAround={false}\n          />\n        </ListWrapper>\n      )}\n    </Root>\n  )\n}\n\nTimeline.displayName = 'Timeline'\n","import {ErrorOutlineIcon} from '@sanity/icons'\nimport {Flex, Stack} from '@sanity/ui'\nimport {TextWithTone, useTranslation} from 'sanity'\n\nexport function TimelineError({versionError}: {versionError?: boolean}) {\n  const {t} = useTranslation('studio')\n\n  return (\n    <Flex align=\"flex-start\" gap={3} padding={4}>\n      <TextWithTone tone=\"critical\">\n        <ErrorOutlineIcon />\n      </TextWithTone>\n      <Stack space={4}>\n        <TextWithTone size={1} tone=\"critical\" weight=\"medium\">\n          {versionError\n            ? t('timeline.error.load-document-changes-version-title')\n            : t('timeline.error.load-document-changes-title')}\n        </TextWithTone>\n        <TextWithTone size={1} tone=\"critical\">\n          {versionError\n            ? t('timeline.error.load-document-changes-version-description')\n            : t('timeline.error.load-document-changes-description')}\n        </TextWithTone>\n      </Stack>\n    </Flex>\n  )\n}\n","import {ChevronDownIcon} from '@sanity/icons'\nimport {\n  Flex,\n  type Placement,\n  PortalProvider,\n  useClickOutsideEvent,\n  useGlobalKeyDown,\n  useToast,\n} from '@sanity/ui'\nimport {useCallback, useMemo, useState} from 'react'\nimport {type Chunk, useTimelineSelector, useTranslation} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Button, Popover} from '../../../../ui-components'\nimport {useDocumentPane} from '../useDocumentPane'\nimport {Timeline} from './timeline'\nimport {TimelineError} from './TimelineError'\nimport {TIMELINE_ITEM_I18N_KEY_MAPPING} from './timelineI18n'\n\ninterface TimelineMenuProps {\n  chunk: Chunk | null\n  mode: 'rev' | 'since'\n  placement?: Placement\n}\n\nconst Root = styled(Popover)`\n  overflow: hidden;\n  overflow: clip;\n`\n\nexport const TIMELINE_MENU_PORTAL = 'timeline-menu'\n\nexport function TimelineMenu({chunk, mode, placement}: TimelineMenuProps) {\n  const {setTimelineRange, timelineError, ready, timelineStore} = useDocumentPane()\n  const [open, setOpen] = useState(false)\n  const [button, setButton] = useState<HTMLButtonElement | null>(null)\n  const [popoverRef, setPopoverRef] = useState<HTMLElement | null>(null)\n\n  const toast = useToast()\n\n  const chunks = useTimelineSelector(timelineStore, (state) => state.chunks)\n  const loading = useTimelineSelector(timelineStore, (state) => state.isLoading)\n  const hasMoreChunks = useTimelineSelector(timelineStore, (state) => state.hasMoreChunks)\n  const realRevChunk = useTimelineSelector(timelineStore, (state) => state.realRevChunk)\n  const sinceTime = useTimelineSelector(timelineStore, (state) => state.sinceTime)\n\n  const {t} = useTranslation('studio')\n\n  const handleOpen = useCallback(() => {\n    setOpen(true)\n  }, [])\n\n  const handleClose = useCallback(() => {\n    setOpen(false)\n  }, [])\n\n  const handleGlobalKeyDown = useCallback(\n    (event: KeyboardEvent) => {\n      if (open && (event.key === 'Escape' || event.key === 'Tab')) {\n        handleClose()\n        button?.focus()\n      }\n    },\n    [button, handleClose, open],\n  )\n\n  useGlobalKeyDown(handleGlobalKeyDown)\n  useClickOutsideEvent(open && handleClose, () => [button, popoverRef])\n\n  const selectRev = useCallback(\n    (revChunk: Chunk) => {\n      try {\n        const [sinceId, revId] = timelineStore?.findRangeForRev(revChunk) || [null, null]\n        setTimelineRange(sinceId, revId)\n      } catch (err) {\n        toast.push({\n          closable: true,\n          description: err.message,\n          status: 'error',\n          title: t('timeline.error.unable-to-load-revision'),\n        })\n      }\n    },\n    [setTimelineRange, t, timelineStore, toast],\n  )\n\n  const selectSince = useCallback(\n    (sinceChunk: Chunk) => {\n      try {\n        const [sinceId, revId] = timelineStore?.findRangeForSince(sinceChunk) || [null, null]\n        setTimelineRange(sinceId, revId)\n      } catch (err) {\n        toast.push({\n          closable: true,\n          description: err.message,\n          status: 'error',\n          title: t('timeline.error.unable-to-load-revision'),\n        })\n      }\n    },\n    [setTimelineRange, t, timelineStore, toast],\n  )\n\n  const handleLoadMore = useCallback(() => {\n    if (!loading) {\n      timelineStore?.loadMore()\n    }\n  }, [loading, timelineStore])\n\n  const content = useMemo(() => {\n    if (timelineError) return <TimelineError />\n\n    if (mode === 'rev') {\n      return (\n        <Timeline\n          chunks={chunks}\n          hasMoreChunks={hasMoreChunks}\n          lastChunk={realRevChunk}\n          onLoadMore={handleLoadMore}\n          onSelect={selectRev}\n        />\n      )\n    }\n\n    const filteredChunks = realRevChunk\n      ? chunks.filter((c) => c.index < realRevChunk.index)\n      : chunks\n    return (\n      <Timeline\n        chunks={filteredChunks}\n        hasMoreChunks={hasMoreChunks}\n        lastChunk={sinceTime}\n        onLoadMore={handleLoadMore}\n        onSelect={selectSince}\n      />\n    )\n  }, [\n    chunks,\n    handleLoadMore,\n    hasMoreChunks,\n    mode,\n    realRevChunk,\n    selectRev,\n    selectSince,\n    sinceTime,\n    timelineError,\n  ])\n\n  const formatParams = {\n    timestamp: {dateStyle: 'medium', timeStyle: 'short'},\n  }\n\n  const revLabel = chunk\n    ? t(TIMELINE_ITEM_I18N_KEY_MAPPING[chunk.type], {\n        context: 'timestamp',\n        timestamp: new Date(chunk?.endTimestamp),\n        formatParams,\n      })\n    : t('timeline.latest-revision')\n\n  const sinceLabel = chunk\n    ? t('timeline.since', {\n        timestamp: new Date(chunk?.endTimestamp),\n        formatParams,\n      })\n    : t('timeline.since-version-missing')\n\n  const buttonLabel = mode === 'rev' ? revLabel : sinceLabel\n  const portalElements = useMemo(() => ({[TIMELINE_MENU_PORTAL]: popoverRef}), [popoverRef])\n\n  return (\n    <PortalProvider __unstable_elements={portalElements}>\n      <Root\n        data-testid=\"timeline-menu\"\n        constrainSize\n        content={open && content}\n        data-ui=\"versionMenu\"\n        open={open}\n        placement={placement}\n        matchReferenceWidth\n        portal\n        ref={setPopoverRef}\n      >\n        <Flex width={'fill'}>\n          <Button\n            data-testid={open ? 'timeline-menu-close-button' : 'timeline-menu-open-button'}\n            disabled={!ready}\n            mode=\"ghost\"\n            onClick={open ? handleClose : handleOpen}\n            ref={setButton}\n            selected={open}\n            width=\"fill\"\n            tooltipProps={null}\n            justify={'space-between'}\n            style={{\n              maxWidth: '100%',\n            }}\n            iconRight={ChevronDownIcon}\n            text={ready ? buttonLabel : t('timeline.loading-history')}\n          />\n        </Flex>\n      </Root>\n    </PortalProvider>\n  )\n}\n","import {motion} from 'framer-motion'\nimport {type ComponentProps} from 'react'\nimport {keyframes, styled} from 'styled-components'\n\nconst StyledMotionPath = styled(motion.path)`\n  transform-origin: center;\n`\n\ntype MotionCircleProps = Omit<ComponentProps<typeof motion.circle>, 'd'>\ntype MotionPathProps = Omit<ComponentProps<typeof motion.path>, 'd' | 'ref'>\n\nconst Circle = (props: MotionCircleProps) => (\n  <motion.circle fill=\"none\" r=\"8\" cx=\"12.5\" cy=\"12.5\" strokeWidth=\"1.2\" {...props} />\n)\nconst Arrows = (props: MotionPathProps) => (\n  <StyledMotionPath\n    fill=\"none\"\n    d=\"M14 17.5619L11.5 20.5L14.5 23.0619M11 7.43811L13.5 4.50001L10.5 1.93811\"\n    {...props}\n  />\n)\nconst Checkmark = (props: MotionPathProps) => (\n  <motion.path d=\"M9.5 12.1316L11.7414 14.5L16 10\" {...props} />\n)\n\nconst rotateAnimation = keyframes`\n  0% {\n    transform: rotate(0);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n`\nconst RotateGroup = styled.g`\n  transform-origin: center;\n\n  &[data-rotate] {\n    animation: ${rotateAnimation} 1s ease-in-out infinite;\n  }\n`\n\nconst root = {\n  syncing: {\n    scale: 1,\n    transition: {\n      duration: 0,\n    },\n  },\n  saved: {\n    scale: [1, 0.8, 1.2, 0.9, 1.1, 0.95, 1.05, 0.99, 1],\n    transition: {\n      duration: 0.5,\n      delay: 0.2,\n    },\n  },\n  changes: {transition: {duration: 0}},\n}\n\nconst circle = {\n  syncing: {\n    strokeDasharray: '0, 0, 23, 3, 23, 3',\n    strokeDashoffset: 10,\n    opacity: 1,\n    transition: {\n      duration: 0,\n    },\n  },\n  saved: {\n    strokeDasharray: '0, 0, 23, 0, 23, 0',\n    strokeDashoffset: 10,\n    opacity: 1,\n    transition: {\n      duration: 0.2,\n    },\n  },\n  changes: {\n    strokeDasharray: '0, 60, 23, 0, 23, 0',\n    strokeDashoffset: 0,\n    opacity: 0,\n    transition: {\n      duration: 0.5,\n    },\n  },\n}\n\nconst arrows = {\n  syncing: {\n    opacity: 1,\n    transition: {\n      duration: 0,\n    },\n  },\n  saved: {\n    opacity: 0,\n    transition: {\n      duration: 0.2,\n    },\n  },\n  changes: {\n    opacity: 0,\n  },\n}\n\nconst checkmark = {\n  syncing: {\n    pathLength: 0,\n    transition: {duration: 0},\n  },\n  saved: {\n    pathLength: 1,\n    transition: {\n      delay: 0.4,\n      duration: 0.3,\n    },\n  },\n  changes: {\n    pathLength: 0,\n    transition: {\n      duration: 0.2,\n    },\n  },\n}\n\ninterface AnimatedStatusIconProps {\n  status?: 'changes' | 'saved' | 'syncing'\n}\n\nexport function AnimatedStatusIcon(props: AnimatedStatusIconProps) {\n  const {status} = props\n\n  if (!status) {\n    return null\n  }\n\n  return (\n    <svg\n      width=\"1em\"\n      height=\"1em\"\n      viewBox=\"0 0 25 25\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth=\"1.2\"\n      data-sanity-icon=\"animated-status-icon\"\n    >\n      <motion.g variants={root} initial={status} animate={status}>\n        <RotateGroup data-rotate={status === 'changes' ? undefined : ''}>\n          <Arrows variants={arrows} initial={status} animate={status} />\n          <Circle variants={circle} initial={status} animate={status} />\n        </RotateGroup>\n        <Checkmark variants={checkmark} initial={status} animate={status} />\n      </motion.g>\n    </svg>\n  )\n}\n","import {type ButtonTone, Flex, Text} from '@sanity/ui'\nimport {TextWithTone, useTranslation} from 'sanity'\n\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {AnimatedStatusIcon} from './AnimatedStatusIcon'\n\ntype StatusType = 'saved' | 'syncing'\ninterface ReviewChangesButtonProps {\n  status?: StatusType\n}\n\nconst STATUS_DICTIONARY: Record<StatusType, {i18nKey: string; tone: ButtonTone}> = {\n  saved: {\n    i18nKey: 'status-bar.document-status-pulse.status.saved.text',\n    tone: 'positive',\n  },\n  syncing: {\n    i18nKey: 'status-bar.document-status-pulse.status.syncing.text',\n    tone: 'default',\n  },\n}\n\nexport const DocumentStatusPulse = (props: ReviewChangesButtonProps) => {\n  const {status} = props\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  if (status !== 'saved' && status !== 'syncing') {\n    return null\n  }\n\n  const currentStatus = STATUS_DICTIONARY[status]\n\n  return (\n    <Flex align=\"center\" gap={2} data-testid=\"pane-footer-document-status-pulse\">\n      <TextWithTone size={1} tone={currentStatus.tone}>\n        <AnimatedStatusIcon status={status} />\n      </TextWithTone>\n\n      <Text muted size={1}>\n        {t(currentStatus.i18nKey)}\n      </Text>\n    </Flex>\n  )\n}\n","import {\n  Box,\n  // eslint-disable-next-line no-restricted-imports\n  Button,\n  Flex,\n  Skeleton,\n  Text,\n} from '@sanity/ui'\nimport {AnimatePresence, motion} from 'framer-motion'\nimport {useEffect, useLayoutEffect, useMemo, useState} from 'react'\nimport {\n  AvatarSkeleton,\n  isPublishedPerspective,\n  TIMELINE_ITEM_I18N_KEY_MAPPING,\n  useEvents,\n  usePerspective,\n  UserAvatar,\n  useRelativeTime,\n  useSource,\n  useSyncState,\n  useTimelineSelector,\n  useTranslation,\n} from 'sanity'\n\nimport {HISTORY_INSPECTOR_NAME} from '../constants'\nimport {TIMELINE_ITEM_I18N_KEY_MAPPING as TIMELINE_ITEM_I18N_KEY_MAPPING_LEGACY} from '../timeline'\nimport {useDocumentPane} from '../useDocumentPane'\nimport {DocumentStatusPulse} from './DocumentStatusPulse'\n\nconst RELATIVE_TIME_OPTIONS = {\n  minimal: true,\n  useTemporalPhrase: true,\n} as const\n\nconst MotionButton = motion.create(Button)\nconst MotionBox = motion.create(Box)\n\nconst ButtonSkeleton = () => {\n  return (\n    <Flex align=\"center\" gap={3} paddingLeft={1} paddingRight={2} paddingY={2}>\n      <div style={{margin: -5}}>\n        <AvatarSkeleton $size={0} animated />\n      </div>\n      <Skeleton animated style={{width: '80px', height: '15px'}} radius={2} />\n    </Flex>\n  )\n}\n\nconst DocumentStatusButton = ({\n  author,\n  translationKey,\n  timestamp = '',\n}: {\n  author: string\n  translationKey: string\n  timestamp?: string\n}) => {\n  const {onHistoryOpen, inspector, onHistoryClose} = useDocumentPane()\n  const {t} = useTranslation()\n  const relativeTime = useRelativeTime(timestamp, RELATIVE_TIME_OPTIONS)\n\n  return (\n    <MotionButton\n      data-testid=\"pane-footer-document-status\"\n      animate={{opacity: 1}}\n      initial={{opacity: 0}}\n      exit={{opacity: 0}}\n      mode=\"bleed\"\n      onClick={inspector?.name === HISTORY_INSPECTOR_NAME ? onHistoryClose : onHistoryOpen}\n      padding={2}\n      muted\n    >\n      <Flex align=\"center\" flex=\"none\" gap={3}>\n        {author && (\n          <div style={{margin: -5}}>\n            <UserAvatar user={author} size={0} />\n          </div>\n        )}\n        <Text muted size={1}>\n          {t(translationKey)} {relativeTime}\n        </Text>\n      </Flex>\n    </MotionButton>\n  )\n}\n\nconst FallbackStatus = () => {\n  const {editState} = useDocumentPane()\n  const {selectedPerspective} = usePerspective()\n\n  const status = useMemo(() => {\n    if (isPublishedPerspective(selectedPerspective) && editState?.published?._updatedAt) {\n      return {\n        translationKey: TIMELINE_ITEM_I18N_KEY_MAPPING.published.createDocumentVersion,\n        timestamp: editState.published._updatedAt,\n      }\n    }\n    if (editState?.version?._updatedAt) {\n      return {\n        translationKey:\n          editState?.version?._updatedAt === editState?.version?._createdAt\n            ? TIMELINE_ITEM_I18N_KEY_MAPPING.version.createDocumentVersion\n            : TIMELINE_ITEM_I18N_KEY_MAPPING.version.editDocumentVersion,\n        timestamp: editState.version._updatedAt,\n      }\n    }\n    if (editState?.draft?._updatedAt) {\n      return {\n        translationKey:\n          editState?.draft?._updatedAt === editState?.draft?._createdAt\n            ? TIMELINE_ITEM_I18N_KEY_MAPPING.draft.createDocumentVersion\n            : TIMELINE_ITEM_I18N_KEY_MAPPING.draft.editDocumentVersion,\n        timestamp: editState.draft._updatedAt,\n      }\n    }\n    return null\n  }, [\n    selectedPerspective,\n    editState?.published?._updatedAt,\n    editState?.version?._updatedAt,\n    editState?.version?._createdAt,\n    editState?.draft?._updatedAt,\n    editState?.draft?._createdAt,\n  ])\n  if (!status) {\n    return null\n  }\n  return (\n    <DocumentStatusButton\n      author=\"\"\n      translationKey={status.translationKey}\n      timestamp={status.timestamp}\n    />\n  )\n}\n\nconst EventsStatus = () => {\n  const {events, loading} = useEvents()\n  const event = events?.[0]\n\n  if (!event && loading) {\n    return <ButtonSkeleton />\n  }\n  if (!event) {\n    return <FallbackStatus />\n  }\n\n  return (\n    <DocumentStatusButton\n      author={event.author}\n      translationKey={TIMELINE_ITEM_I18N_KEY_MAPPING[event.documentVariantType][event.type]}\n      timestamp={event.timestamp}\n    />\n  )\n}\n\nconst TimelineStatus = () => {\n  const {timelineStore} = useDocumentPane()\n  const chunks = useTimelineSelector(timelineStore, (state) => state.chunks)\n  const loading = useTimelineSelector(timelineStore, (state) => state.isLoading)\n  const event = chunks?.[0]\n\n  if (!event && loading) {\n    return <ButtonSkeleton />\n  }\n  if (!event) {\n    return <FallbackStatus />\n  }\n\n  const author = Array.from(event.authors)[0]\n  return (\n    <DocumentStatusButton\n      author={author}\n      translationKey={TIMELINE_ITEM_I18N_KEY_MAPPING_LEGACY[event.type]}\n      timestamp={event.endTimestamp}\n    />\n  )\n}\n\nconst SYNCING_TIMEOUT = 1000\nconst SAVED_TIMEOUT = 3000\n\nexport function DocumentStatusLine() {\n  const {documentId, documentType, editState, value} = useDocumentPane()\n  const [status, setStatus] = useState<'saved' | 'syncing' | null>(null)\n  const source = useSource()\n  const eventsEnabled = source.beta?.eventsAPI?.documents\n\n  const syncState = useSyncState(documentId, documentType, editState?.release)\n\n  const lastUpdated = value?._updatedAt\n\n  // eslint-disable-next-line consistent-return\n  useEffect(() => {\n    // Schedule an update to set the status to 'saved' when status changed to 'syncing.\n    // We use `syncState.isSyncing` here to avoid the status being set to 'saved' when the document is syncing.\n    if (status === 'syncing' && !syncState.isSyncing) {\n      const timerId = setTimeout(() => setStatus('saved'), SYNCING_TIMEOUT)\n      return () => clearTimeout(timerId)\n    }\n    // Schedule an update to clear the status when status changed to 'saved'\n    if (status === 'saved') {\n      const timerId = setTimeout(() => setStatus(null), SAVED_TIMEOUT)\n      return () => clearTimeout(timerId)\n    }\n  }, [status, lastUpdated, syncState.isSyncing])\n\n  // Clear the status when documentId changes to make sure we don't show the wrong status when opening a new document\n  useLayoutEffect(() => {\n    setStatus(null)\n  }, [documentId])\n\n  // Set status to 'syncing' when lastUpdated changes and we go from not syncing to syncing\n  useLayoutEffect(() => {\n    if (syncState.isSyncing) {\n      setStatus('syncing')\n    }\n  }, [syncState.isSyncing, lastUpdated])\n\n  return (\n    <AnimatePresence>\n      {status ? (\n        <MotionBox\n          paddingLeft={2}\n          animate={{opacity: 1}}\n          initial={{opacity: 0}}\n          exit={{opacity: 0}}\n        >\n          <DocumentStatusPulse status={status || undefined} />\n        </MotionBox>\n      ) : (\n        <>{eventsEnabled ? <EventsStatus /> : <TimelineStatus />}</>\n      )}\n    </AnimatePresence>\n  )\n}\n","import {RestoreIcon} from '@sanity/icons'\nimport {Box, Flex, Text} from '@sanity/ui'\nimport {format} from 'date-fns'\nimport {Translate, useTranslation} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {useDocumentPane} from '../useDocumentPane'\n\nexport const StatusText = styled(Text)`\n  color: var(--card-muted-fg-color);\n\n  em {\n    color: var(--card-fg-color);\n    font-weight: 500;\n    font-style: normal;\n  }\n`\n\nexport function RevisionStatusLine(): React.JSX.Element {\n  const {displayed, revisionNotFound} = useDocumentPane()\n  const {t} = useTranslation()\n  const date = displayed?._updatedAt || displayed?._createdAt\n\n  const message = {\n    name: 'revision',\n    text: date ? (\n      <Translate\n        t={t}\n        i18nKey=\"document-status.revision-from\"\n        values={{\n          date: format(new Date(date), `MMM d, yyyy '@' pp`),\n        }}\n      />\n    ) : null,\n    tone: 'caution',\n  }\n\n  return (\n    <>\n      <Flex flex={1} gap={3} padding={2}>\n        <Box flex=\"none\">\n          <Text size={1}>\n            <RestoreIcon />\n          </Text>\n        </Box>\n        <Box flex={1}>\n          <StatusText size={1} textOverflow=\"ellipsis\">\n            {revisionNotFound ? (\n              <Translate t={t} i18nKey=\"document-status.revision-not-found\" />\n            ) : (\n              message.text\n            )}\n          </StatusText>\n        </Box>\n      </Flex>\n    </>\n  )\n}\n","import {useLayoutEffect} from 'react'\nimport {resizeObserver} from 'sanity'\n\nexport function useResizeObserver({\n  element,\n  onResize,\n}: {\n  element?: HTMLDivElement | null\n  onResize: (event: ResizeObserverEntry) => void\n}): void {\n  useLayoutEffect(() => {\n    if (element) {\n      resizeObserver.observe(element, onResize)\n    }\n\n    return () => {\n      if (element) {\n        resizeObserver.unobserve(element)\n      }\n    }\n  }, [element, onResize])\n}\n","import {Card, Flex} from '@sanity/ui'\nimport {motion} from 'framer-motion'\nimport {type Ref, useCallback, useMemo, useState} from 'react'\nimport {\n  type CreateLinkMetadata,\n  isPublishedPerspective,\n  isReleaseDocument,\n  isSanityCreateLinked,\n  usePerspective,\n  useSanityCreateConfig,\n} from 'sanity'\n\nimport {usePaneRouter} from '../../../components'\nimport {SpacerButton} from '../../../components/spacerButton'\nimport {DOCUMENT_PANEL_PORTAL_ELEMENT} from '../../../constants'\nimport {EMPTY_PARAMS} from '../constants'\nimport {useDocumentPane} from '../useDocumentPane'\nimport {useDocumentTitle} from '../useDocumentTitle'\nimport {DocumentBadges} from './DocumentBadges'\nimport {DocumentStatusBarActions, HistoryStatusBarActions} from './DocumentStatusBarActions'\nimport {DocumentStatusLine} from './DocumentStatusLine'\nimport {RevisionStatusLine} from './RevisionStatusLine'\nimport {useResizeObserver} from './useResizeObserver'\n\nexport interface DocumentStatusBarProps {\n  actionsBoxRef?: Ref<HTMLDivElement>\n  createLinkMetadata?: CreateLinkMetadata\n}\n\nconst CONTAINER_BREAKPOINT = 480 // px\n\nconst AnimatedCard = motion.create(Card)\n\nexport function DocumentStatusBar(props: DocumentStatusBarProps) {\n  const {actionsBoxRef, createLinkMetadata} = props\n  const {editState, onChange: onDocumentChange, revisionNotFound} = useDocumentPane()\n  const {params = EMPTY_PARAMS} = usePaneRouter()\n  const {selectedPerspective} = usePerspective()\n  const {title} = useDocumentTitle()\n\n  const CreateLinkedActions = useSanityCreateConfig().components?.documentLinkedActions\n\n  const showingRevision = Boolean(params.rev)\n  const [collapsed, setCollapsed] = useState<boolean | null>(null)\n  const [rootElement, setRootElement] = useState<HTMLDivElement | null>(null)\n\n  const handleResize = useCallback((event: ResizeObserverEntry) => {\n    setCollapsed(event.contentRect.width < CONTAINER_BREAKPOINT)\n  }, [])\n\n  useResizeObserver({element: rootElement, onResize: handleResize})\n\n  const shouldRender = useMemo(() => {\n    const isReady = Boolean(editState?.ready && typeof collapsed === 'boolean')\n    if (selectedPerspective) {\n      if (isPublishedPerspective(selectedPerspective)) {\n        return isReady && Boolean(editState?.published)\n      }\n      if (isReleaseDocument(selectedPerspective)) {\n        return isReady && Boolean(editState?.version)\n      }\n    }\n    return isReady\n  }, [collapsed, editState?.published, editState?.ready, editState?.version, selectedPerspective])\n\n  let actions: React.JSX.Element | null = null\n  if (createLinkMetadata && isSanityCreateLinked(createLinkMetadata) && CreateLinkedActions) {\n    actions = (\n      <CreateLinkedActions\n        metadata={createLinkMetadata}\n        panelPortalElementId={DOCUMENT_PANEL_PORTAL_ELEMENT}\n        onDocumentChange={onDocumentChange}\n        documentTitle={title}\n      />\n    )\n  } else if (showingRevision) {\n    actions = <HistoryStatusBarActions />\n  } else {\n    actions = <DocumentStatusBarActions />\n  }\n\n  if (showingRevision && revisionNotFound) {\n    return null\n  }\n\n  return (\n    <AnimatedCard\n      key={showingRevision ? 'revision' : 'published'}\n      initial={{opacity: 0.2}}\n      animate={{opacity: 1, transition: {duration: 0.3}}}\n      tone={showingRevision ? 'caution' : undefined}\n      radius={3}\n      ref={setRootElement}\n      sizing=\"border\"\n      padding={2}\n    >\n      {shouldRender && (\n        <Flex\n          align=\"stretch\"\n          gap={1}\n          justify=\"space-between\"\n          paddingLeft={showingRevision ? 0 : 1}\n          paddingRight={showingRevision ? 0 : 1}\n        >\n          <Flex align=\"center\" flex={1} gap={collapsed ? 2 : 3} wrap=\"wrap\" paddingRight={3}>\n            <Flex align=\"center\">\n              {showingRevision ? <RevisionStatusLine /> : <DocumentStatusLine />}\n              <SpacerButton />\n            </Flex>\n            <DocumentBadges />\n          </Flex>\n\n          <Flex\n            align=\"flex-start\"\n            justify=\"flex-end\"\n            ref={actionsBoxRef}\n            style={{flexShrink: 0, marginLeft: 'auto'}}\n          >\n            <SpacerButton />\n            {actions}\n          </Flex>\n        </Flex>\n      )}\n    </AnimatedCard>\n  )\n}\n","import {isHotkey} from 'is-hotkey-esm'\nimport {\n  type ElementType,\n  type HTMLProps,\n  memo,\n  type Ref,\n  useCallback,\n  useMemo,\n  useState,\n} from 'react'\nimport {type DocumentActionDescription, type DocumentActionProps, LegacyLayerProvider} from 'sanity'\n\nimport {RenderActionCollectionState} from '../../../components'\nimport {ActionStateDialog} from '../statusBar'\nimport {useDocumentPane} from '../useDocumentPane'\n\nexport interface KeyboardShortcutResponderProps {\n  actionsBoxElement: HTMLElement | null\n  activeIndex: number\n  as?: ElementType\n  currentMinWidth?: number\n  flex?: number\n  id: string\n  minWidth?: number\n  onActionStart: (index: number) => void\n  rootRef: Ref<HTMLDivElement>\n  states: DocumentActionDescription[]\n}\n\nconst KeyboardShortcutResponder = memo(function KeyboardShortcutResponder(\n  props: KeyboardShortcutResponderProps & Omit<HTMLProps<HTMLDivElement>, 'as' | 'height'>,\n) {\n  const {\n    actionsBoxElement,\n    activeIndex,\n    as: As = 'div',\n    children,\n    id,\n    onActionStart,\n    onKeyDown,\n    rootRef,\n    states,\n    ...rest\n  } = props\n\n  const activeAction = states[activeIndex]\n\n  const handleKeyDown = useCallback(\n    (event: any) => {\n      const matchingStates = states.filter(\n        (state) => state.shortcut && isHotkey(state.shortcut, event),\n      )\n\n      const matchingState = matchingStates[0]\n\n      if (matchingStates.length > 1) {\n        console.warn(\n          `Keyboard shortcut conflict: More than one document action matches the shortcut \"${matchingState.shortcut}\"`,\n        )\n      }\n\n      if (matchingState && !matchingState.disabled && matchingState.onHandle) {\n        event.preventDefault()\n        matchingState.onHandle()\n        onActionStart(states.indexOf(matchingState))\n        return\n      }\n\n      if (onKeyDown) {\n        onKeyDown(event)\n      }\n    },\n    [onActionStart, onKeyDown, states],\n  )\n\n  return (\n    <As id={id} onKeyDown={handleKeyDown} tabIndex={-1} {...rest} ref={rootRef}>\n      {children}\n      {activeAction && activeAction.dialog && (\n        <LegacyLayerProvider zOffset=\"paneFooter\">\n          <ActionStateDialog dialog={activeAction.dialog} referenceElement={actionsBoxElement} />\n        </LegacyLayerProvider>\n      )}\n    </As>\n  )\n})\n\nexport interface DocumentActionShortcutsProps {\n  actionsBoxElement: HTMLElement | null\n  as?: ElementType\n  currentMinWidth?: number\n  debug?: boolean\n  flex: number\n  id: string\n  minWidth: number\n  rootRef: Ref<HTMLDivElement>\n}\n\nexport const DocumentActionShortcuts = memo(\n  (props: DocumentActionShortcutsProps & Omit<HTMLProps<HTMLDivElement>, 'as'>) => {\n    const {actionsBoxElement, as = 'div', children, ...rest} = props\n    const {actions, editState, isInitialValueLoading, revisionId} = useDocumentPane()\n    const [activeIndex, setActiveIndex] = useState(-1)\n\n    const onActionStart = useCallback((idx: number) => {\n      setActiveIndex(idx)\n    }, [])\n\n    const actionProps: DocumentActionProps | null = useMemo(\n      () =>\n        editState && {\n          ...editState,\n\n          // @todo: what to call here?\n          onComplete: () => undefined,\n\n          revision: revisionId || undefined,\n          initialValueResolved: !isInitialValueLoading,\n        },\n      [editState, isInitialValueLoading, revisionId],\n    )\n\n    const renderDocumentActionShortcuts = useCallback<\n      (props: {states: DocumentActionDescription[]}) => React.ReactNode\n    >(\n      ({states}) => (\n        <KeyboardShortcutResponder\n          {...rest}\n          activeIndex={activeIndex}\n          actionsBoxElement={actionsBoxElement}\n          as={as}\n          onActionStart={onActionStart}\n          states={states}\n        >\n          {children}\n        </KeyboardShortcutResponder>\n      ),\n      [actionsBoxElement, activeIndex, as, children, onActionStart, rest],\n    )\n\n    if (!actionProps || !actions) return null\n\n    return (\n      <RenderActionCollectionState actionProps={actionProps} actions={actions}>\n        {renderDocumentActionShortcuts}\n      </RenderActionCollectionState>\n    )\n  },\n)\n\nDocumentActionShortcuts.displayName = 'Memo(DocumentActionShortcuts)'\n","import {EarthAmericasIcon, JsonIcon, LinkIcon, TransferIcon} from '@sanity/icons'\nimport {type DocumentInspector, type DocumentInspectorMenuItem, type TFunction} from 'sanity'\n\nimport {type DocumentIdStack} from '../../hooks/useDocumentIdStack'\nimport {type PaneMenuItem, type StructureToolFeatures} from '../../types'\nimport {INSPECT_ACTION_PREFIX} from './constants'\n\ninterface GetMenuItemsParams {\n  currentInspector?: DocumentInspector\n  features: StructureToolFeatures\n  hasValue: boolean\n  inspectors: DocumentInspector[]\n  previewUrl?: string | null\n  documentIdStack?: DocumentIdStack\n  inspectorMenuItems: DocumentInspectorMenuItem[]\n  t: TFunction\n}\n\nfunction getInspectorItems({\n  currentInspector,\n  hasValue,\n  inspectors,\n  inspectorMenuItems,\n}: GetMenuItemsParams): PaneMenuItem[] {\n  return inspectors\n    .map((inspector, index) => {\n      const menuItem = inspectorMenuItems[index]\n\n      if (!menuItem || menuItem.hidden) return null\n\n      return {\n        action: `${INSPECT_ACTION_PREFIX}${inspector.name}`,\n        group: menuItem.showAsAction ? undefined : 'inspectors',\n        icon: menuItem.icon,\n        disabled: !hasValue,\n        selected: currentInspector?.name === inspector.name,\n        shortcut: menuItem.hotkeys?.join('+'),\n        showAsAction: menuItem.showAsAction,\n        title: menuItem.title,\n        tone: menuItem.tone,\n      }\n    })\n    .filter(Boolean) as PaneMenuItem[]\n}\n\nfunction getInspectItem({hasValue, t}: GetMenuItemsParams): PaneMenuItem {\n  return {\n    action: 'inspect',\n    group: 'inspectors',\n    title: t('document-inspector.menu-item.title'),\n    icon: JsonIcon,\n    disabled: !hasValue,\n    shortcut: 'Ctrl+Alt+I',\n  }\n}\n\nfunction getCompareVersionsItem({documentIdStack, t}: GetMenuItemsParams): PaneMenuItem | null {\n  const disabled = typeof documentIdStack?.previousId === 'undefined' && {\n    reason: t('compare-versions.menu-item.disabled-reason'),\n  }\n\n  return {\n    action: 'compareVersions',\n    group: 'inspectors',\n    title: t('compare-versions.menu-item.title'),\n    icon: TransferIcon,\n    disabled,\n  }\n}\n\nexport function getProductionPreviewItem({previewUrl, t}: GetMenuItemsParams): PaneMenuItem | null {\n  if (!previewUrl) return null\n\n  return {\n    action: 'production-preview',\n    group: 'links',\n    title: t('production-preview.menu-item.title'),\n    icon: EarthAmericasIcon,\n    shortcut: 'Ctrl+Alt+O',\n  }\n}\n\nexport function getMenuItems(params: GetMenuItemsParams): PaneMenuItem[] {\n  const inspectorItems = getInspectorItems(params)\n  const items = [\n    // Get production preview item\n    getProductionPreviewItem(params),\n    getCompareVersionsItem(params),\n  ].filter(Boolean) as PaneMenuItem[]\n\n  return [\n    // Always present document menu item to copy current url to clipboard\n    {\n      action: 'copy-document-url',\n      showAsAction: true,\n      title: params.t('action.copy-document-url.label'),\n      icon: LinkIcon,\n    },\n    ...inspectorItems,\n\n    // TODO: convert to inspector or document view?\n    getInspectItem(params),\n\n    ...items,\n  ]\n}\n","import {Card, Code, Stack, Text} from '@sanity/ui'\nimport {isDev, Translate, useTranslation} from 'sanity'\n\nimport {ErrorPane} from '../../error'\n\ninterface DocumentLayoutErrorProps {\n  currentMinWidth?: number\n  documentType?: string\n  minWidth?: number\n  paneKey: string\n  value?: Record<string, unknown>\n}\n\nexport function DocumentLayoutError(props: DocumentLayoutErrorProps) {\n  const {documentType, value, currentMinWidth, paneKey, minWidth} = props\n  const {t} = useTranslation()\n\n  return (\n    <ErrorPane\n      currentMinWidth={currentMinWidth}\n      flex={2.5}\n      minWidth={minWidth}\n      paneKey={paneKey}\n      title={\n        <Translate\n          t={t}\n          i18nKey=\"panes.document-pane.document-unknown-type.title\"\n          values={{documentType}}\n        />\n      }\n      tone=\"caution\"\n    >\n      <Stack space={4}>\n        {documentType && (\n          <Text as=\"p\">\n            <Translate\n              t={t}\n              i18nKey=\"panes.document-pane.document-unknown-type.text\"\n              values={{documentType}}\n            />\n          </Text>\n        )}\n\n        {!documentType && (\n          <Text as=\"p\">{t('panes.document-pane.document-unknown-type.without-schema.text')}</Text>\n        )}\n\n        {isDev && value && (\n          /* eslint-disable i18next/no-literal-string */\n          <>\n            <Text as=\"p\">Here is the JSON representation of the document:</Text>\n\n            <Card padding={3} overflow=\"auto\" radius={2} shadow={1} tone=\"inherit\">\n              <Code language=\"json\" size={[1, 1, 2]}>\n                {JSON.stringify(value, null, 2)}\n              </Code>\n            </Card>\n          </>\n          /* eslint-enable i18next/no-literal-string */\n        )}\n      </Stack>\n    </ErrorPane>\n  )\n}\n","import {DialogProvider, type DialogProviderProps, PortalProvider} from '@sanity/ui'\nimport {type Dispatch, type SetStateAction, useMemo} from 'react'\nimport {getSanityCreateLinkMetadata, useZIndex} from 'sanity'\n\nimport {TooltipDelayGroupProvider} from '../../../../ui-components/tooltipDelayGroupProvider/TooltipDelayGroupProvider'\nimport {PaneFooter} from '../../../components'\nimport {DOCUMENT_PANEL_PORTAL_ELEMENT} from '../../../constants'\nimport {DocumentStatusBar} from '../statusBar'\nimport {useDocumentPane} from '../useDocumentPane'\n\nconst DIALOG_PROVIDER_POSITION: DialogProviderProps['position'] = [\n  // We use the `position: fixed` for dialogs on narrower screens (first two media breakpoints).\n  'fixed',\n  'fixed',\n  // And we use the `position: absolute` strategy (within panes) on wide screens.\n  'absolute',\n]\n\nexport function DocumentLayoutFooter({\n  documentPanelPortalElement,\n  setFooterElement,\n  setActionsBoxElement,\n}: {\n  documentPanelPortalElement: HTMLElement | null\n  setFooterElement: Dispatch<SetStateAction<HTMLDivElement | null>>\n  setActionsBoxElement: Dispatch<SetStateAction<HTMLDivElement | null>>\n}) {\n  const zOffsets = useZIndex()\n\n  const {value} = useDocumentPane()\n  const portalElements = useMemo(\n    () => ({[DOCUMENT_PANEL_PORTAL_ELEMENT]: documentPanelPortalElement}),\n    [documentPanelPortalElement],\n  )\n\n  const createLinkMetadata = getSanityCreateLinkMetadata(value)\n  return (\n    // These providers are added because we want the dialogs in `DocumentStatusBar` to be scoped to the document pane\n    // The portal element comes from `DocumentPanel`.\n    <PortalProvider __unstable_elements={portalElements}>\n      <DialogProvider position={DIALOG_PROVIDER_POSITION} zOffset={zOffsets.portal}>\n        <PaneFooter ref={setFooterElement} padding={1}>\n          <TooltipDelayGroupProvider>\n            <DocumentStatusBar\n              actionsBoxRef={setActionsBoxElement}\n              createLinkMetadata={createLinkMetadata}\n            />\n          </TooltipDelayGroupProvider>\n        </PaneFooter>\n      </DialogProvider>\n    </PortalProvider>\n  )\n}\n","import {DialogProvider, type DialogProviderProps, Flex, useElementRect} from '@sanity/ui'\nimport {isHotkey} from 'is-hotkey-esm'\nimport {useCallback, useMemo, useState} from 'react'\nimport {\n  ChangeConnectorRoot,\n  type DocumentFieldActionNode,\n  type DocumentInspectorMenuItem,\n  FieldActionsProvider,\n  FieldActionsResolver,\n  GetFormValueProvider,\n  type Path,\n  useGlobalCopyPasteElementHandler,\n  useTranslation,\n  useZIndex,\n} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Pane, usePaneLayout, usePaneRouter} from '../../../components'\nimport {useDocumentIdStack} from '../../../hooks/useDocumentIdStack'\nimport {structureLocaleNamespace} from '../../../i18n'\nimport {useStructureTool} from '../../../useStructureTool'\nimport {\n  DOCUMENT_INSPECTOR_MIN_WIDTH,\n  DOCUMENT_PANEL_INITIAL_MIN_WIDTH,\n  DOCUMENT_PANEL_MIN_WIDTH,\n} from '../constants'\nimport {DocumentInspectorMenuItemsResolver} from '../DocumentInspectorMenuItemsResolver'\nimport {DocumentOperationResults} from '../DocumentOperationResults'\nimport {DocumentPanel} from '../documentPanel'\nimport {DocumentPanelHeader} from '../documentPanel/header'\nimport {DocumentActionShortcuts} from '../keyboardShortcuts'\nimport {getMenuItems} from '../menuItems'\nimport {useDocumentPane} from '../useDocumentPane'\nimport {DocumentLayoutError} from './DocumentLayoutError'\nimport {DocumentLayoutFooter} from './DocumentLayoutFooter'\n\nconst EMPTY_ARRAY: [] = []\n\nconst DIALOG_PROVIDER_POSITION: DialogProviderProps['position'] = [\n  // We use the `position: fixed` for dialogs on narrower screens (first two media breakpoints).\n  'fixed',\n  'fixed',\n  // And we use the `position: absolute` strategy (within panes) on wide screens.\n  'absolute',\n]\n\nconst StyledChangeConnectorRoot = styled(ChangeConnectorRoot)`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  min-height: 0;\n  min-width: 0;\n`\n\nexport function DocumentLayout() {\n  const {\n    changesOpen,\n    displayed,\n    documentId,\n    documentType,\n    editState,\n    fieldActions,\n    focusPath,\n    inspectOpen,\n    inspector,\n    inspectors,\n    onFocus,\n    onHistoryOpen,\n    onMenuAction,\n    onPathOpen,\n    paneKey,\n    schemaType,\n    value,\n    isInitialValueLoading,\n    ready,\n    previewUrl,\n  } = useDocumentPane()\n  const {params: paneParams} = usePaneRouter()\n  const {features} = useStructureTool()\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {collapsed: layoutCollapsed} = usePaneLayout()\n\n  const zOffsets = useZIndex()\n\n  const [rootElement, setRootElement] = useState<HTMLDivElement | null>(null)\n  const [footerElement, setFooterElement] = useState<HTMLDivElement | null>(null)\n  const [headerElement, setHeaderElement] = useState<HTMLDivElement | null>(null)\n\n  const [actionsBoxElement, setActionsBoxElement] = useState<HTMLDivElement | null>(null)\n  const [documentPanelPortalElement, setDocumentPanelPortalElement] = useState<HTMLElement | null>(\n    null,\n  )\n\n  useGlobalCopyPasteElementHandler({\n    element: rootElement,\n    focusPath,\n    value,\n  })\n\n  const [inspectorMenuItems, setInspectorMenuItems] = useState<DocumentInspectorMenuItem[]>([])\n  const [rootFieldActionNodes, setRootFieldActionNodes] = useState<DocumentFieldActionNode[]>([])\n\n  const footerRect = useElementRect(footerElement)\n  const headerRect = useElementRect(headerElement)\n  const footerHeight = footerRect?.height\n  const headerHeight = headerRect?.height\n  const currentMinWidth =\n    DOCUMENT_PANEL_INITIAL_MIN_WIDTH + (inspector ? DOCUMENT_INSPECTOR_MIN_WIDTH : 0)\n  const minWidth = DOCUMENT_PANEL_MIN_WIDTH + (inspector ? DOCUMENT_INSPECTOR_MIN_WIDTH : 0)\n\n  const currentInspector = useMemo(\n    () => inspectors?.find((i) => i.name === inspector?.name),\n    [inspectors, inspector?.name],\n  )\n\n  const documentIdStack = useDocumentIdStack({displayed, documentId, editState})\n\n  const hasValue = Boolean(value)\n\n  const menuItems = useMemo(\n    () =>\n      getMenuItems({\n        currentInspector,\n        features,\n        hasValue,\n        inspectorMenuItems,\n        inspectors,\n        previewUrl,\n        documentIdStack,\n        t,\n      }),\n    [\n      currentInspector,\n      documentIdStack,\n      features,\n      hasValue,\n      inspectorMenuItems,\n      inspectors,\n      previewUrl,\n      t,\n    ],\n  )\n\n  const handleKeyUp = useCallback(\n    (event: React.KeyboardEvent<HTMLDivElement>) => {\n      for (const item of menuItems) {\n        if (item.shortcut) {\n          if (isHotkey(item.shortcut, event)) {\n            event.preventDefault()\n            event.stopPropagation()\n            onMenuAction(item)\n            return\n          }\n        }\n      }\n    },\n    [onMenuAction, menuItems],\n  )\n\n  const onConnectorSetFocus = useCallback(\n    (path: Path) => {\n      onPathOpen(path)\n      onFocus(path)\n    },\n    [onPathOpen, onFocus],\n  )\n\n  if (!schemaType) {\n    return (\n      <DocumentLayoutError\n        currentMinWidth={currentMinWidth}\n        documentType={documentType}\n        minWidth={minWidth}\n        paneKey={paneKey}\n        value={value}\n      />\n    )\n  }\n\n  return (\n    <GetFormValueProvider value={value}>\n      {inspectors.length > 0 && (\n        <DocumentInspectorMenuItemsResolver\n          documentId={documentId}\n          documentType={documentType}\n          inspectors={inspectors}\n          onMenuItems={setInspectorMenuItems}\n        />\n      )}\n\n      {fieldActions.length > 0 && schemaType && (\n        <FieldActionsResolver\n          actions={fieldActions}\n          documentId={documentId}\n          documentType={documentType}\n          onActions={setRootFieldActionNodes}\n          path={EMPTY_ARRAY}\n          schemaType={schemaType}\n        />\n      )}\n\n      <FieldActionsProvider actions={rootFieldActionNodes} path={EMPTY_ARRAY}>\n        <DocumentActionShortcuts\n          actionsBoxElement={actionsBoxElement}\n          as={Pane}\n          currentMinWidth={currentMinWidth}\n          data-testid=\"document-pane\"\n          flex={2.5}\n          id={paneKey}\n          minWidth={minWidth}\n          onKeyUp={handleKeyUp}\n          rootRef={setRootElement}\n        >\n          <DocumentPanelHeader ref={setHeaderElement} menuItems={menuItems} />\n          <DialogProvider position={DIALOG_PROVIDER_POSITION} zOffset={zOffsets.paneDialog}>\n            <Flex direction=\"column\" flex={1} height={layoutCollapsed ? undefined : 'fill'}>\n              <StyledChangeConnectorRoot\n                data-testid=\"change-connector-root\"\n                isReviewChangesOpen={changesOpen && paneParams?.changesInspectorTab === 'review'}\n                onOpenReviewChanges={onHistoryOpen}\n                onSetFocus={onConnectorSetFocus}\n              >\n                <DocumentPanel\n                  footerHeight={footerHeight || null}\n                  headerHeight={headerHeight || null}\n                  isInspectOpen={inspectOpen}\n                  rootElement={rootElement}\n                  setDocumentPanelPortalElement={setDocumentPanelPortalElement}\n                  footer={\n                    <DocumentLayoutFooter\n                      documentPanelPortalElement={documentPanelPortalElement}\n                      setFooterElement={setFooterElement}\n                      setActionsBoxElement={setActionsBoxElement}\n                    />\n                  }\n                />\n              </StyledChangeConnectorRoot>\n            </Flex>\n          </DialogProvider>\n          <DocumentOperationResults />\n        </DocumentActionShortcuts>\n      </FieldActionsProvider>\n    </GetFormValueProvider>\n  )\n}\n","import {type ComponentType} from 'react'\nimport {type DocumentLayoutProps, useMiddlewareComponents} from 'sanity'\n\nimport {DocumentLayout} from './DocumentLayout'\nimport {pickDocumentLayoutComponent} from './pickDocumentLayoutComponent'\n\n/**\n * A hook that returns the document layout composed\n * by the Components API (`document.components.layout`).\n */\nexport function useDocumentLayoutComponent(): ComponentType<\n  Omit<DocumentLayoutProps, 'renderDefault'>\n> {\n  return useMiddlewareComponents({\n    pick: pickDocumentLayoutComponent,\n    defaultComponent: DocumentLayout,\n  })\n}\n","import {type SanityDocument} from '@sanity/types'\nimport {useEffect, useState} from 'react'\nimport {useHistoryStore, useTimelineSelector, useTimelineStore} from 'sanity'\n\nexport const useDocumentLastRev = (documentId: string, documentType: string) => {\n  const historyStore = useHistoryStore()\n  const [lastRevisionDocument, setLastRevisionDocument] = useState<SanityDocument | null>(null)\n  const [loading, setLoading] = useState(false)\n\n  // Get the timeline store to access lastNonDeletedRevId\n  // needs to be done this way because otherwise the revision id will not be the most updated\n  // in case if you edit the document in between deletes, for example\n  const timelineStore = useTimelineStore({\n    documentId,\n    documentType,\n  })\n\n  // Get the lastNonDeletedRevId from the timeline store\n  const lastNonDeletedRevId = useTimelineSelector(\n    timelineStore,\n    (state) => state.lastNonDeletedRevId,\n  )\n\n  useEffect(() => {\n    if (lastNonDeletedRevId && documentId) {\n      setLoading(true)\n      historyStore\n        .getDocumentAtRevision(documentId, lastNonDeletedRevId)\n        .then((document) => {\n          setLastRevisionDocument(document || null)\n          setLoading(false)\n        })\n        .catch(() => {\n          setLastRevisionDocument(null)\n          setLoading(false)\n        })\n    } else {\n      setLastRevisionDocument(null)\n      setLoading(false)\n    }\n  }, [documentId, lastNonDeletedRevId, historyStore])\n\n  return {lastRevisionDocument, loading}\n}\n","import {defineEvent} from '@sanity/telemetry'\n\n/**\n * @internal\n */\nexport const DocumentURLCopied = defineEvent({\n  name: 'DocumentURLCopied',\n  version: 1,\n  description: 'User copied document URL to clipboard',\n})\n","import {type Template} from 'sanity'\n\ninterface InitialValueOptions {\n  documentType: string\n  panePayload?: unknown\n  templateName?: string\n  templateParams?: Record<string, unknown>\n  urlTemplate?: string\n}\n\n/**\n * @internal\n */\nexport function getInitialValueTemplateOpts(\n  templates: Template[],\n  opts: InitialValueOptions,\n): {templateName: string; templateParams: Record<string, unknown>} {\n  const payload = opts.panePayload || {}\n  const structureNodeTemplate = opts.templateName\n\n  if (opts.urlTemplate && structureNodeTemplate && structureNodeTemplate !== opts.urlTemplate) {\n    console.warn(\n      `Conflicting templates: URL says \"${opts.urlTemplate}\", structure node says \"${structureNodeTemplate}\". Using \"${structureNodeTemplate}\".`,\n    )\n  }\n\n  const template = structureNodeTemplate || opts.urlTemplate\n  const typeTemplates = templates.filter((t) => t.schemaType === opts.documentType)\n\n  const templateParams = {\n    ...opts.templateParams,\n    ...(typeof payload === 'object' ? payload || {} : {}),\n  }\n\n  let templateName = template\n\n  // If we have not specified a specific template, and we only have a single\n  // template available for a schema type, use it\n  if (!template && typeTemplates.length === 1) {\n    templateName = typeTemplates[0].id\n  }\n\n  return {templateName: templateName!, templateParams}\n}\n","import {useMemo} from 'react'\nimport {useInitialValue, useTemplates, useUnique} from 'sanity'\n\nimport {type PaneRouterContextValue, usePaneRouter} from '../../components'\nimport {type DocumentPaneNode} from '../../types'\nimport {getInitialValueTemplateOpts} from './getInitialValueTemplateOpts'\n\nexport const useDocumentPaneInitialValue = ({\n  paneOptions,\n  documentType,\n  documentId,\n  params,\n}: {\n  paneOptions: DocumentPaneNode['options']\n  documentType: string\n  documentId: string\n  params: NonNullable<PaneRouterContextValue['params']>\n}) => {\n  const templates = useTemplates()\n  const paneRouter = usePaneRouter()\n  const panePayload = useUnique(paneRouter.payload)\n\n  const {templateName, templateParams} = useMemo(\n    () =>\n      getInitialValueTemplateOpts(templates, {\n        documentType,\n        templateName: paneOptions.template,\n        templateParams: paneOptions.templateParameters,\n        panePayload,\n        urlTemplate: params.template,\n      }),\n    [documentType, paneOptions, params.template, panePayload, templates],\n  )\n\n  const initialValueRaw = useInitialValue({\n    documentId,\n    documentType,\n    templateName,\n    templateParams,\n    version: params.version,\n  })\n\n  const initialValue = useUnique(initialValueRaw)\n  return initialValue\n}\n","import {useCallback, useEffect, useMemo, useRef, useState} from 'react'\nimport {type DocumentInspector, useSource} from 'sanity'\n\nimport {type PaneRouterContextValue} from '../../components'\nimport {type PaneMenuItem} from '../../types'\nimport {useStructureTool} from '../../useStructureTool'\nimport {HISTORY_INSPECTOR_NAME, INSPECT_ACTION_PREFIX} from './constants'\n\nexport function useDocumentPaneInspector({\n  documentId,\n  documentType,\n  params,\n  setParams,\n}: {\n  params: NonNullable<PaneRouterContextValue['params']>\n  documentId: string\n  documentType: string\n  setParams: (params: Record<string, string | undefined>) => void\n}) {\n  const {features} = useStructureTool()\n  const source = useSource()\n  const inspectorsResolver = source.document.inspectors\n\n  const inspectors: DocumentInspector[] = useMemo(\n    () => inspectorsResolver({documentId, documentType}),\n    [documentId, documentType, inspectorsResolver],\n  )\n\n  const [inspectorName, setInspectorName] = useState<string | null>(() => params.inspect || null)\n\n  // Handle inspector name changes from URL\n  const inspectParamRef = useRef<string | undefined>(params.inspect)\n  useEffect(() => {\n    if (inspectParamRef.current !== params.inspect) {\n      inspectParamRef.current = params.inspect\n      setInspectorName(params.inspect || null)\n    }\n  }, [params.inspect])\n\n  const currentInspector = useMemo(\n    () => inspectors?.find((i) => i.name === inspectorName),\n    [inspectors, inspectorName],\n  )\n  const historyInspector = useMemo(\n    () => inspectors.find((i) => i.name === HISTORY_INSPECTOR_NAME),\n    [inspectors],\n  )\n\n  const changesOpen = currentInspector?.name === HISTORY_INSPECTOR_NAME\n\n  const closeInspector = useCallback(\n    (closeInspectorName?: string) => {\n      const inspector = closeInspectorName && inspectors.find((i) => i.name === closeInspectorName)\n\n      if (closeInspectorName && !inspector) {\n        console.warn(`No inspector named \"${closeInspectorName}\"`)\n        return\n      }\n\n      if (!currentInspector) {\n        return\n      }\n\n      if (inspector) {\n        const result = inspector.onClose?.({params}) ?? {params}\n\n        setInspectorName(null)\n        inspectParamRef.current = undefined\n\n        setParams({...result.params, inspect: undefined})\n\n        return\n      }\n\n      if (currentInspector) {\n        const result = currentInspector.onClose?.({params}) ?? {params}\n\n        setInspectorName(null)\n        inspectParamRef.current = undefined\n\n        setParams({...result.params, inspect: undefined})\n      }\n    },\n    [currentInspector, inspectors, params, setParams],\n  )\n\n  const openInspector = useCallback(\n    (nextInspectorName: string, paneParams?: Record<string, string>) => {\n      const nextInspector = inspectors.find((i) => i.name === nextInspectorName)\n\n      if (!nextInspector) {\n        console.warn(`No inspector named \"${nextInspectorName}\"`)\n        return\n      }\n\n      // if the inspector is already open, only update params\n      if (currentInspector?.name === nextInspector.name) {\n        setParams({...params, ...paneParams, inspect: nextInspector.name})\n        return\n      }\n\n      let currentParams = params\n\n      if (currentInspector) {\n        const closeResult = nextInspector.onClose?.({params: currentParams}) ?? {\n          params: currentParams,\n        }\n\n        currentParams = closeResult.params\n      }\n\n      const result = nextInspector.onOpen?.({params: currentParams}) ?? {params: currentParams}\n\n      setInspectorName(nextInspector.name)\n      inspectParamRef.current = nextInspector.name\n\n      setParams({...result.params, ...paneParams, inspect: nextInspector.name})\n    },\n    [currentInspector, inspectors, params, setParams],\n  )\n  const handleHistoryClose = useCallback(() => {\n    if (historyInspector) {\n      closeInspector(historyInspector.name)\n    }\n  }, [closeInspector, historyInspector])\n\n  const handleHistoryOpen = useCallback(() => {\n    if (!features.reviewChanges) {\n      return\n    }\n\n    if (historyInspector) {\n      openInspector(historyInspector.name, {changesInspectorTab: 'review'})\n    }\n  }, [features.reviewChanges, openInspector, historyInspector])\n\n  const inspectOpen = params.inspect === 'on'\n\n  const toggleLegacyInspect = useCallback(\n    (toggle = !inspectOpen) => {\n      if (toggle) {\n        setParams({...params, inspect: 'on'})\n      } else {\n        setParams({...params, inspect: undefined})\n      }\n    },\n    [inspectOpen, params, setParams],\n  )\n\n  const handleLegacyInspectClose = useCallback(\n    () => toggleLegacyInspect(false),\n    [toggleLegacyInspect],\n  )\n\n  const handleInspectorAction = useCallback(\n    (item: PaneMenuItem) => {\n      if (item.action === 'inspect') {\n        toggleLegacyInspect(true)\n        return true\n      }\n\n      if (typeof item.action !== 'string') return false\n      const nextInspectorName = item.action.slice(INSPECT_ACTION_PREFIX.length)\n      const nextInspector = inspectors.find((i) => i.name === nextInspectorName)\n\n      if (nextInspector) {\n        if (nextInspector.name === inspectorName) {\n          closeInspector(nextInspector.name)\n        } else {\n          openInspector(nextInspector.name)\n        }\n        return true\n      }\n      return false\n    },\n    [closeInspector, inspectorName, inspectors, openInspector, toggleLegacyInspect],\n  )\n\n  return {\n    changesOpen,\n    currentInspector,\n    inspectors,\n    closeInspector,\n    openInspector,\n    handleHistoryClose,\n    handleHistoryOpen,\n    handleInspectorAction,\n    // TODO: Deprecate this legacy inspect toggle it's used to render the <InspectDialog /> component\n    handleLegacyInspectClose,\n    inspectOpen,\n  }\n}\n","import {type SanityDocument} from '@sanity/types'\nimport {useEffect, useMemo} from 'react'\nimport {useObservable} from 'react-rx'\nimport {BehaviorSubject, from, of} from 'rxjs'\nimport {catchError, debounceTime, distinctUntilChanged, switchMap} from 'rxjs/operators'\nimport {isRecord, useSource} from 'sanity'\n\nconst isSanityDocument = (value: unknown): value is SanityDocument =>\n  isRecord(value) && typeof value._id === 'string' && typeof value._type === 'string'\n\nexport function usePreviewUrl(value: Partial<SanityDocument> | undefined): string | undefined {\n  const {resolveProductionUrl} = useSource().document\n  const subject = useMemo(\n    () => new BehaviorSubject<Partial<SanityDocument> | undefined>(undefined),\n    [],\n  )\n\n  useEffect(() => {\n    subject.next(value)\n  }, [subject, value])\n\n  const resolvedUrlObservable = useMemo(() => {\n    return subject.asObservable().pipe(\n      // this so that the preview URL isn't fetched on every keystroke\n      distinctUntilChanged(),\n      debounceTime(500),\n      switchMap((document) =>\n        isSanityDocument(document) ? from(resolveProductionUrl({document})) : of(undefined),\n      ),\n      distinctUntilChanged(),\n      catchError((err) => {\n        const message =\n          isRecord(err) && typeof err.message === 'string' ? err.message : 'Unknown error'\n        throw new Error(`An error was thrown while trying to get your preview url: ${message}`)\n      }),\n    )\n  }, [resolveProductionUrl, subject])\n\n  return useObservable(resolvedUrlObservable)\n}\n","import {useTelemetry} from '@sanity/telemetry/react'\nimport {type ObjectSchemaType, type SanityDocument, type SanityDocumentLike} from '@sanity/types'\nimport {useToast} from '@sanity/ui'\nimport {fromString as pathFromString, resolveKeyedPath} from '@sanity/util/paths'\nimport {memo, useCallback, useEffect, useMemo, useRef, useState} from 'react'\nimport {\n  type DocumentActionsContext,\n  type DocumentActionsVersionType,\n  type DocumentFieldAction,\n  type EditStateFor,\n  EMPTY_ARRAY,\n  getPublishedId,\n  getReleaseIdFromReleaseDocumentId,\n  isCardinalityOneRelease,\n  isGoingToUnpublish,\n  isPerspectiveWriteable,\n  isVersionId,\n  type PartialContext,\n  useActiveReleases,\n  useCopyPaste,\n  useDocumentForm,\n  usePerspective,\n  useSchema,\n  useSource,\n  useStudioUrl,\n  useTranslation,\n  useUnique,\n  useWorkspace,\n} from 'sanity'\nimport {DocumentPaneContext} from 'sanity/_singletons'\n\nimport {usePaneRouter} from '../../components'\nimport {useDiffViewRouter} from '../../diffView/hooks/useDiffViewRouter'\nimport {useDocumentIdStack} from '../../hooks/useDocumentIdStack'\nimport {useDocumentLastRev} from '../../hooks/useDocumentLastRev'\nimport {structureLocaleNamespace} from '../../i18n'\nimport {type PaneMenuItem} from '../../types'\nimport {DocumentURLCopied} from './__telemetry__'\nimport {DEFAULT_MENU_ITEM_GROUPS, EMPTY_PARAMS, INSPECT_ACTION_PREFIX} from './constants'\nimport {type DocumentPaneContextValue} from './DocumentPaneContext'\nimport {\n  type DocumentPaneProviderProps as DocumentPaneProviderWrapperProps,\n  type HistoryStoreProps,\n} from './types'\nimport {useDocumentPaneInitialValue} from './useDocumentPaneInitialValue'\nimport {useDocumentPaneInspector} from './useDocumentPaneInspector'\nimport {usePreviewUrl} from './usePreviewUrl'\n\ninterface DocumentPaneProviderProps extends DocumentPaneProviderWrapperProps {\n  historyStore: HistoryStoreProps\n}\n\n/**\n * @internal\n */\n// eslint-disable-next-line max-statements\nexport const DocumentPaneProvider = memo((props: DocumentPaneProviderProps) => {\n  const {children, index, pane, paneKey, onFocusPath, forcedVersion, historyStore} = props\n  const {\n    store: timelineStore,\n    error: timelineError,\n    ready: timelineReady,\n    revisionDocument,\n    onOlderRevision,\n    sinceDocument,\n    isPristine,\n    revisionId,\n    lastNonDeletedRevId,\n  } = historyStore\n\n  const schema = useSchema()\n  const {setDocumentMeta} = useCopyPaste()\n  const {\n    document: {\n      actions: documentActions,\n      badges: documentBadges,\n      unstable_fieldActions: fieldActionsResolver,\n      unstable_languageFilter: languageFilterResolver,\n      drafts: {enabled: draftsEnabled},\n    },\n  } = useSource()\n  const telemetry = useTelemetry()\n  const paneRouter = usePaneRouter()\n  const setPaneParams = paneRouter.setParams\n  const {push: pushToast} = useToast()\n  const {\n    options,\n    menuItemGroups = DEFAULT_MENU_ITEM_GROUPS,\n    title = null,\n    views: viewsProp = [],\n  } = pane\n  const paneOptions = useUnique(options)\n  const documentIdRaw = paneOptions.id\n  const documentId = getPublishedId(documentIdRaw)\n  const documentType = options.type\n  const params = useUnique(paneRouter.params) || EMPTY_PARAMS\n  const {buildStudioUrl} = useStudioUrl()\n\n  const perspective = usePerspective()\n\n  const {\n    document: {\n      drafts: {enabled: isDraftModelEnabled},\n    },\n  } = useWorkspace()\n\n  const {selectedReleaseId, selectedPerspectiveName} = useMemo(() => {\n    // TODO: COREL - Remove this after updating sanity-assist to use <PerspectiveProvider>\n    if (forcedVersion) {\n      return forcedVersion\n    }\n\n    return {\n      selectedPerspectiveName: perspective.selectedPerspectiveName,\n      selectedReleaseId: perspective.selectedReleaseId,\n    }\n  }, [forcedVersion, perspective.selectedPerspectiveName, perspective.selectedReleaseId])\n\n  const diffViewRouter = useDiffViewRouter()\n\n  const initialValue = useDocumentPaneInitialValue({\n    paneOptions,\n    documentId,\n    documentType,\n    params,\n  })\n\n  const isInitialValueLoading = initialValue.loading\n  const {\n    changesOpen,\n    currentInspector,\n    inspectors,\n    closeInspector,\n    openInspector,\n    handleHistoryClose,\n    handleHistoryOpen,\n    handleInspectorAction,\n    inspectOpen,\n    handleLegacyInspectClose,\n  } = useDocumentPaneInspector({documentId, documentType, params, setParams: setPaneParams})\n\n  const [isDeleting, setIsDeleting] = useState(false)\n  const {lastRevisionDocument} = useDocumentLastRev(documentId, documentType)\n\n  /**\n   * Determine if the current document is deleted.\n   *\n   * When the timeline is available – we check for the absence of an editable document pair\n   * (both draft + published versions) as well as a non 'pristine' timeline (i.e. a timeline that consists\n   * of at least one chunk).\n   *\n   * In the _very rare_ case where the timeline cannot be loaded – we skip this check and always assume\n   * the document is NOT deleted. Since we can't accurately determine document deleted status without history,\n   * skipping this check means that in these cases, users will at least be able to create new documents\n   * without them being incorrectly marked as deleted.\n   */\n  const getIsDeleted = useCallback(\n    (editState: EditStateFor) => {\n      if (!timelineReady) return false\n      return (\n        Boolean(!editState?.draft && !editState?.published && !editState?.version) && !isPristine\n      )\n    },\n    [timelineReady, isPristine],\n  )\n\n  const getComparisonValue = useCallback(\n    (editState: EditStateFor) => {\n      return changesOpen ? sinceDocument || editState?.published : editState?.published || null\n    },\n    [changesOpen, sinceDocument],\n  )\n\n  const schemaType = schema.get(documentType) as ObjectSchemaType | undefined\n\n  const getIsReadOnly = useCallback(\n    (editState: EditStateFor): boolean => {\n      const isDeleted = getIsDeleted(editState)\n      const seeingHistoryDocument = Boolean(params.rev)\n      return (\n        seeingHistoryDocument ||\n        isDeleting ||\n        isDeleted ||\n        !isPerspectiveWriteable({\n          selectedPerspective: perspective.selectedPerspective,\n          isDraftModelEnabled,\n          schemaType,\n        }).result\n      )\n    },\n    [\n      getIsDeleted,\n      isDeleting,\n      isDraftModelEnabled,\n      params.rev,\n      perspective.selectedPerspective,\n      schemaType,\n    ],\n  )\n\n  const getDisplayed = useCallback(\n    (value: SanityDocumentLike) => {\n      if (onOlderRevision) {\n        return revisionDocument || {_id: value._id, _type: value._type}\n      }\n\n      // If the document is deleted (no draft, published, or version), return the last revision\n      const isDeleted = !value._createdAt && !value._updatedAt\n      if (isDeleted && lastNonDeletedRevId) {\n        // Return the fetched last revision document if available\n        if (lastRevisionDocument) {\n          return lastRevisionDocument\n        }\n      }\n\n      return value\n    },\n    [onOlderRevision, revisionDocument, lastNonDeletedRevId, lastRevisionDocument],\n  )\n\n  const {\n    editState,\n    connectionState,\n    focusPath,\n    onChange,\n    validation,\n    ready: formReady,\n    value,\n    formState,\n    permissions,\n    onPathOpen,\n    isPermissionsLoading,\n    formStateRef,\n    onProgrammaticFocus,\n\n    collapsedFieldSets,\n    collapsedPaths,\n    onBlur,\n    onFocus,\n    onSetActiveFieldGroup,\n    onSetCollapsedPath,\n    onSetCollapsedFieldSet,\n    openPath,\n  } = useDocumentForm({\n    changesOpen,\n    documentType,\n    documentId,\n    initialValue: initialValue,\n    comparisonValue: getComparisonValue,\n    releaseId: selectedReleaseId,\n    selectedPerspectiveName,\n    initialFocusPath: params.path ? pathFromString(params.path) : EMPTY_ARRAY,\n    readOnly: getIsReadOnly,\n    onFocusPath,\n    getFormDocumentValue: getDisplayed,\n  })\n\n  const {data: releases = []} = useActiveReleases()\n\n  const getDocumentVersionType = useCallback(() => {\n    let version: DocumentActionsVersionType\n    switch (true) {\n      case Boolean(params.rev):\n        version = 'revision'\n        break\n      case selectedReleaseId && isVersionId(value._id): {\n        // Check if this is a scheduled draft (cardinality one release)\n        const releaseDocument = releases.find(\n          (r) => getReleaseIdFromReleaseDocumentId(r._id) === selectedReleaseId,\n        )\n\n        if (releaseDocument && isCardinalityOneRelease(releaseDocument)) {\n          version = 'scheduled-draft'\n        } else {\n          version = 'version'\n        }\n        break\n      }\n      case selectedPerspectiveName === 'published':\n        version = 'published'\n        break\n      case draftsEnabled:\n        version = 'draft'\n        break\n      default:\n        version = 'published'\n    }\n\n    return version\n  }, [params.rev, selectedReleaseId, value._id, selectedPerspectiveName, draftsEnabled, releases])\n\n  const actionsPerspective = useMemo(() => getDocumentVersionType(), [getDocumentVersionType])\n\n  const documentActionsProps: PartialContext<DocumentActionsContext> = useMemo(\n    () => ({\n      schemaType: documentType,\n      documentId,\n      versionType: actionsPerspective,\n      releaseId: selectedReleaseId,\n    }),\n    [documentType, documentId, actionsPerspective, selectedReleaseId],\n  )\n\n  // Resolve document actions\n  const actions = useMemo(\n    () => documentActions(documentActionsProps),\n    [documentActions, documentActionsProps],\n  )\n\n  // Resolve document badges\n  const badges = useMemo(\n    () => documentBadges({schemaType: documentType, documentId}),\n    [documentBadges, documentId, documentType],\n  )\n\n  // Resolve document language filter\n  const languageFilter = useMemo(\n    () => languageFilterResolver({schemaType: documentType, documentId}),\n    [documentId, documentType, languageFilterResolver],\n  )\n\n  const views = useUnique(viewsProp)\n\n  const activeViewId = params.view || (views[0] && views[0].id) || null\n\n  // TODO: this may cause a lot of churn. May be a good idea to prevent these\n  // requests unless the menu is open somehow\n  const previewUrl = usePreviewUrl(value)\n\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const fieldActions: DocumentFieldAction[] = useMemo(\n    () => (schemaType ? fieldActionsResolver({documentId, documentType, schemaType}) : []),\n    [documentId, documentType, fieldActionsResolver, schemaType],\n  )\n\n  /**\n   * Note that in addition to connection and edit state, we also wait for a valid document timeline\n   * range to be loaded. This means if we're loading an older revision, the full transaction range must\n   * be loaded in full prior to the document being displayed.\n   *\n   * Previously, visiting studio URLs with timeline params would display the 'current' document and then\n   * 'snap' in the older revision, which was disorienting and could happen mid-edit.\n   *\n   * In the event that the timeline cannot be loaded due to TimelineController errors or blocked requests,\n   * we skip this readiness check to ensure that users aren't locked out of editing. Trying to select\n   * a timeline revision in this instance will display an error localized to the popover itself.\n   */\n  const ready = formReady && (!params.rev || timelineReady || !!timelineError)\n\n  const displayed: Partial<SanityDocument> | undefined = useMemo(\n    () => getDisplayed(value),\n    [getDisplayed, value],\n  )\n\n  const {previousId} = useDocumentIdStack({displayed, documentId, editState})\n\n  const setTimelineRange = useCallback(\n    (newSince: string, newRev: string | null) => {\n      setPaneParams({\n        ...params,\n        since: newSince,\n        rev: newRev || undefined,\n      })\n    },\n    [params, setPaneParams],\n  )\n\n  const handlePaneClose = useCallback(() => paneRouter.closeCurrent(), [paneRouter])\n\n  const handlePaneSplit = useCallback(() => paneRouter.duplicateCurrent(), [paneRouter])\n\n  const handleMenuAction = useCallback(\n    async (item: PaneMenuItem) => {\n      if (item.action === 'production-preview' && previewUrl) {\n        window.open(previewUrl)\n        return true\n      }\n\n      if (item.action === 'copy-document-url' && navigator) {\n        telemetry.log(DocumentURLCopied)\n        // Chose to copy the user's current URL instead of\n        // the document's edit intent link because\n        // of bugs when resolving a document that has\n        // multiple access paths within Structure\n        const copyUrl = buildStudioUrl({\n          coreUi: (url) => `${url}/intent/edit/id=${documentId};type=${documentType}`,\n        })\n        await navigator.clipboard.writeText(copyUrl)\n        pushToast({\n          id: 'copy-document-url',\n          status: 'info',\n          title: t('panes.document-operation-results.operation-success_copy-url'),\n        })\n        return true\n      }\n\n      if (item.action === 'reviewChanges') {\n        handleHistoryOpen()\n        return true\n      }\n\n      if (\n        item.action === 'inspect' ||\n        (typeof item.action === 'string' && item.action.startsWith(INSPECT_ACTION_PREFIX))\n      ) {\n        handleInspectorAction(item)\n      }\n\n      if (item.action === 'compareVersions' && typeof previousId !== 'undefined') {\n        diffViewRouter.navigateDiffView({\n          mode: 'version',\n          previousDocument: {\n            type: documentType,\n            id: previousId,\n          },\n          nextDocument: {\n            type: documentType,\n            id: value._id,\n          },\n        })\n        return true\n      }\n\n      return false\n    },\n    [\n      previewUrl,\n      previousId,\n      telemetry,\n      buildStudioUrl,\n      pushToast,\n      t,\n      documentId,\n      documentType,\n      handleHistoryOpen,\n      handleInspectorAction,\n      diffViewRouter,\n      value._id,\n    ],\n  )\n\n  useEffect(() => {\n    setDocumentMeta({\n      documentId,\n      documentType,\n      schemaType: schemaType!,\n      onChange,\n    })\n  }, [documentId, documentType, schemaType, onChange, setDocumentMeta])\n\n  const compareValue = useMemo(() => getComparisonValue(editState), [editState, getComparisonValue])\n  const isDeleted = useMemo(() => getIsDeleted(editState), [editState, getIsDeleted])\n  const revisionNotFound = onOlderRevision && !revisionDocument\n\n  const currentDisplayed = useMemo(() => {\n    if (editState.version && isGoingToUnpublish(editState.version)) {\n      return editState.published\n    }\n    return displayed\n  }, [editState.version, editState.published, displayed])\n\n  const documentPane: DocumentPaneContextValue = useMemo(\n    () =>\n      ({\n        actions,\n        activeViewId,\n        badges,\n        changesOpen,\n        closeInspector,\n        collapsedFieldSets,\n        collapsedPaths,\n        compareValue,\n        connectionState,\n        displayed: currentDisplayed,\n        documentId,\n        documentIdRaw,\n        documentType,\n        editState,\n        fieldActions,\n        focusPath,\n        inspector: currentInspector || null,\n        inspectors,\n        onBlur,\n        onChange,\n        onFocus,\n        onPathOpen,\n        onHistoryClose: handleHistoryClose,\n        onHistoryOpen: handleHistoryOpen,\n        onInspectClose: handleLegacyInspectClose,\n        onMenuAction: handleMenuAction,\n        onPaneClose: handlePaneClose,\n        onPaneSplit: handlePaneSplit,\n        onSetActiveFieldGroup,\n        onSetCollapsedPath,\n        onSetCollapsedFieldSet,\n        openInspector,\n        openPath,\n        index,\n        inspectOpen,\n        validation,\n        menuItemGroups: menuItemGroups || [],\n        paneKey,\n        previewUrl,\n        ready,\n        schemaType: schemaType!,\n        isPermissionsLoading,\n        isInitialValueLoading,\n        permissions,\n        setTimelineRange,\n        setIsDeleting,\n        isDeleting,\n        isDeleted,\n        timelineError,\n        timelineStore,\n        title,\n        value,\n        selectedReleaseId,\n        views,\n        formState,\n        unstable_languageFilter: languageFilter,\n        revisionId,\n        revisionNotFound,\n        lastNonDeletedRevId,\n        lastRevisionDocument,\n      }) satisfies DocumentPaneContextValue,\n    [\n      actions,\n      activeViewId,\n      badges,\n      changesOpen,\n      closeInspector,\n      collapsedFieldSets,\n      collapsedPaths,\n      compareValue,\n      connectionState,\n      currentDisplayed,\n      documentId,\n      documentIdRaw,\n      documentType,\n      editState,\n      fieldActions,\n      focusPath,\n      currentInspector,\n      inspectors,\n      onBlur,\n      onChange,\n      onFocus,\n      onPathOpen,\n      handleHistoryClose,\n      handleHistoryOpen,\n      handleLegacyInspectClose,\n      handleMenuAction,\n      handlePaneClose,\n      handlePaneSplit,\n      onSetActiveFieldGroup,\n      onSetCollapsedPath,\n      onSetCollapsedFieldSet,\n      openInspector,\n      openPath,\n      index,\n      inspectOpen,\n      validation,\n      menuItemGroups,\n      paneKey,\n      previewUrl,\n      ready,\n      schemaType,\n      isPermissionsLoading,\n      isInitialValueLoading,\n      permissions,\n      setTimelineRange,\n      isDeleting,\n      isDeleted,\n      timelineError,\n      timelineStore,\n      title,\n      value,\n      selectedReleaseId,\n      views,\n      formState,\n      languageFilter,\n      revisionId,\n      revisionNotFound,\n      lastNonDeletedRevId,\n      lastRevisionDocument,\n    ],\n  )\n\n  const pathRef = useRef<string | undefined>(undefined)\n  useEffect(() => {\n    if (ready && params.path) {\n      const {path, ...restParams} = params\n\n      // trigger a focus when `params.path` changes\n      if (path !== pathRef.current) {\n        const pathFromUrl = resolveKeyedPath(formStateRef.current?.value, pathFromString(path))\n        onProgrammaticFocus(pathFromUrl)\n      }\n\n      // remove the `path`-param from url after we have consumed it as the initial focus path\n      paneRouter.setParams(restParams)\n    }\n    pathRef.current = params.path\n\n    return undefined\n  }, [formStateRef, onProgrammaticFocus, paneRouter, params, ready])\n\n  return (\n    <DocumentPaneContext.Provider value={documentPane}>{children}</DocumentPaneContext.Provider>\n  )\n})\n\nDocumentPaneProvider.displayName = 'Memo(DocumentPaneProvider)'\n","import {type ObjectSchemaType} from '@sanity/types'\nimport {useMemo} from 'react'\nimport {\n  EMPTY_ARRAY,\n  EventsProvider,\n  getDraftId,\n  getPublishedId,\n  getReleaseIdFromReleaseDocumentId,\n  getVersionId,\n  isDeleteDocumentGroupEvent,\n  isDeleteDocumentVersionEvent,\n  PerspectiveProvider,\n  useArchivedReleases,\n  useEditState,\n  useEventsStore,\n  usePerspective,\n  useSchema,\n} from 'sanity'\n\nimport {usePaneRouter} from '../../components'\nimport {EMPTY_PARAMS} from './constants'\nimport {usePaneOptions} from './DocumentPane'\nimport {DocumentPaneProvider} from './DocumentPaneProvider'\nimport {type DocumentPaneProviderProps} from './types'\n\nexport const DocumentEventsPane = (props: DocumentPaneProviderProps) => {\n  const {params = EMPTY_PARAMS} = usePaneRouter()\n  const options = usePaneOptions(props.pane.options, params)\n  const schema = useSchema()\n  const documentType = options.type\n  const schemaType = schema.get(options.type) as ObjectSchemaType | undefined\n  const liveEdit = Boolean(schemaType?.liveEdit)\n\n  const {selectedPerspectiveName, selectedReleaseId, selectedPerspective} = usePerspective()\n  const {data: archivedReleases} = useArchivedReleases()\n  const editState = useEditState(\n    getPublishedId(options.id),\n    documentType,\n    'default',\n    selectedReleaseId,\n  )\n\n  const showingPublishedOnDraft = liveEdit && selectedPerspective === 'drafts' && !editState?.draft\n  const {rev, since} = params\n  const historyVersion = params.historyVersion\n\n  const documentId = useMemo(() => {\n    if (showingPublishedOnDraft) {\n      return getPublishedId(options.id)\n    }\n    if (\n      historyVersion &&\n      archivedReleases.some(\n        (release) => getReleaseIdFromReleaseDocumentId(release._id) === historyVersion,\n      )\n    ) {\n      // Check if we have a release that matches with this historyVersion\n      return getVersionId(options.id, historyVersion)\n    }\n    if (typeof selectedPerspectiveName === 'undefined') {\n      return getDraftId(options.id)\n    }\n    if (selectedPerspectiveName === 'published') {\n      return getPublishedId(options.id)\n    }\n    if (selectedReleaseId) {\n      return getVersionId(options.id, selectedPerspectiveName)\n    }\n    return options.id\n  }, [\n    archivedReleases,\n    historyVersion,\n    selectedPerspectiveName,\n    options.id,\n    showingPublishedOnDraft,\n    selectedReleaseId,\n  ])\n\n  const eventsStore = useEventsStore({documentId, documentType: options.type, rev, since})\n\n  const historyStoreProps = useMemo(\n    () => ({\n      error: eventsStore.error,\n      revisionId: eventsStore.revision?.revisionId || null,\n      onOlderRevision: Boolean(rev && !eventsStore.revision?.loading),\n      revisionDocument: eventsStore.revision?.document || null,\n      sinceDocument: eventsStore.sinceRevision?.document || null,\n      ready: !eventsStore.loading,\n      isPristine: Boolean(eventsStore.events.length === 0),\n      lastNonDeletedRevId:\n        eventsStore.events.find(\n          (e) => !isDeleteDocumentGroupEvent(e) && !isDeleteDocumentVersionEvent(e),\n        )?.id || null,\n    }),\n    [eventsStore, rev],\n  )\n\n  const value = useMemo(() => eventsStore, [eventsStore])\n\n  return (\n    <EventsProvider value={value}>\n      {historyVersion ? (\n        <PerspectiveProvider\n          selectedPerspectiveName={historyVersion}\n          excludedPerspectives={EMPTY_ARRAY}\n        >\n          <DocumentPaneProvider {...props} historyStore={historyStoreProps} />\n        </PerspectiveProvider>\n      ) : (\n        <DocumentPaneProvider {...props} historyStore={historyStoreProps} />\n      )}\n    </EventsProvider>\n  )\n}\n","import {type SanityDocument} from '@sanity/types'\nimport {useMemo, useState} from 'react'\nimport {getPublishedId, useTimelineSelector, useTimelineStore} from 'sanity'\n\nimport {usePaneRouter} from '../../components'\nimport {EMPTY_PARAMS} from './constants'\nimport {usePaneOptions} from './DocumentPane'\nimport {DocumentPaneProvider} from './DocumentPaneProvider'\nimport {type DocumentPaneProviderProps} from './types'\n\nexport const DocumentPaneWithLegacyTimelineStore = (props: DocumentPaneProviderProps) => {\n  const {pane} = props\n  const paneRouter = usePaneRouter()\n  const options = usePaneOptions(pane.options, paneRouter.params)\n\n  const params = paneRouter.params || EMPTY_PARAMS\n\n  const [timelineError, setTimelineError] = useState<Error | null>(null)\n\n  const store = useTimelineStore({\n    documentId: getPublishedId(options.id),\n    documentType: options.type,\n    onError: setTimelineError,\n    rev: params.rev,\n    since: params.since,\n  })\n\n  const onOlderRevision = useTimelineSelector(store, (state) => state.onOlderRevision)\n  const revTime = useTimelineSelector(store, (state) => state.revTime)\n  const sinceAttributes = useTimelineSelector(store, (state) => state.sinceAttributes)\n  const timelineDisplayed = useTimelineSelector(store, (state) => state.timelineDisplayed)\n  const timelineReady = useTimelineSelector(store, (state) => state.timelineReady)\n  const isPristine = useTimelineSelector(store, (state) => state.isPristine)\n  const lastNonDeletedRevId = useTimelineSelector(store, (state) => state.lastNonDeletedRevId)\n\n  const historyStoreProps = useMemo(\n    () => ({\n      store,\n      error: timelineError,\n      revisionId: revTime?.id || null,\n      onOlderRevision: onOlderRevision,\n      revisionDocument: timelineDisplayed as SanityDocument | null,\n      sinceDocument: sinceAttributes as SanityDocument | null,\n      ready: timelineReady,\n      isPristine: Boolean(isPristine),\n      lastNonDeletedRevId,\n    }),\n    [\n      store,\n      timelineError,\n      revTime?.id,\n      onOlderRevision,\n      timelineDisplayed,\n      sinceAttributes,\n      timelineReady,\n      isPristine,\n      lastNonDeletedRevId,\n    ],\n  )\n  return <DocumentPaneProvider {...props} historyStore={historyStoreProps} />\n}\n","import {type ReactNode, useContext, useEffect, useMemo} from 'react'\nimport {\n  getVersionFromId,\n  isCardinalityOnePerspective,\n  LATEST,\n  type PerspectiveContextValue,\n  PUBLISHED,\n  useDocumentVersions,\n  useSetPerspective,\n  useWorkspace,\n} from 'sanity'\nimport {PerspectiveContext, RawPerspectiveContext} from 'sanity/_singletons'\n\n// Clears URL for cardinality one releases when document doesn't exist in selected release\nconst DocumentPerspectiveResetHandler = ({documentId}: {documentId: string}) => {\n  const rawContext = useContext(RawPerspectiveContext)\n  const {data: documentVersions, loading: documentVersionsLoading} = useDocumentVersions({\n    documentId,\n  })\n  const setPerspective = useSetPerspective()\n\n  useEffect(() => {\n    if (documentVersionsLoading || !rawContext) {\n      return\n    }\n\n    if (!isCardinalityOnePerspective(rawContext.selectedPerspective)) {\n      return\n    }\n\n    if (!documentVersions?.length) {\n      setPerspective(undefined)\n      return\n    }\n\n    const releasesIds = documentVersions.map((id) => getVersionFromId(id))\n    const documentExistsInRelease = releasesIds.includes(rawContext.selectedReleaseId!)\n\n    if (!documentExistsInRelease) {\n      setPerspective(undefined)\n    }\n  }, [documentId, rawContext, documentVersions, documentVersionsLoading, setPerspective])\n\n  return null\n}\n\n/**\n * @internal\n * Exposes cardinality one releases as selectedPerspective through PerspectiveContext\n */\nexport function DocumentPerspectiveProvider({\n  children,\n  documentId,\n}: {\n  children: ReactNode\n  documentId: string\n}) {\n  const rawContext = useContext(RawPerspectiveContext)\n  const mappedContext = useContext(PerspectiveContext)\n  const {data: documentVersions, loading: documentVersionsLoading} = useDocumentVersions({\n    documentId,\n  })\n\n  const {\n    document: {\n      drafts: {enabled: isDraftModelEnabled},\n    },\n  } = useWorkspace()\n  const defaultPerspective = isDraftModelEnabled ? LATEST : PUBLISHED\n\n  const value = useMemo<PerspectiveContextValue | null>(() => {\n    if (!rawContext || !mappedContext) return mappedContext\n\n    if (!isCardinalityOnePerspective(rawContext.selectedPerspective)) {\n      return mappedContext\n    }\n\n    // Default to drafts while loading or if no versions exist\n    if (documentVersionsLoading || !documentVersions?.length) {\n      return {\n        ...mappedContext,\n        selectedPerspective: defaultPerspective,\n        selectedPerspectiveName: undefined,\n        selectedReleaseId: undefined,\n      }\n    }\n\n    const releasesIds = documentVersions.map((id) => getVersionFromId(id))\n    const documentExistsInRelease = releasesIds.includes(rawContext.selectedReleaseId!)\n\n    // use drafts if document doesn't exist in the selected cardinality one release\n    if (!documentExistsInRelease) {\n      return {\n        ...mappedContext,\n        selectedPerspective: defaultPerspective,\n        selectedPerspectiveName: undefined,\n        selectedReleaseId: undefined,\n      }\n    }\n\n    // Use raw unmapped values when document exists in cardinality one release\n    return {\n      ...mappedContext,\n      selectedPerspective: rawContext.selectedPerspective,\n      selectedPerspectiveName: rawContext.selectedPerspectiveName,\n      selectedReleaseId: rawContext.selectedReleaseId,\n    }\n  }, [rawContext, mappedContext, documentVersionsLoading, documentVersions, defaultPerspective])\n\n  if (!value) {\n    return <>{children}</>\n  }\n\n  return (\n    <PerspectiveContext.Provider value={value}>\n      {children}\n      <DocumentPerspectiveResetHandler documentId={documentId} />\n    </PerspectiveContext.Provider>\n  )\n}\n","import {memo} from 'react'\nimport {getPublishedId, useSource} from 'sanity'\n\nimport {DocumentEventsPane} from './DocumentEventsPane'\nimport {DocumentPaneWithLegacyTimelineStore} from './DocumentPaneLegacyTimeline'\nimport {DocumentPerspectiveProvider} from './DocumentPerspectiveProvider'\nimport {type DocumentPaneProviderProps} from './types'\n\n/**\n * @internal\n */\nexport const DocumentPaneProviderWrapper = memo((props: DocumentPaneProviderProps) => {\n  const source = useSource()\n  const documentId = getPublishedId(props.itemId)\n\n  return (\n    <DocumentPerspectiveProvider documentId={documentId}>\n      {source.beta?.eventsAPI?.documents ? (\n        <DocumentEventsPane {...props} />\n      ) : (\n        <DocumentPaneWithLegacyTimelineStore {...props} />\n      )}\n    </DocumentPerspectiveProvider>\n  )\n})\nDocumentPaneProviderWrapper.displayName = 'Memo(DocumentPaneProviderWrapper)'\n","import {useEffect, useRef} from 'react'\nimport {usePerspective} from 'sanity'\nimport {useEffectEvent} from 'use-effect-event'\n\nimport {usePaneRouter} from '../../components'\nimport {EMPTY_PARAMS} from './constants'\n\n/**\n * This hooks takes care of resetting the history related params when the perspective changes.\n * It needs to be placed in a stable component, like the `DocumentPane`, which won't be unmounted when the perspective changes.\n */\nexport function useResetHistoryParams() {\n  const {params = EMPTY_PARAMS, setParams} = usePaneRouter()\n\n  const {selectedPerspectiveName} = usePerspective()\n  const isMounted = useRef(false)\n\n  const updateHistoryParams = useEffectEvent((_perspective?: string) => {\n    // Check if any of the history related params are set, and reset them, don't unnecessarily update the params\n    const PARAMS_TO_UPDATE = ['since', 'historyVersion', 'rev', 'preserveRev']\n    const shouldUpdateParams = PARAMS_TO_UPDATE.some((param) => params[param])\n    if (!shouldUpdateParams) return\n\n    setParams({\n      ...params,\n      // Reset the history related params when the perspective changes, as they don't make sense\n      // in the context of the new perspective - preserveRev is used when setting draft revision.\n      rev: params.preserveRev === 'true' ? params.rev : undefined,\n      preserveRev: undefined,\n      since: undefined,\n      historyVersion: undefined,\n    })\n  })\n  useEffect(() => {\n    // Skip the first run to avoid resetting the params on initial load\n    if (isMounted.current) {\n      updateHistoryParams(selectedPerspectiveName)\n    }\n  }, [selectedPerspectiveName])\n\n  useEffect(() => {\n    isMounted.current = true\n    return () => {\n      isMounted.current = false\n    }\n  }, [])\n}\n","import {type Path} from '@sanity/types'\nimport {Stack, Text} from '@sanity/ui'\nimport {fromString as pathFromString} from '@sanity/util/paths'\nimport {memo, useMemo} from 'react'\nimport {\n  CopyPasteProvider,\n  ReferenceInputOptionsProvider,\n  SourceProvider,\n  Translate,\n  useDocumentType,\n  usePerspective,\n  useSource,\n  useTemplatePermissions,\n  useTemplates,\n  useTranslation,\n} from 'sanity'\n\nimport {usePaneRouter} from '../../components'\nimport {DiffViewDocumentLayout} from '../../diffView/plugin/DiffViewDocumentLayout'\nimport {structureLocaleNamespace} from '../../i18n'\nimport {type DocumentPaneNode} from '../../types'\nimport {ErrorPane} from '../error'\nimport {LoadingPane} from '../loading'\nimport {CommentsWrapper} from './comments'\nimport {useDocumentLayoutComponent} from './document-layout'\nimport {DocumentPaneProviderWrapper} from './DocumentPaneProviderWrapper'\nimport {type DocumentPaneProviderProps} from './types'\nimport {useResetHistoryParams} from './useResetHistoryParams'\n\ntype DocumentPaneOptions = DocumentPaneNode['options']\n\n/**\n * @internal\n */\nexport const DocumentPane = memo(function DocumentPane(props: DocumentPaneProviderProps) {\n  const {name: parentSourceName} = useSource()\n\n  return (\n    <SourceProvider name={props.pane.source || parentSourceName}>\n      <CopyPasteProvider>\n        <DocumentPaneInner {...props} />\n      </CopyPasteProvider>\n    </SourceProvider>\n  )\n})\n\nfunction DocumentPaneInner(props: DocumentPaneProviderProps) {\n  const {pane, paneKey} = props\n  const {resolveNewDocumentOptions} = useSource().document\n  const {selectedPerspectiveName} = usePerspective()\n  const paneRouter = usePaneRouter()\n  const options = usePaneOptions(pane.options, paneRouter.params)\n  const {documentType, isLoaded: isDocumentLoaded} = useDocumentType(options.id, options.type)\n  useResetHistoryParams()\n  const DocumentLayout = useDocumentLayoutComponent()\n\n  // The templates that should be creatable from inside this document pane.\n  // For example, from the \"Create new\" menu in reference inputs.\n  const templateItems = useMemo(() => {\n    return resolveNewDocumentOptions({\n      type: 'document',\n      documentId: options.id,\n      schemaType: options.type,\n    })\n  }, [options.id, options.type, resolveNewDocumentOptions])\n\n  const [templatePermissions, isTemplatePermissionsLoading] = useTemplatePermissions({\n    templateItems,\n  })\n  const isLoaded = isDocumentLoaded && !isTemplatePermissionsLoading\n\n  const providerProps = useMemo(() => {\n    return isLoaded && documentType && options.type !== documentType\n      ? mergeDocumentType(props, options, documentType)\n      : props\n  }, [props, documentType, isLoaded, options])\n\n  const {ReferenceChildLink, handleEditReference, groupIndex, routerPanesState} = paneRouter\n  const childParams = routerPanesState[groupIndex + 1]?.[0].params || {}\n  const routerPanesStateLength = routerPanesState.length\n  const {parentRefPath} = childParams\n\n  const activePath: {path: Path; state: 'selected' | 'pressed' | 'none'} = useMemo(() => {\n    return parentRefPath\n      ? {\n          path: pathFromString(parentRefPath),\n          state:\n            groupIndex >= routerPanesStateLength - 1\n              ? 'none'\n              : groupIndex >= routerPanesStateLength - 2\n                ? 'selected'\n                : 'pressed',\n        }\n      : {path: [], state: 'none'}\n  }, [parentRefPath, groupIndex, routerPanesStateLength])\n\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  if (options.type === '*' && !isLoaded) {\n    return (\n      <LoadingPane\n        flex={2.5}\n        minWidth={320}\n        paneKey={paneKey}\n        title={t('panes.document-pane.document-not-found.loading')}\n      />\n    )\n  }\n\n  if (!documentType) {\n    return (\n      <ErrorPane\n        flex={2.5}\n        minWidth={320}\n        paneKey={paneKey}\n        title={t('panes.document-pane.document-not-found.title')}\n      >\n        <Stack space={4}>\n          <Text as=\"p\">\n            <Translate\n              t={t}\n              i18nKey=\"panes.document-pane.document-not-found.text\"\n              values={{id: options.id}}\n              components={{Code: ({children}) => <code>{children}</code>}}\n            />\n          </Text>\n        </Stack>\n      </ErrorPane>\n    )\n  }\n\n  return (\n    <DocumentPaneProviderWrapper\n      // this needs to be here to avoid formState from being re-used across (incompatible) document types\n      // see https://github.com/sanity-io/sanity/discussions/3794 for a description of the problem\n      key={`${documentType}-${options.id}-${selectedPerspectiveName || ''}`}\n      {...providerProps}\n    >\n      {/* NOTE: this is a temporary location for this provider until we */}\n      {/* stabilize the reference input options formally in the form builder */}\n      <ReferenceInputOptionsProvider\n        EditReferenceLinkComponent={ReferenceChildLink}\n        onEditReference={handleEditReference}\n        initialValueTemplateItems={templatePermissions}\n        activePath={activePath}\n      >\n        <DiffViewDocumentLayout documentId={options.id} documentType={options.type}>\n          <CommentsWrapper documentId={options.id} documentType={options.type}>\n            <DocumentLayout documentId={options.id} documentType={options.type} />\n          </CommentsWrapper>\n        </DiffViewDocumentLayout>\n      </ReferenceInputOptionsProvider>\n    </DocumentPaneProviderWrapper>\n  )\n}\n\n/**\n * @internal\n */\nexport function usePaneOptions(\n  options: DocumentPaneOptions,\n  params: Record<string, string | undefined> = {},\n): DocumentPaneOptions {\n  const templates = useTemplates()\n\n  return useMemo(() => {\n    // The document type is provided, so return\n    if (options.type && options.type !== '*') {\n      return options\n    }\n\n    // Attempt to derive document type from the template configuration\n    const templateName = options.template || params.template\n    const template = templateName ? templates.find((t) => t.id === templateName) : undefined\n    const documentType = template?.schemaType\n\n    // No document type was found in a template\n    if (!documentType) {\n      return options\n    }\n\n    // The template provided the document type, so modify the pane’s `options` property\n    return {...options, type: documentType}\n  }, [options, params.template, templates])\n}\n\nfunction mergeDocumentType(\n  props: DocumentPaneProviderProps,\n  options: DocumentPaneOptions,\n  documentType: string,\n): DocumentPaneProviderProps {\n  return {\n    ...props,\n    pane: {\n      ...props.pane,\n      options: {...options, type: documentType},\n    },\n  }\n}\n","import {type ComponentType, type ForwardedRef, forwardRef, useContext, useMemo} from 'react'\nimport {PaneRouterContext} from 'sanity/_singletons'\nimport {StateLink} from 'sanity/router'\n\nimport {type BackLinkProps} from './types'\n\n/**\n * @internal\n */\nexport const BackLink = forwardRef(function BackLink(\n  props: BackLinkProps,\n  ref: ForwardedRef<HTMLAnchorElement>,\n) {\n  const {routerPanesState, groupIndex} = useContext(PaneRouterContext)\n  const panes = useMemo(() => routerPanesState.slice(0, groupIndex), [groupIndex, routerPanesState])\n  const state = useMemo(() => ({panes}), [panes])\n\n  return <StateLink {...props} ref={ref} state={state} />\n}) as ComponentType<BackLinkProps>\n","import {type ForwardedRef, forwardRef, useContext} from 'react'\nimport {PaneRouterContext} from 'sanity/_singletons'\nimport {StateLink} from 'sanity/router'\n\nimport {type ChildLinkProps} from './types'\n\n/**\n * @internal\n */\nexport const ChildLink = forwardRef(function ChildLink(\n  props: ChildLinkProps,\n  ref: ForwardedRef<HTMLAnchorElement>,\n) {\n  const {childId, childPayload, childParameters, ...rest} = props\n  const {routerPanesState, groupIndex} = useContext(PaneRouterContext)\n\n  return (\n    <StateLink\n      {...rest}\n      ref={ref}\n      state={{\n        panes: [\n          ...routerPanesState.slice(0, groupIndex + 1),\n          [{id: childId, params: childParameters, payload: childPayload}],\n        ],\n      }}\n    />\n  )\n})\n","import {type ForwardedRef, forwardRef, type ReactNode, useContext, useMemo} from 'react'\nimport {useUnique} from 'sanity'\nimport {PaneRouterContext} from 'sanity/_singletons'\nimport {StateLink} from 'sanity/router'\n\ninterface ParameterizedLinkProps {\n  params?: Record<string, string>\n  payload?: unknown\n  children?: ReactNode\n}\n\n/**\n * @internal\n */\nexport const ParameterizedLink = forwardRef(function ParameterizedLink(\n  props: ParameterizedLinkProps,\n  ref: ForwardedRef<HTMLAnchorElement>,\n) {\n  const {routerPanesState: currentPanes, groupIndex, siblingIndex} = useContext(PaneRouterContext)\n  const {params, payload, ...rest} = props\n  const nextParams = useUnique(params)\n  const nextPayload = useUnique(payload)\n\n  const nextState = useMemo(() => {\n    const currentGroup = currentPanes[groupIndex]\n    const currentSibling = currentGroup[siblingIndex]\n\n    const nextSibling = {\n      ...currentSibling,\n      params: nextParams ?? currentSibling.params,\n      payload: nextPayload ?? currentSibling.payload,\n    }\n\n    const nextGroup = [\n      ...currentGroup.slice(0, siblingIndex),\n      nextSibling,\n      ...currentGroup.slice(siblingIndex + 1),\n    ]\n\n    const nextPanes = [\n      ...currentPanes.slice(0, groupIndex),\n      nextGroup,\n      ...currentPanes.slice(groupIndex + 1),\n    ]\n\n    return {panes: nextPanes}\n  }, [currentPanes, groupIndex, nextParams, nextPayload, siblingIndex])\n\n  return <StateLink ref={ref} {...rest} state={nextState} />\n})\n","import {toString as pathToString} from '@sanity/util/paths'\nimport {type ForwardedRef, forwardRef} from 'react'\n\nimport {ChildLink} from './ChildLink'\nimport {type ReferenceChildLinkProps} from './types'\n\nexport const ReferenceChildLink = forwardRef(function ReferenceChildLink(\n  {documentId, documentType, parentRefPath, children, template, ...rest}: ReferenceChildLinkProps,\n  ref: ForwardedRef<HTMLAnchorElement>,\n) {\n  return (\n    <ChildLink\n      {...rest}\n      ref={ref}\n      childId={documentId}\n      childPayload={template?.params}\n      childParameters={{\n        type: documentType,\n        parentRefPath: pathToString(parentRefPath),\n        ...(template && {template: template?.id}),\n      }}\n    >\n      {children}\n    </ChildLink>\n  )\n})\n","import {toString as pathToString} from '@sanity/util/paths'\nimport {omit} from 'lodash'\nimport {type ReactNode, useCallback, useMemo} from 'react'\nimport {PaneRouterContext} from 'sanity/_singletons'\nimport {useRouter, useRouterState} from 'sanity/router'\n\nimport {type RouterPaneGroup, type RouterPanes, type RouterPaneSibling} from '../../types'\nimport {usePaneLayout} from '../pane/usePaneLayout'\nimport {BackLink} from './BackLink'\nimport {ChildLink} from './ChildLink'\nimport {ParameterizedLink} from './ParameterizedLink'\nimport {ReferenceChildLink} from './ReferenceChildLink'\nimport {type PaneRouterContextValue} from './types'\n\nconst emptyArray: never[] = []\n\n/**\n * @internal\n */\nexport function PaneRouterProvider(props: {\n  children: ReactNode\n  flatIndex: number\n  index: number\n  params: Record<string, string | undefined>\n  payload: unknown\n  siblingIndex: number\n}) {\n  const {children, flatIndex, index, params, payload, siblingIndex} = props\n  const {navigate, navigateIntent, resolvePathFromState} = useRouter()\n  const routerState = useRouterState()\n  const {panes, expand} = usePaneLayout()\n  const routerPaneGroups: RouterPaneGroup[] = useMemo(\n    () => (routerState?.panes || emptyArray) as RouterPanes,\n    [routerState?.panes],\n  )\n  const lastPane = useMemo(() => panes?.[panes.length - 2], [panes])\n\n  const groupIndex = index - 1\n\n  const createNextRouterState = useCallback(\n    (modifier: (siblings: RouterPaneGroup, item: RouterPaneSibling) => RouterPaneGroup) => {\n      const currentGroup = routerPaneGroups[groupIndex] || []\n      const currentItem = currentGroup[siblingIndex]\n      const nextGroup = modifier(currentGroup, currentItem)\n      const nextPanes = [\n        ...routerPaneGroups.slice(0, groupIndex),\n        nextGroup,\n        ...routerPaneGroups.slice(groupIndex + 1),\n      ]\n      const nextRouterState = {...routerState, panes: nextPanes}\n\n      return nextRouterState\n    },\n    [groupIndex, routerPaneGroups, routerState, siblingIndex],\n  )\n\n  const modifyCurrentGroup = useCallback(\n    (modifier: (siblings: RouterPaneGroup, item: RouterPaneSibling) => RouterPaneGroup) => {\n      const nextRouterState = createNextRouterState(modifier)\n      setTimeout(() => navigate(nextRouterState), 0)\n      return nextRouterState\n    },\n    [createNextRouterState, navigate],\n  )\n\n  const createPathWithParams: PaneRouterContextValue['createPathWithParams'] = useCallback(\n    (nextParams) => {\n      const nextRouterState = createNextRouterState((siblings, item) => [\n        ...siblings.slice(0, siblingIndex),\n        {...item, params: nextParams},\n        ...siblings.slice(siblingIndex + 1),\n      ])\n\n      return resolvePathFromState(nextRouterState)\n    },\n    [createNextRouterState, resolvePathFromState, siblingIndex],\n  )\n\n  const setPayload: PaneRouterContextValue['setPayload'] = useCallback(\n    (nextPayload) => {\n      modifyCurrentGroup((siblings, item) => [\n        ...siblings.slice(0, siblingIndex),\n        {...item, payload: nextPayload},\n        ...siblings.slice(siblingIndex + 1),\n      ])\n    },\n    [modifyCurrentGroup, siblingIndex],\n  )\n\n  const setParams: PaneRouterContextValue['setParams'] = useCallback(\n    (nextParams) => {\n      modifyCurrentGroup((siblings, item) => [\n        ...siblings.slice(0, siblingIndex),\n        {...item, params: nextParams},\n        ...siblings.slice(siblingIndex + 1),\n      ])\n    },\n    [modifyCurrentGroup, siblingIndex],\n  )\n\n  const handleEditReference: PaneRouterContextValue['handleEditReference'] = useCallback(\n    ({id, parentRefPath, type, template, version}) => {\n      navigate({\n        panes: [\n          ...routerPaneGroups.slice(0, groupIndex + 1),\n          [\n            {\n              id,\n              params: {\n                template: template.id,\n                parentRefPath: pathToString(parentRefPath),\n                type,\n                version,\n              },\n              payload: template.params,\n            },\n          ],\n        ],\n      })\n    },\n    [groupIndex, navigate, routerPaneGroups],\n  )\n\n  const ctx: PaneRouterContextValue = useMemo(\n    () => ({\n      // Zero-based index (position) of pane, visually\n      index: flatIndex,\n\n      // Zero-based index of pane group (within URL structure)\n      groupIndex,\n\n      // Zero-based index of pane within sibling group\n      siblingIndex,\n\n      // Payload of the current pane\n      payload,\n\n      // Params of the current pane\n      params,\n\n      // Whether or not the pane has any siblings (within the same group)\n      hasGroupSiblings: routerPaneGroups[groupIndex]\n        ? routerPaneGroups[groupIndex].length > 1\n        : false,\n\n      // The length of the current group\n      groupLength: routerPaneGroups[groupIndex] ? routerPaneGroups[groupIndex].length : 0,\n\n      // Current router state for the \"panes\" property\n      routerPanesState: routerPaneGroups,\n\n      // Curried StateLink that passes the correct state automatically\n      ChildLink,\n\n      // Curried StateLink that pops off the last pane group\n      // Only pass if this is not the first pane\n      BackLink: flatIndex ? BackLink : undefined,\n\n      // A specialized `ChildLink` that takes in the needed props to open a\n      // referenced document to the right\n      ReferenceChildLink,\n\n      // Similar to `ReferenceChildLink` expect without the wrapping component\n      handleEditReference,\n\n      // Curried StateLink that passed the correct state, but merges params/payload\n      ParameterizedLink,\n\n      // Replaces the current pane with a new one\n      replaceCurrent: (opts = {}): void => {\n        modifyCurrentGroup(() => [\n          {id: opts.id || '', payload: opts.payload, params: opts.params || {}},\n        ])\n      },\n\n      // Removes the current pane from the group\n      closeCurrent: (): void => {\n        modifyCurrentGroup((siblings, item) =>\n          siblings.length > 1 ? siblings.filter((sibling) => sibling !== item) : siblings,\n        )\n      },\n\n      // Removes all panes to the right including current\n      closeCurrentAndAfter: (expandLast = true): void => {\n        if (expandLast && lastPane) {\n          expand(lastPane.element)\n        }\n        navigate({\n          panes: routerPaneGroups.slice(0, groupIndex),\n        })\n      },\n\n      // Duplicate the current pane, with optional overrides for payload, parameters\n      duplicateCurrent: (options): void => {\n        modifyCurrentGroup((siblings, item) => {\n          const duplicatedItem = {\n            ...item,\n            payload: options?.payload || item.payload,\n            params: options?.params || item.params,\n          }\n\n          return [\n            ...siblings.slice(0, siblingIndex),\n            duplicatedItem,\n            ...siblings.slice(siblingIndex),\n          ]\n        })\n      },\n\n      // Set the view for the current pane\n      setView: (viewId) => {\n        const restParams = omit(params, 'view')\n        return setParams(viewId ? {...restParams, view: viewId} : restParams)\n      },\n\n      // Set the parameters for the current pane\n      setParams,\n\n      // Set the payload for the current pane\n      setPayload,\n\n      // A function that returns a path with the given parameters\n      createPathWithParams,\n\n      // Proxied navigation to a given intent. Consider just exposing `router` instead?\n      navigateIntent,\n    }),\n    [\n      flatIndex,\n      groupIndex,\n      siblingIndex,\n      payload,\n      params,\n      routerPaneGroups,\n      handleEditReference,\n      setParams,\n      setPayload,\n      createPathWithParams,\n      navigateIntent,\n      modifyCurrentGroup,\n      lastPane,\n      navigate,\n      expand,\n    ],\n  )\n\n  return <PaneRouterContext.Provider value={ctx}>{children}</PaneRouterContext.Provider>\n}\n","import {Box, Text} from '@sanity/ui'\nimport {isRecord, Translate, useTranslation} from 'sanity'\n\nimport {Pane, PaneContent, PaneHeader} from '../../components/pane'\nimport {structureLocaleNamespace} from '../../i18n'\n\ninterface UnknownPaneProps {\n  isSelected: boolean\n  pane: unknown\n  paneKey: string\n}\n\n/**\n * @internal\n */\nexport function UnknownPane(props: UnknownPaneProps) {\n  const {isSelected, pane, paneKey} = props\n  const type = (isRecord(pane) && pane.type) || null\n  const {t} = useTranslation(structureLocaleNamespace)\n  return (\n    <Pane id={paneKey} selected={isSelected}>\n      <PaneHeader title={t('panes.unknown-pane-type.title')} />\n      <PaneContent>\n        <Box padding={4}>\n          {typeof type === 'string' ? (\n            <Text as=\"p\" muted>\n              <Translate\n                t={t}\n                i18nKey=\"panes.unknown-pane-type.unknown-type.text\"\n                values={{type}}\n              />\n            </Text>\n          ) : (\n            <Text as=\"p\" muted>\n              <Translate t={t} i18nKey=\"panes.unknown-pane-type.missing-type.text\" />\n            </Text>\n          )}\n        </Box>\n      </PaneContent>\n    </Pane>\n  )\n}\n","import {isEqual} from 'lodash'\nimport {lazy, memo, Suspense} from 'react'\n\nimport {PaneRouterProvider} from '../components/paneRouter'\nimport {type PaneNode} from '../types'\nimport {LoadingPane} from './loading'\nimport {UnknownPane} from './unknown'\n\ninterface StructureToolPaneProps {\n  active: boolean\n  childItemId: string | null\n  groupIndex: number\n  index: number\n  itemId: string\n  pane: PaneNode\n  paneKey: string\n  params: Record<string, string | undefined> & {perspective?: string}\n  payload: unknown\n  path: string\n  selected: boolean\n  siblingIndex: number\n}\n\n// TODO: audit this creates separate chunks\nconst paneMap = {\n  component: lazy(() => import('./userComponent')),\n  document: lazy(() => import('./document/pane')),\n  documentList: lazy(() => import('./documentList/pane')),\n  list: lazy(() => import('./list')),\n}\n\n/**\n * NOTE: The same pane might appear multiple times (split pane), so use index as tiebreaker\n *\n * @internal\n */\nexport const StructureToolPane = memo(\n  function StructureToolPane(props: StructureToolPaneProps) {\n    const {\n      active,\n      childItemId,\n      groupIndex,\n      index,\n      itemId,\n      pane,\n      paneKey,\n      params,\n      payload,\n      path,\n      selected,\n      siblingIndex,\n    } = props\n\n    const PaneComponent = paneMap[pane.type] || UnknownPane\n\n    return (\n      <PaneRouterProvider\n        flatIndex={index}\n        index={groupIndex}\n        params={params}\n        payload={payload}\n        siblingIndex={siblingIndex}\n      >\n        <Suspense fallback={<LoadingPane paneKey={paneKey} path={path} selected={selected} />}>\n          <PaneComponent\n            childItemId={childItemId || ''}\n            index={index}\n            itemId={itemId}\n            isActive={active}\n            isSelected={selected}\n            paneKey={paneKey}\n            // @ts-expect-error TS doesn't know how to handle this intersection\n            pane={pane}\n          />\n        </Suspense>\n      </PaneRouterProvider>\n    )\n  },\n  (\n    {params: prevParams = {}, payload: prevPayload = null, ...prev},\n    {params: nextParams = {}, payload: nextPayload = null, ...next},\n  ) => {\n    // deeply compare these objects (it's okay, they're small)\n    if (!isEqual(prevParams, nextParams)) return false\n    if (!isEqual(prevPayload, nextPayload)) return false\n\n    const keys = new Set([...Object.keys(prev), ...Object.keys(next)]) as Set<\n      keyof typeof next | keyof typeof prev\n    >\n\n    // then shallow equal the rest\n    for (const key of keys) {\n      if (prev[key] !== next[key]) return false\n    }\n\n    return true\n  },\n)\n","import {type SanityDocumentLike} from '@sanity/types'\nimport {useSchema, useTranslation} from 'sanity'\n\nimport {structureLocaleNamespace} from '../i18n'\nimport {useDocumentTitle} from '../panes'\n\nexport interface DocTitleProps {\n  document: SanityDocumentLike\n}\n\nexport function DocTitle(props: DocTitleProps) {\n  const {document: documentValue} = props\n  const schema = useSchema()\n  const schemaType = schema.get(documentValue._type)\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {title} = useDocumentTitle()\n\n  if (!schemaType) {\n    return <code>{t('doc-title.unknown-schema-type.text', {schemaType: documentValue._type})}</code>\n  }\n\n  return (\n    <>\n      {title || (\n        <span style={{color: 'var(--card-muted-fg-color)'}}>{t('doc-title.fallback.text')}</span>\n      )}\n    </>\n  )\n}\n","import {InfoOutlineIcon} from '@sanity/icons'\nimport {Box, Flex, Inline, rem, Text} from '@sanity/ui'\nimport {useTranslation} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Tooltip} from '../../../ui-components'\nimport {structureLocaleNamespace} from '../../i18n'\n\nexport const ChevronWrapper = styled(Box)`\n  margin-left: auto;\n`\n\nexport const CrossDatasetReferencesDetails = styled.details`\n  flex: none;\n\n  &[open] ${ChevronWrapper} {\n    transform: rotate(180deg);\n  }\n`\n\nexport const CrossDatasetReferencesSummary = styled.summary`\n  list-style: none;\n\n  &::-webkit-details-marker {\n    display: none;\n  }\n`\n\nexport const Table = styled.table`\n  width: 100%;\n  text-align: left;\n  padding: 0 ${({theme}) => rem(theme.sanity.space[2])};\n  border-collapse: collapse;\n\n  th {\n    padding: ${({theme}) => rem(theme.sanity.space[1])};\n  }\n\n  td {\n    padding: 0 ${({theme}) => rem(theme.sanity.space[1])};\n  }\n\n  tr > *:last-child {\n    text-align: right;\n  }\n`\n\nexport const DocumentIdFlex = styled(Flex)`\n  min-height: 33px;\n`\n\nexport const OtherReferenceCount = (props: {totalCount: number; references: unknown[]}) => {\n  const {t} = useTranslation(structureLocaleNamespace)\n  const difference = props.totalCount - props.references.length\n\n  if (!difference) return null\n\n  return (\n    <Box padding={2}>\n      <Inline space={2}>\n        <Text size={1} muted>\n          {t('confirm-delete-dialog.other-reference-count.title', {count: difference})}\n        </Text>\n\n        <Tooltip\n          portal\n          placement=\"top\"\n          content={t('confirm-delete-dialog.other-reference-count.tooltip')}\n        >\n          <Text size={1} muted>\n            <InfoOutlineIcon />\n          </Text>\n        </Tooltip>\n      </Inline>\n    </Box>\n  )\n}\n","import {type SanityDocument, type SchemaType} from '@sanity/types'\nimport {Flex} from '@sanity/ui'\nimport {type ComponentType, useMemo} from 'react'\nimport {useObservable} from 'react-rx'\nimport {\n  type DocumentPresence,\n  DocumentPreviewPresence,\n  type DocumentPreviewStore,\n  DocumentStatus,\n  DocumentStatusIndicator,\n  type GeneralPreviewLayoutKey,\n  getPreviewStateObservable,\n  getPreviewValueWithFallback,\n  SanityDefaultPreview,\n  useDocumentVersionInfo,\n  usePerspective,\n} from 'sanity'\n\nimport {TooltipDelayGroupProvider} from '../../../ui-components'\n\nexport interface PaneItemPreviewProps {\n  documentPreviewStore: DocumentPreviewStore\n  icon: ComponentType | false\n  layout: GeneralPreviewLayoutKey\n  presence?: DocumentPresence[]\n  schemaType: SchemaType\n  value: SanityDocument\n}\n\n/**\n * Preview component for _documents_ rendered in structure panes.\n *\n * Note that non-document previews are not handled by this component,\n * despite being pane items! Non-document previews bypass this entirely\n * and are rendered by `<SanityDefaultPreview>`.\n */\nexport function PaneItemPreview(props: PaneItemPreviewProps) {\n  const {icon, layout, presence, schemaType, value} = props\n\n  const versionsInfo = useDocumentVersionInfo(value._id)\n\n  const {perspectiveStack} = usePerspective()\n  const previewStateObservable = useMemo(() => {\n    return getPreviewStateObservable(\n      props.documentPreviewStore,\n      schemaType,\n      value._id,\n      perspectiveStack,\n    )\n  }, [props.documentPreviewStore, schemaType, value._id, perspectiveStack])\n\n  const {\n    snapshot,\n    original,\n    isLoading: previewIsLoading,\n  } = useObservable(previewStateObservable, {\n    snapshot: null,\n    isLoading: true,\n    original: null,\n  })\n\n  const isLoading = previewIsLoading\n\n  const status = isLoading ? null : (\n    <TooltipDelayGroupProvider>\n      <Flex align=\"center\" gap={3}>\n        {presence && presence.length > 0 && <DocumentPreviewPresence presence={presence} />}\n        <DocumentStatusIndicator\n          draft={versionsInfo.draft}\n          published={versionsInfo.published}\n          versions={versionsInfo.versions}\n        />\n      </Flex>\n    </TooltipDelayGroupProvider>\n  )\n\n  const tooltip = (\n    <DocumentStatus\n      draft={versionsInfo.draft}\n      published={versionsInfo.published}\n      versions={versionsInfo.versions}\n    />\n  )\n\n  return (\n    <SanityDefaultPreview\n      {...getPreviewValueWithFallback({snapshot, original, fallback: value})}\n      isPlaceholder={isLoading}\n      icon={icon}\n      layout={layout}\n      status={status}\n      tooltip={tooltip}\n    />\n  )\n}\n","import {type SanityDocument, type SchemaType} from '@sanity/types'\nimport {type ReactNode, useCallback} from 'react'\nimport {\n  type FIXME,\n  getPublishedId,\n  PreviewCard,\n  useDocumentPresence,\n  useDocumentPreviewStore,\n} from 'sanity'\n\nimport {PaneItemPreview} from '../paneItem/PaneItemPreview'\nimport {usePaneRouter} from '../paneRouter'\n\nconst EMPTY_ARRAY: [] = []\n\ninterface ReferencePreviewLinkProps {\n  onClick?: () => void\n  type: SchemaType & {icon?: any}\n  value: SanityDocument\n}\n\nexport function ReferencePreviewLink(props: ReferencePreviewLinkProps) {\n  const {onClick, type, value} = props\n  const publishedId = getPublishedId(value?._id)\n  const documentPresence = useDocumentPresence(publishedId)\n  const documentPreviewStore = useDocumentPreviewStore()\n  const {ReferenceChildLink} = usePaneRouter()\n\n  const Link = useCallback(\n    function LinkComponent(linkProps: {children: ReactNode}) {\n      return (\n        <ReferenceChildLink\n          documentId={value?._id}\n          documentType={type?.name}\n          parentRefPath={EMPTY_ARRAY}\n          {...linkProps}\n        />\n      )\n    },\n    [ReferenceChildLink, type?.name, value?._id],\n  )\n\n  return (\n    <PreviewCard __unstable_focusRing as={Link as FIXME} data-as=\"a\" onClick={onClick} radius={2}>\n      <PaneItemPreview\n        documentPreviewStore={documentPreviewStore}\n        icon={type?.icon}\n        layout=\"compact\"\n        presence={documentPresence?.length > 0 ? documentPresence : EMPTY_ARRAY}\n        schemaType={type}\n        value={value}\n      />\n    </PreviewCard>\n  )\n}\n","import {\n  ChevronDownIcon,\n  CopyIcon,\n  DocumentsIcon,\n  UnknownIcon,\n  WarningOutlineIcon,\n} from '@sanity/icons'\nimport {Box, Card, Flex, Stack, Text, useToast} from '@sanity/ui'\nimport {useCallback} from 'react'\nimport {SanityDefaultPreview, Translate, useSchema, useTranslation} from 'sanity'\n\nimport {Button} from '../../../ui-components'\nimport {structureLocaleNamespace} from '../../i18n'\nimport {\n  ChevronWrapper,\n  CrossDatasetReferencesDetails,\n  CrossDatasetReferencesSummary,\n  DocumentIdFlex,\n  OtherReferenceCount,\n  Table,\n} from './ConfirmDeleteDialogBody.styles'\nimport {ReferencePreviewLink} from './ReferencePreviewLink'\nimport {type ReferringDocuments} from './useReferringDocuments'\n\ntype DeletionConfirmationDialogBodyProps = Required<ReferringDocuments> & {\n  documentTitle: React.ReactNode\n  action: 'unpublish' | 'delete'\n  onReferenceLinkClick?: () => void\n}\n\n/**\n * The inner part of the `ConfirmDeleteDialog`. This is ran when both the\n * `crossDatasetReferences` and `internalReferences` are loaded.\n */\nexport function ConfirmDeleteDialogBody({\n  crossDatasetReferences,\n  internalReferences,\n  documentTitle,\n  totalCount,\n  action,\n  datasetNames,\n  hasUnknownDatasetNames,\n  onReferenceLinkClick,\n}: DeletionConfirmationDialogBodyProps) {\n  const schema = useSchema()\n  const toast = useToast()\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const renderPreviewItem = useCallback(\n    (item: any) => {\n      const type = schema.get(item._type)\n      if (type) {\n        return <ReferencePreviewLink type={type} value={item} onClick={onReferenceLinkClick} />\n      }\n\n      return (\n        // Padding added to match the ReferencePreviewLink styling\n        <Box padding={2}>\n          <SanityDefaultPreview\n            icon={UnknownIcon}\n            title={t('confirm-delete-dialog.preview-item.preview-unavailable.title')}\n            subtitle={t('confirm-delete-dialog.preview-item.preview-unavailable.subtitle', {\n              documentId: item._id,\n            })}\n            layout=\"default\"\n          />\n        </Box>\n      )\n    },\n    [schema, t, onReferenceLinkClick],\n  )\n\n  if (internalReferences?.totalCount === 0 && crossDatasetReferences?.totalCount === 0) {\n    return (\n      <Text as=\"p\" size={1}>\n        <Translate\n          t={t}\n          i18nKey=\"confirm-delete-dialog.confirmation.text\"\n          context={action}\n          components={{DocumentTitle: () => <strong>{documentTitle}</strong>}}\n        />\n      </Text>\n    )\n  }\n\n  // We do some extra checks to handle cases where you have unavailable dataset\n  // name(s) due to permissions, both alone and in combination with known datasets\n\n  // This normalizes one or more undefined dataset names to the catch-all `unavailable`\n  const normalizedDatasetNames = [\n    ...datasetNames,\n    ...(hasUnknownDatasetNames ? ['unavailable'] : []),\n  ]\n\n  const datasetSubtitle = t('confirm-delete-dialog.cdr-summary.subtitle', {\n    count: normalizedDatasetNames.length,\n    datasets: normalizedDatasetNames.join(', '),\n    context: hasUnknownDatasetNames && normalizedDatasetNames.length ? 'unavailable' : '',\n  })\n\n  return (\n    <Flex direction=\"column\" gap={4}>\n      <Card padding={3} radius={2} tone=\"caution\" flex=\"none\">\n        <Flex>\n          <Text aria-hidden=\"true\" size={1}>\n            <WarningOutlineIcon />\n          </Text>\n          <Box flex={1} marginLeft={3}>\n            <Text size={1}>\n              <Translate\n                i18nKey=\"confirm-delete-dialog.referring-document-count.text\"\n                components={{DocumentTitle: () => documentTitle}}\n                t={t}\n                values={{count: totalCount}}\n              />\n            </Text>\n          </Box>\n        </Flex>\n      </Card>\n      <Box flex=\"none\">\n        <Text size={1}>\n          <Translate\n            i18nKey=\"confirm-delete-dialog.referring-documents-descriptor.text\"\n            t={t}\n            context={action}\n            components={{DocumentTitle: () => documentTitle}}\n          />\n        </Text>\n      </Box>\n      <Card radius={2} shadow={1} flex=\"auto\" padding={2}>\n        <Flex direction=\"column\">\n          {internalReferences.totalCount > 0 && (\n            <Stack as=\"ul\" marginBottom={2} space={2} data-testid=\"internal-references\">\n              {internalReferences?.references.map((item) => (\n                <Box key={item._id} as=\"li\">\n                  {renderPreviewItem(item)}\n                </Box>\n              ))}\n\n              {internalReferences.totalCount > internalReferences.references.length && (\n                <Box as=\"li\" padding={3}>\n                  <OtherReferenceCount {...internalReferences} />\n                </Box>\n              )}\n            </Stack>\n          )}\n\n          {crossDatasetReferences.totalCount > 0 && (\n            <CrossDatasetReferencesDetails\n              data-testid=\"cross-dataset-references\"\n              style={{\n                // only add the border if needed\n                borderTop:\n                  internalReferences.totalCount > 0\n                    ? '1px solid var(--card-shadow-outline-color)'\n                    : undefined,\n              }}\n            >\n              <CrossDatasetReferencesSummary>\n                <Card\n                  as=\"a\"\n                  marginTop={internalReferences.totalCount > 0 ? 2 : 0}\n                  radius={2}\n                  shadow={1}\n                  paddingY={1}\n                >\n                  <Flex align=\"center\" gap={3} paddingX={3} paddingY={1}>\n                    <Text size={1}>\n                      <DocumentsIcon />\n                    </Text>\n                    <Stack space={2}>\n                      <Text textOverflow=\"ellipsis\" size={1}>\n                        {t('confirm-delete-dialog.cdr-summary.title', {\n                          count: normalizedDatasetNames.length,\n                          documentCount: t('confirm-delete-dialog.cdr-summary.document-count', {\n                            count: crossDatasetReferences.totalCount,\n                          }),\n                        })}\n                      </Text>\n                      <Text title={datasetSubtitle} textOverflow=\"ellipsis\" size={1} muted>\n                        {datasetSubtitle}\n                      </Text>\n                    </Stack>\n                    <ChevronWrapper>\n                      <Text muted size={1}>\n                        <ChevronDownIcon />\n                      </Text>\n                    </ChevronWrapper>\n                  </Flex>\n                </Card>\n              </CrossDatasetReferencesSummary>\n\n              <Box overflow=\"auto\" paddingTop={2}>\n                <Table>\n                  <thead>\n                    <tr>\n                      <th>\n                        <Text muted size={1} style={{minWidth: '5rem'}} weight=\"medium\">\n                          {t('confirm-delete-dialog.cdr-table.project-id.label')}\n                        </Text>\n                      </th>\n                      <th>\n                        <Text muted size={1} weight=\"medium\">\n                          {t('confirm-delete-dialog.cdr-table.dataset.label')}\n                        </Text>\n                      </th>\n                      <th>\n                        <Text muted size={1} weight=\"medium\">\n                          {t('confirm-delete-dialog.cdr-table.document-id.label')}\n                        </Text>\n                      </th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {crossDatasetReferences.references\n                      .filter((reference): reference is Required<typeof reference> => {\n                        return 'projectId' in reference\n                      })\n                      .map(({projectId, datasetName, documentId}, index) => (\n                        <tr key={`${documentId}-${index}`}>\n                          <td>\n                            <Text size={1}>{projectId}</Text>\n                          </td>\n                          <td>\n                            <Text size={1}>{datasetName || 'unavailable'}</Text>\n                          </td>\n                          <td>\n                            <DocumentIdFlex align=\"center\" gap={2} justify=\"flex-end\">\n                              <Text textOverflow=\"ellipsis\" size={1}>\n                                {documentId || 'unavailable'}\n                              </Text>\n                              {documentId && (\n                                <Button\n                                  mode=\"bleed\"\n                                  icon={CopyIcon}\n                                  tooltipProps={{\n                                    content: t(\n                                      'confirm-delete-dialog.cdr-table.copy-id-button.tooltip',\n                                    ),\n                                  }}\n                                  onClick={() => {\n                                    navigator.clipboard.writeText(documentId).catch(() => {\n                                      toast.push({\n                                        status: 'error',\n                                        title: t(\n                                          'confirm-delete-dialog.cdr-table.id-copied-toast.title-failed',\n                                        ),\n                                      })\n                                    })\n                                  }}\n                                />\n                              )}\n                            </DocumentIdFlex>\n                          </td>\n                        </tr>\n                      ))}\n                  </tbody>\n                </Table>\n\n                <OtherReferenceCount {...crossDatasetReferences} />\n              </Box>\n            </CrossDatasetReferencesDetails>\n          )}\n        </Flex>\n      </Card>\n      <Box flex=\"none\">\n        <Text size={1}>\n          <Translate\n            i18nKey=\"confirm-delete-dialog.referential-integrity-disclaimer.text\"\n            t={t}\n            context={action}\n            components={{DocumentTitle: () => documentTitle}}\n          />\n        </Text>\n      </Box>\n    </Flex>\n  )\n}\n","import {type ClientError, type SanityClient} from '@sanity/client'\nimport {useMemo} from 'react'\nimport {EMPTY, fromEvent, type Observable, of, timer} from 'rxjs'\nimport {\n  catchError,\n  distinctUntilChanged,\n  map,\n  shareReplay,\n  startWith,\n  switchMap,\n} from 'rxjs/operators'\nimport {\n  type AvailabilityResponse,\n  createHookFromObservableFactory,\n  DEFAULT_STUDIO_CLIENT_OPTIONS,\n  type DocumentStore,\n  getDraftId,\n  getPublishedId,\n  useClient,\n  useDocumentStore,\n} from 'sanity'\n\n// this is used in place of `instanceof` so the matching can be more robust and\n// won't have any issues with dual packages etc\n// https://nodejs.org/api/packages.html#dual-package-hazard\nfunction isClientError(e: unknown): e is ClientError {\n  if (typeof e !== 'object') return false\n  if (!e) return false\n  return 'statusCode' in e && 'response' in e\n}\n\nconst POLL_INTERVAL = 5000\n\n// only fetches when the document is visible\nlet visiblePoll$: Observable<number>\nconst getVisiblePoll$ = () => {\n  if (!visiblePoll$) {\n    visiblePoll$ = fromEvent(document, 'visibilitychange').pipe(\n      // add empty emission to have this fire on creation\n      startWith(null),\n      map(() => document.visibilityState === 'visible'),\n      distinctUntilChanged(),\n      switchMap((visible) =>\n        visible\n          ? // using timer instead of interval since timer will emit on creation\n            timer(0, POLL_INTERVAL)\n          : EMPTY,\n      ),\n      shareReplay({refCount: true, bufferSize: 1}),\n    )\n  }\n  return visiblePoll$\n}\n\nexport type ReferringDocuments = {\n  isLoading: boolean\n  totalCount: number\n  projectIds: string[]\n  datasetNames: string[]\n  hasUnknownDatasetNames: boolean\n  internalReferences?: {\n    totalCount: number\n    references: Array<{_id: string; _type: string}>\n  }\n  crossDatasetReferences?: {\n    totalCount: number\n    references: Array<{\n      /**\n       * The project ID of the document that is currently referencing the subject\n       * document. Unlike `documentId` and `datasetName`, this should always be\n       * defined.\n       */\n      projectId: string\n      /**\n       * The ID of the document that is currently referencing the subject\n       * document. This will be omitted if there is no access to the current\n       * project and dataset pair (e.g. if no `sanity-project-token` were\n       * configured)\n       */\n      documentId?: string\n      /**\n       * The dataset name that is currently referencing the subject document.\n       * This will be omitted if there is no access to the current project and\n       * dataset pair (e.g. if no `sanity-project-token` were configured)\n       */\n      datasetName?: string\n    }>\n  }\n}\n\nfunction getDocumentExistence(\n  documentId: string,\n  {versionedClient}: {versionedClient: SanityClient},\n): Observable<string | undefined> {\n  const draftId = getDraftId(documentId)\n  const publishedId = getPublishedId(documentId)\n  const requestOptions = {\n    uri: versionedClient.getDataUrl('doc', `${draftId},${publishedId}`),\n    json: true,\n    query: {excludeContent: 'true'},\n    tag: 'use-referring-documents.document-existence',\n  }\n  return versionedClient.observable.request<AvailabilityResponse>(requestOptions).pipe(\n    map(({omitted}) => {\n      const nonExistant = omitted.filter((doc) => doc.reason === 'existence')\n      if (nonExistant.length === 2) {\n        // None of the documents exist\n        return undefined\n      }\n\n      if (nonExistant.length === 0) {\n        // Both exist, so use the published one\n        return publishedId\n      }\n\n      // If the draft does not exist, use the published ID, and vice versa\n      return nonExistant.some((doc) => doc.id === draftId) ? publishedId : draftId\n    }),\n  )\n}\n\n/**\n * fetches the cross-dataset references using the client observable.request\n * method (for that requests can be automatically cancelled)\n */\nfunction fetchCrossDatasetReferences(\n  documentId: string,\n  context: {versionedClient: SanityClient},\n): Observable<ReferringDocuments['crossDatasetReferences']> {\n  const {versionedClient} = context\n\n  return getVisiblePoll$().pipe(\n    switchMap(() => getDocumentExistence(documentId, context)),\n    switchMap((checkDocumentId) => {\n      if (!checkDocumentId) {\n        return of({totalCount: 0, references: []})\n      }\n\n      const currentDataset = versionedClient.config().dataset\n\n      return versionedClient.observable\n        .request({\n          url: `/data/references/${currentDataset}/documents/${checkDocumentId}/to?excludeInternalReferences=true&excludePaths=true`,\n          tag: 'use-referring-documents.external',\n        })\n        .pipe(\n          catchError((e) => {\n            // it's possible that referencing document doesn't exist yet so the\n            // API will return a 404. In those cases, we want to catch and return\n            // a response with no references\n            if (isClientError(e) && e.statusCode === 404) {\n              return of({totalCount: 0, references: []})\n            }\n\n            throw e\n          }),\n        )\n    }),\n  )\n}\n\nconst useInternalReferences = createHookFromObservableFactory(\n  ([documentId, documentStore]: [string, DocumentStore]) => {\n    const referencesClause = '*[references($documentId)][0...100]{_id,_type}'\n    const totalClause = 'count(*[references($documentId)])'\n    const fetchQuery = `{\"references\":${referencesClause},\"totalCount\":${totalClause}}`\n    const listenQuery = '*[references($documentId)]'\n\n    return documentStore.listenQuery(\n      {fetch: fetchQuery, listen: listenQuery},\n      {documentId},\n      {tag: 'use-referring-documents', transitions: ['appear', 'disappear'], throttleTime: 5000},\n    ) as Observable<ReferringDocuments['internalReferences']>\n  },\n)\n\nconst useCrossDatasetReferences = createHookFromObservableFactory(\n  ([documentId, versionedClient]: [string, SanityClient]) => {\n    // (documentId: string, versionedClient: SanityClient) => {\n    return getVisiblePoll$().pipe(\n      switchMap(() =>\n        fetchCrossDatasetReferences(documentId, {\n          versionedClient,\n        }),\n      ),\n    )\n  },\n)\n\nexport function useReferringDocuments(documentId: string): ReferringDocuments {\n  const versionedClient = useClient(DEFAULT_STUDIO_CLIENT_OPTIONS)\n\n  const documentStore = useDocumentStore()\n  const publishedId = getPublishedId(documentId)\n\n  const [internalReferences, isInternalReferencesLoading] = useInternalReferences(\n    useMemo(() => [publishedId, documentStore], [documentStore, publishedId]),\n  )\n\n  const [crossDatasetReferences, isCrossDatasetReferencesLoading] = useCrossDatasetReferences(\n    useMemo(() => [publishedId, versionedClient], [publishedId, versionedClient]),\n  )\n\n  const projectIds = useMemo(() => {\n    return Array.from(\n      new Set(\n        crossDatasetReferences?.references\n          .map((crossDatasetReference) => crossDatasetReference.projectId)\n          .filter(Boolean),\n      ),\n    ).sort()\n  }, [crossDatasetReferences?.references])\n\n  const datasetNames = useMemo(() => {\n    return Array.from(\n      new Set<string>(\n        crossDatasetReferences?.references\n          // .filter((name) => typeof name === 'string')\n          .map((crossDatasetReference) => crossDatasetReference?.datasetName || '')\n          .filter((datasetName) => Boolean(datasetName) && datasetName !== ''),\n      ),\n    ).sort()\n  }, [crossDatasetReferences?.references])\n\n  const hasUnknownDatasetNames = useMemo(() => {\n    return Boolean(\n      crossDatasetReferences?.references.some(\n        (crossDatasetReference) => typeof crossDatasetReference.datasetName !== 'string',\n      ),\n    )\n  }, [crossDatasetReferences?.references])\n\n  return {\n    totalCount: (internalReferences?.totalCount || 0) + (crossDatasetReferences?.totalCount || 0),\n    projectIds,\n    datasetNames,\n    hasUnknownDatasetNames,\n    internalReferences,\n    crossDatasetReferences,\n    isLoading: isInternalReferencesLoading || isCrossDatasetReferencesLoading,\n  }\n}\n","import {Box, Flex} from '@sanity/ui'\nimport {useId, useMemo} from 'react'\nimport {LoadingBlock, useTranslation} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Dialog} from '../../../ui-components'\nimport {structureLocaleNamespace} from '../../i18n'\nimport {DocTitle} from '../DocTitle'\nimport {ConfirmDeleteDialogBody} from './ConfirmDeleteDialogBody'\nimport {useReferringDocuments} from './useReferringDocuments'\n\n/** @internal */\nexport const DialogBody = styled(Box)`\n  box-sizing: border-box;\n`\n\n/** @internal */\nexport const LoadingContainer = styled(Flex).attrs({\n  align: 'center',\n  direction: 'column',\n  justify: 'center',\n})`\n  height: 110px;\n`\n\n/** @internal */\nexport interface ConfirmDeleteDialogProps {\n  /**\n   * Incoming document ID used to find other referencing documents. This\n   * field respects draft IDs (e.g. if you pass in a published ID when one\n   * doesn't exist the document title may not show up).\n   */\n  id: string\n  /**\n   * The schema typename of the incoming document\n   */\n  type: string\n  /**\n   * The name of the action being done. (e.g. the `'unpublish'` action requires\n   * the same document deletion confirmation).\n   */\n  action?: 'delete' | 'unpublish'\n  onCancel: () => void\n  onConfirm: () => void\n}\n\n/**\n * A confirmation dialog used to prevent unwanted document deletes. Loads all\n * the referencing internal and cross-data references prior to showing the\n * delete button.\n *\n * @internal\n */\nexport function ConfirmDeleteDialog({\n  id,\n  type,\n  action = 'delete',\n  onCancel,\n  onConfirm,\n}: ConfirmDeleteDialogProps) {\n  const {t} = useTranslation(structureLocaleNamespace)\n  const dialogId = `deletion-confirmation-${useId()}`\n  const {\n    internalReferences,\n    crossDatasetReferences,\n    isLoading,\n    totalCount,\n    projectIds,\n    datasetNames,\n    hasUnknownDatasetNames,\n  } = useReferringDocuments(id)\n  const documentTitle = <DocTitle document={useMemo(() => ({_id: id, _type: type}), [id, type])} />\n  const showConfirmButton = !isLoading\n\n  return (\n    <Dialog\n      width={1}\n      id={dialogId}\n      header={t('confirm-delete-dialog.header.text', {context: action})}\n      footer={{\n        cancelButton: {\n          onClick: onCancel,\n          text: t('confirm-delete-dialog.cancel-button.text'),\n        },\n        confirmButton: showConfirmButton\n          ? {\n              text:\n                totalCount > 0\n                  ? t('confirm-delete-dialog.confirm-anyway-button.text', {context: action})\n                  : t('confirm-delete-dialog.confirm-button.text', {context: action}),\n              onClick: onConfirm,\n            }\n          : undefined,\n      }}\n      onClose={onCancel}\n      onClickOutside={onCancel}\n    >\n      <DialogBody>\n        {crossDatasetReferences && internalReferences && !isLoading ? (\n          <ConfirmDeleteDialogBody\n            crossDatasetReferences={crossDatasetReferences}\n            internalReferences={internalReferences}\n            documentTitle={documentTitle}\n            isLoading={isLoading}\n            totalCount={totalCount}\n            action={action}\n            projectIds={projectIds}\n            datasetNames={datasetNames}\n            hasUnknownDatasetNames={hasUnknownDatasetNames}\n            onReferenceLinkClick={onCancel}\n          />\n        ) : (\n          <LoadingContainer data-testid=\"loading-container\">\n            <LoadingBlock showText title={t('confirm-delete-dialog.loading.text')} />\n          </LoadingContainer>\n        )}\n      </DialogBody>\n    </Dialog>\n  )\n}\n","import {Box, Text} from '@sanity/ui'\nimport {type ComponentProps, useCallback, useId, useState} from 'react'\nimport {useTranslation} from 'sanity'\n\nimport {Dialog, ErrorBoundary} from '../../../ui-components'\nimport {structureLocaleNamespace} from '../../i18n'\nimport {ConfirmDeleteDialog, type ConfirmDeleteDialogProps} from './ConfirmDeleteDialog'\n\nexport type {ConfirmDeleteDialogProps}\n\ntype ArgType<T> = T extends (arg: infer U) => unknown ? U : never\ntype ErrorInfo = ArgType<ComponentProps<typeof ErrorBoundary>['onCatch']>\n\n/** @internal */\nfunction ConfirmDeleteDialogContainer(props: ConfirmDeleteDialogProps) {\n  const {t} = useTranslation(structureLocaleNamespace)\n  const id = useId()\n  const [error, setError] = useState<ErrorInfo | null>(null)\n  const handleRetry = useCallback(() => setError(null), [])\n\n  return error ? (\n    <Dialog\n      id={`dialog-error-${id}`}\n      data-testid=\"confirm-delete-error-dialog\"\n      header={t('confirm-delete-dialog.error.title.text')}\n      footer={{\n        confirmButton: {\n          text: t('confirm-delete-dialog.error.retry-button.text'),\n          onClick: handleRetry,\n          tone: 'default',\n        },\n      }}\n      onClose={props.onCancel}\n    >\n      <Box padding={4}>\n        <Text size={1}>{t('confirm-delete-dialog.error.message.text')}</Text>\n      </Box>\n    </Dialog>\n  ) : (\n    <ErrorBoundary onCatch={setError}>\n      <ConfirmDeleteDialog {...props} />\n    </ErrorBoundary>\n  )\n}\n\nexport {ConfirmDeleteDialogContainer as ConfirmDeleteDialog}\n","import {type ComponentProps, type ForwardedRef, forwardRef, type ReactNode, useMemo} from 'react'\nimport {IntentLink} from 'sanity/router'\n\nimport {Button, type ButtonProps} from '../../ui-components'\nimport {type PaneMenuItem} from '../types'\n\ntype RouterIntent = NonNullable<PaneMenuItem['intent']>\n\nexport const IntentButton = forwardRef(function IntentButton(\n  props: {\n    intent: RouterIntent\n  } & ButtonProps &\n    Omit<ComponentProps<typeof Button>, 'as' | 'href' | 'type'>,\n  ref: ForwardedRef<HTMLAnchorElement>,\n) {\n  const {intent, ...restProps} = props\n\n  const Link = useMemo(\n    () =>\n      // eslint-disable-next-line @typescript-eslint/no-shadow\n      forwardRef(function Link(\n        linkProps: {children: ReactNode},\n        linkRef: ForwardedRef<HTMLAnchorElement>,\n      ) {\n        return (\n          <IntentLink\n            {...linkProps}\n            intent={intent.type}\n            params={intent.params}\n            ref={linkRef}\n            searchParams={intent.searchParams}\n          />\n        )\n      }),\n    [intent],\n  )\n\n  return props.disabled ? (\n    <Button {...restProps} as=\"a\" role=\"link\" aria-disabled=\"true\" />\n  ) : (\n    <Button {...restProps} as={Link} data-as=\"a\" ref={ref as ForwardedRef<HTMLButtonElement>} />\n  )\n})\n","import {type ComponentProps, type ReactNode} from 'react'\nimport {InsufficientPermissionsMessage, useCurrentUser, useTranslation} from 'sanity'\n\nimport {Tooltip} from '../../../ui-components'\nimport {structureLocaleNamespace} from '../../i18n'\n\ninterface InsufficientPermissionsMessageTooltipProps {\n  reveal: boolean\n  /**\n   * delegates to `InsufficientPermissionsMessage`'s `context` prop\n   * @see InsufficientPermissionsMessage\n   */\n  context: ComponentProps<typeof InsufficientPermissionsMessage>['context']\n  loading: boolean\n  children: ReactNode\n}\n\nexport function InsufficientPermissionsMessageTooltip({\n  reveal,\n  context,\n  loading,\n  children,\n}: InsufficientPermissionsMessageTooltipProps) {\n  const currentUser = useCurrentUser()\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  if (!reveal) {\n    return <>{children}</>\n  }\n\n  return (\n    <Tooltip\n      content={\n        loading ? (\n          t('insufficient-permissions-message-tooltip.loading-text')\n        ) : (\n          <InsufficientPermissionsMessage context={context} currentUser={currentUser} />\n        )\n      }\n      portal\n    >\n      {/* this wrapping div is to allow mouse events */}\n      {/* while the child element is disabled */}\n      <div>{children}</div>\n    </Tooltip>\n  )\n}\n","import {AddIcon} from '@sanity/icons'\nimport {Menu} from '@sanity/ui'\nimport {type ComponentProps, type ForwardedRef, forwardRef, useMemo} from 'react'\nimport {\n  type InitialValueTemplateItem,\n  type ReleaseId,\n  type Template,\n  type TemplatePermissionsResult,\n  useGetI18nText,\n  usePerspective,\n  useTemplatePermissions,\n  useTemplates,\n  useTranslation,\n} from 'sanity'\nimport {IntentLink} from 'sanity/router'\n\nimport {Button, MenuButton, MenuItem, type PopoverProps} from '../../../ui-components'\nimport {structureLocaleNamespace} from '../../i18n'\nimport {IntentButton} from '../IntentButton'\nimport {InsufficientPermissionsMessageTooltip} from './InsufficientPermissionsMessageTooltip'\n\nexport type PaneHeaderIntentProps = ComponentProps<typeof IntentButton>['intent']\n\nconst POPOVER_PROPS: PopoverProps = {\n  constrainSize: true,\n  placement: 'bottom',\n  portal: true,\n}\n\nconst getIntent = (\n  templates: Template[],\n  item: InitialValueTemplateItem,\n  version?: ReleaseId,\n): PaneHeaderIntentProps | null => {\n  const typeName = templates.find((t) => t.id === item.templateId)?.schemaType\n  if (!typeName) return null\n\n  const baseParams = {\n    template: item.templateId,\n    type: typeName,\n    version,\n    id: item.initialDocumentId,\n  }\n\n  return {\n    type: 'create',\n    params: item.parameters ? [baseParams, item.parameters] : baseParams,\n    searchParams: version ? [['perspective', version]] : undefined,\n  }\n}\n\ninterface PaneHeaderCreateButtonProps {\n  templateItems: InitialValueTemplateItem[]\n}\n\nexport function PaneHeaderCreateButton({templateItems}: PaneHeaderCreateButtonProps) {\n  const templates = useTemplates()\n  const {selectedReleaseId} = usePerspective()\n\n  const {t} = useTranslation(structureLocaleNamespace)\n  const getI18nText = useGetI18nText([...templateItems, ...templates])\n\n  const [templatePermissions, isTemplatePermissionsLoading] = useTemplatePermissions({\n    templateItems,\n  })\n\n  const nothingGranted = useMemo(() => {\n    return (\n      !isTemplatePermissionsLoading &&\n      templatePermissions?.length !== 0 &&\n      templatePermissions?.every((permission) => !permission.granted)\n    )\n  }, [isTemplatePermissionsLoading, templatePermissions])\n\n  const permissionsById = useMemo(() => {\n    if (!templatePermissions) return {}\n    return templatePermissions.reduce<Record<string, TemplatePermissionsResult | undefined>>(\n      (acc, permission) => {\n        acc[permission.id] = permission\n        return acc\n      },\n      {},\n    )\n  }, [templatePermissions])\n\n  if (templateItems.length === 0) return null\n\n  if (nothingGranted) {\n    return (\n      <InsufficientPermissionsMessageTooltip\n        context=\"create-document-type\"\n        reveal\n        loading={isTemplatePermissionsLoading}\n      >\n        <Button\n          aria-label={t('pane-header.disabled-created-button.aria-label')}\n          icon={AddIcon}\n          data-testid=\"action-intent-button\"\n          disabled\n          mode=\"bleed\"\n          // This button handles the tooltip in a special way, won't reuse the forced tooltip.\n          tooltipProps={null}\n        />\n      </InsufficientPermissionsMessageTooltip>\n    )\n  }\n\n  if (templateItems.length === 1) {\n    const firstItem = templateItems[0]\n    const permissions = permissionsById[firstItem.id]\n    const disabled = !permissions?.granted\n    const intent = getIntent(templates, firstItem, selectedReleaseId)\n    if (!intent) return null\n\n    return (\n      <InsufficientPermissionsMessageTooltip\n        reveal={disabled}\n        loading={isTemplatePermissionsLoading}\n        context=\"create-document-type\"\n      >\n        <IntentButton\n          aria-label={getI18nText(firstItem).title}\n          icon={firstItem.icon || AddIcon}\n          intent={intent}\n          mode=\"bleed\"\n          disabled={disabled}\n          data-testid=\"action-intent-button\"\n          tooltipProps={{content: t('pane-header.create-new-button.tooltip')}}\n        />\n      </InsufficientPermissionsMessageTooltip>\n    )\n  }\n\n  return (\n    <MenuButton\n      button={\n        <Button\n          icon={AddIcon}\n          mode=\"bleed\"\n          data-testid=\"multi-action-intent-button\"\n          tooltipProps={{content: t('pane-header.create-new-button.tooltip')}}\n        />\n      }\n      id=\"create-menu\"\n      menu={\n        <Menu>\n          {templateItems.map((item, itemIndex) => {\n            const permissions = permissionsById[item.id]\n            const disabled = !permissions?.granted\n            const intent = getIntent(templates, item, selectedReleaseId)\n            const template = templates.find((i) => i.id === item.templateId)\n            if (!template || !intent) return null\n\n            const Link = forwardRef((linkProps, linkRef: ForwardedRef<never>) =>\n              disabled ? (\n                <button type=\"button\" disabled {...linkProps} ref={linkRef} />\n              ) : (\n                <IntentLink\n                  {...linkProps}\n                  intent={intent.type}\n                  params={intent.params}\n                  searchParams={intent.searchParams}\n                  ref={linkRef}\n                />\n              ),\n            )\n\n            Link.displayName = 'Link'\n\n            const {title} = getI18nText({\n              ...item,\n              // replace the title with the template title\n              title: item.title || getI18nText(template).title,\n            })\n\n            return (\n              <InsufficientPermissionsMessageTooltip\n                key={item.id}\n                context=\"create-document-type\"\n                reveal={disabled}\n                loading={isTemplatePermissionsLoading}\n              >\n                <MenuItem\n                  as={Link}\n                  data-as={disabled ? 'button' : 'a'}\n                  text={title}\n                  aria-label={\n                    disabled ? t('pane-header.disabled-created-button.aria-label') : title\n                  }\n                  disabled={disabled}\n                  data-testid={`action-intent-button-${itemIndex}`}\n                />\n              </InsufficientPermissionsMessageTooltip>\n            )\n          })}\n        </Menu>\n      }\n      popover={POPOVER_PROPS}\n    />\n  )\n}\n","import {Flex} from '@sanity/ui'\nimport {uniqBy} from 'lodash'\nimport {memo, useCallback, useMemo} from 'react'\nimport {EMPTY_ARRAY, EMPTY_OBJECT, type InitialValueTemplateItem, useTemplates} from 'sanity'\n\nimport {isMenuNodeButton, isNotMenuNodeButton, resolveMenuNodes} from '../../menuNodes'\nimport {\n  type PaneMenuItem,\n  type PaneMenuItemGroup,\n  type StructureToolPaneActionHandler,\n} from '../../types'\nimport {PaneContextMenuButton} from '../pane/PaneContextMenuButton'\nimport {PaneHeaderActionButton} from '../pane/PaneHeaderActionButton'\nimport {PaneHeaderCreateButton} from './PaneHeaderCreateButton'\n\nfunction isNonNullable<T>(value: T): value is NonNullable<T> {\n  return value !== null && value !== undefined\n}\n\n/**\n * hashes an object to a string where the order of the keys don't matter\n */\nconst hashObject = (value: unknown) => {\n  const sortObject = (v: unknown): unknown => {\n    if (typeof v !== 'object' || !v) return v\n    if (Array.isArray(v)) return v.map(sortObject)\n    return Object.entries(v).sort(([keyA], [keyB]) => keyA.localeCompare(keyB, 'en'))\n  }\n\n  const normalize = (v: unknown) => JSON.parse(JSON.stringify(v))\n\n  return JSON.stringify(sortObject(normalize(value)))\n}\n\ninterface PaneHeaderActionsProps {\n  initialValueTemplateItems?: InitialValueTemplateItem[]\n  menuItems?: PaneMenuItem[]\n  menuItemGroups?: PaneMenuItemGroup[]\n  actionHandlers?: Record<string, StructureToolPaneActionHandler>\n}\n\nexport const PaneHeaderActions = memo(function PaneHeaderActions(props: PaneHeaderActionsProps) {\n  const {\n    initialValueTemplateItems: initialValueTemplateItemsFromStructure = EMPTY_ARRAY,\n    menuItems = EMPTY_ARRAY,\n    menuItemGroups = EMPTY_ARRAY,\n    actionHandlers = EMPTY_OBJECT as Record<string, StructureToolPaneActionHandler>,\n  } = props\n\n  const templates = useTemplates()\n\n  const handleAction = useCallback(\n    (item: PaneMenuItem) => {\n      if (typeof item.action === 'string' && !(item.action in actionHandlers)) {\n        console.warn('No handler for action:', item.action)\n        return false\n      }\n\n      const handler =\n        typeof item.action === 'function'\n          ? item.action\n          : typeof item.action === 'string'\n            ? actionHandlers[item.action]\n            : null\n\n      if (handler) {\n        handler(item.params as Record<string, string>)\n        return true\n      }\n\n      return false\n    },\n    [actionHandlers],\n  )\n\n  const menuNodes = useMemo(\n    () =>\n      resolveMenuNodes({\n        actionHandler: handleAction,\n        menuItemGroups,\n        menuItems: menuItems\n          // remove items with `create` intents because those will get combined\n          // into one action button (see `initialValueTemplateItemFromMenuItems`)\n          .filter((item) => item.intent?.type !== 'create'),\n      }),\n    [handleAction, menuItemGroups, menuItems],\n  )\n\n  const actionNodes = useMemo(() => menuNodes.filter(isMenuNodeButton), [menuNodes])\n  const contextMenuNodes = useMemo(() => menuNodes.filter(isNotMenuNodeButton), [menuNodes])\n\n  const initialValueTemplateItemFromMenuItems = useMemo(() => {\n    return menuItems\n      .map((item, menuItemIndex) => {\n        if (item.intent?.type !== 'create') return null\n\n        const {params} = item.intent\n        if (!params) return null\n\n        const intentParams = Array.isArray(params) ? params[0] : params\n        const templateParams = Array.isArray(params) ? params[1] : undefined\n\n        // fallback to the schema type name as the template ID.\n        // by default, the initial template values are populated from every\n        // document type in the schema\n        const templateId = intentParams.template || intentParams.type\n        if (!templateId) return null\n\n        // eslint-disable-next-line max-nested-callbacks\n        const template = templates.find((t) => t.id === templateId)\n        // the template doesn't exist then the action might be disabled\n        if (!template) return null\n\n        const initialDocumentId = intentParams.id\n\n        return {\n          item,\n          template,\n          templateParams,\n          menuItemIndex,\n          initialDocumentId,\n        }\n      })\n      .filter(isNonNullable)\n      .map(({initialDocumentId, item, template, menuItemIndex, templateParams}) => {\n        const initialValueTemplateItem: InitialValueTemplateItem = {\n          id: `menuItem${menuItemIndex}`,\n          initialDocumentId,\n          templateId: template.id,\n          type: 'initialValueTemplateItem',\n          title: item.title || template.title,\n          i18n: item.i18n || template.i18n,\n          icon: item.icon as InitialValueTemplateItem['icon'],\n          description: template.description,\n          parameters: templateParams,\n          schemaType: template.schemaType,\n        }\n\n        return initialValueTemplateItem\n      })\n  }, [menuItems, templates])\n\n  const combinedInitialValueTemplates = useMemo(() => {\n    // this de-dupes create actions\n    return uniqBy(\n      [...initialValueTemplateItemFromMenuItems, ...initialValueTemplateItemsFromStructure],\n      (item) => hashObject([item.initialDocumentId, item.templateId, item.parameters]),\n    )\n  }, [initialValueTemplateItemFromMenuItems, initialValueTemplateItemsFromStructure])\n\n  return (\n    <Flex gap={1}>\n      <PaneHeaderCreateButton templateItems={combinedInitialValueTemplates} />\n\n      {actionNodes.map((node) => (\n        <PaneHeaderActionButton key={node.key} node={node} />\n      ))}\n\n      {contextMenuNodes.length > 0 && <PaneContextMenuButton nodes={contextMenuNodes} />}\n    </Flex>\n  )\n})\n","import {WarningOutlineIcon} from '@sanity/icons'\nimport {type SanityDocument} from '@sanity/types'\nimport {type GeneralPreviewLayoutKey, SanityDefaultPreview, Translate, useTranslation} from 'sanity'\n\nimport {structureLocaleNamespace} from '../i18n'\n\nexport interface MissingSchemaTypeProps {\n  layout?: GeneralPreviewLayoutKey\n  value: SanityDocument\n}\n\nexport function MissingSchemaType(props: MissingSchemaTypeProps) {\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {layout, value} = props\n\n  return (\n    <SanityDefaultPreview\n      title={\n        <em>\n          <Translate\n            t={t}\n            i18nKey=\"pane-item.missing-schema-type.title\"\n            components={{Code: 'code'}}\n            values={{documentType: value._type}}\n          />\n        </em>\n      }\n      subtitle={\n        <Translate\n          t={t}\n          i18nKey=\"pane-item.missing-schema-type.subtitle\"\n          components={{Code: 'code'}}\n          values={{documentId: value._id}}\n        />\n      }\n      media={() => <WarningOutlineIcon />}\n      layout={layout}\n    />\n  )\n}\n","import {ChevronRightIcon, DocumentIcon, FolderIcon} from '@sanity/icons'\nimport {\n  isSanityDocument,\n  type PreviewValue,\n  type SanityDocument,\n  type SchemaType,\n} from '@sanity/types'\nimport {Box, type CardProps, Text} from '@sanity/ui'\nimport {\n  type ComponentType,\n  type MouseEvent,\n  startTransition,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react'\nimport {\n  type FIXME,\n  type GeneralPreviewLayoutKey,\n  getPublishedId,\n  PreviewCard,\n  SanityDefaultPreview,\n  useDocumentPresence,\n  useDocumentPreviewStore,\n  useEditState,\n  useSchema,\n} from 'sanity'\n\nimport {MissingSchemaType} from '../MissingSchemaType'\nimport {usePaneRouter} from '../paneRouter'\nimport {PaneItemPreview} from './PaneItemPreview'\n\ninterface PaneItemProps {\n  id: string\n  layout?: GeneralPreviewLayoutKey\n  icon?: ComponentType<any> | false\n  pressed?: boolean\n  selected?: boolean\n  title?: string\n  value?: PreviewValue | SanityDocument\n  schemaType?: SchemaType\n  margin?: CardProps['margin']\n  marginBottom?: CardProps['marginBottom']\n  marginTop?: CardProps['marginTop']\n}\n\n/**\n * Return `false` if we explicitly disable the icon.\n * Otherwise return the passed icon or the schema type icon as a backup.\n */\nexport function getIconWithFallback(\n  icon: ComponentType<any> | false | undefined,\n  schemaType: SchemaType | undefined,\n  defaultIcon: ComponentType<any>,\n): ComponentType<any> | false {\n  if (icon === false) {\n    return false\n  }\n\n  return icon || (schemaType && schemaType.icon) || defaultIcon || false\n}\n\nexport function PaneItem(props: PaneItemProps) {\n  const {\n    icon,\n    id,\n    layout = 'default',\n    pressed,\n    schemaType,\n    selected,\n    title,\n    value,\n    margin,\n    marginBottom,\n    marginTop,\n  } = props\n  const schema = useSchema()\n  const documentPreviewStore = useDocumentPreviewStore()\n  const {ChildLink} = usePaneRouter()\n  const documentPresence = useDocumentPresence(id)\n  const hasSchemaType = Boolean(schemaType && schemaType.name && schema.get(schemaType.name))\n  const [clicked, setClicked] = useState<boolean>(false)\n\n  const preview = useMemo(() => {\n    if (value && isSanityDocument(value)) {\n      if (!schemaType || !hasSchemaType) {\n        return <MissingSchemaType value={value} />\n      }\n\n      return (\n        <PaneItemPreview\n          documentPreviewStore={documentPreviewStore}\n          icon={getIconWithFallback(icon, schemaType, DocumentIcon)}\n          layout={layout}\n          schemaType={schemaType}\n          value={value}\n          presence={documentPresence}\n        />\n      )\n    }\n\n    // Always render non-document values as compact previews\n    return (\n      <SanityDefaultPreview\n        status={\n          <Box style={{opacity: 0.5}}>\n            <Text muted size={1}>\n              <ChevronRightIcon />\n            </Text>\n          </Box>\n        }\n        icon={getIconWithFallback(icon, schemaType, FolderIcon)}\n        layout=\"compact\"\n        title={title}\n      />\n    )\n  }, [\n    documentPreviewStore,\n    hasSchemaType,\n    icon,\n    layout,\n    schemaType,\n    title,\n    value,\n    documentPresence,\n  ])\n\n  const handleClick = useCallback((e: MouseEvent<HTMLElement>) => {\n    if (e.metaKey) {\n      setClicked(false)\n      return\n    }\n\n    setClicked(true)\n  }, [])\n\n  // Reset `clicked` state when `selected` prop changes\n  useEffect(() => setClicked(false), [selected])\n\n  // Preloads the edit state on hover, using concurrent rendering with `startTransition` so preloads can be interrupted and not block rendering\n  const [preloading, setPreload] = useState(false)\n  const timeoutRef = useRef<ReturnType<typeof setTimeout> | null>(null)\n  const handleMouseEnter = useCallback(() => {\n    timeoutRef.current = setTimeout(() => startTransition(() => setPreload(true)), 400)\n  }, [])\n  const handleMouseLeave = useCallback(() => {\n    if (timeoutRef.current) clearTimeout(timeoutRef.current)\n    startTransition(() => setPreload(false))\n  }, [])\n\n  return (\n    <PreviewCard\n      data-testid={`pane-item-${title}`}\n      __unstable_focusRing\n      as={ChildLink as FIXME}\n      // @ts-expect-error - `childId` is a valid prop on `ChildLink`\n      childId={id}\n      data-as=\"a\"\n      margin={margin}\n      marginBottom={marginBottom}\n      marginTop={marginTop}\n      onClick={handleClick}\n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={handleMouseLeave}\n      pressed={pressed}\n      radius={2}\n      selected={selected || clicked}\n      sizing=\"border\"\n      tabIndex={-1}\n      tone=\"inherit\"\n    >\n      {preview}\n      {preloading && schemaType?.name && value && isSanityDocument(value) && (\n        <PreloadDocumentPane documentId={id} documentType={schemaType.name} />\n      )}\n    </PreviewCard>\n  )\n}\n\nfunction PreloadDocumentPane(props: {documentId: string; documentType: string}) {\n  const {documentId, documentType} = props\n  // Preload the edit state for the document, and keep it alive until mouse leave\n  useEditState(getPublishedId(documentId), documentType)\n\n  return null\n}\nPreloadDocumentPane.displayName = 'PreloadDocumentPane'\n","import {memo, type ReactNode, useMemo} from 'react'\nimport {\n  type DocumentActionComponent,\n  type DocumentActionDescription,\n  type DocumentActionGroup,\n  type DocumentActionProps,\n  getDraftId,\n  GetHookCollectionState,\n  getPublishedId,\n  useCanvasCompanionDoc,\n  useTranslation,\n} from 'sanity'\n\nimport {structureLocaleNamespace} from '../i18n'\n\n/** @internal */\nexport interface Action<Args, Description> {\n  (args: Args): Description | null\n}\nexport interface ResolvedAction extends DocumentActionDescription {\n  action?: DocumentActionComponent['action']\n}\n\n/** @internal */\nexport interface RenderActionCollectionProps {\n  actions: Action<DocumentActionProps, DocumentActionDescription>[]\n  actionProps: Omit<DocumentActionProps, 'onComplete'>\n  children: (props: {states: ResolvedAction[]}) => ReactNode\n  onActionComplete?: () => void\n  group?: DocumentActionGroup\n}\n\n/** @internal */\nexport const RenderActionCollectionState = memo((props: RenderActionCollectionProps) => {\n  const {actions, children, actionProps, onActionComplete, group} = props\n\n  return (\n    <GetHookCollectionState<Omit<DocumentActionProps, 'onComplete'>, ResolvedAction>\n      onReset={onActionComplete}\n      hooks={actions}\n      args={actionProps}\n      group={group}\n    >\n      {({states}) => (\n        <ActionsGuardWrapper\n          states={states}\n          documentId={\n            actionProps.liveEditSchemaType\n              ? getPublishedId(actionProps.id)\n              : getDraftId(actionProps.id)\n          }\n        >\n          {children}\n        </ActionsGuardWrapper>\n      )}\n    </GetHookCollectionState>\n  )\n})\nRenderActionCollectionState.displayName = 'Memo(RenderActionCollectionState)'\n\n/**\n * This is a list of the actions that are supported when a document is linked to Canvas.\n * Custom actions and actions that are not supported by Canvas will be disabled and will include a tooltip explaining that the action is not supported.\n */\nconst SUPPORTED_LINKED_TO_CANVAS_ACTIONS: DocumentActionComponent['action'][] = [\n  'delete',\n  'duplicate',\n  'publish',\n  'unpublish',\n  'unlinkFromCanvas',\n  'editInCanvas',\n  'linkToCanvas',\n  'schedule',\n]\n\ninterface ActionsGuardWrapperProps {\n  states: ResolvedAction[]\n  documentId: string\n  children: (props: {states: ResolvedAction[]}) => ReactNode\n}\n\nconst ActionsGuardWrapper = (props: ActionsGuardWrapperProps) => {\n  const {states, children, documentId} = props\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {isLinked} = useCanvasCompanionDoc(documentId)\n\n  const result = useMemo(() => {\n    if (isLinked) {\n      return children({\n        states: states.map((s) => {\n          if (!s.action || !SUPPORTED_LINKED_TO_CANVAS_ACTIONS.includes(s.action)) {\n            return {\n              ...s,\n              disabled: true,\n              title: t('action.disabled-by-canvas.tooltip'),\n            }\n          }\n          return s\n        }),\n      })\n    }\n    return children({states})\n  }, [children, states, t, isLinked])\n\n  return result\n}\n","import {memo, type ReactNode} from 'react'\nimport {\n  type DocumentBadgeDescription,\n  type DocumentBadgeProps,\n  type EditStateFor,\n  GetHookCollectionState,\n} from 'sanity'\n\n/** @internal */\nexport interface Badge<Args, Description> {\n  (args: Args): Description | null\n}\n\n/** @internal */\nexport interface RenderBadgeCollectionProps {\n  badges: Badge<DocumentBadgeProps, DocumentBadgeDescription>[]\n  badgeProps: EditStateFor\n  children: (props: {states: DocumentBadgeDescription[]}) => ReactNode\n}\n\n/** @internal */\nexport const RenderBadgeCollectionState = memo((props: RenderBadgeCollectionProps) => {\n  const {badges, children, badgeProps} = props\n\n  return (\n    <GetHookCollectionState<EditStateFor, DocumentBadgeDescription>\n      hooks={badges}\n      args={badgeProps}\n    >\n      {children}\n    </GetHookCollectionState>\n  )\n})\nRenderBadgeCollectionState.displayName = 'Memo(RenderBadgeCollectionState)'\n","import {type SortOrder} from './types'\n\nexport const PARTIAL_PAGE_LIMIT = 100\nexport const FULL_LIST_LIMIT = 2000\nexport const DEFAULT_ORDERING: SortOrder = {by: [{field: '_updatedAt', direction: 'desc'}]}\nexport const EMPTY_RECORD: Record<string, unknown> = {}\n\nexport const ENABLE_LRU_MEMO = true\n","import {type SanityDocument} from '@sanity/types'\nimport {Box, Container, Flex, Heading, Stack, Text} from '@sanity/ui'\nimport {useCallback, useEffect, useMemo, useState} from 'react'\nimport {\n  CommandList,\n  type CommandListRenderItemCallback,\n  ErrorActions,\n  type GeneralPreviewLayoutKey,\n  getPublishedId,\n  isDev,\n  LoadingBlock,\n  SanityDefaultPreview,\n  Translate,\n  useSchema,\n  useTranslation,\n} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Delay, PaneContent, PaneItem, usePane, usePaneLayout} from '../../components'\nimport {structureLocaleNamespace} from '../../i18n'\nimport {FULL_LIST_LIMIT} from './constants'\nimport {type DocumentListPaneItem, type LoadingVariant} from './types'\n\nconst RootBox = styled(Box)<{$opacity?: number}>`\n  position: relative;\n  opacity: ${(props) => props.$opacity || 1};\n  transition: opacity 0.4s;\n`\n\nconst CommandListBox = styled(Box)`\n  position: absolute;\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n`\n\ninterface DocumentListPaneContentProps {\n  childItemId?: string\n  error: {message: string} | null\n  filterIsSimpleTypeConstraint: boolean\n  hasMaxItems?: boolean\n  muted?: boolean\n  hasSearchQuery: boolean\n  isActive?: boolean\n  isLazyLoading: boolean\n  isLoading: boolean\n  isConnected?: boolean\n  autoRetry?: boolean\n  canRetry: boolean\n  retryCount?: number\n  isRetrying?: boolean\n  items: DocumentListPaneItem[]\n  layout?: GeneralPreviewLayoutKey\n  loadingVariant?: LoadingVariant\n  onEndReached: () => void\n  onRetry?: () => void\n  paneTitle: string\n  searchInputElement: HTMLInputElement | null\n  showIcons: boolean\n}\n\nconst SKELETON_ITEMS = [...Array(30).keys()]\n\nfunction LoadingView(props: {layout?: GeneralPreviewLayoutKey}) {\n  const {layout} = props\n\n  return (\n    <Stack paddingX={3} paddingY={2} paddingTop={0} space={1}>\n      {SKELETON_ITEMS.map((num) => (\n        <SanityDefaultPreview key={num} isPlaceholder layout={layout} />\n      ))}\n    </Stack>\n  )\n}\n\nexport function DocumentListPaneContent(props: DocumentListPaneContentProps) {\n  const {\n    childItemId,\n    error,\n    isRetrying,\n    autoRetry,\n    filterIsSimpleTypeConstraint,\n    hasMaxItems,\n    hasSearchQuery,\n    isActive,\n    isLazyLoading,\n    muted,\n    isLoading,\n    isConnected,\n    retryCount,\n    canRetry,\n    items,\n    layout,\n    loadingVariant,\n    onEndReached,\n    onRetry,\n    paneTitle,\n    searchInputElement,\n    showIcons,\n  } = props\n\n  const schema = useSchema()\n\n  const {collapsed: layoutCollapsed} = usePaneLayout()\n  const {collapsed, index} = usePane()\n  const [shouldRender, setShouldRender] = useState(!collapsed)\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const handleEndReached = useCallback(() => {\n    if (shouldRender) {\n      onEndReached()\n    }\n  }, [onEndReached, shouldRender])\n\n  useEffect(() => {\n    if (collapsed) return undefined\n\n    const timer = setTimeout(() => {\n      setShouldRender(true)\n    }, 0)\n\n    return () => {\n      clearTimeout(timer)\n    }\n  }, [collapsed, items])\n\n  const renderItem = useCallback<CommandListRenderItemCallback<SanityDocument>>(\n    (item, {activeIndex}) => {\n      const publishedId = getPublishedId(item._id)\n      const isSelected = childItemId === publishedId\n      const pressed = !isActive && isSelected\n      const selected = isActive && isSelected\n      const isLastItem = activeIndex === items.length - 1\n      const showSpinner = isLastItem && isLazyLoading\n      const showMaxItemsMessage = isLastItem && hasMaxItems\n\n      return (\n        <>\n          <PaneItem\n            icon={showIcons === false ? false : undefined}\n            id={publishedId}\n            layout={layout}\n            marginBottom={1}\n            pressed={pressed}\n            schemaType={schema.get(item._type)}\n            selected={selected}\n            value={item}\n          />\n\n          {showSpinner && <LoadingBlock />}\n\n          {showMaxItemsMessage && (\n            <Box marginY={1} paddingX={3} paddingY={4}>\n              <Text align=\"center\" muted size={1}>\n                {t('panes.document-list-pane.max-items.text', {limit: FULL_LIST_LIMIT})}\n              </Text>\n            </Box>\n          )}\n        </>\n      )\n    },\n    [childItemId, isActive, items.length, layout, schema, showIcons, hasMaxItems, isLazyLoading, t],\n  )\n\n  const noDocumentsContent = useMemo(() => {\n    if (hasSearchQuery) {\n      return (\n        <Flex align=\"center\" direction=\"column\" height=\"fill\" justify=\"center\">\n          <Container width={1}>\n            <Box paddingX={4} paddingY={5}>\n              <Text align=\"center\" muted>\n                {t('panes.document-list-pane.no-documents.text')}\n              </Text>\n            </Box>\n          </Container>\n        </Flex>\n      )\n    }\n\n    return (\n      <Flex align=\"center\" direction=\"column\" height=\"fill\" justify=\"center\">\n        <Container width={1}>\n          <Box paddingX={4} paddingY={5}>\n            <Text align=\"center\" muted>\n              {filterIsSimpleTypeConstraint\n                ? t('panes.document-list-pane.no-documents-of-type.text')\n                : t('panes.document-list-pane.no-matching-documents.text')}\n            </Text>\n          </Box>\n        </Container>\n      </Flex>\n    )\n  }, [filterIsSimpleTypeConstraint, hasSearchQuery, t])\n\n  const mainContent = useMemo(() => {\n    if (!shouldRender) {\n      return null\n    }\n\n    const isOnline = window.navigator.onLine\n    if (error) {\n      return (\n        <Flex align=\"center\" direction=\"column\" height=\"fill\" justify=\"center\">\n          <Container width={1}>\n            <Stack paddingX={4} paddingY={5} space={4}>\n              <Heading as=\"h3\">{t('panes.document-list-pane.error.title')}</Heading>\n              <Text as=\"p\">\n                {isDev ? (\n                  <Translate\n                    t={t}\n                    i18nKey=\"panes.document-list-pane.error.text.dev\"\n                    values={{error: error.message}}\n                    components={{Code: ({children}) => <code>{children}</code>}}\n                  />\n                ) : isOnline ? (\n                  t('panes.document-list-pane.error.text')\n                ) : (\n                  t('panes.document-list-pane.error.text.offline')\n                )}\n              </Text>\n              <ErrorActions\n                error={error}\n                eventId={null}\n                onRetry={isOnline && canRetry ? onRetry : undefined}\n                isRetrying={isRetrying}\n              />\n              {canRetry ? (\n                <Text as=\"p\" muted size={1}>\n                  {isRetrying\n                    ? t('panes.document-list-pane.error.retrying', {count: retryCount})\n                    : autoRetry\n                      ? t('panes.document-list-pane.error.will-retry-automatically', {\n                          count: retryCount,\n                        })\n                      : t('panes.document-list-pane.error.max-retries-attempted', {\n                          count: retryCount,\n                        })}\n                </Text>\n              ) : null}\n            </Stack>\n          </Container>\n        </Flex>\n      )\n    }\n\n    if (isConnected && !isLoading && items.length === 0) {\n      return noDocumentsContent\n    }\n\n    if (loadingVariant === 'initial' && isLoading) {\n      return (\n        <Delay ms={300}>\n          <LoadingView layout={layout} />\n        </Delay>\n      )\n    }\n\n    if (loadingVariant === 'spinner' && isLoading) {\n      return null\n    }\n\n    // prevents bug when panes won't render if first rendered while collapsed\n    const key = `${index}-${collapsed}`\n\n    return (\n      <RootBox overflow=\"hidden\" height=\"fill\" $opacity={muted ? 0.8 : 1}>\n        <CommandListBox>\n          <CommandList\n            key={key}\n            activeItemDataAttr=\"data-hovered\"\n            ariaLabel={paneTitle}\n            canReceiveFocus\n            inputElement={searchInputElement}\n            itemHeight={51}\n            items={items}\n            onEndReached={handleEndReached}\n            onlyShowSelectionWhenActive\n            overscan={10}\n            paddingBottom={1}\n            paddingX={3}\n            renderItem={renderItem}\n            wrapAround={false}\n          />\n        </CommandListBox>\n      </RootBox>\n    )\n  }, [\n    autoRetry,\n    canRetry,\n    collapsed,\n    error,\n    handleEndReached,\n    index,\n    isConnected,\n    isLoading,\n    isRetrying,\n    items,\n    layout,\n    loadingVariant,\n    muted,\n    noDocumentsContent,\n    onRetry,\n    paneTitle,\n    renderItem,\n    retryCount,\n    searchInputElement,\n    shouldRender,\n    t,\n  ])\n\n  return (\n    <PaneContent\n      data-testid=\"document-list-pane\"\n      overflow={layoutCollapsed || loadingVariant === 'initial' ? 'hidden' : 'auto'}\n    >\n      {mainContent}\n    </PaneContent>\n  )\n}\n","import {\n  isIndexSegment,\n  isKeySegment,\n  isReferenceSchemaType,\n  type ObjectField,\n  type ObjectFieldType,\n  type ObjectSchemaType,\n  type SanityDocumentLike,\n  type SchemaType,\n} from '@sanity/types'\nimport * as PathUtils from '@sanity/util/paths'\nimport {type ExprNode, parse} from 'groq-js'\nimport {collate, getPublishedId} from 'sanity'\n\nimport {type DocumentListPaneItem, type SortOrder} from './types'\n\nexport function getDocumentKey(value: DocumentListPaneItem, index: number): string {\n  return value._id ? getPublishedId(value._id) : `item-${index}`\n}\n\nexport function removePublishedWithDrafts(documents: SanityDocumentLike[]): DocumentListPaneItem[] {\n  return collate(documents).map((entry) => {\n    const doc = entry.draft || entry.published || entry.versions[0]\n    const hasDraft = Boolean(entry.draft)\n\n    return {\n      ...doc,\n      hasPublished: !!entry.published,\n      hasDraft,\n    }\n  }) as any\n}\n\nexport function applyOrderingFunctions(order: SortOrder, schemaType: ObjectSchemaType): SortOrder {\n  const orderBy = order.by.map((by) => {\n    // Skip those that already have a mapper\n    if (by.mapWith) {\n      return by\n    }\n\n    const fieldType = tryResolveSchemaTypeForPath(schemaType, by.field)\n    if (!fieldType) {\n      return by\n    }\n\n    // Note: order matters here, since the jsonType of a date field is `string`,\n    // but we want to apply `datetime()`, not `lower()`\n    if (fieldExtendsType(fieldType, 'datetime')) {\n      return {...by, mapWith: 'dateTime'}\n    }\n\n    if (fieldType.jsonType === 'string') {\n      return {...by, mapWith: 'lower'}\n    }\n\n    return by\n  })\n\n  return orderBy.every((item, index) => item === order.by[index]) ? order : {...order, by: orderBy}\n}\n\nfunction tryResolveSchemaTypeForPath(baseType: SchemaType, path: string): SchemaType | undefined {\n  const pathSegments = PathUtils.fromString(path)\n\n  let current: SchemaType | undefined = baseType\n  for (const segment of pathSegments) {\n    if (!current) {\n      return undefined\n    }\n\n    if (typeof segment === 'string') {\n      current = getFieldTypeByName(current, segment)\n      continue\n    }\n\n    const isArrayAccessor = isKeySegment(segment) || isIndexSegment(segment)\n    if (!isArrayAccessor || current.jsonType !== 'array') {\n      return undefined\n    }\n\n    const [memberType, otherType] = current.of || []\n    if (otherType || !memberType) {\n      // Can't figure out the type without knowing the value\n      return undefined\n    }\n\n    if (!isReferenceSchemaType(memberType)) {\n      current = memberType\n      continue\n    }\n\n    const [refType, otherRefType] = memberType.to || []\n    if (otherRefType || !refType) {\n      // Can't figure out the type without knowing the value\n      return undefined\n    }\n\n    current = refType\n  }\n\n  return current\n}\n\nfunction getFieldTypeByName(type: SchemaType, fieldName: string): SchemaType | undefined {\n  if (!('fields' in type)) {\n    return undefined\n  }\n\n  const fieldType = type.fields.find((field) => field.name === fieldName)\n  return fieldType ? fieldType.type : undefined\n}\n\nexport function fieldExtendsType(field: ObjectField | ObjectFieldType, ofType: string): boolean {\n  let current: SchemaType | undefined = field.type\n  while (current) {\n    if (current.name === ofType) {\n      return true\n    }\n\n    if (!current.type && current.jsonType === ofType) {\n      return true\n    }\n\n    current = current.type\n  }\n\n  return false\n}\n\n/**\n * Recursively extract static `_type`s from GROQ filter expressions. If the\n * types can't be statically determined then it will return `null`.\n */\n// eslint-disable-next-line complexity\nfunction findTypes(node: ExprNode): Set<string> | null {\n  switch (node.type) {\n    case 'OpCall': {\n      const {left, right} = node\n\n      switch (node.op) {\n        // e.g. `a == b`\n        case '==': {\n          // e.g. `_type == 'value'`\n          if (left.type === 'AccessAttribute' && left.name === '_type' && !left.base) {\n            if (right.type !== 'Value' || typeof right.value !== 'string') return null\n            return new Set([right.value])\n          }\n\n          // e.g. `'value' == _type`\n          if (right.type === 'AccessAttribute' && right.name === '_type' && !right.base) {\n            if (left.type !== 'Value' || typeof left.value !== 'string') return null\n            return new Set([left.value])\n          }\n\n          // otherwise, we can't determine the types statically\n          return null\n        }\n\n        // e.g. `a in b`\n        case 'in': {\n          // if `_type` is not on the left hand side of `in` then it can't be determined\n          if (left.type !== 'AccessAttribute' || left.name !== '_type' || left.base) return null\n          // if the right hand side is not an array then the types can't be determined\n          if (right.type !== 'Array') return null\n\n          const types = new Set<string>()\n          // iterate through all the types\n          for (const element of right.elements) {\n            // if we find a splat, then early return, we can't determine the types\n            if (element.isSplat) return null\n            // if the array element is not just a simple value, then early return\n            if (element.value.type !== 'Value') return null\n            // if the array element value is not a string, then early return\n            if (typeof element.value.value !== 'string') return null\n            // otherwise add the element value to the set of types\n            types.add(element.value.value)\n          }\n\n          // if there were any elements in the types set, return it\n          if (types.size) return types\n          // otherwise, the set of types cannot be determined\n          return null\n        }\n\n        default: {\n          return null\n        }\n      }\n    }\n\n    // groups can just be unwrapped, the AST preserves the order\n    case 'Group': {\n      return findTypes(node.base)\n    }\n\n    // e.g. `_type == 'a' || _type == 'b'`\n    // with Or nodes, if we can't determine the types for either the left or\n    // right hand side then we can't determine the types for any\n    // e.g. `_type == 'a' || isActive`\n    // — can't determine types because `isActive` could be true on another types\n    case 'Or': {\n      const left = findTypes(node.left)\n      if (!left) return null\n\n      const right = findTypes(node.right)\n      if (!right) return null\n\n      return new Set([...left, ...right])\n    }\n\n    // e.g. `_type == 'a' && isActive`\n    // with And nodes, we can determine the types as long as we can determine\n    // the types for one side. We can't determine the types if both are `null`.\n    case 'And': {\n      const left = findTypes(node.left)\n      const right = findTypes(node.right)\n\n      if (!left && !right) return null\n      return new Set([...(left || []), ...(right || [])])\n    }\n\n    default: {\n      return null\n    }\n  }\n}\n\nexport function findStaticTypesInFilter(\n  filter: string,\n  params: Record<string, unknown> = {},\n): string[] | null {\n  try {\n    const types = findTypes(parse(filter, {params}))\n    if (!types) return null\n\n    return Array.from(types).sort()\n  } catch {\n    // if we couldn't parse the filter, just return `null`\n    return null\n  }\n}\n","import {type ClientPerspective, type SanityClient} from '@sanity/client'\nimport {\n  asyncScheduler,\n  defer,\n  filter,\n  map,\n  merge,\n  mergeMap,\n  type Observable,\n  of,\n  partition,\n  share,\n  throttleTime,\n  throwError,\n  timer,\n} from 'rxjs'\nimport {scan} from 'rxjs/operators'\nimport {exhaustMapWithTrailing} from 'rxjs-exhaustmap-with-trailing'\nimport {\n  createSearch,\n  createSWR,\n  getSearchableTypes,\n  type SanityDocumentLike,\n  type Schema,\n  type SearchOptions,\n  type SearchStrategy,\n} from 'sanity'\n\nimport {getExtendedProjection} from '../../structureBuilder/util/getExtendedProjection'\nimport {type SortOrder} from './types'\n\ninterface ListenQueryOptions {\n  client: SanityClient\n  filter: string\n  limit: number\n  params: Record<string, unknown>\n  schema: Schema\n  searchQuery: string\n  sort: SortOrder\n  perspective?: ClientPerspective\n  staticTypeNames?: string[] | null\n  maxFieldDepth?: number\n  searchStrategy?: SearchStrategy\n}\n\nexport type SearchQueryEvent =\n  | {\n      type: 'reconnect'\n    }\n  | {type: 'result'; documents: SanityDocumentLike[]}\n\nexport interface SearchQueryState {\n  connected: boolean\n  fromCache: boolean\n  documents: SanityDocumentLike[]\n}\n\nconst swr = createSWR<{connected: boolean; documents: SanityDocumentLike[]}>({maxSize: 100})\n\nexport function listenSearchQuery(options: ListenQueryOptions): Observable<SearchQueryState> {\n  const {\n    client,\n    schema,\n    sort,\n    perspective,\n    limit,\n    params,\n    filter: groqFilter,\n    searchQuery,\n    staticTypeNames,\n    maxFieldDepth,\n    searchStrategy,\n  } = options\n  const sortBy = sort.by\n  const extendedProjection = sort?.extendedProjection\n\n  // Listen for changes with the given filter and params, and whenever a change occurs, we want to\n  // re-fetch the documents that match the search query (see below).\n  // We use a separate listener since the search query is too large to use in a listen query.\n  const events$ = defer(() => {\n    return client.listen(`*[${groqFilter}]`, params, {\n      events: ['welcome', 'mutation', 'reconnect'],\n      includeAllVersions: true,\n      includeResult: false,\n      visibility: 'query',\n      tag: 'listen-search-query',\n    })\n  }).pipe(\n    mergeMap((ev, i) => {\n      const isFirst = i === 0\n      // If we can't establish a connection to the /listen endpoint, the first event we receive will be 'reconnect'\n      // So if we get \"reconnect\" as the first event actually means \"Connection can't be established\"\n      if (isFirst && ev.type === 'reconnect') {\n        // if it's neither welcome nor reconnect, something unexpected has happened.\n        return throwError(() => new Error(`Failed to establish EventSource connection`))\n      }\n      // When a connection is successfully established, the first event will be 'welcome'\n      if (isFirst && ev.type !== 'welcome') {\n        // if it's neither welcome nor reconnect, something unexpected has happened.\n        return throwError(() => new Error(`Received unexpected type of first event \"${ev.type}\"`))\n      }\n      return of(ev)\n    }),\n    share(),\n  )\n\n  const [welcome$, mutationAndReconnect$] = partition(events$, (ev) => ev.type === 'welcome')\n\n  const swrKey = JSON.stringify({\n    fiilter: groqFilter,\n    limit,\n    params,\n    searchQuery,\n    perspective,\n    sort,\n    staticTypeNames,\n  })\n\n  return merge(\n    welcome$,\n    mutationAndReconnect$.pipe(throttleTime(1000, asyncScheduler, {leading: true, trailing: true})),\n  ).pipe(\n    exhaustMapWithTrailing((event): Observable<SearchQueryEvent> => {\n      // Get the types names to use for searching.\n      // If we have a static list of types, we can skip fetching the types and use the static list.\n      const typeNames$ = staticTypeNames\n        ? of(staticTypeNames)\n        : client.observable.fetch(`array::unique(*[${groqFilter}][]._type)`, params)\n\n      // Use the type names to create a search query and fetch the documents that match the query.\n      return typeNames$.pipe(\n        mergeMap((typeNames: string[]) => {\n          const types = getSearchableTypes(schema, staticTypeNames || []).filter((type) => {\n            if (typeNames.includes(type.name)) {\n              // make a call to getExtendedProjection in strict mode to verify that all fields are\n              // known. This method will throw an exception if there are any unknown fields specified\n              // in the sort by list\n              getExtendedProjection(type, sort.by, true)\n              return true\n            }\n            return false\n          })\n\n          const search = createSearch(types, client, {\n            filter: groqFilter,\n            params,\n            strategy: searchStrategy,\n            maxDepth: maxFieldDepth,\n          })\n\n          const doFetch = () => {\n            const searchTerms = {\n              query: searchQuery || '',\n              types,\n            }\n\n            const searchOptions: SearchOptions = {\n              __unstable_extendedProjection: extendedProjection,\n              comments: [`findability-source: ${searchQuery ? 'list-query' : 'list'}`],\n              limit,\n              skipSortByScore: true,\n              sort: sortBy,\n              perspective,\n            }\n\n            return search(searchTerms, searchOptions).pipe(\n              map((result) =>\n                // eslint-disable-next-line max-nested-callbacks\n                result.hits.map(({hit}) => hit),\n              ),\n              map((hits) => ({type: 'result' as const, documents: hits})),\n            )\n          }\n\n          if (event.type === 'mutation' && event.visibility !== 'query') {\n            // Even though the listener request specifies visibility=query, the events are not guaranteed to be delivered with visibility=query\n            // If the event we are responding to arrives with visibility != query, we add a little delay to allow for the updated document to be available for queries\n            // See https://www.sanity.io/docs/listening#visibility-c4786e55c3ff\n            return timer(1200).pipe(mergeMap(doFetch))\n          }\n          if (event.type === 'reconnect') {\n            return of(event)\n          }\n          return doFetch()\n        }),\n      )\n    }),\n    scan(\n      (\n        acc: null | {connected: boolean; documents: SanityDocumentLike[]},\n        event: SearchQueryEvent,\n      ) => ({\n        connected: event.type !== 'reconnect',\n        documents: event.type === 'result' ? event.documents : acc?.documents || [],\n      }),\n      null as null | {connected: boolean; documents: SanityDocumentLike[]},\n    ),\n    filter((v) => v !== null),\n    swr(swrKey),\n    map(({fromCache, value}): SearchQueryState => ({fromCache, ...value})),\n  )\n}\n","import {ChannelError, ClientError, type ClientPerspective, ServerError} from '@sanity/client'\nimport {observableCallback} from 'observable-callback'\nimport {useMemo, useState} from 'react'\nimport {useObservable} from 'react-rx'\nimport {concat, fromEvent, merge, NEVER, of, timer} from 'rxjs'\nimport {\n  filter,\n  map,\n  mergeMap,\n  scan,\n  share,\n  shareReplay,\n  switchMap,\n  take,\n  takeUntil,\n  withLatestFrom,\n} from 'rxjs/operators'\nimport {\n  catchWithCount,\n  DEFAULT_STUDIO_CLIENT_OPTIONS,\n  useClient,\n  useSchema,\n  useSearchMaxFieldDepth,\n  useWorkspace,\n} from 'sanity'\n\nimport {DEFAULT_ORDERING, FULL_LIST_LIMIT, PARTIAL_PAGE_LIMIT} from './constants'\nimport {findStaticTypesInFilter, removePublishedWithDrafts} from './helpers'\nimport {listenSearchQuery} from './listenSearchQuery'\nimport {type DocumentListPaneItem, type SortOrder} from './types'\n\ninterface UseDocumentListOpts {\n  apiVersion?: string\n  filter: string\n  perspective?: ClientPerspective\n  params: Record<string, unknown>\n  searchQuery: string | null\n  sortOrder?: SortOrder\n}\n\ninterface DocumentListState {\n  error: {message: string} | null\n  isLoadingFullList: boolean\n  isLoading: boolean\n  connected?: boolean\n  isRetrying: boolean\n  autoRetry: boolean\n  canRetry: boolean\n  retryCount: number\n  fromCache?: boolean\n  items: DocumentListPaneItem[]\n}\n\nconst INITIAL_QUERY_STATE: DocumentListState = {\n  error: null,\n  isRetrying: false,\n  retryCount: 0,\n  autoRetry: false,\n  canRetry: false,\n  isLoading: true,\n  isLoadingFullList: false,\n  fromCache: false,\n  items: [],\n}\n\ninterface UseDocumentListHookValue extends DocumentListState {\n  onRetry: () => void\n  onLoadFullList: () => void\n}\n\n/**\n * Determine whether an error should be possible to retry\n * @param error - Any caught error\n */\nfunction isRetriableError(error: unknown) {\n  if (error instanceof ChannelError) {\n    // Usually indicative of a bad or malformed request\n    return false\n  }\n  if (error instanceof ServerError) {\n    // >= 500\n    return true\n  }\n  if (error instanceof ClientError) {\n    // >= 400\n    // note: 403 Forbidden makes sense to retry, because it's a potentially passing condition\n    return error.statusCode === 403\n  }\n  return true\n}\n\n/**\n * @internal\n */\nexport function useDocumentList(opts: UseDocumentListOpts): UseDocumentListHookValue {\n  const {\n    filter: searchFilter,\n    params: paramsProp,\n    sortOrder,\n    searchQuery,\n    perspective,\n    apiVersion,\n  } = opts\n  const client = useClient({\n    ...DEFAULT_STUDIO_CLIENT_OPTIONS,\n    apiVersion: apiVersion || DEFAULT_STUDIO_CLIENT_OPTIONS.apiVersion,\n  })\n  const {strategy: searchStrategy} = useWorkspace().search\n  const schema = useSchema()\n  const maxFieldDepth = useSearchMaxFieldDepth()\n\n  // Get the type name from the filter, if it is a simple type filter.\n  const typeNameFromFilter = useMemo(\n    () => findStaticTypesInFilter(searchFilter, paramsProp),\n    [searchFilter, paramsProp],\n  )\n\n  const [[onRetry$, onRetry]] = useState(() => observableCallback())\n  const [[onFetchFullList$, onLoadFullList]] = useState(() => observableCallback())\n\n  const queryResults$ = useMemo(() => {\n    const listenSearchQueryArgs = {\n      client,\n      filter: searchFilter,\n      limit: PARTIAL_PAGE_LIMIT,\n      params: paramsProp,\n      schema,\n      perspective,\n      searchQuery: searchQuery || '',\n      sort: sortOrder || DEFAULT_ORDERING,\n      staticTypeNames: typeNameFromFilter,\n      maxFieldDepth,\n      searchStrategy,\n    }\n\n    const partialList$ = listenSearchQuery(listenSearchQueryArgs).pipe(\n      shareReplay({refCount: true, bufferSize: 1}),\n    )\n\n    // we want to fetch the full list if the last result of the partial list is at the limit\n    const fullList$ = onFetchFullList$.pipe(\n      withLatestFrom(partialList$),\n      filter(([, result]) => result?.documents.length === PARTIAL_PAGE_LIMIT),\n      // we want to set up the full list listener only once\n      take(1),\n      mergeMap(() =>\n        concat(\n          of({type: 'loadFullList' as const}),\n          listenSearchQuery({...listenSearchQueryArgs, limit: FULL_LIST_LIMIT}).pipe(\n            map((result) => ({type: 'result' as const, result})),\n          ),\n        ),\n      ),\n      share(),\n    )\n\n    // The combined search results from both partial page and full list\n    return merge(\n      partialList$.pipe(\n        map((result) => ({\n          type: 'result' as const,\n          result,\n        })),\n        // when the full list listener kicks off, we want to stop the partial list listener\n        takeUntil(fullList$),\n      ),\n      fullList$,\n    ).pipe(\n      catchWithCount((lastError, retryCount, caught$) => {\n        const error = safeError(lastError)\n        const isOnline = window.navigator.onLine\n        const canRetry = isOnline && isRetriableError(lastError)\n        const autoRetry = retryCount < 10\n        const retries = merge(\n          isOnline ? onRetry$ : fromEvent(window, 'online'),\n          isOnline && autoRetry ? timer(retryCount * 1_000) : NEVER,\n        ).pipe(\n          take(1),\n          switchMap(() =>\n            merge(\n              of({\n                type: 'error' as const,\n                error,\n                retrying: true,\n                autoRetry,\n                canRetry,\n                retryCount,\n              }),\n              caught$,\n            ),\n          ),\n        )\n        return concat(\n          of({\n            type: 'error' as const,\n            error,\n            retrying: false,\n            autoRetry,\n            canRetry,\n            retryCount,\n          }),\n          retries,\n        )\n      }),\n      scan((prev, event) => {\n        if (event.type === 'error') {\n          return {\n            ...prev,\n            error: event.error,\n            retryCount: event.retryCount,\n            isRetrying: event.retrying,\n            autoRetry: event.autoRetry,\n            canRetry: event.canRetry,\n          }\n        }\n        if (event.type === 'result') {\n          return {\n            ...prev,\n            error: null,\n            isRetrying: false,\n            fromCache: event.result.fromCache,\n            connected: event.result.connected,\n            isLoading: false,\n            items: removePublishedWithDrafts(event.result.documents),\n            isLoadingFullList: false,\n          }\n        }\n        if (event.type === 'loadFullList') {\n          return {\n            ...prev,\n            error: null,\n            isLoadingFullList: true,\n          }\n        }\n        // @ts-expect-error - all cases should be covered\n        throw new Error(`Unexpected event type: ${event.type}`)\n      }, INITIAL_QUERY_STATE),\n    )\n  }, [\n    client,\n    searchFilter,\n    paramsProp,\n    schema,\n    perspective,\n    searchQuery,\n    sortOrder,\n    typeNameFromFilter,\n    maxFieldDepth,\n    searchStrategy,\n    onFetchFullList$,\n    onRetry$,\n  ])\n\n  const {\n    error,\n    items,\n    isLoading,\n    fromCache,\n    connected,\n    canRetry,\n    isLoadingFullList,\n    isRetrying,\n    autoRetry,\n    retryCount,\n  } = useObservable(queryResults$, INITIAL_QUERY_STATE)\n\n  return {\n    error,\n    onRetry,\n    isLoading,\n    items,\n    isRetrying,\n    canRetry,\n    retryCount,\n    autoRetry,\n    connected,\n    fromCache,\n    onLoadFullList,\n    isLoadingFullList,\n  }\n}\n\n// todo: candidate for re-use\nconst nonErrorThrownWarning = `[WARNING: This was thrown as a non-error. Only Error instances should be thrown]`\nfunction safeError(thrown: unknown): Error {\n  if (thrown instanceof Error) {\n    return thrown\n  }\n  if (typeof thrown === 'object' && thrown !== null) {\n    if ('message' in thrown && typeof thrown.message === 'string') {\n      return new Error(`${thrown.message} ${nonErrorThrownWarning}`)\n    }\n    return new Error(`${String(thrown)} ${nonErrorThrownWarning}`)\n  }\n  return new Error(`${String(thrown)} ${nonErrorThrownWarning}`)\n}\n","import {SearchIcon, SpinnerIcon} from '@sanity/icons'\nimport {Box, TextInput} from '@sanity/ui'\nimport {memo, useCallback, useEffect, useMemo, useState} from 'react'\nimport {useObservableEvent} from 'react-rx'\nimport {debounce, map, type Observable, of, tap, timer} from 'rxjs'\nimport {\n  type GeneralPreviewLayoutKey,\n  useActiveReleases,\n  useI18nText,\n  usePerspective,\n  useReconnectingToast,\n  useSchema,\n  useTranslation,\n  useUnique,\n} from 'sanity'\nimport {keyframes, styled} from 'styled-components'\n\nimport {structureLocaleNamespace} from '../../i18n'\nimport {type BaseStructureToolPaneProps} from '../types'\nimport {EMPTY_RECORD, FULL_LIST_LIMIT} from './constants'\nimport {DocumentListPaneContent} from './DocumentListPaneContent'\nimport {applyOrderingFunctions, findStaticTypesInFilter} from './helpers'\nimport {useShallowUnique} from './PaneContainer'\nimport {type LoadingVariant, type SortOrder} from './types'\nimport {useDocumentList} from './useDocumentList'\n\n/**\n * @internal\n */\nexport type DocumentListPaneProps = BaseStructureToolPaneProps<'documentList'> & {\n  sortOrder?: SortOrder\n  layout?: Exclude<GeneralPreviewLayoutKey, 'sheetList'>\n}\n\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`\n\nconst fadeIn = keyframes`\n  0% {\n    opacity: 0;\n  }\n  50% {\n    opacity: 0.1;\n  }\n  100% {\n    opacity: 0.4;\n  }\n`\n\nconst AnimatedSpinnerIcon = styled(SpinnerIcon)`\n  animation: ${rotate} 500ms linear infinite;\n`\n\nconst SubtleSpinnerIcon = styled(SpinnerIcon)`\n  animation: ${rotate} 1500ms linear infinite;\n  opacity: 0.4;\n`\n\nconst DelayedSubtleSpinnerIcon = styled(SpinnerIcon)`\n  animation:\n    ${rotate} 1500ms linear infinite,\n    ${fadeIn} 1000ms linear;\n  opacity: 0.4;\n`\n\n/**\n * @internal\n */\n\nexport const DocumentListPane = memo(function DocumentListPane(props: DocumentListPaneProps) {\n  const {childItemId, isActive, pane, paneKey, sortOrder: sortOrderRaw, layout} = props\n  const schema = useSchema()\n  const releases = useActiveReleases()\n  const {perspectiveStack} = usePerspective()\n  const {displayOptions, options} = pane\n  const {apiVersion, filter} = options\n  const params = useShallowUnique(options.params || EMPTY_RECORD)\n  const typeName = useMemo(() => {\n    const staticTypes = findStaticTypesInFilter(filter, params)\n    if (staticTypes?.length === 1) return staticTypes[0]\n    return null\n  }, [filter, params])\n\n  const showIcons = displayOptions?.showIcons !== false\n\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {title} = useI18nText(pane)\n\n  const [searchQuery, setSearchQuery] = useState<string>('')\n  const [searchInputValue, setSearchInputValue] = useState<string>('')\n  const [searchInputElement, setSearchInputElement] = useState<HTMLInputElement | null>(null)\n\n  const sortWithOrderingFn =\n    typeName && sortOrderRaw\n      ? applyOrderingFunctions(sortOrderRaw, schema.get(typeName) as any)\n      : sortOrderRaw\n\n  const sortOrder = useUnique(sortWithOrderingFn)\n\n  const {\n    error,\n    isLoadingFullList,\n    isLoading: documentListIsLoading,\n    items,\n    fromCache,\n    isRetrying,\n    autoRetry,\n    canRetry,\n    retryCount,\n    connected,\n    onLoadFullList,\n    onRetry,\n  } = useDocumentList({\n    apiVersion,\n    filter,\n    perspective: perspectiveStack,\n    params,\n    searchQuery: searchQuery?.trim(),\n    sortOrder,\n  })\n\n  const isLoading = documentListIsLoading || releases.loading\n\n  const handleQueryChange = useObservableEvent(\n    (event$: Observable<React.ChangeEvent<HTMLInputElement>>) => {\n      return event$.pipe(\n        map((event) => event.target.value),\n        tap(setSearchInputValue),\n        debounce((value) => (value === '' ? of('') : timer(300))),\n        tap(setSearchQuery),\n      )\n    },\n  )\n\n  const handleClearSearch = useCallback(() => {\n    setSearchQuery('')\n    setSearchInputValue('')\n  }, [])\n\n  const handleSearchKeyDown = useCallback(\n    (event: React.KeyboardEvent<HTMLInputElement>) => {\n      if (event.key === 'Escape') {\n        handleClearSearch()\n      }\n    },\n    [handleClearSearch],\n  )\n\n  const [enableSearchSpinner, setEnableSearchSpinner] = useState<string | void>()\n\n  useEffect(() => {\n    if (!enableSearchSpinner && !isLoading) {\n      setEnableSearchSpinner(paneKey)\n    }\n  }, [enableSearchSpinner, isLoading, paneKey])\n\n  useEffect(() => {\n    // Clear search field and disable search spinner\n    // when switching between panes (i.e. when paneKey changes).\n    handleClearSearch()\n    setEnableSearchSpinner()\n  }, [paneKey, handleClearSearch])\n\n  const loadingVariant: LoadingVariant = useMemo(() => {\n    if (connected && isLoading && enableSearchSpinner === paneKey) {\n      return 'spinner'\n    }\n    if (connected && fromCache) {\n      return 'subtle'\n    }\n\n    return 'initial'\n  }, [connected, enableSearchSpinner, fromCache, isLoading, paneKey])\n\n  const textInputIcon = useMemo(() => {\n    if (loadingVariant === 'spinner') {\n      return AnimatedSpinnerIcon\n    }\n    if (searchInputValue && loadingVariant === 'subtle') {\n      return SubtleSpinnerIcon\n    }\n    return SearchIcon\n  }, [loadingVariant, searchInputValue])\n\n  useReconnectingToast(!connected)\n\n  return (\n    <>\n      <Box paddingX={3} paddingBottom={3}>\n        <TextInput\n          aria-label={t('panes.document-list-pane.search-input.aria-label')}\n          autoComplete=\"off\"\n          border={false}\n          clearButton={Boolean(searchQuery)}\n          fontSize={[2, 2, 1]}\n          icon={textInputIcon}\n          iconRight={\n            !connected || (loadingVariant === 'subtle' && !searchInputValue)\n              ? DelayedSubtleSpinnerIcon\n              : null\n          }\n          onChange={handleQueryChange}\n          onClear={handleClearSearch}\n          onKeyDown={handleSearchKeyDown}\n          padding={2}\n          placeholder={t('panes.document-list-pane.search-input.placeholder')}\n          radius={2}\n          ref={setSearchInputElement}\n          spellCheck={false}\n          value={searchInputValue}\n        />\n      </Box>\n      <DocumentListPaneContent\n        key={paneKey}\n        childItemId={childItemId}\n        error={error}\n        filterIsSimpleTypeConstraint={!!typeName}\n        hasMaxItems={items.length === FULL_LIST_LIMIT}\n        hasSearchQuery={Boolean(searchQuery)}\n        isActive={isActive}\n        isLazyLoading={isLoadingFullList}\n        isLoading={isLoading}\n        autoRetry={autoRetry}\n        canRetry={canRetry}\n        retryCount={retryCount}\n        isRetrying={isRetrying}\n        isConnected={connected}\n        items={items}\n        layout={layout}\n        muted={loadingVariant === 'subtle'}\n        loadingVariant={loadingVariant}\n        onEndReached={onLoadFullList}\n        onRetry={onRetry}\n        paneTitle={title}\n        searchInputElement={searchInputElement}\n        showIcons={showIcons}\n      />\n    </>\n  )\n})\n","import {ArrowLeftIcon} from '@sanity/icons'\nimport {memo, type ReactNode, useMemo} from 'react'\nimport {type GeneralPreviewLayoutKey, type InitialValueTemplateItem} from 'sanity'\n\nimport {Button, TooltipDelayGroupProvider} from '../../../ui-components'\nimport {\n  BackLink,\n  PaneHeader as StructurePaneHeader,\n  PaneHeaderActions,\n  usePane,\n} from '../../components'\nimport {\n  type PaneMenuItem,\n  type PaneMenuItemGroup,\n  type StructureToolPaneActionHandler,\n} from '../../types'\nimport {useStructureTool} from '../../useStructureTool'\nimport {type SortOrder} from './types'\n\ninterface PaneHeaderProps {\n  contentAfter?: ReactNode\n  index: number\n  initialValueTemplates?: InitialValueTemplateItem[]\n  menuItemGroups?: PaneMenuItemGroup[]\n  menuItems?: PaneMenuItem[]\n  setLayout: (layout: GeneralPreviewLayoutKey) => void\n  setSortOrder: (sortOrder: SortOrder) => void\n  title: string\n}\n\nexport const PaneHeader = memo(\n  ({\n    contentAfter,\n    index,\n    initialValueTemplates = [],\n    menuItemGroups = [],\n    menuItems = [],\n    setLayout,\n    setSortOrder,\n    title,\n  }: PaneHeaderProps) => {\n    const {features} = useStructureTool()\n    const {collapsed, isLast} = usePane()\n    // Prevent focus if this is the last (non-collapsed) pane.\n    const tabIndex = isLast && !collapsed ? -1 : 0\n\n    const actionHandlers = useMemo((): Record<string, StructureToolPaneActionHandler> => {\n      return {\n        setLayout: ({layout: value}: {layout: GeneralPreviewLayoutKey}) => {\n          setLayout(value)\n        },\n        setSortOrder: (sort: SortOrder) => {\n          setSortOrder(sort)\n        },\n      }\n    }, [setLayout, setSortOrder])\n\n    return (\n      <TooltipDelayGroupProvider>\n        <StructurePaneHeader\n          actions={\n            <PaneHeaderActions\n              initialValueTemplateItems={initialValueTemplates}\n              actionHandlers={actionHandlers}\n              menuItemGroups={menuItemGroups}\n              menuItems={menuItems}\n            />\n          }\n          backButton={\n            features.backButton &&\n            index > 0 && (\n              <Button\n                as={BackLink}\n                data-as=\"a\"\n                icon={ArrowLeftIcon}\n                mode=\"bleed\"\n                tooltipProps={{content: 'Back'}}\n              />\n            )\n          }\n          contentAfter={contentAfter}\n          tabIndex={tabIndex}\n          title={title}\n        />\n      </TooltipDelayGroupProvider>\n    )\n  },\n)\n\nPaneHeader.displayName = 'Memo(PaneHeader)'\n","'use no memo'\n// The `use no memo` directive is due to a known issue with react-table and react compiler: https://github.com/TanStack/table/issues/5567\n\nimport {type SanityDocument} from '@sanity/client'\nimport {Checkbox} from '@sanity/ui'\nimport {type CellContext} from '@tanstack/react-table'\nimport {type MouseEvent, useCallback} from 'react'\n\nexport function DocumentSheetListSelect(props: CellContext<SanityDocument, unknown>) {\n  const {row, table} = props\n\n  const {selectedAnchor, setSelectedAnchor} = table.options.meta || {}\n\n  const handleOnClick = useCallback(\n    (e: MouseEvent<HTMLInputElement>) => {\n      if (e.shiftKey && selectedAnchor !== null && selectedAnchor !== undefined) {\n        const shiftClickIndex = row.index\n        const lowerIndex = shiftClickIndex < selectedAnchor ? shiftClickIndex : selectedAnchor\n        const upperIndex = shiftClickIndex < selectedAnchor ? selectedAnchor : shiftClickIndex\n\n        const additionalSelectedRows = table\n          .getRowModel()\n          .flatRows.slice(lowerIndex, upperIndex + 1)\n          .map(({id}) => id)\n\n        const currentSelectedRows = table.getSelectedRowModel().rows.map(({id}) => id)\n        table.setRowSelection(() =>\n          [...additionalSelectedRows, ...currentSelectedRows].reduce(\n            (nextSelectedRows, rowId) => ({...nextSelectedRows, [rowId]: true}),\n            {},\n          ),\n        )\n      } else if (setSelectedAnchor) {\n        const isRowCurrentlySelected = row.getIsSelected()\n        if (isRowCurrentlySelected) {\n          // about to unselect so invalidate current anchor\n          setSelectedAnchor(null)\n        } else {\n          // override anchor with new selection index\n          setSelectedAnchor(row.index)\n        }\n\n        row.toggleSelected()\n      }\n    },\n    [selectedAnchor, row, setSelectedAnchor, table],\n  )\n\n  return (\n    <Checkbox\n      style={{paddingLeft: 4}}\n      checked={props.row.getIsSelected()}\n      disabled={!props.row.getCanSelect()}\n      // onChange doesn't have shiftKey in event, but want to control this checkbox\n      // need to define noop onChange to suppress the warning\n      onChange={() => null}\n      onClick={handleOnClick}\n    />\n  )\n}\n","import {type SanityDocument} from '@sanity/types'\nimport {type Table} from '@tanstack/react-table'\nimport {type ReactNode, useCallback, useContext, useEffect, useMemo, useState} from 'react'\nimport {DocumentSheetListContext} from 'sanity/_singletons'\n\ninterface DocumentSheetListProviderProps {\n  children?: ReactNode\n  table: Table<SanityDocument>\n}\n\ntype SelectedCellDetails = {\n  colId: string\n  rowIndex: number\n  state: 'focused' | 'selected'\n} | null\n\n/** @internal */\nexport interface DocumentSheetListContextValue {\n  focusAnchorCell: () => void\n  resetFocusSelection: () => void\n  setSelectedAnchorCell: (colId: string, rowIndex: number) => void\n  getStateByCellId: (\n    colId: string,\n    rowIndex: number,\n  ) => 'focused' | 'selectedAnchor' | 'selectedRange' | null\n  submitFocusedCell: () => void\n}\n\n/** @internal */\nexport const useDocumentSheetListContext = (): DocumentSheetListContextValue => {\n  const context = useContext(DocumentSheetListContext)\n\n  if (context === undefined) {\n    throw new Error('useDocumentSheetListContext must be used within an DocumentSheetListProvider')\n  }\n  return context\n}\n\n/** @internal */\nexport function DocumentSheetListProvider({\n  children,\n  table,\n}: DocumentSheetListProviderProps): ReactNode {\n  const [selectedAnchorCellDetails, setSelectedAnchorCellDetails] =\n    useState<SelectedCellDetails>(null)\n  const [selectedRangeCellIndexes, setSelectedRangeCellIndexes] = useState<number[]>([])\n\n  const clearAndSetFocusSelection = useCallback(\n    (nextAnchorDetails: SelectedCellDetails = null) => {\n      if (\n        selectedAnchorCellDetails?.state === 'focused' &&\n        document.activeElement instanceof HTMLElement\n      ) {\n        document.activeElement.blur()\n      }\n\n      setSelectedAnchorCellDetails(nextAnchorDetails)\n      setSelectedRangeCellIndexes([])\n    },\n    [selectedAnchorCellDetails],\n  )\n\n  const resetFocusSelection = useCallback(\n    () => clearAndSetFocusSelection(),\n    [clearAndSetFocusSelection],\n  )\n\n  const changeSelectionColumn = useCallback(\n    (direction: 'left' | 'right') => {\n      if (!selectedAnchorCellDetails) return\n\n      const visibleColumns = table.getVisibleLeafColumns()\n      const columnIndexAfterMove =\n        visibleColumns.findIndex((col) => col.id === selectedAnchorCellDetails.colId) +\n        (direction === 'left' ? -1 : 1)\n\n      if (columnIndexAfterMove < 0 || columnIndexAfterMove >= visibleColumns.length) return\n\n      clearAndSetFocusSelection({\n        colId: visibleColumns[columnIndexAfterMove].id,\n        rowIndex: selectedAnchorCellDetails.rowIndex,\n        state: 'selected',\n      })\n    },\n    [clearAndSetFocusSelection, selectedAnchorCellDetails, table],\n  )\n\n  const changeSelectionRange = useCallback(\n    (direction: 'up' | 'down') => {\n      if (!selectedAnchorCellDetails) return\n\n      setSelectedRangeCellIndexes((previousSelection) => {\n        const {rowIndex: anchorIndex} = selectedAnchorCellDetails\n        const getNextIndex = (startingIndex: number) =>\n          startingIndex + (direction === 'down' ? 1 : -1)\n        // if no cells are selected, select the cell in the direction\n        if (!previousSelection.length) {\n          const firstSelectedIndex = getNextIndex(anchorIndex)\n          if (firstSelectedIndex < 0) return []\n          return [firstSelectedIndex]\n        }\n        const lastIndexSelected = previousSelection[previousSelection.length - 1]\n        const nextIndex = getNextIndex(lastIndexSelected)\n\n        // if the cell in the direction is out of bounds, return the previous selection\n        if (nextIndex < 0) return previousSelection\n\n        // if the cell in the direction is the same as the focused cell, deselect all cells\n        if (nextIndex === anchorIndex) return []\n\n        // if the cell in the direction is already selected, deselect the last selected cell\n        if (previousSelection.includes(nextIndex)) {\n          return previousSelection.slice(0, -1)\n        }\n\n        return [...previousSelection, nextIndex]\n      })\n    },\n    [selectedAnchorCellDetails],\n  )\n\n  const setSelectedAnchorCell = useCallback(\n    (colId: string, rowIndex: number) => {\n      clearAndSetFocusSelection({colId, rowIndex, state: 'selected'})\n    },\n    [clearAndSetFocusSelection],\n  )\n\n  const handleEscapePress = useCallback(() => {\n    if (!selectedAnchorCellDetails) return\n    if (selectedRangeCellIndexes.length) {\n      // only clear selected range if it exists\n      setSelectedRangeCellIndexes([])\n    } else {\n      const nextAnchorCellDetails: SelectedCellDetails =\n        selectedAnchorCellDetails.state === 'selected'\n          ? null\n          : {\n              ...selectedAnchorCellDetails,\n              state: 'selected',\n            }\n      clearAndSetFocusSelection(nextAnchorCellDetails)\n    }\n  }, [clearAndSetFocusSelection, selectedAnchorCellDetails, selectedRangeCellIndexes.length])\n\n  const handleUpDownKey = useCallback(\n    (isShiftKey: boolean, key: string) => {\n      if (!selectedAnchorCellDetails) return\n\n      const direction = key === 'ArrowDown' ? 'down' : 'up'\n      const offset = direction === 'down' ? 1 : -1\n\n      if (isShiftKey) {\n        changeSelectionRange(direction)\n      } else {\n        const newSelectedCellRowIndex = selectedAnchorCellDetails.rowIndex + offset\n        if (newSelectedCellRowIndex < 0) return\n\n        setSelectedAnchorCell(selectedAnchorCellDetails.colId, newSelectedCellRowIndex)\n      }\n    },\n    [changeSelectionRange, selectedAnchorCellDetails, setSelectedAnchorCell],\n  )\n\n  const handleAnchorKeydown = useCallback(\n    (event: KeyboardEvent) => {\n      if (!selectedAnchorCellDetails) return\n\n      const {key, shiftKey} = event\n\n      switch (key) {\n        case 'Shift':\n          break // shift allow should do nothing\n\n        case 'Escape':\n          handleEscapePress()\n          break\n\n        case 'ArrowDown':\n        case 'ArrowUp':\n          event.preventDefault()\n          handleUpDownKey(shiftKey, key)\n          break\n\n        case 'ArrowLeft':\n        case 'ArrowRight':\n          // when cell is focused, arrows should have default behavior\n          // only prevent default when cell is selected\n          if (selectedAnchorCellDetails.state === 'selected') {\n            event.preventDefault()\n            changeSelectionColumn(key === 'ArrowLeft' ? 'left' : 'right')\n          }\n          break\n\n        default:\n          break\n      }\n    },\n    [selectedAnchorCellDetails, handleEscapePress, handleUpDownKey, changeSelectionColumn],\n  )\n\n  const handleAnchorClick = useCallback(\n    (event: MouseEvent) => {\n      if (!selectedAnchorCellDetails) return\n      const isClickInAnchorCell = document\n        .getElementById(\n          `cell-${selectedAnchorCellDetails.colId}-${selectedAnchorCellDetails.rowIndex}`,\n        )\n        ?.contains(event.target as Node)\n\n      if (!isClickInAnchorCell) resetFocusSelection()\n    },\n    [resetFocusSelection, selectedAnchorCellDetails],\n  )\n\n  useEffect(() => {\n    if (selectedAnchorCellDetails) {\n      document.addEventListener('keydown', handleAnchorKeydown)\n      document.addEventListener('click', handleAnchorClick)\n    }\n\n    return () => {\n      if (selectedAnchorCellDetails) {\n        document.removeEventListener('keydown', handleAnchorKeydown)\n        document.removeEventListener('click', handleAnchorClick)\n      }\n    }\n  }, [handleAnchorClick, handleAnchorKeydown, selectedAnchorCellDetails])\n\n  const focusAnchorCell = useCallback(\n    () =>\n      setSelectedAnchorCellDetails((anchorCellDetails) => {\n        if (!anchorCellDetails) return null\n\n        return {...anchorCellDetails, state: 'focused'}\n      }),\n    [],\n  )\n\n  const getStateByCellId = useCallback(\n    (colId: string, rowIndex: number) => {\n      if (selectedAnchorCellDetails?.colId !== colId) return null\n\n      if (selectedAnchorCellDetails.rowIndex === rowIndex)\n        return selectedAnchorCellDetails.state === 'focused' ? 'focused' : 'selectedAnchor'\n\n      if (selectedRangeCellIndexes.includes(rowIndex)) return 'selectedRange'\n\n      return null\n    },\n    [selectedAnchorCellDetails, selectedRangeCellIndexes],\n  )\n\n  const submitFocusedCell = useCallback(() => {\n    if (!selectedAnchorCellDetails) return\n\n    clearAndSetFocusSelection({\n      colId: selectedAnchorCellDetails.colId,\n      rowIndex: selectedAnchorCellDetails.rowIndex + 1,\n      state: 'selected',\n    })\n  }, [clearAndSetFocusSelection, selectedAnchorCellDetails])\n\n  const value = useMemo<DocumentSheetListContextValue>(\n    () => ({\n      focusAnchorCell,\n      resetFocusSelection,\n      setSelectedAnchorCell,\n      getStateByCellId,\n      submitFocusedCell,\n    }),\n    [\n      focusAnchorCell,\n      resetFocusSelection,\n      setSelectedAnchorCell,\n      getStateByCellId,\n      submitFocusedCell,\n    ],\n  )\n\n  return (\n    <DocumentSheetListContext.Provider value={value}>{children}</DocumentSheetListContext.Provider>\n  )\n}\n","'use no memo'\n// The `use no memo` directive is due to a known issue with react-table and react compiler: https://github.com/TanStack/table/issues/5567\n\n/* eslint-disable i18next/no-literal-string */\nimport {type ObjectFieldType} from '@sanity/types'\nimport {Select, TextInput} from '@sanity/ui'\nimport {type Cell, type CellContext, flexRender} from '@tanstack/react-table'\nimport {type MouseEventHandler, useCallback, useEffect, useRef, useState} from 'react'\nimport {type SanityDocument} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {useDocumentSheetListContext} from './DocumentSheetListProvider'\n\nconst DataCell = styled.td<{width: number}>`\n  display: flex;\n  overflow: hidden;\n  box-sizing: border-box;\n  width: ${({width}) => width}px;\n  border-top: 1px solid var(--card-border-color);\n  background-color: var(--card-bg-color);\n`\n\nconst PinnedDataCell = styled(DataCell)`\n  position: sticky;\n  z-index: 2;\n`\n\ninterface SheetListCellInnerProps extends CellContext<SanityDocument, unknown> {\n  fieldType: ObjectFieldType\n}\n\ntype CellInputElement = HTMLInputElement | HTMLSelectElement\ntype InputRef = CellInputElement | null\n\n/** @internal */\nexport function SheetListCellInner(props: SheetListCellInnerProps) {\n  const {getValue, column, row, fieldType} = props\n  const cellId = `cell-${column.id}-${row.index}`\n  const [renderValue, setRenderValue] = useState<string>(getValue() as string)\n  const [isDirty, setIsDirty] = useState(false)\n  const inputRef = useRef<InputRef>(null)\n  const {\n    focusAnchorCell,\n    resetFocusSelection,\n    setSelectedAnchorCell,\n    getStateByCellId,\n    submitFocusedCell,\n  } = useDocumentSheetListContext()\n  const cellState = getStateByCellId(column.id, row.index)\n\n  const handleOnFocus = useCallback(() => {\n    // reselect in cases where focus achieved without initial mousedown\n    setSelectedAnchorCell(column.id, row.index)\n    focusAnchorCell()\n  }, [column.id, focusAnchorCell, row.index, setSelectedAnchorCell])\n  const {patchDocument} = props.table.options.meta || {}\n\n  const handleProgrammaticFocus = () => {\n    inputRef.current?.focus()\n    if (inputRef.current instanceof HTMLInputElement) {\n      inputRef.current.select()\n    }\n  }\n\n  const handleOnMouseDown: MouseEventHandler<CellInputElement> = (event) => {\n    if (event.detail === 2) {\n      handleProgrammaticFocus()\n    } else {\n      event.preventDefault()\n      setSelectedAnchorCell(column.id, row.index)\n    }\n  }\n\n  const handleOnEnterDown = useCallback(\n    (event: KeyboardEvent) => {\n      const {key} = event\n      if (key === 'Enter') {\n        if (cellState === 'selectedAnchor') handleProgrammaticFocus()\n        if (cellState === 'focused') submitFocusedCell()\n      }\n    },\n    [cellState, submitFocusedCell],\n  )\n\n  const handleOnChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setIsDirty(true)\n    setRenderValue(event.target.value)\n  }\n\n  const handleOnBlur = () => {\n    if (isDirty) {\n      patchDocument?.(row.id, column.id, renderValue)\n      setIsDirty(false)\n    }\n    resetFocusSelection()\n  }\n\n  const handlePaste = useCallback(\n    (event: ClipboardEvent) => {\n      const clipboardData = event.clipboardData?.getData('Text')\n\n      if (typeof clipboardData === 'string' || typeof clipboardData === 'number') {\n        setRenderValue(clipboardData)\n        // patch immediately when pasting\n        patchDocument?.(row.id, column.id, clipboardData)\n      }\n    },\n    [column.id, patchDocument, row.id],\n  )\n\n  const handleCopy = useCallback(() => {\n    navigator.clipboard.writeText(renderValue.toString())\n  }, [renderValue])\n\n  useEffect(() => {\n    if (cellState === 'selectedAnchor' || cellState === 'focused')\n      // only listen for enter key when cell is focused or anchor\n      document.addEventListener('keydown', handleOnEnterDown)\n    if (cellState === 'selectedAnchor' || cellState === 'selectedRange')\n      // if cell is selected, paste events should be handled\n      document.addEventListener('paste', handlePaste)\n\n    if (cellState === 'selectedAnchor')\n      // only allow copying when cell is selected anchor\n      document.addEventListener('copy', handleCopy)\n\n    return () => {\n      if (cellState === 'selectedAnchor' || cellState === 'focused')\n        document.removeEventListener('keydown', handleOnEnterDown)\n      if (cellState === 'selectedAnchor' || cellState === 'selectedRange')\n        document.removeEventListener('paste', handlePaste)\n      if (cellState === 'selectedAnchor') document.removeEventListener('copy', handleCopy)\n    }\n  }, [\n    cellId,\n    cellState,\n    column.id,\n    getStateByCellId,\n    handleCopy,\n    handleOnEnterDown,\n    handlePaste,\n    row.index,\n  ])\n\n  const getBorderStyle = () => {\n    if (cellState === 'focused') return '2px solid blue'\n    if (cellState === 'selectedRange') return '1px solid green'\n    if (cellState === 'selectedAnchor') return '1px solid blue'\n\n    return '1px solid transparent'\n  }\n\n  const inputProps = {\n    'onFocus': handleOnFocus,\n    'onBlur': handleOnBlur,\n    'onMouseDown': handleOnMouseDown,\n    'aria-selected': !!cellState,\n    'data-testid': cellId,\n    'id': cellId,\n    'ref': (ref: InputRef) => {\n      inputRef.current = ref\n    },\n  }\n\n  if (fieldType.name === 'boolean') {\n    return (\n      <Select\n        {...inputProps}\n        onChange={() => null}\n        radius={0}\n        style={{\n          boxShadow: 'none',\n          border: getBorderStyle(),\n          padding: 0,\n        }}\n        value={JSON.stringify(renderValue)}\n      >\n        <option value=\"True\">True</option>\n        <option value=\"False\">False</option>\n      </Select>\n    )\n  }\n\n  return (\n    <TextInput\n      {...inputProps}\n      size={0}\n      radius={0}\n      border={false}\n      style={{\n        border: getBorderStyle(),\n        padding: '22px 16px',\n      }}\n      value={\n        typeof renderValue === 'string' || typeof renderValue === 'number'\n          ? renderValue\n          : JSON.stringify(renderValue)\n      }\n      onChange={handleOnChange}\n    />\n  )\n}\n\n/** @internal */\nexport function SheetListCell(cell: Cell<SanityDocument, unknown>) {\n  const isPinned = cell.column.getIsPinned()\n  const Cell = isPinned ? PinnedDataCell : DataCell\n  const borderWidth = isPinned && cell.column.getIsLastColumn('left') ? 2 : 1\n\n  return (\n    <Cell\n      key={cell.row.original._id + cell.id}\n      style={{\n        left: cell.column.getStart('left') ?? undefined,\n        borderRight: `${borderWidth}px solid var(--card-border-color)`,\n      }}\n      width={cell.column.getSize()}\n    >\n      {flexRender(cell.column.columnDef.cell, cell.getContext?.())}\n    </Cell>\n  )\n}\n","'use no memo'\n// The `use no memo` directive is due to a known issue with react-table and react compiler: https://github.com/TanStack/table/issues/5567\n\nimport {isObjectSchemaType, type ObjectSchemaType} from '@sanity/types'\nimport {Box, Checkbox, Flex, Text} from '@sanity/ui'\nimport {\n  type AccessorKeyColumnDef,\n  createColumnHelper,\n  type GroupColumnDef,\n  type VisibilityState,\n} from '@tanstack/react-table'\nimport {useMemo} from 'react'\nimport {useObservable} from 'react-rx'\nimport {\n  type DocumentPreviewStore,\n  DocumentStatusIndicator,\n  getPreviewStateObservable,\n  type SanityDocument,\n  type SchemaType,\n  useDocumentPreviewStore,\n  useDocumentVersionInfo,\n} from 'sanity'\n\nimport {DocumentSheetListSelect} from './DocumentSheetListSelect'\nimport {SheetListCellInner} from './SheetListCell'\n\nexport const VISIBLE_COLUMN_LIMIT = 5\n\nconst PreviewCell = (props: {\n  documentPreviewStore: DocumentPreviewStore\n  schemaType: SchemaType\n  row: {\n    original: SanityDocument\n  }\n}) => {\n  const {documentPreviewStore, row, schemaType} = props\n  const previewStateObservable = useMemo(\n    () => getPreviewStateObservable(documentPreviewStore, schemaType, row.original._id),\n    [documentPreviewStore, row.original._id, schemaType],\n  )\n\n  const versionsInfo = useDocumentVersionInfo(row.original._id)\n\n  const {snapshot, isLoading} = useObservable(previewStateObservable, {\n    snapshot: null,\n    isLoading: true,\n  })\n  if (isLoading) {\n    return (\n      <Text size={1} muted>\n        Loading...\n      </Text>\n    )\n  }\n  const displayValue = (snapshot?.title ?? 'Untitled') as string\n\n  return (\n    <Flex align=\"center\" gap={3}>\n      <DocumentStatusIndicator\n        draft={versionsInfo.draft}\n        published={versionsInfo.published}\n        versions={undefined}\n      />\n      <Text size={1}>{displayValue}</Text>\n    </Flex>\n  )\n}\n\nconst columnHelper = createColumnHelper<SanityDocument>()\nconst SUPPORTED_FIELDS = ['string', 'number', 'boolean']\n\ntype Columns = (\n  | AccessorKeyColumnDef<SanityDocument, unknown>\n  | GroupColumnDef<SanityDocument, unknown>\n)[]\n\nconst getColsFromSchemaType = (schemaType: ObjectSchemaType, parentalField?: string): Columns => {\n  return schemaType.fields.reduce<Columns>((tableColumns: Columns, field) => {\n    const {type, name} = field\n    if (SUPPORTED_FIELDS.includes(type.name)) {\n      const nextCol = columnHelper.accessor(\n        // accessor must use dot notation for internal tanstack method of reading cell data\n        parentalField ? `${parentalField}.${field.name}` : field.name,\n        {\n          id: parentalField ? `${parentalField}_${field.name}` : field.name,\n          header: field.type.title,\n          enableHiding: true,\n          cell: (info) => <SheetListCellInner {...info} fieldType={type} />,\n        },\n      )\n\n      return [...tableColumns, nextCol]\n    }\n\n    // if first layer nested object\n    if (type.name === 'object' && isObjectSchemaType(type) && !parentalField) {\n      return [\n        ...tableColumns,\n        columnHelper.group({header: name, columns: getColsFromSchemaType(type, field.name)}),\n      ]\n    }\n\n    return tableColumns\n  }, [])\n}\n\n// Type guard function to check if a column is of type GroupColumnDef\nfunction isAccessorKeyColumnDef(\n  column: Columns[number],\n): column is AccessorKeyColumnDef<SanityDocument, unknown> {\n  return 'accessorKey' in column\n}\nfunction isGroupColumnDef(\n  column: AccessorKeyColumnDef<SanityDocument, unknown> | GroupColumnDef<SanityDocument, unknown>,\n): column is GroupColumnDef<SanityDocument, unknown> {\n  return 'columns' in column\n}\n\nconst flatColumns = (cols: Columns): AccessorKeyColumnDef<SanityDocument, unknown>[] => {\n  return cols.flatMap((col) => {\n    if (isAccessorKeyColumnDef(col)) {\n      return col\n    }\n    if (isGroupColumnDef(col)) {\n      return col.columns ? flatColumns(col.columns) : []\n    }\n    return []\n  })\n}\n\nexport function useDocumentSheetColumns(documentSchemaType?: ObjectSchemaType) {\n  const documentPreviewStore = useDocumentPreviewStore()\n\n  const columns: Columns = useMemo(() => {\n    if (!documentSchemaType) {\n      return []\n    }\n    return [\n      columnHelper.display({\n        id: 'selected',\n        enableHiding: false,\n        header: (info) => (\n          <Box>\n            <Checkbox\n              style={{paddingLeft: 4}}\n              indeterminate={info.table.getIsSomeRowsSelected()}\n              onChange={info.table.getToggleAllPageRowsSelectedHandler()}\n            />\n            {/* eslint-disable-next-line i18next/no-literal-string */}\n            {info.table.getSelectedRowModel().rows.length} selected\n          </Box>\n        ),\n        cell: DocumentSheetListSelect,\n      }),\n      columnHelper.accessor('Preview', {\n        enableHiding: false,\n        id: 'Preview',\n        cell: (info) => {\n          return (\n            <PreviewCell\n              {...info}\n              documentPreviewStore={documentPreviewStore}\n              schemaType={documentSchemaType}\n            />\n          )\n        },\n      }),\n      ...getColsFromSchemaType(documentSchemaType),\n    ]\n  }, [documentPreviewStore, documentSchemaType])\n\n  const [initialColumnsVisibility]: [VisibilityState, number] = useMemo(\n    () =>\n      flatColumns(columns).reduce<[VisibilityState, number]>(\n        ([accCols, countAllowedVisible], column) => {\n          if (!column.id) throw new Error('Column must have an id')\n          const visibilityKey = column.id\n\n          // this column is always visible\n          if (!column.enableHiding) {\n            return [{...accCols, [visibilityKey]: true}, countAllowedVisible]\n          }\n\n          // have already reached column visibility limit, hide column by default\n          if (countAllowedVisible === VISIBLE_COLUMN_LIMIT) {\n            return [{...accCols, [visibilityKey]: false}, countAllowedVisible]\n          }\n\n          return [{...accCols, [visibilityKey]: true}, countAllowedVisible + 1]\n        },\n        [{}, 0],\n      ),\n    [columns],\n  )\n\n  return {columns, initialColumnsVisibility}\n}\n","'use no memo'\n// The `use no memo` directive is due to a known issue with react-table and react compiler: https://github.com/TanStack/table/issues/5567\n\nimport {Box, Checkbox, Flex, Menu, Stack, Text} from '@sanity/ui'\nimport {type Column, type Table} from '@tanstack/react-table'\nimport {useCallback} from 'react'\nimport {type SanityDocument, useTranslation} from 'sanity'\n\nimport {Button, MenuButton} from '../../../../ui-components'\nimport {VISIBLE_COLUMN_LIMIT} from './useDocumentSheetColumns'\n\ntype ColumnsControlProps = {\n  table: Table<SanityDocument>\n}\n\nexport function ColumnsControl({table}: ColumnsControlProps) {\n  const {t} = useTranslation()\n  const isVisibleLimitReached =\n    table.getVisibleLeafColumns().filter((col) => col.getCanHide()).length >= VISIBLE_COLUMN_LIMIT\n\n  const setInitialColumns = useCallback(() => {\n    table.resetColumnVisibility()\n  }, [table])\n\n  const handleColumnOnChange = (column: Column<SanityDocument, unknown>) => () => {\n    column.toggleVisibility()\n  }\n\n  const getColumnVisibilityDisabled = (column: Column<SanityDocument, unknown>) => {\n    const isColumnVisible = column.getIsVisible()\n    const isSingleColumnVisible =\n      table.getVisibleLeafColumns().filter((col) => col.getCanHide()).length === 1\n\n    return (isVisibleLimitReached && !isColumnVisible) || (isSingleColumnVisible && isColumnVisible)\n  }\n\n  return (\n    <MenuButton\n      button={<Button mode=\"bleed\" text={t('sheet-list.edit-columns')} />}\n      id=\"columns-control\"\n      menu={\n        <Menu padding={3} paddingTop={4} style={{width: 240}}>\n          <Flex direction=\"column\" height=\"fill\" gap={3}>\n            <Text weight=\"semibold\" size={1}>\n              {t('sheet-list.select-fields')}\n            </Text>\n            <Flex style={{flex: '1 1 auto', maxHeight: 320, overflowY: 'scroll'}}>\n              <Stack>\n                {table\n                  .getAllLeafColumns()\n                  .filter((column) => column.getCanHide())\n                  .map((column) => (\n                    <Flex key={column.id} marginY={2} align=\"center\">\n                      <Checkbox\n                        readOnly={getColumnVisibilityDisabled(column)}\n                        checked={column.getIsVisible()}\n                        onChange={handleColumnOnChange(column)}\n                        id={`col-visibility-${column.id}`}\n                        style={{display: 'block'}}\n                      />\n                      <Box flex={1} paddingLeft={3}>\n                        <Text size={1}>\n                          <label htmlFor={`col-visibility-${column.id}`}>\n                            {column.columnDef.header?.toString()}\n                          </label>\n                        </Text>\n                      </Box>\n                    </Flex>\n                  ))}\n              </Stack>\n            </Flex>\n            <Button\n              width=\"fill\"\n              mode=\"ghost\"\n              text={t('sheet-list.reset-columns')}\n              onClick={setInitialColumns}\n            />\n          </Flex>\n        </Menu>\n      }\n      placement=\"bottom\"\n      popover={{portal: true}}\n    />\n  )\n}\n","import {Flex} from '@sanity/ui'\nimport {Filters, SearchHeader, useSearchState} from 'sanity'\nimport {styled} from 'styled-components'\n\nconst SearchContainer = styled(Flex)`\n  flex-shrink: 0;\n`\n\nexport function DocumentSheetListFilter() {\n  const {\n    state: {filtersVisible},\n  } = useSearchState()\n\n  return (\n    <SearchContainer>\n      <SearchHeader />\n      {filtersVisible && <Filters showTypeFilter={false} />}\n    </SearchContainer>\n  )\n}\n","'use no memo'\n// The `use no memo` directive is due to a known issue with react-table and react compiler: https://github.com/TanStack/table/issues/5567\n\nimport {CloseIcon, EllipsisHorizontalIcon} from '@sanity/icons'\nimport {type SanityDocument} from '@sanity/types'\nimport {Box, Flex, Menu, Text} from '@sanity/ui'\nimport {flexRender, type Header as HeaderType, type HeaderGroup} from '@tanstack/react-table'\nimport {useTranslation} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Button, MenuButton, MenuItem, Tooltip} from '../../../../ui-components'\n\nconst Header = styled.th<{width: number}>`\n  margin: 16px;\n  z-index: 1;\n  padding: 22px 0px;\n  border-top: 1px solid var(--card-border-color);\n  background-color: var(--card-badge-default-bg-color);\n  box-sizing: border-box;\n  text-align: left;\n  width: ${({width}) => width}px;\n  max-width: ${({width}) => width}px;\n`\n\nconst PinnedHeader = styled(Header)`\n  position: sticky;\n  z-index: 2;\n`\n\nconst HoverMenu = styled.div`\n  visibility: hidden;\n\n  ${Header}:hover & {\n    visibility: visible;\n  }\n`\n\ntype DocumentSheetListHeaderProps = {\n  header: HeaderType<SanityDocument, unknown>\n  headerGroup: HeaderGroup<SanityDocument>\n}\n\nexport function DocumentSheetListHeader(props: DocumentSheetListHeaderProps) {\n  const {header, headerGroup} = props\n  const {t} = useTranslation()\n\n  const isPinned = header.column.getIsPinned()\n\n  const headerTitle =\n    headerGroup.depth > 0 && !header.column.parent ? null : (\n      <Text size={1} weight=\"semibold\" textOverflow=\"ellipsis\">\n        {flexRender(header.column.columnDef.header, header.getContext())}\n      </Text>\n    )\n\n  const HeaderTag = isPinned ? PinnedHeader : Header\n\n  const canShowHeaderMenu =\n    header.column.getCanHide() &&\n    (headerGroup.depth === 0 ? !header.column.columns.length : header.column.parent)\n\n  const borderWidth = isPinned && header.column.getIsLastColumn('left') ? 2 : 1\n\n  return (\n    <HeaderTag\n      key={header.id}\n      style={{\n        left: header.column.getStart('left') ?? undefined,\n        borderRight: `${borderWidth}px solid var(--card-border-color)`,\n      }}\n      data-testid={`header-${header.id}`}\n      width={header.getSize()}\n    >\n      <Flex justify=\"space-between\" marginX={2} align=\"baseline\">\n        <Tooltip delay={500} content={headerTitle}>\n          <Box style={{boxSizing: 'border-box'}} marginLeft={3} marginRight={3}>\n            {headerTitle}\n          </Box>\n        </Tooltip>\n        {canShowHeaderMenu && (\n          <HoverMenu>\n            <MenuButton\n              button={\n                <Button\n                  tooltipProps={{content: 'Open field menu'}}\n                  mode=\"bleed\"\n                  icon={EllipsisHorizontalIcon}\n                  data-testid=\"field-menu-button\"\n                />\n              }\n              id=\"field menu\"\n              popover={{placement: 'bottom-end'}}\n              menu={\n                <Menu>\n                  <MenuItem\n                    text={t('sheet-list.hide-field')}\n                    icon={CloseIcon}\n                    onClick={() => header.column.toggleVisibility()}\n                  />\n                </Menu>\n              }\n            />\n          </HoverMenu>\n        )}\n      </Flex>\n    </HeaderTag>\n  )\n}\n","'use no memo'\n// The `use no memo` directive is due to a known issue with react-table and react compiler: https://github.com/TanStack/table/issues/5567\n\n/* eslint-disable i18next/no-literal-string */\nimport {\n  ChevronLeftIcon,\n  ChevronRightIcon,\n  DoubleChevronLeftIcon,\n  DoubleChevronRightIcon,\n} from '@sanity/icons'\nimport {Flex, Text} from '@sanity/ui'\nimport {type Table} from '@tanstack/react-table'\nimport {type SanityDocument} from 'sanity'\n\nimport {Button, TooltipDelayGroupProvider} from '../../../../ui-components'\n\nexport function DocumentSheetListPaginator({table}: {table: Table<SanityDocument>}) {\n  return (\n    <TooltipDelayGroupProvider>\n      <Flex gap={3} align={'center'}>\n        <Button\n          onClick={() => table.setPageIndex(0)}\n          disabled={!table.getCanPreviousPage()}\n          icon={DoubleChevronLeftIcon}\n          tooltipProps={{\n            content: 'Go to first page',\n          }}\n        />\n        <Button\n          onClick={() => table.previousPage()}\n          disabled={!table.getCanPreviousPage()}\n          icon={ChevronLeftIcon}\n          tooltipProps={{\n            content: 'Go to previous page',\n          }}\n        />\n        <Text style={{whiteSpace: 'nowrap'}}>\n          {table.getState().pagination.pageIndex + 1} of {table.getPageCount()}\n        </Text>\n\n        <Button\n          onClick={() => table.nextPage()}\n          disabled={!table.getCanNextPage()}\n          icon={ChevronRightIcon}\n          tooltipProps={{\n            content: 'Go to next page',\n          }}\n        />\n        <Button\n          onClick={() => table.setPageIndex(table.getPageCount() - 1)}\n          disabled={!table.getCanNextPage()}\n          icon={DoubleChevronRightIcon}\n          tooltipProps={{\n            content: 'Go to last page',\n          }}\n        />\n        <select\n          value={table.getState().pagination.pageSize}\n          onChange={(e) => {\n            table.setPageSize(Number(e.target.value))\n          }}\n        >\n          {[25, 50, 100].map((pageSize) => (\n            <option key={pageSize} value={pageSize}>\n              {pageSize}\n            </option>\n          ))}\n        </select>\n      </Flex>\n    </TooltipDelayGroupProvider>\n  )\n}\n","import {type ListenEvent, type ListenOptions} from '@sanity/client'\nimport {useCallback, useEffect, useMemo, useReducer, useState} from 'react'\nimport {catchError, of} from 'rxjs'\nimport {DEFAULT_STUDIO_CLIENT_OPTIONS, getDraftId, type SanityDocument, useClient} from 'sanity'\n\ninterface DocumentDeletedAction {\n  id: string\n  type: 'DOCUMENT_DELETED'\n}\n\ninterface DocumentUpdatedAction {\n  payload: SanityDocument\n  type: 'DOCUMENT_UPDATED'\n}\n\ninterface DocumentsSetAction {\n  documents: SanityDocument[]\n  type: 'DOCUMENTS_SET'\n}\n\ninterface DocumentReceivedAction {\n  payload: SanityDocument\n  type: 'DOCUMENT_RECEIVED'\n}\n\nexport type DocumentsReducerAction =\n  | DocumentDeletedAction\n  | DocumentUpdatedAction\n  | DocumentsSetAction\n  | DocumentReceivedAction\n\nexport interface DocumentsReducerState {\n  documents: Record<string, SanityDocument>\n}\n\nfunction createDocumentsSet(documents: SanityDocument[]) {\n  const documentsById = documents.reduce((acc, doc) => ({...acc, [doc._id]: doc}), {})\n  return documentsById\n}\n\nfunction documentsReducer(\n  state: DocumentsReducerState,\n  action: DocumentsReducerAction,\n): DocumentsReducerState {\n  switch (action.type) {\n    case 'DOCUMENTS_SET': {\n      // Create an object with the documents id as key\n      const documents = createDocumentsSet(action.documents)\n\n      return {\n        ...state,\n        documents: documents,\n      }\n    }\n\n    case 'DOCUMENT_RECEIVED': {\n      const nextDocumentResult = action.payload as SanityDocument\n\n      return {\n        ...state,\n        documents: {\n          ...state.documents,\n          [nextDocumentResult._id]: nextDocumentResult,\n        },\n      }\n    }\n\n    case 'DOCUMENT_DELETED': {\n      const {[action.id]: _, ...restDocuments} = state.documents\n\n      return {\n        ...state,\n        documents: restDocuments,\n      }\n    }\n\n    case 'DOCUMENT_UPDATED': {\n      const updatedDocument = action.payload\n      const id = updatedDocument._id as string\n      const document = state.documents[id]\n\n      const nextDocument = {\n        // Add existing document data\n        ...document,\n        // Add incoming document data\n        ...updatedDocument,\n      } satisfies SanityDocument\n\n      return {\n        ...state,\n        documents: {\n          ...state.documents,\n          [id]: nextDocument,\n        },\n      }\n    }\n\n    default:\n      return state\n  }\n}\n\nconst LISTEN_OPTIONS: ListenOptions = {\n  events: ['welcome', 'mutation', 'reconnect'],\n  includeResult: true,\n  visibility: 'query',\n  includeAllVersions: true,\n  tag: 'document-sheet-list-store',\n}\n\n/**\n * TODO:\n * [] Lazy load more documents, reduce initial fetch.\n * [] Add support for sorting and filtering.\n * []  Make a projection of the query according to the schema. e.g. get only the primitive fields and the _id to reduce the data payload.\n */\nexport function useDocumentSheetListStore({\n  filter,\n  params,\n  apiVersion,\n}: {\n  filter: string\n  params?: Record<string, unknown>\n  apiVersion?: string\n}) {\n  const QUERY = `*[${filter}][0...2000]`\n  const client = useClient({\n    ...DEFAULT_STUDIO_CLIENT_OPTIONS,\n    apiVersion: apiVersion || DEFAULT_STUDIO_CLIENT_OPTIONS.apiVersion,\n  })\n  const [state, dispatch] = useReducer(documentsReducer, {\n    documents: {},\n  })\n  const [isLoading, setIsLoading] = useState<boolean>(client !== null)\n  const [error, setError] = useState<Error | null>(null)\n\n  const initialFetch = useCallback(async () => {\n    if (!client) {\n      setIsLoading(false)\n      return\n    }\n    try {\n      const res = await client.fetch(QUERY, params)\n      dispatch({type: 'DOCUMENTS_SET', documents: res})\n      setIsLoading(false)\n    } catch (err) {\n      setError(err)\n    }\n  }, [client, params, QUERY])\n\n  const handleListenerEvent = useCallback(\n    async (event: ListenEvent<Record<string, SanityDocument>>) => {\n      // Fetch all documents on initial connection\n      if (event.type === 'welcome') {\n        setIsLoading(true)\n        await initialFetch()\n        setIsLoading(false)\n      }\n\n      // The reconnect event means that we are trying to reconnect to the realtime listener.\n      // In this case we set loading to true to indicate that we're trying to\n      // reconnect. Once a connection has been established, the welcome event\n      // will be received and we'll fetch all documents again (above).\n      if (event.type === 'reconnect') {\n        setIsLoading(true)\n      }\n\n      // Handle mutations (create, update, delete) from the realtime listener\n      // and update the documents store accordingly\n      if (event.type === 'mutation') {\n        if (event.transition === 'appear') {\n          const nextDocument = event.result as SanityDocument | undefined\n\n          if (nextDocument) {\n            dispatch({\n              type: 'DOCUMENT_RECEIVED',\n              payload: nextDocument,\n            })\n          }\n        }\n\n        if (event.transition === 'disappear') {\n          dispatch({type: 'DOCUMENT_DELETED', id: event.documentId})\n        }\n\n        if (event.transition === 'update') {\n          const updatedDocument = event.result as SanityDocument | undefined\n\n          if (updatedDocument) {\n            dispatch({\n              type: 'DOCUMENT_UPDATED',\n              payload: updatedDocument,\n            })\n          }\n        }\n      }\n    },\n    [initialFetch],\n  )\n\n  const listener$ = useMemo(() => {\n    if (!client) return of()\n\n    const events$ = client.observable.listen(QUERY, params, LISTEN_OPTIONS).pipe(\n      catchError((err) => {\n        setError(err)\n        return of(err)\n      }),\n    )\n\n    return events$\n  }, [client, params, QUERY])\n\n  useEffect(() => {\n    const sub = listener$.subscribe(handleListenerEvent)\n\n    return () => {\n      sub?.unsubscribe()\n    }\n  }, [handleListenerEvent, listener$])\n\n  // Contemplate that we could have drafts and live documents here, merge them.\n  const dataAsArray = useMemo(() => {\n    // Joins the drafts and the live documents\n    const uniques = Object.keys(state.documents).reduce(\n      (acc: {[key: string]: SanityDocument}, key) => {\n        const document = state.documents[key]\n        const isDraft = document._id === getDraftId(document._id)\n        const id = isDraft ? document._id : getDraftId(document._id)\n        // If we already have the document, and this document is not the draft one, it means\n        // the draft hast already been added to the list, so we skip it.\n        if (acc[id] && !isDraft) {\n          return acc\n        }\n        acc[id] = document\n        return acc\n      },\n      {},\n    )\n    return Object.values(uniques)\n  }, [state.documents])\n\n  return {\n    data: dataAsArray,\n    isLoading,\n    error,\n  }\n}\n","import {useMemo} from 'react'\nimport {getPublishedId, useSearchState} from 'sanity'\n\nimport {useDocumentSheetListStore} from './useDocumentSheetListStore'\n\ninterface DocumentSheetListOptions {\n  /** The schemaType.name  */\n  typeName: string\n}\n\nexport function useDocumentSheetList({typeName}: DocumentSheetListOptions) {\n  const {state} = useSearchState()\n\n  const items = useMemo(() => {\n    const map = new Map()\n    state.result.hits.forEach((h) => map.set(getPublishedId(h.hit._id), h.hit))\n    return map\n  }, [state.result.hits])\n\n  // The store is listening to all the documents that match with the _type filter.\n  const {data, isLoading} = useDocumentSheetListStore({\n    filter: `_type == \"${typeName}\"`,\n  })\n\n  // Only return the documents that match with the serverSide filter items.\n  const documents = useMemo(() => {\n    return data.filter((doc) => items.has(getPublishedId(doc._id)))\n  }, [data, items])\n\n  return {data: documents, isLoading}\n}\n","'use no memo'\n// The `use no memo` directive is due to a known issue with react-table and react compiler: https://github.com/TanStack/table/issues/5567\n\nimport {isDocumentSchemaType, type ObjectSchemaType, type SanityDocument} from '@sanity/types'\nimport {Box, Flex, Text} from '@sanity/ui'\nimport {\n  getCoreRowModel,\n  getFilteredRowModel,\n  getPaginationRowModel,\n  type Row,\n  useReactTable,\n} from '@tanstack/react-table'\nimport {useCallback, useEffect, useState} from 'react'\nimport {SearchProvider, useSchema, useSearchState} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {type BaseStructureToolPaneProps} from '../../types'\nimport {ColumnsControl} from './ColumnsControl'\nimport {DocumentSheetListFilter} from './DocumentSheetListFilter'\nimport {DocumentSheetListHeader} from './DocumentSheetListHeader'\nimport {DocumentSheetListPaginator} from './DocumentSheetListPaginator'\nimport {DocumentSheetListProvider} from './DocumentSheetListProvider'\nimport {SheetListCell} from './SheetListCell'\nimport {useDocumentSheetColumns} from './useDocumentSheetColumns'\nimport {useDocumentSheetList} from './useDocumentSheetList'\n\ntype DocumentSheetListPaneProps = BaseStructureToolPaneProps<'documentList'>\n\nconst PaneContainer = styled(Flex)`\n  height: 100%;\n`\nconst TableContainer = styled.div`\n  overflow: auto; //our scrollable table container\n  position: relative; //needed for sticky header\n`\nconst Table = styled.table`\n  border-collapse: separate;\n  border-spacing: 0;\n  font-family: arial, sans-serif;\n  white-space: nowrap;\n  width: 100%;\n  border: 1px solid lightgray;\n\n  thead {\n    display: grid;\n    position: sticky;\n    top: 0;\n    z-index: 10;\n  }\n  tr {\n    padding: 0;\n  }\n  tr:last-child {\n    border-bottom: none;\n  }\n`\n\nfunction DocumentSheetListPaneInner({\n  documentSchemaType,\n}: DocumentSheetListPaneProps & {documentSchemaType: ObjectSchemaType}) {\n  const {dispatch, state} = useSearchState()\n  const {columns, initialColumnsVisibility} = useDocumentSheetColumns(documentSchemaType)\n  const {data} = useDocumentSheetList({\n    typeName: documentSchemaType.name,\n  })\n  const [selectedAnchor, setSelectedAnchor] = useState<number | null>(null)\n\n  const totalRows = state.result.hits.length\n  const table = useReactTable({\n    data,\n    columns,\n    getCoreRowModel: getCoreRowModel(),\n    getFilteredRowModel: getFilteredRowModel(),\n    getPaginationRowModel: getPaginationRowModel(),\n    // Avoids resetting the page index when the data changes, e.g. a mutation is received\n    autoResetPageIndex: false,\n    initialState: {\n      columnPinning: {left: ['selected', 'Preview']},\n      pagination: {pageSize: 25},\n      columnVisibility: initialColumnsVisibility,\n    },\n    getRowId: (row) => row._id,\n    meta: {\n      selectedAnchor,\n      setSelectedAnchor,\n      patchDocument: (documentId, fieldId, value) => null,\n    },\n  })\n\n  const {rows} = table.getRowModel()\n\n  useEffect(() => {\n    dispatch({type: 'TERMS_TYPE_ADD', schemaType: documentSchemaType})\n    return () => {\n      dispatch({type: 'TERMS_TYPE_REMOVE', schemaType: documentSchemaType})\n    }\n  }, [documentSchemaType, dispatch])\n\n  const renderRow = useCallback((row: Row<SanityDocument>) => {\n    return (\n      <Box\n        key={row.original._id + row.id}\n        as=\"tr\"\n        paddingY={2}\n        style={{display: 'flex', width: '100%'}}\n      >\n        {row.getVisibleCells().map((cell) => (\n          <SheetListCell key={row.original._id + cell.id} {...cell} />\n        ))}\n      </Box>\n    )\n  }, [])\n\n  const rowsCount = `Total: ${totalRows} rows, showing ${rows.length} rows`\n  return (\n    <PaneContainer direction=\"column\" paddingX={3} data-testid=\"document-sheet-list-pane\">\n      <Flex direction=\"row\" align=\"center\" paddingY={3} paddingX={1} justify=\"space-between\">\n        <Flex direction=\"row\" align=\"center\">\n          <DocumentSheetListFilter />\n          <Text size={0} muted>\n            {rowsCount}\n          </Text>\n        </Flex>\n        <ColumnsControl table={table} />\n      </Flex>\n      <TableContainer>\n        <DocumentSheetListProvider table={table}>\n          <Table>\n            <thead>\n              {table.getHeaderGroups().map((headerGroup) => (\n                <Box key={headerGroup.id} as=\"tr\">\n                  {headerGroup.headers.map((header) => (\n                    <DocumentSheetListHeader\n                      key={header.id}\n                      header={header}\n                      headerGroup={headerGroup}\n                    />\n                  ))}\n                </Box>\n              ))}\n            </thead>\n            <tbody>{table.getRowModel().rows.map(renderRow)}</tbody>\n          </Table>\n        </DocumentSheetListProvider>\n      </TableContainer>\n      <Flex justify={'flex-end'} padding={3} gap={4} paddingY={5}>\n        <DocumentSheetListPaginator table={table} />\n      </Flex>\n    </PaneContainer>\n  )\n}\n\nexport function DocumentSheetListPane(props: DocumentSheetListPaneProps) {\n  const schema = useSchema()\n  const typeName = props.pane.schemaTypeName\n\n  const schemaType = schema.get(typeName)\n  if (!schemaType || !isDocumentSchemaType(schemaType)) {\n    throw new Error(`Schema type \"${typeName}\" not found or not a document schema`)\n  }\n  return (\n    <SearchProvider>\n      <DocumentSheetListPaneInner {...props} documentSchemaType={schemaType} />\n    </SearchProvider>\n  )\n}\n","import {Card, Code} from '@sanity/ui'\nimport {isEqual} from 'lodash'\nimport {memo, useMemo, useState} from 'react'\nimport {\n  EMPTY_ARRAY,\n  type GeneralDocumentListLayoutKey,\n  SourceProvider,\n  useI18nText,\n  useSource,\n} from 'sanity'\nimport shallowEquals from 'shallow-equals'\n\nimport {Pane} from '../../components/pane'\nimport {_DEBUG} from '../../constants'\nimport {type PaneMenuItem} from '../../types'\nimport {useStructureToolSetting} from '../../useStructureToolSetting'\nimport {type BaseStructureToolPaneProps} from '../types'\nimport {DEFAULT_ORDERING, EMPTY_RECORD} from './constants'\nimport {DocumentListPane} from './DocumentListPane'\nimport {findStaticTypesInFilter} from './helpers'\nimport {PaneHeader} from './PaneHeader'\nimport {DocumentSheetListPane} from './sheetList/DocumentSheetListPane'\nimport {type SortOrder} from './types'\n\nconst addSelectedStateToMenuItems = (options: {\n  menuItems?: PaneMenuItem[]\n  sortOrderRaw?: SortOrder\n  layout?: GeneralDocumentListLayoutKey\n}) => {\n  const {menuItems, sortOrderRaw, layout} = options\n\n  return menuItems?.map((item) => {\n    if (item.params?.layout) {\n      return {\n        ...item,\n        selected: layout === item.params?.layout,\n      }\n    }\n\n    if (item?.params?.by) {\n      return {\n        ...item,\n        selected: isEqual(sortOrderRaw?.by, item?.params?.by || EMPTY_ARRAY),\n      }\n    }\n\n    return {...item, selected: false}\n  })\n}\n\nexport function useShallowUnique<ValueType>(value: ValueType): ValueType {\n  const [previous, setPrevious] = useState<ValueType>(value)\n  if (!shallowEquals(previous, value)) {\n    setPrevious(value)\n    return value\n  }\n  return previous\n}\n\n/**\n * @internal\n */\nexport const PaneContainer = memo(function PaneContainer(\n  props: BaseStructureToolPaneProps<'documentList'>,\n) {\n  const {index, isSelected, pane, paneKey} = props\n  const {name: parentSourceName} = useSource()\n\n  const {\n    defaultLayout = 'default',\n    initialValueTemplates = EMPTY_ARRAY,\n    menuItemGroups,\n    menuItems,\n    options,\n  } = pane\n  const {defaultOrdering = EMPTY_ARRAY, filter} = options\n  const params = useShallowUnique(options.params || EMPTY_RECORD)\n  const sourceName = pane.source\n  const typeName = useMemo(() => {\n    const staticTypes = findStaticTypesInFilter(filter, params)\n    if (staticTypes?.length === 1) return staticTypes[0]\n    return null\n  }, [filter, params])\n\n  const [layout, setLayout] = useStructureToolSetting<GeneralDocumentListLayoutKey>(\n    'layout',\n    typeName ?? pane.id, //pane.id for anything that is not documentTypeList\n    defaultLayout,\n  )\n\n  const {title} = useI18nText(pane)\n\n  // Ensure that we use the defaultOrdering value from structure builder if any as the default\n  const defaultSortOrder = useMemo(() => {\n    return defaultOrdering?.length > 0 ? {by: defaultOrdering} : DEFAULT_ORDERING\n  }, [defaultOrdering])\n\n  const [sortOrderRaw, setSortOrder] = useStructureToolSetting<SortOrder>(\n    'sort-order',\n    typeName ?? pane.id, //pane.id for anything that is not documentTypeList\n    defaultSortOrder,\n  )\n\n  const menuItemsWithSelectedState = useMemo(\n    () =>\n      addSelectedStateToMenuItems({\n        menuItems,\n        sortOrderRaw,\n        layout,\n      }),\n    [layout, menuItems, sortOrderRaw],\n  )\n\n  const isSheetListLayout = layout === 'sheetList'\n  const paneLayout = isSheetListLayout ? (\n    <DocumentSheetListPane key={props.pane.id} {...props} />\n  ) : (\n    <DocumentListPane {...props} sortOrder={sortOrderRaw} layout={layout} />\n  )\n\n  return (\n    <SourceProvider name={sourceName || parentSourceName}>\n      <Pane\n        data-ui=\"DocumentListPane\"\n        id={paneKey}\n        minWidth={320}\n        {...(isSheetListLayout ? {} : {currentMaxWidth: 350, maxWidth: 640})}\n        selected={isSelected}\n      >\n        {_DEBUG && (\n          <Card padding={4} tone=\"transparent\">\n            <Code>{pane.source || '(none)'}</Code>\n          </Card>\n        )}\n\n        <PaneHeader\n          index={index}\n          initialValueTemplates={initialValueTemplates}\n          menuItemGroups={menuItemGroups}\n          menuItems={menuItemsWithSelectedState}\n          setLayout={setLayout}\n          setSortOrder={setSortOrder}\n          title={title}\n        />\n        {paneLayout}\n      </Pane>\n    </SourceProvider>\n  )\n})\nPaneContainer.displayName = 'Memo(PaneContainer)'\n","import {type DocumentBadgeComponent} from 'sanity'\n\n/** @internal */\nexport const LiveEditBadge: DocumentBadgeComponent = (props) => {\n  const {liveEditSchemaType, version} = props\n\n  if (liveEditSchemaType && !version) {\n    return {\n      label: 'Live',\n      color: 'danger',\n    }\n  }\n\n  return null\n}\nLiveEditBadge.displayName = 'LiveEditBadge'\n","import {uuid} from '@sanity/uuid'\n\nimport {EMPTY_PARAMS, type LOADING_PANE} from './constants'\nimport {type PaneNode, type RouterPanes} from './types'\n\nconst state: {\n  activePanes: Array<PaneNode | typeof LOADING_PANE>\n} = {activePanes: []}\n\nexport function setActivePanes(panes: Array<PaneNode | typeof LOADING_PANE>): void {\n  state.activePanes = panes\n}\n\n/**\n * This function looks at the _active panes_ to resolve an intent. this type of\n * intent resolution is faster and does not cause the panes to reset\n *\n * @internal\n */\nexport function getIntentState(\n  intent: string,\n  params: Record<string, string>,\n  routerState: {panes?: RouterPanes} | undefined,\n  payload: unknown,\n): {panes: RouterPanes} | {intent: string; params: Record<string, string>; payload: unknown} {\n  const panes = routerState?.panes || []\n  const activePanes = state.activePanes || []\n  const editDocumentId = params.id || uuid()\n\n  // Loop through open panes and see if any of them can handle the intent\n  for (let i = activePanes.length - 1; i >= 0; i--) {\n    const pane = activePanes[i]\n\n    if (typeof pane !== 'object') continue\n\n    // NOTE: if you update this logic, please also update the similar handler in\n    // `resolveIntent.ts`\n    if (\n      pane.canHandleIntent?.(intent, params, {\n        pane,\n        index: i,\n      }) ||\n      // see `resolveIntent.ts` for more info\n      (pane.type === 'documentList' &&\n        pane.schemaTypeName === params.type &&\n        pane.options.filter === '_type == $type')\n    ) {\n      const paneParams = getPaneParams(intent, params)\n\n      return {\n        panes: panes\n          .slice(0, i)\n          .concat([[{id: editDocumentId, params: paneParams, payload}]]) as RouterPanes,\n      }\n    }\n  }\n\n  return {intent: intent, params, payload}\n}\n\nfunction getPaneParams(\n  intent: string,\n  {template, version}: Record<string, string>,\n): {template?: string; version?: string} {\n  if (intent !== 'create') return EMPTY_PARAMS\n  if (template && version) return {template, version}\n  if (template) return {template}\n  if (version) return {version}\n  return EMPTY_PARAMS\n}\n","import {type ObjectDiff} from '@sanity/diff'\nimport {BoundaryElementProvider, Box, Card, Flex, Text} from '@sanity/ui'\nimport {useMemo, useState} from 'react'\nimport {\n  ChangeFieldWrapper,\n  ChangeList,\n  type DocumentChangeContextInstance,\n  LoadingBlock,\n  NoChanges,\n  type ObjectSchemaType,\n  ScrollContainer,\n  usePerspective,\n  useTimelineSelector,\n  useTranslation,\n} from 'sanity'\nimport {DocumentChangeContext} from 'sanity/_singletons'\nimport {styled} from 'styled-components'\n\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {TimelineMenu} from '../../timeline'\nimport {TimelineError} from '../../timeline/TimelineError'\nimport {useDocumentPane} from '../../useDocumentPane'\n\nconst Scroller = styled(ScrollContainer)`\n  height: 100%;\n  overflow: auto;\n  position: relative;\n  scroll-behavior: smooth;\n`\n\nconst Grid = styled(Box)`\n  &:not([hidden]) {\n    display: grid;\n  }\n  grid-template-columns: 48px 1fr;\n  align-items: center;\n  gap: 0.25em;\n`\n\nexport function ChangesInspector({showChanges}: {showChanges: boolean}): React.JSX.Element {\n  const {documentId, schemaType, timelineError, timelineStore, value} = useDocumentPane()\n  const {selectedReleaseId} = usePerspective()\n\n  const [scrollRef, setScrollRef] = useState<HTMLDivElement | null>(null)\n\n  const rev = useTimelineSelector(timelineStore, (state) => state.revTime)\n  const diff = useTimelineSelector(timelineStore, (state) => state.diff)\n  const onOlderRevision = useTimelineSelector(timelineStore, (state) => state.onOlderRevision)\n  const selectionState = useTimelineSelector(timelineStore, (state) => state.selectionState)\n  const sinceTime = useTimelineSelector(timelineStore, (state) => state.sinceTime)\n  const loading = selectionState === 'loading'\n  const isComparingCurrent = !onOlderRevision\n\n  // Note that we are using the studio core namespace here, as changes theoretically should\n  // be part of Sanity core (needs to be moved from structure at some point)\n  const {t: structureT} = useTranslation(structureLocaleNamespace)\n\n  const documentContext: DocumentChangeContextInstance = useMemo(\n    () => ({\n      documentId,\n      schemaType,\n      FieldWrapper: (props) => <ChangeFieldWrapper {...props} hasRevertHover={false} />,\n      rootDiff: diff,\n      isComparingCurrent,\n      value,\n      showFromValue: true,\n    }),\n    [documentId, diff, isComparingCurrent, schemaType, value],\n  )\n\n  if (selectedReleaseId) {\n    return (\n      <Flex data-testid=\"review-changes-pane\" direction=\"column\" height=\"fill\">\n        <Card flex={1} padding={2} paddingTop={0}>\n          <TimelineError versionError />\n        </Card>\n      </Flex>\n    )\n  }\n\n  return (\n    <Flex data-testid=\"review-changes-pane\" direction=\"column\" height=\"fill\" overflow=\"hidden\">\n      <Box padding={3}>\n        <Grid paddingX={2} paddingBottom={2}>\n          <Text size={1} muted>\n            {structureT('changes.from.label')}\n          </Text>\n\n          <TimelineMenu mode=\"since\" chunk={sinceTime} placement=\"bottom-start\" />\n          <Text size={1} muted>\n            {structureT('changes.to.label')}\n          </Text>\n          <TimelineMenu chunk={rev} mode=\"rev\" placement=\"bottom-end\" />\n        </Grid>\n      </Box>\n\n      <Card flex={1} paddingX={2} paddingY={2}>\n        <BoundaryElementProvider element={scrollRef}>\n          <Scroller data-ui=\"Scroller\" ref={setScrollRef}>\n            <Box flex={1} paddingX={3} height=\"fill\">\n              {showChanges && (\n                <Content\n                  diff={diff}\n                  documentContext={documentContext}\n                  error={timelineError}\n                  loading={loading}\n                  schemaType={schemaType}\n                />\n              )}\n            </Box>\n          </Scroller>\n        </BoundaryElementProvider>\n      </Card>\n    </Flex>\n  )\n}\n\nfunction Content({\n  error,\n  diff,\n  documentContext,\n  loading,\n  schemaType,\n}: {\n  error?: Error | null\n  diff: ObjectDiff<any> | null\n  documentContext: DocumentChangeContextInstance\n  loading: boolean\n  schemaType: ObjectSchemaType\n}) {\n  if (error) {\n    return <NoChanges />\n  }\n\n  if (loading) {\n    return <LoadingBlock showText />\n  }\n\n  if (!diff) {\n    return <NoChanges />\n  }\n\n  return (\n    <DocumentChangeContext.Provider value={documentContext}>\n      <ChangeList diff={diff} schemaType={schemaType} />\n    </DocumentChangeContext.Provider>\n  )\n}\n","import {Card, Flex} from '@sanity/ui'\nimport {type MouseEvent, useCallback} from 'react'\nimport {\n  type DocumentGroupEvent,\n  Event,\n  isDeleteDocumentGroupEvent,\n  isDeleteDocumentVersionEvent,\n  isScheduleDocumentVersionEvent,\n  isUnpublishDocumentEvent,\n  isUnscheduleDocumentVersionEvent,\n  useTranslation,\n} from 'sanity'\n\nimport {Tooltip} from '../../../../../ui-components'\n\nexport interface TimelineItemProps {\n  event: DocumentGroupEvent\n  isSelected: boolean\n  onSelect: (chunk: DocumentGroupEvent) => void\n  optionsMenu?: React.ReactNode\n}\n\nconst getIsSelectable = (event: DocumentGroupEvent) => {\n  return (\n    !isDeleteDocumentVersionEvent(event) &&\n    !isDeleteDocumentGroupEvent(event) &&\n    !isUnpublishDocumentEvent(event) &&\n    !isScheduleDocumentVersionEvent(event) &&\n    !isUnscheduleDocumentVersionEvent(event)\n  )\n}\n\nexport function EventTimelineItem({event, isSelected, onSelect, optionsMenu}: TimelineItemProps) {\n  const {t} = useTranslation('studio')\n  const isSelectable = getIsSelectable(event)\n  const handleClick = useCallback(\n    (evt: MouseEvent<HTMLDivElement>) => {\n      evt.preventDefault()\n      evt.stopPropagation()\n\n      if (isSelectable) {\n        onSelect(event)\n      }\n    },\n    [onSelect, event, isSelectable],\n  )\n  return (\n    <Flex gap={1}>\n      <Tooltip content={isSelectable ? '' : t('changes.not-selectable')} disabled={isSelectable}>\n        <Card\n          as={isSelectable ? 'button' : 'div'}\n          onClick={handleClick}\n          padding={2}\n          pressed={isSelected}\n          radius={2}\n          data-ui=\"timelineItem\"\n          data-testid=\"timeline-item-button\"\n          data-chunk-timestamp={event.timestamp}\n          style={{\n            cursor: isSelectable ? 'pointer' : 'default',\n            width: '100%',\n          }}\n        >\n          <Event event={event} showChangesBy=\"tooltip\" />\n        </Card>\n      </Tooltip>\n      {optionsMenu}\n    </Flex>\n  )\n}\n","import {\n  Flex,\n  Menu,\n  // eslint-disable-next-line no-restricted-imports\n  MenuItem,\n  Text,\n  usePortal,\n} from '@sanity/ui'\nimport {useCallback} from 'react'\nimport {\n  ContextMenuButton,\n  getReleaseIdFromReleaseDocumentId,\n  getReleaseTone,\n  getVersionFromId,\n  isReleaseDocument,\n  type PublishDocumentVersionEvent,\n  RELEASES_INTENT,\n  Translate,\n  useSetPerspective,\n  useTranslation,\n  VersionInlineBadge,\n} from 'sanity'\nimport {IntentLink} from 'sanity/router'\n\nimport {MenuButton} from '../../../../../ui-components'\nimport {usePaneRouter} from '../../../../components/paneRouter/usePaneRouter'\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {TIMELINE_MENU_PORTAL} from '../timelineMenu'\n\nexport function PublishedEventMenu({event}: {event: PublishDocumentVersionEvent}) {\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {t: tCore} = useTranslation()\n  const portalContext = usePortal()\n  const {params, setParams} = usePaneRouter()\n  const setPerspective = useSetPerspective()\n\n  const handleOpenReleaseDocument = useCallback(() => {\n    setParams({\n      ...params,\n      rev: event.versionRevisionId || '@lastPublished',\n      since: undefined,\n      historyEvent: event.id,\n      historyVersion: getVersionFromId(event.versionId),\n    })\n  }, [setParams, params, event])\n\n  const handleOpenDraftDocument = useCallback(() => {\n    setParams({\n      ...params,\n      rev: event.versionRevisionId,\n      preserveRev: 'true',\n      since: undefined,\n    })\n    setTimeout(() => {\n      // A bug is generated when we change the perspective and the params at the same time\n      // Resetting the params to the value it had before, because the paneRouter uses the previous value\n      setPerspective('drafts')\n    }, 100)\n  }, [setParams, params, event.versionRevisionId, setPerspective])\n\n  const VersionBadge = ({children}: {children: React.ReactNode}) => {\n    return (\n      <VersionInlineBadge\n        $tone={\n          event.release\n            ? isReleaseDocument(event.release)\n              ? getReleaseTone(event.release)\n              : 'default'\n            : undefined\n        }\n      >\n        {children}\n      </VersionInlineBadge>\n    )\n  }\n  const isMenuDisabled = event.release && !isReleaseDocument(event.release)\n  return (\n    <MenuButton\n      id={`timeline-item-menu-button-${event.versionId}`}\n      button={\n        <ContextMenuButton\n          aria-label={t('timeline-item.menu-button.aria-label')}\n          tooltipProps={{\n            content: isMenuDisabled\n              ? t('timeline-item.not-found-release.tooltip', {\n                  releaseId: event.release?._id\n                    ? getReleaseIdFromReleaseDocumentId(event.release._id)\n                    : undefined,\n                })\n              : t('timeline-item.menu-button.tooltip'),\n          }}\n          disabled={isMenuDisabled}\n        />\n      }\n      menu={\n        <Menu padding={1}>\n          {event.release ? (\n            <>\n              <IntentLink\n                intent={RELEASES_INTENT}\n                params={{id: getReleaseIdFromReleaseDocumentId(event.release._id)}}\n                style={{textDecoration: 'none'}}\n              >\n                <MenuItem padding={3}>\n                  <Flex align={'center'} justify=\"flex-start\">\n                    <Text size={1} style={{textDecoration: 'none'}}>\n                      <Translate\n                        components={{\n                          VersionBadge: ({children}) => <VersionBadge>{children}</VersionBadge>,\n                        }}\n                        i18nKey=\"events.open.release\"\n                        values={{\n                          releaseTitle:\n                            event.release.metadata?.title ||\n                            tCore('release.placeholder-untitled-release'),\n                        }}\n                        t={t}\n                      />\n                    </Text>\n                  </Flex>\n                </MenuItem>\n              </IntentLink>\n              <MenuItem onClick={handleOpenReleaseDocument}>\n                <Flex align={'center'} justify=\"flex-start\">\n                  <Text size={1}>\n                    <Translate\n                      components={{\n                        VersionBadge: ({children}) => <VersionBadge>{children}</VersionBadge>,\n                      }}\n                      i18nKey=\"events.inspect.release\"\n                      values={{\n                        releaseTitle:\n                          event.release.metadata?.title ||\n                          tCore('release.placeholder-untitled-release'),\n                      }}\n                      t={t}\n                    />\n                  </Text>\n                </Flex>\n              </MenuItem>\n            </>\n          ) : (\n            <MenuItem onClick={handleOpenDraftDocument} disabled={!event.versionRevisionId}>\n              <Flex align={'center'}>\n                <Text size={1}>\n                  <Translate\n                    components={{\n                      VersionBadge: ({children}) => (\n                        <VersionInlineBadge $tone=\"caution\">{children}</VersionInlineBadge>\n                      ),\n                    }}\n                    i18nKey=\"events.open.draft\"\n                    t={t}\n                  />\n                </Text>\n              </Flex>\n            </MenuItem>\n          )}\n        </Menu>\n      }\n      popover={{\n        // when used inside the timeline menu we want to keep the element inside the popover, to avoid closing the popover when clicking expand.\n        portal: portalContext.elements?.[TIMELINE_MENU_PORTAL] ? TIMELINE_MENU_PORTAL : true,\n        placement: 'bottom',\n        fallbackPlacements: ['bottom-end', 'bottom-start'],\n      }}\n    />\n  )\n}\n","import {Box, Flex, Spinner, Stack, Text} from '@sanity/ui'\nimport {motion, type Variants} from 'framer-motion'\nimport {useCallback, useEffect, useMemo, useState} from 'react'\nimport {\n  CommandList,\n  type CommandListRenderItemCallback,\n  type DocumentGroupEvent,\n  getDocumentVariantType,\n  isCreateDocumentVersionEvent,\n  isDeleteDocumentVersionEvent,\n  isEditDocumentVersionEvent,\n  isPublishDocumentVersionEvent,\n  LoadingBlock,\n  useTranslation,\n} from 'sanity'\n\nimport {ExpandableTimelineItemButton} from '../expandableTimelineItemButton'\nimport {ListWrapper, Root} from '../timeline.styled'\nimport {EventTimelineItem} from './EventTimelineItem'\nimport {PublishedEventMenu} from './PublishedEventMenu'\n\ninterface TimelineProps {\n  events: DocumentGroupEvent[]\n  hasMoreEvents: boolean | null\n  selectedEventId?: string\n  onLoadMore: () => void\n  onSelect: (event: DocumentGroupEvent) => void\n  fetchEventChildren: (event: DocumentGroupEvent) => Promise<void>\n  /**\n   * The list needs a predefined max height for the scroller to work.\n   */\n  listMaxHeight?: string\n}\n\nconst TimelineItemWrapper = motion.create(Box)\nconst CHILDREN_ITEMS_VARIANTS: Variants = {\n  initial: {\n    opacity: 0,\n  },\n  animate: {\n    opacity: 1,\n  },\n  exit: {\n    opacity: 0,\n  },\n}\n\nconst ITEM_HEIGHT = 57\n\nexport const TIMELINE_LIST_WRAPPER_ID = 'timeline-list-wrapper'\n\nexport const EventsTimeline = ({\n  events: allEvents,\n  hasMoreEvents,\n  selectedEventId,\n  onLoadMore,\n  onSelect,\n  listMaxHeight = 'calc(100vh - 280px)',\n  fetchEventChildren,\n}: TimelineProps) => {\n  const [mounted, setMounted] = useState(false)\n  const {t} = useTranslation('studio')\n  const [expandedParents, setExpandedParents] = useState<Set<string>>(() => {\n    if (selectedEventId) {\n      // Find that event and if it has a parent, expand the parent.\n      const selectedEvent = allEvents.find((event) => event.id === selectedEventId)\n      if (selectedEvent && 'parentId' in selectedEvent && selectedEvent.parentId) {\n        return new Set([selectedEvent.parentId])\n      }\n    }\n    return new Set()\n  })\n  const [expandingParents, setExpandingParents] = useState<Set<string>>(new Set())\n\n  const events = useMemo(() => {\n    return allEvents.filter((event) => {\n      if (isCreateDocumentVersionEvent(event) && event.parentId) {\n        // Check if it's the last event in the list, in that case, we want to show it\n        const isLastEvent = allEvents[allEvents.length - 1].id === event.id\n        if (isLastEvent) return true\n        return expandedParents.has(event.parentId)\n      }\n      if (isEditDocumentVersionEvent(event) && event.parentId) {\n        return expandedParents.has(event.parentId)\n      }\n      return true\n    })\n  }, [expandedParents, allEvents])\n\n  const handleExpandParent = useCallback(\n    (event: DocumentGroupEvent) => async () => {\n      const parentId = event.id\n\n      let isExpanding = false\n      setExpandedParents((prev) => {\n        const next = new Set(prev)\n\n        if (prev.has(parentId)) next.delete(parentId)\n        else {\n          isExpanding = true\n          next.add(parentId)\n        }\n\n        return next\n      })\n      if (isExpanding) {\n        setExpandingParents((prev) => {\n          const next = new Set(prev)\n          next.add(parentId)\n          return next\n        })\n        await fetchEventChildren(event)\n        setExpandingParents((prev) => {\n          const next = new Set(prev)\n          next.delete(parentId)\n          return next\n        })\n      }\n    },\n    [fetchEventChildren, setExpandingParents],\n  )\n\n  const handleSelectChunk = useCallback(\n    (event: DocumentGroupEvent) => {\n      onSelect(event)\n    },\n    [onSelect],\n  )\n\n  const renderOptionsMenu = useCallback(\n    (event: DocumentGroupEvent) => {\n      const documentVariantType = getDocumentVariantType(event.documentId)\n      if (isPublishDocumentVersionEvent(event) && documentVariantType === 'published') {\n        return <PublishedEventMenu event={event} />\n      }\n      if (\n        (isPublishDocumentVersionEvent(event) &&\n          documentVariantType === 'draft' &&\n          event.creationEvent) ||\n        (isDeleteDocumentVersionEvent(event) && event.creationEvent)\n      ) {\n        return (\n          <ExpandableTimelineItemButton\n            isExpanded={expandedParents.has(event.id)}\n            onExpand={handleExpandParent(event)}\n          />\n        )\n      }\n      return null\n    },\n    [expandedParents, handleExpandParent],\n  )\n\n  const renderItem = useCallback<CommandListRenderItemCallback<DocumentGroupEvent[][number]>>(\n    (event, {activeIndex}) => {\n      /**\n       * The create version event will be present while expanding (loading the edits), so we are attaching to it the loading block at the top.\n       * - publishEvent (expanding?)\n       * --- loadingBlock  ~createEvent~\n       * */\n      const showExpandingLoader =\n        isCreateDocumentVersionEvent(event) &&\n        event.parentId &&\n        expandingParents.has(event.parentId)\n\n      const isLastEvent = activeIndex === events.length - 1\n      if (showExpandingLoader) {\n        return (\n          <TimelineItemWrapper\n            animate={{opacity: 1}}\n            initial={{opacity: 0}}\n            transition={{duration: 0.2, delay: 0.2}}\n          >\n            {/* We need this item to match the same height as the rest of the list items, which is 57px */}\n            <Flex align=\"center\" justify=\"center\" style={{height: ITEM_HEIGHT}}>\n              <Spinner />\n            </Flex>\n          </TimelineItemWrapper>\n        )\n      }\n      return (\n        <TimelineItemWrapper\n          key={event.timestamp}\n          paddingBottom={1}\n          paddingRight={1}\n          animate=\"animate\"\n          exit=\"exit\"\n          initial=\"initial\"\n          variants={'parentId' in event ? CHILDREN_ITEMS_VARIANTS : undefined}\n          paddingLeft={\n            (isEditDocumentVersionEvent(event) || isCreateDocumentVersionEvent(event)) &&\n            event.parentId &&\n            !isLastEvent\n              ? 4\n              : 1\n          }\n        >\n          <EventTimelineItem\n            event={event}\n            isSelected={event.id === selectedEventId}\n            onSelect={handleSelectChunk}\n            optionsMenu={renderOptionsMenu(event)}\n          />\n\n          {isLastEvent && hasMoreEvents && <LoadingBlock />}\n        </TimelineItemWrapper>\n      )\n    },\n    [\n      expandingParents,\n      selectedEventId,\n      handleSelectChunk,\n      renderOptionsMenu,\n      events.length,\n      hasMoreEvents,\n    ],\n  )\n\n  useEffect(() => setMounted(true), [])\n  const selectedIndex = events.findIndex((event) => event.id === selectedEventId)\n\n  return (\n    <Root\n      /**\n       * We delay initial rendering if `selectedIndex` is present.\n       * This is a _temporary_ workaround to allow the virtual <CommandList>\n       * to scroll to a specific index prior to being displayed.\n       *\n       * Without this, there'll be a noticeable 'flash' where the virtual list\n       * will render with its child items at the top and then scroll into position.\n       */\n      $visible={!selectedIndex || mounted}\n      data-ui=\"timeline\"\n    >\n      {events.length > 0 ? (\n        <ListWrapper direction=\"column\" $maxHeight={listMaxHeight} id={TIMELINE_LIST_WRAPPER_ID}>\n          <CommandList\n            activeItemDataAttr=\"data-hovered\"\n            ariaLabel={t('timeline.list.aria-label')}\n            autoFocus=\"list\"\n            initialIndex={selectedIndex}\n            initialScrollAlign=\"center\"\n            itemHeight={ITEM_HEIGHT}\n            items={events}\n            onEndReached={onLoadMore}\n            onEndReachedIndexOffset={20}\n            overscan={5}\n            renderItem={renderItem}\n            wrapAround={false}\n          />\n        </ListWrapper>\n      ) : (\n        <Stack padding={3} space={3}>\n          <Text size={1} weight=\"medium\">\n            {t('timeline.error.no-document-history-title')}\n          </Text>\n          <Text muted size={1}>\n            {t('timeline.error.no-document-history-description')}\n          </Text>\n        </Stack>\n      )}\n    </Root>\n  )\n}\n\nEventsTimeline.displayName = 'EventsTimeline'\n","import {ChevronDownIcon} from '@sanity/icons'\nimport {\n  Flex,\n  type Placement,\n  PortalProvider,\n  useClickOutsideEvent,\n  useGlobalKeyDown,\n  useToast,\n} from '@sanity/ui'\nimport {useCallback, useMemo, useState} from 'react'\nimport {\n  type DocumentGroupEvent,\n  isDeleteDocumentGroupEvent,\n  isDeleteDocumentVersionEvent,\n  isScheduleDocumentVersionEvent,\n  isUnpublishDocumentEvent,\n  isUnscheduleDocumentVersionEvent,\n  TIMELINE_ITEM_I18N_KEY_MAPPING,\n  useEvents,\n  useTranslation,\n} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Button, Popover} from '../../../../../ui-components'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {TimelineError} from '../TimelineError'\nimport {EventsTimeline} from './EventsTimeline'\n\ninterface TimelineMenuProps {\n  event: DocumentGroupEvent | null\n  events: DocumentGroupEvent[]\n  mode: 'rev' | 'since'\n  placement?: Placement\n}\n\nconst Root = styled(Popover)`\n  overflow: hidden;\n  overflow: clip;\n`\n\nexport const TIMELINE_MENU_PORTAL = 'timeline-menu'\n\nconst formatParams = {\n  timestamp: {dateStyle: 'medium', timeStyle: 'short'},\n}\n\nexport function EventsTimelineMenu({event, events, mode, placement}: TimelineMenuProps) {\n  const {setTimelineRange} = useDocumentPane()\n  const [open, setOpen] = useState(false)\n  const [button, setButton] = useState<HTMLButtonElement | null>(null)\n  const [popoverRef, setPopoverRef] = useState<HTMLElement | null>(null)\n  const toast = useToast()\n  const {\n    nextCursor,\n    loading,\n    error: eventsError,\n    findRangeForRevision,\n    findRangeForSince,\n    loadMoreEvents,\n    expandEvent,\n  } = useEvents()\n\n  const {t} = useTranslation('studio')\n\n  const handleOpen = useCallback(() => {\n    setOpen(true)\n  }, [])\n\n  const handleClose = useCallback(() => {\n    setOpen(false)\n  }, [])\n\n  const handleGlobalKeyDown = useCallback(\n    (e: KeyboardEvent) => {\n      if (open && (e.key === 'Escape' || e.key === 'Tab')) {\n        handleClose()\n        button?.focus()\n      }\n    },\n    [button, handleClose, open],\n  )\n\n  useGlobalKeyDown(handleGlobalKeyDown)\n  useClickOutsideEvent(open && handleClose, () => [button, popoverRef])\n\n  const selectRev = useCallback(\n    (revEvent: DocumentGroupEvent) => {\n      try {\n        if (\n          isDeleteDocumentVersionEvent(revEvent) ||\n          isDeleteDocumentGroupEvent(revEvent) ||\n          isUnpublishDocumentEvent(revEvent) ||\n          isScheduleDocumentVersionEvent(revEvent) ||\n          isUnscheduleDocumentVersionEvent(revEvent)\n        ) {\n          console.error('Event is not selectable')\n          return\n        }\n        const [since, rev] = findRangeForRevision(revEvent?.id)\n        setTimelineRange(since, rev)\n        handleClose()\n      } catch (err) {\n        toast.push({\n          closable: true,\n          description: err.message,\n          status: 'error',\n          title: t('timeline.error.unable-to-load-revision'),\n        })\n      }\n    },\n    [t, toast, setTimelineRange, findRangeForRevision, handleClose],\n  )\n\n  const selectSince = useCallback(\n    (sinceEvent: DocumentGroupEvent) => {\n      try {\n        const [since, rev] = findRangeForSince(sinceEvent.id)\n        setTimelineRange(since, rev)\n        handleClose()\n      } catch (err) {\n        toast.push({\n          closable: true,\n          description: err.message,\n          status: 'error',\n          title: t('timeline.error.unable-to-load-revision'),\n        })\n      }\n    },\n    [findRangeForSince, setTimelineRange, toast, t, handleClose],\n  )\n\n  const handleLoadMore = useCallback(() => {\n    if (!loading && nextCursor) {\n      loadMoreEvents()\n    }\n  }, [loading, loadMoreEvents, nextCursor])\n\n  const content = useMemo(() => {\n    if (eventsError) return <TimelineError />\n\n    return (\n      <EventsTimeline\n        events={events}\n        fetchEventChildren={expandEvent}\n        hasMoreEvents={Boolean(nextCursor)}\n        selectedEventId={event?.id}\n        onLoadMore={handleLoadMore}\n        onSelect={mode === 'rev' ? selectRev : selectSince}\n      />\n    )\n  }, [\n    eventsError,\n    mode,\n    expandEvent,\n    events,\n    nextCursor,\n    event?.id,\n    handleLoadMore,\n    selectSince,\n    selectRev,\n  ])\n\n  const revLabel = event\n    ? t(TIMELINE_ITEM_I18N_KEY_MAPPING[event.documentVariantType][event.type], {\n        context: 'timestamp',\n        timestamp: new Date(event.timestamp),\n        formatParams,\n      })\n    : t('timeline.latest-revision')\n\n  const sinceLabel = event\n    ? t(TIMELINE_ITEM_I18N_KEY_MAPPING[event.documentVariantType][event.type], {\n        context: 'timestamp',\n        timestamp: new Date(event.timestamp),\n        formatParams,\n      })\n    : events.length > 0\n      ? t('timeline.since-version-missing')\n      : t('timeline.no-previous-events')\n\n  const buttonLabel = mode === 'rev' ? revLabel : sinceLabel\n  const portalElements = useMemo(\n    () => ({\n      [TIMELINE_MENU_PORTAL]: popoverRef,\n    }),\n    [popoverRef],\n  )\n\n  return (\n    <PortalProvider __unstable_elements={portalElements}>\n      <Root\n        data-testid=\"timeline-menu\"\n        constrainSize\n        content={open && content}\n        data-ui=\"versionMenu\"\n        open={open}\n        placement={placement}\n        matchReferenceWidth\n        portal\n        ref={setPopoverRef}\n      >\n        <Flex width={'fill'}>\n          <Button\n            data-testid={open ? 'timeline-menu-close-button' : 'timeline-menu-open-button'}\n            disabled={loading || !events.length}\n            mode=\"ghost\"\n            onClick={open ? handleClose : handleOpen}\n            ref={setButton}\n            selected={open}\n            width=\"fill\"\n            tooltipProps={null}\n            justify={'space-between'}\n            style={{\n              maxWidth: '100%',\n            }}\n            iconRight={ChevronDownIcon}\n            text={loading ? t('timeline.loading-history') : buttonLabel}\n          />\n        </Flex>\n      </Root>\n    </PortalProvider>\n  )\n}\n","import {diffInput, wrap} from '@sanity/diff'\nimport {BoundaryElementProvider, Box, Card, Flex, Spinner, Stack, Text} from '@sanity/ui'\nimport {motion} from 'framer-motion'\nimport {type ReactElement, useMemo, useState} from 'react'\nimport {useObservable} from 'react-rx'\nimport {\n  ChangeFieldWrapper,\n  ChangeList,\n  ChangesError,\n  type DocumentChangeContextInstance,\n  type DocumentGroupEvent,\n  isReleaseDocument,\n  LoadingBlock,\n  NoChanges,\n  type ObjectDiff,\n  type ObjectSchemaType,\n  ScrollContainer,\n  Translate,\n  useEvents,\n  usePerspective,\n  useTranslation,\n} from 'sanity'\nimport {DocumentChangeContext} from 'sanity/_singletons'\nimport {styled} from 'styled-components'\n\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {EventsTimelineMenu} from '../../timeline/events/EventsTimelineMenu'\nimport {useDocumentPane} from '../../useDocumentPane'\n\nconst Scroller = styled(ScrollContainer)`\n  height: 100%;\n  overflow: auto;\n  position: relative;\n  scroll-behavior: smooth;\n`\n\nconst Grid = styled(Box)`\n  &:not([hidden]) {\n    display: grid;\n  }\n  grid-template-columns: 48px 1fr;\n  align-items: center;\n  gap: 0.25em;\n`\n\nconst SpinnerContainer = styled(Flex)`\n  width: 100%;\n  position: absolute;\n  bottom: -4px;\n`\n\nconst DIFF_INITIAL_VALUE = {\n  diff: null,\n  loading: true,\n  error: null,\n}\n\nconst CompareWithPublishedView = () => {\n  const {documentId, schemaType, editState, displayed} = useDocumentPane()\n  const {selectedPerspective, selectedPerspectiveName, selectedReleaseId} = usePerspective()\n  const {t} = useTranslation(structureLocaleNamespace)\n  const rootDiff = useMemo(() => {\n    const diff = diffInput(\n      wrap(editState?.published ?? {}, {author: ''}),\n      wrap(displayed ?? {}, {author: ''}),\n    ) as ObjectDiff\n\n    return diff\n  }, [editState?.published, displayed])\n\n  if (selectedReleaseId && !editState?.version) {\n    return null\n  }\n  if (selectedPerspective === 'drafts' && !editState?.draft) {\n    return null\n  }\n  if (selectedPerspectiveName === 'published' || !displayed?._rev) {\n    return null\n  }\n  return (\n    <Stack space={2} marginBottom={3}>\n      <Card borderBottom paddingBottom={3}>\n        <Stack space={3} paddingTop={1}>\n          <Text size={1} weight=\"medium\">\n            {t('events.compare-with-published.title')}\n          </Text>\n          <Text size={1} muted>\n            <Translate\n              i18nKey=\"events.compare-with-published.description\"\n              t={t}\n              values={{\n                version: isReleaseDocument(selectedPerspective)\n                  ? selectedPerspective.metadata?.title\n                  : 'draft',\n              }}\n            />\n          </Text>\n        </Stack>\n      </Card>\n      <DocumentChangeContext.Provider\n        value={{\n          documentId,\n          schemaType,\n          rootDiff,\n          isComparingCurrent: true,\n          FieldWrapper: (props) => props.children,\n          value: displayed,\n          showFromValue: true,\n        }}\n      >\n        <Box paddingY={1}>\n          <ChangeList diff={rootDiff} schemaType={schemaType} />\n        </Box>\n      </DocumentChangeContext.Provider>\n    </Stack>\n  )\n}\nexport function EventsInspector({showChanges}: {showChanges: boolean}): ReactElement {\n  const {documentId, schemaType, timelineError, value, formState} = useDocumentPane()\n  const [scrollRef, setScrollRef] = useState<HTMLDivElement | null>(null)\n\n  const {events, revision, sinceRevision, getChangesList} = useEvents()\n\n  const isComparingCurrent = !revision?.revisionId\n  const changesList$ = useMemo(() => getChangesList(), [getChangesList])\n  const {\n    diff,\n    loading: diffLoading,\n    error: diffError,\n  } = useObservable(changesList$, DIFF_INITIAL_VALUE)\n\n  const {t} = useTranslation('studio')\n\n  const documentContext: DocumentChangeContextInstance = useMemo(() => {\n    return {\n      documentId,\n      schemaType,\n      FieldWrapper: (props) =>\n        props.path.length > 0 ? <ChangeFieldWrapper {...props} /> : props.children,\n      rootDiff: diff,\n      isComparingCurrent: isComparingCurrent && !formState?.readOnly,\n      value,\n      showFromValue: true,\n    }\n  }, [diff, documentId, isComparingCurrent, formState?.readOnly, schemaType, value])\n\n  const [sinceEvent, toEvent] = useMemo(() => {\n    if (!events) return [null, null]\n    return [\n      events.find((e) => e.id === sinceRevision?.revisionId) || null,\n      events.find((e) => e.id === revision?.revisionId) || events[0],\n    ]\n  }, [events, revision?.revisionId, sinceRevision?.revisionId])\n\n  const sinceEvents = useMemo(() => {\n    // The sinceEvents need to account the toEvent showing only events that are older than the toEvent\n    if (!toEvent) return events.slice(1)\n    return events.slice(events.indexOf(toEvent) + 1).map((event) => {\n      // If the to event has a parent id, we need to remove the parent id from the since events or they won't be rendered, as they have no parent to expand.\n      if (\n        ('parentId' in toEvent && 'parentId' in event && event.parentId === toEvent.parentId) ||\n        ('parentId' in event && toEvent.id === event.parentId)\n      ) {\n        return {...event, parentId: undefined}\n      }\n      return event\n    })\n  }, [events, toEvent])\n  if (!events.length) {\n    return (\n      <Box paddingX={2}>\n        <Stack padding={3} space={3}>\n          <Text size={1} weight=\"medium\">\n            {t('timeline.error.no-document-history-title')}\n          </Text>\n          <Text muted size={1}>\n            {t('timeline.error.no-document-history-description')}\n          </Text>\n        </Stack>\n      </Box>\n    )\n  }\n  return (\n    <Flex data-testid=\"review-changes-pane\" direction=\"column\" height=\"fill\" overflow=\"hidden\">\n      <Box padding={3} style={{position: 'relative'}}>\n        <Grid paddingX={2} paddingBottom={2}>\n          <Text size={1} muted>\n            {t('changes.inspector.from-label')}\n          </Text>\n          <EventsTimelineMenu\n            event={sinceEvent || null}\n            events={sinceEvents}\n            mode=\"since\"\n            placement=\"bottom-start\"\n          />\n          <Text size={1} muted>\n            {t('changes.inspector.to-label')}\n          </Text>\n          <EventsTimelineMenu\n            event={toEvent || null}\n            events={events}\n            mode=\"rev\"\n            placement=\"bottom-end\"\n          />\n        </Grid>\n        {diffLoading && (\n          <motion.div\n            animate={{opacity: 1}}\n            initial={{opacity: 0}}\n            transition={{delay: 0.2, duration: 0.2}}\n          >\n            <SpinnerContainer justify=\"center\" align=\"center\" gap={2}>\n              <Text muted size={0}>\n                {t('changes.loading-changes')}\n              </Text>\n              <Spinner size={0} />\n            </SpinnerContainer>\n          </motion.div>\n        )}\n      </Box>\n\n      <Card flex={1} paddingX={2} paddingY={2}>\n        <BoundaryElementProvider element={scrollRef}>\n          <Scroller data-ui=\"Scroller\" ref={setScrollRef}>\n            <Box flex={1} paddingX={3} height=\"fill\">\n              {showChanges && (\n                <Content\n                  documentContext={documentContext}\n                  error={timelineError || diffError}\n                  loading={revision?.loading || sinceRevision?.loading || false}\n                  schemaType={schemaType}\n                  sameRevisionSelected={sinceEvent?.id === toEvent?.id}\n                  sinceEvent={sinceEvent}\n                />\n              )}\n            </Box>\n          </Scroller>\n        </BoundaryElementProvider>\n      </Card>\n    </Flex>\n  )\n}\n\nfunction Content({\n  error,\n  documentContext,\n  loading,\n  schemaType,\n  sameRevisionSelected,\n  sinceEvent,\n}: {\n  error?: Error | null\n  documentContext: DocumentChangeContextInstance\n  loading: boolean\n  schemaType: ObjectSchemaType\n  sameRevisionSelected: boolean\n  sinceEvent: DocumentGroupEvent | null\n}) {\n  if (error) {\n    return (\n      <>\n        <CompareWithPublishedView />\n        {sinceEvent?.type !== 'historyCleared' && <ChangesError error={error} />}\n      </>\n    )\n  }\n\n  if (loading) {\n    return <LoadingBlock showText />\n  }\n  if (sameRevisionSelected) {\n    return <SameRevisionSelected />\n  }\n\n  if (!documentContext.rootDiff) {\n    return (\n      <motion.div\n        animate={{opacity: 1}}\n        initial={{opacity: 0}}\n        transition={{delay: 0.2, duration: 0.2}}\n      >\n        <NoChanges />\n      </motion.div>\n    )\n  }\n\n  return (\n    <DocumentChangeContext.Provider value={documentContext}>\n      <Box paddingY={1}>\n        <ChangeList diff={documentContext.rootDiff} schemaType={schemaType} />\n      </Box>\n    </DocumentChangeContext.Provider>\n  )\n}\n\nfunction SameRevisionSelected() {\n  const {t} = useTranslation('')\n  return (\n    <motion.div\n      animate={{opacity: 1}}\n      initial={{opacity: 0}}\n      transition={{delay: 0.2, duration: 0.2}}\n    >\n      <Stack space={3} paddingTop={2}>\n        <Text size={1} weight=\"medium\" as=\"h3\">\n          {t('changes.same-revision-selected-title')}\n        </Text>\n        <Text as=\"p\" size={1} muted>\n          <Translate i18nKey=\"changes.same-revision-selected-description\" t={t} />\n        </Text>\n      </Stack>\n    </motion.div>\n  )\n}\n","import {BoundaryElementProvider, Card, Flex, useToast} from '@sanity/ui'\nimport {useCallback, useState} from 'react'\nimport {\n  type DocumentGroupEvent,\n  isDeleteDocumentGroupEvent,\n  isDeleteDocumentVersionEvent,\n  isScheduleDocumentVersionEvent,\n  isUnpublishDocumentEvent,\n  isUnscheduleDocumentVersionEvent,\n  LoadingBlock,\n  ScrollContainer,\n  useEvents,\n  useTranslation,\n} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {EventsTimeline} from '../../timeline/events/EventsTimeline'\nimport {TimelineError} from '../../timeline/TimelineError'\nimport {useDocumentPane} from '../../useDocumentPane'\n\nconst Scroller = styled(ScrollContainer)`\n  height: 100%;\n  overflow: auto;\n  position: relative;\n  scroll-behavior: smooth;\n`\n\nexport function EventsSelector({showList}: {showList: boolean}) {\n  const [scrollRef, setScrollRef] = useState<HTMLDivElement | null>(null)\n  const [listHeight, setListHeight] = useState(0)\n  const {setTimelineRange} = useDocumentPane()\n  const getScrollerRef = useCallback(\n    (el: HTMLDivElement | null) => {\n      if (!listHeight && el) {\n        /**\n         * Hacky solution, the list height needs to be defined, it cannot be obtained from the parent using a `max-height: 100%`\n         * Because the scroller won't work properly and it won't scroll to the selected element on mount.\n         * To fix this, this component will set the list height to the height of the parent element - 1px, to avoid a double scroll line.\n         */\n        setListHeight(el.clientHeight ? el.clientHeight - 1 : 0)\n        setScrollRef(el)\n      }\n    },\n    [listHeight],\n  )\n  const {\n    events,\n    nextCursor,\n    loading,\n    error,\n    revision,\n    loadMoreEvents,\n    findRangeForRevision,\n    expandEvent,\n  } = useEvents()\n\n  const {t} = useTranslation('studio')\n  const toast = useToast()\n\n  const selectRev = useCallback(\n    (event: DocumentGroupEvent) => {\n      try {\n        if (\n          isDeleteDocumentVersionEvent(event) ||\n          isDeleteDocumentGroupEvent(event) ||\n          isUnpublishDocumentEvent(event) ||\n          isScheduleDocumentVersionEvent(event) ||\n          isUnscheduleDocumentVersionEvent(event)\n        ) {\n          console.error('Event is not selectable')\n          return\n        }\n        const [since, rev] = findRangeForRevision(event.id)\n        setTimelineRange(since, rev)\n      } catch (err) {\n        toast.push({\n          closable: true,\n          description: err.message,\n          status: 'error',\n          title: t('timeline.error.unable-to-load-revision'),\n        })\n      }\n    },\n    [t, toast, setTimelineRange, findRangeForRevision],\n  )\n\n  const initialLoad = loading && !events.length\n  return (\n    <Flex data-testid=\"review-changes-pane\" direction=\"column\" height=\"fill\">\n      <Card flex={1} padding={2} paddingTop={0}>\n        {error ? (\n          <TimelineError />\n        ) : (\n          <BoundaryElementProvider element={scrollRef}>\n            <Scroller data-ui=\"Scroller\" ref={getScrollerRef}>\n              {listHeight &&\n              // This forces the list to unmount and remount, which is needed to reset the scroll position\n              showList &&\n              !initialLoad ? (\n                <EventsTimeline\n                  events={events}\n                  fetchEventChildren={expandEvent}\n                  hasMoreEvents={Boolean(nextCursor)}\n                  // If we have a revision, we select it, otherwise we select the first event\n                  selectedEventId={revision?.revisionId || events[0]?.id}\n                  onLoadMore={loadMoreEvents}\n                  onSelect={selectRev}\n                  listMaxHeight={`${listHeight}px`}\n                />\n              ) : null}\n              {loading && <LoadingBlock />}\n            </Scroller>\n          </BoundaryElementProvider>\n        )}\n      </Card>\n    </Flex>\n  )\n}\n","import {BoundaryElementProvider, Card, Flex, useToast} from '@sanity/ui'\nimport {useCallback, useState} from 'react'\nimport {\n  type Chunk,\n  ScrollContainer,\n  usePerspective,\n  useTimelineSelector,\n  useTranslation,\n} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Timeline} from '../../timeline'\nimport {TimelineError} from '../../timeline/TimelineError'\nimport {useDocumentPane} from '../../useDocumentPane'\n\nconst Scroller = styled(ScrollContainer)`\n  height: 100%;\n  overflow: auto;\n  position: relative;\n  scroll-behavior: smooth;\n`\n\nexport function HistorySelector({showList}: {showList: boolean}) {\n  const {timelineError, setTimelineRange, timelineStore} = useDocumentPane()\n  const {selectedReleaseId} = usePerspective()\n  const [scrollRef, setScrollRef] = useState<HTMLDivElement | null>(null)\n  const [listHeight, setListHeight] = useState(0)\n\n  const getScrollerRef = useCallback((el: HTMLDivElement | null) => {\n    if (!el?.clientHeight) return\n    /**\n     * Hacky solution, the list height needs to be defined, it cannot be obtained from the parent using a `max-height: 100%`\n     * Because the scroller won't work properly and it won't scroll to the selected element on mount.\n     * To fix this, this component will set the list height to the height of the parent element - 1px, to avoid a double scroll line.\n     */\n    setListHeight(el.clientHeight - 1)\n    setScrollRef(el)\n  }, [])\n\n  const chunks = useTimelineSelector(timelineStore, (state) => state.chunks)\n  const realRevChunk = useTimelineSelector(timelineStore, (state) => state.realRevChunk)\n  const hasMoreChunks = useTimelineSelector(timelineStore, (state) => state.hasMoreChunks)\n  const loading = useTimelineSelector(timelineStore, (state) => state.isLoading)\n\n  const {t} = useTranslation('studio')\n  const toast = useToast()\n  const selectRev = useCallback(\n    (revChunk: Chunk) => {\n      try {\n        const [sinceId, revId] = timelineStore?.findRangeForRev(revChunk) || [null, null]\n        setTimelineRange(sinceId, revId)\n      } catch (err) {\n        toast.push({\n          closable: true,\n          description: err.message,\n          status: 'error',\n          title: t('timeline.error.unable-to-load-revision'),\n        })\n      }\n    },\n    [setTimelineRange, t, timelineStore, toast],\n  )\n\n  const handleLoadMore = useCallback(() => {\n    // If updated, be sure to update the TimeLineMenu component as well\n    if (!loading) {\n      timelineStore?.loadMore()\n    }\n  }, [loading, timelineStore])\n\n  return (\n    <Flex data-testid=\"review-changes-pane\" direction=\"column\" height=\"fill\">\n      <Card flex={1} padding={2} paddingTop={0}>\n        {timelineError || selectedReleaseId ? (\n          <TimelineError versionError={Boolean(selectedReleaseId)} />\n        ) : (\n          <BoundaryElementProvider element={scrollRef}>\n            <Scroller data-ui=\"Scroller\" ref={getScrollerRef}>\n              {listHeight &&\n              // This forces the list to unmount and remount, which is needed to reset the scroll position\n              showList ? (\n                <Timeline\n                  chunks={chunks}\n                  hasMoreChunks={hasMoreChunks}\n                  lastChunk={realRevChunk}\n                  onLoadMore={handleLoadMore}\n                  onSelect={selectRev}\n                  listMaxHeight={`${listHeight}px`}\n                />\n              ) : null}\n            </Scroller>\n          </BoundaryElementProvider>\n        )}\n      </Card>\n    </Flex>\n  )\n}\n","import {CloseIcon, InfoOutlineIcon} from '@sanity/icons'\nimport {Box, Card, Flex, TabList, TabPanel, Text} from '@sanity/ui'\nimport {useState} from 'react'\nimport {\n  type DocumentInspectorProps,\n  isReleaseDocument,\n  Translate,\n  usePerspective,\n  useSource,\n  useTranslation,\n} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Button, Tab, Tooltip} from '../../../../../ui-components'\nimport {usePaneRouter} from '../../../../components/paneRouter/usePaneRouter'\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {HISTORY_INSPECTOR_NAME} from '../../constants'\nimport {ChangesInspector} from './ChangesInspector'\nimport {EventsInspector} from './EventsInspector'\nimport {EventsSelector} from './EventsSelector'\nimport {HistorySelector} from './HistorySelector'\n\nconst FadeInFlex = styled(Flex)`\n  opacity: 0;\n  transition: opacity 200ms;\n  &[data-ready] {\n    opacity: 1;\n  }\n`\nconst TABS = ['history', 'review'] as const\nconst isValidTab = (tab: string | undefined): tab is (typeof TABS)[number] =>\n  // @ts-expect-error TS doesn't understand the type guard\n  tab && TABS.includes(tab)\n\nexport function ChangesTabs(props: DocumentInspectorProps) {\n  const {params, setParams} = usePaneRouter()\n  const source = useSource()\n  const [parentRef, setParentRef] = useState<HTMLDivElement | null>(null)\n  const {t} = useTranslation(structureLocaleNamespace)\n  const isReady = params?.inspect === HISTORY_INSPECTOR_NAME\n  const {selectedPerspective} = usePerspective()\n\n  const paneRouterTab = isValidTab(params?.changesInspectorTab)\n    ? params.changesInspectorTab\n    : TABS[0]\n\n  const setPaneRouterTab = (tab: (typeof TABS)[number]) =>\n    setParams({\n      ...params,\n      changesInspectorTab: tab,\n      // Reset the since when changing the tab, as it's not relevant for the history tab\n      since: tab === 'history' ? undefined : params?.since,\n    })\n\n  const perspectiveName = isReleaseDocument(selectedPerspective)\n    ? selectedPerspective.metadata.title\n    : selectedPerspective === 'drafts'\n      ? t('compare-versions.status.draft')\n      : t('compare-versions.status.published')\n\n  return (\n    <FadeInFlex\n      direction=\"column\"\n      padding={0}\n      height=\"fill\"\n      data-ready={isReady ? '' : undefined}\n      ref={setParentRef}\n    >\n      <Card paddingBottom={1}>\n        <Flex align=\"center\" padding={3} gap={2}>\n          <TabList space={1} flex={1}>\n            <Tab\n              aria-controls=\"history-panel\"\n              id=\"history-tab\"\n              label={t('changes.tab.history')}\n              onClick={() => setPaneRouterTab('history')}\n              selected={paneRouterTab === 'history'}\n            />\n            <Tab\n              aria-controls=\"review-changes-panel\"\n              id=\"changes-tab\"\n              label={t('changes.tab.review-changes')}\n              onClick={() => setPaneRouterTab('review')}\n              selected={paneRouterTab === 'review'}\n            />\n          </TabList>\n          <Button\n            aria-label={t('changes.action.close-label')}\n            icon={CloseIcon}\n            mode=\"bleed\"\n            onClick={props.onClose}\n            tooltipProps={{content: t('document-inspector.close-button.tooltip')}}\n          />\n        </Flex>\n      </Card>\n      <Card padding={2} marginBottom={3} marginX={3} tone=\"neutral\" border radius={3}>\n        <Flex gap={2} align=\"flex-start\">\n          <Tooltip\n            portal\n            placement=\"bottom-end\"\n            boundaryElement={parentRef}\n            content={\n              <Box flex={1} padding={1}>\n                <Text size={1}>\n                  <Translate t={t} i18nKey=\"changes.banner.tooltip\" />\n                </Text>\n              </Box>\n            }\n          >\n            <Text size={0} muted>\n              <InfoOutlineIcon fontSize={1} />\n            </Text>\n          </Tooltip>\n          <Text size={0} muted>\n            <Translate\n              t={t}\n              values={{\n                perspective: perspectiveName,\n              }}\n              i18nKey=\"changes.banner.description\"\n            />\n          </Text>\n        </Flex>\n      </Card>\n\n      <TabPanel\n        aria-labelledby=\"history-tab\"\n        height=\"fill\"\n        hidden={paneRouterTab !== 'history'}\n        id=\"history-panel\"\n      >\n        {source.beta?.eventsAPI?.documents ? (\n          <EventsSelector showList={paneRouterTab === 'history'} />\n        ) : (\n          <HistorySelector showList={paneRouterTab === 'history'} />\n        )}\n      </TabPanel>\n\n      <TabPanel\n        aria-labelledby=\"review-tab\"\n        hidden={paneRouterTab !== 'review'}\n        id=\"review-panel\"\n        height=\"fill\"\n      >\n        {source.beta?.eventsAPI?.documents ? (\n          <>\n            {paneRouterTab === 'review' ? (\n              <EventsInspector showChanges={paneRouterTab === 'review'} />\n            ) : null}\n          </>\n        ) : (\n          <ChangesInspector showChanges={paneRouterTab === 'review'} />\n        )}\n      </TabPanel>\n    </FadeInFlex>\n  )\n}\n","import {RestoreIcon} from '@sanity/icons'\nimport {type DocumentInspector, useTranslation} from 'sanity'\n\nimport {useStructureTool} from '../../../../useStructureTool'\nimport {HISTORY_INSPECTOR_NAME} from '../../constants'\nimport {ChangesTabs} from './ChangesTabs'\n\nexport const changesInspector: DocumentInspector = {\n  name: HISTORY_INSPECTOR_NAME,\n  useMenuItem: () => {\n    const {features} = useStructureTool()\n    const {t} = useTranslation()\n\n    return {\n      hidden: !features.reviewChanges,\n      icon: RestoreIcon,\n      title: t('changes.title'),\n    }\n  },\n  component: ChangesTabs,\n  onClose: ({params}) => ({\n    params: {\n      ...params,\n      since: undefined,\n      rev: undefined,\n      changesInspectorTab: undefined,\n      historyVersion: undefined,\n    },\n  }),\n  onOpen: ({params}) => ({params: {...params, since: '@lastPublished'}}),\n}\n","/* eslint-disable no-loop-func */\n\nimport {type Path, type SanityDocument, type SchemaType} from '@sanity/types'\nimport {isArray, isRecord} from 'sanity'\n\n// eslint-disable-next-line max-statements\nexport function getPathTitles(options: {\n  path: Path\n  schemaType: SchemaType\n  value: Partial<SanityDocument> | null\n}): Array<{name: string; title?: string}> {\n  const {path, schemaType, value} = options\n  const result: Array<{name: string; title?: string}> = []\n\n  let s = schemaType\n  let v: unknown = value\n\n  for (const segment of path) {\n    // field name\n    if (typeof segment === 'string') {\n      if (!isRecord(v) && v !== undefined) {\n        throw new Error(`Parent value is not an object, cannot get path segment: .${segment}`)\n      }\n\n      if (s.jsonType !== 'object') {\n        throw new Error(\n          `Parent type is not an object schema type, cannot get path segment: .${segment}`,\n        )\n      }\n\n      v = v?.[segment]\n\n      const field = s.fields.find((f) => f.name === segment)\n\n      if (!field) {\n        result.push({name: segment})\n        return result\n      }\n\n      s = field.type\n\n      result.push(s)\n\n      continue\n    }\n\n    // array item index\n    if (typeof segment === 'number') {\n      if (!isArray(v) && v !== undefined) {\n        throw new Error(`Parent value is not an array, cannot get path segment: [${segment}]`)\n      }\n\n      if (s.jsonType !== 'array') {\n        throw new Error(\n          `Parent type is not an array schema type, cannot get path segment: [${segment}]`,\n        )\n      }\n\n      v = v?.[segment]\n\n      const itemType = s.of.find((ofType) => {\n        if (typeof v === 'string') {\n          return ofType.jsonType === 'string'\n        }\n\n        if (typeof v === 'number') {\n          return ofType.jsonType === 'number'\n        }\n\n        if (typeof v === 'boolean') {\n          return ofType.jsonType === 'boolean'\n        }\n\n        if (isRecord(v)) {\n          return ofType.name === v?._type\n        }\n\n        return false\n      })\n\n      if (!itemType) {\n        throw new Error(`Item type not found: [${segment}]`)\n      }\n\n      s = itemType\n\n      result.push(s)\n\n      continue\n    }\n\n    // array item key\n    if (isRecord(segment) && segment._key) {\n      // if the value is undefined, it likely means that is has been deleted, so return the result\n      if (typeof v === 'undefined') {\n        return result\n      }\n\n      if (!isArray(v)) {\n        throw new Error(\n          `Parent value is not an array, cannot get path segment: [_key == ${segment}]`,\n        )\n      }\n\n      if (s.jsonType !== 'array') {\n        throw new Error(\n          `Parent type is not an array schema type, cannot get path segment: .${segment}`,\n        )\n      }\n\n      const values = v ?? []\n\n      v = values.find((i) => isRecord(i) && i._key === segment._key)\n\n      // in situations where the segment key exists but it could not be found in the values array\n      // means that the specific item has been deleted from the array\n      // and therefore we not need to continue running the validation for it\n      if (typeof v === 'undefined') {\n        return result\n      }\n\n      if (!isRecord(v)) {\n        throw new Error(`Array item not found: [_key == ${segment._key}]`)\n      }\n\n      const ofType = s.of.find((i) => isRecord(v) && i.name === v?._type)\n\n      if (!ofType) {\n        throw new Error(`Array item type not found: .${v?._type}`)\n      }\n\n      s = ofType\n\n      result.push(s)\n\n      continue\n    }\n\n    throw new Error(`Invalid path segment: ${JSON.stringify(segment)}`)\n  }\n\n  return result\n}\n","import {\n  ErrorOutlineIcon,\n  type IconComponent,\n  InfoOutlineIcon,\n  WarningOutlineIcon,\n} from '@sanity/icons'\nimport {\n  type ObjectSchemaType,\n  type Path,\n  type SanityDocument,\n  type SchemaType,\n  type ValidationMarker,\n} from '@sanity/types'\nimport {Box, Card, type CardTone, Flex, Stack, Text} from '@sanity/ui'\nimport {type ErrorInfo, Fragment, useCallback, useMemo, useState} from 'react'\nimport {type DocumentInspectorProps, isGoingToUnpublish, useTranslation} from 'sanity'\n\nimport {ErrorBoundary} from '../../../../../ui-components'\nimport {DocumentInspectorHeader} from '../../documentInspector'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {getPathTitles} from './getPathTitles'\n\nconst MARKER_ICON: Record<'error' | 'warning' | 'info', IconComponent> = {\n  error: ErrorOutlineIcon,\n  warning: WarningOutlineIcon,\n  info: InfoOutlineIcon,\n}\n\nconst MARKER_TONE: Record<'error' | 'warning' | 'info', CardTone> = {\n  error: 'critical',\n  warning: 'caution',\n  info: 'primary',\n}\n\nexport function ValidationInspector(props: DocumentInspectorProps) {\n  const {onClose} = props\n  const {onFocus, onPathOpen, schemaType, validation, value, editState} = useDocumentPane()\n  const {t} = useTranslation('validation')\n\n  const handleOpen = useCallback(\n    (path: Path) => {\n      onPathOpen(path)\n      onFocus(path)\n    },\n    [onFocus, onPathOpen],\n  )\n\n  const isVersionGoingToUnpublish =\n    editState && editState.version && isGoingToUnpublish(editState.version as SanityDocument)\n\n  return (\n    <Flex direction=\"column\" height=\"fill\" overflow=\"hidden\">\n      <DocumentInspectorHeader\n        as=\"header\"\n        closeButtonLabel={t('panel.close-button-aria-label')}\n        flex=\"none\"\n        onClose={onClose}\n        title={t('panel.title')}\n      />\n\n      <Card flex={1} overflow=\"auto\" padding={3}>\n        {isVersionGoingToUnpublish ? (\n          <Box padding={2}>\n            <Text muted size={1}>\n              {t('panel.unpublish-message')}\n            </Text>\n          </Box>\n        ) : (\n          <>\n            {validation.length === 0 && (\n              <Box padding={2}>\n                <Text muted size={1}>\n                  {t('panel.no-errors-message')}\n                </Text>\n              </Box>\n            )}\n            {validation.length > 0 && (\n              <Stack space={2}>\n                {validation.map((marker, i) => (\n                  <ValidationCard\n                    // oxlint-disable-next-line no-array-index-key\n                    key={i}\n                    marker={marker}\n                    onOpen={handleOpen}\n                    schemaType={schemaType}\n                    value={value}\n                  />\n                ))}\n              </Stack>\n            )}\n          </>\n        )}\n      </Card>\n    </Flex>\n  )\n}\n\nfunction ValidationCard(props: {\n  marker: ValidationMarker\n  onOpen: (path: Path) => void\n  schemaType: ObjectSchemaType\n  value: Partial<SanityDocument> | null\n}) {\n  const {marker, onOpen, schemaType, value} = props\n  const handleOpen = useCallback(() => onOpen(marker.path), [marker, onOpen])\n  const [errorInfo, setErrorInfo] = useState<{error: Error; info: ErrorInfo} | null>(null)\n  const Icon = MARKER_ICON[marker.level]\n\n  return (\n    <ErrorBoundary onCatch={setErrorInfo}>\n      {errorInfo && (\n        <Card padding={3} radius={2} tone=\"critical\">\n          <Text size={1}>{errorInfo.error.message}</Text>\n        </Card>\n      )}\n\n      {!errorInfo && (\n        <Card\n          __unstable_focusRing\n          as=\"button\"\n          onClick={handleOpen}\n          padding={3}\n          radius={2}\n          tone={MARKER_TONE[marker.level]}\n        >\n          <Flex align=\"flex-start\" gap={3}>\n            <Box flex=\"none\">\n              <Text size={1}>\n                <Icon />\n              </Text>\n            </Box>\n\n            <Stack flex={1} space={2}>\n              <DocumentNodePathBreadcrumbs\n                path={marker.path}\n                schemaType={schemaType}\n                value={value}\n              />\n\n              <Text muted size={1}>\n                {marker.message}\n              </Text>\n            </Stack>\n          </Flex>\n        </Card>\n      )}\n    </ErrorBoundary>\n  )\n}\n\nfunction DocumentNodePathBreadcrumbs(props: {\n  path: Path\n  schemaType: SchemaType\n  value: Partial<SanityDocument> | null\n}) {\n  const {path, schemaType, value} = props\n\n  const pathTitles = useMemo(() => {\n    try {\n      return getPathTitles({path, schemaType, value})\n    } catch (e) {\n      console.error(e)\n    }\n    return null\n  }, [path, schemaType, value])\n\n  if (!pathTitles?.length) return null\n\n  return (\n    <Text size={1}>\n      {pathTitles.map((t, i) => (\n        // oxlint-disable-next-line no-array-index-key\n        <Fragment key={i}>\n          {i > 0 && <span style={{color: 'var(--card-muted-fg-color)', opacity: 0.5}}> / </span>}\n          <span style={{fontWeight: 500}}>{t.title || t.name}</span>\n        </Fragment>\n      ))}\n    </Text>\n  )\n}\n","import {CheckmarkCircleIcon, ErrorOutlineIcon, WarningOutlineIcon} from '@sanity/icons'\nimport {useMemo} from 'react'\nimport {\n  type DocumentInspector,\n  type DocumentInspectorMenuItem,\n  type DocumentInspectorUseMenuItemProps,\n  type FormNodeValidation,\n  isGoingToUnpublish,\n  isValidationError,\n  isValidationWarning,\n  usePerspective,\n  useTranslation,\n  useValidationStatus,\n} from 'sanity'\n\nimport {VALIDATION_INSPECTOR_NAME} from '../../constants'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {ValidationInspector} from './ValidationInspector'\n\nfunction useMenuItem(props: DocumentInspectorUseMenuItemProps): DocumentInspectorMenuItem {\n  const {documentId, documentType} = props\n  const {t} = useTranslation('validation')\n  const {selectedReleaseId} = usePerspective()\n  const {validation: validationMarkers} = useValidationStatus(\n    documentId,\n    documentType,\n    selectedReleaseId,\n  )\n  const {value} = useDocumentPane()\n\n  const validation: FormNodeValidation[] = useMemo(\n    () =>\n      validationMarkers.map((item) => ({\n        level: item.level,\n        message: item.message,\n        path: item.path,\n      })),\n    [validationMarkers],\n  )\n\n  const hasErrors = validation.some(isValidationError)\n  const hasWarnings = validation.some(isValidationWarning)\n  const isDocumentGoingToUnpublish = isGoingToUnpublish(value)\n\n  const icon = useMemo(() => {\n    if (hasErrors) return ErrorOutlineIcon\n    if (hasWarnings) return WarningOutlineIcon\n    return CheckmarkCircleIcon\n  }, [hasErrors, hasWarnings])\n\n  const tone = useMemo(() => {\n    if (hasErrors) return 'critical'\n    if (hasWarnings) return 'caution'\n    return 'positive'\n  }, [hasErrors, hasWarnings])\n\n  return {\n    hidden: validation.length === 0 || isDocumentGoingToUnpublish,\n    icon,\n    title: t('panel.title'),\n    tone,\n    showAsAction: true,\n  }\n}\n\nexport const validationInspector: DocumentInspector = {\n  name: VALIDATION_INSPECTOR_NAME,\n  component: ValidationInspector,\n  useMenuItem,\n}\n","import {omit} from 'lodash'\nimport {decodeJsonParams, encodeJsonParams, route} from 'sanity/router'\n\nimport {type RouterPaneGroup, type RouterPanes, type RouterPaneSibling} from './types'\n\nconst EMPTY_PARAMS = {}\n\n/**\n * @internal\n */\nexport function legacyEditParamsToState(params: string): Record<string, unknown> {\n  try {\n    return JSON.parse(decodeURIComponent(params))\n  } catch (err) {\n    console.warn('Failed to parse JSON parameters')\n    return {}\n  }\n}\n\nexport function encodePanesSegment(panes: RouterPanes): string {\n  return (panes || [])\n    .map((group) => group.map(encodeChunks).join('|'))\n    .map(encodeURIComponent)\n    .join(';')\n}\n\n/**\n * @internal\n */\nexport function legacyEditParamsToPath(params: Record<string, unknown>): string {\n  return JSON.stringify(params)\n}\n\n// http://localhost:3333/intent/create/template=book-by-author;type=book/eyJhdXRob3JJZCI6Imdycm0ifQ==\n\n/**\n * @internal\n */\nexport function toState(pathSegment: string): RouterPaneGroup[] {\n  return parsePanesSegment(decodeURIComponent(pathSegment))\n}\n\n/**\n * @internal\n */\nexport function toPath(panes: RouterPaneGroup[]): string {\n  return encodePanesSegment(panes)\n}\n\nexport const router = route.create('/', [\n  // \"Asynchronous intent resolving\" route\n  route.intents('/intent'),\n\n  // Legacy fallback route, will be redirected to new format\n  route.create('/edit/:type/:editDocumentId', [\n    route.create({\n      path: '/:params',\n      transform: {params: {toState: legacyEditParamsToState, toPath: legacyEditParamsToPath}},\n    }),\n  ]),\n\n  // The regular path - when the intent can be resolved to a specific pane\n  route.create({\n    path: '/:panes',\n    // Legacy URLs, used to handle redirects\n    children: [route.create('/:action', route.create('/:legacyEditDocumentId'))],\n    transform: {\n      panes: {toState, toPath},\n    },\n  }),\n])\n\n// old: authors;knut,{\"template\":\"diaryEntry\"}\n// new: authors;knut,view=diff,eyJyZXYxIjoiYWJjMTIzIiwicmV2MiI6ImRlZjQ1NiJ9|latest-posts\n\nconst panePattern = /^([.a-z0-9_-]+),?({.*?})?(?:(;|$))/i\nconst isParam = (str: string) => /^[a-z0-9]+=[^=]+/i.test(str)\nconst isPayloadLike = (str: string) => /^[A-Za-z0-9\\-_]+(?:={0,2})$/.test(str)\nconst exclusiveParams = ['view', 'since', 'rev', 'inspect', 'comment']\n\ntype Truthy<T> = T extends false\n  ? never\n  : T extends ''\n    ? never\n    : T extends 0\n      ? never\n      : T extends 0n\n        ? never\n        : T extends null | undefined\n          ? NonNullable<T>\n          : T\nconst isTruthy = Boolean as (t: unknown) => boolean as <T>(t: T) => t is Truthy<T>\n\nfunction parseChunks(chunks: string[], initial: RouterPaneSibling): RouterPaneSibling {\n  const sibling: RouterPaneSibling = {...initial, params: EMPTY_PARAMS, payload: undefined}\n  return chunks.reduce((pane, chunk) => {\n    if (isParam(chunk)) {\n      const key = chunk.slice(0, chunk.indexOf('='))\n      const value = chunk.slice(key.length + 1)\n      pane.params = {...pane.params, [decodeURIComponent(key)]: decodeURIComponent(value)}\n    } else if (isPayloadLike(chunk)) {\n      pane.payload = tryParseBase64Payload(chunk)\n    } else {\n      console.warn('Unknown pane segment: %s - skipping', chunk)\n    }\n\n    return pane\n  }, sibling)\n}\n\nfunction encodeChunks(pane: RouterPaneSibling, index: number, group: RouterPaneGroup): string {\n  const {payload, params = {}, id} = pane\n  const [firstSibling] = group\n  const paneIsFirstSibling = pane === firstSibling\n  const sameAsFirst = index !== 0 && id === firstSibling.id\n  const encodedPayload =\n    typeof payload === 'undefined' ? undefined : encodeJsonParams(payload as any)\n\n  const encodedParams = Object.entries(params)\n    .filter((entry): entry is [string, string] => {\n      const [key, value] = entry\n      if (!value) return false\n      if (paneIsFirstSibling) return true\n\n      // omit the value if it's the same as the value from the first sibling\n      const valueFromFirstSibling = firstSibling.params?.[key]\n      if (value === valueFromFirstSibling && !exclusiveParams.includes(key)) return false\n      return true\n    })\n    .map(([key, value]) => `${encodeURIComponent(key)}=${encodeURIComponent(value)}`)\n\n  return (\n    [sameAsFirst ? '' : id]\n      .concat([encodedParams.length > 0 && encodedParams, encodedPayload].filter(isTruthy).flat())\n      .join(',') || ','\n  )\n}\n\nexport function parsePanesSegment(str: string): RouterPanes {\n  if (str.indexOf(',{') !== -1) {\n    return parseOldPanesSegment(str)\n  }\n\n  return str\n    .split(';')\n    .map((group) => {\n      const [firstSibling, ...restOfSiblings] = group.split('|').map((segment) => {\n        const [id, ...chunks] = segment.split(',')\n        return parseChunks(chunks, {id})\n      })\n\n      return [\n        firstSibling,\n        ...restOfSiblings.map((sibling) => ({\n          ...firstSibling,\n          ...sibling,\n          id: sibling.id || firstSibling.id,\n          params: {...omit(firstSibling.params, exclusiveParams), ...sibling.params},\n          payload: sibling.payload || firstSibling.payload,\n        })),\n      ]\n    })\n    .filter((group) => group.length > 0)\n}\n\nfunction parseOldPanesSegment(str: string): RouterPanes {\n  const chunks: RouterPaneGroup = []\n\n  let buffer = str\n  while (buffer.length) {\n    const [match, id, payloadChunk] = buffer.match(panePattern) || []\n    if (!match) {\n      buffer = buffer.slice(1)\n      continue\n    }\n\n    const payload = payloadChunk && tryParsePayload(payloadChunk)\n    chunks.push({id, payload})\n\n    buffer = buffer.slice(match.length)\n  }\n\n  return [chunks]\n}\n\nfunction tryParsePayload(json: string) {\n  try {\n    return JSON.parse(json)\n  } catch (err) {\n    console.warn(`Failed to parse parameters: ${err.message}`)\n    return undefined\n  }\n}\n\nfunction tryParseBase64Payload(data: string): unknown {\n  try {\n    return data ? decodeJsonParams(data) : undefined\n  } catch (err) {\n    console.warn(`Failed to parse parameters: ${err.message}`)\n    return undefined\n  }\n}\n","import {MasterDetailIcon} from '@sanity/icons'\nimport {lazy} from 'react'\nimport {definePlugin} from 'sanity'\n\nimport {\n  DeleteAction,\n  DiscardChangesAction,\n  DuplicateAction,\n  HistoryRestoreAction,\n  PublishAction,\n  UnpublishAction,\n} from './documentActions'\nimport {LiveEditBadge} from './documentBadges'\nimport {getIntentState} from './getIntentState'\nimport {structureUsEnglishLocaleBundle} from './i18n'\nimport {changesInspector} from './panes/document/inspectors/changes'\nimport {validationInspector} from './panes/document/inspectors/validation'\nimport {router} from './router'\nimport {type StructureToolOptions} from './types'\n\nconst documentActions = [\n  PublishAction,\n  UnpublishAction,\n  DiscardChangesAction,\n  DuplicateAction,\n  DeleteAction,\n  HistoryRestoreAction,\n]\n\nconst documentBadges = [LiveEditBadge]\n\nconst inspectors = [validationInspector, changesInspector]\n\n/**\n * The structureTool is a studio plugin which adds the “structure tool” – a tool within\n * Sanity Studio in which content editors can drill down to specific documents to edit them.\n * You can configure your Studio's structure tool(s).\n *\n * @public\n * @param options - Options for the structure tool. See {@link StructureToolOptions}\n * @example Minimal example\n * ```ts\n * // sanity.config.ts\n * import { defineConfig } from 'sanity'\n * import { structureTool } from 'sanity/structure'\n *\n * export default defineConfig((\n *  // ...\n *  plugins: [\n *    structureTool() // use defaults\n *  ]\n * })\n * ```\n *\n * @example To customise your structure tool\n * ```ts\n * // sanity.config.ts\n * import { defineConfig } from 'sanity'\n * import { structureTool } from 'sanity/structure'\n * import { FaCar } from 'react-icons'\n\n * export default defineConfig((\n *\t // ...\n *   plugins: [\n *    structureTool({\n *      name: 'cars',\n *      title: 'Cars',\n *      icon: FaCar,\n *      structure: (S) => S.documentTypeList('car'),\n *      defaultDocumentNode: (S) =>\n *        S.document().views([\n *          S.view.form(),\n *          S.view.component(Preview).title('Preview')\n *        ])\n *    })\n *  ]\n * })\n * ```\n * */\nexport const structureTool = definePlugin<StructureToolOptions | void>((options) => {\n  const icon = options?.icon || MasterDetailIcon\n\n  return {\n    name: 'sanity/structure',\n    document: {\n      actions: (prevActions) => {\n        // NOTE: since it's possible to have several structure tools in one Studio,\n        // we need to check whether the document actions already exist in the Studio config\n        return Array.from(new Set([...prevActions, ...documentActions]))\n      },\n      badges: (prevBadges) => {\n        // NOTE: since it's possible to have several structure tools in one Studio,\n        // we need to check whether the document badges already exist in the Studio config\n        return Array.from(new Set([...prevBadges, ...documentBadges]))\n      },\n      inspectors: (prevInspectors) => {\n        // NOTE: since it's possible to have several structure tools in one Studio,\n        // we need to check whether the inspectors already exist in the Studio config\n        return Array.from(new Set([...prevInspectors, ...inspectors]))\n      },\n    },\n\n    tools: [\n      {\n        name: options?.name || 'structure',\n        title: options?.title || 'Structure',\n        icon,\n        component: lazy(() => import('./components/structureTool')),\n        canHandleIntent: (intent, params) => {\n          if (intent === 'create') return canHandleCreateIntent(params)\n          if (intent === 'edit') return canHandleEditIntent(params)\n          return false\n        },\n        getIntentState,\n        // Controlled by sanity/src/structure/components/structureTool/StructureTitle.tsx\n        controlsDocumentTitle: true,\n        options,\n        router,\n        __internalApplicationType: 'sanity/structure',\n      },\n    ],\n\n    i18n: {\n      bundles: [structureUsEnglishLocaleBundle],\n    },\n  }\n})\n\nfunction canHandleCreateIntent(params: Record<string, unknown>) {\n  // We can't handle create intents without a `type` parameter\n  if (!('type' in params)) {\n    return false\n  }\n\n  // We can handle any create intent as long as it has a `type` parameter,\n  // but we also know how to deal with templates, where other tools might not\n  return 'template' in params ? {template: true} : true\n}\n\nfunction canHandleEditIntent(params: Record<string, unknown>) {\n  // We can't handle edit intents without an `id` parameter\n  if (!('id' in params)) {\n    return false\n  }\n\n  // We can handle any edit intent with a document ID, but we're best at `structure` mode\n  // This ensures that other tools that can handle modes such as `presentation` or `batch`\n  // can take precedence over the structure tool\n  return 'mode' in params ? {mode: params.mode === 'structure'} : true\n}\n"],"names":["useCreatePathSyncChannel","$","_c","t0","Symbol","for","Subject","DIFF_VIEW_SEARCH_PARAMETER","DIFF_VIEW_PREVIOUS_DOCUMENT_SEARCH_PARAMETER","DIFF_VIEW_NEXT_DOCUMENT_SEARCH_PARAMETER","DIFF_SEARCH_PARAM_DELIMITER","useDiffViewRouter","navigate","state","routerState","useRouter","t1","mode","previousDocument","nextDocument","next","fromPairs","_searchParams","type","id","join","toPairs","navigateDiffView","filter","_temp","exitDiffView","t2","key","includes","diffViewModes","isDiffViewMode","maybeDiffViewMode","useDiffViewState","onParamsError","searchParams","URLSearchParams","get","anyParamSet","some","param","params","useMemo","parseParams","useEffect","result","errors","isActive","previousDocumentType","previousDocumentId","split","Boolean","nextDocumentType","nextDocumentId","push","length","documents","previous","useScrollMirror","elements","existentElements","scrollMirror","ScrollMirror","destroy","element","findRelease","documentId","releases","isPublishedId","isDraftId","find","_id","getReleaseIdFromReleaseDocumentId","getVersionFromId","VersionModeHeaderLayout","styled","header","VersionModeHeaderLayoutSection","div","VersionModeHeader","t","useTranslation","structureLocaleNamespace","data","documentVersions","useDocumentVersions","activeReleases","useActiveReleases","releasesIds","flatMap","release","releaseId","onSelectPreviousRelease","useCallback","selectedDocumentId","onSelectNextRelease","justifySelf","CloseIcon","VersionMenu","onSelectRelease","role","document","published","draft","useEditState","getPublishedId","selected","tStructure","tCore","drafts","enabled","isDraftModelEnabled","useWorkspace","getMenuButtonProps","map","VersionMenuItem","onSelect","isSelected","onClick","getDraftId","getVersionId","tone","getReleaseTone","metadata","title","releaseType","formatRelativeLocalePublishDate","isReleaseScheduledOrScheduling","text","disabled","isReleaseDocument","icon","iconRight","undefined","DialogLayout","pickDocumentLayoutComponent","plugin","components","unstable_layout","usePathSyncChannel","syncChannel","source","t3","t4","pipe","distinctUntilChanged","_temp2","path","state_0","deepEquals","Scroller","DiffViewPaneLayout","Card","Container","UiContainer","DiffViewPane","forwardRef","ref","documentType","scrollElement","compareDocument","containerElement","useRef","portalElement","setPortalElement","useState","boundaryElement","setBoundaryElement","pick","defaultComponent","DocumentLayout","useMiddlewareComponents","isInteractive","onOpenReviewChanges","noop","onSetFocus","isReviewChangesOpen","t5","t6","t7","t8","t9","t10","t11","t12","t13","t14","t15","t16","t17","t18","DiffViewDocument","compareValue","useCompareValue","patchChannel","createPatchChannel","perspective","formState","onChange","onFocus","onBlur","onSetActiveFieldGroup","onSetCollapsedFieldSet","onSetCollapsedPath","collapsedFieldSets","ready","collapsedPaths","schemaType","value","onProgrammaticFocus","documentForm","useDocumentForm","selectedPerspectiveName","perspectiveName","comparisonValue","isLoading","pathSyncChannel","onPathOpen","subscription","subscribe","unsubscribe","focusPath","changed","focused","groups","validation","members","sanitizeBundleName","presence","isVersionId","compareDocumentEditState","bb0","version","bundle","Link","a","EditReferenceLinkComponent","children","_documentId","intent","href","useIntentLink","DiffView","previousPaneElement","setPreviousPaneElement","nextPaneElement","setNextPaneElement","referenceInputOptionsContext","useContext","ReferenceInputOptionsContext","disableNew","diffViewReferenceInputOptionsContext","DiffViewDocumentLayout","toast","useToast","status","description","error","input","PANE_DEBUG","PANE_COLLAPSED_WIDTH","PANE_DEFAULT_MIN_WIDTH","usePaneLayout","pane","PaneLayoutContext","Error","Root","Layer","PaneDivider","resize","dragging","setDragging","event","preventDefault","startX","pageX","handleMouseMove","e","deltaX","handleMouseUp","e_0","window","removeEventListener","addEventListener","handleMouseDown","Pane","props","forwardedRef","currentMaxWidthProp","currentMinWidthProp","maxWidthProp","minWidthProp","restProps","currentMinWidth","currentMaxWidth","flex","minWidth","maxWidth","flexProp","rootElement","setRootElement","collapse","collapsed","layoutCollapsed","expand","expandedElement","mount","panes","p","indexOf","paneIndex","nextPane","isLast","expanded","nextCollapsed","current","useImperativeHandle","refValue","setRef","useLayoutEffect","handleCollapse","handleExpand","index","contextValue","bb1","hidden","divider","Infinity","style","t19","t20","t21","t22","t23","t24","t25","displayName","usePane","PaneContext","PaneContent","as","overflow","padding","toLowerCaseNoSpaces","str","toLocaleLowerCase","replaceAll","MENU_GROUP_POPOVER_PROPS","constrainSize","placement","portal","PaneMenuButtonItem","isAfterGroup","node","getI18nText","useGetI18nText","child","childIndex","child_0","childIndex_0","PaneContextMenuItemResolver","PaneContextMenuItem","reason","tooltipContent","useI18nText","hotkey","CheckmarkIcon","onAction","MenuItem","PaneContextIntentMenuItem","intentLink","handleClick","CONTEXT_MENU_POPOVER_PROPS","nodesHasTone","nodes","PaneContextMenuButton","actionsNodes","useId","hasCritical","hasCaution","nodeIndex","RootCard","PaneFooter","$border","css","Layout","Flex","TitleCard","theme","fg","bg","sanity","color","card","TitleTextSkeleton","TextSkeleton","TitleText","Text","PaneHeader","actions","backButton","border","contentAfter","loading","subActions","tabs","tabIndex","appendTitle","paneElement","paneRect","useElementRect","height","innerHeight","width","layoutStyle","handleTitleClick","handleLayoutClick","showTabsOrSubActions","getDisabledReason","disabledReason","ariaLabel","isDisabled","PaneHeaderActionButton","console","warn","PaneHeaderMenuItemActionButton","hotkeys","content","PaneHeaderActionIntentButton","PaneHeaderMenuGroupActionButton","UnknownIcon","Button","idx","_calcPaneResize","cache","left","right","sum","leftMinWidth","rightMinWidth","leftMaxWidth","Math","min","rightMaxWidth","minDeltaX","rightMinDeltaX","maxDeltaX","leftMaxDeltaX","_deltaX","max","leftW","rightW","leftFlex","rightFlex","_getDOMPath","el","parentElement","Array","from","childNodes","unshift","EMPTY_PATH","_sortElements","WeakMap","set","_sortByElementPath","b","_a","_b","len","i","aIndex","bIndex","sort","createPaneLayoutController","observers","optionsMap","userCollapsedElementSet","Set","rootWidth","resizeDataMap","Map","resizing","add","_notifyObservers","delete","options","original","splice","leftElement","leftIndex","leftOptions","rightElement","rightOptions","offsetWidth","leftResizeData","rightResizeData","nextRootElement","setRootWidth","nextRootWidth","observer","_elements","dataMap","lastElement","collapsedWidth","remaingWidth","userCollapsed","has","sizeCollapsed","resizeData","PaneLayout","onCollapse","onExpand","controller","setState","paneLayout","ErrorPane","paneKey","Delay","ms","setReady","timeoutId","setTimeout","clearTimeout","getWaitMessages","thresholds","messageKey","isDev","message","src","of","merge","threshold","mapTo","delay","DEFAULT_MESSAGE_KEY","Content","LoadingPane","memo","messageProp","resolvedMessage","currentMessage","setCurrentMessage","sub","contentElement","setContentElement","mounted","setMounted","_raf2","DELAY","useDocumentPane","documentPane","DocumentPaneContext","CommentsWrapper","CommentsProviderWrapper","useCommentsEnabled","connectionState","inspector","openInspector","selectedReleaseId","usePerspective","setParams","usePaneRouter","studioUrl","useStudioUrl","location","origin","resolveIntentLink","selectedCommentId","comment","paramsRef","commentId","inspect","COMMENTS_INSPECTOR_NAME","getCommentLink","handleClearSelectedComment","name","handleOpenCommentsInspector","PaneRouterContext","useFilteredReleases","displayed","archivedReleases","useArchivedReleases","isCreatingDocument","_createdAt","notCurrentReleases","currentReleases","inCreation","reduce","acc","versionDocExists","historyVersion","archivedRelease","r","useDocumentIdStack","editState","filteredReleases","systemStack","flat","releaseStack","stack","concat","position","findIndex","previousId","nextId","useStructureTool","structureTool","StructureToolContext","DOCUMENT_PANEL_MIN_WIDTH","DOCUMENT_PANEL_INITIAL_MIN_WIDTH","DOCUMENT_INSPECTOR_MIN_WIDTH","DOCUMENT_INSPECTOR_MAX_WIDTH","EMPTY_PARAMS","INSPECT_ACTION_PREFIX","DEFAULT_MENU_ITEM_GROUPS","HISTORY_INSPECTOR_NAME","VALIDATION_INSPECTOR_NAME","DocumentInspectorMenuItemsResolver","inspectors","onMenuItems","menuItems","setMenuItems","newFieldActions","setMenuItem","prev","InspectorMenuItems","useMenuItem","defineInspectorMenuItemComponent","InspectorMenuItem","menuItem","useUnique","useDocumentTitle","isDeleted","lastRevisionDocument","documentValue","subscribed","prepareForPreview","deletedDocumentPreview","error_0","useValuePreview","IGNORE_OPS","DocumentOperationResults","pushToast","documentPaneValue","documentTitleInfo","titleError","useDocumentOperationEvent","prevEvent","paneRouter","handleOpenDialog","useDocumentLimitsUpsellContext","op","documentTitleBase","slice","documentTitle","cleanupId","isDocumentLimitError","closable","duration","context","Strong","closeCurrentAndAfter","isLiveEditEnabled","liveEdit","hasObsoleteDraft","workspace","draftExists","mustChooseNewDocumentDestination","isSelectedPerspectiveWriteable","isNewDocument","zIndex","lineHeight","DocumentInspectorHeader","closeButtonLabel","forwardedAs","onClose","DocumentInspectorPanel","closeInspector","features","handleClose","Component","component","resizablePanes","STRUCTURE_TOOL_NAMESPACE","useStructureToolSetting","namespace","defaultValue","keyValueStore","useKeyValueStore","keyValueStoreKey","getKey","value_0","useObservable","newValue","setKey","VIEW_MODE_PARSED","VIEW_MODE_RAW","VIEW_MODES","lru","LRU","maxSize","isExpanded","keyPath","cached","isArray","isRecord","toggleExpanded","selectElement","sel","getSelection","range","createRange","removeAllRanges","selectNodeContents","addRange","select","currentTarget","maybeSelectAll","keyCode","metaKey","ctrlKey","isDocumentLike","isString","_type","JSONInspectorWrapper","fonts","space","code","family","sizes","fontSize","rem","syntax","property","constant","string","boolean","number","Search","query","target","handleChange","SearchIcon","InspectDialog","onInspectClose","dialogIdPrefix","viewModeId","onViewModeChange","viewMode","setParsedViewMode","setRawViewMode","DocumentTitle","bottom","outline","ignoreCase","JSON","stringify","Banner","Icon","action","rest","paddingY","DeletedDocumentBanners","isDeleting","selectedPerspective","isPublishedPerspective","isDraftPerspective","DeletedDocumentBanner","restore","useDocumentOperation","navigateIntent","execute","handleRestore","ReadOnlyIcon","ArchivedReleaseBanner","DocumentRemoveIcon","DeprecatedDocumentTypeBanner","isDeprecatedSchemaType","deprecated","ErrorOutlineIcon","AskToEditDialogOpened","defineEvent","AskToEditRequestSent","MAX_NOTE_LENGTH","DialogBody","Box","attrs","align","direction","justify","RequestPermissionDialog","onRequestSubmitted","telemtry","useTelemetry","dialogId","projectId","useProjectId","apiVersion","client","useClient","zOffset","useZIndex","isSubmitting","setIsSubmitting","note","setNote","msgError","setMsgError","hasTooManyRequests","setHasTooManyRequests","hasBeenDenied","setHasBeenDenied","adminRole","observable","roles","request","url","startWith","catchError","requestedRole","method","body","requestUrl","then","log","catch","err","statusCode","response","errMessage","finally","onSubmit","fullscreen","cancelButton","confirmButton","role_0","appliesToUsers","LOADING_STATE","EMPTY_STATE","DECLINED_STATE","PENDING_STATE","EXPIRED_STATE","useRoleRequestsStatus","checkRoleRequests","checkRoleRequests$","tag","requests","projectRequests","resourceId","declinedRequest","isAfter","addWeeks","Date","createdAt","isBefore","InsufficientPermissionBanner","requiredPermission","currentUser","useCurrentUser","roleRequestStatus","requestStatusLoading","requestStatusError","requestSent","setRequestSent","requestPending","currentUserRoles","isOnlyViewer","showRequestPermissionDialog","setShowRequestPermissionDialog","listFormat","useListFormat","telemetry","roleTitles","formatToParts","Roles","count","part","ReferenceChangedBanner","documentPreviewStore","useDocumentPreviewStore","groupIndex","routerPanesState","replaceCurrent","BackLink","routerReferenceId","parentSibling","parentId","hasHistoryOpen","rev","parentRefPath","pathFromString","referenceInfoObservable","parentRefPathSegment","publishedId","keyedSegmentIndex","unstable_observePathsDocumentPair","debounceTime","availability","pathGet","snapshot","_ref","referenceInfo","handleReloadReference","available","SyncIcon","WarningOutlineIcon","ScheduledDraftOverrideBanner","ArchivedReleaseDocumentBanner","handleGoBack","historyEvent","since","isCardinalityOneRelease","VersionBadge","getVersionInlineBadge","Image","img","CANVAS_IMAGE_URL","CANVAS_APP_NAME","CanvasPopoverContent","useClickOutsideEvent","LaunchIcon","CanvasLinkedBannerContent","open","setOpen","documentVariantType","getDocumentVariantType","variantText","togglePopover","InfoOutlineIcon","CanvasLinkedBanner","companionDoc","useCanvasCompanionDoc","navigateToCanvas","useNavigateToCanvasDoc","canvasDocumentId","ChooseNewDocumentDestinationBanner","isPerspectiveWriteable","menuItemProps","CreateLinkedBanner","documentLinkedBannerContent","CreateLinkedBannerContent","useSanityCreateConfig","getSanityCreateLinkMetadata","createLinkMetadata","TOAST_DELAY","DocumentNotInReleaseBanner","currentRelease","isScheduledRelease","LATEST","createVersion","useVersionOperations","versionCreateState","setVersionCreateState","handleAddToRelease","lastUpdate","now","useCurrentTime","useConditionalToast","getTime","updateIntervalMs","currentTime","setCurrentTime","intervalId","setInterval","clearInterval","ResolvedLiveEdit","ObsoleteDraftBanner","i18nKey","isEditBlocking","isPublishing","setPublishing","isDiscarding","setDiscarding","publish","discardChanges","liveEditResolveType","handlePublish","handleDiscard","diffViewRouter","compareDraft","OpenReleaseToEditBanner","isPinnedDraftOrPublished","onlyHasVersions","useOnlyHasVersions","OpenReleaseToEditBannerInner","setPerspective","useSetPerspective","currentVersion","documentVersionsTitleList","handleGoToEdit","RevisionNotFoundBanner","revisionNotFound","ScheduledReleaseBanner","date","LockIcon","UnpublishedDocumentBanner","isCurrentVersionGoingToUnpublish","isGoingToUnpublish","UnpublishIcon","TitleContainer","Stack","heading","FormHeader","isSingleton","__experimental_formPreviewTitle","ev","FormView","margins","fieldActions","openPath","documentStore","useDocumentStore","useDocumentPresence","isLocked","transactionSyncLock","pair","documentEvents","tap","prepareMutationEvent","prepareRebaseEvent","hasRev","_rev","patches","handleInitialValue","useEffectEvent","formRef","setFormRef","focusedFirstDescendant","setFocusedFirstDescendant","focusFirstDescendant","isReadOnly","readOnly","mutations","mut","patch","fromMutationPatches","remotePatches","remoteMutations","localPatches","localMutations","DocumentHeaderTabs","activeViewId","views","tabPanelId","view","DocumentHeaderTab","label","viewId","setView","DocumentHeaderTitle","FavoriteToggle","documentExists","isFavorited","isReady","favorite","unfavorite","useManageFavorite","DocumentPanelSubHeader","activeWorkspace","useActiveWorkspace","publishedDocId","showTabs","showBackButton","ArrowLeftIcon","dataset","favoriteToggle","DocumentBox","ScrollContainer","$disabled","DocumentPanel","footerHeight","headerHeight","isInspectOpen","setDocumentPanelPortalElement","footer","permissions","isPermissionsLoading","isSanityCreateLinked","showCreateBanner","parentPortal","usePortal","_portalElement","documentScrollElement","setDocumentScrollElement","formContainerElement","activeView","splitPanes","formViewHidden","ActiveViewComponent","historical","activeViewNode","scrollTo","inspectDialog","showInspector","documentInScheduledRelease","hasCardinalityOneReleases","isSystemBundle","isPinnedDraftOrPublish","displayedHasObsoleteDraft","granted","banners","portalElements","showFormView","isMenuNodeButton","renderAsButton","isNotMenuNodeButton","negate","resolveMenuNodes","menuItemGroups","keyOffset","mapFieldActionToPaneMenuNode","itemGroup","g","i18n","ungroupedItems","item","group","shortcut","actionHandler","showAsAction","childIdx","_DEBUG","Object","freeze","LOADING_PANE","DOCUMENT_PANEL_PORTAL_ELEMENT","POPOVER_FALLBACK_PLACEMENTS","DIALOG_WIDTH_TO_UI_WIDTH","small","medium","large","full","ConfirmDialog","dialog","referenceElement","cancelButtonIcon","cancelButtonText","confirmButtonIcon","confirmButtonText","onCancel","onConfirm","ModalDialog","showCloseButton","Dialog","PopoverDialog","Popover","PopoverDialogContent","isTopLayer","useLayer","useGlobalKeyDown","DocumentActionPortalProvider","ActionStateDialog","modalId","unknownModal","ActionDialogWrapper","actionStates","actionIndex","setActionIndex","currentAction","handleAction","ActionMenuButton","idPrefix","setReferenceElement","preventOverflow","popoverProps","actionState","renderActionDialog","ActionMenuListItem","onHandle","String","replace","tooltipProps","s","toUpperCase","DISABLED_REASON_TITLE_KEY","NOTHING_TO_DELETE","NOT_READY","DeleteAction","onComplete","setIsDeleting","paneSetIsDeleting","deleteOp","isConfirmDialogOpen","setConfirmDialogOpen","handleCancel","handleConfirm","handle","permission","useDocumentPairPermissions","TrashIcon","ConfirmDeleteDialog","DISABLED_REASON_KEY","NO_CHANGES","NOT_PUBLISHED","DiscardChangesAction","isPublished","ResetIcon","NOTHING_TO_DUPLICATE","DuplicateAction","mapDocument","duplicate","isDuplicating","setDuplicating","dupeId","uuid","duplicateSuccess","firstValueFrom","operationEvents","CopyIcon","HistoryRestoreAction","revision","isRevisionInitial","isRevisionLatest","RevertIcon","DocumentPublished","LIVE_EDIT_ENABLED","ALREADY_PUBLISHED","PUBLISHED_STATE","publishedAt","AlreadyPublished","useTemporalPhrase","timeSincePublished","useRelativeTime","PublishAction","publishState","setPublishState","validationStatus","useValidationStatus","syncState","useSyncState","changesOpen","isValidationErrorMarker","hasValidationErrors","publishScheduled","setPublishScheduled","isSyncing","isValidating","_updatedAt","currentPublishRevision","publishRevision","doPublish","validationComplete","didPublish","nextState","timer","publishedImmediately","previouslyPublished","PublishIcon","UnpublishAction","unpublish","isDraft","DocumentStatusBarActionsInner","states","__internal_tasks","useSource","showingRevision","firstActionState","menuActionStates","buttonElement","setButtonElement","marginTop","marginBottom","isSanityDefinedAction","showFirstActionButton","sideMenuItems","footerAction","DocumentStatusBarActions","allActions","isInitialValueLoading","initialValueResolved","actionProps","renderDocumentStatusBarActions","HistoryStatusBarActions","revisionId","isRestoreAction","historyActions","toLowerCase","useChipScrollPosition","containerRef","showGradient","setShowGradient","checkOverflow","container","scrollWidth","clientWidth","scrollLeft","isAtEnd","setupObservers","container_0","intersectionObserver","mutationObserver","IntersectionObserver","entries","entry","isIntersecting","updateLastChipObserver","disconnect","lastChip","observe","MutationObserver","childList","subtree","intersectionObserver_0","mutationObserver_0","TooltipContent","intendedPublishAt","DATE_TIME_FORMAT","dateStyle","timeStyle","DocumentPerspectiveList","dateTimeFormat","useDateTimeFormat","schema","useSchema","handlePerspectiveChange","isLiveEdit","isPublishedChipDisabled","getReleaseChipState","isReleaseHistoryMatch","isPublishSelected","isDraftSelected","displayedId","isDraftDisabled","format","menuReleaseId","releasesLoading","fromRelease","isVersion","releaseState","HorizontalScroller","getTheme_v2","$showGradient","rgba","DocumentPanelHeader","_props","onMenuAction","onPaneClose","onPaneSplit","unstable_languageFilter","hasGroupSiblings","useFieldActions","scrollContainerRef","menuNodes","menuButtonNodes","contextMenuNodes","showSplitPaneButton","splitViews","showSplitPaneCloseButton","showPaneGroupCloseButton","renderPaneActions","renderedActions","LanguageFilterComponent","SplitVerticalIcon","DocumentPanelHeaderActionDialogDeferred","useDeferredValue","DocumentPanelHeaderActionDialog","SpacerButton","size","pointerEvents","visibility","BADGE_TONES","primary","success","warning","danger","DocumentBadgesInner","DocumentBadgesDeferred","DocumentBadges","badges","renderDocumentBadges","badge","whiteSpace","TIMELINE_ICON_COMPONENTS","create","AddIcon","discardDraft","initial","editDraft","EditIcon","editLive","getTimelineEventIconComponent","hideScrollbarOnExpand","listWrapper","getElementById","TIMELINE_LIST_WRAPPER_ID","firstChildren","scrollHeight","clientHeight","currentStyle","getComputedStyle","overflowY","FlipIcon","ChevronLeftIcon","ExpandableTimelineItemButton","stopPropagation","handleExpandClick","StackWrapper","ListWrapper","$maxHeight","$visible","TIMELINE_ITEM_I18N_KEY_MAPPING","UserAvatarStack","maxLength","userIds","withTooltip","userId","IconBox","$color","avatar","TIMELINE_ITEM_EVENT_TONE","withinSelection","RELATIVE_TIME_OPTIONS","minimal","NameSkeleton","Skeleton","font","UserLine","user","useUser","collaborators","TimelineItem","chunk","optionsMenu","endTimestamp","timestamp","IconComponent","authors","authorUserIds","collaboratorsUsersIds","isSelectable","dateFormat","updatedTimeAgo","parsedDate","formattedTimestamp","evt","isNonPublishChunk","isPublishChunk","getPreviousPublishAction","chunks","previousPublish","addChunksMetadata","forEach","Timeline","hasMoreChunks","lastChunk","selectedChunk","onLoadMore","listMaxHeight","selectedChunkId","chunksWithMetadata","expandedParents","setExpandedParents","filteredChunks","handleExpandParent","selectedIndex","handleSelectChunk","timelineChunk","c","renderItem","activeIndex","TimelineError","versionError","TIMELINE_MENU_PORTAL","TimelineMenu","setTimelineRange","timelineError","timelineStore","button","setButton","popoverRef","setPopoverRef","useTimelineSelector","realRevChunk","sinceTime","handleOpen","handleGlobalKeyDown","focus","selectRev","revChunk","sinceId","revId","findRangeForRev","selectSince","sinceChunk","findRangeForSince","handleLoadMore","loadMore","formatParams","revLabel","sinceLabel","buttonLabel","ChevronDownIcon","StyledMotionPath","motion","Circle","Arrows","Checkmark","rotateAnimation","keyframes","RotateGroup","root","syncing","scale","transition","saved","changes","circle","strokeDasharray","strokeDashoffset","opacity","arrows","checkmark","pathLength","AnimatedStatusIcon","STATUS_DICTIONARY","DocumentStatusPulse","currentStatus","MotionButton","MotionBox","ButtonSkeleton","margin","DocumentStatusButton","author","translationKey","onHistoryOpen","onHistoryClose","relativeTime","FallbackStatus","createDocumentVersion","editDocumentVersion","EventsStatus","events","useEvents","TimelineStatus","TIMELINE_ITEM_I18N_KEY_MAPPING_LEGACY","SYNCING_TIMEOUT","SAVED_TIMEOUT","DocumentStatusLine","setStatus","eventsEnabled","beta","eventsAPI","lastUpdated","timerId","timerId_0","StatusText","RevisionStatusLine","useResizeObserver","onResize","resizeObserver","unobserve","CONTAINER_BREAKPOINT","AnimatedCard","DocumentStatusBar","actionsBoxRef","onDocumentChange","CreateLinkedActions","documentLinkedActions","setCollapsed","contentRect","handleResize","shouldRender","flexShrink","marginLeft","KeyboardShortcutResponder","actionsBoxElement","onActionStart","onKeyDown","rootRef","As","activeAction","matchingStates","isHotkey","matchingState","handleKeyDown","DocumentActionShortcuts","setActiveIndex","renderDocumentActionShortcuts","getInspectorItems","currentInspector","hasValue","inspectorMenuItems","getInspectItem","JsonIcon","getCompareVersionsItem","documentIdStack","TransferIcon","getProductionPreviewItem","previewUrl","EarthAmericasIcon","getMenuItems","inspectorItems","items","LinkIcon","DocumentLayoutError","DIALOG_PROVIDER_POSITION","DocumentLayoutFooter","documentPanelPortalElement","setFooterElement","setActionsBoxElement","zOffsets","EMPTY_ARRAY","StyledChangeConnectorRoot","ChangeConnectorRoot","inspectOpen","paneParams","footerElement","headerElement","setHeaderElement","useGlobalCopyPasteElementHandler","setInspectorMenuItems","rootFieldActionNodes","setRootFieldActionNodes","footerRect","headerRect","handleKeyUp","onConnectorSetFocus","paneDialog","changesInspectorTab","useDocumentLayoutComponent","useDocumentLastRev","historyStore","useHistoryStore","setLastRevisionDocument","setLoading","useTimelineStore","lastNonDeletedRevId","getDocumentAtRevision","DocumentURLCopied","getInitialValueTemplateOpts","templates","opts","payload","panePayload","structureNodeTemplate","templateName","urlTemplate","template","typeTemplates","templateParams","useDocumentPaneInitialValue","paneOptions","useTemplates","templateParameters","initialValueRaw","useInitialValue","useDocumentPaneInspector","inspectorsResolver","inspectorName","setInspectorName","inspectParamRef","historyInspector","closeInspectorName","nextInspectorName","nextInspector","currentParams","onOpen","handleHistoryClose","handleHistoryOpen","reviewChanges","toggleLegacyInspect","toggle","handleLegacyInspectClose","handleInspectorAction","isSanityDocument","usePreviewUrl","resolveProductionUrl","BehaviorSubject","subject","asObservable","switchMap","DocumentPaneProvider","onFocusPath","forcedVersion","store","timelineReady","revisionDocument","onOlderRevision","sinceDocument","isPristine","setDocumentMeta","useCopyPaste","documentActions","documentBadges","unstable_fieldActions","fieldActionsResolver","languageFilterResolver","draftsEnabled","setPaneParams","viewsProp","documentIdRaw","buildStudioUrl","initialValue","getIsDeleted","getComparisonValue","getIsReadOnly","getDisplayed","formReady","formStateRef","initialFocusPath","getFormDocumentValue","getDocumentVersionType","releaseDocument","actionsPerspective","documentActionsProps","versionType","languageFilter","newSince","newRev","handlePaneClose","closeCurrent","handlePaneSplit","duplicateCurrent","handleMenuAction","navigator","copyUrl","coreUi","clipboard","writeText","startsWith","currentDisplayed","pathRef","restParams","pathFromUrl","resolveKeyedPath","DocumentEventsPane","usePaneOptions","showingPublishedOnDraft","eventsStore","useEventsStore","sinceRevision","historyStoreProps","isDeleteDocumentGroupEvent","isDeleteDocumentVersionEvent","DocumentPaneWithLegacyTimelineStore","setTimelineError","onError","revTime","sinceAttributes","_temp3","timelineDisplayed","_temp4","_temp5","_temp6","_temp7","state_1","state_2","state_3","state_4","state_5","DocumentPerspectiveResetHandler","rawContext","RawPerspectiveContext","documentVersionsLoading","isCardinalityOnePerspective","DocumentPerspectiveProvider","mappedContext","PerspectiveContext","defaultPerspective","PUBLISHED","DocumentPaneProviderWrapper","itemId","useResetHistoryParams","isMounted","_perspective","preserveRev","updateHistoryParams","DocumentPane","parentSourceName","DocumentPaneInner","resolveNewDocumentOptions","isLoaded","isDocumentLoaded","useDocumentType","templateItems","templatePermissions","isTemplatePermissionsLoading","useTemplatePermissions","mergeDocumentType","providerProps","ReferenceChildLink","handleEditReference","childParams","routerPanesStateLength","activePath","Code","ChildLink","childId","childParameters","childPayload","ParameterizedLink","currentPanes","siblingIndex","nextParams","nextPayload","currentGroup","currentSibling","nextSibling","nextGroup","pathToString","emptyArray","PaneRouterProvider","flatIndex","resolvePathFromState","useRouterState","routerPaneGroups","lastPane","modifier","currentItem","nextPanes","createNextRouterState","modifier_0","nextRouterState_0","nextRouterState","modifyCurrentGroup","nextRouterState_1","siblings","createPathWithParams","siblings_0","item_0","setPayload","nextParams_0","siblings_1","item_1","siblings_3","item_3","duplicatedItem","omit","groupLength","ctx","siblings_2","item_2","sibling","UnknownPane","paneMap","lazy","documentList","list","StructureToolPane","active","childItemId","PaneComponent","prevParams","prevPayload","isEqual","keys","DocTitle","ChevronWrapper","CrossDatasetReferencesDetails","details","CrossDatasetReferencesSummary","summary","Table","table","DocumentIdFlex","OtherReferenceCount","difference","totalCount","references","PaneItemPreview","layout","versionsInfo","useDocumentVersionInfo","perspectiveStack","getPreviewStateObservable","previewStateObservable","previewIsLoading","versions","tooltip","getPreviewValueWithFallback","fallback","ReferencePreviewLink","documentPresence","linkProps","ConfirmDeleteDialogBody","crossDatasetReferences","internalReferences","datasetNames","hasUnknownDatasetNames","onReferenceLinkClick","renderPreviewItem","normalizedDatasetNames","datasets","datasetSubtitle","borderTop","documentCount","datasetName","reference","isClientError","POLL_INTERVAL","visiblePoll$","getVisiblePoll$","fromEvent","visibilityState","visible","EMPTY","shareReplay","refCount","bufferSize","getDocumentExistence","versionedClient","draftId","requestOptions","uri","getDataUrl","json","excludeContent","omitted","nonExistant","doc","fetchCrossDatasetReferences","checkDocumentId","currentDataset","config","useInternalReferences","createHookFromObservableFactory","listenQuery","fetch","listen","transitions","throttleTime","useCrossDatasetReferences","useReferringDocuments","DEFAULT_STUDIO_CLIENT_OPTIONS","isInternalReferencesLoading","isCrossDatasetReferencesLoading","projectIds","crossDatasetReference_1","crossDatasetReference","crossDatasetReference_0","LoadingContainer","showConfirmButton","ConfirmDeleteDialogContainer","setError","handleRetry","IntentButton","linkRef","InsufficientPermissionsMessageTooltip","reveal","POPOVER_PROPS","getIntent","typeName","templateId","baseParams","initialDocumentId","parameters","PaneHeaderCreateButton","nothingGranted","every","permissionsById","firstItem","itemIndex","disabled_0","intent_0","permission_0","isNonNullable","hashObject","sortObject","v","keyA","keyB","localeCompare","parse","PaneHeaderActions","initialValueTemplateItems","initialValueTemplateItemsFromStructure","actionHandlers","EMPTY_OBJECT","handler","actionNodes","initialValueTemplateItemFromMenuItems","menuItemIndex","intentParams","combinedInitialValueTemplates","uniqBy","MissingSchemaType","getIconWithFallback","defaultIcon","PaneItem","pressed","hasSchemaType","clicked","setClicked","DocumentIcon","FolderIcon","preview","preloading","setPreload","timeoutRef","startTransition","handleMouseEnter","handleMouseLeave","PreloadDocumentPane","RenderActionCollectionState","onActionComplete","liveEditSchemaType","SUPPORTED_LINKED_TO_CANVAS_ACTIONS","ActionsGuardWrapper","isLinked","RenderBadgeCollectionState","badgeProps","PARTIAL_PAGE_LIMIT","FULL_LIST_LIMIT","DEFAULT_ORDERING","by","field","EMPTY_RECORD","RootBox","$opacity","CommandListBox","SKELETON_ITEMS","LoadingView","num","DocumentListPaneContent","isRetrying","autoRetry","filterIsSimpleTypeConstraint","hasMaxItems","hasSearchQuery","isLazyLoading","muted","isConnected","retryCount","canRetry","loadingVariant","onEndReached","onRetry","paneTitle","searchInputElement","showIcons","setShouldRender","handleEndReached","isLastItem","showSpinner","showMaxItemsMessage","limit","noDocumentsContent","isOnline","onLine","mainContent","removePublishedWithDrafts","collate","hasDraft","hasPublished","applyOrderingFunctions","order","orderBy","mapWith","fieldType","tryResolveSchemaTypeForPath","fieldExtendsType","jsonType","baseType","pathSegments","PathUtils","fromString","segment","getFieldTypeByName","isKeySegment","isIndexSegment","memberType","otherType","isReferenceSchemaType","refType","otherRefType","to","fieldName","fields","ofType","findTypes","base","types","isSplat","findStaticTypesInFilter","swr","createSWR","listenSearchQuery","groqFilter","searchQuery","staticTypeNames","maxFieldDepth","searchStrategy","sortBy","extendedProjection","events$","defer","includeAllVersions","includeResult","mergeMap","isFirst","throwError","share","welcome$","mutationAndReconnect$","partition","swrKey","fiilter","asyncScheduler","leading","trailing","exhaustMapWithTrailing","typeNames","getSearchableTypes","getExtendedProjection","search","createSearch","strategy","maxDepth","doFetch","__unstable_extendedProjection","comments","skipSortByScore","hits","hit","scan","connected","fromCache","INITIAL_QUERY_STATE","isLoadingFullList","isRetriableError","ChannelError","ServerError","ClientError","useDocumentList","searchFilter","paramsProp","sortOrder","useSearchMaxFieldDepth","typeNameFromFilter","onRetry$","observableCallback","onFetchFullList$","onLoadFullList","queryResults$","listenSearchQueryArgs","partialList$","fullList$","withLatestFrom","take","takeUntil","catchWithCount","lastError","caught$","safeError","retries","NEVER","retrying","nonErrorThrownWarning","thrown","rotate","fadeIn","AnimatedSpinnerIcon","SpinnerIcon","SubtleSpinnerIcon","DelayedSubtleSpinnerIcon","DocumentListPane","sortOrderRaw","displayOptions","useShallowUnique","staticTypes","setSearchQuery","searchInputValue","setSearchInputValue","setSearchInputElement","sortWithOrderingFn","documentListIsLoading","trim","handleQueryChange","useObservableEvent","event$","debounce","handleClearSearch","handleSearchKeyDown","enableSearchSpinner","setEnableSearchSpinner","textInputIcon","useReconnectingToast","initialValueTemplates","setLayout","setSortOrder","StructurePaneHeader","DocumentSheetListSelect","row","selectedAnchor","setSelectedAnchor","meta","handleOnClick","shiftKey","shiftClickIndex","lowerIndex","upperIndex","additionalSelectedRows","getRowModel","flatRows","currentSelectedRows","getSelectedRowModel","rows","setRowSelection","nextSelectedRows","rowId","isRowCurrentlySelected","getIsSelected","toggleSelected","paddingLeft","getCanSelect","useDocumentSheetListContext","DocumentSheetListContext","DocumentSheetListProvider","selectedAnchorCellDetails","setSelectedAnchorCellDetails","selectedRangeCellIndexes","setSelectedRangeCellIndexes","clearAndSetFocusSelection","nextAnchorDetails","activeElement","HTMLElement","blur","resetFocusSelection","changeSelectionColumn","visibleColumns","getVisibleLeafColumns","columnIndexAfterMove","col","colId","rowIndex","changeSelectionRange","previousSelection","anchorIndex","getNextIndex","startingIndex","firstSelectedIndex","lastIndexSelected","nextIndex","setSelectedAnchorCell","handleEscapePress","nextAnchorCellDetails","handleUpDownKey","isShiftKey","offset","newSelectedCellRowIndex","handleAnchorKeydown","handleAnchorClick","contains","focusAnchorCell","anchorCellDetails","getStateByCellId","submitFocusedCell","DataCell","td","PinnedDataCell","SheetListCellInner","getValue","column","cellId","renderValue","setRenderValue","isDirty","setIsDirty","inputRef","cellState","handleOnFocus","patchDocument","handleProgrammaticFocus","HTMLInputElement","handleOnMouseDown","detail","handleOnEnterDown","handleOnChange","handleOnBlur","handlePaste","clipboardData","getData","handleCopy","toString","getBorderStyle","inputProps","boxShadow","SheetListCell","cell","isPinned","getIsPinned","Cell","borderWidth","getIsLastColumn","getStart","borderRight","getSize","flexRender","columnDef","getContext","VISIBLE_COLUMN_LIMIT","PreviewCell","displayValue","columnHelper","createColumnHelper","SUPPORTED_FIELDS","getColsFromSchemaType","parentalField","tableColumns","nextCol","accessor","enableHiding","info","isObjectSchemaType","columns","isAccessorKeyColumnDef","isGroupColumnDef","flatColumns","cols","useDocumentSheetColumns","documentSchemaType","display","getIsSomeRowsSelected","getToggleAllPageRowsSelectedHandler","initialColumnsVisibility","accCols","countAllowedVisible","visibilityKey","ColumnsControl","isVisibleLimitReached","getCanHide","setInitialColumns","resetColumnVisibility","handleColumnOnChange","toggleVisibility","getColumnVisibilityDisabled","isColumnVisible","getIsVisible","isSingleColumnVisible","maxHeight","getAllLeafColumns","SearchContainer","DocumentSheetListFilter","useSearchState","filtersVisible","Header","th","PinnedHeader","HoverMenu","DocumentSheetListHeader","headerGroup","headerTitle","depth","parent","HeaderTag","canShowHeaderMenu","boxSizing","EllipsisHorizontalIcon","DocumentSheetListPaginator","setPageIndex","getCanPreviousPage","DoubleChevronLeftIcon","previousPage","getState","pagination","pageIndex","getPageCount","nextPage","getCanNextPage","ChevronRightIcon","DoubleChevronRightIcon","pageSize","setPageSize","Number","createDocumentsSet","documentsReducer","nextDocumentResult","_","restDocuments","updatedDocument","LISTEN_OPTIONS","useDocumentSheetListStore","QUERY","dispatch","useReducer","setIsLoading","res","initialFetch","handleListenerEvent","err_0","listener$","uniques","values","dataAsArray","useDocumentSheetList","h","PaneContainer","TableContainer","DocumentSheetListPaneInner","totalRows","useReactTable","getCoreRowModel","getFilteredRowModel","getPaginationRowModel","autoResetPageIndex","initialState","columnPinning","columnVisibility","getRowId","fieldId","renderRow","getVisibleCells","rowsCount","getHeaderGroups","headers","DocumentSheetListPane","schemaTypeName","isDocumentSchemaType","addSelectedStateToMenuItems","setPrevious","shallowEquals","defaultLayout","defaultOrdering","sourceName","defaultSortOrder","menuItemsWithSelectedState","isSheetListLayout","LiveEditBadge","activePanes","setActivePanes","getIntentState","editDocumentId","canHandleIntent","getPaneParams","Grid","ChangesInspector","showChanges","scrollRef","setScrollRef","diff","selectionState","isComparingCurrent","structureT","FieldWrapper","rootDiff","showFromValue","documentContext","getIsSelectable","isUnpublishDocumentEvent","isScheduleDocumentVersionEvent","isUnscheduleDocumentVersionEvent","EventTimelineItem","cursor","PublishedEventMenu","portalContext","versionId","versionRevisionId","handleOpenReleaseDocument","handleOpenDraftDocument","isMenuDisabled","RELEASES_INTENT","textDecoration","children_0","releaseTitle","children_1","fallbackPlacements","children_2","TimelineItemWrapper","CHILDREN_ITEMS_VARIANTS","animate","exit","ITEM_HEIGHT","EventsTimeline","allEvents","hasMoreEvents","selectedEventId","fetchEventChildren","selectedEvent","expandingParents","setExpandingParents","isCreateDocumentVersionEvent","isEditDocumentVersionEvent","isExpanding","renderOptionsMenu","isPublishDocumentVersionEvent","creationEvent","showExpandingLoader","isLastEvent","EventsTimelineMenu","nextCursor","eventsError","findRangeForRevision","loadMoreEvents","expandEvent","revEvent","sinceEvent","SpinnerContainer","DIFF_INITIAL_VALUE","CompareWithPublishedView","diffInput","wrap","EventsInspector","getChangesList","changesList$","diffLoading","diffError","toEvent","sinceEvents","sameRevisionSelected","SameRevisionSelected","EventsSelector","showList","listHeight","setListHeight","getScrollerRef","initialLoad","HistorySelector","FadeInFlex","TABS","isValidTab","tab","ChangesTabs","parentRef","setParentRef","paneRouterTab","setPaneRouterTab","t26","t27","t28","t29","t30","t31","changesInspector","RestoreIcon","getPathTitles","f","itemType","_key","MARKER_ICON","MARKER_TONE","ValidationInspector","isVersionGoingToUnpublish","marker","ValidationCard","errorInfo","setErrorInfo","level","DocumentNodePathBreadcrumbs","pathTitles","Fragment","fontWeight","validationMarkers","hasErrors","isValidationError","hasWarnings","isValidationWarning","isDocumentGoingToUnpublish","CheckmarkCircleIcon","validationInspector","legacyEditParamsToState","decodeURIComponent","encodePanesSegment","encodeChunks","encodeURIComponent","legacyEditParamsToPath","toState","pathSegment","parsePanesSegment","toPath","router","route","intents","transform","panePattern","isParam","test","isPayloadLike","exclusiveParams","isTruthy","parseChunks","tryParseBase64Payload","firstSibling","paneIsFirstSibling","sameAsFirst","encodedPayload","encodeJsonParams","encodedParams","valueFromFirstSibling","parseOldPanesSegment","restOfSiblings","buffer","match","payloadChunk","tryParsePayload","decodeJsonParams","definePlugin","MasterDetailIcon","prevActions","prevBadges","prevInspectors","tools","canHandleCreateIntent","canHandleEditIntent","controlsDocumentTitle","__internalApplicationType","bundles","structureUsEnglishLocaleBundle"],"mappings":"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"}