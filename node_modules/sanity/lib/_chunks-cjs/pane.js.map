{"version":3,"file":"pane.js","sources":["../../src/structure/diffView/hooks/useCreatePathSyncChannel.ts","../../src/structure/diffView/constants.ts","../../src/structure/diffView/hooks/useDiffViewRouter.ts","../../src/structure/diffView/types/diffViewMode.ts","../../src/structure/diffView/hooks/useDiffViewState.ts","../../src/structure/diffView/hooks/useScrollMirror.tsx","../../src/structure/diffView/versionMode/components/VersionModeHeader.tsx","../../src/structure/diffView/components/DialogLayout.ts","../../src/structure/panes/document/document-layout/pickDocumentLayoutComponent.ts","../../src/structure/diffView/hooks/usePathSyncChannel.ts","../../src/structure/diffView/components/Scroller.ts","../../src/structure/diffView/components/DiffViewPane.tsx","../../src/structure/diffView/components/EditReferenceLinkComponent.tsx","../../src/structure/diffView/components/DiffView.tsx","../../src/structure/diffView/plugin/DiffViewDocumentLayout.tsx","../../src/structure/components/pane/constants.ts","../../src/structure/components/pane/usePaneLayout.ts","../../src/structure/components/pane/PaneDivider.tsx","../../src/structure/components/pane/Pane.tsx","../../src/structure/components/pane/PaneContent.styles.tsx","../../src/structure/components/pane/usePane.ts","../../src/structure/components/pane/PaneContent.tsx","../../src/structure/util/toLowerCaseNoSpaces.tsx","../../src/structure/components/pane/PaneMenuButtonItem.tsx","../../src/structure/components/pane/PaneContextMenuButton.tsx","../../src/structure/components/pane/PaneFooter.styles.tsx","../../src/structure/components/pane/PaneFooter.tsx","../../src/structure/components/pane/PaneHeader.styles.tsx","../../src/structure/components/pane/PaneHeader.tsx","../../src/structure/components/pane/PaneHeaderActionButton.tsx","../../src/structure/components/pane/PaneLayout.styles.tsx","../../src/structure/components/pane/helpers/_calcPaneResize.ts","../../src/structure/components/pane/helpers/_getDOMPath.ts","../../src/structure/components/pane/helpers/_sortElements.ts","../../src/structure/components/pane/paneLayoutController.ts","../../src/structure/components/pane/PaneLayout.tsx","../../src/structure/panes/error/ErrorPane.tsx","../../src/structure/components/Delay.tsx","../../src/structure/panes/loading/getWaitMessages.ts","../../src/structure/panes/loading/LoadingPane.tsx","../../src/structure/panes/document/useDocumentPane.tsx","../../src/structure/panes/document/comments/CommentsWrapper.tsx","../../src/structure/components/paneRouter/usePaneRouter.ts","../../src/structure/hooks/useFilteredReleases.ts","../../src/structure/hooks/useDocumentIdStack.ts","../../src/structure/useStructureTool.ts","../../src/structure/panes/document/constants.ts","../../src/structure/panes/document/DocumentInspectorMenuItemsResolver.tsx","../../src/structure/panes/document/useDocumentTitle.ts","../../src/structure/panes/document/DocumentOperationResults.tsx","../../src/structure/components/paneItem/helpers.tsx","../../src/structure/hasObsoleteDraft.ts","../../src/structure/mustChooseNewDocumentDestination.ts","../../src/structure/panes/document/documentInspector/DocumentInspectorHeader.tsx","../../src/structure/panes/document/documentInspector/DocumentInspectorPanel.tsx","../../src/structure/useStructureToolSetting.ts","../../src/structure/panes/document/inspectDialog/constants.ts","../../src/structure/panes/document/inspectDialog/helpers.ts","../../src/structure/panes/document/inspectDialog/InspectDialog.styles.tsx","../../src/structure/panes/document/inspectDialog/Search.tsx","../../src/structure/panes/document/inspectDialog/InspectDialog.tsx","../../src/structure/panes/document/documentPanel/banners/Banner.tsx","../../src/structure/panes/document/documentPanel/banners/DeletedDocumentBanners.tsx","../../src/structure/panes/document/documentPanel/banners/DeprecatedDocumentTypeBanner.tsx","../../src/structure/components/requestPermissionDialog/__telemetry__/RequestPermissionDialog.telemetry.ts","../../src/structure/components/requestPermissionDialog/RequestPermissionDialog.tsx","../../src/structure/components/requestPermissionDialog/useRoleRequestsStatus.tsx","../../src/structure/panes/document/documentPanel/banners/InsufficientPermissionBanner.tsx","../../src/structure/panes/document/documentPanel/banners/ReferenceChangedBanner.tsx","../../src/structure/panes/document/documentPanel/banners/ArchivedReleaseDocumentBanner.tsx","../../src/structure/panes/document/documentPanel/banners/CanvasLinkedBanner.tsx","../../src/structure/panes/document/documentPanel/banners/ChooseNewDocumentDestinationBanner.tsx","../../src/structure/panes/document/documentPanel/banners/CreateLinkedBanner.tsx","../../src/structure/panes/document/documentPanel/banners/DocumentNotInReleaseBanner.tsx","../../src/structure/panes/document/documentPanel/banners/__telemetry__/DraftLiveEditBanner.telemetry.ts","../../src/structure/panes/document/documentPanel/banners/ObsoleteDraftBanner.tsx","../../src/structure/panes/document/documentPanel/banners/OpenReleaseToEditBanner.tsx","../../src/structure/panes/document/documentPanel/banners/RevisionNotFoundBanner.tsx","../../src/structure/panes/document/documentPanel/banners/ScheduledReleaseBanner.tsx","../../src/structure/panes/document/documentPanel/banners/UnpublishedDocumentBanner.tsx","../../src/structure/panes/document/documentPanel/documentViews/FormHeader.tsx","../../src/structure/panes/document/documentPanel/documentViews/FormView.tsx","../../src/structure/panes/document/documentPanel/header/DocumentHeaderTabs.tsx","../../src/structure/panes/document/documentPanel/header/DocumentHeaderTitle.tsx","../../src/structure/panes/document/documentPanel/header/FavoriteToggle.tsx","../../src/structure/panes/document/documentPanel/header/DocumentPanelSubHeader.tsx","../../src/structure/panes/document/documentPanel/DocumentPanel.tsx","../../src/structure/menuNodes.ts","../../src/structure/constants.ts","../../src/structure/panes/document/statusBar/dialogs/constants.ts","../../src/structure/panes/document/statusBar/dialogs/ConfirmDialog.tsx","../../src/structure/panes/document/statusBar/dialogs/ModalDialog.tsx","../../src/structure/panes/document/statusBar/dialogs/PopoverDialog.tsx","../../src/structure/panes/document/statusBar/ActionStateDialog.tsx","../../src/structure/panes/document/statusBar/ActionMenuButton.tsx","../../src/structure/documentActions/DeleteAction.tsx","../../src/structure/documentActions/DiscardChangesAction.tsx","../../src/structure/documentActions/DuplicateAction.tsx","../../src/structure/documentActions/HistoryRestoreAction.tsx","../../src/structure/documentActions/__telemetry__/documentActions.telemetry.ts","../../src/structure/documentActions/PublishAction.tsx","../../src/structure/documentActions/UnpublishAction.tsx","../../src/structure/panes/document/statusBar/DocumentStatusBarActions.tsx","../../src/structure/panes/document/documentPanel/header/hook/useChipScrollPosition.tsx","../../src/structure/panes/document/documentPanel/header/perspective/DocumentPerspectiveList.tsx","../../src/structure/panes/document/documentPanel/header/DocumentPanelHeader.tsx","../../src/structure/components/spacerButton/SpacerButton.tsx","../../src/structure/panes/document/statusBar/DocumentBadges.tsx","../../src/structure/panes/document/timeline/constants.ts","../../src/structure/panes/document/timeline/helpers.ts","../../src/structure/panes/document/timeline/expandableTimelineItemButton.tsx","../../src/structure/panes/document/timeline/timeline.styled.tsx","../../src/structure/panes/document/timeline/timelineI18n.ts","../../src/structure/panes/document/timeline/userAvatarStack.tsx","../../src/structure/panes/document/timeline/timelineItem.tsx","../../src/structure/panes/document/timeline/utils.ts","../../src/structure/panes/document/timeline/timeline.tsx","../../src/structure/panes/document/timeline/TimelineError.tsx","../../src/structure/panes/document/timeline/timelineMenu.tsx","../../src/structure/panes/document/statusBar/DocumentStatusPulse/AnimatedStatusIcon.tsx","../../src/structure/panes/document/statusBar/DocumentStatusPulse/DocumentStatusPulse.tsx","../../src/structure/panes/document/statusBar/DocumentStatusLine.tsx","../../src/structure/panes/document/statusBar/RevisionStatusLine.tsx","../../src/structure/panes/document/statusBar/useResizeObserver.ts","../../src/structure/panes/document/statusBar/DocumentStatusBar.tsx","../../src/structure/panes/document/keyboardShortcuts/DocumentActionShortcuts.tsx","../../src/structure/panes/document/menuItems.ts","../../src/structure/panes/document/document-layout/DocumentLayoutError.tsx","../../src/structure/panes/document/document-layout/DocumentLayoutFooter.tsx","../../src/structure/panes/document/document-layout/DocumentLayout.tsx","../../src/structure/panes/document/document-layout/useDocumentLayoutComponent.ts","../../src/structure/hooks/useDocumentLastRev.ts","../../src/structure/panes/document/__telemetry__/documentPanes.telemetry.ts","../../src/structure/panes/document/getInitialValueTemplateOpts.ts","../../src/structure/panes/document/useDocumentPaneInitialValue.ts","../../src/structure/panes/document/useDocumentPaneInspector.ts","../../src/structure/panes/document/usePreviewUrl.ts","../../src/structure/panes/document/DocumentPaneProvider.tsx","../../src/structure/panes/document/DocumentEventsPane.tsx","../../src/structure/panes/document/DocumentPaneLegacyTimeline.tsx","../../src/structure/panes/document/DocumentPaneProviderWrapper.tsx","../../src/structure/panes/document/useResetHistoryParams.ts","../../src/structure/panes/document/DocumentPane.tsx","../../src/structure/components/paneRouter/BackLink.tsx","../../src/structure/components/paneRouter/ChildLink.tsx","../../src/structure/components/paneRouter/ParameterizedLink.tsx","../../src/structure/components/paneRouter/ReferenceChildLink.tsx","../../src/structure/components/paneRouter/PaneRouterProvider.tsx","../../src/structure/panes/unknown/UnknownPaneType.tsx","../../src/structure/panes/StructureToolPane.tsx","../../src/structure/components/DocTitle.tsx","../../src/structure/components/confirmDeleteDialog/ConfirmDeleteDialogBody.styles.tsx","../../src/structure/components/paneItem/PaneItemPreview.tsx","../../src/structure/components/confirmDeleteDialog/ReferencePreviewLink.tsx","../../src/structure/components/confirmDeleteDialog/ConfirmDeleteDialogBody.tsx","../../src/structure/components/confirmDeleteDialog/useReferringDocuments.ts","../../src/structure/components/confirmDeleteDialog/ConfirmDeleteDialog.tsx","../../src/structure/components/confirmDeleteDialog/index.tsx","../../src/structure/components/IntentButton.tsx","../../src/structure/components/paneHeaderActions/InsufficientPermissionsMessageTooltip.tsx","../../src/structure/components/paneHeaderActions/PaneHeaderCreateButton.tsx","../../src/structure/components/paneHeaderActions/PaneHeaderActions.tsx","../../src/structure/components/MissingSchemaType.tsx","../../src/structure/components/paneItem/PaneItem.tsx","../../src/structure/components/RenderActionCollectionState.tsx","../../src/structure/components/RenderBadgeCollectionState.tsx","../../src/structure/panes/documentList/constants.ts","../../src/structure/panes/documentList/DocumentListPaneContent.tsx","../../src/structure/panes/documentList/helpers.ts","../../src/structure/panes/documentList/listenSearchQuery.ts","../../src/structure/panes/documentList/useDocumentList.ts","../../src/structure/panes/documentList/DocumentListPane.tsx","../../src/structure/panes/documentList/PaneHeader.tsx","../../src/structure/panes/documentList/sheetList/DocumentSheetListSelect.tsx","../../src/structure/panes/documentList/sheetList/DocumentSheetListProvider.tsx","../../src/structure/panes/documentList/sheetList/SheetListCell.tsx","../../src/structure/panes/documentList/sheetList/useDocumentSheetColumns.tsx","../../src/structure/panes/documentList/sheetList/ColumnsControl.tsx","../../src/structure/panes/documentList/sheetList/DocumentSheetListFilter.tsx","../../src/structure/panes/documentList/sheetList/DocumentSheetListHeader.tsx","../../src/structure/panes/documentList/sheetList/DocumentSheetListPaginator.tsx","../../src/structure/panes/documentList/sheetList/useDocumentSheetListStore.ts","../../src/structure/panes/documentList/sheetList/useDocumentSheetList.ts","../../src/structure/panes/documentList/sheetList/DocumentSheetListPane.tsx","../../src/structure/panes/documentList/PaneContainer.tsx","../../src/structure/documentBadges/LiveEditBadge.ts","../../src/structure/getIntentState.ts","../../src/structure/panes/document/inspectors/changes/ChangesInspector.tsx","../../src/structure/panes/document/timeline/events/EventTimelineItem.tsx","../../src/structure/panes/document/timeline/events/PublishedEventMenu.tsx","../../src/structure/panes/document/timeline/events/EventsTimeline.tsx","../../src/structure/panes/document/timeline/events/EventsTimelineMenu.tsx","../../src/structure/panes/document/inspectors/changes/EventsInspector.tsx","../../src/structure/panes/document/inspectors/changes/EventsSelector.tsx","../../src/structure/panes/document/inspectors/changes/HistorySelector.tsx","../../src/structure/panes/document/inspectors/changes/ChangesTabs.tsx","../../src/structure/panes/document/inspectors/changes/index.ts","../../src/structure/panes/document/inspectors/validation/getPathTitles.ts","../../src/structure/panes/document/inspectors/validation/ValidationInspector.tsx","../../src/structure/panes/document/inspectors/validation/index.ts","../../src/structure/router.ts","../../src/structure/structureTool.ts"],"sourcesContent":["import {useMemo} from 'react'\nimport {Subject} from 'rxjs'\n\nimport {type PathSyncChannel, type PathSyncState} from '../types/pathSyncChannel'\n\n/**\n * @internal\n */\nexport function useCreatePathSyncChannel(): PathSyncChannel {\n  return useMemo(() => new Subject<PathSyncState>(), [])\n}\n","/**\n * @internal\n */\nexport const DIFF_VIEW_SEARCH_PARAMETER = 'diffView'\n\n/**\n * @internal\n */\nexport const DIFF_VIEW_PREVIOUS_DOCUMENT_SEARCH_PARAMETER = 'previousDocument'\n\n/**\n * @internal\n */\nexport const DIFF_VIEW_NEXT_DOCUMENT_SEARCH_PARAMETER = 'nextDocument'\n\n/**\n * @internal\n */\nexport const DIFF_SEARCH_PARAM_DELIMITER = ','\n","import {fromPairs, toPairs} from 'lodash'\nimport {useCallback} from 'react'\nimport {useRouter} from 'sanity/router'\n\nimport {\n  DIFF_SEARCH_PARAM_DELIMITER,\n  DIFF_VIEW_NEXT_DOCUMENT_SEARCH_PARAMETER,\n  DIFF_VIEW_PREVIOUS_DOCUMENT_SEARCH_PARAMETER,\n  DIFF_VIEW_SEARCH_PARAMETER,\n} from '../constants'\nimport {type DiffViewMode} from '../types/diffViewMode'\n\ntype NavigateDiffView = (\n  options: {\n    mode?: DiffViewMode\n  } & Partial<\n    Record<\n      'previousDocument' | 'nextDocument',\n      {\n        type: string\n        id: string\n      }\n    >\n  >,\n) => void\n\nexport interface DiffViewRouter {\n  navigateDiffView: NavigateDiffView\n  exitDiffView: () => void\n}\n\n/**\n * @internal\n */\nexport function useDiffViewRouter(): DiffViewRouter {\n  const {navigate, state: routerState} = useRouter()\n\n  const navigateDiffView = useCallback<NavigateDiffView>(\n    ({mode, previousDocument, nextDocument}) => {\n      const next = {\n        ...fromPairs(routerState._searchParams),\n        ...(mode\n          ? {\n              [DIFF_VIEW_SEARCH_PARAMETER]: mode,\n            }\n          : {}),\n        ...(previousDocument\n          ? {\n              [DIFF_VIEW_PREVIOUS_DOCUMENT_SEARCH_PARAMETER]: [\n                previousDocument.type,\n                previousDocument.id,\n              ].join(DIFF_SEARCH_PARAM_DELIMITER),\n            }\n          : {}),\n        ...(nextDocument\n          ? {\n              [DIFF_VIEW_NEXT_DOCUMENT_SEARCH_PARAMETER]: [nextDocument.type, nextDocument.id].join(\n                DIFF_SEARCH_PARAM_DELIMITER,\n              ),\n            }\n          : {}),\n      }\n\n      navigate({\n        ...routerState,\n        _searchParams: toPairs(next),\n      })\n    },\n    [navigate, routerState],\n  )\n\n  const exitDiffView = useCallback(() => {\n    navigate({\n      ...routerState,\n      _searchParams: (routerState._searchParams ?? []).filter(\n        ([key]) =>\n          ![\n            DIFF_VIEW_SEARCH_PARAMETER,\n            DIFF_VIEW_PREVIOUS_DOCUMENT_SEARCH_PARAMETER,\n            DIFF_VIEW_NEXT_DOCUMENT_SEARCH_PARAMETER,\n          ].includes(key),\n      ),\n    })\n  }, [navigate, routerState])\n\n  return {\n    navigateDiffView,\n    exitDiffView,\n  }\n}\n","/**\n * @internal\n */\nexport const diffViewModes = ['version'] as const\n\n/**\n * @internal\n */\nexport type DiffViewMode = (typeof diffViewModes)[number]\n","import {useEffect, useMemo} from 'react'\nimport {useRouter} from 'sanity/router'\n\nimport {\n  DIFF_SEARCH_PARAM_DELIMITER,\n  DIFF_VIEW_NEXT_DOCUMENT_SEARCH_PARAMETER,\n  DIFF_VIEW_PREVIOUS_DOCUMENT_SEARCH_PARAMETER,\n  DIFF_VIEW_SEARCH_PARAMETER,\n} from '../constants'\nimport {type DiffViewMode, diffViewModes} from '../types/diffViewMode'\n\nfunction isDiffViewMode(maybeDiffViewMode: unknown): maybeDiffViewMode is DiffViewMode {\n  return diffViewModes.includes(maybeDiffViewMode as DiffViewMode)\n}\n\ntype DiffViewState =\n  | {\n      isActive: true\n      state: 'ready'\n      mode: DiffViewMode\n      documents: Record<\n        'previous' | 'next',\n        {\n          type: string\n          id: string\n        }\n      >\n    }\n  | {\n      isActive: true\n      state: 'error'\n      mode: DiffViewMode\n      documents?: never\n    }\n  | {\n      isActive: false\n      state?: never\n      mode?: never\n      documents?: never\n    }\n\nexport function useDiffViewState({\n  onParamsError,\n}: {\n  onParamsError?: (errors: DiffViewStateErrorWithInput[]) => void\n} = {}): DiffViewState {\n  const {state: routerState} = useRouter()\n  const searchParams = new URLSearchParams(routerState._searchParams)\n  const previousDocument = searchParams.get(DIFF_VIEW_PREVIOUS_DOCUMENT_SEARCH_PARAMETER)\n  const nextDocument = searchParams.get(DIFF_VIEW_NEXT_DOCUMENT_SEARCH_PARAMETER)\n  const mode = searchParams.get(DIFF_VIEW_SEARCH_PARAMETER)\n  const anyParamSet = [previousDocument, nextDocument, mode].some((param) => param !== null)\n\n  const params = useMemo(\n    () =>\n      parseParams({\n        previousDocument: previousDocument ?? '',\n        nextDocument: nextDocument ?? '',\n        mode: mode ?? '',\n      }),\n    [mode, nextDocument, previousDocument],\n  )\n\n  useEffect(() => {\n    if (params.result === 'error' && anyParamSet) {\n      onParamsError?.(params.errors)\n    }\n  }, [anyParamSet, onParamsError, params])\n\n  if (params.result === 'error') {\n    return {\n      isActive: false,\n    }\n  }\n\n  return {\n    state: 'ready',\n    isActive: true,\n    ...params.params,\n  }\n}\n\ntype DiffViewStateError =\n  | 'invalidModeParam'\n  | 'invalidPreviousDocumentParam'\n  | 'invalidNextDocumentParam'\n\ntype DiffViewStateErrorWithInput = [error: DiffViewStateError, input: unknown]\n\ninterface ParamsSuccess {\n  result: 'success'\n  params: Pick<DiffViewState & {state: 'ready'}, 'mode' | 'documents'>\n}\n\ninterface ParamsError {\n  result: 'error'\n  errors: DiffViewStateErrorWithInput[]\n}\n\nfunction parseParams({\n  previousDocument,\n  nextDocument,\n  mode,\n}: {\n  previousDocument: string\n  nextDocument: string\n  mode: string\n}): ParamsSuccess | ParamsError {\n  const errors: DiffViewStateErrorWithInput[] = []\n\n  const [previousDocumentType, previousDocumentId] = previousDocument\n    .split(DIFF_SEARCH_PARAM_DELIMITER)\n    .filter(Boolean)\n\n  const [nextDocumentType, nextDocumentId] = nextDocument\n    .split(DIFF_SEARCH_PARAM_DELIMITER)\n    .filter(Boolean)\n\n  if (!isDiffViewMode(mode)) {\n    errors.push(['invalidModeParam', mode])\n  }\n\n  if (typeof previousDocumentType === 'undefined' || typeof previousDocumentId === 'undefined') {\n    errors.push(['invalidPreviousDocumentParam', previousDocument])\n  }\n\n  if (typeof nextDocumentType === 'undefined' || typeof nextDocumentId === 'undefined') {\n    errors.push(['invalidNextDocumentParam', nextDocument])\n  }\n\n  if (errors.length !== 0) {\n    return {\n      result: 'error',\n      errors,\n    }\n  }\n\n  return {\n    result: 'success',\n    params: {\n      mode,\n      documents: {\n        previous: {\n          type: previousDocumentType,\n          id: previousDocumentId,\n        },\n        next: {\n          type: nextDocumentType,\n          id: nextDocumentId,\n        },\n      },\n    },\n  } as ParamsSuccess\n}\n","import {useEffect} from 'react'\nimport ScrollMirror from 'scrollmirror'\n\n/**\n * Use the ScrollMirror library to synchronise the scroll position for an array of elements.\n *\n * @internal\n */\nexport function useScrollMirror(elements: (HTMLElement | null)[]): void {\n  useEffect(() => {\n    const existentElements = elements.filter((element) => element !== null)\n\n    if (existentElements.length === 0) {\n      return undefined\n    }\n\n    const scrollMirror = new ScrollMirror(existentElements)\n    return () => scrollMirror.destroy()\n  }, [elements])\n}\n","import {CloseIcon, LockIcon, TransferIcon} from '@sanity/icons'\nimport {\n  Box,\n  // eslint-disable-next-line no-restricted-imports -- we need more control over how the `Button` component is rendered\n  Button,\n  type ButtonTone,\n  Flex,\n  Menu,\n  // eslint-disable-next-line no-restricted-imports -- the `VersionModeHeader` component needs more control over how the `MenuItem` component is rendered\n  MenuItem,\n  Stack,\n  Text,\n} from '@sanity/ui'\n// eslint-disable-next-line @sanity/i18n/no-i18next-import -- figure out how to have the linter be fine with importing types-only\nimport {type TFunction} from 'i18next'\nimport {type ComponentProps, type ComponentType, useCallback, useMemo} from 'react'\nimport {\n  type DocumentLayoutProps,\n  formatRelativeLocalePublishDate,\n  getDraftId,\n  getPublishedId,\n  getReleaseIdFromReleaseDocumentId,\n  getReleaseTone,\n  getVersionFromId,\n  getVersionId,\n  isDraftId,\n  isPublishedId,\n  isReleaseDocument,\n  isReleaseScheduledOrScheduling,\n  ReleaseAvatar,\n  type ReleaseDocument,\n  useActiveReleases,\n  useDocumentVersions,\n  useEditState,\n  useTranslation,\n  useWorkspace,\n} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {MenuButton} from '../../../../ui-components/menuButton/MenuButton'\nimport {structureLocaleNamespace} from '../../../i18n'\nimport {useDiffViewRouter} from '../../hooks/useDiffViewRouter'\nimport {useDiffViewState} from '../../hooks/useDiffViewState'\n\nconst VersionModeHeaderLayout = styled.header`\n  display: grid;\n  grid-area: header;\n  grid-template-columns: 1fr min-content 1fr;\n  border-block-end: 1px solid var(--card-border-color);\n`\n\nconst VersionModeHeaderLayoutSection = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n\n/**\n * The header component that is rendered when diff view is being used to compare versions of a\n * document.\n *\n * @internal\n */\nexport const VersionModeHeader: ComponentType<\n  {state: 'pending' | 'ready' | 'error'} & Pick<DocumentLayoutProps, 'documentId'>\n> = ({documentId, state}) => {\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {data: documentVersions} = useDocumentVersions({documentId})\n  const {exitDiffView, navigateDiffView} = useDiffViewRouter()\n  const {documents} = useDiffViewState()\n  const activeReleases = useActiveReleases()\n  const releasesIds = documentVersions.flatMap((id) => getVersionFromId(id) ?? [])\n\n  const releases = useMemo(() => {\n    return activeReleases.data.filter((release) => {\n      const releaseId = getReleaseIdFromReleaseDocumentId(release._id)\n      return typeof releaseId !== 'undefined' && releasesIds.includes(releaseId)\n    })\n  }, [activeReleases.data, releasesIds])\n\n  const onSelectPreviousRelease = useCallback(\n    (selectedDocumentId: string): void => {\n      if (typeof documents?.previous !== 'undefined') {\n        navigateDiffView({\n          previousDocument: {\n            ...documents.previous,\n            id: selectedDocumentId,\n          },\n        })\n      }\n    },\n    [documents?.previous, navigateDiffView],\n  )\n\n  const onSelectNextRelease = useCallback(\n    (selectedDocumentId: string): void => {\n      if (typeof documents?.next !== 'undefined') {\n        navigateDiffView({\n          nextDocument: {\n            ...documents.next,\n            id: selectedDocumentId,\n          },\n        })\n      }\n    },\n    [documents?.next, navigateDiffView],\n  )\n\n  return (\n    <VersionModeHeaderLayout>\n      <VersionModeHeaderLayoutSection>\n        <Box padding={4}>\n          <Text as=\"h1\" size={1} muted>\n            {t('compare-versions.title')}\n          </Text>\n        </Box>\n        {typeof documents?.previous !== 'undefined' && (\n          <VersionMenu\n            releases={releases}\n            onSelectRelease={onSelectPreviousRelease}\n            role=\"previous\"\n            documentId={documentId}\n            state={state}\n            document={documents.previous}\n          />\n        )}\n      </VersionModeHeaderLayoutSection>\n      <Flex align=\"center\" paddingX={3}>\n        <Text size={1}>\n          <TransferIcon />\n        </Text>\n      </Flex>\n      <VersionModeHeaderLayoutSection>\n        {typeof documents?.next !== 'undefined' && (\n          <VersionMenu\n            releases={releases}\n            onSelectRelease={onSelectNextRelease}\n            role=\"next\"\n            documentId={documentId}\n            state={state}\n            document={documents.next}\n          />\n        )}\n        <Box\n          padding={3}\n          style={{\n            justifySelf: 'end',\n          }}\n        >\n          <Button icon={CloseIcon} mode=\"bleed\" onClick={exitDiffView} padding={2} />\n        </Box>\n      </VersionModeHeaderLayoutSection>\n    </VersionModeHeaderLayout>\n  )\n}\n\ninterface VersionMenuProps {\n  state: 'pending' | 'ready' | 'error'\n  releases: ReleaseDocument[]\n  role: 'previous' | 'next'\n  onSelectRelease: (releaseId: string) => void\n  documentId: string\n  document: {\n    type: string\n    id: string\n  }\n}\n\nconst VersionMenu: ComponentType<VersionMenuProps> = ({\n  releases = [],\n  onSelectRelease,\n  role,\n  documentId,\n  document,\n}) => {\n  const {published, draft} = useEditState(getPublishedId(document.id), document.type)\n  const selected = useMemo(() => findRelease(document.id, releases), [document.id, releases])\n  const {t: tStructure} = useTranslation(structureLocaleNamespace)\n  const {t: tCore} = useTranslation()\n\n  const {\n    document: {\n      drafts: {enabled: isDraftModelEnabled},\n    },\n  } = useWorkspace()\n\n  return (\n    <MenuButton\n      id={role}\n      button={\n        <Button\n          type=\"button\"\n          mode=\"bleed\"\n          padding={2}\n          paddingRight={3}\n          radius=\"full\"\n          selected\n          {...getMenuButtonProps({selected, tCore, tStructure})}\n        />\n      }\n      menu={\n        <Menu>\n          {published && (\n            <VersionMenuItem\n              type=\"published\"\n              onSelect={onSelectRelease}\n              isSelected={selected === 'published'}\n              documentId={documentId}\n            />\n          )}\n          {isDraftModelEnabled && draft && (\n            <VersionMenuItem\n              type=\"draft\"\n              onSelect={onSelectRelease}\n              isSelected={selected === 'draft'}\n              documentId={documentId}\n            />\n          )}\n          {releases.map((release) => (\n            <VersionMenuItem\n              key={release._id}\n              release={release}\n              onSelect={onSelectRelease}\n              isSelected={typeof selected !== 'string' && selected?._id === release._id}\n              documentId={documentId}\n            />\n          ))}\n        </Menu>\n      }\n    />\n  )\n}\n\ntype VersionMenuItemProps = {\n  onSelect: (releaseId: string) => void\n  isSelected?: boolean\n  documentId: string\n} & (\n  | {\n      release: ReleaseDocument\n      type?: never\n    }\n  | {\n      type: 'published' | 'draft'\n      release?: never\n    }\n)\n\nconst VersionMenuItem: ComponentType<VersionMenuItemProps> = ({\n  type,\n  release,\n  onSelect,\n  isSelected,\n  documentId,\n}) => {\n  const {t: tCore} = useTranslation()\n  const {t: tStructure} = useTranslation(structureLocaleNamespace)\n\n  const onClick = useCallback(() => {\n    if (type === 'draft') {\n      onSelect(getDraftId(documentId))\n      return\n    }\n\n    if (type === 'published') {\n      onSelect(getPublishedId(documentId))\n      return\n    }\n\n    if (typeof release?._id !== 'undefined') {\n      onSelect(getVersionId(documentId, getReleaseIdFromReleaseDocumentId(release._id)))\n    }\n  }, [type, onSelect, documentId, release?._id])\n\n  if (type) {\n    const tone: ButtonTone = type === 'published' ? 'positive' : 'caution'\n\n    return (\n      <MenuItem padding={1} paddingRight={3} onClick={onClick} pressed={isSelected}>\n        <Flex gap={1}>\n          <ReleaseAvatar padding={2} tone={tone} />\n          <Box paddingY={2}>\n            <Text size={1} weight=\"medium\">\n              {tStructure(['compare-versions.status', type].join('.'))}\n            </Text>\n          </Box>\n        </Flex>\n      </MenuItem>\n    )\n  }\n\n  const tone: ButtonTone = release ? getReleaseTone(release) : 'neutral'\n\n  return (\n    <MenuItem padding={1} paddingRight={3} onClick={onClick} pressed={isSelected}>\n      <Flex gap={1}>\n        <ReleaseAvatar padding={2} tone={tone} />\n        <Stack flex={1} paddingY={2} paddingRight={2} space={2}>\n          <Text size={1} weight=\"medium\">\n            {release.metadata.title || tCore('release.placeholder-untitled-release')}\n          </Text>\n          {['asap', 'undecided'].includes(release.metadata.releaseType) && (\n            <Text muted size={1}>\n              {tCore(`release.type.${release.metadata.releaseType}`)}\n            </Text>\n          )}\n          {release.metadata.releaseType === 'scheduled' && (\n            <Text muted size={1}>\n              {formatRelativeLocalePublishDate(release)}\n            </Text>\n          )}\n        </Stack>\n        <Flex flex=\"none\">\n          {isReleaseScheduledOrScheduling(release) && (\n            <Box padding={2}>\n              <Text size={1}>\n                <LockIcon />\n              </Text>\n            </Box>\n          )}\n        </Flex>\n      </Flex>\n    </MenuItem>\n  )\n}\n\nfunction getMenuButtonProps({\n  selected,\n  tCore,\n  tStructure,\n}: {\n  selected?: ReleaseDocument | 'published' | 'draft'\n  tCore: TFunction\n  tStructure: TFunction\n}): Pick<ComponentProps<typeof Button>, 'text' | 'tone' | 'icon' | 'iconRight' | 'disabled'> {\n  if (typeof selected === 'undefined') {\n    return {\n      text: tCore('common.loading'),\n      tone: 'neutral',\n      disabled: true,\n    }\n  }\n\n  if (isReleaseDocument(selected)) {\n    const tone: ButtonTone = selected ? getReleaseTone(selected) : 'neutral'\n\n    return {\n      text: selected?.metadata.title || tCore('release.placeholder-untitled-release'),\n      icon: <ReleaseAvatar padding={1} tone={tone} />,\n      iconRight: selected && isReleaseScheduledOrScheduling(selected) ? <LockIcon /> : undefined,\n      tone,\n    }\n  }\n\n  const tone: ButtonTone = selected === 'published' ? 'positive' : 'caution'\n\n  return {\n    text: tStructure(['compare-versions.status', selected].join('.')),\n    icon: <ReleaseAvatar padding={1} tone={tone} />,\n    tone,\n  }\n}\n\n/**\n * If the provided document id represents a version, find and return the corresponding release\n * document. Otherwise, return a string literal signifying whether the document id represents a\n * published or draft document.\n */\nfunction findRelease(\n  documentId: string,\n  releases: ReleaseDocument[],\n): ReleaseDocument | 'published' | 'draft' | undefined {\n  if (isPublishedId(documentId)) {\n    return 'published'\n  }\n\n  if (isDraftId(documentId)) {\n    return 'draft'\n  }\n\n  return releases.find(\n    ({_id}) => getReleaseIdFromReleaseDocumentId(_id) === getVersionFromId(documentId),\n  )\n}\n","import {styled} from 'styled-components'\n\nexport const DialogLayout = styled.div`\n  --offset-block: 40px;\n  display: grid;\n  height: calc(100vh - var(--offset-block));\n  min-height: 0;\n  overflow: hidden;\n  grid-template-areas:\n    'header header'\n    'previous-document next-document';\n  grid-template-columns: 1fr 1fr;\n  grid-template-rows: min-content minmax(0, 1fr);\n`\n","import {type ComponentType} from 'react'\nimport {type DocumentLayoutProps, type PluginOptions} from 'sanity'\n\n/**\n * Pick the document layout component when composing the component middleware chain.\n */\nexport function pickDocumentLayoutComponent(plugin: PluginOptions) {\n  return plugin.document?.components?.unstable_layout as ComponentType<\n    Omit<DocumentLayoutProps, 'renderDefault'>\n  >\n}\n","import {type Path} from '@sanity/types'\nimport {useCallback, useMemo} from 'react'\nimport deepEquals from 'react-fast-compare'\nimport {distinctUntilChanged, filter, map, type Observable} from 'rxjs'\n\nimport {type PathSyncChannelProps, type PathSyncState} from '../types/pathSyncChannel'\n\ntype Push = (state: PathSyncState) => void\n\n/**\n * Synchronise the open path between multiple document panes.\n *\n * @internal\n */\nexport function usePathSyncChannel({syncChannel, id}: PathSyncChannelProps): {\n  push: Push\n  path: Observable<Path>\n} {\n  const push = useCallback<Push>(\n    (state) => syncChannel.next({...state, source: id}),\n    [id, syncChannel],\n  )\n\n  const path = useMemo(\n    () =>\n      syncChannel.pipe(\n        distinctUntilChanged<PathSyncState>((previous, next) =>\n          deepEquals(previous.path, next.path),\n        ),\n        filter(({source}) => source !== id),\n        map((state) => state.path),\n      ),\n    [id, syncChannel],\n  )\n\n  return {\n    path,\n    push,\n  }\n}\n","import {styled} from 'styled-components'\n\nexport const Scroller = styled.div`\n  position: relative;\n  height: 100%;\n  overflow: auto;\n  scroll-behavior: smooth;\n  scrollbar-width: var(--scrollbar-width);\n  overscroll-behavior: contain;\n  will-change: scroll-position;\n`\n","import {type Path, type SanityDocument} from '@sanity/types'\nimport {\n  BoundaryElementProvider,\n  Card,\n  Container as UiContainer,\n  DialogProvider,\n  PortalProvider,\n} from '@sanity/ui'\nimport {noop} from 'lodash'\nimport {\n  type ComponentType,\n  type CSSProperties,\n  forwardRef,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react'\nimport {\n  ChangeIndicatorsTracker,\n  createPatchChannel,\n  FormBuilder,\n  getPublishedId,\n  getVersionFromId,\n  isDraftId,\n  isPublishedId,\n  isVersionId,\n  LoadingBlock,\n  useDocumentForm,\n  useEditState,\n  useMiddlewareComponents,\n  VirtualizerScrollInstanceProvider,\n} from 'sanity'\nimport {CommentsEnabledContext, ReviewChangesContext} from 'sanity/_singletons'\nimport {styled} from 'styled-components'\n\nimport {pickDocumentLayoutComponent} from '../../panes/document/document-layout/pickDocumentLayoutComponent'\nimport {usePathSyncChannel} from '../hooks/usePathSyncChannel'\nimport {type PathSyncChannel} from '../types/pathSyncChannel'\nimport {Scroller} from './Scroller'\n\nconst DiffViewPaneLayout = styled(Card)`\n  position: relative;\n  grid-area: var(--grid-area);\n`\n\nconst Container = styled(UiContainer)`\n  width: auto;\n`\n\ninterface DiffViewPaneProps {\n  documentType: string\n  documentId: string\n  role: 'previous' | 'next'\n  scrollElement: HTMLElement | null\n  syncChannel: PathSyncChannel\n  compareDocument: {\n    type: string\n    id: string\n  }\n}\n\nexport const DiffViewPane = forwardRef<HTMLDivElement, DiffViewPaneProps>(function DiffViewPane(\n  {role, documentType, documentId, scrollElement, syncChannel, compareDocument},\n  ref,\n) {\n  const containerElement = useRef<HTMLDivElement | null>(null)\n  const [portalElement, setPortalElement] = useState<HTMLDivElement | null>(null)\n  const [boundaryElement, setBoundaryElement] = useState<HTMLDivElement | null>(null)\n\n  const DocumentLayout = useMiddlewareComponents({\n    pick: pickDocumentLayoutComponent,\n    defaultComponent: useCallback(\n      () => (\n        <DiffViewDocument\n          compareDocument={compareDocument}\n          documentId={documentId}\n          documentType={documentType}\n          role={role}\n          scrollElement={scrollElement}\n          syncChannel={syncChannel}\n        />\n      ),\n      [compareDocument, documentId, documentType, role, scrollElement, syncChannel],\n    ),\n  })\n\n  return (\n    <ReviewChangesContext.Provider\n      value={{\n        // Render the change indicators inertly, because the diff view modal does not currently\n        // provide a way to display document inspectors.\n        isInteractive: false,\n        onOpenReviewChanges: noop,\n        onSetFocus: noop,\n        isReviewChangesOpen: false,\n      }}\n    >\n      <ChangeIndicatorsTracker>\n        <VirtualizerScrollInstanceProvider\n          scrollElement={scrollElement}\n          containerElement={containerElement}\n        >\n          <BoundaryElementProvider element={boundaryElement}>\n            <DiffViewPaneLayout\n              ref={setBoundaryElement}\n              style={\n                {\n                  '--grid-area': `${role}-document`,\n                } as CSSProperties\n              }\n              borderLeft={role === 'next'}\n            >\n              <Scroller\n                ref={ref}\n                style={\n                  {\n                    // The scroll position is synchronised between panes. This style hides the\n                    // scrollbar for all panes except the one displaying the next document.\n                    '--scrollbar-width': role !== 'next' && 'none',\n                  } as CSSProperties\n                }\n              >\n                <PortalProvider element={portalElement}>\n                  <DialogProvider position=\"absolute\">\n                    <Container ref={containerElement} padding={4} width={1}>\n                      <DocumentLayout documentId={documentId} documentType={documentType} />\n                    </Container>\n                  </DialogProvider>\n                </PortalProvider>\n              </Scroller>\n              <div data-testid=\"diffView-document-panel-portal\" ref={setPortalElement} />\n            </DiffViewPaneLayout>\n          </BoundaryElementProvider>\n        </VirtualizerScrollInstanceProvider>\n      </ChangeIndicatorsTracker>\n    </ReviewChangesContext.Provider>\n  )\n})\n\nconst DiffViewDocument: ComponentType<DiffViewPaneProps> = ({\n  role,\n  documentType,\n  documentId,\n  syncChannel,\n  compareDocument,\n}) => {\n  const compareValue = useCompareValue({compareDocument})\n  const [patchChannel] = useState(() => createPatchChannel())\n\n  const {\n    formState,\n    onChange,\n    onFocus,\n    onBlur,\n    onSetActiveFieldGroup,\n    onSetCollapsedFieldSet,\n    onSetCollapsedPath,\n    collapsedFieldSets,\n    ready,\n    collapsedPaths,\n    schemaType,\n    value,\n    onProgrammaticFocus,\n    ...documentForm\n  } = useDocumentForm({\n    documentId: getPublishedId(documentId),\n    documentType,\n    selectedPerspectiveName: perspectiveName(documentId),\n    releaseId: getVersionFromId(documentId),\n    comparisonValue: compareValue,\n  })\n\n  const isLoading = formState === null || !ready\n\n  const pathSyncChannel = usePathSyncChannel({\n    id: role,\n    syncChannel,\n  })\n\n  const onPathOpen = useCallback(\n    (path: Path) => {\n      documentForm.onPathOpen(path)\n      pathSyncChannel.push({source: role, path})\n    },\n    [documentForm, pathSyncChannel, role],\n  )\n\n  useEffect(() => {\n    const subscription = pathSyncChannel.path.subscribe(onProgrammaticFocus)\n    return () => subscription.unsubscribe()\n  }, [onProgrammaticFocus, pathSyncChannel.path])\n\n  return isLoading ? (\n    <LoadingBlock showText />\n  ) : (\n    <CommentsEnabledContext.Provider\n      value={{\n        enabled: false,\n        mode: null,\n      }}\n    >\n      <FormBuilder\n        __internal_patchChannel={patchChannel}\n        id={`diffView-pane-${role}`}\n        onChange={onChange}\n        onPathFocus={onFocus}\n        onPathOpen={onPathOpen}\n        onPathBlur={onBlur}\n        onFieldGroupSelect={onSetActiveFieldGroup}\n        onSetFieldSetCollapsed={onSetCollapsedFieldSet}\n        onSetPathCollapsed={onSetCollapsedPath}\n        collapsedPaths={collapsedPaths}\n        collapsedFieldSets={collapsedFieldSets}\n        focusPath={formState.focusPath}\n        changed={formState.changed}\n        focused={formState.focused}\n        groups={formState.groups}\n        validation={formState.validation}\n        members={formState.members}\n        presence={formState.presence}\n        schemaType={schemaType}\n        value={value}\n      />\n    </CommentsEnabledContext.Provider>\n  )\n}\n\nfunction perspectiveName(documentId: string): string | undefined {\n  if (isVersionId(documentId)) {\n    return getVersionFromId(documentId)\n  }\n\n  if (isPublishedId(documentId)) {\n    return 'published'\n  }\n\n  return undefined\n}\n\ntype UseCompareValueOptions = Pick<DiffViewPaneProps, 'compareDocument'>\n\n/**\n * Fetch the contents of `compareDocument` for comparison with another version of the document.\n */\nfunction useCompareValue({compareDocument}: UseCompareValueOptions): SanityDocument | undefined {\n  const compareDocumentEditState = useEditState(\n    getPublishedId(compareDocument.id),\n    compareDocument.type,\n    'low',\n    getVersionFromId(compareDocument.id),\n  )\n\n  return useMemo(() => {\n    if (isVersionId(compareDocument.id)) {\n      return compareDocumentEditState.version ?? undefined\n    }\n\n    if (isDraftId(compareDocument.id)) {\n      return compareDocumentEditState.draft ?? undefined\n    }\n\n    if (isPublishedId(compareDocument.id)) {\n      return compareDocumentEditState.published ?? undefined\n    }\n\n    return undefined\n  }, [\n    compareDocument.id,\n    compareDocumentEditState.draft,\n    compareDocumentEditState.published,\n    compareDocumentEditState.version,\n  ])\n}\n","import {type ReferenceInputOptions} from 'sanity'\nimport {useIntentLink} from 'sanity/router'\nimport {styled} from 'styled-components'\n\nconst Link = styled.a`\n  flex: 1;\n  text-decoration: none;\n  color: inherit;\n`\n\nexport const EditReferenceLinkComponent: ReferenceInputOptions['EditReferenceLinkComponent'] = ({\n  children,\n  documentId: _documentId,\n  documentType,\n}) => {\n  const {href} = useIntentLink({\n    intent: 'edit',\n    params: {\n      id: _documentId,\n      type: documentType,\n    },\n  })\n\n  return (\n    <Link href={href} target=\"_blank\" rel=\"noopener noreferrer\">\n      {children}\n    </Link>\n  )\n}\n","import {type ComponentType, useContext, useMemo, useState} from 'react'\nimport {type DocumentLayoutProps} from 'sanity'\nimport {ReferenceInputOptionsContext} from 'sanity/_singletons'\n\nimport {Dialog} from '../../../ui-components/dialog/Dialog'\nimport {useCreatePathSyncChannel} from '../hooks/useCreatePathSyncChannel'\nimport {useDiffViewRouter} from '../hooks/useDiffViewRouter'\nimport {useDiffViewState} from '../hooks/useDiffViewState'\nimport {useScrollMirror} from '../hooks/useScrollMirror'\nimport {VersionModeHeader} from '../versionMode/components/VersionModeHeader'\nimport {DialogLayout} from './DialogLayout'\nimport {DiffViewPane} from './DiffViewPane'\nimport {EditReferenceLinkComponent} from './EditReferenceLinkComponent'\n\nexport const DiffView: ComponentType<Pick<DocumentLayoutProps, 'documentId'>> = ({documentId}) => {\n  const {documents, state, mode} = useDiffViewState()\n  const {exitDiffView} = useDiffViewRouter()\n  const syncChannel = useCreatePathSyncChannel()\n  const [previousPaneElement, setPreviousPaneElement] = useState<HTMLElement | null>(null)\n  const [nextPaneElement, setNextPaneElement] = useState<HTMLElement | null>(null)\n  const referenceInputOptionsContext = useContext(ReferenceInputOptionsContext)\n\n  const diffViewReferenceInputOptionsContext = useMemo(\n    () => ({\n      ...referenceInputOptionsContext,\n      disableNew: true,\n      EditReferenceLinkComponent,\n    }),\n    [referenceInputOptionsContext],\n  )\n\n  useScrollMirror([previousPaneElement, nextPaneElement])\n\n  return (\n    <ReferenceInputOptionsContext.Provider value={diffViewReferenceInputOptionsContext}>\n      <Dialog\n        id=\"diffView\"\n        width=\"auto\"\n        onClose={exitDiffView}\n        padding={false}\n        __unstable_hideCloseButton\n      >\n        <DialogLayout>\n          {mode === 'version' && <VersionModeHeader documentId={documentId} state={state} />}\n          {state === 'ready' && (\n            <>\n              <DiffViewPane\n                documentType={documents.previous.type}\n                documentId={documents.previous.id}\n                role=\"previous\"\n                ref={setPreviousPaneElement}\n                scrollElement={previousPaneElement}\n                syncChannel={syncChannel}\n                compareDocument={documents.previous}\n              />\n              <DiffViewPane\n                documentType={documents.next.type}\n                documentId={documents.next.id}\n                role=\"next\"\n                ref={setNextPaneElement}\n                scrollElement={nextPaneElement}\n                syncChannel={syncChannel}\n                // The previous document's edit state is used to calculate the diff inroduced by the next document.\n                compareDocument={documents.previous}\n              />\n            </>\n          )}\n        </DialogLayout>\n      </Dialog>\n    </ReferenceInputOptionsContext.Provider>\n  )\n}\n","import {useToast} from '@sanity/ui'\nimport {type ComponentType, type PropsWithChildren} from 'react'\nimport {type DocumentLayoutProps, useTranslation} from 'sanity'\n\nimport {structureLocaleNamespace} from '../../i18n'\nimport {DiffView} from '../components/DiffView'\nimport {useDiffViewState} from '../hooks/useDiffViewState'\n\nexport const DiffViewDocumentLayout: ComponentType<\n  PropsWithChildren<Pick<DocumentLayoutProps, 'documentId' | 'documentType'>>\n> = ({children, documentId}) => {\n  const toast = useToast()\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {isActive} = useDiffViewState({\n    onParamsError: (errors) => {\n      toast.push({\n        id: 'diffViewParamsParsingError',\n        status: 'error',\n        title: t('compare-version.error.invalidParams.title'),\n        description: (\n          <ul>\n            {errors.map(([error, input]) => (\n              <li key={error}>\n                {t(`compare-version.error.${error}`, {\n                  input,\n                })}\n              </li>\n            ))}\n          </ul>\n        ),\n      })\n    },\n  })\n\n  return (\n    <>\n      {children}\n      {isActive && <DiffView documentId={documentId} />}\n    </>\n  )\n}\n","/**\n * @internal\n */\nexport const PANE_DEBUG = false\n\n/**\n * @internal\n */\nexport const PANE_COLLAPSED_WIDTH = 51\n\n/**\n * @internal\n */\nexport const PANE_DEFAULT_MIN_WIDTH = PANE_COLLAPSED_WIDTH * 4\n","import {useContext} from 'react'\nimport {PaneLayoutContext} from 'sanity/_singletons'\n\nimport {type PaneLayoutContextValue} from './types'\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport function usePaneLayout(): PaneLayoutContextValue {\n  const pane = useContext(PaneLayoutContext)\n\n  if (!pane) {\n    throw new Error('PaneLayout: missing context value')\n  }\n\n  return pane\n}\n","import {Layer} from '@sanity/ui'\nimport {useCallback, useState} from 'react'\nimport {styled} from 'styled-components'\n\nimport {usePaneLayout} from './usePaneLayout'\n\nconst Root = styled(Layer)`\n  position: relative;\n  width: 1px;\n  min-width: 1px;\n\n  &:before {\n    content: '';\n    display: block;\n    position: absolute;\n    top: 0;\n    left: 0;\n    bottom: 0;\n    width: 1px;\n    background-color: var(--card-border-color);\n  }\n\n  &:not([data-disabled]) {\n    cursor: ew-resize;\n    width: 9px;\n    min-width: 9px;\n    margin: 0 -4px;\n\n    &:before {\n      left: 4px;\n    }\n\n    &:after {\n      content: '';\n      display: block;\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 9px;\n      bottom: 0;\n      background-color: var(--card-border-color);\n      opacity: 0;\n      transition: opacity 150ms;\n    }\n\n    &[data-dragging]:after,\n    &:hover:after {\n      opacity: 0.2;\n    }\n  }\n`\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport function PaneDivider({\n  disabled,\n  element,\n}: {\n  disabled?: boolean\n  element: HTMLElement | null\n}) {\n  const {resize} = usePaneLayout()\n  const [dragging, setDragging] = useState(false)\n\n  const handleMouseDown = useCallback(\n    (event: any) => {\n      if (!element) return\n\n      setDragging(true)\n\n      event.preventDefault()\n\n      const startX = event.pageX\n\n      resize('start', element, 0)\n\n      const handleMouseMove = (e: MouseEvent) => {\n        e.preventDefault()\n\n        const deltaX = e.pageX - startX\n\n        resize('move', element, deltaX)\n      }\n\n      const handleMouseUp = (e: MouseEvent) => {\n        e.preventDefault()\n\n        setDragging(false)\n\n        window.removeEventListener('mousemove', handleMouseMove)\n        window.removeEventListener('mouseup', handleMouseUp)\n\n        resize('end', element, 0)\n      }\n\n      window.addEventListener('mousemove', handleMouseMove)\n      window.addEventListener('mouseup', handleMouseUp)\n    },\n    [element, resize],\n  )\n\n  return (\n    <Root\n      data-disabled={disabled ? '' : undefined}\n      data-dragging={dragging ? '' : undefined}\n      onMouseDown={handleMouseDown}\n    />\n  )\n}\n","import {BoundaryElementProvider, Card, type CardProps, Code, Flex} from '@sanity/ui'\nimport {\n  type ForwardedRef,\n  forwardRef,\n  type HTMLProps,\n  type ReactNode,\n  useCallback,\n  useImperativeHandle,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react'\nimport {IsLastPaneProvider, LegacyLayerProvider} from 'sanity'\nimport {PaneContext} from 'sanity/_singletons'\nimport {styled} from 'styled-components'\n\nimport {PANE_COLLAPSED_WIDTH, PANE_DEBUG, PANE_DEFAULT_MIN_WIDTH} from './constants'\nimport {PaneDivider} from './PaneDivider'\nimport {usePaneLayout} from './usePaneLayout'\n\ninterface PaneProps {\n  children?: ReactNode\n  currentMinWidth?: number\n  currentMaxWidth?: number\n  flex?: number\n  id: string\n  minWidth?: number\n  maxWidth?: number\n  selected?: boolean\n}\n\nconst Root = styled(Card)`\n  outline: none;\n\n  // NOTE: This will render a border to the right side of each pane\n  // without taking up physical space.\n  box-shadow: 1px 0 0 var(--card-border-color);\n`\n\n/**\n * @hidden\n * @internal\n */\nexport const Pane = forwardRef(function Pane(\n  props: PaneProps &\n    Omit<CardProps, 'as' | 'overflow'> &\n    Omit<HTMLProps<HTMLDivElement>, 'as' | 'height' | 'hidden' | 'id' | 'style'>,\n  forwardedRef: ForwardedRef<HTMLDivElement>,\n) {\n  const {\n    children,\n    currentMinWidth: currentMinWidthProp,\n    currentMaxWidth: currentMaxWidthProp,\n    flex: flexProp = 1,\n    id,\n    minWidth: minWidthProp,\n    maxWidth: maxWidthProp,\n    selected = false,\n    ...restProps\n  } = props\n  const [rootElement, setRootElement] = useState<HTMLDivElement | null>(null)\n  const {\n    collapse,\n    collapsed: layoutCollapsed,\n    expand,\n    expandedElement,\n    mount,\n    panes,\n  } = usePaneLayout()\n  const pane = panes.find((p) => p.element === rootElement)\n  const paneIndex = pane && panes.indexOf(pane)\n  const nextPane = typeof paneIndex === 'number' ? panes[paneIndex + 1] : undefined\n  const isLast = paneIndex === panes.length - 1\n  const expanded = expandedElement === rootElement\n  const collapsed = layoutCollapsed ? false : pane?.collapsed || false\n  const nextCollapsed = nextPane?.collapsed || false\n  const ref = useRef<HTMLDivElement | null>(null)\n  const flex = pane?.flex ?? flexProp\n  const currentMinWidth = pane?.currentMinWidth ?? currentMinWidthProp\n  const currentMaxWidth = pane?.currentMaxWidth ?? currentMaxWidthProp\n\n  // Forward ref to parent\n  useImperativeHandle<HTMLDivElement | null, HTMLDivElement | null>(forwardedRef, () => ref.current)\n\n  const setRef = useCallback((refValue: HTMLDivElement | null) => {\n    setRootElement(refValue)\n    ref.current = refValue\n  }, [])\n\n  useLayoutEffect(() => {\n    if (!rootElement) return undefined\n    return mount(rootElement, {\n      currentMinWidth: currentMinWidthProp,\n      currentMaxWidth: currentMaxWidthProp,\n      flex: flexProp,\n      id,\n      minWidth: minWidthProp,\n      maxWidth: maxWidthProp,\n    })\n  }, [\n    currentMinWidthProp,\n    currentMaxWidthProp,\n    flexProp,\n    id,\n    minWidthProp,\n    maxWidthProp,\n    mount,\n    rootElement,\n  ])\n\n  const handleCollapse = useCallback(() => {\n    if (!rootElement) return\n    collapse(rootElement)\n  }, [collapse, rootElement])\n\n  const handleExpand = useCallback(() => {\n    if (!rootElement) return\n    expand(rootElement)\n  }, [expand, rootElement])\n\n  const contextValue = useMemo(\n    () => ({\n      collapse: handleCollapse,\n      collapsed: layoutCollapsed ? false : collapsed,\n      expand: handleExpand,\n      index: paneIndex,\n      isLast,\n      rootElement,\n    }),\n    [collapsed, handleCollapse, handleExpand, isLast, layoutCollapsed, paneIndex, rootElement],\n  )\n\n  const minWidth = useMemo(() => {\n    if (layoutCollapsed) {\n      return undefined\n    }\n\n    if (collapsed) return PANE_COLLAPSED_WIDTH\n\n    if (currentMinWidth === 0) {\n      return minWidthProp || PANE_DEFAULT_MIN_WIDTH\n    }\n\n    if (isLast) {\n      return minWidthProp || PANE_DEFAULT_MIN_WIDTH\n    }\n\n    return currentMinWidth || minWidthProp || PANE_DEFAULT_MIN_WIDTH\n  }, [collapsed, currentMinWidth, isLast, layoutCollapsed, minWidthProp])\n\n  const maxWidth = useMemo(() => {\n    if (collapsed) return PANE_COLLAPSED_WIDTH\n\n    if (layoutCollapsed && isLast) {\n      return undefined\n    }\n\n    if (isLast) {\n      if (maxWidthProp) {\n        return currentMaxWidth ?? maxWidthProp\n      }\n\n      return undefined\n    }\n\n    return currentMaxWidth ?? maxWidthProp\n  }, [collapsed, currentMaxWidth, isLast, layoutCollapsed, maxWidthProp])\n\n  const hidden = layoutCollapsed && !isLast\n\n  const divider = useMemo(\n    () =>\n      !isLast &&\n      !layoutCollapsed && (\n        <LegacyLayerProvider zOffset=\"paneResizer\">\n          <PaneDivider disabled={collapsed || nextCollapsed} element={rootElement} />\n        </LegacyLayerProvider>\n      ),\n    [collapsed, isLast, layoutCollapsed, nextCollapsed, rootElement],\n  )\n\n  const style = useMemo(\n    () => ({\n      flex,\n      minWidth,\n      maxWidth: maxWidth === Infinity ? undefined : maxWidth,\n    }),\n    [flex, minWidth, maxWidth],\n  )\n\n  return (\n    <>\n      <LegacyLayerProvider zOffset=\"pane\">\n        <PaneContext.Provider value={contextValue}>\n          <IsLastPaneProvider isLastPane={isLast}>\n            <Root\n              data-testid=\"pane\"\n              data-ui=\"Pane\"\n              tone=\"inherit\"\n              hidden={hidden}\n              id={id}\n              overflow={layoutCollapsed ? undefined : 'hidden'}\n              {...restProps}\n              data-pane-collapsed={collapsed ? '' : undefined}\n              data-pane-index={paneIndex}\n              data-pane-selected={selected ? '' : undefined}\n              ref={setRef}\n              style={style}\n            >\n              {PANE_DEBUG && (\n                <Card padding={4} tone={expanded ? 'primary' : 'caution'}>\n                  <Code size={1}>\n                    {[\n                      `#${paneIndex}`,\n                      `collapsed=${collapsed}`,\n                      `currentMinWidth=${currentMinWidth}`,\n                      `currentMaxWidth=${currentMaxWidth}`,\n                      `flex=${flex}`,\n                      `minWidth=${minWidth}`,\n                      `maxWidth=${maxWidth}`,\n                    ].join('\\n')}\n                  </Code>\n                </Card>\n              )}\n\n              <BoundaryElementProvider element={rootElement}>\n                {!hidden && (\n                  <Flex direction=\"column\" height=\"fill\">\n                    {children}\n                  </Flex>\n                )}\n              </BoundaryElementProvider>\n            </Root>\n          </IsLastPaneProvider>\n        </PaneContext.Provider>\n      </LegacyLayerProvider>\n\n      {divider}\n    </>\n  )\n})\n","import {Card} from '@sanity/ui'\nimport {styled} from 'styled-components'\n\nexport const Root = styled(Card)`\n  position: relative;\n  outline: none;\n`\n\nRoot.displayName = 'PaneContent__root'\n","import {useContext} from 'react'\nimport {PaneContext} from 'sanity/_singletons'\n\nimport {type PaneContextValue} from './types'\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport function usePane(): PaneContextValue {\n  const pane = useContext(PaneContext)\n\n  if (!pane) {\n    throw new Error('Pane: missing context value')\n  }\n\n  return pane\n}\n","import {type BoxOverflow} from '@sanity/ui'\nimport {type ElementType, type ForwardedRef, forwardRef, type HTMLProps} from 'react'\n\nimport {Root} from './PaneContent.styles'\nimport {usePane} from './usePane'\nimport {usePaneLayout} from './usePaneLayout'\n\ninterface PaneContentProps {\n  as?: ElementType | keyof React.JSX.IntrinsicElements\n  overflow?: BoxOverflow\n  padding?: number | number[]\n}\n\n/**\n * @hidden\n * @internal\n */\nexport const PaneContent = forwardRef(function PaneContent(\n  props: PaneContentProps & Omit<HTMLProps<HTMLDivElement>, 'as' | 'height' | 'ref'>,\n  ref: ForwardedRef<HTMLDivElement>,\n) {\n  const {as, children, overflow, padding, ...restProps} = props\n  const {collapsed} = usePane()\n  const {collapsed: layoutCollapsed} = usePaneLayout()\n\n  return (\n    <Root\n      data-testid=\"pane-content\"\n      forwardedAs={as}\n      {...restProps}\n      flex={1}\n      hidden={collapsed}\n      overflow={layoutCollapsed ? undefined : overflow}\n      padding={padding}\n      ref={ref}\n      tone=\"inherit\"\n    >\n      {children}\n    </Root>\n  )\n})\n","/**\n * Remove the spaces and lower case the string\n *\n * @param str - string to remove the spaces and lower case\n * @returns str with no spaces and lower case\n */\nexport function toLowerCaseNoSpaces(str: string | undefined): string {\n  if (!str) return ''\n  return str.toLocaleLowerCase().replaceAll(' ', '')\n}\n","import {CheckmarkIcon} from '@sanity/icons'\nimport {MenuDivider, Text} from '@sanity/ui'\nimport {type MouseEvent, useCallback} from 'react'\nimport {TooltipOfDisabled, useGetI18nText, useI18nText} from 'sanity'\nimport {useIntentLink} from 'sanity/router'\n\nimport {MenuGroup, MenuItem, type PopoverProps} from '../../../ui-components'\nimport {type Intent} from '../../structureBuilder'\nimport {toLowerCaseNoSpaces} from '../../util/toLowerCaseNoSpaces'\nimport {type _PaneMenuItem, type _PaneMenuNode} from './types'\n\nconst MENU_GROUP_POPOVER_PROPS: PopoverProps = {\n  constrainSize: true,\n  placement: 'left-start',\n  portal: true,\n}\n\nexport function PaneMenuButtonItem(props: {\n  disabled?: boolean\n  isAfterGroup: boolean\n  node: _PaneMenuNode\n}) {\n  const {disabled, isAfterGroup, node} = props\n  const getI18nText = useGetI18nText('i18n' in node ? node : undefined)\n\n  if (node.type === 'divider') {\n    return <MenuDivider />\n  }\n\n  const {title} = getI18nText(node)\n\n  if (node.type === 'group') {\n    if (node.children.length === 0) {\n      return null\n    }\n\n    if (node.expanded) {\n      return (\n        <>\n          {isAfterGroup && <MenuDivider />}\n          {node.children.map((child, childIndex) => (\n            <PaneMenuButtonItem\n              key={child.key}\n              disabled={disabled || Boolean(node.disabled)}\n              isAfterGroup={node.children[childIndex - 1]?.type === 'group'}\n              node={child}\n            />\n          ))}\n        </>\n      )\n    }\n\n    return (\n      <>\n        {isAfterGroup && <MenuDivider />}\n        <MenuGroup\n          disabled={disabled}\n          icon={node.icon}\n          popover={MENU_GROUP_POPOVER_PROPS}\n          text={title}\n        >\n          {node.children.map((child, childIndex) => (\n            <PaneMenuButtonItem\n              key={child.key}\n              disabled={disabled || Boolean(node.disabled)}\n              isAfterGroup={node.children[childIndex - 1]?.type === 'group'}\n              node={child}\n            />\n          ))}\n        </MenuGroup>\n      </>\n    )\n  }\n\n  return (\n    <>\n      {isAfterGroup && <MenuDivider />}\n      <PaneContextMenuItemResolver disabled={disabled} node={node} />\n    </>\n  )\n}\n\nfunction PaneContextMenuItemResolver(props: {disabled?: boolean; node: _PaneMenuItem}) {\n  const {node} = props\n\n  if (node.intent) {\n    return <PaneContextIntentMenuItem {...props} intent={node.intent} />\n  }\n\n  return <PaneContextMenuItem {...props} />\n}\n\nfunction PaneContextMenuItem(props: {disabled?: boolean; node: _PaneMenuItem}) {\n  const {disabled, node} = props\n  const tooltipContent = typeof node.disabled === 'object' && (\n    <Text size={1}>{node.disabled.reason}</Text>\n  )\n  const {title} = useI18nText(node)\n\n  return (\n    <TooltipOfDisabled content={tooltipContent} placement=\"left\">\n      <MenuItem\n        disabled={disabled || Boolean(node.disabled)}\n        hotkeys={node.hotkey?.split('+')}\n        icon={node.icon}\n        iconRight={node.iconRight || (node.selected && CheckmarkIcon)}\n        // eslint-disable-next-line react/jsx-handler-names\n        onClick={node.onAction}\n        pressed={node.selected}\n        text={title}\n        tone={node.tone}\n        data-testid={`action-${toLowerCaseNoSpaces(node.title)}`}\n      />\n    </TooltipOfDisabled>\n  )\n}\n\nfunction PaneContextIntentMenuItem(props: {\n  disabled?: boolean\n  intent: Intent\n  node: _PaneMenuItem\n}) {\n  const {disabled, intent, node} = props\n  const tooltipContent = typeof node.disabled === 'object' && (\n    <Text size={1}>{node.disabled.reason}</Text>\n  )\n  const intentLink = useIntentLink({intent: intent.type, params: intent.params})\n\n  const handleClick = useCallback(\n    (event: MouseEvent<HTMLDivElement>) => {\n      intentLink.onClick(event)\n      node.onAction()\n    },\n    [intentLink, node],\n  )\n\n  const {title} = useI18nText(node)\n\n  return (\n    <TooltipOfDisabled content={tooltipContent} placement=\"left\">\n      <MenuItem\n        as=\"a\"\n        disabled={disabled || Boolean(node.disabled)}\n        hotkeys={node.hotkey?.split('+')}\n        href={intentLink.href}\n        icon={node.icon}\n        iconRight={node.selected ? CheckmarkIcon : undefined}\n        onClick={handleClick}\n        pressed={node.selected}\n        text={title}\n        tone={node.tone}\n      />\n    </TooltipOfDisabled>\n  )\n}\n","import {Menu, MenuDivider} from '@sanity/ui'\nimport {type ReactNode, useId} from 'react'\nimport {ContextMenuButton} from 'sanity'\n\nimport {MenuButton, type PopoverProps} from '../../../ui-components'\nimport {PaneMenuButtonItem} from './PaneMenuButtonItem'\nimport {type _PaneMenuItem, type _PaneMenuNode} from './types'\n\ninterface PaneContextMenuButtonProps {\n  nodes: _PaneMenuNode[]\n  actionsNodes?: ReactNode\n}\n\nconst CONTEXT_MENU_POPOVER_PROPS: PopoverProps = {\n  constrainSize: true,\n  placement: 'bottom',\n  portal: true,\n}\n\nfunction nodesHasTone(nodes: _PaneMenuNode[], tone: NonNullable<_PaneMenuItem['tone']>): boolean {\n  return nodes.some((node) => {\n    return (\n      (node.type === 'item' && node.tone === tone) ||\n      (node.type === 'group' && nodesHasTone(node.children, tone))\n    )\n  })\n}\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport function PaneContextMenuButton(props: PaneContextMenuButtonProps) {\n  const {nodes, actionsNodes} = props\n  const id = useId()\n\n  const hasCritical = nodesHasTone(nodes, 'critical')\n  const hasCaution = nodesHasTone(nodes, 'caution')\n\n  return (\n    <MenuButton\n      button={\n        <ContextMenuButton\n          tone={hasCritical ? 'critical' : hasCaution ? 'caution' : undefined}\n          data-testid=\"pane-context-menu-button\"\n        />\n      }\n      id={id}\n      menu={\n        <Menu>\n          {actionsNodes && (\n            <>\n              {actionsNodes}\n              <MenuDivider />\n            </>\n          )}\n          {nodes.map((node, nodeIndex) => {\n            const isAfterGroup = nodes[nodeIndex - 1]?.type === 'group'\n            return <PaneMenuButtonItem key={node.key} isAfterGroup={isAfterGroup} node={node} />\n          })}\n        </Menu>\n      }\n      popover={CONTEXT_MENU_POPOVER_PROPS}\n    />\n  )\n}\n","import {Card, Layer} from '@sanity/ui'\nimport {styled} from 'styled-components'\n\nexport const Root = styled(Layer)`\n  position: sticky;\n  bottom: 0;\n`\n\nexport const RootCard = styled(Card)`\n  padding-bottom: env(safe-area-inset-bottom);\n`\n","import {Box} from '@sanity/ui'\nimport {type ForwardedRef, forwardRef, type ReactNode} from 'react'\nimport {LegacyLayerProvider} from 'sanity'\n\nimport {Root, RootCard} from './PaneFooter.styles'\nimport {usePane} from './usePane'\n\ninterface PaneFooterProps {\n  children?: ReactNode\n  padding?: number | number[]\n}\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport const PaneFooter = forwardRef(function PaneFooter(\n  props: PaneFooterProps,\n  ref: ForwardedRef<HTMLDivElement>,\n) {\n  const {children, padding} = props\n  const {collapsed} = usePane()\n\n  return (\n    <LegacyLayerProvider zOffset=\"paneFooter\">\n      <Root data-testid=\"pane-footer\" hidden={collapsed} ref={ref}>\n        <RootCard tone=\"inherit\">\n          <Box padding={padding}>{children}</Box>\n        </RootCard>\n      </Root>\n    </LegacyLayerProvider>\n  )\n})\n","import {Card, Flex, Layer, Text, TextSkeleton, type Theme} from '@sanity/ui'\nimport {css, styled} from 'styled-components'\n\ninterface RootProps {\n  $border?: boolean\n}\n\nexport const Root = styled(Layer)<RootProps>(({$border}) => {\n  return css`\n    line-height: 0;\n    position: sticky;\n    top: 0;\n\n    &:not([data-collapsed]):after {\n      content: '';\n      display: block;\n      position: absolute;\n      left: 0;\n      right: 0;\n      bottom: -1px;\n      border-bottom: 1px solid ${$border ? 'var(--card-border-color)' : 'transparent'};\n      opacity: 1;\n    }\n  `\n})\n\nexport const Layout = styled(Flex)`\n  transform-origin: calc(51px / 2);\n\n  [data-collapsed] > div > & {\n    transform: rotate(90deg);\n  }\n`\n\nexport const TitleCard = styled(Card)(({theme}: {theme: Theme}) => {\n  const {fg, bg} = theme.sanity.color.card.enabled\n\n  // Disable color updates on hover\n  return css`\n    background-color: ${bg};\n\n    [data-ui='Text'] {\n      color: ${fg};\n    }\n  `\n})\n\nexport const TitleTextSkeleton = styled(TextSkeleton)`\n  width: 66%;\n  max-width: 175px;\n`\n\nexport const TitleText = styled(Text)`\n  cursor: default;\n  outline: none;\n`\n","import {Box, Card, Flex, LayerProvider, useElementRect} from '@sanity/ui'\nimport {type ForwardedRef, forwardRef, type ReactNode, useCallback, useMemo} from 'react'\nimport {LegacyLayerProvider} from 'sanity'\n\nimport {Layout, Root, TitleCard, TitleText, TitleTextSkeleton} from './PaneHeader.styles'\nimport {usePane} from './usePane'\n\nexport type TabsType = 'default' | 'dropdown'\n\n/**\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport interface PaneHeaderProps {\n  actions?: ReactNode\n  backButton?: ReactNode\n  border?: boolean\n  contentAfter?: ReactNode\n  loading?: boolean\n  subActions?: ReactNode\n  tabIndex?: number\n  tabs?: ReactNode\n  title: ReactNode\n  appendTitle?: ReactNode\n}\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport const PaneHeader = forwardRef(function PaneHeader(\n  props: PaneHeaderProps,\n  ref: ForwardedRef<HTMLDivElement>,\n) {\n  const {\n    actions,\n    backButton,\n    border,\n    contentAfter,\n    loading,\n    subActions,\n    tabs,\n    tabIndex,\n    title,\n    appendTitle,\n  } = props\n  const {collapse, collapsed, expand, rootElement: paneElement} = usePane()\n  const paneRect = useElementRect(paneElement || null)\n\n  const layoutStyle = useMemo(\n    () => ({\n      width: collapsed ? paneRect?.height || window.innerHeight : undefined,\n    }),\n    [collapsed, paneRect],\n  )\n\n  const handleTitleClick = useCallback(() => {\n    if (collapsed) return\n    collapse()\n  }, [collapse, collapsed])\n\n  const handleLayoutClick = useCallback(() => {\n    if (!collapsed) return\n    expand()\n  }, [collapsed, expand])\n\n  const showTabsOrSubActions = Boolean(!collapsed && (tabs || subActions))\n\n  return (\n    <LayerProvider zOffset={100}>\n      <Root\n        $border={border}\n        data-collapsed={collapsed ? '' : undefined}\n        data-testid=\"pane-header\"\n        ref={ref}\n      >\n        <LegacyLayerProvider zOffset=\"paneHeader\">\n          <Card data-collapsed={collapsed ? '' : undefined} tone=\"inherit\">\n            <Layout\n              direction=\"column\"\n              gap={3}\n              onClick={handleLayoutClick}\n              padding={3}\n              sizing=\"border\"\n              style={layoutStyle}\n            >\n              <Flex align=\"flex-start\" gap={3}>\n                {backButton && <Box flex=\"none\">{backButton}</Box>}\n\n                <TitleCard\n                  __unstable_focusRing\n                  flex={1}\n                  onClick={handleTitleClick}\n                  paddingLeft={backButton ? 1 : 2}\n                  padding={2}\n                  tabIndex={tabIndex}\n                >\n                  {loading && (\n                    <Box>\n                      <TitleTextSkeleton animated radius={1} size={1} />\n                    </Box>\n                  )}\n                  {!loading && (\n                    <Flex align=\"center\" gap={1}>\n                      <TitleText size={1} textOverflow=\"ellipsis\" weight=\"semibold\">\n                        {title}\n                      </TitleText>\n                      {appendTitle}\n                    </Flex>\n                  )}\n                </TitleCard>\n\n                {actions && (\n                  <Box hidden={collapsed}>\n                    <LegacyLayerProvider zOffset=\"paneHeader\">{actions}</LegacyLayerProvider>\n                  </Box>\n                )}\n              </Flex>\n\n              {showTabsOrSubActions && (\n                <Flex align=\"center\" hidden={collapsed} overflow=\"auto\">\n                  <Box flex={1} marginRight={subActions ? 3 : 0}>\n                    {tabs}\n                  </Box>\n\n                  {subActions}\n                </Flex>\n              )}\n            </Layout>\n\n            {!collapsed && contentAfter}\n          </Card>\n        </LegacyLayerProvider>\n      </Root>\n    </LayerProvider>\n  )\n})\n","import {UnknownIcon} from '@sanity/icons'\nimport {Menu} from '@sanity/ui'\nimport {type MouseEvent, useCallback, useId} from 'react'\nimport {StatusButton, useI18nText, useTranslation} from 'sanity'\nimport {useIntentLink} from 'sanity/router'\n\nimport {Button, MenuButton} from '../../../ui-components'\nimport {type Intent} from '../../structureBuilder'\nimport {PaneMenuButtonItem} from './PaneMenuButtonItem'\nimport {type _PaneMenuGroup, type _PaneMenuItem} from './types'\n\nfunction getDisabledReason(node: _PaneMenuItem) {\n  if (!node.disabled) {\n    return {disabledReason: undefined, ariaLabel: undefined, isDisabled: false}\n  }\n\n  /**\n   * This component supports receiving a `reason: string | react.ReactNode`.\n   * We are casting it as string, to avoid the ts error, as content will be rendered into the tooltip which only accepts string, but it won't crash if it's a ReactNode.\n   * For the aria label, we want to check if it's actually a string, to avoid generating an aria-label with the value `[object Object]`.\n   */\n  const disabledReason =\n    typeof node.disabled === 'object' ? (node.disabled.reason as string) : undefined\n  const ariaLabel =\n    typeof node.disabled === 'object' && typeof node.disabled?.reason === 'string'\n      ? node.disabled.reason\n      : 'This is disabled'\n\n  return {disabledReason, ariaLabel, isDisabled: Boolean(node.disabled)}\n}\nexport interface PaneHeaderActionButtonProps {\n  node: _PaneMenuItem | _PaneMenuGroup\n}\n\nexport function PaneHeaderActionButton(props: PaneHeaderActionButtonProps) {\n  const {node} = props\n\n  if (node.type === 'item') {\n    return <PaneHeaderMenuItemActionButton node={node} />\n  }\n\n  if (node.type === 'group') {\n    return <PaneHeaderMenuGroupActionButton node={node} />\n  }\n\n  console.warn('unknown menu node (expected `type: \"item\" | \"group\"`):', node)\n\n  return null\n}\n\nexport interface PaneHeaderMenuItemActionButtonProps {\n  node: _PaneMenuItem\n}\n\nexport function PaneHeaderMenuItemActionButton(props: PaneHeaderMenuItemActionButtonProps) {\n  const {node} = props\n  const {title} = useI18nText(node)\n  const {t} = useTranslation()\n\n  if (node.intent) {\n    return <PaneHeaderActionIntentButton {...props} intent={node.intent} />\n  }\n\n  const {disabledReason, ariaLabel, isDisabled} = getDisabledReason(node)\n\n  return (\n    <StatusButton\n      disabled={isDisabled}\n      icon={node.icon}\n      // eslint-disable-next-line react/jsx-handler-names\n      onClick={node.onAction}\n      selected={node.selected}\n      tone={node.tone}\n      aria-label={ariaLabel || title || t('status-button.aria-label')}\n      tooltipProps={{\n        hotkeys: !isDisabled && node.hotkey ? node.hotkey.split('+') : undefined,\n        content: isDisabled ? disabledReason : title,\n      }}\n    />\n  )\n}\n\nfunction PaneHeaderActionIntentButton(props: {intent: Intent; node: _PaneMenuItem}) {\n  const {intent, node} = props\n  const intentLink = useIntentLink({intent: intent.type, params: intent.params})\n  const {t} = useTranslation()\n\n  const handleClick = useCallback(\n    (event: MouseEvent<HTMLButtonElement>) => {\n      intentLink.onClick(event)\n      node.onAction()\n    },\n    [intentLink, node],\n  )\n\n  const {disabledReason, ariaLabel, isDisabled} = getDisabledReason(node)\n\n  return (\n    <StatusButton\n      forwardedAs=\"a\"\n      disabled={isDisabled}\n      href={intentLink.href}\n      icon={node.icon}\n      onClick={handleClick}\n      selected={node.selected}\n      tone={node.tone}\n      aria-label={ariaLabel || node.title || t('status-button.aria-label')}\n      tooltipProps={{\n        hotkeys: !isDisabled && node.hotkey ? node.hotkey.split('+') : undefined,\n        content: isDisabled ? disabledReason : node.title,\n        placement: 'bottom',\n        portal: true,\n      }}\n    />\n  )\n}\n\nexport interface PaneHeaderMenuGroupActionButtonProps {\n  node: _PaneMenuGroup\n}\n\nfunction PaneHeaderMenuGroupActionButton(props: PaneHeaderMenuGroupActionButtonProps) {\n  const {node} = props\n  const {title} = useI18nText(node)\n\n  return (\n    <MenuButton\n      button={\n        <Button\n          disabled={!!node.disabled}\n          icon={node.icon ?? UnknownIcon}\n          label={title}\n          mode=\"bleed\"\n          tooltipProps={{content: node.title, portal: true}}\n        />\n      }\n      id={useId()}\n      menu={\n        <Menu>\n          {node.children.map((child, idx) => {\n            return (\n              <PaneMenuButtonItem\n                key={child.key}\n                disabled={Boolean(node.disabled)}\n                isAfterGroup={node.children[idx - 1]?.type === 'group'}\n                node={child}\n              />\n            )\n          })}\n        </Menu>\n      }\n    />\n  )\n}\n","import {Card} from '@sanity/ui'\nimport {styled} from 'styled-components'\n\nexport const Root = styled(Card)`\n  transition: opacity 200ms;\n  position: relative;\n  z-index: 1;\n  padding-left: env(safe-area-inset-left);\n  padding-right: env(safe-area-inset-right);\n  opacity: 0;\n\n  &:not([hidden]) {\n    display: flex;\n  }\n\n  &:not([data-collapsed]) {\n    overflow: auto;\n  }\n\n  &[data-mounted] {\n    opacity: 1;\n  }\n\n  &[data-resizing] {\n    pointer-events: none;\n  }\n`\n","import {PANE_DEFAULT_MIN_WIDTH} from '../constants'\nimport {type PaneConfigOpts, type PaneResizeCache} from '../types'\n\nexport function _calcPaneResize(\n  cache: PaneResizeCache,\n  left: PaneConfigOpts,\n  right: PaneConfigOpts,\n  deltaX: number,\n): {leftFlex: number; leftW: number; rightFlex: number; rightW: number} {\n  const sum = {\n    flex: cache.left.flex + cache.right.flex,\n    width: cache.left.width + cache.right.width,\n  }\n\n  const leftMinWidth = left.minWidth ?? PANE_DEFAULT_MIN_WIDTH\n  const rightMinWidth = right.minWidth ?? PANE_DEFAULT_MIN_WIDTH\n\n  const leftMaxWidth = Math.min(left.maxWidth || Infinity, sum.width - rightMinWidth)\n  const rightMaxWidth = Math.min(right.maxWidth || Infinity, sum.width - leftMinWidth)\n\n  // Get min. delta X\n  let minDeltaX = leftMinWidth - cache.left.width\n  const rightMinDeltaX = cache.right.width - rightMaxWidth\n  if (minDeltaX < rightMinDeltaX) {\n    minDeltaX = rightMinDeltaX\n  }\n\n  // Get max. delta X\n  let maxDeltaX = cache.right.width - rightMinWidth\n  const leftMaxDeltaX = leftMaxWidth - cache.left.width\n  if (maxDeltaX > leftMaxDeltaX) {\n    maxDeltaX = leftMaxDeltaX\n  }\n\n  const _deltaX = Math.min(Math.max(deltaX, minDeltaX), maxDeltaX)\n\n  const leftW = cache.left.width + _deltaX\n  const rightW = cache.right.width - _deltaX\n\n  const leftFlex = (leftW / sum.width) * sum.flex\n  const rightFlex = (rightW / sum.width) * sum.flex\n\n  return {leftFlex, leftW, rightFlex, rightW}\n}\n","/**\n * @internal\n */\nexport function _getDOMPath(rootElement: HTMLElement, el: HTMLElement): number[] {\n  const path: number[] = []\n\n  let e = el\n\n  while (e !== rootElement) {\n    const parentElement = e.parentElement\n\n    if (!parentElement) return path\n\n    const children = Array.from(parentElement.childNodes)\n    const index = children.indexOf(e)\n\n    path.unshift(index)\n\n    if (parentElement === rootElement) {\n      return path\n    }\n\n    e = parentElement\n  }\n\n  return path\n}\n","import {_getDOMPath} from './_getDOMPath'\n\nconst EMPTY_PATH: number[] = []\n\n/**\n * @internal\n */\nexport function _sortElements(rootElement: HTMLElement, elements: HTMLElement[]): void {\n  // Create a map containing the DOM path of each pane element.\n  // The DOM path is relative to the `rootElement`, and is used in the next step for sorting.\n  const map = new WeakMap<HTMLElement, number[]>()\n\n  for (const element of elements) {\n    map.set(element, _getDOMPath(rootElement, element))\n  }\n\n  const _sortByElementPath = (a: HTMLElement, b: HTMLElement) => {\n    const _a = map.get(a) || EMPTY_PATH\n    const _b = map.get(b) || EMPTY_PATH\n\n    const len = Math.max(_a.length, _b.length)\n\n    // Loop until there are different indexes\n    for (let i = 0; i < len; i += 1) {\n      const aIndex = _a[i] || -1\n      const bIndex = _b[i] || -1\n\n      if (aIndex !== bIndex) {\n        return aIndex - bIndex\n      }\n    }\n\n    return 0\n  }\n\n  elements.sort(_sortByElementPath)\n}\n","import {PANE_COLLAPSED_WIDTH, PANE_DEFAULT_MIN_WIDTH} from './constants'\nimport {_calcPaneResize, _sortElements} from './helpers'\nimport {\n  type PaneConfigOpts,\n  type PaneData,\n  type PaneResizeCache,\n  type PaneResizeData,\n} from './types'\n\nexport interface PaneLayoutState {\n  expandedElement: HTMLElement | null\n  panes: PaneData[]\n  resizing: boolean\n}\n\nexport type PaneLayoutStateObserver = (state: PaneLayoutState) => void\n\nexport interface PaneLayoutController {\n  collapse: (element: HTMLElement) => void\n  expand: (element: HTMLElement) => void\n  mount: (element: HTMLElement, options: PaneConfigOpts) => () => void\n  resize: (type: 'start' | 'move' | 'end', leftElement: HTMLElement, deltaX: number) => void\n  setRootElement: (nextRootElement: HTMLElement | null) => void\n  setRootWidth: (nextRootWidth: number) => void\n  subscribe: (observer: PaneLayoutStateObserver) => () => void\n}\n\nexport function createPaneLayoutController(): PaneLayoutController {\n  const observers: PaneLayoutStateObserver[] = []\n  const elements: HTMLElement[] = []\n  const optionsMap = new WeakMap<HTMLElement, PaneConfigOpts & {original: PaneConfigOpts}>()\n  const userCollapsedElementSet = new Set<HTMLElement>()\n  const cache: Partial<PaneResizeCache> = {}\n\n  // Mutable internal state\n  let rootElement: HTMLElement | null = null\n  let rootWidth = 0\n  let expandedElement: HTMLElement | null = null\n  let resizeDataMap = new Map<HTMLElement, PaneResizeData>()\n  let resizing = false\n\n  function collapse(element: HTMLElement) {\n    userCollapsedElementSet.add(element)\n\n    if (expandedElement === element) {\n      expandedElement = null\n    }\n\n    _notifyObservers()\n  }\n\n  function expand(element: HTMLElement) {\n    userCollapsedElementSet.delete(element)\n\n    expandedElement = element\n\n    _notifyObservers()\n  }\n\n  function mount(element: HTMLElement, options: PaneConfigOpts) {\n    optionsMap.set(element, {...options, original: options})\n\n    elements.push(element)\n\n    if (rootElement) {\n      _sortElements(rootElement, elements)\n    }\n\n    expand(element)\n\n    return () => {\n      const idx = elements.indexOf(element)\n\n      if (idx > -1) {\n        elements.splice(idx, 1)\n      }\n\n      optionsMap.delete(element)\n\n      _notifyObservers()\n    }\n  }\n\n  function resize(type: 'start' | 'move' | 'end', leftElement: HTMLElement, deltaX: number) {\n    const leftIndex = elements.indexOf(leftElement)\n    const leftOptions = optionsMap.get(leftElement)\n\n    if (!leftOptions) return\n\n    const rightElement = elements[leftIndex + 1]\n    const rightOptions = optionsMap.get(rightElement)\n\n    if (!rightOptions) return\n\n    if (type === 'start') {\n      resizing = true\n\n      cache.left = {\n        element: leftElement,\n        flex: leftOptions.flex || 1,\n        width: leftElement.offsetWidth,\n      }\n\n      cache.right = {\n        element: rightElement,\n        flex: rightOptions.flex || 1,\n        width: rightElement.offsetWidth,\n      }\n\n      _notifyObservers()\n    }\n\n    if (type === 'move' && cache.left && cache.right) {\n      resizeDataMap = new Map<HTMLElement, PaneResizeData>()\n\n      const {leftW, rightW, leftFlex, rightFlex} = _calcPaneResize(\n        cache as PaneResizeCache,\n        leftOptions,\n        rightOptions,\n        deltaX,\n      )\n\n      // update resize cache\n      resizeDataMap.set(leftElement, {flex: leftFlex, width: leftW})\n      resizeDataMap.set(rightElement, {flex: rightFlex, width: rightW})\n\n      _notifyObservers()\n    }\n\n    if (type === 'end') {\n      resizing = false\n\n      const leftResizeData = resizeDataMap.get(leftElement)\n      const rightResizeData = resizeDataMap.get(rightElement)\n\n      // Update left options\n      optionsMap.set(leftElement, {\n        ...leftOptions,\n        currentMinWidth: 0,\n        currentMaxWidth: leftOptions.maxWidth ?? Infinity,\n        flex: leftResizeData?.flex ?? leftOptions.flex,\n      })\n\n      // Update right options\n      optionsMap.set(rightElement, {\n        ...rightOptions,\n        currentMinWidth: 0,\n        currentMaxWidth: leftOptions.maxWidth ?? Infinity,\n        flex: rightResizeData?.flex ?? rightOptions.flex,\n      })\n\n      // Reset resize data map\n      resizeDataMap = new Map()\n\n      // Reset cache\n      delete cache.left\n      delete cache.right\n\n      _notifyObservers()\n    }\n  }\n\n  function setRootElement(nextRootElement: HTMLElement | null) {\n    rootElement = nextRootElement\n  }\n\n  function setRootWidth(nextRootWidth: number) {\n    rootWidth = nextRootWidth\n    _notifyObservers()\n  }\n\n  function subscribe(observer: PaneLayoutStateObserver) {\n    observers.push(observer)\n\n    return () => {\n      const idx = observers.push(observer)\n\n      if (idx > -1) {\n        observers.splice(idx, 1)\n      }\n    }\n  }\n\n  return {collapse, expand, mount, resize, setRootElement, setRootWidth, subscribe}\n\n  function _notifyObservers() {\n    if (!rootWidth) return\n\n    // Create a reversed array of pane elements, so we can loop over them backwards.\n    // Place the expanded element first (so it has the least chance of being collapsed).\n    const _elements: HTMLElement[] = []\n    for (const element of elements) {\n      if (element !== expandedElement) {\n        _elements.unshift(element)\n      }\n    }\n    if (expandedElement) {\n      _elements.unshift(expandedElement)\n    }\n\n    const dataMap = new WeakMap<HTMLElement, PaneData>()\n    const len = _elements.length\n    const lastElement = _elements[0]\n    const collapsedWidth = (len - 1) * PANE_COLLAPSED_WIDTH\n\n    let remaingWidth = rootWidth - collapsedWidth\n\n    for (const element of _elements) {\n      const options = optionsMap.get(element)\n\n      if (!options) {\n        continue\n      }\n\n      const minWidth = options.currentMinWidth || options.minWidth || PANE_DEFAULT_MIN_WIDTH\n      const isLast = element === lastElement\n\n      // A pane is collapsed if:\n      // - it’s explictly collapsed by the user\n      const userCollapsed = userCollapsedElementSet.has(element)\n      // - it’s minimum width is larger than the remaining width\n      const sizeCollapsed = minWidth > remaingWidth\n      // - if the element is not the last (expanded pane)\n      const collapsed = isLast ? false : userCollapsed || sizeCollapsed\n\n      const resizeData = resizeDataMap.get(element)\n\n      // Collect pane data\n      dataMap.set(element, {\n        element: element,\n        collapsed: collapsed,\n        currentMinWidth: resizeData?.width ?? options.currentMinWidth,\n        currentMaxWidth: resizeData?.width ?? options.currentMaxWidth,\n        flex: resizeData?.flex ?? options.flex ?? 1,\n      })\n\n      // Update remaining width\n      if (collapsed) {\n        remaingWidth -= PANE_COLLAPSED_WIDTH\n      } else {\n        remaingWidth -= minWidth - PANE_COLLAPSED_WIDTH\n      }\n    }\n\n    const panes: PaneData[] = []\n\n    for (const element of elements) {\n      const data = dataMap.get(element)\n\n      if (data) panes.push(data)\n    }\n\n    for (const observer of observers) {\n      observer({\n        expandedElement: expandedElement || elements[elements.length - 1] || null,\n        panes,\n        resizing,\n      })\n    }\n  }\n}\n","import {type CardProps, useElementRect} from '@sanity/ui'\nimport {type HTMLProps, useEffect, useMemo, useState} from 'react'\nimport {PaneLayoutContext} from 'sanity/_singletons'\n\nimport {Root} from './PaneLayout.styles'\nimport {createPaneLayoutController, type PaneLayoutState} from './paneLayoutController'\nimport {type PaneLayoutContextValue} from './types'\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport interface PaneLayoutProps {\n  minWidth?: number\n  onCollapse?: () => void\n  onExpand?: () => void\n}\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport function PaneLayout(\n  props: PaneLayoutProps &\n    CardProps &\n    Omit<HTMLProps<HTMLDivElement>, 'as' | 'height' | 'ref' | 'wrap'>,\n) {\n  const {children, minWidth, onCollapse, onExpand, ...restProps} = props\n  const [controller] = useState(() => createPaneLayoutController())\n  const [rootElement, setRootElement] = useState<HTMLDivElement | null>(null)\n  const rootRect = useElementRect(rootElement)\n  const width = rootRect?.width || 0\n  const collapsed = width === undefined || !minWidth ? undefined : width < minWidth\n  const [state, setState] = useState<PaneLayoutState>({\n    expandedElement: null,\n    panes: [],\n    resizing: false,\n  })\n\n  // Set root element\n  useEffect(() => controller.setRootElement(rootElement), [controller, rootElement])\n\n  // Set root size\n  useEffect(() => controller.setRootWidth(width), [controller, width])\n\n  // Subscribe to state changes\n  useEffect(() => controller.subscribe(setState), [controller])\n\n  // Call the `onCollapse` and `onExpand` callbacks as the `collapsed` boolean changes\n  useEffect(() => {\n    if (collapsed === undefined) return\n    if (collapsed && onCollapse) onCollapse()\n    if (!collapsed && onExpand) onExpand()\n  }, [collapsed, onCollapse, onExpand])\n\n  // This is the context value that gives each pane the information they need\n  const paneLayout: PaneLayoutContextValue = useMemo(\n    () => ({\n      collapse: controller.collapse,\n      collapsed,\n      expand: controller.expand,\n      expandedElement: state.expandedElement,\n      mount: controller.mount,\n      panes: state.panes,\n      resize: controller.resize,\n      resizing: state.resizing,\n    }),\n    [collapsed, controller, state.expandedElement, state.panes, state.resizing],\n  )\n\n  return (\n    <PaneLayoutContext.Provider value={paneLayout}>\n      <Root\n        data-ui=\"PaneLayout\"\n        {...restProps}\n        data-collapsed={collapsed ? '' : undefined}\n        // The `data-resizing` attribute is used to improve cursor behavior\n        data-resizing={state.resizing ? '' : undefined}\n        // The `data-mounted` attribute is used to fade in the layout and prevent flash of\n        // non-collapsed panes\n        data-mounted={width ? '' : undefined}\n        ref={setRootElement}\n      >\n        {children}\n      </Root>\n    </PaneLayoutContext.Provider>\n  )\n}\n","import {Box, type CardTone} from '@sanity/ui'\n\nimport {Pane, PaneContent, PaneHeader} from '../../components/pane'\n\n/**\n * @internal\n */\nexport function ErrorPane(props: {\n  children?: React.ReactNode\n  currentMinWidth?: number\n  flex?: number\n  minWidth?: number\n  paneKey: string\n  title?: React.ReactNode\n  tone?: CardTone\n}) {\n  const {\n    children,\n    currentMinWidth,\n    flex,\n    minWidth,\n    paneKey,\n    title = 'Error',\n    tone = 'critical',\n  } = props\n\n  return (\n    <Pane\n      currentMinWidth={currentMinWidth}\n      flex={flex}\n      id={paneKey}\n      minWidth={minWidth}\n      tone={tone}\n    >\n      <PaneHeader title={title} />\n      <PaneContent overflow=\"auto\">\n        <Box paddingX={4} paddingY={5}>\n          {children}\n        </Box>\n      </PaneContent>\n    </Pane>\n  )\n}\n","import {useEffect, useState} from 'react'\n\nexport function Delay({\n  children,\n  ms = 0,\n}: {\n  children?: React.JSX.Element | (() => React.JSX.Element)\n  ms?: number\n}): React.JSX.Element {\n  const [ready, setReady] = useState(ms <= 0)\n\n  useEffect(() => {\n    if (ms <= 0) {\n      return undefined\n    }\n\n    const timeoutId = setTimeout(() => setReady(true), ms)\n\n    return () => {\n      clearTimeout(timeoutId)\n    }\n  }, [ms])\n\n  if (!ready || !children) {\n    return <></>\n  }\n\n  return typeof children === 'function' ? children() : children\n}\n","import {merge, type Observable, of} from 'rxjs'\nimport {delay, mapTo} from 'rxjs/operators'\nimport {isDev} from 'sanity'\n\n/**\n * @internal\n */\nexport type WaitMessage = {messageKey: string} | {message: string}\n\n/**\n * @internal\n */\nexport function getWaitMessages(path: string[]): Observable<WaitMessage> {\n  const thresholds: (WaitMessage & {ms: number})[] = [\n    {ms: 300, messageKey: 'panes.resolving.default-message'},\n    {ms: 5000, messageKey: 'panes.resolving.slow-resolve-message'},\n  ]\n\n  if (isDev) {\n    const message = [\n      'Check console for errors?',\n      'Is your observable/promise resolving?',\n      path.length > 0 ? `Structure path: ${path.join(' ➝ ')}` : '',\n    ]\n\n    thresholds.push({\n      ms: 10000,\n      message: message.join('\\n'),\n    })\n  }\n\n  const src = of(null)\n\n  return merge(\n    ...thresholds.map((threshold) =>\n      src.pipe(\n        mapTo(\n          'messageKey' in threshold\n            ? {messageKey: threshold.messageKey}\n            : {message: threshold.message},\n        ),\n        delay(threshold.ms),\n      ),\n    ),\n  )\n}\n","import {_raf2, type CardTone, Flex} from '@sanity/ui'\nimport {memo, useEffect, useMemo, useState} from 'react'\nimport {type Observable} from 'rxjs'\nimport {LoadingBlock, useTranslation} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Delay} from '../../components/Delay'\nimport {Pane, PaneContent} from '../../components/pane'\nimport {structureLocaleNamespace} from '../../i18n'\nimport {getWaitMessages, type WaitMessage} from './getWaitMessages'\n\ninterface LoadingPaneProps {\n  delay?: number\n  flex?: number\n  message?: string | ((p: string[]) => string | Observable<WaitMessage>)\n  minWidth?: number\n  paneKey: string\n  path?: string\n  selected?: boolean\n  title?: string\n  tone?: CardTone\n}\n\nconst DELAY = false\nconst DEFAULT_MESSAGE_KEY = 'panes.resolving.default-message'\n\nconst Content = styled(Flex)`\n  opacity: 0;\n  transition: opacity 200ms;\n\n  &[data-mounted] {\n    opacity: 1;\n  }\n`\n\n/**\n * @internal\n */\nexport const LoadingPane = memo((props: LoadingPaneProps) => {\n  const {\n    delay = 300,\n    flex,\n    message: messageProp = getWaitMessages,\n    minWidth,\n    paneKey,\n    path,\n    selected,\n    title,\n    tone,\n  } = props\n\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const resolvedMessage = useMemo(() => {\n    if (typeof messageProp === 'function') {\n      return messageProp(path ? path.split(';') : [])\n    }\n\n    return messageProp\n  }, [messageProp, path])\n\n  const [currentMessage, setCurrentMessage] = useState<string | null>(() => {\n    if (typeof resolvedMessage === 'string') return resolvedMessage\n    return t(DEFAULT_MESSAGE_KEY)\n  })\n\n  useEffect(() => {\n    if (typeof resolvedMessage !== 'object') return undefined\n    if (typeof resolvedMessage.subscribe !== 'function') return undefined\n\n    const sub = resolvedMessage.subscribe((message) => {\n      setCurrentMessage('messageKey' in message ? t(message.messageKey) : message.message)\n    })\n\n    return () => sub.unsubscribe()\n  }, [resolvedMessage, t])\n\n  const [contentElement, setContentElement] = useState<HTMLDivElement | null>(null)\n  const [mounted, setMounted] = useState(false)\n\n  useEffect(() => {\n    if (!contentElement) return undefined\n    return _raf2(() => setMounted(true))\n  }, [contentElement])\n\n  const content = (\n    <Content\n      align=\"center\"\n      data-mounted={mounted ? '' : undefined}\n      direction=\"column\"\n      height=\"fill\"\n      justify=\"center\"\n      ref={setContentElement}\n    >\n      <LoadingBlock showText title={title || currentMessage} />\n    </Content>\n  )\n\n  return (\n    <Pane flex={flex} id={paneKey} minWidth={minWidth} selected={selected} tone={tone}>\n      <PaneContent>{DELAY ? <Delay ms={delay}>{content}</Delay> : content}</PaneContent>\n    </Pane>\n  )\n})\n\nLoadingPane.displayName = 'Memo(LoadingPane)'\n","import {useContext} from 'react'\nimport {DocumentPaneContext} from 'sanity/_singletons'\n\nimport {type DocumentPaneContextValue} from './DocumentPaneContext'\n\n/** @internal */\nexport function useDocumentPane(): DocumentPaneContextValue {\n  const documentPane = useContext(DocumentPaneContext)\n\n  if (!documentPane) {\n    throw new Error('DocumentPane: missing context value')\n  }\n\n  return documentPane\n}\n","import {useCallback, useLayoutEffect, useRef} from 'react'\nimport {\n  COMMENTS_INSPECTOR_NAME,\n  CommentsEnabledProvider,\n  CommentsProvider,\n  useCommentsEnabled,\n  usePerspective,\n  useStudioUrl,\n} from 'sanity'\nimport {useRouter} from 'sanity/router'\n\nimport {usePaneRouter} from '../../../components'\nimport {useDocumentPane} from '../useDocumentPane'\n\ninterface CommentsWrapperProps {\n  children: React.ReactNode\n  documentId: string\n  documentType: string\n}\n\n/**\n * @internal\n * A wrapper that conditionally wraps the document layout in a comments provider\n * if the feature is enabled for the project and the current document.\n */\nexport function CommentsWrapper(props: CommentsWrapperProps) {\n  const {children, documentId, documentType} = props\n\n  return (\n    <CommentsEnabledProvider documentId={documentId} documentType={documentType}>\n      <CommentsProviderWrapper documentId={documentId} documentType={documentType}>\n        {children}\n      </CommentsProviderWrapper>\n    </CommentsEnabledProvider>\n  )\n}\n\nfunction CommentsProviderWrapper(props: CommentsWrapperProps) {\n  const {children, documentId, documentType} = props\n\n  const {enabled} = useCommentsEnabled()\n  const {connectionState, onPathOpen, inspector, openInspector} = useDocumentPane()\n  const {selectedReleaseId} = usePerspective()\n  const {params, setParams} = usePaneRouter()\n  const {studioUrl} = useStudioUrl(window.location.origin)\n  const {resolveIntentLink} = useRouter()\n\n  const selectedCommentId = params?.comment\n  const paramsRef = useRef(params)\n\n  useLayoutEffect(() => {\n    paramsRef.current = params\n  }, [params])\n\n  const getCommentLink = useCallback(\n    (commentId: string) => {\n      const intentLink = resolveIntentLink('edit', {\n        id: documentId,\n        type: documentType,\n        inspect: COMMENTS_INSPECTOR_NAME,\n        comment: commentId,\n      })\n      return `${studioUrl}${intentLink}`\n    },\n    [documentId, documentType, resolveIntentLink, studioUrl],\n  )\n\n  const handleClearSelectedComment = useCallback(() => {\n    setParams({...paramsRef.current, comment: undefined})\n  }, [setParams])\n\n  const handleOpenCommentsInspector = useCallback(() => {\n    if (inspector?.name === COMMENTS_INSPECTOR_NAME) return\n\n    openInspector(COMMENTS_INSPECTOR_NAME)\n  }, [inspector?.name, openInspector])\n\n  // If comments are not enabled, render the default document layout\n  if (!enabled) {\n    return <>{children}</>\n  }\n\n  return (\n    <CommentsProvider\n      documentId={documentId}\n      documentType={documentType}\n      getCommentLink={getCommentLink}\n      isCommentsOpen={inspector?.name === COMMENTS_INSPECTOR_NAME}\n      isConnecting={connectionState === 'connecting'}\n      onClearSelectedComment={handleClearSelectedComment}\n      onCommentsOpen={handleOpenCommentsInspector}\n      onPathOpen={onPathOpen}\n      selectedCommentId={selectedCommentId}\n      sortOrder=\"desc\"\n      type=\"field\"\n      releaseId={selectedReleaseId}\n    >\n      {children}\n    </CommentsProvider>\n  )\n}\n","import {useContext} from 'react'\nimport {PaneRouterContext} from 'sanity/_singletons'\n\nimport {type PaneRouterContextValue} from './types'\n\n/**\n *\n * @hidden\n * @beta\n */\nexport function usePaneRouter(): PaneRouterContextValue {\n  return useContext(PaneRouterContext)\n}\n","import {useMemo} from 'react'\nimport {\n  getReleaseIdFromReleaseDocumentId,\n  getVersionFromId,\n  type ReleaseDocument,\n  useActiveReleases,\n  useArchivedReleases,\n  useDocumentVersions,\n  usePerspective,\n} from 'sanity'\n\nimport {usePaneRouter} from '../components/paneRouter/usePaneRouter'\nimport {type DocumentPaneContextValue} from '../panes/document/DocumentPaneContext'\n\ntype FilterReleases = {\n  notCurrentReleases: ReleaseDocument[]\n  currentReleases: ReleaseDocument[]\n  inCreation: ReleaseDocument | null\n}\n\n/**\n * @internal\n */\nexport function useFilteredReleases({\n  displayed,\n  documentId,\n}: Pick<DocumentPaneContextValue, 'displayed' | 'documentId'>): FilterReleases {\n  const {selectedReleaseId} = usePerspective()\n  const {data: releases} = useActiveReleases()\n  const {data: archivedReleases} = useArchivedReleases()\n  const {data: documentVersions} = useDocumentVersions({documentId})\n  const isCreatingDocument = displayed && !displayed._createdAt\n  const {params} = usePaneRouter()\n\n  return useMemo(() => {\n    if (!documentVersions) return {notCurrentReleases: [], currentReleases: [], inCreation: null}\n    // Gets the releases ids from the document versions, it means, the releases that the document belongs to\n    const releasesIds = documentVersions.map((id) => getVersionFromId(id))\n    const activeReleases = releases.reduce(\n      (acc: FilterReleases, release) => {\n        const versionDocExists = releasesIds.includes(\n          getReleaseIdFromReleaseDocumentId(release._id),\n        )\n        const releaseId = getReleaseIdFromReleaseDocumentId(release._id)\n        const isCreatingThisVersion =\n          isCreatingDocument &&\n          releaseId === getVersionFromId(displayed._id || '') &&\n          releaseId === selectedReleaseId\n\n        if (isCreatingThisVersion) {\n          acc.inCreation = release\n        } else if (versionDocExists) {\n          acc.currentReleases.push(release)\n        } else {\n          acc.notCurrentReleases.push(release)\n        }\n        return acc\n      },\n      {notCurrentReleases: [], currentReleases: [], inCreation: null},\n    )\n\n    // without historyVersion, version is not in an archived release\n    if (!params?.historyVersion) return activeReleases\n\n    const archivedRelease = archivedReleases.find(\n      (r) => getReleaseIdFromReleaseDocumentId(r._id) === params?.historyVersion,\n    )\n\n    // only for explicitly archived releases; published releases use published perspective\n    if (archivedRelease?.state === 'archived') {\n      activeReleases.currentReleases.push(archivedRelease)\n    }\n\n    return activeReleases\n  }, [\n    archivedReleases,\n    isCreatingDocument,\n    displayed?._id,\n    documentVersions,\n    params?.historyVersion,\n    releases,\n    selectedReleaseId,\n  ])\n}\n","import {useMemo} from 'react'\nimport {getReleaseIdFromReleaseDocumentId, getVersionId, useWorkspace} from 'sanity'\n\nimport {type DocumentPaneContextValue} from '../panes/document/DocumentPaneContext'\nimport {useFilteredReleases} from './useFilteredReleases'\n\n/**\n * @internal\n */\nexport interface DocumentIdStack {\n  /**\n   * The position of the displayed document within the stack.\n   */\n  position: number\n  /**\n   * The id of the previous document in the stack.\n   */\n  previousId?: string\n  /**\n   * The id of the next document in the stack.\n   */\n  nextId?: string\n  /**\n   * An array of document ids comprising the stack the displayed document is a member of, ordered per\n   * release layering.\n   */\n  stack: string[]\n}\n\n/**\n * Get a stack of document ids representing existing versions of the provided document with release\n * layering applied.\n *\n * @internal\n */\nexport function useDocumentIdStack({\n  displayed,\n  documentId,\n  editState,\n}: Pick<DocumentPaneContextValue, 'displayed' | 'documentId' | 'editState'>): DocumentIdStack {\n  const {\n    document: {\n      drafts: {enabled: isDraftModelEnabled},\n    },\n  } = useWorkspace()\n\n  const filteredReleases = useFilteredReleases({displayed, documentId})\n\n  const systemStack = [\n    editState?.published?._id,\n    isDraftModelEnabled ? editState?.draft?._id : [],\n  ].flat()\n\n  const releaseStack = filteredReleases.currentReleases.map(\n    (release) =>\n      editState?.id && getVersionId(editState.id, getReleaseIdFromReleaseDocumentId(release._id)),\n  )\n\n  const stack = systemStack.concat(releaseStack).filter((id) => typeof id === 'string')\n\n  const position = useMemo(\n    () => stack.findIndex((id) => id === displayed?._id),\n    [displayed?._id, stack],\n  )\n\n  const previousId = useMemo(() => stack[position - 1] ?? undefined, [position, stack])\n  const nextId = useMemo(() => stack[position + 1] ?? undefined, [position, stack])\n\n  return {\n    position,\n    previousId,\n    nextId,\n    stack,\n  }\n}\n","import {useContext} from 'react'\nimport {StructureToolContext} from 'sanity/_singletons'\n\nimport {type StructureToolContextValue} from './types'\n\n/** @internal */\nexport function useStructureTool(): StructureToolContextValue {\n  const structureTool = useContext(StructureToolContext)\n  if (!structureTool) throw new Error(`StructureTool: missing context value`)\n\n  return structureTool\n}\n","import {type PaneRouterContextValue} from '../../components'\nimport {type PaneMenuItemGroup} from '../../types'\n\nexport const DOCUMENT_PANEL_MIN_WIDTH = 320\nexport const DOCUMENT_PANEL_INITIAL_MIN_WIDTH = 600\n\nexport const DOCUMENT_INSPECTOR_MIN_WIDTH = 320\nexport const DOCUMENT_INSPECTOR_MAX_WIDTH = 540\n\nexport const EMPTY_PARAMS: NonNullable<PaneRouterContextValue['params']> = {}\n\nexport const INSPECT_ACTION_PREFIX = 'inspect:'\n\nexport const DEFAULT_MENU_ITEM_GROUPS: PaneMenuItemGroup[] = [{id: 'inspectors'}, {id: 'links'}]\n\n// inspectors\nexport const HISTORY_INSPECTOR_NAME = 'sanity/structure/history'\nexport const VALIDATION_INSPECTOR_NAME = 'sanity/structure/validation'\n","import {memo, useCallback, useEffect, useMemo, useState} from 'react'\nimport {type DocumentInspector, type DocumentInspectorMenuItem, useUnique} from 'sanity'\n\ninterface DocumentInspectorMenuItemsResolverProps {\n  documentId: string\n  documentType: string\n  inspectors: DocumentInspector[]\n  onMenuItems: (items: DocumentInspectorMenuItem[]) => void\n}\n\n// The menu item in a document inspector are resolved in a React hook (`useMenuItem`).\n// This means that the menu item needs to be resolved in a React component (in accordance with the rules of hooks).\n// In this component, we map over the configured inspectors and render a `InspectorMenuItem` for each.\n// The `InspectorMenuItem` will resolve the menu item in a React hook and call the `setMenuItem` callback\n// with the resolved menu item and the index of the inspector.\n// Finally, we call the `onMenuItems` callback with the resolved menu items.\nexport function DocumentInspectorMenuItemsResolver(props: DocumentInspectorMenuItemsResolverProps) {\n  const {documentId, documentType, inspectors, onMenuItems} = props\n\n  const len = inspectors.length\n  const [menuItems, setMenuItems] = useState<DocumentInspectorMenuItem[]>(() =>\n    Array.from(new Array(len)),\n  )\n\n  useEffect(() => {\n    if (menuItems.length !== len) {\n      const newFieldActions = Array.from(new Array(len))\n\n      for (let i = 0; i < len; i++) {\n        newFieldActions[i] = menuItems[i]\n      }\n\n      setMenuItems(newFieldActions)\n    }\n  }, [len, menuItems])\n\n  const setMenuItem = useCallback((index: number, node: DocumentInspectorMenuItem) => {\n    setMenuItems((prev) => {\n      const next = [...prev]\n      next[index] = node\n      return next\n    })\n  }, [])\n\n  useEffect(() => {\n    onMenuItems(menuItems.filter(Boolean))\n  }, [menuItems, onMenuItems])\n\n  const InspectorMenuItems = useMemo(() => {\n    return inspectors.map((inspector, index) => {\n      return inspector.useMenuItem\n        ? ([\n            defineInspectorMenuItemComponent({\n              documentId,\n              documentType,\n              index,\n              setMenuItem,\n              useMenuItem: inspector.useMenuItem,\n            }),\n            inspector.name,\n          ] as const)\n        : ([() => null, ''] as const)\n    })\n  }, [documentId, documentType, inspectors, setMenuItem])\n\n  return (\n    <>\n      {InspectorMenuItems.map(([InspectorMenuItem, key]) => key && <InspectorMenuItem key={key} />)}\n    </>\n  )\n}\nDocumentInspectorMenuItemsResolver.displayName = 'DocumentInspectorMenuItemsResolver'\n\nfunction defineInspectorMenuItemComponent({\n  documentId,\n  documentType,\n  index,\n  setMenuItem,\n  useMenuItem,\n}: {\n  documentId: string\n  documentType: string\n  index: number\n  setMenuItem: (index: number, node: DocumentInspectorMenuItem) => void\n  useMenuItem: NonNullable<DocumentInspector['useMenuItem']>\n}) {\n  return memo(function InspectorMenuItem() {\n    const menuItem = useMenuItem({\n      documentId,\n      documentType,\n    })\n    const node = useUnique(menuItem)\n\n    useEffect(() => {\n      setMenuItem(index, node)\n    }, [node])\n\n    return null\n  })\n}\n","import {useMemo} from 'react'\nimport {\n  prepareForPreview,\n  unstable_useValuePreview as useValuePreview,\n  useTranslation,\n} from 'sanity'\n\nimport {structureLocaleNamespace} from '../../i18n'\nimport {useDocumentPane} from './useDocumentPane'\n\n/**\n * useDocumentTitle hook return type.\n *\n * @beta\n * @hidden\n */\nexport interface UseDocumentTitle {\n  error?: string\n  title?: string\n}\n\n/**\n * React hook that returns the document title for the current document in the document pane.\n *\n * @beta\n * @hidden\n *\n * @returns The document title or error. See {@link UseDocumentTitle}\n */\nexport function useDocumentTitle(): UseDocumentTitle {\n  const {connectionState, schemaType, editState, isDeleted, lastRevisionDocument} =\n    useDocumentPane()\n  const {t} = useTranslation(structureLocaleNamespace)\n  // follows the same logic as the StructureTitle component\n  const documentValue = useMemo(() => {\n    return isDeleted\n      ? lastRevisionDocument\n      : editState?.version || editState?.draft || editState?.published\n  }, [isDeleted, lastRevisionDocument, editState])\n  const subscribed = Boolean(documentValue)\n\n  // For deleted documents, we need to handle the preview differently since useValuePreview\n  // will return null for deleted documents. Instead, we directly prepare the preview\n  // from the lastRevisionDocument data.\n  const deletedDocumentPreview = useMemo(() => {\n    if (isDeleted && lastRevisionDocument && schemaType) {\n      try {\n        const prepared = prepareForPreview(lastRevisionDocument, schemaType)\n        return prepared\n      } catch (error) {\n        console.warn('Failed to prepare preview for deleted document:', error)\n        return null\n      }\n    }\n    return null\n  }, [isDeleted, lastRevisionDocument, schemaType])\n\n  const {error, value} = useValuePreview({\n    // disable useValuePreview for deleted documents\n    enabled: subscribed && !isDeleted,\n    schemaType,\n    value: documentValue,\n  })\n\n  if (connectionState === 'connecting' && !subscribed) {\n    return {error: undefined, title: undefined}\n  }\n\n  // For deleted documents, use the directly prepared preview\n  if (isDeleted && deletedDocumentPreview) {\n    return {error: undefined, title: deletedDocumentPreview.title}\n  }\n\n  if (!value && !isDeleted) {\n    return {\n      error: undefined,\n      title: t('panes.document-header-title.new.text', {\n        schemaType: schemaType?.title || schemaType?.name,\n      }),\n    }\n  }\n\n  if (error) {\n    return {\n      error: t('panes.document-list-pane.error.text', {error: error.message}),\n      title: undefined,\n    }\n  }\n\n  return {error: undefined, title: value?.title}\n}\n","import {useToast} from '@sanity/ui'\nimport {memo, useEffect, useMemo, useRef} from 'react'\nimport {Translate, useDocumentOperationEvent, useTranslation} from 'sanity'\n\nimport {usePaneRouter} from '../../components'\nimport {structureLocaleNamespace} from '../../i18n'\nimport {useDocumentPane} from './useDocumentPane'\nimport {useDocumentTitle} from './useDocumentTitle'\n\nconst IGNORE_OPS = ['patch', 'commit']\n\nexport const DocumentOperationResults = memo(function DocumentOperationResults() {\n  const {push: pushToast} = useToast()\n  const {documentId, documentType, value: documentPaneValue} = useDocumentPane()\n  const documentTitleInfo = useDocumentTitle()\n  const titleError = documentTitleInfo.error\n  const event: any = useDocumentOperationEvent(documentId, documentType)\n  const prevEvent = useRef(event)\n  const paneRouter = usePaneRouter()\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const title = useMemo(() => {\n    // If title isn't set from document preview, use the title from the document pane value\n    if (\n      !documentTitleInfo.title &&\n      !titleError &&\n      !IGNORE_OPS.includes(event?.op) &&\n      typeof documentPaneValue.title === 'string' &&\n      event?.type === 'success'\n    ) {\n      return documentPaneValue.title\n    }\n    return documentTitleInfo.title\n  }, [documentTitleInfo.title, titleError, event, documentPaneValue.title])\n  //Truncate the document title and add \"...\" if it is over 25 characters\n  const documentTitleBase = title || t('panes.document-operation-results.operation-undefined-title')\n  const documentTitle =\n    documentTitleBase.length > 25 ? `${documentTitleBase.slice(0, 25)}...` : documentTitleBase\n\n  useEffect(() => {\n    if (!event || event === prevEvent.current) return\n\n    let cleanupId: number | undefined\n\n    if (event.type === 'error') {\n      pushToast({\n        closable: true,\n        duration: 30000, // 30s\n        status: 'error',\n        title: t('panes.document-operation-results.operation-error', {context: event.op}),\n        description: (\n          <details>\n            <summary>{t('panes.document-operation-results.error.summary.title')}</summary>\n            {event.error.message}\n          </details>\n        ),\n      })\n    }\n\n    if (event.type === 'success' && !IGNORE_OPS.includes(event.op)) {\n      pushToast({\n        closable: true,\n        status: 'success',\n        title: (\n          <Translate\n            context={event.op}\n            i18nKey=\"panes.document-operation-results.operation-success\"\n            t={t}\n            values={{\n              op: event.op,\n              title: documentTitle,\n            }}\n            components={{\n              Strong: 'strong',\n            }}\n          />\n        ),\n      })\n    }\n\n    /**\n     * If the document was deleted successfully, close the pane.\n     */\n    if (event.type === 'success' && event.op === 'delete') {\n      // Wait until next tick to allow deletion toasts to appear first\n      cleanupId = setTimeout(() => paneRouter.closeCurrentAndAfter(), 0) as any as number\n    }\n\n    prevEvent.current = event\n\n    // eslint-disable-next-line consistent-return\n    return () => clearTimeout(cleanupId)\n  }, [event, paneRouter, pushToast, t, documentTitle])\n\n  return null\n})\n","import {WarningOutlineIcon} from '@sanity/icons'\nimport {type PreviewValue, type SanityDocument, type SchemaType} from '@sanity/types'\nimport {assignWith} from 'lodash'\nimport {type ReactNode} from 'react'\nimport {combineLatest, type Observable, of} from 'rxjs'\nimport {map, startWith} from 'rxjs/operators'\nimport {type DocumentPreviewStore, getDraftId, getPublishedId} from 'sanity'\n\nimport {type PaneItemPreviewState} from './types'\n\nexport const isLiveEditEnabled = (schemaType: Pick<SchemaType, 'liveEdit'>) =>\n  schemaType.liveEdit === true\n\nexport const getMissingDocumentFallback = (item: SanityDocument) => ({\n  title: <em>{item.title ? String(item.title) : 'Missing document'}</em>,\n  subtitle: <em>{item.title ? `Missing document ID: ${item._id}` : `Document ID: ${item._id}`}</em>,\n  media: () => <WarningOutlineIcon />,\n})\n\nexport const getValueWithFallback = ({\n  value,\n  draft,\n  published,\n}: {\n  value: SanityDocument\n  draft?: Partial<SanityDocument> | PreviewValue | null\n  published?: Partial<SanityDocument> | PreviewValue | null\n}) => {\n  const snapshot = draft || published\n\n  if (!snapshot) {\n    return getMissingDocumentFallback(value)\n  }\n\n  return assignWith({}, snapshot, value, (objValue, srcValue) => {\n    return typeof srcValue === 'undefined' ? objValue : srcValue\n  })\n}\n\nexport function getPreviewStateObservable(\n  documentPreviewStore: DocumentPreviewStore,\n  schemaType: SchemaType,\n  documentId: string,\n  title: ReactNode,\n): Observable<PaneItemPreviewState> {\n  const draft$ = isLiveEditEnabled(schemaType)\n    ? of({snapshot: null})\n    : documentPreviewStore.observeForPreview(\n        {_type: 'reference', _ref: getDraftId(documentId)},\n        schemaType,\n      )\n\n  const published$ = documentPreviewStore.observeForPreview(\n    {_type: 'reference', _ref: getPublishedId(documentId)},\n    schemaType,\n  )\n\n  return combineLatest([draft$, published$]).pipe(\n    map(([draft, published]) => ({\n      draft: draft.snapshot ? {title, ...draft.snapshot} : null,\n      isLoading: false,\n      published: published.snapshot ? {title, ...published.snapshot} : null,\n    })),\n    startWith({draft: null, isLoading: true, published: null}),\n  )\n}\n","import {type SchemaType} from '@sanity/types'\nimport {type EditStateFor, type Workspace} from 'sanity'\n\nimport {isLiveEditEnabled} from './components/paneItem/helpers'\n\nexport interface Context {\n  editState: Pick<EditStateFor, 'ready' | 'draft' | 'published' | 'version'> | null\n  workspace: {\n    document: {\n      drafts: Pick<Workspace['document']['drafts'], 'enabled'>\n    }\n  }\n  schemaType: Pick<SchemaType, 'liveEdit'>\n}\n\n/**\n * Determine whether a document has an obsolete draft. This occurs if a document has a draft while\n * the draft model is inactive, or if a live-edit document has a draft.\n */\nexport function hasObsoleteDraft({editState, workspace, schemaType}: Context):\n  | {\n      result: true\n      reason: 'LIVE_EDIT_ACTIVE' | 'DRAFT_MODEL_INACTIVE'\n    }\n  | {result: false}\n  | {result: undefined} {\n  if (!editState?.ready) {\n    return {\n      result: undefined,\n    }\n  }\n\n  const draftExists = editState.draft !== null\n\n  const {\n    document: {\n      drafts: {enabled: isDraftModelEnabled},\n    },\n  } = workspace\n\n  if (draftExists === false) {\n    return {\n      result: false,\n    }\n  }\n\n  if (!isDraftModelEnabled) {\n    return {\n      result: true,\n      reason: 'DRAFT_MODEL_INACTIVE',\n    }\n  }\n\n  if (isLiveEditEnabled(schemaType)) {\n    return {\n      result: true,\n      reason: 'LIVE_EDIT_ACTIVE',\n    }\n  }\n\n  return {\n    result: false,\n  }\n}\n","import {type EditStateFor, isNewDocument, type isPerspectiveWriteable} from 'sanity'\n\n/**\n * Determine whether the user must choose a new perspective in order to create a document.\n *\n * @returns A boolean reflecting whether the user must choose a new perspective, and `undefined` while indeterminate.\n * @internal\n */\nexport function mustChooseNewDocumentDestination({\n  isSelectedPerspectiveWriteable,\n  editState,\n}: {\n  isSelectedPerspectiveWriteable: ReturnType<typeof isPerspectiveWriteable>\n  editState: Pick<EditStateFor, 'ready' | 'draft' | 'published' | 'version'> | null\n}): boolean | undefined {\n  return isNewDocument(editState) && !isSelectedPerspectiveWriteable.result\n}\n","import {CloseIcon} from '@sanity/icons'\nimport {Box, Card, type CardProps, Flex, Text} from '@sanity/ui'\nimport {type HTMLProps, type ReactNode} from 'react'\nimport {useTranslation} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Button} from '../../../../ui-components'\nimport {structureLocaleNamespace} from '../../../i18n'\n\nexport interface DocumentInspectorHeaderProps {\n  as?: CardProps['as']\n  closeButtonLabel: string\n  flex?: CardProps['flex']\n  onClose: () => void\n  title: ReactNode\n}\n\nconst Root = styled(Card)({\n  position: 'relative',\n  zIndex: '1',\n  lineHeight: '0',\n})\n\n/** @internal */\nexport function DocumentInspectorHeader(\n  props: DocumentInspectorHeaderProps & Omit<HTMLProps<HTMLDivElement>, 'as' | 'height' | 'ref'>,\n) {\n  const {as: forwardedAs, children, closeButtonLabel, onClose, title, ...restProps} = props\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  return (\n    <Root {...restProps} as={forwardedAs}>\n      <Flex padding={2}>\n        <Box flex={1} padding={3}>\n          <Text as=\"h1\" size={1} weight=\"medium\">\n            {title}\n          </Text>\n        </Box>\n        <Box flex=\"none\" padding={1}>\n          <Button\n            aria-label={closeButtonLabel}\n            icon={CloseIcon}\n            mode=\"bleed\"\n            onClick={onClose}\n            tooltipProps={{content: t('document-inspector.close-button.tooltip')}}\n          />\n        </Box>\n      </Flex>\n      {children}\n    </Root>\n  )\n}\n","import {Box} from '@sanity/ui'\nimport {useCallback} from 'react'\nimport {Resizable} from 'sanity'\n\nimport {usePane} from '../../../components'\nimport {useStructureTool} from '../../../useStructureTool'\nimport {DOCUMENT_INSPECTOR_MAX_WIDTH, DOCUMENT_INSPECTOR_MIN_WIDTH} from '../constants'\nimport {useDocumentPane} from '../useDocumentPane'\n\ninterface DocumentInspectorPanelProps {\n  documentId: string\n  documentType: string\n  flex?: number | number[]\n}\n\nexport function DocumentInspectorPanel(\n  props: DocumentInspectorPanelProps,\n): React.JSX.Element | null {\n  const {documentId, documentType, flex} = props\n  const {collapsed} = usePane()\n  const {closeInspector, inspector} = useDocumentPane()\n  const {features} = useStructureTool()\n\n  const handleClose = useCallback(() => {\n    if (inspector) closeInspector(inspector.name)\n  }, [closeInspector, inspector])\n\n  if (collapsed || !inspector) return null\n\n  const Component = inspector.component\n  const element = (\n    <Component onClose={handleClose} documentId={documentId} documentType={documentType} />\n  )\n\n  if (features.resizablePanes) {\n    return (\n      <Resizable\n        as=\"aside\"\n        data-ui=\"DocumentInspectorPanel\"\n        flex={flex}\n        resizerPosition=\"left\"\n        maxWidth={DOCUMENT_INSPECTOR_MAX_WIDTH}\n        minWidth={DOCUMENT_INSPECTOR_MIN_WIDTH}\n      >\n        {element}\n      </Resizable>\n    )\n  }\n\n  return (\n    <Box as=\"aside\" data-ui=\"DocumentInspectorPanel\" flex={flex}>\n      {element}\n    </Box>\n  )\n}\n","import {useCallback, useMemo} from 'react'\nimport {useObservable} from 'react-rx'\nimport {map} from 'rxjs/operators'\nimport {useKeyValueStore} from 'sanity'\n\nconst STRUCTURE_TOOL_NAMESPACE = 'studio.structure-tool'\n\n/**\n * @internal\n */\nexport function useStructureToolSetting<ValueType>(\n  namespace: string,\n  key: string | null,\n  defaultValue?: ValueType,\n): [ValueType | undefined, (_value: ValueType) => void] {\n  const keyValueStore = useKeyValueStore()\n\n  const keyValueStoreKey = [STRUCTURE_TOOL_NAMESPACE, namespace, key].filter(Boolean).join('.')\n\n  const value$ = useMemo(() => {\n    return keyValueStore\n      .getKey(keyValueStoreKey)\n      .pipe(map((value) => (value === null ? defaultValue : value)))\n  }, [defaultValue, keyValueStore, keyValueStoreKey])\n\n  const value = useObservable(value$, defaultValue) as ValueType\n  const set = useCallback(\n    (newValue: ValueType) => {\n      if (newValue !== value) {\n        keyValueStore.setKey(keyValueStoreKey, newValue as string)\n      }\n    },\n    [keyValueStore, keyValueStoreKey, value],\n  )\n\n  return useMemo(() => [value, set], [set, value])\n}\n","export const VIEW_MODE_PARSED = {id: 'parsed', title: 'document-inspector.view-mode.parsed'}\nexport const VIEW_MODE_RAW = {id: 'raw', title: 'document-inspector.view-mode.raw-json'}\nexport const VIEW_MODES = [VIEW_MODE_PARSED, VIEW_MODE_RAW]\n","import {type SanityDocumentLike} from '@sanity/types'\nimport LRU from 'quick-lru'\nimport {isRecord, isString} from 'sanity'\n\nconst lru = new LRU({maxSize: 1000})\n\nexport function isExpanded(keyPath: any, value: any): any {\n  const cached = lru.get(keyPath)\n\n  if (cached === undefined) {\n    lru.set(keyPath, Array.isArray(value) || isRecord(value))\n    return isExpanded(keyPath, value)\n  }\n\n  return cached\n}\n\nexport function toggleExpanded(event: any): void {\n  const {path} = event\n  const current = lru.get(path)\n\n  if (current === undefined) {\n    // something is wrong\n    return\n  }\n\n  lru.set(path, !current)\n}\n\nexport function selectElement(element: HTMLElement): void {\n  const sel = window.getSelection()\n\n  if (sel) {\n    const range = document.createRange()\n\n    sel.removeAllRanges()\n    range.selectNodeContents(element)\n    sel.addRange(range)\n  }\n}\n\nexport function select(event: any): void {\n  selectElement(event.currentTarget)\n}\n\nexport function maybeSelectAll(event: any): void {\n  const selectAll = event.keyCode === 65 && (event.metaKey || event.ctrlKey)\n\n  if (!selectAll) {\n    return\n  }\n\n  event.preventDefault()\n\n  selectElement(event.currentTarget)\n}\n\nexport function isDocumentLike(value: unknown): value is SanityDocumentLike {\n  return isRecord(value) && isString(value._id) && isString(value._type)\n}\n","import {rem, type Theme} from '@sanity/ui'\nimport {css, styled} from 'styled-components'\n\nexport const JSONInspectorWrapper = styled.div(({theme}: {theme: Theme}) => {\n  const {color, fonts, space} = theme.sanity\n\n  return css`\n    & .json-inspector,\n    & .json-inspector .json-inspector__selection {\n      font-family: ${fonts.code.family};\n      font-size: ${fonts.code.sizes[1].fontSize}px;\n      line-height: ${fonts.code.sizes[1].lineHeight}px;\n      color: var(--card-code-fg-color);\n    }\n\n    & .json-inspector .json-inspector__leaf {\n      padding-left: ${rem(space[4])};\n    }\n\n    & .json-inspector .json-inspector__leaf.json-inspector__leaf_root {\n      padding-top: ${rem(space[3])};\n      padding-left: 0;\n    }\n\n    & .json-inspector > .json-inspector__leaf_root > .json-inspector__line > .json-inspector__key {\n      display: none;\n    }\n\n    & .json-inspector .json-inspector__line {\n      display: block;\n      position: relative;\n      cursor: default;\n    }\n\n    & .json-inspector .json-inspector__line::after {\n      content: '';\n      position: absolute;\n      top: 0;\n      left: -200px;\n      right: -50px;\n      bottom: 0;\n      z-index: -1;\n      pointer-events: none;\n    }\n\n    & .json-inspector .json-inspector__line:hover::after {\n      background: var(--card-code-bg-color);\n    }\n\n    & .json-inspector .json-inspector__leaf_composite > .json-inspector__line {\n      cursor: pointer;\n    }\n\n    & .json-inspector .json-inspector__leaf_composite > .json-inspector__line::before {\n      content: '▸ ';\n      margin-left: calc(0 - ${rem(space[4])} + 3px);\n      font-size: ${fonts.code.sizes[1].fontSize}px;\n      line-height: ${fonts.code.sizes[1].lineHeight}px;\n    }\n\n    &\n      .json-inspector\n      .json-inspector__leaf_expanded.json-inspector__leaf_composite\n      > .json-inspector__line::before {\n      content: '▾ ';\n      font-size: ${fonts.code.sizes[1].fontSize}px;\n      line-height: ${fonts.code.sizes[1].lineHeight}px;\n    }\n\n    & .json-inspector .json-inspector__radio,\n    & .json-inspector .json-inspector__flatpath {\n      display: none;\n    }\n\n    & .json-inspector .json-inspector__value {\n      margin-left: ${rem(space[4] / 2)};\n    }\n\n    &\n      .json-inspector\n      > .json-inspector__leaf_root\n      > .json-inspector__line\n      > .json-inspector__key\n      + .json-inspector__value {\n      margin: 0;\n    }\n\n    & .json-inspector .json-inspector__key {\n      color: ${color.syntax.property};\n    }\n\n    & .json-inspector .json-inspector__value_helper,\n    & .json-inspector .json-inspector__value_null {\n      color: ${color.syntax.constant};\n    }\n\n    & .json-inspector .json-inspector__not-found {\n      padding-top: ${rem(space[3])};\n    }\n\n    & .json-inspector .json-inspector__value_string {\n      color: ${color.syntax.string};\n    }\n\n    & .json-inspector .json-inspector__value_boolean {\n      color: ${color.syntax.boolean};\n    }\n\n    & .json-inspector .json-inspector__value_number {\n      color: ${color.syntax.number};\n    }\n\n    & .json-inspector .json-inspector__show-original {\n      display: inline-block;\n      padding: 0 6px;\n      cursor: pointer;\n    }\n\n    & .json-inspector .json-inspector__show-original:hover {\n      color: inherit;\n    }\n\n    & .json-inspector .json-inspector__show-original::before {\n      content: '↔';\n    }\n\n    & .json-inspector .json-inspector__show-original:hover::after {\n      content: ' expand';\n    }\n  `\n})\n","import {SearchIcon} from '@sanity/icons'\nimport {TextInput} from '@sanity/ui'\nimport {type ChangeEvent, useCallback} from 'react'\nimport {useTranslation} from 'sanity'\n\nimport {structureLocaleNamespace} from '../../../i18n'\n\nexport function Search(props: {onChange: (q: string) => void; query: string}) {\n  const {onChange, query} = props\n\n  const handleChange = useCallback(\n    (event: ChangeEvent<HTMLInputElement>) => onChange(event.target.value),\n    [onChange],\n  )\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  return (\n    <TextInput\n      icon={SearchIcon}\n      onChange={handleChange}\n      placeholder={t('document-inspector.search.placeholder')}\n      radius={2}\n      value={query || ''}\n    />\n  )\n}\n","import {JsonInspector} from '@rexxars/react-json-inspector'\nimport {type SanityDocument} from '@sanity/types'\nimport {Card, Code, Flex, TabList, TabPanel} from '@sanity/ui'\nimport {useCallback} from 'react'\nimport {Translate, useTranslation} from 'sanity'\n\nimport {Dialog, Tab} from '../../../../ui-components'\nimport {DocTitle} from '../../../components'\nimport {structureLocaleNamespace} from '../../../i18n'\nimport {useStructureToolSetting} from '../../../useStructureToolSetting'\nimport {useDocumentPane} from '../useDocumentPane'\nimport {VIEW_MODE_PARSED, VIEW_MODE_RAW, VIEW_MODES} from './constants'\nimport {isDocumentLike, isExpanded, maybeSelectAll, select, toggleExpanded} from './helpers'\nimport {JSONInspectorWrapper} from './InspectDialog.styles'\nimport {Search} from './Search'\n\ninterface InspectDialogProps {\n  value: Partial<SanityDocument> | null\n}\n\nexport function InspectDialog(props: InspectDialogProps) {\n  const {value} = props\n  const {onInspectClose, paneKey} = useDocumentPane()\n  const dialogIdPrefix = `${paneKey}_inspect_`\n\n  /* this creates a view mode (the default that it opens with is the parsed tab) that is saved based on the paneKey\n  where the inspect dialog lives.\n  This also means that when a page is loaded, the state of the tabs remains and doesn't revert to the pane tab */\n  const [viewModeId, onViewModeChange] = useStructureToolSetting(\n    'inspect-view-mode',\n    null,\n    'parsed',\n  )\n\n  /* based on the view mode it shows the right tab content */\n  const viewMode = VIEW_MODES.find((mode) => mode.id === viewModeId)\n\n  const setParsedViewMode = useCallback(() => {\n    onViewModeChange(VIEW_MODE_PARSED.id)\n  }, [onViewModeChange])\n\n  const setRawViewMode = useCallback(() => {\n    onViewModeChange(VIEW_MODE_RAW.id)\n  }, [onViewModeChange])\n\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  return (\n    <Dialog\n      bodyHeight=\"fill\"\n      id={`${dialogIdPrefix}dialog`}\n      header={\n        isDocumentLike(value) ? (\n          <Translate\n            t={t}\n            i18nKey=\"document-inspector.dialog.title\"\n            components={{\n              DocumentTitle: () => (\n                <em>\n                  <DocTitle document={value} />\n                </em>\n              ),\n            }}\n          />\n        ) : (\n          <em>{t('document-inspector.dialog.title-no-value')}</em>\n        )\n      }\n      onClose={onInspectClose}\n      onClickOutside={onInspectClose}\n      padding={false}\n      width={2}\n    >\n      <Flex direction=\"column\" height=\"fill\">\n        <Card\n          padding={3}\n          paddingTop={0}\n          shadow={1}\n          style={{position: 'sticky', bottom: 0, zIndex: 3}}\n        >\n          <TabList space={1}>\n            <Tab\n              aria-controls={`${dialogIdPrefix}tabpanel`}\n              id={`${dialogIdPrefix}tab-${VIEW_MODE_PARSED.id}`}\n              label={t(VIEW_MODE_PARSED.title)}\n              onClick={setParsedViewMode}\n              selected={viewMode === VIEW_MODE_PARSED}\n            />\n            <Tab\n              aria-controls={`${dialogIdPrefix}tabpanel`}\n              id={`${dialogIdPrefix}tab-${VIEW_MODE_RAW.id}`}\n              label={t(VIEW_MODE_RAW.title)}\n              onClick={setRawViewMode}\n              selected={viewMode === VIEW_MODE_RAW}\n            />\n          </TabList>\n        </Card>\n\n        <TabPanel\n          aria-labelledby={`${dialogIdPrefix}tab-${viewModeId}`}\n          flex={1}\n          id={`${dialogIdPrefix}tabpanel`}\n          overflow=\"auto\"\n          padding={4}\n          style={{outline: 'none'}}\n        >\n          {viewMode === VIEW_MODE_PARSED && (\n            <JSONInspectorWrapper>\n              <JsonInspector\n                data={value}\n                isExpanded={isExpanded}\n                onClick={toggleExpanded}\n                search={Search}\n                filterOptions={{ignoreCase: true}}\n              />\n            </JSONInspectorWrapper>\n          )}\n\n          {viewMode === VIEW_MODE_RAW && (\n            <Code\n              language=\"json\"\n              tabIndex={0}\n              onKeyDown={maybeSelectAll}\n              onDoubleClick={select}\n              onFocus={select}\n              size={1}\n            >\n              {JSON.stringify(value, null, 2)}\n            </Code>\n          )}\n        </TabPanel>\n      </Flex>\n    </Dialog>\n  )\n}\n","import {Box, type ButtonMode, type ButtonTone, Card, type CardTone, Flex, Text} from '@sanity/ui'\nimport {type ComponentType, type ElementType, type ReactNode} from 'react'\n\nimport {Button} from '../../../../../ui-components'\n\ninterface BannerProps {\n  action?: {\n    as?: ElementType | keyof React.JSX.IntrinsicElements\n    icon?: ComponentType\n    onClick?: () => void\n    text: string\n    tone?: ButtonTone\n    disabled?: boolean\n    mode?: ButtonMode\n  }\n  content: ReactNode\n  icon?: ComponentType\n  tone?: CardTone\n  paddingY?: number\n}\n\nexport function Banner(props: BannerProps) {\n  const {action, content, icon: Icon, tone = 'transparent', paddingY = 2, ...rest} = props\n\n  return (\n    <Box padding={1}>\n      <Card radius={3} paddingX={2} paddingY={paddingY} tone={tone} {...rest}>\n        <Flex align=\"center\" gap={3} paddingX={2}>\n          {Icon && (\n            <Text size={0}>\n              <Icon />\n            </Text>\n          )}\n\n          <Flex align=\"center\" flex={1} gap={2} paddingY={2}>\n            {content}\n          </Flex>\n\n          {action && (\n            <Button {...action} mode={action.mode || 'ghost'} tone={action.tone || 'default'} />\n          )}\n        </Flex>\n      </Card>\n    </Box>\n  )\n}\n","import {DocumentRemoveIcon, ReadOnlyIcon} from '@sanity/icons'\nimport {Text} from '@sanity/ui'\nimport {useCallback} from 'react'\nimport {\n  isDraftPerspective,\n  isPublishedPerspective,\n  type ReleaseDocument,\n  Translate,\n  useDocumentOperation,\n  usePerspective,\n  useTranslation,\n} from 'sanity'\nimport {useRouter} from 'sanity/router'\n\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {Banner} from './Banner'\n\nexport function DeletedDocumentBanners() {\n  const {isDeleted, isDeleting, ready} = useDocumentPane()\n  const {selectedPerspective} = usePerspective()\n  if (!ready) return null\n  if (\n    !isPublishedPerspective(selectedPerspective) &&\n    !isDraftPerspective(selectedPerspective) &&\n    selectedPerspective.state === 'archived'\n  ) {\n    return <ArchivedReleaseBanner release={selectedPerspective as ReleaseDocument} />\n  }\n  if (isDeleted && !isDeleting) return <DeletedDocumentBanner />\n}\n\nfunction DeletedDocumentBanner() {\n  const {documentId, documentType} = useDocumentPane()\n  const {restore} = useDocumentOperation(documentId, documentType)\n  const {navigateIntent} = useRouter()\n\n  const handleRestore = useCallback(() => {\n    restore.execute('lastRevision')\n    navigateIntent('edit', {id: documentId, type: documentType})\n  }, [documentId, documentType, navigateIntent, restore])\n\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  return (\n    <Banner\n      action={{\n        onClick: handleRestore,\n        text: t('banners.deleted-document-banner.restore-button.text'),\n      }}\n      content={\n        <Text size={1} weight=\"medium\">\n          {t('banners.deleted-document-banner.text')}\n        </Text>\n      }\n      data-testid=\"deleted-document-banner\"\n      icon={ReadOnlyIcon}\n    />\n  )\n}\n\nconst ArchivedReleaseBanner = ({release}: {release: ReleaseDocument}) => {\n  const {t} = useTranslation()\n\n  return (\n    <Banner\n      tone=\"caution\"\n      content={\n        <Text size={1} weight=\"medium\">\n          <Translate\n            t={t}\n            i18nKey=\"banners.deleted-release-banner.text\"\n            values={{title: release.metadata?.title || t('release.placeholder-untitled-release')}}\n          />\n        </Text>\n      }\n      data-testid=\"deleted-release-banner\"\n      icon={DocumentRemoveIcon}\n    />\n  )\n}\n","import {ErrorOutlineIcon} from '@sanity/icons'\nimport {Text} from '@sanity/ui'\nimport {isDeprecatedSchemaType, Translate, useTranslation} from 'sanity'\n\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {Banner} from './Banner'\n\nexport function DeprecatedDocumentTypeBanner() {\n  const {schemaType} = useDocumentPane()\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  if (!isDeprecatedSchemaType(schemaType)) {\n    return null\n  }\n\n  return (\n    <Banner\n      content={\n        <Text size={1} weight=\"medium\">\n          <Translate t={t} i18nKey=\"banners.deprecated-document-type-banner.text\" />{' '}\n          {schemaType.deprecated.reason}\n        </Text>\n      }\n      data-testid=\"deprecated-document-type-banner\"\n      icon={ErrorOutlineIcon}\n    />\n  )\n}\n","import {defineEvent} from '@sanity/telemetry'\n\n/** @internal */\nexport const AskToEditDialogOpened = defineEvent({\n  name: 'Ask To Edit Dialog Opened',\n  version: 1,\n  description: 'User clicked the \"Ask to edit\" button in the document permissions banner',\n})\n\n/** @internal */\nexport const AskToEditRequestSent = defineEvent({\n  name: 'Ask To Edit Request Sent',\n  version: 1,\n  description: 'User sent a role change request from the dialog',\n})\n","import {useTelemetry} from '@sanity/telemetry/react'\nimport {Box, Card, DialogProvider, Flex, Stack, Text, TextInput, useToast} from '@sanity/ui'\nimport {useId, useMemo, useState} from 'react'\nimport {useObservable} from 'react-rx'\nimport {catchError, map, type Observable, of, startWith} from 'rxjs'\nimport {type Role, useClient, useProjectId, useTranslation, useZIndex} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Dialog} from '../../../ui-components'\nimport {structureLocaleNamespace} from '../../i18n'\nimport {AskToEditRequestSent} from './__telemetry__/RequestPermissionDialog.telemetry'\nimport {type AccessRequest} from './useRoleRequestsStatus'\n\nconst MAX_NOTE_LENGTH = 150\n\n/** @internal */\nexport const DialogBody = styled(Box)`\n  box-sizing: border-box;\n`\n\n/** @internal */\nexport const LoadingContainer = styled(Flex).attrs({\n  align: 'center',\n  direction: 'column',\n  justify: 'center',\n})`\n  height: 110px;\n`\n\n/** @internal */\nexport interface RequestPermissionDialogProps {\n  onClose?: () => void\n  onRequestSubmitted?: () => void\n}\n\n/**\n * A dialog that enables the user to request permission to change their\n * member role from \"Viewer\" to \"Editor\" or \"Admin\" depending on the\n * project's available roles.\n *\n * @internal\n */\nexport function RequestPermissionDialog({\n  onClose,\n  onRequestSubmitted,\n}: RequestPermissionDialogProps) {\n  const {t} = useTranslation(structureLocaleNamespace)\n  const telemtry = useTelemetry()\n  const dialogId = `request-permissions-${useId()}`\n  const projectId = useProjectId()\n  const client = useClient({apiVersion: '2024-09-26'})\n  const toast = useToast()\n  const zOffset = useZIndex()\n\n  const [isSubmitting, setIsSubmitting] = useState(false)\n\n  const [note, setNote] = useState('')\n\n  const [msgError, setMsgError] = useState<string | undefined>()\n  const [hasTooManyRequests, setHasTooManyRequests] = useState<boolean>(false)\n  const [hasBeenDenied, setHasBeenDenied] = useState<boolean>(false)\n\n  const requestedRole$: Observable<'administrator' | 'editor'> = useMemo(() => {\n    const adminRole = 'administrator' as const\n    if (!projectId || !client) return of(adminRole)\n    return client.observable\n      .request<(Role & {appliesToUsers?: boolean})[]>({url: `/projects/${projectId}/roles`})\n      .pipe(\n        map((roles) => {\n          const hasEditor = roles\n            .filter((role) => role?.appliesToUsers)\n            .find((role) => role.name === 'editor')\n          return hasEditor ? 'editor' : adminRole\n        }),\n        startWith(adminRole),\n        catchError(() => of(adminRole)),\n      )\n  }, [projectId, client])\n\n  const requestedRole = useObservable(requestedRole$)\n\n  const onSubmit = () => {\n    setIsSubmitting(true)\n    client\n      .request<AccessRequest | null>({\n        url: `/access/project/${projectId}/requests`,\n        method: 'post',\n        body: {note, requestUrl: window?.location.href, requestedRole, type: 'role'},\n      })\n      .then((request) => {\n        if (request) {\n          if (onRequestSubmitted) onRequestSubmitted()\n          telemtry.log(AskToEditRequestSent)\n          toast.push({title: 'Edit access requested'})\n        }\n      })\n      .catch((err) => {\n        const statusCode = err?.response?.statusCode\n        const errMessage = err?.response?.body?.message\n        if (statusCode === 429) {\n          // User is over their cross-project request limit\n          setHasTooManyRequests(true)\n          setMsgError(errMessage)\n        }\n        if (statusCode === 409) {\n          // If we get a 409, user has been denied on this project or has a valid pending request\n          // valid pending request should be handled by GET request above\n          setHasBeenDenied(true)\n          setMsgError(errMessage)\n        } else {\n          toast.push({\n            title: 'There was a problem submitting your request.',\n            status: 'error',\n          })\n        }\n      })\n      .finally(() => {\n        setIsSubmitting(false)\n      })\n  }\n\n  return (\n    <DialogProvider position={'fixed'} zOffset={zOffset.fullscreen}>\n      <Dialog\n        width={1}\n        id={dialogId}\n        header={t('request-permission-dialog.header.text')}\n        footer={{\n          cancelButton: {\n            onClick: onClose,\n            text: t('confirm-dialog.cancel-button.fallback-text'),\n          },\n          confirmButton: {\n            onClick: onSubmit,\n            loading: isSubmitting,\n            disabled: hasTooManyRequests || hasBeenDenied,\n            text: t('request-permission-dialog.confirm-button.text'),\n            tone: 'primary',\n            type: 'submit',\n          },\n        }}\n        onClose={onClose}\n        onClickOutside={onClose}\n      >\n        <DialogBody>\n          <Stack space={4}>\n            <Text>{t('request-permission-dialog.description.text')}</Text>\n            {hasTooManyRequests || hasBeenDenied ? (\n              <Card tone={'caution'} padding={3} radius={2} shadow={1}>\n                <Text size={1}>\n                  {hasTooManyRequests && (\n                    <>{msgError ?? t('request-permission-dialog.warning.limit-reached.text')}</>\n                  )}\n                  {hasBeenDenied && (\n                    <>{msgError ?? t('request-permission-dialog.warning.denied.text')}</>\n                  )}\n                </Text>\n              </Card>\n            ) : (\n              <Stack space={3} paddingBottom={0}>\n                <TextInput\n                  placeholder={t('request-permission-dialog.note-input.placeholder.text')}\n                  disabled={isSubmitting}\n                  onKeyDown={(e) => {\n                    if (e.key === 'Enter') onSubmit()\n                  }}\n                  maxLength={MAX_NOTE_LENGTH}\n                  value={note}\n                  onChange={(e) => {\n                    setNote(e.currentTarget.value)\n                  }}\n                />\n\n                <Text align=\"right\" muted size={1}>{`${note.length}/${MAX_NOTE_LENGTH}`}</Text>\n              </Stack>\n            )}\n          </Stack>\n        </DialogBody>\n      </Dialog>\n    </DialogProvider>\n  )\n}\n","import {addWeeks, isAfter, isBefore} from 'date-fns'\nimport {useMemo} from 'react'\nimport {useObservable} from 'react-rx'\nimport {of} from 'rxjs'\nimport {catchError, map, startWith} from 'rxjs/operators'\nimport {type SanityClient, useClient, useProjectId} from 'sanity'\n\n/** @internal */\nexport interface AccessRequest {\n  id: string\n  status: 'pending' | 'accepted' | 'declined'\n  resourceId: string\n  resourceType: 'project'\n  createdAt: string\n  updatedAt: string\n  updatedByUserId: string\n  requestedByUserId: string\n  requestedRole: string\n  type: 'access' | 'role'\n  note: string\n}\n\nconst LOADING_STATE = {loading: true, error: false, status: undefined}\nconst EMPTY_STATE = {loading: false, error: false, status: 'none'}\nconst DECLINED_STATE = {loading: false, error: false, status: 'declined'}\nconst PENDING_STATE = {loading: false, error: false, status: 'pending'}\nconst EXPIRED_STATE = {loading: false, error: false, status: 'expired'}\n\n/** @internal */\nexport const useRoleRequestsStatus = () => {\n  const client = useClient({apiVersion: '2024-07-01'})\n  const projectId = useProjectId()\n\n  const checkRoleRequests$ = useMemo(() => {\n    if (!client || !projectId) {\n      return of(EMPTY_STATE)\n    }\n\n    return checkRoleRequests(client, projectId)\n  }, [client, projectId])\n\n  const {loading, error, status} = useObservable(checkRoleRequests$, LOADING_STATE)\n  return {data: status, loading, error}\n}\n\nfunction checkRoleRequests(client: SanityClient, projectId: string) {\n  return client.observable\n    .request<AccessRequest[] | null>({\n      url: '/access/requests/me',\n      tag: 'use-role-requests-status',\n    })\n    .pipe(\n      map((requests) => {\n        if (!requests || requests.length === 0) {\n          return EMPTY_STATE\n        }\n\n        // Filter requests for the specific project and where type is 'role'\n        const projectRequests = requests.filter(\n          (request) => request.resourceId === projectId && request.type === 'role',\n        )\n\n        const declinedRequest = projectRequests.find((request) => request.status === 'declined')\n        if (\n          declinedRequest &&\n          isAfter(addWeeks(new Date(declinedRequest.createdAt), 2), new Date())\n        ) {\n          return DECLINED_STATE\n        }\n\n        const pendingRequest = projectRequests.find(\n          (request) =>\n            request.status === 'pending' &&\n            isAfter(addWeeks(new Date(request.createdAt), 2), new Date()),\n        )\n        if (pendingRequest) {\n          return PENDING_STATE\n        }\n\n        const oldPendingRequest = projectRequests.find(\n          (request) =>\n            request.status === 'pending' &&\n            isBefore(addWeeks(new Date(request.createdAt), 2), new Date()),\n        )\n\n        return oldPendingRequest ? EXPIRED_STATE : EMPTY_STATE\n      }),\n      catchError((err) => {\n        console.error('Failed to fetch access requests', err)\n        return of({loading: false, error: true, status: undefined})\n      }),\n      startWith(LOADING_STATE), // Start with loading state\n    )\n}\n","import {ReadOnlyIcon} from '@sanity/icons'\nimport {useTelemetry} from '@sanity/telemetry/react'\nimport {Text} from '@sanity/ui'\nimport {useMemo, useState} from 'react'\nimport {Translate, useCurrentUser, useListFormat, useTranslation} from 'sanity'\n\nimport {\n  RequestPermissionDialog,\n  useRoleRequestsStatus,\n} from '../../../../components/requestPermissionDialog'\nimport {AskToEditDialogOpened} from '../../../../components/requestPermissionDialog/__telemetry__/RequestPermissionDialog.telemetry'\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {Banner} from './Banner'\n\ninterface InsufficientPermissionBannerProps {\n  requiredPermission: 'update' | 'create'\n}\n\nexport function InsufficientPermissionBanner({\n  requiredPermission,\n}: InsufficientPermissionBannerProps) {\n  const currentUser = useCurrentUser()\n\n  const {\n    data: roleRequestStatus,\n    loading: requestStatusLoading,\n    error: requestStatusError,\n  } = useRoleRequestsStatus()\n  const [requestSent, setRequestSent] = useState(false)\n  const requestPending = useMemo(\n    () => roleRequestStatus === 'pending' || roleRequestStatus === 'declined' || requestSent,\n    [roleRequestStatus, requestSent],\n  )\n  const currentUserRoles = currentUser?.roles || []\n  const isOnlyViewer = currentUserRoles.length === 1 && currentUserRoles[0].name === 'viewer'\n  const [showRequestPermissionDialog, setShowRequestPermissionDialog] = useState(false)\n\n  const listFormat = useListFormat({style: 'short'})\n  const {t} = useTranslation(structureLocaleNamespace)\n  const telemetry = useTelemetry()\n\n  const roleTitles = currentUserRoles.map((role) => role.title)\n  const roles = listFormat\n    .formatToParts(roleTitles)\n    .map((part) =>\n      part.type === 'element' ? <code key={part.value}>{part.value}</code> : part.value,\n    )\n\n  return (\n    <>\n      <Banner\n        content={\n          <Text size={1} weight=\"medium\">\n            <Translate\n              t={t}\n              i18nKey=\"banners.permission-check-banner.missing-permission\"\n              components={{Roles: () => <>{roles}</>}}\n              values={{count: roles.length, roles: roleTitles}}\n              context={requiredPermission}\n            />\n          </Text>\n        }\n        action={\n          isOnlyViewer && roleRequestStatus && !requestStatusError && !requestStatusLoading\n            ? {\n                onClick: requestPending\n                  ? undefined\n                  : () => {\n                      setShowRequestPermissionDialog(true)\n                      telemetry.log(AskToEditDialogOpened)\n                    },\n                text: requestPending\n                  ? t('banners.permission-check-banner.request-permission-button.sent')\n                  : t('banners.permission-check-banner.request-permission-button.text'),\n                tone: requestPending ? 'default' : 'primary',\n                disabled: requestPending,\n                mode: requestPending ? 'bleed' : undefined,\n              }\n            : undefined\n        }\n        data-testid=\"permission-check-banner\"\n        icon={ReadOnlyIcon}\n      />\n      {showRequestPermissionDialog && (\n        <RequestPermissionDialog\n          onClose={() => setShowRequestPermissionDialog(false)}\n          onRequestSubmitted={() => {\n            setRequestSent(true)\n            setShowRequestPermissionDialog(false)\n          }}\n        />\n      )}\n    </>\n  )\n}\n","import {CloseIcon, SyncIcon, WarningOutlineIcon} from '@sanity/icons'\nimport {type KeyedSegment, type Reference} from '@sanity/types'\nimport {Text} from '@sanity/ui'\nimport {fromString as pathFromString, get as pathGet} from '@sanity/util/paths'\nimport {memo, useCallback, useMemo} from 'react'\nimport {useObservable} from 'react-rx'\nimport {concat, type Observable, of} from 'rxjs'\nimport {debounceTime, map} from 'rxjs/operators'\nimport {\n  type DocumentAvailability,\n  getPublishedId,\n  useDocumentPreviewStore,\n  usePerspective,\n  useTranslation,\n} from 'sanity'\n\nimport {usePaneRouter} from '../../../../components'\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {type RouterPaneGroup} from '../../../../types'\nimport {Banner} from './Banner'\n\ninterface ParentReferenceInfo {\n  loading: boolean\n  result?: {\n    availability: {\n      draft: DocumentAvailability\n      published: DocumentAvailability\n      version?: DocumentAvailability\n    }\n    refValue: string | undefined\n  }\n}\n\nexport const ReferenceChangedBanner = memo(() => {\n  const documentPreviewStore = useDocumentPreviewStore()\n  const {selectedReleaseId} = usePerspective()\n  const {params, groupIndex, routerPanesState, replaceCurrent, BackLink} = usePaneRouter()\n  const routerReferenceId = routerPanesState[groupIndex]?.[0].id\n  const parentGroup = routerPanesState[groupIndex - 1] as RouterPaneGroup | undefined\n  const parentSibling = parentGroup?.[0]\n  const parentId = parentSibling?.id\n  const hasHistoryOpen = Boolean(parentSibling?.params?.rev)\n  const parentRefPath = useMemo(() => {\n    return (params?.parentRefPath && pathFromString(params.parentRefPath)) || null\n  }, [params?.parentRefPath])\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  /**\n   * Loads information regarding the reference field of the parent pane. This\n   * is only applicable to child references (aka references-in-place).\n   *\n   * It utilizes the pane ID of the parent pane (which is a document ID) along\n   * with the `parentRefPath` router param on the current pane to find the\n   * current value of the reference field on the parent document.\n   *\n   * This is used to compare with the current pane's document ID. If the IDs\n   * don't match then this banner should reveal itself\n   */\n  const referenceInfoObservable = useMemo((): Observable<ParentReferenceInfo> => {\n    const parentRefPathSegment = parentRefPath?.[0] as string | undefined\n\n    // short-circuit: this document pane is not a child reference pane\n    if (!parentId || !parentRefPathSegment || !parentRefPath) {\n      return of({loading: false})\n    }\n\n    const publishedId = getPublishedId(parentId)\n    const path = pathFromString(parentRefPathSegment)\n\n    // note: observePaths doesn't support keyed path segments, so we need to select the nearest parent\n    const keyedSegmentIndex = path.findIndex(\n      (p): p is KeyedSegment => typeof p == 'object' && '_key' in p,\n    )\n\n    return concat(\n      // emit a loading state instantly\n      of({loading: true}),\n      // then emit the values from watching the published ID's path\n      documentPreviewStore\n        .unstable_observePathsDocumentPair(\n          publishedId,\n          (keyedSegmentIndex === -1 ? path : path.slice(0, keyedSegmentIndex)) as string[][],\n          {\n            version: selectedReleaseId,\n          },\n        )\n        .pipe(\n          // this debounce time is needed to prevent flashing banners due to\n          // the router state updating faster than the content-lake state. we\n          // debounce to wait for more emissions because the value pulled\n          // initially could be stale.\n          debounceTime(750),\n          map(\n            ({draft, published, version}): ParentReferenceInfo => ({\n              loading: false,\n              result: {\n                availability: {\n                  draft: draft.availability,\n                  published: published.availability,\n                  ...(version?.availability\n                    ? {\n                        version: version.availability,\n                      }\n                    : {}),\n                },\n                refValue: pathGet<Reference>(\n                  version?.snapshot || draft.snapshot || published.snapshot,\n                  parentRefPath,\n                )?._ref,\n              },\n            }),\n          ),\n        ),\n    )\n  }, [selectedReleaseId, documentPreviewStore, parentId, parentRefPath])\n  const referenceInfo = useObservable(referenceInfoObservable, {loading: true})\n\n  const handleReloadReference = useCallback(() => {\n    if (referenceInfo.loading) return\n\n    if (referenceInfo.result?.refValue) {\n      replaceCurrent({\n        id: referenceInfo.result.refValue,\n        params: params as Record<string, string>,\n      })\n    }\n  }, [referenceInfo.loading, referenceInfo.result, replaceCurrent, params])\n\n  const shouldHide =\n    // if `parentId` or `parentRefPath` is not present then this banner is n/a\n    !parentId ||\n    !parentRefPath ||\n    // if viewing this pane via history, then hide\n    hasHistoryOpen ||\n    // if loading, hide\n    referenceInfo.loading ||\n    // if the parent document is not available (e.g. due to permission denied or\n    // not found) we don't want to display a warning here, but instead rely on the\n    // parent view to display the appropriate message\n    (!referenceInfo.result?.availability.draft.available &&\n      !referenceInfo.result?.availability.published.available) ||\n    // if the references are the same, then hide the reference changed banner\n    referenceInfo.result?.refValue === routerReferenceId\n\n  if (shouldHide) return null\n\n  return (\n    <Banner\n      action={\n        referenceInfo.result?.refValue\n          ? {\n              onClick: handleReloadReference,\n              icon: SyncIcon,\n              text: t('banners.reference-changed-banner.reason-changed.reload-button.text'),\n            }\n          : {\n              as: BackLink,\n              icon: CloseIcon,\n              text: t('banners.reference-changed-banner.reason-removed.close-button.text'),\n            }\n      }\n      data-testid=\"reference-changed-banner\"\n      content={\n        <Text size={1} weight=\"medium\">\n          {referenceInfo.result?.refValue\n            ? t('banners.reference-changed-banner.reason-changed.text')\n            : t('banners.reference-changed-banner.reason-removed.text')}\n        </Text>\n      }\n      icon={WarningOutlineIcon}\n      tone=\"caution\"\n    />\n  )\n})\n\nReferenceChangedBanner.displayName = 'Memo(ReferenceChangedBanner)'\n","import {Text} from '@sanity/ui'\nimport {useMemo} from 'react'\nimport {\n  getReleaseIdFromReleaseDocumentId,\n  getVersionInlineBadge,\n  Translate,\n  useArchivedReleases,\n  useTranslation,\n} from 'sanity'\n\nimport {usePaneRouter} from '../../../../components/paneRouter/usePaneRouter'\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {Banner} from './Banner'\n\nexport function ArchivedReleaseDocumentBanner(): React.JSX.Element {\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {t: tCore} = useTranslation()\n  const {data: archivedReleases} = useArchivedReleases()\n\n  const {params, setParams} = usePaneRouter()\n  const handleGoBack = () => {\n    setParams({\n      ...params,\n      rev: params?.historyEvent || undefined,\n      since: undefined,\n      historyVersion: undefined,\n    })\n  }\n\n  const release = useMemo(() => {\n    return archivedReleases.find(\n      (r) => getReleaseIdFromReleaseDocumentId(r._id) === params?.historyVersion,\n    )\n  }, [archivedReleases, params?.historyVersion])\n\n  const description =\n    release?.state === 'published'\n      ? 'banners.published-release.description'\n      : 'banners.archived-release.description'\n\n  const title = release?.metadata.title || tCore('release.placeholder-untitled-release')\n\n  return (\n    <Banner\n      tone=\"caution\"\n      content={\n        <Text size={1}>\n          <Translate\n            t={t}\n            i18nKey={description}\n            values={{\n              title,\n            }}\n            components={{\n              VersionBadge: getVersionInlineBadge(release),\n            }}\n          />\n        </Text>\n      }\n      action={\n        params?.archivedRelease\n          ? undefined\n          : {\n              text: 'Go back to published version',\n              onClick: handleGoBack,\n            }\n      }\n    />\n  )\n}\n","import {ComposeSparklesIcon, InfoOutlineIcon, LaunchIcon} from '@sanity/icons'\nimport {Box, Card, Container, Flex, Heading, Text, useClickOutsideEvent} from '@sanity/ui'\nimport {useCallback, useMemo, useRef, useState} from 'react'\nimport {\n  getDocumentVariantType,\n  useCanvasCompanionDoc,\n  useNavigateToCanvasDoc,\n  useTranslation,\n} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Popover} from '../../../../../ui-components'\nimport {Button} from '../../../../../ui-components/button/Button'\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {Banner} from './Banner'\n\nconst Image = styled.img`\n  object-fit: cover;\n  width: 100%;\n  height: 100%;\n  height: 180px;\n  display: flex;\n`\nconst CANVAS_IMAGE_URL =\n  'https://cdn.sanity.io/images/pyrmmpch/production/b47224e2f3a7d1747e43b9da1ac31739250e628b-632x376.png'\n\nconst CANVAS_APP_NAME = 'Canvas'\nconst CanvasPopoverContent = ({onClose}: {onClose: () => void}) => {\n  const {t} = useTranslation(structureLocaleNamespace)\n  const ref = useRef<HTMLDivElement | null>(null)\n  useClickOutsideEvent(onClose, () => [ref.current])\n\n  return (\n    <Card radius={3} overflow={'hidden'} width={0} ref={ref}>\n      <Container width={0}>\n        <Image src={CANVAS_IMAGE_URL} alt={'Canvas'} />\n        <Flex paddingX={4} paddingBottom={4} paddingTop={3} direction={'column'}>\n          <Flex paddingY={1} gap={2}>\n            <Text size={1} weight=\"semibold\">\n              {CANVAS_APP_NAME}\n            </Text>\n            <Text size={1} muted>\n              <ComposeSparklesIcon />\n            </Text>\n          </Flex>\n          <Box paddingTop={3}>\n            <Heading size={1}>{t('canvas.banner.popover-heading')}</Heading>\n          </Box>\n          <Box paddingTop={4}>\n            <Text size={1}>{t('canvas.banner.popover-description')}</Text>\n          </Box>\n        </Flex>\n        <Flex width=\"full\" gap={3} justify=\"flex-end\" paddingX={4} paddingBottom={4}>\n          <Button\n            mode=\"bleed\"\n            text={t('canvas.banner.popover-button-text')}\n            autoFocus\n            tone=\"primary\"\n            href=\"https://snty.link/canvas-docs\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            as=\"a\"\n            iconRight={LaunchIcon}\n          />\n        </Flex>\n      </Container>\n    </Card>\n  )\n}\nconst CanvasLinkedBannerContent = ({documentId}: {documentId: string}) => {\n  const {t} = useTranslation(structureLocaleNamespace)\n  const [open, setOpen] = useState(false)\n  const documentVariantType = getDocumentVariantType(documentId)\n  const variantText = useMemo(() => {\n    if (documentVariantType === 'published') return t('canvas.banner.linked-text.published')\n    if (documentVariantType === 'draft') return t('canvas.banner.linked-text.draft')\n    return t('canvas.banner.linked-text.version')\n  }, [documentVariantType, t])\n\n  const togglePopover = useCallback(() => setOpen((prev) => !prev), [])\n  const onClose = useCallback(() => setOpen(false), [])\n  return (\n    <Flex align={'center'} gap={2}>\n      <Text size={1} weight=\"medium\">\n        {variantText}\n      </Text>\n      <Popover\n        open={open}\n        size={0}\n        tone=\"default\"\n        portal\n        placement=\"bottom-start\"\n        content={<CanvasPopoverContent onClose={onClose} />}\n      >\n        <Button\n          tooltipProps={null}\n          mode=\"bleed\"\n          tone=\"default\"\n          icon={InfoOutlineIcon}\n          onClick={togglePopover}\n        />\n      </Popover>\n    </Flex>\n  )\n}\n\nexport function CanvasLinkedBanner() {\n  const {documentId, displayed} = useDocumentPane()\n  const {t} = useTranslation(structureLocaleNamespace)\n  const id = displayed?._id || documentId\n  const {companionDoc} = useCanvasCompanionDoc(id)\n  const navigateToCanvas = useNavigateToCanvasDoc(companionDoc?.canvasDocumentId, 'banner')\n\n  if (!companionDoc) return null\n\n  return (\n    <Banner\n      tone=\"neutral\"\n      data-test-id=\"canvas-linked-banner\"\n      paddingY={0}\n      content={<CanvasLinkedBannerContent documentId={id} />}\n      action={{\n        mode: 'ghost',\n        text: t('canvas.banner.edit-in-canvas-action'),\n        onClick: navigateToCanvas,\n      }}\n    />\n  )\n}\n","import {WarningOutlineIcon} from '@sanity/icons'\nimport {type ObjectSchemaType} from '@sanity/types'\nimport {Flex, Text} from '@sanity/ui'\nimport {type ComponentType, useCallback} from 'react'\nimport {\n  getVersionInlineBadge,\n  isPerspectiveWriteable,\n  isReleaseDocument,\n  type PerspectiveNotWriteableReason,\n  ReleasesNav,\n  type ReleasesNavMenuItemPropsGetter,\n  type SelectedPerspective,\n  Translate,\n  useTranslation,\n  useWorkspace,\n} from 'sanity'\n\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {Banner} from './Banner'\n\ninterface Props {\n  schemaType: ObjectSchemaType\n  selectedPerspective: SelectedPerspective\n  reason: PerspectiveNotWriteableReason\n}\n\n/**\n * This banner is displayed when a user attempts to create a new document in a perspective that's\n * not writeable. For example:\n *\n * - The published perspective (unless the schema type supports live-editing).\n * - Any release that's locked.\n */\nexport const ChooseNewDocumentDestinationBanner: ComponentType<Props> = ({\n  schemaType,\n  selectedPerspective,\n  reason,\n}) => {\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const {\n    document: {\n      drafts: {enabled: isDraftModelEnabled},\n    },\n  } = useWorkspace()\n\n  const menuItemProps = useCallback<ReleasesNavMenuItemPropsGetter>(\n    ({perspective}) => ({\n      disabled: !isPerspectiveWriteable({\n        selectedPerspective: perspective,\n        isDraftModelEnabled,\n        schemaType,\n      }).result,\n    }),\n    [isDraftModelEnabled, schemaType],\n  )\n\n  return (\n    <Banner\n      tone=\"caution\"\n      icon={WarningOutlineIcon}\n      content={\n        <Flex align=\"center\" gap={2}>\n          <Text size={1}>\n            {reason === 'PUBLISHED_NOT_WRITEABLE' &&\n              t('banners.choose-new-document-destination.cannot-create-published-document')}\n            {reason === 'DRAFTS_NOT_WRITEABLE' &&\n              t('banners.choose-new-document-destination.cannot-create-draft-document')}\n            {reason === 'RELEASE_NOT_ACTIVE' && isReleaseDocument(selectedPerspective) && (\n              <Translate\n                t={t}\n                i18nKey=\"banners.choose-new-document-destination.release-inactive\"\n                values={{\n                  title: selectedPerspective.metadata.title,\n                }}\n                components={{\n                  VersionBadge: getVersionInlineBadge(selectedPerspective),\n                }}\n              />\n            )}\n            <> {t('banners.choose-new-document-destination.choose-destination')}</>\n          </Text>\n          <ReleasesNav menuItemProps={menuItemProps} />\n        </Flex>\n      }\n    />\n  )\n}\n","import {getSanityCreateLinkMetadata, useSanityCreateConfig} from 'sanity'\n\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {Banner} from './Banner'\n\nexport function CreateLinkedBanner() {\n  const {value} = useDocumentPane()\n  const {documentLinkedBannerContent: CreateLinkedBannerContent} =\n    useSanityCreateConfig().components ?? {}\n  const createLinkMetadata = getSanityCreateLinkMetadata(value)\n\n  if (!CreateLinkedBannerContent || !createLinkMetadata) return null\n\n  return (\n    <Banner\n      tone=\"transparent\"\n      data-test-id=\"sanity-create-read-only-banner\"\n      content={<CreateLinkedBannerContent metadata={createLinkMetadata} />}\n    />\n  )\n}\n","import {Text, useToast} from '@sanity/ui'\nimport {useCallback, useEffect, useState} from 'react'\nimport {\n  getReleaseIdFromReleaseDocumentId,\n  getReleaseTone,\n  getVersionInlineBadge,\n  LATEST,\n  type ReleaseDocument,\n  Translate,\n  useConditionalToast,\n  useTranslation,\n  useVersionOperations,\n} from 'sanity'\n\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {Banner} from './Banner'\n\n// How long to wait after user hit the \"Add to release\"-button before displaying the \"waiting…\" toast\nconst TOAST_DELAY = 1000\n\ntype VersionCreateState = {\n  status: 'creating' | 'created'\n  lastUpdate: Date\n}\n\nexport function DocumentNotInReleaseBanner({\n  documentId,\n  currentRelease,\n  isScheduledRelease,\n}: {\n  documentId: string\n  currentRelease: ReleaseDocument\n  isScheduledRelease?: boolean\n}): React.JSX.Element {\n  const tone = getReleaseTone(currentRelease ?? LATEST)\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {t: tCore} = useTranslation()\n\n  const {createVersion} = useVersionOperations()\n\n  const [versionCreateState, setVersionCreateState] = useState<VersionCreateState | undefined>()\n  const toast = useToast()\n  const handleAddToRelease = useCallback(async () => {\n    if (currentRelease._id) {\n      setVersionCreateState({status: 'creating', lastUpdate: new Date()})\n      try {\n        await createVersion(getReleaseIdFromReleaseDocumentId(currentRelease._id), documentId)\n        setVersionCreateState({status: 'created', lastUpdate: new Date()})\n      } catch (err) {\n        toast.push({\n          status: 'error',\n          closable: true,\n          title: t('banners.release.error.title'),\n          description: t('banners.release.error.description', {message: err.message}),\n        })\n        // Note: we only want to reset pending state in case of failure, not unconditionally the request completes (i.e. in a finally clause)\n        // this is because the UI won't reflect that the document was successfully added to the release until we get the result back over the listener\n        // once the listener event that adds the document to the release arrives the UI knows that a version exists,\n        // and this banner will not be rendered anymore\n        setVersionCreateState(undefined)\n      }\n    }\n  }, [createVersion, currentRelease._id, documentId, t, toast])\n\n  const now = useCurrentTime(200)\n\n  useConditionalToast({\n    status: 'info',\n    id: 'add-document-to-release',\n    enabled: Boolean(\n      versionCreateState?.status === 'created' &&\n        now.getTime() - versionCreateState.lastUpdate.getTime() > TOAST_DELAY,\n    ),\n    closable: true,\n    title: t('banners.release.waiting.title'),\n    description: t('banners.release.waiting.description'),\n  })\n\n  return (\n    <Banner\n      tone={tone}\n      content={\n        <Text size={1}>\n          <Translate\n            i18nKey=\"banners.release.not-in-release\"\n            t={t}\n            values={{\n              title:\n                currentRelease?.metadata?.title || tCore('release.placeholder-untitled-release'),\n            }}\n            components={{\n              VersionBadge: getVersionInlineBadge(currentRelease),\n            }}\n          />\n        </Text>\n      }\n      // Adding to a scheduled release is not allowed\n      action={\n        isScheduledRelease\n          ? undefined\n          : {\n              text: t('banners.release.action.add-to-release'),\n              tone: tone,\n              disabled: Boolean(versionCreateState),\n              onClick: handleAddToRelease,\n              mode: 'default',\n            }\n      }\n    />\n  )\n}\n\nfunction useCurrentTime(updateIntervalMs: number): Date {\n  const [currentTime, setCurrentTime] = useState(new Date())\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      setCurrentTime(new Date())\n    }, updateIntervalMs)\n    return () => clearInterval(intervalId)\n  }, [updateIntervalMs])\n  return currentTime\n}\n","import {defineEvent} from '@sanity/telemetry'\n\ninterface TypeInfo {\n  liveEditResolveType: 'publish' | 'discard'\n}\n\n/**\n * When a draft in a live edit document is published\n * @internal\n */\nexport const ResolvedLiveEdit = defineEvent<TypeInfo>({\n  name: 'LiveEdit Draft Resolved',\n  version: 1,\n  description: 'User resolved a draft of a live edit document to continue editing',\n})\n","import {type SanityDocument} from '@sanity/client'\nimport {ErrorOutlineIcon} from '@sanity/icons'\nimport {useTelemetry} from '@sanity/telemetry/react'\nimport {Flex, Text} from '@sanity/ui'\nimport {type ComponentType, useCallback, useEffect, useState} from 'react'\nimport {\n  getDraftId,\n  getPublishedId,\n  type ObjectSchemaType,\n  Translate,\n  useDocumentOperation,\n  useTranslation,\n} from 'sanity'\n\nimport {Button} from '../../../../../ui-components'\nimport {useDiffViewRouter} from '../../../../diffView/hooks/useDiffViewRouter'\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {ResolvedLiveEdit} from './__telemetry__/DraftLiveEditBanner.telemetry'\nimport {Banner} from './Banner'\n\ninterface ObsoleteDraftBannerProps {\n  displayed: Partial<SanityDocument> | null\n  documentId: string\n  schemaType: ObjectSchemaType\n  i18nKey: string\n  /**\n   * Whether the user is blocked from editing the document while an obsolete draft exists.\n   */\n  isEditBlocking?: boolean\n}\n\nexport const ObsoleteDraftBanner: ComponentType<ObsoleteDraftBannerProps> = ({\n  displayed,\n  documentId,\n  schemaType,\n  i18nKey,\n  isEditBlocking,\n}) => {\n  const {t} = useTranslation(structureLocaleNamespace)\n  const [isPublishing, setPublishing] = useState(false)\n  const [isDiscarding, setDiscarding] = useState(false)\n  const telemetry = useTelemetry()\n\n  const {publish, discardChanges} = useDocumentOperation(documentId, displayed?._type || '')\n\n  const handlePublish = useCallback(() => {\n    publish.execute()\n    setPublishing(true)\n    telemetry.log(ResolvedLiveEdit, {liveEditResolveType: 'publish'})\n  }, [publish, telemetry])\n\n  const handleDiscard = useCallback(() => {\n    discardChanges.execute()\n    setDiscarding(true)\n    telemetry.log(ResolvedLiveEdit, {liveEditResolveType: 'discard'})\n  }, [discardChanges, telemetry])\n\n  useEffect(() => {\n    return () => {\n      setPublishing(false)\n      setDiscarding(false)\n    }\n  })\n\n  const diffViewRouter = useDiffViewRouter()\n\n  const compareDraft = useCallback(() => {\n    if (typeof displayed?._id === 'undefined') {\n      return\n    }\n\n    diffViewRouter.navigateDiffView({\n      mode: 'version',\n      previousDocument: {\n        type: schemaType.name,\n        id: getPublishedId(displayed?._id),\n      },\n      nextDocument: {\n        type: schemaType.name,\n        id: getDraftId(displayed?._id),\n      },\n    })\n  }, [diffViewRouter, displayed?._id, schemaType.name])\n\n  return (\n    <Banner\n      content={\n        <Flex align=\"center\" justify=\"space-between\" gap={2}>\n          <Text size={1} weight=\"medium\">\n            <Translate t={t} i18nKey={i18nKey} values={{schemaType: schemaType.title}} />\n          </Text>\n          <Button\n            text={t('banners.obsolete-draft.actions.compare-draft.text')}\n            mode=\"ghost\"\n            onClick={compareDraft}\n          />\n          <Button\n            onClick={handlePublish}\n            text={t('banners.obsolete-draft.actions.publish-draft.text')}\n            tooltipProps={\n              isEditBlocking\n                ? {\n                    content: t('banners.live-edit-draft-banner.publish.tooltip'),\n                  }\n                : {}\n            }\n            loading={isPublishing}\n            tone=\"positive\"\n          />\n          <Button\n            onClick={handleDiscard}\n            text={t('banners.obsolete-draft.actions.discard-draft.text')}\n            tooltipProps={\n              isEditBlocking\n                ? {\n                    content: t('banners.live-edit-draft-banner.discard.tooltip'),\n                  }\n                : {}\n            }\n            loading={isDiscarding}\n            tone=\"caution\"\n          />\n        </Flex>\n      }\n      data-testid=\"live-edit-type-banner\"\n      icon={ErrorOutlineIcon}\n    />\n  )\n}\n","import {Flex, Text} from '@sanity/ui'\nimport {useCallback, useMemo} from 'react'\nimport {\n  getReleaseIdFromReleaseDocumentId,\n  getReleaseTone,\n  getVersionFromId,\n  isVersionId,\n  Translate,\n  useActiveReleases,\n  useDocumentVersions,\n  useOnlyHasVersions,\n  useSetPerspective,\n  useTranslation,\n  VersionInlineBadge,\n} from 'sanity'\n\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {Banner} from './Banner'\n\nexport function OpenReleaseToEditBanner({\n  documentId,\n  isPinnedDraftOrPublished,\n}: {\n  documentId: string\n  isPinnedDraftOrPublished: boolean\n}): React.JSX.Element | null {\n  const onlyHasVersions = useOnlyHasVersions({documentId})\n\n  /** this banner should only be rendered in specific cases\n   * 1. when the document is not a draft or published\n   * 2. when the document only has version or versions\n   * 3. when the global perspective is not set (published or draft)\n   */\n\n  if (!isVersionId(documentId)) {\n    return null\n  }\n\n  if (!onlyHasVersions || !isPinnedDraftOrPublished) {\n    return null\n  }\n\n  return <OpenReleaseToEditBannerInner documentId={documentId} />\n}\n\nexport function OpenReleaseToEditBannerInner({\n  documentId,\n}: {\n  documentId: string\n}): React.JSX.Element {\n  const {data: activeReleases} = useActiveReleases()\n  const setPerspective = useSetPerspective()\n  const releaseId = getVersionFromId(documentId) ?? ''\n  const currentVersion = useMemo(\n    () => activeReleases.find((version) => version._id.includes(releaseId)),\n    [activeReleases, releaseId],\n  )\n  const {t: tCore} = useTranslation()\n\n  const {data: documentVersions} = useDocumentVersions({documentId})\n\n  const documentVersionsTitleList = useMemo(\n    () =>\n      activeReleases\n        .filter((version) => {\n          return documentVersions.find((release) => {\n            const r = getVersionFromId(release) ?? ''\n            return getReleaseIdFromReleaseDocumentId(version._id) === r\n          })\n        })\n        .map((version) => version.metadata.title || tCore('release.placeholder-untitled-release')),\n    [activeReleases, documentVersions, tCore],\n  )\n  const tone = currentVersion && getReleaseTone(currentVersion)\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const handleGoToEdit = useCallback(async () => {\n    setPerspective(releaseId)\n  }, [releaseId, setPerspective])\n\n  return (\n    <Banner\n      tone={tone}\n      data-testid=\"open-release-to-edit-banner\"\n      content={\n        <Text size={1}>\n          <Flex direction={'row'} gap={1} wrap=\"wrap\">\n            {documentVersionsTitleList.length > 1 ? (\n              <Translate\n                t={t}\n                i18nKey=\"banners.release.navigate-to-edit-description-multiple\"\n                components={{\n                  VersionBadge: () => (\n                    <VersionInlineBadge> {documentVersionsTitleList[0]}</VersionInlineBadge>\n                  ),\n                }}\n                values={{count: documentVersionsTitleList.length - 1}}\n              />\n            ) : (\n              <Translate\n                t={t}\n                i18nKey=\"banners.release.navigate-to-edit-description-single\"\n                components={{\n                  VersionBadge: () => (\n                    <VersionInlineBadge> {documentVersionsTitleList[0]}</VersionInlineBadge>\n                  ),\n                }}\n              />\n            )}\n          </Flex>\n        </Text>\n      }\n      action={{\n        text: t('banners.release.action.open-to-edit'),\n        tone: tone,\n        onClick: handleGoToEdit,\n        mode: 'default',\n      }}\n    />\n  )\n}\n","import {WarningOutlineIcon} from '@sanity/icons'\nimport {Text} from '@sanity/ui'\nimport {useTranslation} from 'sanity'\n\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {Banner} from './Banner'\n\nexport function RevisionNotFoundBanner() {\n  const {revisionNotFound} = useDocumentPane()\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  if (!revisionNotFound) return null\n\n  return (\n    <Banner\n      tone=\"caution\"\n      data-test-id=\"revision-not-found-banner\"\n      icon={WarningOutlineIcon}\n      content={<Text size={1}>{t('banners.revision-not-found.description')}</Text>}\n    />\n  )\n}\n","import {LockIcon} from '@sanity/icons'\nimport {Text} from '@sanity/ui'\nimport {\n  formatRelativeLocalePublishDate,\n  getReleaseTone,\n  LATEST,\n  type ReleaseDocument,\n  Translate,\n  useTranslation,\n} from 'sanity'\n\nimport {Banner} from './Banner'\n\nexport function ScheduledReleaseBanner({\n  currentRelease,\n}: {\n  currentRelease: ReleaseDocument\n}): React.JSX.Element {\n  const tone = getReleaseTone(currentRelease ?? LATEST)\n\n  const {t: tCore} = useTranslation()\n\n  return (\n    <Banner\n      tone={tone}\n      icon={LockIcon}\n      content={\n        <Text size={1}>\n          <Translate\n            t={tCore}\n            i18nKey=\"release.banner.scheduled-for-publishing-on\"\n            values={{\n              date: formatRelativeLocalePublishDate(currentRelease),\n            }}\n          />\n        </Text>\n      }\n    />\n  )\n}\n","import {UnpublishIcon} from '@sanity/icons'\nimport {Stack, Text} from '@sanity/ui'\nimport {\n  getVersionInlineBadge,\n  isGoingToUnpublish,\n  isReleaseDocument,\n  Translate,\n  usePerspective,\n  useTranslation,\n} from 'sanity'\n\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {Banner} from './Banner'\n\nexport function UnpublishedDocumentBanner() {\n  const {value, editState} = useDocumentPane()\n  const {selectedPerspective} = usePerspective()\n  const isCurrentVersionGoingToUnpublish =\n    isGoingToUnpublish(value) || (editState?.version && isGoingToUnpublish(editState?.version))\n\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {t: tCore} = useTranslation()\n\n  if (isReleaseDocument(selectedPerspective) && isCurrentVersionGoingToUnpublish) {\n    const title =\n      selectedPerspective.metadata?.title || tCore('release.placeholder-untitled-release')\n\n    return (\n      <Banner\n        tone=\"critical\"\n        content={\n          <Stack space={2}>\n            <Text size={1}>\n              <Translate\n                t={t}\n                i18nKey=\"banners.unpublished-release-banner.text\"\n                values={{\n                  title,\n                }}\n                components={{\n                  VersionBadge: getVersionInlineBadge(selectedPerspective),\n                }}\n              />\n            </Text>\n            <Text size={1}>\n              <Translate t={t} i18nKey=\"banners.unpublished-release-banner.text-with-published\" />\n            </Text>\n          </Stack>\n        }\n        icon={UnpublishIcon}\n      />\n    )\n  }\n  return null\n}\n","import {InfoOutlineIcon} from '@sanity/icons'\nimport {type ObjectSchemaType} from '@sanity/types'\nimport {Heading, Inline, Stack, Text} from '@sanity/ui'\nimport {useTranslation} from 'sanity'\nimport {css, styled} from 'styled-components'\n\nimport {Tooltip} from '../../../../../ui-components'\nimport {structureLocaleNamespace} from '../../../../i18n'\n\ninterface DocumentHeaderProps {\n  documentId: string\n  schemaType: ObjectSchemaType\n  title?: string\n}\n\n/**\n * Use CSS container queries to conditionally render headings at different sizes.\n * We hide this entire container (including the document type) if container queries\n * not supported in the current browser.\n *\n * Note that usage of container queries in `styled-components` is only supported in `6.x`.\n * As such, studios that include `\"styled-components\": \"<6\"` as a dependency will only see\n * the largest heading size here, even if their browser supports it!\n */\n\nexport const TitleContainer = styled(Stack)`\n  ${({theme}) => {\n    return css`\n      @supports not (container-type: inline-size) {\n        display: none !important;\n      }\n\n      container-type: inline-size;\n\n      [data-heading] {\n        font-size: ${theme.sanity.fonts.heading.sizes[4].fontSize}px;\n        line-height: ${theme.sanity.fonts.heading.sizes[4].lineHeight}px;\n        overflow-wrap: break-word;\n        text-wrap: pretty;\n      }\n\n      @container (max-width: 560px) {\n        [data-heading] {\n          font-size: ${theme.sanity.fonts.heading.sizes[3].fontSize}px;\n          line-height: ${theme.sanity.fonts.heading.sizes[3].lineHeight}px;\n        }\n      }\n\n      @container (max-width: 420px) {\n        [data-heading] {\n          font-size: ${theme.sanity.fonts.heading.sizes[2].fontSize}px;\n          line-height: ${theme.sanity.fonts.heading.sizes[2].lineHeight}px;\n        }\n      }\n    `\n  }}\n`\n\n/**\n * Header containing current document title and type.\n * Document type is hidden if the document `_id` matches the current document `_type`.\n * The entire header is hidden if container queries are not supported.\n */\nexport const FormHeader = ({documentId, schemaType, title}: DocumentHeaderProps) => {\n  const isSingleton = documentId === schemaType.name\n  const description = schemaType.description\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  if (schemaType.__experimental_formPreviewTitle === false) {\n    return null\n  }\n  return (\n    <TitleContainer marginBottom={6} space={4}>\n      {!isSingleton && (\n        <Inline space={1}>\n          <Text muted size={1}>\n            {schemaType.title ?? schemaType.name}\n          </Text>\n          {description && (\n            <Tooltip content={description} placement=\"right\">\n              <InfoOutlineIcon data-testid=\"schema-description-icon\" />\n            </Tooltip>\n          )}\n        </Inline>\n      )}\n      <Heading as=\"h2\" data-heading muted={!title} data-testid=\"document-panel-document-title\">\n        {title ?? t('document-view.form-view.form-title-fallback')}\n      </Heading>\n    </TitleContainer>\n  )\n}\n","import {Box, Container, Flex, focusFirstDescendant, Spinner, Text} from '@sanity/ui'\nimport {type FormEvent, forwardRef, useCallback, useEffect, useMemo, useState} from 'react'\nimport {tap} from 'rxjs/operators'\nimport {\n  createPatchChannel,\n  type DocumentMutationEvent,\n  type DocumentRebaseEvent,\n  FormBuilder,\n  type FormDocumentValue,\n  fromMutationPatches,\n  type PatchMsg,\n  PresenceOverlay,\n  useConditionalToast,\n  useDocumentPresence,\n  useDocumentStore,\n  usePerspective,\n  useTranslation,\n} from 'sanity'\nimport {useEffectEvent} from 'use-effect-event'\n\nimport {Delay} from '../../../../components'\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {useDocumentTitle} from '../../useDocumentTitle'\nimport {FormHeader} from './FormHeader'\n\ninterface FormViewProps {\n  hidden: boolean\n  margins: [number, number, number, number]\n}\n\nconst preventDefault = (ev: FormEvent) => ev.preventDefault()\n\nexport const FormView = forwardRef<HTMLDivElement, FormViewProps>(function FormView(props, ref) {\n  const {hidden, margins} = props\n\n  const {\n    collapsedFieldSets,\n    collapsedPaths,\n    displayed: value,\n    editState,\n    documentId,\n    documentType,\n    fieldActions,\n    onChange,\n    validation,\n    ready,\n    formState,\n    onFocus,\n    connectionState,\n    onBlur,\n    onSetCollapsedPath,\n    onPathOpen,\n    onSetCollapsedFieldSet,\n    onSetActiveFieldGroup,\n    openPath,\n  } = useDocumentPane()\n  const {selectedReleaseId} = usePerspective()\n  const documentStore = useDocumentStore()\n  const presence = useDocumentPresence(documentId)\n  const {title} = useDocumentTitle()\n  // The `patchChannel` is an INTERNAL publish/subscribe channel that we use to notify form-builder\n  // nodes about both remote and local patches.\n  // - Used by the Portable Text input to modify selections.\n  // - Used by `withDocument` to reset value.\n  const [patchChannel] = useState(() => createPatchChannel())\n\n  const isLocked = editState?.transactionSyncLock?.enabled\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const conditionalToastParams = useMemo(\n    () => ({\n      id: `sync-lock`,\n      status: 'warning' as const,\n      enabled: isLocked,\n      title: t('document-view.form-view.sync-lock-toast.title'),\n      description: t('document-view.form-view.sync-lock-toast.description'),\n      closable: true,\n    }),\n    [isLocked, t],\n  )\n\n  useConditionalToast(conditionalToastParams)\n\n  useEffect(() => {\n    const sub = documentStore.pair\n      .documentEvents(documentId, documentType, selectedReleaseId)\n      .pipe(\n        tap((event) => {\n          if (event.type === 'mutation') {\n            patchChannel.publish(prepareMutationEvent(event))\n          }\n\n          if (event.type === 'rebase') {\n            patchChannel.publish(prepareRebaseEvent(event))\n          }\n        }),\n      )\n      .subscribe()\n\n    return () => {\n      sub.unsubscribe()\n    }\n  }, [documentId, documentStore, documentType, patchChannel, selectedReleaseId])\n\n  const hasRev = Boolean(value?._rev)\n  const handleInitialValue = useEffectEvent(() => {\n    // this is a workaround for an issue that caused the document pushed to withDocument to get\n    // stuck at the first initial value.\n    // This effect is triggered only when the document goes from not having a revision, to getting one\n    // so it will kick in as soon as the document is received from the backend\n    patchChannel.publish({\n      type: 'mutation',\n      patches: [],\n      snapshot: value,\n    })\n  })\n  useEffect(() => {\n    if (hasRev) {\n      handleInitialValue()\n    }\n    // React to changes in hasRev only\n  }, [hasRev])\n\n  const [formRef, setFormRef] = useState<null | HTMLDivElement>(null)\n\n  // We only want to run it on first mount\n  const [focusedFirstDescendant, setFocusedFirstDescendant] = useState(false)\n  useEffect(() => {\n    // Only focus on the first descendant if there is not already a focus path\n    // This is to avoid stealing focus from intent links\n    if (!focusedFirstDescendant && ready && !formState?.focusPath.length && formRef) {\n      setFocusedFirstDescendant(true)\n      focusFirstDescendant(formRef)\n    }\n  }, [focusedFirstDescendant, formRef, formState?.focusPath.length, ready])\n\n  const setRef = useCallback(\n    (node: HTMLDivElement | null) => {\n      setFormRef(node)\n      if (typeof ref === 'function') {\n        ref(node)\n      } else if (ref) {\n        ref.current = node\n      }\n    },\n    [ref],\n  )\n\n  const isReadOnly = connectionState === 'reconnecting' || formState?.readOnly || !editState?.ready\n\n  return (\n    <Container\n      hidden={hidden}\n      paddingX={4}\n      paddingTop={5}\n      paddingBottom={9}\n      sizing=\"border\"\n      width={1}\n    >\n      <PresenceOverlay margins={margins}>\n        <Box\n          as=\"form\"\n          onSubmit={preventDefault}\n          ref={setRef}\n          data-testid=\"form-view\"\n          data-read-only={isReadOnly ? 'true' : undefined}\n        >\n          {connectionState === 'connecting' && !editState?.draft && !editState?.published ? (\n            <Delay ms={300}>\n              {/* TODO: replace with loading block */}\n              <Flex align=\"center\" direction=\"column\" height=\"fill\" justify=\"center\">\n                <Spinner muted />\n                <Box marginTop={3}>\n                  <Text align=\"center\" muted size={1}>\n                    {t('document-view.form-view.loading')}\n                  </Text>\n                </Box>\n              </Flex>\n            </Delay>\n          ) : formState === null || hidden ? (\n            <Box padding={2}>\n              <Text>{t('document-view.form-view.form-hidden')}</Text>\n            </Box>\n          ) : (\n            <>\n              <FormHeader documentId={documentId} schemaType={formState.schemaType} title={title} />\n              <FormBuilder\n                __internal_fieldActions={fieldActions}\n                __internal_patchChannel={patchChannel}\n                changed={formState.changed}\n                collapsedFieldSets={collapsedFieldSets}\n                collapsedPaths={collapsedPaths}\n                focused={formState.focused}\n                focusPath={formState.focusPath}\n                groups={formState.groups}\n                id=\"root\"\n                members={formState.members}\n                onChange={onChange}\n                onFieldGroupSelect={onSetActiveFieldGroup}\n                onPathBlur={onBlur}\n                onPathFocus={onFocus}\n                onPathOpen={onPathOpen}\n                onSetFieldSetCollapsed={onSetCollapsedFieldSet}\n                onSetPathCollapsed={onSetCollapsedPath}\n                openPath={openPath}\n                presence={presence}\n                readOnly={isReadOnly}\n                schemaType={formState.schemaType}\n                validation={validation}\n                value={\n                  // note: the form state doesn't have a typed concept of a \"document\" value\n                  // but these should be compatible\n                  formState.value as FormDocumentValue\n                }\n              />\n            </>\n          )}\n        </Box>\n      </PresenceOverlay>\n    </Container>\n  )\n})\n\nfunction prepareMutationEvent(event: DocumentMutationEvent): PatchMsg {\n  const patches = event.mutations.map((mut) => mut.patch).filter(Boolean)\n\n  return {\n    type: 'mutation',\n    snapshot: event.document,\n    patches: fromMutationPatches(event.origin, patches),\n  }\n}\n\nfunction prepareRebaseEvent(event: DocumentRebaseEvent): PatchMsg {\n  const remotePatches = event.remoteMutations.map((mut) => mut.patch).filter(Boolean)\n  const localPatches = event.localMutations.map((mut) => mut.patch).filter(Boolean)\n\n  return {\n    type: 'rebase',\n    snapshot: event.document,\n    patches: fromMutationPatches('remote', remotePatches).concat(\n      fromMutationPatches('local', localPatches),\n    ),\n  }\n}\n","import {TabList} from '@sanity/ui'\nimport {type ComponentType, type ReactNode, useCallback} from 'react'\n\nimport {Tab} from '../../../../../ui-components'\nimport {usePaneRouter} from '../../../../components'\nimport {useDocumentPane} from '../../useDocumentPane'\n\n/**\n * This component will render the tabs for the document pane, following this rules:\n *  if the view tabs are wider than 200px it collapses to a dropdown\n *  if the header is smaller than 480px it collapses to a dropdown\n * For this we need to first measure the pane header width and then the tabs width.\n *\n * Gotcha, if the tabs are wider han 200px it renders a dropdown and if then the tabs change to be smaller than 200px\n * it will not change back to tabs, this is a limitation of the current implementation but an ok tradeoff to avoid mounting\n * ghost elements just to measure the width.\n */\nexport function DocumentHeaderTabs() {\n  const {activeViewId, paneKey, views} = useDocumentPane()\n\n  const tabPanelId = `${paneKey}tabpanel`\n\n  return (\n    <TabList space={1}>\n      {views.map((view, index) => (\n        <DocumentHeaderTab\n          key={view.id}\n          icon={view.icon}\n          id={`${paneKey}tab-${view.id}`}\n          isActive={activeViewId === view.id}\n          label={view.title}\n          tabPanelId={tabPanelId}\n          viewId={index === 0 ? null : (view.id ?? null)}\n        />\n      ))}\n    </TabList>\n  )\n}\n\nfunction DocumentHeaderTab(props: {\n  icon?: ComponentType | ReactNode\n  id: string\n  isActive: boolean\n  label: string\n  tabPanelId: string\n  viewId: string | null\n}) {\n  const {icon, id, isActive, label, tabPanelId, viewId, ...rest} = props\n  const {ready, editState} = useDocumentPane()\n  const {setView} = usePaneRouter()\n  const handleClick = useCallback(() => setView(viewId), [setView, viewId])\n\n  return (\n    <Tab\n      {...rest} // required to enable <TabList> keyboard navigation\n      aria-controls={tabPanelId}\n      disabled={!ready && !editState?.draft && !editState?.published}\n      icon={icon}\n      id={id}\n      label={label}\n      onClick={handleClick}\n      selected={isActive}\n    />\n  )\n}\n","import {useTranslation} from 'sanity'\n\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {useDocumentTitle} from '../../useDocumentTitle'\n\nexport function DocumentHeaderTitle(): React.JSX.Element {\n  const {connectionState, schemaType, title, value: documentValue} = useDocumentPane()\n  const {title: documentTitle, error} = useDocumentTitle()\n  const subscribed = Boolean(documentValue)\n\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  if (connectionState === 'connecting' && !subscribed) {\n    return <></>\n  }\n\n  if (title) {\n    return <>{title}</>\n  }\n\n  if (!documentValue) {\n    return (\n      <>\n        {t('panes.document-header-title.new.text', {\n          schemaType: schemaType?.title || schemaType?.name,\n        })}\n      </>\n    )\n  }\n\n  if (error) {\n    return <>{t('panes.document-header-title.error.text', {error: error})}</>\n  }\n\n  return (\n    <>\n      {documentTitle || (\n        <span style={{color: 'var(--card-muted-fg-color)'}}>\n          {t('panes.document-header-title.untitled.text')}\n        </span>\n      )}\n    </>\n  )\n}\n","import {StarFilledIcon, StarIcon} from '@sanity/icons'\nimport {Text} from '@sanity/ui'\nimport {type ComponentType} from 'react'\nimport {useManageFavorite, type UseManageFavoriteProps, useTranslation} from 'sanity'\n\nimport {Button} from '../../../../../ui-components/button/Button'\nimport {structureLocaleNamespace} from '../../../../i18n'\n\nexport const FavoriteToggle: ComponentType<UseManageFavoriteProps & {documentExists: boolean}> = ({\n  documentExists,\n  ...props\n}) => {\n  const {isFavorited, isReady, favorite, unfavorite} = useManageFavorite(props)\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const description = t(\n    isFavorited\n      ? 'document.favorites.remove-from-favorites'\n      : 'document.favorites.add-to-favorites',\n  )\n\n  return (\n    <Button\n      mode=\"bleed\"\n      onClick={isFavorited ? unfavorite : favorite}\n      disabled={!isReady || !documentExists}\n      aria-label={description}\n      aria-live=\"assertive\"\n      tooltipProps={{\n        content: <Text size={1}>{description}</Text>,\n        placement: 'right',\n      }}\n    >\n      <Text size={1}>{isFavorited ? <StarFilledIcon /> : <StarIcon />}</Text>\n    </Button>\n  )\n}\n","import {ArrowLeftIcon} from '@sanity/icons'\nimport {memo, useMemo} from 'react'\nimport {CapabilityGate, getPublishedId, useActiveWorkspace, useTranslation} from 'sanity'\n\nimport {Button} from '../../../../../ui-components'\nimport {PaneHeader, usePane, usePaneRouter} from '../../../../components'\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {useStructureTool} from '../../../../useStructureTool'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {DocumentHeaderTabs} from './DocumentHeaderTabs'\nimport {DocumentHeaderTitle} from './DocumentHeaderTitle'\nimport {FavoriteToggle} from './FavoriteToggle'\n\n/**\n * When not collapsed this component will render the title and the tabs.\n * This component will render inside the document panel and not with the DocumentPanelHeader\n */\nexport const DocumentPanelSubHeader = memo(function DocumentPanelHeader() {\n  const {editState, connectionState, views, documentId, displayed} = useDocumentPane()\n  const {features} = useStructureTool()\n  const {index, BackLink} = usePaneRouter()\n  const {activeWorkspace} = useActiveWorkspace()\n  const publishedDocId = getPublishedId(documentId)\n\n  const showTabs = views.length > 1\n\n  const {collapsed, isLast} = usePane()\n  // Prevent focus if this is the last (non-collapsed) pane.\n  const tabIndex = isLast && !collapsed ? -1 : 0\n\n  // show the back button if both the feature is enabled and the current pane\n  // is not the first\n  const showBackButton = features.backButton && index > 0\n\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const title = useMemo(() => <DocumentHeaderTitle />, [])\n  const tabs = useMemo(() => showTabs && <DocumentHeaderTabs />, [showTabs])\n\n  const backButton = useMemo(\n    () =>\n      showBackButton && (\n        <Button\n          as={BackLink}\n          data-as=\"a\"\n          icon={ArrowLeftIcon}\n          mode=\"bleed\"\n          tooltipProps={{content: t('pane-header.back-button.text')}}\n        />\n      ),\n    [BackLink, showBackButton, t],\n  )\n\n  const favoriteToggle = (\n    <CapabilityGate capability=\"comlink\" condition=\"available\">\n      <FavoriteToggle\n        resourceType=\"studio\"\n        documentId={publishedDocId}\n        documentType={displayed?._type ?? ''}\n        resourceId={[activeWorkspace.projectId, activeWorkspace.dataset].join('.')}\n        schemaName={activeWorkspace.name}\n        projectId={activeWorkspace.projectId}\n        dataset={activeWorkspace.dataset}\n        documentExists={\n          (editState?.ready &&\n            (editState.version ?? editState.draft ?? editState.published) !== null) ??\n          false\n        }\n      />\n    </CapabilityGate>\n  )\n\n  return (\n    <PaneHeader\n      loading={connectionState === 'connecting' && !editState?.draft && !editState?.published}\n      title={title}\n      tabs={tabs}\n      tabIndex={tabIndex}\n      backButton={backButton}\n      appendTitle={favoriteToggle}\n    />\n  )\n})\n","import {BoundaryElementProvider, Box, Flex, PortalProvider, usePortal} from '@sanity/ui'\nimport {useEffect, useMemo, useRef, useState} from 'react'\nimport {\n  getSanityCreateLinkMetadata,\n  getVersionFromId,\n  isGoingToUnpublish,\n  isNewDocument,\n  isPerspectiveWriteable,\n  isReleaseDocument,\n  isReleaseScheduledOrScheduling,\n  isSanityCreateLinked,\n  isSystemBundle,\n  LegacyLayerProvider,\n  type ReleaseDocument,\n  ScrollContainer,\n  usePerspective,\n  useWorkspace,\n  VirtualizerScrollInstanceProvider,\n} from 'sanity'\nimport {css, styled} from 'styled-components'\n\nimport {PaneContent, usePane, usePaneLayout, usePaneRouter} from '../../../components'\nimport {hasObsoleteDraft} from '../../../hasObsoleteDraft'\nimport {mustChooseNewDocumentDestination} from '../../../mustChooseNewDocumentDestination'\nimport {useStructureTool} from '../../../useStructureTool'\nimport {DocumentInspectorPanel} from '../documentInspector'\nimport {InspectDialog} from '../inspectDialog'\nimport {useDocumentPane} from '../useDocumentPane'\nimport {\n  DeletedDocumentBanners,\n  DeprecatedDocumentTypeBanner,\n  InsufficientPermissionBanner,\n  ReferenceChangedBanner,\n} from './banners'\nimport {ArchivedReleaseDocumentBanner} from './banners/ArchivedReleaseDocumentBanner'\nimport {CanvasLinkedBanner} from './banners/CanvasLinkedBanner'\nimport {ChooseNewDocumentDestinationBanner} from './banners/ChooseNewDocumentDestinationBanner'\nimport {CreateLinkedBanner} from './banners/CreateLinkedBanner'\nimport {DocumentNotInReleaseBanner} from './banners/DocumentNotInReleaseBanner'\nimport {ObsoleteDraftBanner} from './banners/ObsoleteDraftBanner'\nimport {OpenReleaseToEditBanner} from './banners/OpenReleaseToEditBanner'\nimport {RevisionNotFoundBanner} from './banners/RevisionNotFoundBanner'\nimport {ScheduledReleaseBanner} from './banners/ScheduledReleaseBanner'\nimport {UnpublishedDocumentBanner} from './banners/UnpublishedDocumentBanner'\nimport {FormView} from './documentViews'\nimport {DocumentPanelSubHeader} from './header/DocumentPanelSubHeader'\n\ninterface DocumentPanelProps {\n  footerHeight: number | null\n  headerHeight: number | null\n  isInspectOpen: boolean\n  rootElement: HTMLDivElement | null\n  setDocumentPanelPortalElement: (el: HTMLElement | null) => void\n  footer: React.ReactNode\n}\n\nconst DocumentBox = styled(Box)({\n  position: 'relative',\n})\n\nconst Scroller = styled(ScrollContainer)<{$disabled: boolean}>(({$disabled}) => {\n  if ($disabled) {\n    return {height: '100%'}\n  }\n\n  return css`\n    height: 100%;\n    overflow: auto;\n    position: relative;\n    scroll-behavior: smooth;\n    outline: none;\n  `\n})\n\nexport const DocumentPanel = function DocumentPanel(props: DocumentPanelProps) {\n  const {\n    footerHeight,\n    headerHeight,\n    isInspectOpen,\n    rootElement,\n    setDocumentPanelPortalElement,\n    footer,\n  } = props\n  const {\n    activeViewId,\n    displayed,\n    documentId,\n    editState,\n    inspector,\n    value,\n    views,\n    ready,\n    schemaType,\n    permissions,\n    isPermissionsLoading,\n  } = useDocumentPane()\n  const createLinkMetadata = getSanityCreateLinkMetadata(value)\n  const showCreateBanner = isSanityCreateLinked(createLinkMetadata)\n\n  const {params} = usePaneRouter()\n  const {collapsed: layoutCollapsed} = usePaneLayout()\n  const {collapsed} = usePane()\n  const parentPortal = usePortal()\n  const {features} = useStructureTool()\n  const [_portalElement, setPortalElement] = useState<HTMLDivElement | null>(null)\n  const [documentScrollElement, setDocumentScrollElement] = useState<HTMLDivElement | null>(null)\n  const formContainerElement = useRef<HTMLDivElement | null>(null)\n  const workspace = useWorkspace()\n\n  const requiredPermission = value._createdAt ? 'update' : 'create'\n\n  const activeView = useMemo(\n    () => views.find((view) => view.id === activeViewId) || views[0] || {type: 'form'},\n    [activeViewId, views],\n  )\n\n  // Use a local portal container when split panes is supported\n  const portalElement: HTMLElement | null = features.splitPanes\n    ? _portalElement || parentPortal.element\n    : parentPortal.element\n\n  // Calculate the height of the header\n  const margins: [number, number, number, number] = useMemo(() => {\n    if (layoutCollapsed) {\n      return [headerHeight || 0, 0, footerHeight ? footerHeight + 2 : 2, 0]\n    }\n\n    return [0, 0, 2, 0]\n  }, [layoutCollapsed, footerHeight, headerHeight])\n\n  const formViewHidden = activeView.type !== 'form'\n\n  const activeViewNode = useMemo(() => {\n    if (activeView.type === 'component' && activeView.component) {\n      const ActiveViewComponent = activeView.component\n      return (\n        <ActiveViewComponent\n          document={{\n            draft: editState?.draft || null,\n            displayed: displayed || value,\n            historical: displayed,\n            published: editState?.published || null,\n          }}\n          documentId={documentId}\n          options={activeView.options}\n          schemaType={schemaType}\n        />\n      )\n    }\n    return false\n  }, [activeView, displayed, documentId, editState?.draft, editState?.published, schemaType, value])\n\n  // Scroll to top as `documentId` changes\n  useEffect(() => {\n    if (!documentScrollElement?.scrollTo) return\n    documentScrollElement.scrollTo(0, 0)\n  }, [documentId, documentScrollElement])\n\n  // Pass portal element to `DocumentPane`\n  useEffect(() => {\n    if (portalElement) {\n      setDocumentPanelPortalElement(portalElement)\n    }\n  }, [portalElement, setDocumentPanelPortalElement])\n\n  const inspectDialog = useMemo(() => {\n    return isInspectOpen ? <InspectDialog value={displayed || value} /> : null\n  }, [isInspectOpen, displayed, value])\n\n  const showInspector = Boolean(!collapsed && inspector)\n  const {selectedPerspective, selectedReleaseId} = usePerspective()\n\n  // eslint-disable-next-line complexity\n  const banners = useMemo(() => {\n    if (params?.historyVersion) {\n      return <ArchivedReleaseDocumentBanner />\n    }\n\n    const isScheduledRelease =\n      isReleaseDocument(selectedPerspective) && isReleaseScheduledOrScheduling(selectedPerspective)\n\n    const documentInScheduledRelease = Boolean(\n      isScheduledRelease &&\n        displayed?._id &&\n        getVersionFromId(displayed?._id) === selectedReleaseId,\n    )\n\n    const isSelectedPerspectiveWriteable = isPerspectiveWriteable({\n      selectedPerspective,\n      isDraftModelEnabled: workspace.document.drafts.enabled,\n      schemaType,\n    })\n\n    if (\n      mustChooseNewDocumentDestination({\n        isSelectedPerspectiveWriteable,\n        editState,\n      })\n    ) {\n      return (\n        !isSelectedPerspectiveWriteable.result && (\n          <ChooseNewDocumentDestinationBanner\n            schemaType={schemaType}\n            selectedPerspective={selectedPerspective}\n            reason={isSelectedPerspectiveWriteable.reason}\n          />\n        )\n      )\n    }\n\n    if (documentInScheduledRelease) {\n      return <ScheduledReleaseBanner currentRelease={selectedPerspective as ReleaseDocument} />\n    }\n    const isPinnedDraftOrPublish = isSystemBundle(selectedPerspective)\n    const isCurrentVersionGoingToUnpublish =\n      editState?.version && isGoingToUnpublish(editState?.version)\n\n    if (\n      displayed?._id &&\n      getVersionFromId(displayed._id) !== selectedReleaseId &&\n      ready &&\n      !isPinnedDraftOrPublish &&\n      isNewDocument(editState) === false &&\n      !isCurrentVersionGoingToUnpublish\n    ) {\n      return (\n        <DocumentNotInReleaseBanner\n          documentId={value._id}\n          currentRelease={selectedPerspective as ReleaseDocument}\n          isScheduledRelease={isScheduledRelease}\n        />\n      )\n    }\n\n    const displayedHasObsoleteDraft = hasObsoleteDraft({\n      editState,\n      workspace,\n      schemaType,\n    })\n\n    if (activeView.type === 'form' && !selectedReleaseId && displayedHasObsoleteDraft.result) {\n      if (displayedHasObsoleteDraft.reason === 'DRAFT_MODEL_INACTIVE') {\n        return (\n          <ObsoleteDraftBanner\n            displayed={displayed}\n            documentId={documentId}\n            schemaType={schemaType}\n            i18nKey=\"banners.obsolete-draft.draft-model-inactive.text\"\n          />\n        )\n      }\n\n      if (displayedHasObsoleteDraft.reason === 'LIVE_EDIT_ACTIVE') {\n        return (\n          <ObsoleteDraftBanner\n            displayed={displayed}\n            documentId={documentId}\n            schemaType={schemaType}\n            i18nKey=\"banners.live-edit-draft-banner.text\"\n            isEditBlocking\n          />\n        )\n      }\n    }\n\n    if (activeView.type !== 'form' || isPermissionsLoading) return null\n\n    return (\n      <>\n        {showCreateBanner && <CreateLinkedBanner />}\n        {!permissions?.granted && (\n          <InsufficientPermissionBanner requiredPermission={requiredPermission} />\n        )}\n        <RevisionNotFoundBanner />\n        <ReferenceChangedBanner />\n        <DeprecatedDocumentTypeBanner />\n        <CanvasLinkedBanner />\n        <DeletedDocumentBanners />\n        <UnpublishedDocumentBanner />\n        <OpenReleaseToEditBanner\n          documentId={displayed?._id ?? documentId}\n          isPinnedDraftOrPublished={isPinnedDraftOrPublish}\n        />\n      </>\n    )\n  }, [\n    params?.historyVersion,\n    selectedPerspective,\n    displayed,\n    selectedReleaseId,\n    editState,\n    ready,\n    activeView.type,\n    isPermissionsLoading,\n    showCreateBanner,\n    permissions?.granted,\n    requiredPermission,\n    documentId,\n    value._id,\n    schemaType,\n    workspace,\n  ])\n  const showFormView = features.resizablePanes || !showInspector\n  return (\n    <PaneContent>\n      <Flex height=\"fill\">\n        {showFormView && (\n          <Flex height=\"fill\" direction=\"column\" width=\"fill\" flex={2}>\n            <LegacyLayerProvider zOffset=\"paneHeader\">\n              {banners}\n              <DocumentPanelSubHeader />\n            </LegacyLayerProvider>\n            <DocumentBox flex={2} overflow=\"hidden\">\n              <PortalProvider\n                element={portalElement}\n                __unstable_elements={{documentScrollElement: documentScrollElement}}\n              >\n                <BoundaryElementProvider element={documentScrollElement}>\n                  <VirtualizerScrollInstanceProvider\n                    scrollElement={documentScrollElement}\n                    containerElement={formContainerElement}\n                  >\n                    <Scroller\n                      $disabled={layoutCollapsed || false}\n                      data-testid=\"document-panel-scroller\"\n                      ref={setDocumentScrollElement}\n                    >\n                      <FormView\n                        hidden={formViewHidden}\n                        margins={margins}\n                        ref={formContainerElement}\n                      />\n                      {activeViewNode}\n                    </Scroller>\n\n                    {inspectDialog}\n\n                    <div data-testid=\"document-panel-portal\" ref={setPortalElement} />\n                  </VirtualizerScrollInstanceProvider>\n                </BoundaryElementProvider>\n              </PortalProvider>\n            </DocumentBox>\n\n            {footer}\n          </Flex>\n        )}\n        {showInspector && (\n          <BoundaryElementProvider element={rootElement}>\n            <DocumentInspectorPanel\n              documentId={documentId}\n              documentType={schemaType.name}\n              flex={1}\n            />\n          </BoundaryElementProvider>\n        )}\n      </Flex>\n    </PaneContent>\n  )\n}\nDocumentPanel.displayName = 'DocumentPanel'\n","import {negate} from 'lodash'\n\nimport {type _PaneMenuGroup, type _PaneMenuItem, type _PaneMenuNode} from './components/pane/types'\nimport {type DocumentFieldMenuActionNode, type PaneMenuItem, type PaneMenuItemGroup} from './types'\n\nexport function isMenuNodeButton(node: _PaneMenuNode): node is _PaneMenuItem | _PaneMenuGroup {\n  return (node.type === 'item' || node.type === 'group') && node.renderAsButton\n}\n\nexport const isNotMenuNodeButton = negate(isMenuNodeButton)\n\nexport function resolveMenuNodes(params: {\n  actionHandler: (item: PaneMenuItem) => void\n  fieldActions?: DocumentFieldMenuActionNode[]\n  menuItems: PaneMenuItem[]\n  menuItemGroups: PaneMenuItemGroup[]\n}): _PaneMenuNode[] {\n  const {fieldActions = [], menuItems, menuItemGroups} = params\n\n  const nodes: _PaneMenuNode[] = []\n\n  let keyOffset = 0\n\n  for (let i = 0; i < fieldActions.length; i += 1) {\n    const a = fieldActions[i]\n\n    nodes.push(mapFieldActionToPaneMenuNode(a, `${i}-${a.type}`))\n  }\n\n  keyOffset += nodes.length\n\n  const groups: _PaneMenuGroup[] = []\n\n  for (const itemGroup of menuItemGroups) {\n    const group = groups.find((g) => g.key === itemGroup.id)\n\n    if (!group) {\n      groups.push({\n        type: 'group',\n        key: itemGroup.id,\n\n        children: [],\n        expanded: true,\n        renderAsButton: false,\n        title: itemGroup.title,\n        i18n: itemGroup.i18n,\n      })\n    }\n  }\n\n  const ungroupedItems: _PaneMenuItem[] = []\n\n  for (let i = 0; i < menuItems.length; i += 1) {\n    const item = menuItems[i]\n\n    let group = item.group && groups.find((g) => g.key === item.group)\n    const disabled = typeof item.disabled === 'string' ? {reason: item.disabled} : item.disabled\n\n    if (item.group && !group) {\n      group = {\n        type: 'group',\n        key: item.group,\n        disabled,\n        expanded: true,\n        icon: item.icon,\n        title: item.group,\n        children: [],\n        renderAsButton: false,\n      }\n      groups.push(group)\n    }\n\n    if (group) {\n      group.children.push({\n        type: 'item',\n        key: `${keyOffset + i}-item`,\n\n        hotkey: item.shortcut,\n        icon: item.icon,\n        intent: item.intent,\n        disabled,\n        onAction: () => params.actionHandler(item),\n        renderAsButton: item.showAsAction ?? false,\n        selected: item.selected,\n        title: item.title,\n        i18n: item.i18n,\n        tone: item.tone,\n      })\n    } else {\n      ungroupedItems.push({\n        type: 'item',\n        key: `${keyOffset + i}-item`,\n\n        hotkey: item.shortcut,\n        icon: item.icon,\n        intent: item.intent,\n        disabled,\n        onAction: () => params.actionHandler(item),\n        renderAsButton: item.showAsAction ?? false,\n        selected: item.selected,\n        title: item.title,\n        i18n: item.i18n,\n        tone: item.tone,\n      })\n    }\n  }\n\n  return [...ungroupedItems, ...groups, ...nodes]\n}\n\nfunction mapFieldActionToPaneMenuNode(a: DocumentFieldMenuActionNode, key: string): _PaneMenuNode {\n  if (a.type === 'divider') {\n    return {\n      type: 'divider',\n      key,\n    }\n  }\n\n  if (a.type === 'group') {\n    return {\n      type: 'group',\n      key,\n\n      children: a.children.map((child, childIdx) =>\n        mapFieldActionToPaneMenuNode(child, `${key}-${childIdx}-${child.type}`),\n      ),\n      disabled: a.disabled,\n      expanded: a.expanded ?? true,\n      icon: a.icon,\n      title: a.title,\n      i18n: a.i18n,\n      renderAsButton: a.renderAsButton ?? false,\n    }\n  }\n\n  return {\n    type: 'item',\n    key,\n    intent: a.intent,\n    disabled: a.disabled,\n    icon: a.icon,\n    iconRight: a.iconRight,\n    onAction: a.onAction,\n    renderAsButton: a.renderAsButton ?? false,\n    selected: a.selected,\n    title: a.title,\n    i18n: a.i18n,\n    tone: a.tone,\n  }\n}\n","/**\n * @internal\n */\nexport const _DEBUG = false\n\nexport const EMPTY_PARAMS = Object.freeze({})\nexport const LOADING_PANE = Symbol('LOADING_PANE')\n\nexport const DOCUMENT_PANEL_PORTAL_ELEMENT = 'documentPanelPortalElement'\n","import {type Placement} from '@sanity/ui'\n\nimport {type DialogProps} from '../../../../../ui-components'\n\nexport const POPOVER_FALLBACK_PLACEMENTS: Placement[] = ['left', 'bottom']\n\nexport const DIALOG_WIDTH_TO_UI_WIDTH: {[key: string]: DialogProps['width']} = {\n  small: 0,\n  medium: 1,\n  large: 2,\n  full: 'auto',\n}\n","import {\n  Box,\n  Button, // eslint-disable-line no-restricted-imports\n  Flex,\n  Grid,\n  Popover, // eslint-disable-line no-restricted-imports\n  Text,\n  useClickOutsideEvent,\n  useGlobalKeyDown,\n  useLayer,\n} from '@sanity/ui'\nimport {useCallback, useRef} from 'react'\nimport {type DocumentActionConfirmDialogProps, useTranslation} from 'sanity'\n\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {POPOVER_FALLBACK_PLACEMENTS} from './constants'\n\nexport function ConfirmDialog(props: {\n  dialog: DocumentActionConfirmDialogProps\n  referenceElement: HTMLElement | null\n}) {\n  const {dialog, referenceElement} = props\n\n  return (\n    <Popover\n      content={<ConfirmDialogContent dialog={dialog} />}\n      fallbackPlacements={POPOVER_FALLBACK_PLACEMENTS}\n      open\n      placement=\"top\"\n      portal\n      preventOverflow\n      referenceElement={referenceElement}\n    />\n  )\n}\n\n/**\n * Dialog rendered by custom document actions of dialog type `confirm`.\n * As these are user configurable with public facing APIs, internal studio ui-components are not used.\n */\nfunction ConfirmDialogContent(props: {dialog: DocumentActionConfirmDialogProps}) {\n  const {dialog} = props\n  const {\n    cancelButtonIcon,\n    cancelButtonText,\n    confirmButtonIcon,\n    confirmButtonText,\n    // color,\n    message,\n    onCancel,\n    onConfirm,\n    tone,\n  } = dialog\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {isTopLayer} = useLayer()\n  const ref = useRef<HTMLDivElement | null>(null)\n\n  const handleGlobalKeyDown = useCallback(\n    (event: any) => {\n      if (event.key === 'Escape' && isTopLayer) onCancel()\n    },\n    [isTopLayer, onCancel],\n  )\n\n  useGlobalKeyDown(handleGlobalKeyDown)\n  useClickOutsideEvent(isTopLayer && onCancel, () => [ref.current])\n\n  return (\n    <Flex direction=\"column\" ref={ref} style={{minWidth: 320 - 16, maxWidth: 400}}>\n      <Box flex={1} overflow=\"auto\" padding={4}>\n        <Text>{message}</Text>\n      </Box>\n      <Box paddingX={4} paddingY={3} style={{borderTop: '1px solid var(--card-border-color)'}}>\n        <Grid columns={2} gap={2}>\n          <Button\n            data-testid=\"confirm-dialog-cancel-button\"\n            icon={cancelButtonIcon}\n            onClick={onCancel}\n            mode=\"ghost\"\n            text={cancelButtonText || t('confirm-dialog.cancel-button.fallback-text')}\n          />\n          <Button\n            data-testid=\"confirm-dialog-confirm-button\"\n            icon={confirmButtonIcon}\n            onClick={onConfirm}\n            text={confirmButtonText || t('confirm-dialog.confirm-button.fallback-text')}\n            tone={tone}\n          />\n        </Grid>\n      </Box>\n    </Flex>\n  )\n}\n","import {\n  Box,\n  Dialog, // eslint-disable-line no-restricted-imports\n} from '@sanity/ui'\nimport {useId} from 'react'\nimport {type DocumentActionModalDialogProps, LegacyLayerProvider} from 'sanity'\n\nimport {DIALOG_WIDTH_TO_UI_WIDTH} from './constants'\n\n/**\n * Dialog rendered by custom document actions of dialog type `dialog`.\n * As these are user configurable with public facing APIs, internal studio ui-components are not used.\n */\nexport function ModalDialog(props: {dialog: DocumentActionModalDialogProps}) {\n  const {dialog} = props\n  const dialogId = useId()\n\n  const footer = dialog.footer && (\n    <Box paddingX={4} paddingY={3}>\n      {dialog.footer}\n    </Box>\n  )\n\n  return (\n    <LegacyLayerProvider zOffset=\"fullscreen\">\n      <Dialog\n        animate\n        __unstable_hideCloseButton={dialog.showCloseButton === false}\n        footer={footer}\n        header={dialog.header}\n        id={dialogId}\n        // eslint-disable-next-line react/jsx-handler-names\n        onClose={dialog.onClose}\n        // eslint-disable-next-line react/jsx-handler-names\n        onClickOutside={dialog.onClose}\n        width={dialog.width === undefined ? 1 : DIALOG_WIDTH_TO_UI_WIDTH[dialog.width]}\n      >\n        <Box padding={4}>{dialog.content}</Box>\n      </Dialog>\n    </LegacyLayerProvider>\n  )\n}\n","import {\n  Popover, // eslint-disable-line no-restricted-imports\n  useClickOutsideEvent,\n  useGlobalKeyDown,\n  useLayer,\n} from '@sanity/ui'\nimport {useCallback, useRef} from 'react'\nimport {type DocumentActionPopoverDialogProps} from 'sanity'\n\nimport {POPOVER_FALLBACK_PLACEMENTS} from './constants'\n\nexport function PopoverDialog(props: {\n  dialog: DocumentActionPopoverDialogProps\n  referenceElement: HTMLElement | null\n}) {\n  const {dialog, referenceElement} = props\n\n  return (\n    <Popover\n      content={<PopoverDialogContent dialog={dialog} />}\n      fallbackPlacements={POPOVER_FALLBACK_PLACEMENTS}\n      open\n      placement=\"top\"\n      portal\n      preventOverflow\n      referenceElement={referenceElement}\n    />\n  )\n}\n\n/**\n * Popover rendered by custom document actions of dialog type `popover`.\n * As these are user configurable with public facing APIs, internal studio ui-components are not used.\n */\nfunction PopoverDialogContent(props: {dialog: DocumentActionPopoverDialogProps}) {\n  const {dialog} = props\n  const {content, onClose} = dialog\n  const {isTopLayer} = useLayer()\n  const ref = useRef<HTMLDivElement | null>(null)\n\n  const handleGlobalKeyDown = useCallback(\n    (event: any) => {\n      if (event.key === 'Escape' && isTopLayer) onClose()\n    },\n    [isTopLayer, onClose],\n  )\n\n  useGlobalKeyDown(handleGlobalKeyDown)\n  useClickOutsideEvent(isTopLayer && onClose, () => [ref.current])\n\n  return <div ref={ref}>{content}</div>\n}\n","import {PortalProvider, Text, usePortal} from '@sanity/ui'\nimport {type ReactNode, useId} from 'react'\nimport {type DocumentActionDialogProps} from 'sanity'\n\nimport {Dialog} from '../../../../ui-components'\nimport {DOCUMENT_PANEL_PORTAL_ELEMENT} from '../../../constants'\nimport {ConfirmDialog} from './dialogs/ConfirmDialog'\nimport {ModalDialog} from './dialogs/ModalDialog'\nimport {PopoverDialog} from './dialogs/PopoverDialog'\n\nexport interface ActionStateDialogProps {\n  dialog: DocumentActionDialogProps\n  referenceElement?: HTMLElement | null\n}\n\n// A portal provider that uses the document panel portal element if it exists\n// as the portal element so that dialogs are scoped to the document panel\nfunction DocumentActionPortalProvider(props: {children: ReactNode}) {\n  const {children} = props\n  const {element, elements} = usePortal()\n  const portalElement = elements?.[DOCUMENT_PANEL_PORTAL_ELEMENT] || element\n\n  return <PortalProvider element={portalElement}>{children}</PortalProvider>\n}\n\nexport function ActionStateDialog(props: ActionStateDialogProps) {\n  const {dialog, referenceElement = null} = props\n  const modalId = useId()\n\n  if (dialog.type === 'confirm') {\n    return <ConfirmDialog dialog={dialog} referenceElement={referenceElement} />\n  }\n\n  if (dialog.type === 'popover') {\n    return <PopoverDialog dialog={dialog} referenceElement={referenceElement} />\n  }\n\n  if (dialog.type === 'dialog' || !dialog.type) {\n    return (\n      <DocumentActionPortalProvider>\n        <ModalDialog dialog={dialog} />\n      </DocumentActionPortalProvider>\n    )\n  }\n\n  if (dialog.type === 'custom') {\n    return <DocumentActionPortalProvider>{dialog?.component}</DocumentActionPortalProvider>\n  }\n\n  // @todo: add validation?\n  const unknownModal: any = dialog\n\n  console.warn(`Unsupported modal type ${unknownModal.type}`)\n\n  return (\n    <Dialog\n      id={modalId}\n      // eslint-disable-next-line react/jsx-handler-names\n      onClose={unknownModal.onClose}\n      // eslint-disable-next-line react/jsx-handler-names\n      onClickOutside={unknownModal.onClose}\n      width={1}\n    >\n      {unknownModal.content || (\n        // eslint-disable-next-line i18next/no-literal-string\n        <Text size={1}>\n          Unexpected modal type (<code>{unknownModal.type}</code>)\n        </Text>\n      )}\n    </Dialog>\n  )\n}\n","import {Menu} from '@sanity/ui'\nimport {memo, type ReactNode, useCallback, useId, useMemo, useState} from 'react'\nimport {\n  ContextMenuButton,\n  type DocumentActionDescription,\n  LegacyLayerProvider,\n  useTranslation,\n} from 'sanity'\n\nimport {MenuButton, MenuItem, type PopoverProps} from '../../../../ui-components'\nimport {structureLocaleNamespace} from '../../../i18n'\nimport {ActionStateDialog} from './ActionStateDialog'\n\nexport interface ActionMenuButtonProps {\n  actionStates: DocumentActionDescription[]\n  disabled: boolean\n}\n\n/**\n * @internal\n */\nexport const ActionDialogWrapper = memo(function ActionDialogWrapper({\n  actionStates,\n  children,\n  referenceElement,\n}: {\n  actionStates: DocumentActionDescription[]\n  children: ({handleAction}: {handleAction: (idx: number) => void}) => ReactNode\n  referenceElement?: HTMLElement | null\n}) {\n  const [actionIndex, setActionIndex] = useState(-1)\n  const currentAction = useMemo(() => actionStates[actionIndex], [actionIndex, actionStates])\n\n  const handleAction = useCallback((idx: number) => {\n    setActionIndex(idx)\n  }, [])\n\n  const result = useMemo(() => children({handleAction}), [children, handleAction])\n\n  return (\n    <>\n      {currentAction && currentAction.dialog && (\n        <LegacyLayerProvider zOffset=\"paneFooter\">\n          <ActionStateDialog dialog={currentAction.dialog} referenceElement={referenceElement} />\n        </LegacyLayerProvider>\n      )}\n      {result}\n    </>\n  )\n})\n\n/**\n * @internal\n */\nexport function ActionMenuButton(props: ActionMenuButtonProps) {\n  const {actionStates, disabled} = props\n  const idPrefix = useId()\n\n  const [referenceElement, setReferenceElement] = useState<HTMLButtonElement | null>(null)\n\n  const popoverProps: PopoverProps = useMemo(\n    () => ({\n      placement: 'top-end',\n      portal: true,\n      preventOverflow: true,\n    }),\n    [],\n  )\n\n  const {t} = useTranslation(structureLocaleNamespace)\n  const renderActionDialog = useCallback<\n    ({handleAction}: {handleAction: (idx: number) => void}) => ReactNode\n  >(\n    ({handleAction}) => (\n      <MenuButton\n        id={`${idPrefix}-action-menu`}\n        button={\n          <ContextMenuButton\n            aria-label={t('buttons.action-menu-button.aria-label')}\n            disabled={disabled}\n            data-testid=\"action-menu-button\"\n            tooltipProps={{content: t('buttons.action-menu-button.tooltip')}}\n          />\n        }\n        menu={\n          <Menu padding={1}>\n            {actionStates.map((actionState, idx) => (\n              <ActionMenuListItem\n                // oxlint-disable-next-line no-array-index-key\n                key={idx}\n                actionState={actionState}\n                disabled={disabled}\n                index={idx}\n                onAction={handleAction}\n              />\n            ))}\n          </Menu>\n        }\n        popover={popoverProps}\n        ref={setReferenceElement}\n      />\n    ),\n    [actionStates, disabled, idPrefix, popoverProps, t],\n  )\n\n  return (\n    <ActionDialogWrapper actionStates={actionStates} referenceElement={referenceElement}>\n      {renderActionDialog}\n    </ActionDialogWrapper>\n  )\n}\n\ninterface ActionMenuListItemProps {\n  actionState: DocumentActionDescription\n  disabled: boolean\n  index: number\n  onAction: (idx: number) => void\n}\n\nexport function ActionMenuListItem(props: ActionMenuListItemProps) {\n  const {actionState, disabled, index, onAction} = props\n  const {onHandle} = actionState\n\n  const handleClick = useCallback(() => {\n    onAction(index)\n    if (onHandle) onHandle()\n  }, [index, onAction, onHandle])\n\n  const hotkeys = useMemo(() => {\n    return actionState.shortcut\n      ? String(actionState.shortcut)\n          .split('+')\n          .map((s) => s.slice(0, 1).toUpperCase() + s.slice(1))\n      : undefined\n  }, [actionState.shortcut])\n\n  return (\n    <MenuItem\n      data-testid={`action-${actionState.label.replace(' ', '')}`}\n      disabled={disabled || Boolean(actionState.disabled)}\n      hotkeys={hotkeys}\n      icon={actionState.icon}\n      onClick={handleClick}\n      text={actionState.label}\n      tone={actionState.tone}\n      {...(actionState.disabled && {tooltipProps: {content: actionState.title}})}\n    />\n  )\n}\n","import {TrashIcon} from '@sanity/icons'\nimport {useCallback, useMemo, useState} from 'react'\nimport {\n  type DocumentActionComponent,\n  InsufficientPermissionsMessage,\n  useCurrentUser,\n  useDocumentOperation,\n  useDocumentPairPermissions,\n  useTranslation,\n} from 'sanity'\n\nimport {ConfirmDeleteDialog} from '../components'\nimport {structureLocaleNamespace} from '../i18n'\nimport {useDocumentPane} from '../panes/document/useDocumentPane'\n\nconst DISABLED_REASON_TITLE_KEY = {\n  NOTHING_TO_DELETE: 'action.delete.disabled.nothing-to-delete',\n  NOT_READY: 'action.delete.disabled.not-ready',\n}\n\n/** @internal */\nexport const DeleteAction: DocumentActionComponent = ({id, type, draft, onComplete, release}) => {\n  const {setIsDeleting: paneSetIsDeleting} = useDocumentPane()\n  const {delete: deleteOp} = useDocumentOperation(id, type, release)\n  const [isDeleting, setIsDeleting] = useState(false)\n  const [isConfirmDialogOpen, setConfirmDialogOpen] = useState(false)\n\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const handleCancel = useCallback(() => {\n    setConfirmDialogOpen(false)\n    onComplete()\n  }, [onComplete])\n\n  const handleConfirm = useCallback(() => {\n    setIsDeleting(true)\n    setConfirmDialogOpen(false)\n    paneSetIsDeleting(true)\n    deleteOp.execute()\n    onComplete()\n  }, [deleteOp, onComplete, paneSetIsDeleting])\n\n  const handle = useCallback(() => {\n    setConfirmDialogOpen(true)\n  }, [])\n\n  const [permissions, isPermissionsLoading] = useDocumentPairPermissions({\n    id,\n    type,\n    version: release,\n    permission: 'delete',\n  })\n\n  const currentUser = useCurrentUser()\n\n  return useMemo(() => {\n    if (!isPermissionsLoading && !permissions?.granted) {\n      return {\n        tone: 'critical',\n        icon: TrashIcon,\n        disabled: true,\n        label: t('action.delete.label'),\n        title: (\n          <InsufficientPermissionsMessage context=\"delete-document\" currentUser={currentUser} />\n        ),\n      }\n    }\n\n    return {\n      tone: 'critical',\n      icon: TrashIcon,\n      disabled: isDeleting || Boolean(deleteOp.disabled) || isPermissionsLoading,\n      title: (deleteOp.disabled && t(DISABLED_REASON_TITLE_KEY[deleteOp.disabled])) || '',\n      label: isDeleting ? t('action.delete.running.label') : t('action.delete.label'),\n      shortcut: 'Ctrl+Alt+D',\n      onHandle: handle,\n      dialog: isConfirmDialogOpen && {\n        type: 'custom',\n        component: (\n          <ConfirmDeleteDialog\n            action=\"delete\"\n            id={draft?._id || id}\n            type={type}\n            onCancel={handleCancel}\n            onConfirm={handleConfirm}\n          />\n        ),\n      },\n    }\n  }, [\n    currentUser,\n    deleteOp.disabled,\n    draft?._id,\n    handle,\n    handleCancel,\n    handleConfirm,\n    id,\n    isConfirmDialogOpen,\n    isDeleting,\n    isPermissionsLoading,\n    permissions?.granted,\n    t,\n    type,\n  ])\n}\n\nDeleteAction.action = 'delete'\nDeleteAction.displayName = 'DeleteAction'\n","import {ResetIcon} from '@sanity/icons'\nimport {useCallback, useMemo, useState} from 'react'\nimport {\n  type DocumentActionComponent,\n  type DocumentActionDialogProps,\n  InsufficientPermissionsMessage,\n  isPublishedId,\n  useCurrentUser,\n  useDocumentOperation,\n  useDocumentPairPermissions,\n  useTranslation,\n} from 'sanity'\n\nimport {structureLocaleNamespace} from '../i18n'\nimport {useDocumentPane} from '../panes/document/useDocumentPane'\n\nconst DISABLED_REASON_KEY = {\n  NO_CHANGES: 'action.discard-changes.disabled.no-change',\n  NOT_PUBLISHED: 'action.discard-changes.disabled.not-published',\n  NOT_READY: 'action.discard-changes.disabled.not-ready',\n} as const\n\n/** @internal */\nexport const DiscardChangesAction: DocumentActionComponent = ({\n  id,\n  type,\n  published,\n  liveEdit,\n  onComplete,\n  release,\n}) => {\n  const {discardChanges} = useDocumentOperation(id, type, release)\n  const [isConfirmDialogOpen, setConfirmDialogOpen] = useState(false)\n  const [permissions, isPermissionsLoading] = useDocumentPairPermissions({\n    id,\n    type,\n    version: release,\n    permission: 'discardDraft',\n  })\n  const currentUser = useCurrentUser()\n  const {displayed} = useDocumentPane()\n\n  const {t} = useTranslation(structureLocaleNamespace)\n  const isPublished = displayed?._id && isPublishedId(displayed?._id)\n\n  const handleConfirm = useCallback(() => {\n    discardChanges.execute()\n    onComplete()\n  }, [discardChanges, onComplete])\n\n  const handle = useCallback(() => {\n    setConfirmDialogOpen(true)\n  }, [])\n\n  const dialog: DocumentActionDialogProps | false = useMemo(\n    () =>\n      isConfirmDialogOpen && {\n        type: 'confirm',\n        tone: 'critical',\n        onCancel: onComplete,\n        onConfirm: handleConfirm,\n        message: t('action.discard-changes.confirm-dialog.confirm-discard-changes'),\n      },\n    [handleConfirm, isConfirmDialogOpen, onComplete, t],\n  )\n\n  return useMemo(() => {\n    if (!published || liveEdit || isPublished) {\n      return null\n    }\n\n    if (!isPermissionsLoading && !permissions?.granted) {\n      return {\n        tone: 'critical',\n        icon: ResetIcon,\n        disabled: true,\n        label: t('action.discard-changes.label'),\n        title: (\n          <InsufficientPermissionsMessage context=\"discard-changes\" currentUser={currentUser} />\n        ),\n      }\n    }\n\n    return {\n      tone: 'critical',\n      icon: ResetIcon,\n      disabled: Boolean(discardChanges.disabled) || isPermissionsLoading,\n      title: t((discardChanges.disabled && DISABLED_REASON_KEY[discardChanges.disabled]) || ''),\n      label: t('action.discard-changes.label'),\n      onHandle: handle,\n      dialog,\n    }\n  }, [\n    currentUser,\n    dialog,\n    discardChanges.disabled,\n    handle,\n    isPermissionsLoading,\n    isPublished,\n    liveEdit,\n    permissions?.granted,\n    published,\n    t,\n  ])\n}\n\nDiscardChangesAction.action = 'discardChanges'\nDiscardChangesAction.displayName = 'DiscardChangesAction'\n","import {CopyIcon} from '@sanity/icons'\nimport {uuid} from '@sanity/uuid'\nimport {useCallback, useMemo, useState} from 'react'\nimport {filter, firstValueFrom} from 'rxjs'\nimport {\n  type DuplicateDocumentActionComponent,\n  InsufficientPermissionsMessage,\n  useCurrentUser,\n  useDocumentOperation,\n  useDocumentPairPermissions,\n  useDocumentStore,\n  useTranslation,\n} from 'sanity'\nimport {useRouter} from 'sanity/router'\n\nimport {structureLocaleNamespace} from '../i18n'\n\nconst DISABLED_REASON_KEY = {\n  NOTHING_TO_DUPLICATE: 'action.duplicate.disabled.nothing-to-duplicate',\n  NOT_READY: 'action.duplicate.disabled.not-ready',\n}\n\n/** @internal */\nexport const DuplicateAction: DuplicateDocumentActionComponent = ({\n  id,\n  type,\n  onComplete,\n  release,\n  mapDocument,\n}) => {\n  const documentStore = useDocumentStore()\n  const {duplicate} = useDocumentOperation(id, type, release)\n  const {navigateIntent} = useRouter()\n  const [isDuplicating, setDuplicating] = useState(false)\n\n  const [permissions, isPermissionsLoading] = useDocumentPairPermissions({\n    id,\n    type,\n    version: release,\n    permission: 'duplicate',\n  })\n\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const currentUser = useCurrentUser()\n\n  const handle = useCallback(async () => {\n    const dupeId = uuid()\n\n    setDuplicating(true)\n\n    // set up the listener before executing\n    const duplicateSuccess = firstValueFrom(\n      documentStore.pair\n        .operationEvents(id, type)\n        .pipe(filter((e) => e.op === 'duplicate' && e.type === 'success')),\n    )\n    duplicate.execute(dupeId, {mapDocument})\n\n    // only navigate to the duplicated document when the operation is successful\n    await duplicateSuccess\n    navigateIntent('edit', {id: dupeId, type})\n\n    onComplete()\n  }, [documentStore.pair, duplicate, id, mapDocument, navigateIntent, onComplete, type])\n\n  return useMemo(() => {\n    if (!isPermissionsLoading && !permissions?.granted) {\n      return {\n        icon: CopyIcon,\n        disabled: true,\n        label: t('action.duplicate.label'),\n        title: (\n          <InsufficientPermissionsMessage context=\"duplicate-document\" currentUser={currentUser} />\n        ),\n      }\n    }\n\n    return {\n      icon: CopyIcon,\n      disabled: isDuplicating || Boolean(duplicate.disabled) || isPermissionsLoading,\n      label: isDuplicating ? t('action.duplicate.running.label') : t('action.duplicate.label'),\n      title: duplicate.disabled ? t(DISABLED_REASON_KEY[duplicate.disabled]) : '',\n      onHandle: handle,\n    }\n  }, [\n    currentUser,\n    duplicate.disabled,\n    handle,\n    isDuplicating,\n    isPermissionsLoading,\n    permissions?.granted,\n    t,\n  ])\n}\n\nDuplicateAction.action = 'duplicate'\nDuplicateAction.displayName = 'DuplicateAction'\n","import {RevertIcon} from '@sanity/icons'\nimport {useCallback, useEffect, useMemo, useRef, useState} from 'react'\nimport {\n  type DocumentActionComponent,\n  type DocumentActionDialogProps,\n  useDocumentOperation,\n  useDocumentOperationEvent,\n  useTranslation,\n} from 'sanity'\nimport {useRouter} from 'sanity/router'\n\nimport {structureLocaleNamespace} from '../i18n'\nimport {useDocumentPane} from '../panes/document/useDocumentPane'\n\n/** @internal */\nexport const HistoryRestoreAction: DocumentActionComponent = ({\n  id,\n  type,\n  revision,\n  onComplete,\n  release,\n}) => {\n  const {restore} = useDocumentOperation(id, type, release)\n  const {revisionNotFound} = useDocumentPane()\n  const event = useDocumentOperationEvent(id, type)\n  const {navigateIntent} = useRouter()\n  const prevEvent = useRef(event)\n  const [isConfirmDialogOpen, setConfirmDialogOpen] = useState(false)\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const handleConfirm = useCallback(() => {\n    restore.execute(revision!)\n    onComplete()\n  }, [restore, revision, onComplete])\n\n  /**\n   * If the restore operation is successful, navigate to the document edit view\n   */\n  useEffect(() => {\n    if (!event || event === prevEvent.current) return\n\n    if (event.type === 'success' && event.op === 'restore') {\n      navigateIntent('edit', {id, type})\n    }\n\n    prevEvent.current = event\n  }, [event, id, navigateIntent, type])\n\n  const handle = useCallback(() => {\n    setConfirmDialogOpen(true)\n  }, [])\n\n  const dialog: DocumentActionDialogProps | null = useMemo(() => {\n    if (isConfirmDialogOpen) {\n      return {\n        type: 'confirm',\n        tone: 'critical',\n        onCancel: onComplete,\n        onConfirm: handleConfirm,\n        message: t('action.restore.confirm.message'),\n      }\n    }\n\n    return null\n  }, [handleConfirm, isConfirmDialogOpen, onComplete, t])\n\n  const isRevisionInitial = revision === '@initial'\n  const isRevisionLatest = revision === undefined // undefined means latest revision\n\n  return useMemo(() => {\n    if (isRevisionLatest || revisionNotFound) {\n      return null\n    }\n\n    return {\n      label: t('action.restore.label'),\n      tone: 'caution',\n      onHandle: handle,\n      title: t(\n        isRevisionInitial\n          ? 'action.restore.disabled.cannot-restore-initial'\n          : 'action.restore.tooltip',\n      ),\n      icon: RevertIcon,\n      dialog,\n      disabled: isRevisionInitial,\n    }\n  }, [dialog, handle, isRevisionInitial, isRevisionLatest, revisionNotFound, t])\n}\n\nHistoryRestoreAction.action = 'restore'\nHistoryRestoreAction.displayName = 'HistoryRestoreAction'\n","import {defineEvent} from '@sanity/telemetry'\n\ninterface DocumentPublishedInfo {\n  /**\n   * The document was created and published straight away\n   */\n  publishedImmediately: boolean\n\n  /**\n   * The document had a previously published version when it was published\n   */\n  previouslyPublished: boolean\n}\nexport const DocumentPublished = defineEvent<DocumentPublishedInfo>({\n  name: 'Document Published',\n  version: 1,\n  description: 'User clicked the \"Publish\" button in the document pane',\n})\n","import {PublishIcon} from '@sanity/icons'\nimport {useTelemetry} from '@sanity/telemetry/react'\nimport {isValidationErrorMarker} from '@sanity/types'\nimport {useCallback, useEffect, useMemo, useState} from 'react'\nimport {\n  type DocumentActionComponent,\n  InsufficientPermissionsMessage,\n  isPublishedId,\n  type TFunction,\n  useCurrentUser,\n  useDocumentOperation,\n  useDocumentPairPermissions,\n  useEditState,\n  useRelativeTime,\n  useSyncState,\n  useTranslation,\n  useValidationStatus,\n} from 'sanity'\n\nimport {structureLocaleNamespace, type StructureLocaleResourceKeys} from '../i18n'\nimport {useDocumentPane} from '../panes/document/useDocumentPane'\nimport {DocumentPublished} from './__telemetry__/documentActions.telemetry'\n\nconst DISABLED_REASON_TITLE_KEY: Record<string, StructureLocaleResourceKeys> = {\n  LIVE_EDIT_ENABLED: 'action.publish.live-edit.publish-disabled',\n  ALREADY_PUBLISHED: 'action.publish.already-published.no-time-ago.tooltip',\n  NO_CHANGES: 'action.publish.no-changes.tooltip',\n  NOT_READY: 'action.publish.disabled.not-ready',\n} as const\n\nconst PUBLISHED_STATE = {status: 'published'} as const\n\nfunction getDisabledReason(\n  reason: keyof typeof DISABLED_REASON_TITLE_KEY,\n  publishedAt: string | undefined,\n  t: TFunction,\n) {\n  if (reason === 'ALREADY_PUBLISHED' && publishedAt) {\n    return <AlreadyPublished publishedAt={publishedAt} />\n  }\n  return t(DISABLED_REASON_TITLE_KEY[reason])\n}\n\nfunction AlreadyPublished({publishedAt}: {publishedAt: string}) {\n  const {t} = useTranslation(structureLocaleNamespace)\n  const timeSincePublished = useRelativeTime(publishedAt, {useTemporalPhrase: true})\n  return <span>{t('action.publish.already-published.tooltip', {timeSincePublished})}</span>\n}\n\n/** @internal */\nexport const PublishAction: DocumentActionComponent = (props) => {\n  const {id, type, liveEdit, draft, published, release} = props\n  const [publishState, setPublishState] = useState<\n    {status: 'publishing'; publishRevision: string | undefined} | {status: 'published'} | null\n  >(null)\n  const {publish} = useDocumentOperation(id, type)\n  const validationStatus = useValidationStatus(id, type)\n  const syncState = useSyncState(id, type)\n  const {changesOpen, documentId, documentType, value} = useDocumentPane()\n  const editState = useEditState(documentId, documentType)\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const revision = (editState?.draft || editState?.published || {})._rev\n\n  const hasValidationErrors = validationStatus.validation.some(isValidationErrorMarker)\n  // we use this to \"schedule\" publish after pending tasks (e.g. validation and sync) has completed\n  const [publishScheduled, setPublishScheduled] = useState<boolean>(false)\n  const isSyncing = syncState.isSyncing\n  const isValidating = validationStatus.isValidating\n  const [permissions, isPermissionsLoading] = useDocumentPairPermissions({\n    id,\n    type,\n    permission: 'publish',\n  })\n\n  const currentUser = useCurrentUser()\n\n  const title = publish.disabled\n    ? getDisabledReason(publish.disabled, (published || {})._updatedAt, t) || ''\n    : hasValidationErrors\n      ? t('action.publish.validation-issues.tooltip')\n      : ''\n\n  const currentPublishRevision = published?._rev\n\n  const doPublish = useCallback(() => {\n    publish.execute()\n    setPublishState({status: 'publishing', publishRevision: currentPublishRevision})\n  }, [publish, currentPublishRevision])\n\n  useEffect(() => {\n    // make sure the validation status is about the current revision and not an earlier one\n    const validationComplete =\n      validationStatus.isValidating === false && validationStatus.revision !== revision\n\n    if (!publishScheduled || isSyncing || !validationComplete) {\n      return\n    }\n\n    if (!hasValidationErrors) {\n      doPublish()\n    }\n    setPublishScheduled(false)\n  }, [\n    isSyncing,\n    doPublish,\n    hasValidationErrors,\n    publishScheduled,\n    validationStatus.revision,\n    revision,\n    isValidating,\n    validationStatus.isValidating,\n  ])\n\n  useEffect(() => {\n    const didPublish =\n      // All we need to check here is for the revision of the current published document\n      // to be different from what it was at the time of publish\n      // a successful publish will always lead to a new published revision\n      publishState?.status === 'publishing' &&\n      currentPublishRevision !== publishState.publishRevision\n\n    const nextState = didPublish ? PUBLISHED_STATE : null\n    const delay = didPublish ? 200 : 4000\n    const timer = setTimeout(() => {\n      setPublishState(nextState)\n    }, delay)\n    return () => clearTimeout(timer)\n  }, [changesOpen, publishState, currentPublishRevision])\n\n  const telemetry = useTelemetry()\n\n  const handle = useCallback(() => {\n    telemetry.log(DocumentPublished, {\n      publishedImmediately: !draft?._createdAt,\n      previouslyPublished: Boolean(published),\n    })\n    if (\n      syncState.isSyncing ||\n      validationStatus.isValidating ||\n      validationStatus.revision !== revision\n    ) {\n      setPublishScheduled(true)\n    } else {\n      doPublish()\n    }\n  }, [\n    telemetry,\n    draft?._createdAt,\n    published,\n    syncState.isSyncing,\n    validationStatus.isValidating,\n    validationStatus.revision,\n    revision,\n    doPublish,\n  ])\n\n  return useMemo(() => {\n    if (release) {\n      // Version documents are not publishable by this action, they should be published as part of a release\n      return null\n    }\n    if (liveEdit) {\n      // Live edit documents are not publishable by this action, they are published automatically\n      return null\n    }\n\n    /**\n     * When draft is null, if not a published or version document\n     * then it means the draft is yet to be saved - in this case don't disabled\n     * the publish button due to ALREADY_PUBLISHED reason\n     */\n    if (isPublishedId(value._id) && draft !== null) {\n      return {\n        tone: 'default',\n        icon: PublishIcon,\n        label: t('action.publish.label'),\n        title: getDisabledReason('ALREADY_PUBLISHED', published?._updatedAt, t),\n        disabled: true,\n      }\n    }\n\n    if (!isPermissionsLoading && !permissions?.granted) {\n      return {\n        tone: 'default',\n        icon: PublishIcon,\n        label: t('action.publish.label'),\n        title: (\n          <InsufficientPermissionsMessage context=\"publish-document\" currentUser={currentUser} />\n        ),\n        disabled: true,\n      }\n    }\n\n    const disabled = Boolean(\n      publishScheduled ||\n        editState?.transactionSyncLock?.enabled ||\n        publishState?.status === 'publishing' ||\n        publishState?.status === 'published' ||\n        hasValidationErrors ||\n        publish.disabled,\n    )\n\n    return {\n      disabled: disabled || isPermissionsLoading,\n      tone: 'default',\n      label:\n        publishState?.status === 'published'\n          ? t('action.publish.published.label')\n          : publishScheduled || publishState?.status === 'publishing'\n            ? t('action.publish.running.label')\n            : t('action.publish.draft.label'),\n      // @todo: Implement loading state, to show a `<Button loading />` state\n      // loading: publishScheduled || publishState === 'publishing',\n      icon: PublishIcon,\n      title: publishScheduled\n        ? t('action.publish.waiting')\n        : publishState?.status === 'published' || publishState?.status === 'publishing'\n          ? null\n          : title,\n      shortcut: disabled || publishScheduled ? null : 'Ctrl+Alt+P',\n      onHandle: handle,\n    }\n  }, [\n    release,\n    liveEdit,\n    value._id,\n    draft,\n    isPermissionsLoading,\n    permissions?.granted,\n    publishScheduled,\n    editState?.transactionSyncLock?.enabled,\n    publishState,\n    hasValidationErrors,\n    publish.disabled,\n    t,\n    title,\n    handle,\n    published?._updatedAt,\n    currentUser,\n  ])\n}\n\nPublishAction.action = 'publish'\nPublishAction.displayName = 'PublishAction'\n","import {UnpublishIcon} from '@sanity/icons'\nimport {useCallback, useMemo, useState} from 'react'\nimport {\n  type DocumentActionComponent,\n  type DocumentActionModalDialogProps,\n  InsufficientPermissionsMessage,\n  useCurrentUser,\n  useDocumentOperation,\n  useDocumentPairPermissions,\n  usePerspective,\n  useTranslation,\n} from 'sanity'\n\nimport {ConfirmDeleteDialog} from '../components'\nimport {structureLocaleNamespace} from '../i18n'\n\nconst DISABLED_REASON_KEY = {\n  NOT_PUBLISHED: 'action.unpublish.disabled.not-published',\n  NOT_READY: 'action.unpublish.disabled.not-ready',\n  LIVE_EDIT_ENABLED: 'action.unpublish.disabled.live-edit-enabled',\n}\n\n/** @internal */\nexport const UnpublishAction: DocumentActionComponent = ({\n  id,\n  type,\n  draft,\n  onComplete,\n  liveEdit,\n  release,\n}) => {\n  const {unpublish} = useDocumentOperation(id, type)\n  const [isConfirmDialogOpen, setConfirmDialogOpen] = useState(false)\n  const [permissions, isPermissionsLoading] = useDocumentPairPermissions({\n    id,\n    type,\n    permission: 'unpublish',\n  })\n  const currentUser = useCurrentUser()\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {selectedPerspective} = usePerspective()\n\n  const isDraft = selectedPerspective === 'drafts'\n\n  const handleCancel = useCallback(() => {\n    setConfirmDialogOpen(false)\n    onComplete()\n  }, [onComplete])\n\n  const handleConfirm = useCallback(() => {\n    setConfirmDialogOpen(false)\n    unpublish.execute()\n    onComplete()\n  }, [onComplete, unpublish])\n\n  const dialog: DocumentActionModalDialogProps | null = useMemo(() => {\n    if (isConfirmDialogOpen) {\n      return {\n        type: 'dialog',\n        onClose: onComplete,\n        content: (\n          <ConfirmDeleteDialog\n            id={draft?._id || id}\n            type={type}\n            action=\"unpublish\"\n            onCancel={handleCancel}\n            onConfirm={handleConfirm}\n          />\n        ),\n      }\n    }\n\n    return null\n  }, [draft, id, handleCancel, handleConfirm, isConfirmDialogOpen, onComplete, type])\n\n  return useMemo(() => {\n    if (release || isDraft) {\n      // Version documents cannot be unpublished by this action, they should be unpublished as part of a release\n      // Draft documents can't either\n      return null\n    }\n    if (liveEdit) {\n      return null\n    }\n\n    if (!isPermissionsLoading && !permissions?.granted) {\n      return {\n        tone: 'critical',\n        icon: UnpublishIcon,\n        label: 'Unpublish',\n        title: (\n          <InsufficientPermissionsMessage context=\"unpublish-document\" currentUser={currentUser} />\n        ),\n        disabled: true,\n      }\n    }\n\n    return {\n      tone: 'critical',\n      icon: UnpublishIcon,\n      disabled: Boolean(unpublish.disabled) || isPermissionsLoading,\n      label: t('action.unpublish.label'),\n      title: unpublish.disabled ? t(DISABLED_REASON_KEY[unpublish.disabled]) : '',\n      onHandle: () => setConfirmDialogOpen(true),\n      dialog,\n    }\n  }, [\n    release,\n    isDraft,\n    liveEdit,\n    isPermissionsLoading,\n    permissions?.granted,\n    unpublish.disabled,\n    t,\n    dialog,\n    currentUser,\n  ])\n}\n\nUnpublishAction.action = 'unpublish'\nUnpublishAction.displayName = 'UnpublishAction'\n","/* eslint-disable camelcase */\nimport {Flex, LayerProvider, Stack, Text} from '@sanity/ui'\nimport {memo, useCallback, useMemo, useState} from 'react'\nimport {\n  type DocumentActionComponent,\n  type DocumentActionDescription,\n  type DocumentActionProps,\n  Hotkeys,\n  isSanityDefinedAction,\n  usePerspective,\n  useSource,\n} from 'sanity'\n\nimport {Button, Tooltip} from '../../../../ui-components'\nimport {RenderActionCollectionState, type ResolvedAction} from '../../../components'\nimport {HistoryRestoreAction} from '../../../documentActions'\nimport {toLowerCaseNoSpaces} from '../../../util/toLowerCaseNoSpaces'\nimport {useDocumentPane} from '../useDocumentPane'\nimport {ActionMenuButton} from './ActionMenuButton'\nimport {ActionStateDialog} from './ActionStateDialog'\n\ninterface DocumentStatusBarActionsInnerProps {\n  disabled: boolean\n  states: ResolvedAction[]\n}\n\nconst DocumentStatusBarActionsInner = memo(function DocumentStatusBarActionsInner(\n  props: DocumentStatusBarActionsInnerProps,\n) {\n  const {disabled, states} = props\n  const {__internal_tasks} = useSource()\n  const {editState} = useDocumentPane()\n  const {selectedReleaseId} = usePerspective()\n  const [firstActionState, ...menuActionStates] = states\n  const [buttonElement, setButtonElement] = useState<HTMLButtonElement | null>(null)\n\n  // TODO: This could be refactored to use the tooltip from the button if the firstAction.title was updated to a string.\n  const tooltipContent = useMemo(() => {\n    if (!firstActionState || (!firstActionState.title && !firstActionState.shortcut)) return null\n\n    return (\n      <Flex style={{maxWidth: 300}} align=\"center\" gap={3}>\n        {firstActionState.title && <Text size={1}>{firstActionState.title}</Text>}\n        {firstActionState.shortcut && (\n          <Hotkeys\n            data-testid=\"document-status-bar-hotkeys\"\n            fontSize={1}\n            style={{marginTop: -4, marginBottom: -4}}\n            keys={String(firstActionState.shortcut)\n              .split('+')\n              .map((s) => s.slice(0, 1).toUpperCase() + s.slice(1).toLowerCase())}\n          />\n        )}\n      </Flex>\n    )\n  }, [firstActionState])\n  const showFirstActionButton = selectedReleaseId\n    ? // If the first action is a custom action and we are in a version document show it.\n      firstActionState && !isSanityDefinedAction(firstActionState)\n    : firstActionState && !editState?.liveEdit\n\n  const sideMenuItems = useMemo(() => {\n    return showFirstActionButton ? menuActionStates : [firstActionState, ...menuActionStates]\n  }, [showFirstActionButton, firstActionState, menuActionStates])\n\n  return (\n    <Flex align=\"center\" gap={1}>\n      {__internal_tasks && __internal_tasks.footerAction}\n      {showFirstActionButton && (\n        <LayerProvider zOffset={200}>\n          <Tooltip disabled={!tooltipContent} content={tooltipContent} placement=\"top\">\n            <Stack>\n              <Button\n                data-testid={`action-${toLowerCaseNoSpaces(firstActionState.label)}`}\n                disabled={disabled || Boolean(firstActionState.disabled)}\n                icon={firstActionState.icon}\n                // eslint-disable-next-line react/jsx-handler-names\n                onClick={firstActionState.onHandle}\n                ref={setButtonElement}\n                text={firstActionState.label}\n                tone={firstActionState.tone || 'primary'}\n              />\n            </Stack>\n          </Tooltip>\n        </LayerProvider>\n      )}\n      {sideMenuItems.length > 0 && (\n        <ActionMenuButton actionStates={sideMenuItems} disabled={disabled} />\n      )}\n      {firstActionState && firstActionState.dialog && (\n        <ActionStateDialog dialog={firstActionState.dialog} referenceElement={buttonElement} />\n      )}\n    </Flex>\n  )\n})\n\nexport const DocumentStatusBarActions = memo(function DocumentStatusBarActions() {\n  const {\n    actions: allActions,\n    connectionState,\n    documentId,\n    editState,\n    isInitialValueLoading,\n  } = useDocumentPane()\n\n  // The restore action has a dedicated place in the UI; it's only visible when the user is viewing\n  // a different document revision. It must be omitted from this collection.\n  const actions = useMemo(\n    () => (allActions ?? []).filter((action) => !isRestoreAction(action)),\n    [allActions],\n  )\n  const actionProps: Omit<DocumentActionProps, 'onComplete'> | null = useMemo(\n    () => (editState ? {...editState, initialValueResolved: !isInitialValueLoading} : null),\n    [editState, isInitialValueLoading],\n  )\n\n  const renderDocumentStatusBarActions = useCallback<\n    (props: {states: ResolvedAction[]}) => React.ReactNode\n  >(\n    ({states}) => (\n      <DocumentStatusBarActionsInner\n        // Use document ID as key to make sure that the actions state is reset when the document changes\n        key={documentId}\n        disabled={connectionState !== 'connected'}\n        states={states}\n      />\n    ),\n    [connectionState, documentId],\n  )\n\n  if (actions.length === 0 || !actionProps) {\n    return null\n  }\n\n  return (\n    <RenderActionCollectionState actions={actions} actionProps={actionProps} group=\"default\">\n      {renderDocumentStatusBarActions}\n    </RenderActionCollectionState>\n  )\n})\n\nexport const HistoryStatusBarActions = memo(function HistoryStatusBarActions() {\n  const {\n    actions,\n    connectionState,\n    editState,\n    revisionId: revision,\n    isInitialValueLoading,\n  } = useDocumentPane()\n\n  const disabled = (editState?.draft || editState?.published || {})._rev === revision\n  const actionProps: Omit<DocumentActionProps, 'onComplete'> | null = useMemo(\n    () =>\n      editState\n        ? {\n            ...editState,\n            revision: revision || undefined,\n            initialValueResolved: !isInitialValueLoading,\n          }\n        : null,\n    [editState, revision, isInitialValueLoading],\n  )\n\n  // If multiple `restore` actions are defined, ensure only the final one is used.\n  const historyActions = useMemo(() => (actions ?? []).filter(isRestoreAction).slice(-1), [actions])\n\n  const renderDocumentStatusBarActions = useCallback<\n    (props: {states: DocumentActionDescription[]}) => React.ReactNode\n  >(\n    ({states}) => (\n      <DocumentStatusBarActionsInner\n        disabled={connectionState !== 'connected' || Boolean(disabled)}\n        states={states}\n      />\n    ),\n    [connectionState, disabled],\n  )\n  if (!actionProps) {\n    return null\n  }\n  return (\n    <RenderActionCollectionState actions={historyActions} actionProps={actionProps} group=\"default\">\n      {renderDocumentStatusBarActions}\n    </RenderActionCollectionState>\n  )\n})\n\nexport function isRestoreAction(\n  action: DocumentActionComponent,\n): action is DocumentActionComponent & {action: 'restore'} {\n  return action.action === HistoryRestoreAction.action\n}\n","import {useEffect, useState} from 'react'\n\n/**\n * This hook is used to determine if the gradient should be shown on the chip scroll container.\n * It uses an IntersectionObserver to observe the last child of the container and sets the showGradient state based on the intersection.\n * @param containerRef - The ref to the container that contains all the chips\n * @returns showGradient - A boolean that determines if the gradient should be shown\n * @internal\n */\nexport function useChipScrollPosition(containerRef: React.RefObject<HTMLDivElement | null>) {\n  const [showGradient, setShowGradient] = useState(false)\n\n  useEffect(() => {\n    const checkOverflow = () => {\n      // container is the parent that contains all the chips\n      const container = containerRef.current\n      if (!container) return\n      const {scrollWidth, clientWidth} = container\n      const needsScrolling = scrollWidth > clientWidth\n\n      if (!needsScrolling) {\n        setShowGradient(false)\n        return\n      }\n\n      // Check if scrolled to the end\n      // becausee it doesn't need to show the gradient then\n      const {scrollLeft} = container\n      const isAtEnd = scrollLeft + clientWidth >= scrollWidth\n      setShowGradient(!isAtEnd)\n    }\n\n    function setupObservers() {\n      checkOverflow()\n      // container is the parent that contains all the chips\n      const container = containerRef.current\n      if (!container) return {intersectionObserver: null, mutationObserver: null}\n\n      const intersectionObserver = new IntersectionObserver((entries) => {\n        const entry = entries[0]\n\n        if (entry) {\n          setShowGradient(!entry.isIntersecting)\n        }\n      })\n\n      const updateLastChipObserver = () => {\n        // Disconnect previous observation\n        intersectionObserver.disconnect()\n\n        // Get the new last child\n        const lastChip = container.children[container.children.length - 1]\n        intersectionObserver.observe(lastChip)\n      }\n\n      // Set up initial observation\n      updateLastChipObserver()\n\n      // Set up mutation observer to watch for changes to children\n      // this is needed because sometimes the list of releases takes some time to be rendered\n      // otherwise it could accidentally set the last child as the \"drafts\" / \"published\" chip\n      const mutationObserver = new MutationObserver(() => {\n        updateLastChipObserver()\n        checkOverflow()\n      })\n\n      mutationObserver.observe(container, {\n        childList: true,\n        subtree: false,\n      })\n\n      return {intersectionObserver, mutationObserver}\n    }\n\n    const {intersectionObserver, mutationObserver} = setupObservers()\n\n    return () => {\n      intersectionObserver?.disconnect()\n      mutationObserver?.disconnect()\n    }\n  }, [containerRef])\n\n  return showGradient\n}\n","import {Text} from '@sanity/ui'\nimport {memo, useCallback, useMemo} from 'react'\nimport {\n  formatRelativeLocalePublishDate,\n  getReleaseIdFromReleaseDocumentId,\n  getReleaseTone,\n  getVersionFromId,\n  isDraftId,\n  isGoingToUnpublish,\n  isPublishedId,\n  isPublishedPerspective,\n  isReleaseScheduledOrScheduling,\n  isVersionId,\n  type ReleaseDocument,\n  type SanityDocumentLike,\n  Translate,\n  useActiveReleases,\n  useDateTimeFormat,\n  type UseDateTimeFormatOptions,\n  useOnlyHasVersions,\n  usePerspective,\n  useSchema,\n  useSetPerspective,\n  useTranslation,\n  useWorkspace,\n  VersionChip,\n} from 'sanity'\n\nimport {isLiveEditEnabled} from '../../../../../components/paneItem/helpers'\nimport {usePaneRouter} from '../../../../../components/paneRouter/usePaneRouter'\nimport {useFilteredReleases} from '../../../../../hooks/useFilteredReleases'\nimport {useDocumentPane} from '../../../useDocumentPane'\n\nconst TooltipContent = ({release}: {release: ReleaseDocument}) => {\n  const {t} = useTranslation()\n\n  if (release.state === 'archived') {\n    return <Text size={1}>{t('release.chip.tooltip.archived')}</Text>\n  }\n  if (release.metadata.releaseType === 'asap') {\n    return <Text size={1}>{t('release.type.asap')}</Text>\n  }\n  if (release.metadata.releaseType === 'scheduled') {\n    const isActive = release.state === 'active'\n\n    return (\n      release.metadata.intendedPublishAt && (\n        <Text size={1}>\n          {isActive ? (\n            <Translate\n              t={t}\n              i18nKey=\"release.chip.tooltip.intended-for-date\"\n              values={{\n                date: formatRelativeLocalePublishDate(release),\n              }}\n            />\n          ) : (\n            <Translate\n              t={t}\n              i18nKey=\"release.chip.tooltip.scheduled-for-date\"\n              values={{\n                date: formatRelativeLocalePublishDate(release),\n              }}\n            />\n          )}\n        </Text>\n      )\n    )\n  }\n\n  if (release.metadata.releaseType === 'undecided') {\n    return <Text size={1}>{t('release.type.undecided')}</Text>\n  }\n  return null\n}\n\nconst DATE_TIME_FORMAT: UseDateTimeFormatOptions = {\n  dateStyle: 'medium',\n  timeStyle: 'short',\n}\n\n// eslint-disable-next-line complexity\nexport const DocumentPerspectiveList = memo(function DocumentPerspectiveList() {\n  const {selectedReleaseId, selectedPerspectiveName} = usePerspective()\n  const {t} = useTranslation()\n  const setPerspective = useSetPerspective()\n  const {params, setParams} = usePaneRouter()\n  const dateTimeFormat = useDateTimeFormat(DATE_TIME_FORMAT)\n  const {loading} = useActiveReleases()\n  const schema = useSchema()\n  const {editState, displayed, documentType, documentId} = useDocumentPane()\n  const isCreatingDocument = displayed && !displayed._createdAt\n  const filteredReleases = useFilteredReleases({displayed, documentId})\n  const onlyHasVersions = useOnlyHasVersions({documentId})\n  const workspace = useWorkspace()\n\n  const handlePerspectiveChange = useCallback(\n    (perspective: Parameters<typeof setPerspective>[0]) => () => {\n      if (perspective === 'published' && params?.historyVersion) {\n        setParams({\n          ...params,\n          rev: params?.historyEvent || undefined,\n          since: undefined,\n          historyVersion: undefined,\n        })\n      }\n      setPerspective(perspective)\n    },\n    [setPerspective, setParams, params],\n  )\n\n  const schemaType = schema.get(documentType)\n  const isLiveEdit = schemaType ? isLiveEditEnabled(schemaType) : false\n\n  const isPublishedChipDisabled = useMemo(() => {\n    // If it's a live edit document the only option to edit it is through\n    // the published perspective, users should be able to select it.\n    if (isLiveEdit && !selectedReleaseId) return false\n\n    // If it's not live edit, we want to check for the existence of the published doc.\n    return !editState?.published\n  }, [isLiveEdit, selectedReleaseId, editState?.published])\n\n  const getReleaseChipState = useCallback(\n    (release: ReleaseDocument): {selected: boolean; disabled?: boolean} => {\n      if (!params?.historyVersion) {\n        const isCurrentVersionGoingToUnpublish =\n          editState?.version &&\n          isGoingToUnpublish(editState?.version) &&\n          getReleaseIdFromReleaseDocumentId(release._id) ===\n            getVersionFromId(editState?.version?._id)\n\n        return {\n          selected: Boolean(\n            getReleaseIdFromReleaseDocumentId(release._id) ===\n              getVersionFromId(displayed?._id || '') || isCurrentVersionGoingToUnpublish,\n          ),\n        }\n      }\n\n      const isReleaseHistoryMatch =\n        getReleaseIdFromReleaseDocumentId(release._id) === params.historyVersion\n\n      return {selected: isReleaseHistoryMatch, disabled: isReleaseHistoryMatch}\n    },\n    [displayed?._id, editState?.version, params?.historyVersion],\n  )\n\n  const isPublishSelected: boolean = useMemo(() => {\n    /**\n     * The publish perspective is selected when:\n     *  - the document is live edit and there is no draft\n     *  - the document is published and the selected perspective is published\n     */\n    if (isLiveEdit && !editState?.draft?._id && !selectedReleaseId) return true\n    if (\n      isPublishedId(displayed?._id || '') &&\n      isPublishedPerspective(selectedPerspectiveName || '')\n    ) {\n      return true\n    }\n    return false\n  }, [\n    displayed?._id,\n    editState?.draft?._id,\n    isLiveEdit,\n    selectedPerspectiveName,\n    selectedReleaseId,\n  ])\n\n  const isDraftSelected: boolean = useMemo(() => {\n    const displayedId = displayed?._id || ''\n    /** the draft is selected when:\n     * not viewing a historical version,\n     * when the document displayed is a draft,\n     * when the perspective is null,\n     * when the document is not published and the displayed version is draft,\n     * when there is no draft (new document),\n     */\n    if (isPublishSelected) return false\n    if (params?.historyVersion) return false\n    if (selectedPerspectiveName) return false\n    if (isVersionId(displayedId)) return false\n    if (isDraftId(displayedId)) return true\n    if (\n      isPublishedId(displayedId) &&\n      editState?.published &&\n      isPublishedPerspective(selectedPerspectiveName || '')\n    )\n      return false\n    return true\n  }, [\n    displayed?._id,\n    editState?.published,\n    isPublishSelected,\n    params?.historyVersion,\n    selectedPerspectiveName,\n  ])\n\n  const isDraftDisabled: boolean = useMemo(() => {\n    // Draft is disabled when the document has no published or draft but has versions\n    if (onlyHasVersions || (isCreatingDocument && selectedReleaseId)) {\n      return true\n    }\n\n    // Draft is disabled when we are creating a new document inside a release\n    // or when the document is live edit and there is no draft\n    if (!editState?.draft && !isLiveEdit) {\n      return false\n    }\n\n    if (isCreatingDocument && selectedReleaseId) return true\n    if (isLiveEdit) return true\n    return false\n  }, [editState?.draft, isCreatingDocument, isLiveEdit, onlyHasVersions, selectedReleaseId])\n\n  const isDraftModelEnabled = workspace.document.drafts?.enabled\n\n  return (\n    <>\n      <VersionChip\n        tooltipContent={\n          <Text size={1}>\n            {editState?.published && editState?.published?._updatedAt ? (\n              <Translate\n                t={t}\n                i18nKey=\"release.chip.tooltip.published-date\"\n                values={{date: dateTimeFormat.format(new Date(editState?.published._updatedAt))}}\n              />\n            ) : (\n              <>{t('release.chip.tooltip.not-published')}</>\n            )}\n          </Text>\n        }\n        disabled={isPublishedChipDisabled}\n        onClick={handlePerspectiveChange('published')}\n        selected={isPublishSelected}\n        text={t('release.chip.published')}\n        tone=\"positive\"\n        contextValues={{\n          documentId: editState?.published?._id || editState?.id || '',\n          menuReleaseId: editState?.published?._id || editState?.id || '',\n          releases: filteredReleases.notCurrentReleases,\n          releasesLoading: loading,\n          documentType,\n          fromRelease: 'published',\n          isVersion: false,\n          disabled: !editState?.published,\n        }}\n      />\n      {isDraftModelEnabled && (\n        <VersionChip\n          tooltipContent={\n            <Text size={1}>\n              {editState?.draft ? (\n                <>\n                  {editState?.draft._updatedAt ? (\n                    <Translate\n                      t={t}\n                      i18nKey=\"release.chip.tooltip.edited-date\"\n                      values={{date: dateTimeFormat.format(new Date(editState?.draft._updatedAt))}}\n                    />\n                  ) : (\n                    <Translate\n                      t={t}\n                      i18nKey=\"release.chip.tooltip.created-date\"\n                      values={{date: dateTimeFormat.format(new Date(editState?.draft._createdAt))}}\n                    />\n                  )}\n                </>\n              ) : (\n                <>\n                  {isLiveEdit\n                    ? t('release.chip.tooltip.draft-disabled.live-edit')\n                    : t('release.chip.tooltip.no-edits')}\n                </>\n              )}\n            </Text>\n          }\n          selected={isDraftSelected}\n          disabled={isDraftDisabled}\n          text={t('release.chip.draft')}\n          tone={editState?.draft ? 'caution' : 'neutral'}\n          onClick={handlePerspectiveChange('drafts')}\n          contextValues={{\n            documentId: editState?.draft?._id || editState?.published?._id || editState?.id || '',\n            menuReleaseId:\n              editState?.draft?._id || editState?.published?._id || editState?.id || '',\n            releases: filteredReleases.notCurrentReleases,\n            releasesLoading: loading,\n            documentType: documentType,\n            fromRelease: 'draft',\n            isVersion: false,\n          }}\n        />\n      )}\n      {filteredReleases.inCreation && (\n        <VersionChip\n          tooltipContent={<TooltipContent release={filteredReleases.inCreation} />}\n          selected\n          onClick={() => {}}\n          locked={false}\n          tone={getReleaseTone(filteredReleases.inCreation)}\n          text={\n            filteredReleases.inCreation.metadata.title || t('release.placeholder-untitled-release')\n          }\n          contextValues={{\n            disabled: true, // disable the chip context menu, this one is in creation\n            documentId: displayed?._id || '',\n            menuReleaseId: filteredReleases.inCreation._id,\n            releases: filteredReleases.notCurrentReleases,\n            releasesLoading: loading,\n            documentType,\n            fromRelease: getReleaseIdFromReleaseDocumentId(filteredReleases.inCreation._id),\n            releaseState: filteredReleases.inCreation.state,\n            isVersion: true,\n          }}\n        />\n      )}\n\n      {displayed &&\n        filteredReleases.currentReleases?.map((release) => (\n          <VersionChip\n            key={release._id}\n            tooltipContent={<TooltipContent release={release} />}\n            {...getReleaseChipState(release)}\n            onClick={handlePerspectiveChange(getReleaseIdFromReleaseDocumentId(release._id))}\n            text={release.metadata.title || t('release.placeholder-untitled-release')}\n            tone={getReleaseTone(release)}\n            locked={isReleaseScheduledOrScheduling(release)}\n            contextValues={{\n              documentId: displayed?._id || '',\n              menuReleaseId: release._id,\n              releases: filteredReleases.notCurrentReleases,\n              releasesLoading: loading,\n              documentType: documentType,\n              fromRelease: getReleaseIdFromReleaseDocumentId(release._id),\n              releaseState: release.state,\n              isVersion: true,\n              // displayed, in this instance is not going to be the version to compare to\n              // since it's going to be the published version\n              isGoingToUnpublish: editState?.version\n                ? isGoingToUnpublish(editState?.version as SanityDocumentLike)\n                : false,\n            }}\n          />\n        ))}\n    </>\n  )\n})\n","import {ArrowLeftIcon, CloseIcon, SplitVerticalIcon} from '@sanity/icons'\nimport {Box, Card, Flex} from '@sanity/ui'\n// eslint-disable-next-line camelcase\nimport {getTheme_v2, rgba} from '@sanity/ui/theme'\nimport {\n  type ForwardedRef,\n  forwardRef,\n  memo,\n  useCallback,\n  useDeferredValue,\n  useMemo,\n  useRef,\n  useState,\n} from 'react'\nimport {type DocumentActionDescription, useFieldActions, useTranslation} from 'sanity'\nimport {css, styled} from 'styled-components'\n\nimport {Button, TooltipDelayGroupProvider} from '../../../../../ui-components'\nimport {\n  PaneContextMenuButton,\n  PaneHeader,\n  PaneHeaderActionButton,\n  RenderActionCollectionState,\n  usePane,\n  usePaneRouter,\n} from '../../../../components'\nimport {type _PaneMenuNode} from '../../../../components/pane/types'\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {isMenuNodeButton, isNotMenuNodeButton, resolveMenuNodes} from '../../../../menuNodes'\nimport {type PaneMenuItem} from '../../../../types'\nimport {useStructureTool} from '../../../../useStructureTool'\nimport {ActionDialogWrapper, ActionMenuListItem} from '../../statusBar/ActionMenuButton'\nimport {isRestoreAction} from '../../statusBar/DocumentStatusBarActions'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {DocumentHeaderTitle} from './DocumentHeaderTitle'\nimport {useChipScrollPosition} from './hook/useChipScrollPosition'\nimport {DocumentPerspectiveList} from './perspective/DocumentPerspectiveList'\n\nexport interface DocumentPanelHeaderProps {\n  menuItems: PaneMenuItem[]\n}\n\nconst HorizontalScroller = styled(Card)<{$showGradient: boolean}>((props) => {\n  const theme = getTheme_v2(props.theme)\n\n  return css`\n    scrollbar-width: none;\n    z-index: 1;\n    flex: 1;\n    position: relative;\n    > div {\n      &::-webkit-scrollbar {\n        width: 0;\n        height: 0;\n      }\n    }\n\n    ${props.$showGradient &&\n    css`\n      &::after {\n        content: '';\n        display: block;\n        position: absolute;\n        top: 0;\n        right: 0;\n        bottom: 0;\n        width: 150px;\n        background: linear-gradient(to right, ${rgba(theme.color.bg, 0)}, var(--card-bg-color));\n        transition: 'opacity 300ms ease-out';\n        pointer-events: none;\n      }\n    `}\n  `\n})\n\nexport const DocumentPanelHeader = memo(\n  forwardRef(function DocumentPanelHeader(\n    _props: DocumentPanelHeaderProps,\n    ref: ForwardedRef<HTMLDivElement>,\n  ) {\n    const {menuItems} = _props\n    const {\n      actions: allActions,\n      editState,\n      onMenuAction,\n      isInitialValueLoading,\n      onPaneClose,\n      onPaneSplit,\n      menuItemGroups,\n      schemaType,\n      connectionState,\n      views,\n      unstable_languageFilter,\n    } = useDocumentPane()\n    const {features} = useStructureTool()\n    const {index, BackLink, hasGroupSiblings} = usePaneRouter()\n    const {actions: fieldActions} = useFieldActions()\n    const [referenceElement, setReferenceElement] = useState<HTMLElement | null>(null)\n    const scrollContainerRef = useRef<HTMLDivElement>(null)\n    const showGradient = useChipScrollPosition(scrollContainerRef)\n\n    // The restore action has a dedicated place in the UI; it's only visible when the user is\n    // viewing a different document revision. It must be omitted from this collection.\n    const actions = useMemo(\n      () => (allActions ?? []).filter((action) => !isRestoreAction(action)),\n      [allActions],\n    )\n\n    const menuNodes = useMemo(\n      () =>\n        resolveMenuNodes({actionHandler: onMenuAction, fieldActions, menuItems, menuItemGroups}),\n      [onMenuAction, fieldActions, menuItemGroups, menuItems],\n    )\n\n    const menuButtonNodes = useMemo(() => menuNodes.filter(isMenuNodeButton), [menuNodes])\n    const contextMenuNodes = useMemo(() => menuNodes.filter(isNotMenuNodeButton), [menuNodes])\n    const showTabs = views.length > 1\n\n    const {collapsed, isLast} = usePane()\n    // Prevent focus if this is the last (non-collapsed) pane.\n    const tabIndex = isLast && !collapsed ? -1 : 0\n\n    // there are three kinds of buttons possible:\n    //\n    // 1. split pane - creates a new split pane\n    // 2. close split pane — closes the current split pane\n    // 3. close pane group — closes the current pane group\n\n    // show the split pane button if they're enabled and there is more than one\n    // view available to use to create a split view\n    const showSplitPaneButton = features.splitViews && onPaneSplit && views.length > 1\n\n    // show the split pane button close button if the split button is showing\n    // and there is more than one split pane open (aka has-siblings)\n    const showSplitPaneCloseButton = showSplitPaneButton && hasGroupSiblings\n\n    // show the back button if both the feature is enabled and the current pane\n    // is not the first\n    const showBackButton = features.backButton && index > 0\n\n    // show the pane group close button if the `showSplitPaneCloseButton` is\n    // _not_ showing (the split pane button replaces the group close button)\n    // and if the back button is not showing (the back button and the close\n    // button do the same thing and shouldn't be shown at the same time)\n    // and if a BackLink component was provided\n    const showPaneGroupCloseButton = !showSplitPaneCloseButton && !showBackButton && !!BackLink\n\n    const {t} = useTranslation(structureLocaleNamespace)\n\n    const renderPaneActions = useCallback<\n      (props: {states: DocumentActionDescription[]}) => React.ReactNode\n    >(\n      ({states}) => (\n        <DocumentPanelHeaderActionDialogDeferred\n          contextMenuNodes={contextMenuNodes}\n          setReferenceElement={setReferenceElement}\n          referenceElement={referenceElement}\n          states={states}\n        />\n      ),\n      [contextMenuNodes, referenceElement],\n    )\n\n    const title = useMemo(() => <DocumentHeaderTitle />, [])\n    const backButton = useMemo(\n      () =>\n        showBackButton && (\n          <Button\n            as={BackLink}\n            data-as=\"a\"\n            icon={ArrowLeftIcon}\n            mode=\"bleed\"\n            tooltipProps={{content: t('pane-header.back-button.text')}}\n          />\n        ),\n      [BackLink, showBackButton, t],\n    )\n    const renderedActions = useMemo(\n      () => (\n        <Flex align=\"center\" gap={1}>\n          {unstable_languageFilter.length > 0 && (\n            <>\n              {unstable_languageFilter.map((LanguageFilterComponent, idx) => {\n                return (\n                  <LanguageFilterComponent key={`language-filter-${idx}`} schemaType={schemaType} />\n                )\n              })}\n            </>\n          )}\n\n          {menuButtonNodes.map((item) => (\n            <PaneHeaderActionButton key={item.key} node={item} />\n          ))}\n          {editState && (\n            <RenderActionCollectionState\n              actions={actions}\n              actionProps={{...editState, initialValueResolved: !isInitialValueLoading}}\n              group=\"paneActions\"\n            >\n              {renderPaneActions}\n            </RenderActionCollectionState>\n          )}\n\n          {showSplitPaneButton && (\n            <Button\n              key=\"split-pane-button\"\n              aria-label={t('buttons.split-pane-button.aria-label')}\n              icon={SplitVerticalIcon}\n              mode=\"bleed\"\n              onClick={onPaneSplit}\n              tooltipProps={{content: t('buttons.split-pane-button.tooltip')}}\n            />\n          )}\n\n          {showSplitPaneCloseButton && (\n            <Button\n              key=\"close-view-button\"\n              icon={CloseIcon}\n              mode=\"bleed\"\n              onClick={onPaneClose}\n              tooltipProps={{content: t('buttons.split-pane-close-button.title')}}\n            />\n          )}\n\n          {showPaneGroupCloseButton && (\n            <Button\n              key=\"close-view-button\"\n              icon={CloseIcon}\n              mode=\"bleed\"\n              tooltipProps={{content: t('buttons.split-pane-close-group-button.title')}}\n              as={BackLink}\n            />\n          )}\n        </Flex>\n      ),\n      [\n        BackLink,\n        actions,\n        editState,\n        isInitialValueLoading,\n        menuButtonNodes,\n        onPaneClose,\n        onPaneSplit,\n        renderPaneActions,\n        schemaType,\n        showPaneGroupCloseButton,\n        showSplitPaneButton,\n        showSplitPaneCloseButton,\n        t,\n        unstable_languageFilter,\n      ],\n    )\n\n    return (\n      <TooltipDelayGroupProvider>\n        {collapsed ? (\n          <PaneHeader\n            border\n            ref={ref}\n            loading={connectionState === 'connecting' && !editState?.draft && !editState?.published}\n            title={title}\n            tabIndex={tabIndex}\n            backButton={backButton}\n          />\n        ) : (\n          <Card hidden={collapsed} style={{lineHeight: 0}} borderBottom>\n            <Flex gap={3} paddingY={3}>\n              <HorizontalScroller $showGradient={showGradient}>\n                <Flex\n                  flex={1}\n                  gap={1}\n                  overflow=\"auto\"\n                  paddingX={3}\n                  data-testid=\"document-perspective-list\"\n                  ref={scrollContainerRef}\n                >\n                  <DocumentPerspectiveList />\n                </Flex>\n              </HorizontalScroller>\n\n              <Box flex=\"none\" paddingRight={3}>\n                {renderedActions}\n              </Box>\n            </Flex>\n          </Card>\n        )}\n      </TooltipDelayGroupProvider>\n    )\n  }),\n)\n\nconst DocumentPanelHeaderActionDialogDeferred = memo(\n  function DocumentPanelHeaderActionDialogDeferred(props: {\n    states: DocumentActionDescription[]\n    setReferenceElement: React.Dispatch<React.SetStateAction<HTMLElement | null>>\n    referenceElement: HTMLElement | null\n    contextMenuNodes: _PaneMenuNode[]\n  }) {\n    const {setReferenceElement, referenceElement, contextMenuNodes} = props\n    /**\n     * The purpose of this component is to allow deferring the rendering of document action hook states if the main thread becomes very busy.\n     * The `useDeferredValue` doesn't have an effect unless it's used to delay rendering a component that has `React.memo` to prevent unnecessary re-renders.\n     */\n    const states = useDeferredValue(props.states)\n\n    return (\n      <DocumentPanelHeaderActionDialog\n        setReferenceElement={setReferenceElement}\n        referenceElement={referenceElement}\n        contextMenuNodes={contextMenuNodes}\n        states={states}\n      />\n    )\n  },\n)\n\nconst DocumentPanelHeaderActionDialog = memo(function DocumentPanelHeaderActionDialog(props: {\n  states: DocumentActionDescription[]\n  setReferenceElement: React.Dispatch<React.SetStateAction<HTMLElement | null>>\n  referenceElement: HTMLElement | null\n  contextMenuNodes: _PaneMenuNode[]\n}) {\n  const {states, setReferenceElement, contextMenuNodes, referenceElement} = props\n\n  const renderActionDialog = useCallback<\n    ({handleAction}: {handleAction: (idx: number) => void}) => React.ReactNode\n  >(\n    ({handleAction}) => (\n      <div ref={setReferenceElement}>\n        <PaneContextMenuButton\n          key=\"context-menu\"\n          nodes={contextMenuNodes}\n          actionsNodes={\n            states.length > 0\n              ? states.map((actionState, actionIndex) => (\n                  <ActionMenuListItem\n                    key={actionState.label}\n                    actionState={actionState}\n                    disabled={Boolean(actionState.disabled)}\n                    index={actionIndex}\n                    onAction={handleAction}\n                  />\n                ))\n              : undefined\n          }\n        />\n      </div>\n    ),\n    [contextMenuNodes, setReferenceElement, states],\n  )\n\n  return (\n    <ActionDialogWrapper actionStates={states} referenceElement={referenceElement}>\n      {renderActionDialog}\n    </ActionDialogWrapper>\n  )\n})\n","import {Button, type ButtonProps} from '../../../ui-components'\n\ninterface SpacerButtonProps {\n  size?: ButtonProps['size']\n}\n\n/**\n * This renders a visually hidden <Button> component that is still contributes\n * to document layout.\n *\n * It's used to simplify padding in Sanity UI components that contain buttons which\n * may not always be rendered.\n *\n * TODO: let's find a more elegant solve to this layout shift problem\n *\n * @internal\n */\nexport function SpacerButton({size}: SpacerButtonProps) {\n  return (\n    <Button\n      aria-hidden\n      disabled\n      size={size}\n      style={{\n        pointerEvents: 'none',\n        visibility: 'hidden',\n        width: 0,\n      }}\n      text=\"-\"\n    />\n  )\n}\n","import {Badge, type BadgeTone, Inline} from '@sanity/ui'\nimport {memo, useCallback, useDeferredValue} from 'react'\nimport {type DocumentBadgeDescription} from 'sanity'\n\nimport {Tooltip} from '../../../../ui-components'\nimport {RenderBadgeCollectionState} from '../../../components'\nimport {useDocumentPane} from '../useDocumentPane'\n\ninterface DocumentBadgesInnerProps {\n  states: DocumentBadgeDescription[]\n}\n\nconst BADGE_TONES: Record<string, BadgeTone | undefined> = {\n  primary: 'primary',\n  success: 'positive',\n  warning: 'caution',\n  danger: 'critical',\n}\n\nconst DocumentBadgesInner = memo(function DocumentBadgesInner({states}: DocumentBadgesInnerProps) {\n  if (states.length === 0) {\n    return null\n  }\n  return (\n    <Inline space={1}>\n      {states.map((badge, index) => (\n        <Tooltip\n          key={`${badge.label}-${index}`}\n          content={badge.title}\n          disabled={!badge.title}\n          placement=\"top\"\n          portal\n        >\n          <Badge\n            fontSize={1}\n            mode=\"outline\"\n            paddingX={2}\n            paddingY={1}\n            radius={4}\n            tone={badge.color ? BADGE_TONES[badge.color] : undefined}\n            style={{whiteSpace: 'nowrap'}}\n          >\n            {badge.label}\n          </Badge>\n        </Tooltip>\n      ))}\n    </Inline>\n  )\n})\n\nconst DocumentBadgesDeferred = memo(function DocumentBadgesDeferred(\n  props: DocumentBadgesInnerProps,\n) {\n  /**\n   * The purpose of this component is to allow deferring the rendering of document action hook states if the main thread becomes very busy.\n   * The `useDeferredValue` doesn't have an effect unless it's used to delay rendering a component that has `React.memo` to prevent unnecessary re-renders.\n   */\n  const states = useDeferredValue(props.states)\n  return <DocumentBadgesInner states={states} />\n})\n\nexport function DocumentBadges() {\n  const {badges, editState} = useDocumentPane()\n\n  const renderDocumentBadges = useCallback<\n    (props: {states: DocumentBadgeDescription[]}) => React.ReactNode\n  >(({states}) => <DocumentBadgesDeferred states={states} />, [])\n\n  if (!editState || !badges) return null\n\n  return (\n    <RenderBadgeCollectionState badges={badges} badgeProps={editState}>\n      {renderDocumentBadges}\n    </RenderBadgeCollectionState>\n  )\n}\n","import {\n  AddIcon,\n  CloseIcon,\n  EditIcon,\n  type IconComponent,\n  PublishIcon,\n  TrashIcon,\n  UnpublishIcon,\n} from '@sanity/icons'\n\nexport const TIMELINE_ICON_COMPONENTS: {[key: string]: IconComponent | undefined} = {\n  create: AddIcon,\n  delete: TrashIcon,\n  discardDraft: CloseIcon,\n  initial: AddIcon,\n  editDraft: EditIcon,\n  editLive: EditIcon,\n  publish: PublishIcon,\n  unpublish: UnpublishIcon,\n}\n","import {type IconComponent} from '@sanity/icons'\nimport {type ChunkType} from 'sanity'\n\nimport {TIMELINE_ICON_COMPONENTS} from './constants'\n\nexport function getTimelineEventIconComponent(type: ChunkType): IconComponent | undefined {\n  return TIMELINE_ICON_COMPONENTS[type]\n}\n","import {ChevronLeftIcon} from '@sanity/icons'\nimport {type MouseEvent, useCallback} from 'react'\nimport {useTranslation} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Button} from '../../../../ui-components'\nimport {structureLocaleNamespace} from '../../../i18n'\nimport {TIMELINE_LIST_WRAPPER_ID} from './timeline'\n\n/**\n * This is a hack to force the scrollbar to not appear when the list is expanding,\n * if we don't do this the scrollbar will appear for a brief moment when the list is expanding and then disappear\n * when the list is fully expanded.\n */\nfunction hideScrollbarOnExpand(isExpanded: boolean) {\n  // Do nothing if the list is already expanded\n  if (isExpanded) return\n\n  const listWrapper = document.getElementById(TIMELINE_LIST_WRAPPER_ID)\n\n  if (listWrapper) {\n    const firstChildren = listWrapper.children[0] as HTMLElement\n    const hasScrollbar = firstChildren.scrollHeight > firstChildren.clientHeight\n    if (!hasScrollbar) {\n      //\n      const currentStyle = getComputedStyle(firstChildren).overflowY\n      // Add overflow hidden to the listWrapper to avoid the scrollbar to appear when expanding\n      firstChildren.style.overflowY = 'hidden'\n      setTimeout(() => {\n        // Reset the overflow style after the list is expanded\n        firstChildren.style.overflowY = currentStyle\n      }, 0)\n    }\n  }\n}\n\nconst FlipIcon = styled(ChevronLeftIcon)`\n  transition: transform 200ms;\n  &[data-expanded='true'] {\n    transform: rotate(-90deg);\n  }\n`\n\nexport function ExpandableTimelineItemButton({\n  isExpanded,\n  onExpand,\n}: {\n  isExpanded: boolean\n  onExpand: () => void\n}) {\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const handleExpandClick = useCallback(\n    (e: MouseEvent<HTMLButtonElement>) => {\n      e.stopPropagation()\n      hideScrollbarOnExpand(isExpanded)\n      onExpand()\n    },\n    [onExpand, isExpanded],\n  )\n\n  return (\n    <Button\n      mode=\"bleed\"\n      icon={<FlipIcon data-expanded={isExpanded} />}\n      tooltipProps={{\n        content: isExpanded\n          ? t('timeline-item.menu.action-collapse')\n          : t('timeline-item.menu.action-expand'),\n      }}\n      onClick={handleExpandClick}\n    />\n  )\n}\n","import {Box, Flex, Stack} from '@sanity/ui'\nimport {css, styled} from 'styled-components'\n\nexport const StackWrapper = styled(Stack)`\n  max-width: 200px;\n`\n\nexport const ListWrapper = styled(Flex)<{$maxHeight: string}>`\n  max-height: ${(props) => props.$maxHeight};\n  min-width: 244px;\n`\n\nexport const Root = styled(Box)<{$visible?: boolean}>(({$visible}) => {\n  return css`\n    opacity: 0;\n    pointer-events: none;\n    transition: opacity 0.2s;\n\n    ${$visible &&\n    css`\n      opacity: 1;\n      pointer-events: auto;\n    `}\n  `\n})\n","import {type ChunkType, type StudioLocaleResourceKeys} from 'sanity'\n\n/**\n * Maps from a chunk type to an i18n key for the operation\n *\n * @internal\n */\nexport const TIMELINE_ITEM_I18N_KEY_MAPPING: Record<ChunkType, StudioLocaleResourceKeys> = {\n  initial: 'timeline.operation.created-initial',\n  create: 'timeline.operation.created',\n  publish: 'timeline.operation.published',\n  editLive: 'timeline.operation.edited-live',\n  editDraft: 'timeline.operation.edited-draft',\n  unpublish: 'timeline.operation.unpublished',\n  discardDraft: 'timeline.operation.draft-discarded',\n  delete: 'timeline.operation.deleted',\n}\n","import {type AvatarSize, AvatarStack} from '@sanity/ui'\nimport {UserAvatar} from 'sanity'\n\ninterface UserAvatarStackProps {\n  maxLength?: number\n  userIds: string[]\n  size?: AvatarSize\n  withTooltip?: boolean\n}\n\nexport function UserAvatarStack({\n  maxLength,\n  userIds,\n  size,\n  withTooltip = true,\n}: UserAvatarStackProps) {\n  return (\n    <AvatarStack maxLength={maxLength} size={size}>\n      {userIds.map((userId) => (\n        <UserAvatar key={userId} user={userId} withTooltip={withTooltip} />\n      ))}\n    </AvatarStack>\n  )\n}\n","import {Box, Card, Flex, Skeleton, Stack, Text} from '@sanity/ui'\n// eslint-disable-next-line camelcase\nimport {getTheme_v2, type ThemeColorAvatarColorKey} from '@sanity/ui/theme'\nimport {type MouseEvent, useCallback, useMemo} from 'react'\nimport {\n  AvatarSkeleton,\n  type ChunkType,\n  type RelativeTimeOptions,\n  useDateTimeFormat,\n  UserAvatar,\n  useRelativeTime,\n  useTranslation,\n  useUser,\n} from 'sanity'\nimport {css, styled} from 'styled-components'\n\nimport {Tooltip} from '../../../../ui-components'\nimport {getTimelineEventIconComponent} from './helpers'\nimport {TIMELINE_ITEM_I18N_KEY_MAPPING} from './timelineI18n'\nimport {UserAvatarStack} from './userAvatarStack'\nimport {type ChunksWithCollapsedDrafts} from './utils'\n\nexport const IconBox = styled(Flex)<{$color: ThemeColorAvatarColorKey}>((props) => {\n  const theme = getTheme_v2(props.theme)\n  const color = props.$color\n\n  return css`\n    --card-icon-color: ${theme.color.avatar[color].fg};\n    background-color: ${theme.color.avatar[color].bg};\n    box-shadow: 0 0 0 1px var(--card-bg-color);\n\n    position: absolute;\n    width: ${theme.avatar.sizes[0].size}px;\n    height: ${theme.avatar.sizes[0].size}px;\n    right: -3px;\n    bottom: -3px;\n    border-radius: 50%;\n  `\n})\n\nconst TIMELINE_ITEM_EVENT_TONE: Record<ChunkType | 'withinSelection', ThemeColorAvatarColorKey> = {\n  initial: 'blue',\n  create: 'blue',\n  publish: 'green',\n  editLive: 'green',\n  editDraft: 'yellow',\n  unpublish: 'orange',\n  discardDraft: 'orange',\n  delete: 'red',\n  withinSelection: 'magenta',\n}\n\nexport interface TimelineItemProps {\n  chunk: ChunksWithCollapsedDrafts\n  isSelected: boolean\n  onSelect: (chunk: ChunksWithCollapsedDrafts) => void\n  collaborators?: Set<string>\n  optionsMenu?: React.ReactNode\n}\n\nconst RELATIVE_TIME_OPTIONS: RelativeTimeOptions = {\n  minimal: true,\n  useTemporalPhrase: true,\n}\n\nconst NameSkeleton = styled(Skeleton)((props) => {\n  const theme = getTheme_v2(props.theme)\n  return css`\n    width: 6ch;\n    height: ${theme.font.text.sizes[0].lineHeight}px;\n  `\n})\n\nconst UserLine = ({userId}: {userId: string}) => {\n  const [user, loading] = useUser(userId)\n\n  return (\n    <Flex key={userId} align=\"center\" gap={2} padding={1}>\n      <Box>{loading || !user ? <AvatarSkeleton animated /> : <UserAvatar user={user} />}</Box>\n      <Box>\n        {loading || !user?.displayName ? (\n          <Text size={1}>\n            <NameSkeleton animated />\n          </Text>\n        ) : (\n          <Text muted size={1}>\n            {user.displayName}\n          </Text>\n        )}\n      </Box>\n    </Flex>\n  )\n}\nconst TooltipContent = ({collaborators}: {collaborators: string[]}) => {\n  const {t} = useTranslation('studio')\n  return (\n    <Stack paddingBottom={1}>\n      <Box padding={1} paddingBottom={2}>\n        <Text size={1} weight=\"medium\">\n          {t('timeline.changes.title')}\n        </Text>\n      </Box>\n      {collaborators.map((userId) => (\n        <UserLine key={userId} userId={userId} />\n      ))}\n    </Stack>\n  )\n}\nexport function TimelineItem({\n  chunk,\n  isSelected,\n  onSelect,\n  collaborators,\n  optionsMenu,\n}: TimelineItemProps) {\n  const {t} = useTranslation('studio')\n  const {type, endTimestamp: timestamp} = chunk\n  const IconComponent = getTimelineEventIconComponent(type)\n  const authorUserIds = Array.from(chunk.authors)\n  const collaboratorsUsersIds = collaborators ? Array.from(collaborators) : []\n  const isSelectable = type !== 'delete'\n  const dateFormat = useDateTimeFormat({dateStyle: 'medium', timeStyle: 'short'})\n  const date = new Date(timestamp)\n\n  const updatedTimeAgo = useRelativeTime(date || '', RELATIVE_TIME_OPTIONS)\n\n  const formattedTimestamp = useMemo(() => {\n    const parsedDate = new Date(timestamp)\n    const formattedDate = dateFormat.format(parsedDate)\n\n    return formattedDate\n  }, [timestamp, dateFormat])\n\n  const handleClick = useCallback(\n    (evt: MouseEvent<HTMLDivElement>) => {\n      evt.preventDefault()\n      evt.stopPropagation()\n\n      if (isSelectable) {\n        onSelect(chunk)\n      }\n    },\n    [onSelect, chunk, isSelectable],\n  )\n\n  return (\n    <Flex align=\"center\" gap={1}>\n      <Card\n        as=\"button\"\n        onClick={handleClick}\n        padding={2}\n        pressed={isSelected}\n        radius={2}\n        data-ui=\"timelineItem\"\n        data-testid=\"timeline-item-button\"\n        data-chunk-id={chunk.id}\n      >\n        <Flex align=\"center\" gap={3}>\n          <div style={{position: 'relative'}}>\n            <UserAvatarStack maxLength={3} userIds={authorUserIds} size={2} />\n            <IconBox align=\"center\" justify=\"center\" $color={TIMELINE_ITEM_EVENT_TONE[type]}>\n              <Text size={0}>{IconComponent && <IconComponent />}</Text>\n            </IconBox>\n          </div>\n          <Stack space={2}>\n            <Text size={1} weight=\"medium\">\n              {t(TIMELINE_ITEM_I18N_KEY_MAPPING[type]) || <code>{type}</code>}\n            </Text>\n\n            <Text as=\"time\" size={1} muted dateTime={timestamp} title={formattedTimestamp}>\n              {updatedTimeAgo}\n            </Text>\n          </Stack>\n\n          {collaboratorsUsersIds.length > 0 && (\n            <Flex flex={1} justify=\"flex-end\" align=\"center\">\n              <Tooltip\n                placement=\"top\"\n                content={<TooltipContent collaborators={collaboratorsUsersIds} />}\n                portal\n              >\n                <Box paddingLeft={2} paddingY={2}>\n                  <UserAvatarStack\n                    maxLength={3}\n                    userIds={collaboratorsUsersIds}\n                    size={0}\n                    withTooltip={false}\n                  />\n                </Box>\n              </Tooltip>\n            </Flex>\n          )}\n        </Flex>\n      </Card>\n      {optionsMenu}\n    </Flex>\n  )\n}\n","import {type Chunk, type ChunkType} from 'sanity'\n\nexport type NonPublishChunk = Omit<Chunk, 'type'> & {\n  type: Exclude<ChunkType, 'publish'>\n  parentId?: string\n}\n\nexport type PublishChunk = Omit<Chunk, 'type'> & {\n  type: 'publish'\n  children: string[]\n  collaborators: Set<string>\n}\n\nexport const isNonPublishChunk = (chunk: Chunk): chunk is NonPublishChunk =>\n  chunk.type !== 'publish'\n\nexport const isPublishChunk = (chunk: Chunk): chunk is PublishChunk => chunk.type === 'publish'\n\n/**\n * searches for the previous publish action in the list of chunks\n * e.g. chunks = [publish, edit, publish, edit, edit] it needs to return the second publish action\n * e.g. chunks = [publish, edit, delete, edit, edit] it returns undefined\n */\n\nfunction getPreviousPublishAction(chunks: Chunk[]) {\n  let previousPublish: PublishChunk | null = null\n  // We need to iterate from the end to the start of the list\n  for (let index = chunks.length - 1; index >= 0; index--) {\n    const chunk = chunks[index]\n    if (isPublishChunk(chunk)) {\n      previousPublish = chunk\n      break\n    }\n    if (chunk.type === 'editDraft') {\n      continue\n    } else break\n  }\n\n  return previousPublish\n}\nexport type ChunksWithCollapsedDrafts = NonPublishChunk | PublishChunk\n\n/**\n * Takes an array of chunks and adds them metadata necessary for the timeline view.\n * for draft chunks, it will add the parentId of the published chunk if this draft action is now published\n * for published, it will add the children array and the collaborators array\n */\nexport function addChunksMetadata(chunks: Chunk[]): ChunksWithCollapsedDrafts[] {\n  const result: ChunksWithCollapsedDrafts[] = []\n\n  for (const chunk of chunks) {\n    if (isPublishChunk(chunk)) {\n      result.push({\n        ...chunk,\n        type: 'publish',\n        children: [],\n        collaborators: new Set(), // Initialize the collaborators array\n      })\n      continue\n    }\n    if (isNonPublishChunk(chunk)) {\n      const previousPublish = getPreviousPublishAction(result)\n      if (chunk.type === 'editDraft' && previousPublish?.type === 'publish') {\n        Array.from(chunk.authors).forEach((id) => {\n          previousPublish.collaborators.add(id)\n        })\n        previousPublish.children.push(chunk.id)\n        result.push({\n          ...chunk,\n          parentId: previousPublish.id,\n        })\n        continue\n      }\n    }\n    if (isNonPublishChunk(chunk)) {\n      result.push(chunk)\n    }\n  }\n\n  return result\n}\n","import {Box, Text} from '@sanity/ui'\nimport {useCallback, useEffect, useMemo, useState} from 'react'\nimport {\n  type Chunk,\n  CommandList,\n  type CommandListRenderItemCallback,\n  LoadingBlock,\n  useTranslation,\n} from 'sanity'\n\nimport {ExpandableTimelineItemButton} from './expandableTimelineItemButton'\nimport {ListWrapper, Root, StackWrapper} from './timeline.styled'\nimport {TimelineItem} from './timelineItem'\nimport {\n  addChunksMetadata,\n  type ChunksWithCollapsedDrafts,\n  isNonPublishChunk,\n  isPublishChunk,\n} from './utils'\n\ninterface TimelineProps {\n  chunks: Chunk[]\n  hasMoreChunks: boolean | null\n  lastChunk?: Chunk | null\n  onLoadMore: () => void\n  onSelect: (chunk: Chunk) => void\n  /**\n   * The list needs a predefined max height for the scroller to work.\n   */\n  listMaxHeight?: string\n}\n\nexport const TIMELINE_LIST_WRAPPER_ID = 'timeline-list-wrapper'\n\nexport const Timeline = ({\n  chunks,\n  hasMoreChunks,\n  lastChunk: selectedChunk,\n  onLoadMore,\n  onSelect,\n  listMaxHeight = 'calc(100vh - 280px)',\n}: TimelineProps) => {\n  const [mounted, setMounted] = useState(false)\n  const {t} = useTranslation('studio')\n  const selectedChunkId = selectedChunk?.id\n  const chunksWithMetadata = useMemo(() => addChunksMetadata(chunks), [chunks])\n\n  const [expandedParents, setExpandedParents] = useState<Set<string>>(() => {\n    if (selectedChunkId) {\n      // If the selected chunk is a draft, we need to expand its parent\n      const selected = chunksWithMetadata.find((chunk) => chunk.id === selectedChunkId)\n      if (selected && isNonPublishChunk(selected) && selected.parentId) {\n        return new Set([selected.parentId])\n      }\n    }\n    return new Set()\n  })\n\n  useEffect(() => {\n    // This effect ensures that when we reload the timeline with a selected draft, we expand its parent.\n    if (selectedChunkId) {\n      const selected = chunksWithMetadata.find((chunk) => chunk.id === selectedChunkId)\n      if (selected && isNonPublishChunk(selected) && selected.parentId) {\n        const parentId = selected.parentId\n        setExpandedParents((prev) => {\n          if (prev.has(parentId)) return prev\n          const next = new Set(prev)\n          next.add(parentId)\n          return next\n        })\n      }\n    }\n  }, [chunksWithMetadata, selectedChunkId])\n\n  const filteredChunks = useMemo(() => {\n    return chunksWithMetadata.filter((chunk) => {\n      if (isPublishChunk(chunk) || !chunk.parentId) return true\n      // If the chunk has a parent id keep it hidden until the parent is expanded.\n      return expandedParents.has(chunk.parentId)\n    })\n  }, [chunksWithMetadata, expandedParents])\n\n  useEffect(() => {\n    // This effect ensures that we load more chunks if the list is not long enough.\n    // This could happen if a parent chunk has multiple drafts, so you could end with a list of 50 transactions but only\n    // 1 parent chunk, the publish, which squashed all the changes.\n    // In that case, users will see the loading block at the bottom, but nothing will really be happening. Because they haven't reach the end of the list.\n    if (filteredChunks.length < 16 && hasMoreChunks) {\n      onLoadMore()\n    }\n  }, [filteredChunks, hasMoreChunks, onLoadMore])\n\n  const handleExpandParent = useCallback(\n    (parentId: string) => () =>\n      setExpandedParents((prev) => {\n        const next = new Set(prev)\n\n        if (prev.has(parentId)) next.delete(parentId)\n        else next.add(parentId)\n\n        return next\n      }),\n    [],\n  )\n\n  const selectedIndex = useMemo(\n    () =>\n      selectedChunkId ? filteredChunks.findIndex((chunk) => chunk.id === selectedChunkId) : -1,\n    [selectedChunkId, filteredChunks],\n  )\n  const handleSelectChunk = useCallback(\n    (chunk: ChunksWithCollapsedDrafts) => {\n      const timelineChunk = chunks.find((c) => c.id === chunk.id)\n      if (timelineChunk) onSelect(timelineChunk)\n      else {\n        console.error('TimelineItem: chunk not found')\n        onSelect(chunk)\n      }\n    },\n    [chunks, onSelect],\n  )\n\n  const renderItem = useCallback<CommandListRenderItemCallback<(typeof filteredChunks)[number]>>(\n    (chunk, {activeIndex}) => {\n      const isFirst = activeIndex === 0\n\n      return (\n        <Box\n          paddingBottom={1}\n          paddingTop={isFirst ? 1 : 0}\n          paddingRight={1}\n          paddingLeft={isNonPublishChunk(chunk) && chunk.parentId ? 4 : 1}\n        >\n          <TimelineItem\n            chunk={chunk}\n            isSelected={selectedChunkId === chunk.id}\n            onSelect={handleSelectChunk}\n            collaborators={isPublishChunk(chunk) ? chunk.collaborators : undefined}\n            optionsMenu={\n              isPublishChunk(chunk) && chunk.children.length > 0 ? (\n                <ExpandableTimelineItemButton\n                  isExpanded={expandedParents.has(chunk.id)}\n                  onExpand={handleExpandParent(chunk.id)}\n                />\n              ) : null\n            }\n          />\n          {activeIndex === filteredChunks.length - 1 && hasMoreChunks && <LoadingBlock />}\n        </Box>\n      )\n    },\n    [\n      expandedParents,\n      filteredChunks.length,\n      handleExpandParent,\n      handleSelectChunk,\n      hasMoreChunks,\n      selectedChunkId,\n    ],\n  )\n\n  useEffect(() => setMounted(true), [])\n\n  return (\n    <Root\n      /**\n       * We delay initial rendering if `selectedIndex` is present.\n       * This is a _temporary_ workaround to allow the virtual <CommandList>\n       * to scroll to a specific index prior to being displayed.\n       *\n       * Without this, there'll be a noticeable 'flash' where the virtual list\n       * will render with its child items at the top and then scroll into position.\n       */\n      $visible={!selectedIndex || mounted}\n      data-ui=\"timeline\"\n    >\n      {filteredChunks.length === 0 && (\n        <StackWrapper padding={3} space={3}>\n          <Text size={1} weight=\"medium\">\n            {t('timeline.error.no-document-history-title')}\n          </Text>\n          <Text muted size={1}>\n            {t('timeline.error.no-document-history-description')}\n          </Text>\n        </StackWrapper>\n      )}\n\n      {filteredChunks.length > 0 && (\n        <ListWrapper direction=\"column\" $maxHeight={listMaxHeight} id={TIMELINE_LIST_WRAPPER_ID}>\n          <CommandList\n            activeItemDataAttr=\"data-hovered\"\n            ariaLabel={t('timeline.list.aria-label')}\n            autoFocus=\"list\"\n            initialIndex={selectedIndex}\n            initialScrollAlign=\"center\"\n            itemHeight={57}\n            items={filteredChunks}\n            onEndReached={onLoadMore}\n            onEndReachedIndexOffset={20}\n            overscan={5}\n            renderItem={renderItem}\n            wrapAround={false}\n          />\n        </ListWrapper>\n      )}\n    </Root>\n  )\n}\n\nTimeline.displayName = 'Timeline'\n","import {ErrorOutlineIcon} from '@sanity/icons'\nimport {Flex, Stack} from '@sanity/ui'\nimport {TextWithTone, useTranslation} from 'sanity'\n\nexport function TimelineError({versionError}: {versionError?: boolean}) {\n  const {t} = useTranslation('studio')\n\n  return (\n    <Flex align=\"flex-start\" gap={3} padding={4}>\n      <TextWithTone tone=\"critical\">\n        <ErrorOutlineIcon />\n      </TextWithTone>\n      <Stack space={4}>\n        <TextWithTone size={1} tone=\"critical\" weight=\"medium\">\n          {versionError\n            ? t('timeline.error.load-document-changes-version-title')\n            : t('timeline.error.load-document-changes-title')}\n        </TextWithTone>\n        <TextWithTone size={1} tone=\"critical\">\n          {versionError\n            ? t('timeline.error.load-document-changes-version-description')\n            : t('timeline.error.load-document-changes-description')}\n        </TextWithTone>\n      </Stack>\n    </Flex>\n  )\n}\n","import {ChevronDownIcon} from '@sanity/icons'\nimport {\n  Flex,\n  type Placement,\n  PortalProvider,\n  useClickOutsideEvent,\n  useGlobalKeyDown,\n  useToast,\n} from '@sanity/ui'\nimport {useCallback, useMemo, useState} from 'react'\nimport {type Chunk, useTimelineSelector, useTranslation} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Button, Popover} from '../../../../ui-components'\nimport {useDocumentPane} from '../useDocumentPane'\nimport {Timeline} from './timeline'\nimport {TimelineError} from './TimelineError'\nimport {TIMELINE_ITEM_I18N_KEY_MAPPING} from './timelineI18n'\n\ninterface TimelineMenuProps {\n  chunk: Chunk | null\n  mode: 'rev' | 'since'\n  placement?: Placement\n}\n\nconst Root = styled(Popover)`\n  overflow: hidden;\n  overflow: clip;\n`\n\nexport const TIMELINE_MENU_PORTAL = 'timeline-menu'\n\nexport function TimelineMenu({chunk, mode, placement}: TimelineMenuProps) {\n  const {setTimelineRange, timelineError, ready, timelineStore} = useDocumentPane()\n  const [open, setOpen] = useState(false)\n  const [button, setButton] = useState<HTMLButtonElement | null>(null)\n  const [popoverRef, setPopoverRef] = useState<HTMLElement | null>(null)\n\n  const toast = useToast()\n\n  const chunks = useTimelineSelector(timelineStore, (state) => state.chunks)\n  const loading = useTimelineSelector(timelineStore, (state) => state.isLoading)\n  const hasMoreChunks = useTimelineSelector(timelineStore, (state) => state.hasMoreChunks)\n  const realRevChunk = useTimelineSelector(timelineStore, (state) => state.realRevChunk)\n  const sinceTime = useTimelineSelector(timelineStore, (state) => state.sinceTime)\n\n  const {t} = useTranslation('studio')\n\n  const handleOpen = useCallback(() => {\n    setOpen(true)\n  }, [])\n\n  const handleClose = useCallback(() => {\n    setOpen(false)\n  }, [])\n\n  const handleGlobalKeyDown = useCallback(\n    (event: KeyboardEvent) => {\n      if (open && (event.key === 'Escape' || event.key === 'Tab')) {\n        handleClose()\n        button?.focus()\n      }\n    },\n    [button, handleClose, open],\n  )\n\n  useGlobalKeyDown(handleGlobalKeyDown)\n  useClickOutsideEvent(open && handleClose, () => [button, popoverRef])\n\n  const selectRev = useCallback(\n    (revChunk: Chunk) => {\n      try {\n        const [sinceId, revId] = timelineStore?.findRangeForRev(revChunk) || [null, null]\n        setTimelineRange(sinceId, revId)\n      } catch (err) {\n        toast.push({\n          closable: true,\n          description: err.message,\n          status: 'error',\n          title: t('timeline.error.unable-to-load-revision'),\n        })\n      }\n    },\n    [setTimelineRange, t, timelineStore, toast],\n  )\n\n  const selectSince = useCallback(\n    (sinceChunk: Chunk) => {\n      try {\n        const [sinceId, revId] = timelineStore?.findRangeForSince(sinceChunk) || [null, null]\n        setTimelineRange(sinceId, revId)\n      } catch (err) {\n        toast.push({\n          closable: true,\n          description: err.message,\n          status: 'error',\n          title: t('timeline.error.unable-to-load-revision'),\n        })\n      }\n    },\n    [setTimelineRange, t, timelineStore, toast],\n  )\n\n  const handleLoadMore = useCallback(() => {\n    if (!loading) {\n      timelineStore?.loadMore()\n    }\n  }, [loading, timelineStore])\n\n  const content = useMemo(() => {\n    if (timelineError) return <TimelineError />\n\n    if (mode === 'rev') {\n      return (\n        <Timeline\n          chunks={chunks}\n          hasMoreChunks={hasMoreChunks}\n          lastChunk={realRevChunk}\n          onLoadMore={handleLoadMore}\n          onSelect={selectRev}\n        />\n      )\n    }\n\n    const filteredChunks = realRevChunk\n      ? chunks.filter((c) => c.index < realRevChunk.index)\n      : chunks\n    return (\n      <Timeline\n        chunks={filteredChunks}\n        hasMoreChunks={hasMoreChunks}\n        lastChunk={sinceTime}\n        onLoadMore={handleLoadMore}\n        onSelect={selectSince}\n      />\n    )\n  }, [\n    chunks,\n    handleLoadMore,\n    hasMoreChunks,\n    mode,\n    realRevChunk,\n    selectRev,\n    selectSince,\n    sinceTime,\n    timelineError,\n  ])\n\n  const formatParams = {\n    timestamp: {dateStyle: 'medium', timeStyle: 'short'},\n  }\n\n  const revLabel = chunk\n    ? t(TIMELINE_ITEM_I18N_KEY_MAPPING[chunk.type], {\n        context: 'timestamp',\n        timestamp: new Date(chunk?.endTimestamp),\n        formatParams,\n      })\n    : t('timeline.latest-revision')\n\n  const sinceLabel = chunk\n    ? t('timeline.since', {\n        timestamp: new Date(chunk?.endTimestamp),\n        formatParams,\n      })\n    : t('timeline.since-version-missing')\n\n  const buttonLabel = mode === 'rev' ? revLabel : sinceLabel\n\n  return (\n    <PortalProvider __unstable_elements={{[TIMELINE_MENU_PORTAL]: popoverRef}}>\n      <Root\n        data-testid=\"timeline-menu\"\n        constrainSize\n        content={open && content}\n        data-ui=\"versionMenu\"\n        open={open}\n        placement={placement}\n        matchReferenceWidth\n        portal\n        ref={setPopoverRef}\n      >\n        <Flex width={'fill'}>\n          <Button\n            data-testid={open ? 'timeline-menu-close-button' : 'timeline-menu-open-button'}\n            disabled={!ready}\n            mode=\"ghost\"\n            onClick={open ? handleClose : handleOpen}\n            ref={setButton}\n            selected={open}\n            width=\"fill\"\n            tooltipProps={null}\n            justify={'space-between'}\n            style={{\n              maxWidth: '100%',\n            }}\n            iconRight={ChevronDownIcon}\n            text={ready ? buttonLabel : t('timeline.loading-history')}\n          />\n        </Flex>\n      </Root>\n    </PortalProvider>\n  )\n}\n","import {motion} from 'framer-motion'\nimport {type ComponentProps} from 'react'\nimport {keyframes, styled} from 'styled-components'\n\nconst StyledMotionPath = styled(motion.path)`\n  transform-origin: center;\n`\n\ntype MotionCircleProps = Omit<ComponentProps<typeof motion.circle>, 'd'>\ntype MotionPathProps = Omit<ComponentProps<typeof motion.path>, 'd' | 'ref'>\n\nconst Circle = (props: MotionCircleProps) => (\n  <motion.circle fill=\"none\" r=\"8\" cx=\"12.5\" cy=\"12.5\" strokeWidth=\"1.2\" {...props} />\n)\nconst Arrows = (props: MotionPathProps) => (\n  <StyledMotionPath\n    fill=\"none\"\n    d=\"M14 17.5619L11.5 20.5L14.5 23.0619M11 7.43811L13.5 4.50001L10.5 1.93811\"\n    {...props}\n  />\n)\nconst Checkmark = (props: MotionPathProps) => (\n  <motion.path d=\"M9.5 12.1316L11.7414 14.5L16 10\" {...props} />\n)\n\nconst rotateAnimation = keyframes`\n  0% {\n    transform: rotate(0);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n`\nconst RotateGroup = styled.g`\n  transform-origin: center;\n\n  &[data-rotate] {\n    animation: ${rotateAnimation} 1s ease-in-out infinite;\n  }\n`\n\nconst root = {\n  syncing: {\n    scale: 1,\n    transition: {\n      duration: 0,\n    },\n  },\n  saved: {\n    scale: [1, 0.8, 1.2, 0.9, 1.1, 0.95, 1.05, 0.99, 1],\n    transition: {\n      duration: 0.5,\n      delay: 0.2,\n    },\n  },\n  changes: {transition: {duration: 0}},\n}\n\nconst circle = {\n  syncing: {\n    strokeDasharray: '0, 0, 23, 3, 23, 3',\n    strokeDashoffset: 10,\n    opacity: 1,\n    transition: {\n      duration: 0,\n    },\n  },\n  saved: {\n    strokeDasharray: '0, 0, 23, 0, 23, 0',\n    strokeDashoffset: 10,\n    opacity: 1,\n    transition: {\n      duration: 0.2,\n    },\n  },\n  changes: {\n    strokeDasharray: '0, 60, 23, 0, 23, 0',\n    strokeDashoffset: 0,\n    opacity: 0,\n    transition: {\n      duration: 0.5,\n    },\n  },\n}\n\nconst arrows = {\n  syncing: {\n    opacity: 1,\n    transition: {\n      duration: 0,\n    },\n  },\n  saved: {\n    opacity: 0,\n    transition: {\n      duration: 0.2,\n    },\n  },\n  changes: {\n    opacity: 0,\n  },\n}\n\nconst checkmark = {\n  syncing: {\n    pathLength: 0,\n    transition: {duration: 0},\n  },\n  saved: {\n    pathLength: 1,\n    transition: {\n      delay: 0.4,\n      duration: 0.3,\n    },\n  },\n  changes: {\n    pathLength: 0,\n    transition: {\n      duration: 0.2,\n    },\n  },\n}\n\ninterface AnimatedStatusIconProps {\n  status?: 'changes' | 'saved' | 'syncing'\n}\n\nexport function AnimatedStatusIcon(props: AnimatedStatusIconProps) {\n  const {status} = props\n\n  if (!status) {\n    return null\n  }\n\n  return (\n    <svg\n      width=\"1em\"\n      height=\"1em\"\n      viewBox=\"0 0 25 25\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth=\"1.2\"\n      data-sanity-icon=\"animated-status-icon\"\n    >\n      <motion.g variants={root} initial={status} animate={status}>\n        <RotateGroup data-rotate={status === 'changes' ? undefined : ''}>\n          <Arrows variants={arrows} initial={status} animate={status} />\n          <Circle variants={circle} initial={status} animate={status} />\n        </RotateGroup>\n        <Checkmark variants={checkmark} initial={status} animate={status} />\n      </motion.g>\n    </svg>\n  )\n}\n","import {type ButtonTone, Flex, Text} from '@sanity/ui'\nimport {TextWithTone, useTranslation} from 'sanity'\n\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {AnimatedStatusIcon} from './AnimatedStatusIcon'\n\ntype StatusType = 'saved' | 'syncing'\ninterface ReviewChangesButtonProps {\n  status?: StatusType\n}\n\nconst STATUS_DICTIONARY: Record<StatusType, {i18nKey: string; tone: ButtonTone}> = {\n  saved: {\n    i18nKey: 'status-bar.document-status-pulse.status.saved.text',\n    tone: 'positive',\n  },\n  syncing: {\n    i18nKey: 'status-bar.document-status-pulse.status.syncing.text',\n    tone: 'default',\n  },\n}\n\nexport const DocumentStatusPulse = (props: ReviewChangesButtonProps) => {\n  const {status} = props\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  if (status !== 'saved' && status !== 'syncing') {\n    return null\n  }\n\n  const currentStatus = STATUS_DICTIONARY[status]\n\n  return (\n    <Flex align=\"center\" gap={2} data-testid=\"pane-footer-document-status-pulse\">\n      <TextWithTone size={1} tone={currentStatus.tone}>\n        <AnimatedStatusIcon status={status} />\n      </TextWithTone>\n\n      <Text muted size={1}>\n        {t(currentStatus.i18nKey)}\n      </Text>\n    </Flex>\n  )\n}\n","import {\n  Box,\n  // eslint-disable-next-line no-restricted-imports\n  Button,\n  Flex,\n  Skeleton,\n  Text,\n} from '@sanity/ui'\nimport {AnimatePresence, motion} from 'framer-motion'\nimport {useEffect, useLayoutEffect, useMemo, useState} from 'react'\nimport {\n  AvatarSkeleton,\n  isPublishedPerspective,\n  TIMELINE_ITEM_I18N_KEY_MAPPING,\n  useEvents,\n  usePerspective,\n  UserAvatar,\n  useRelativeTime,\n  useSource,\n  useSyncState,\n  useTimelineSelector,\n  useTranslation,\n} from 'sanity'\n\nimport {HISTORY_INSPECTOR_NAME} from '../constants'\nimport {TIMELINE_ITEM_I18N_KEY_MAPPING as TIMELINE_ITEM_I18N_KEY_MAPPING_LEGACY} from '../timeline'\nimport {useDocumentPane} from '../useDocumentPane'\nimport {DocumentStatusPulse} from './DocumentStatusPulse'\n\nconst RELATIVE_TIME_OPTIONS = {\n  minimal: true,\n  useTemporalPhrase: true,\n} as const\n\nconst MotionButton = motion.create(Button)\nconst MotionBox = motion.create(Box)\n\nconst ButtonSkeleton = () => {\n  return (\n    <Flex align=\"center\" gap={3} paddingLeft={1} paddingRight={2} paddingY={2}>\n      <div style={{margin: -5}}>\n        <AvatarSkeleton $size={0} animated />\n      </div>\n      <Skeleton animated style={{width: '80px', height: '15px'}} radius={2} />\n    </Flex>\n  )\n}\n\nconst DocumentStatusButton = ({\n  author,\n  translationKey,\n  timestamp = '',\n}: {\n  author: string\n  translationKey: string\n  timestamp?: string\n}) => {\n  const {onHistoryOpen, inspector, onHistoryClose} = useDocumentPane()\n  const {t} = useTranslation()\n  const relativeTime = useRelativeTime(timestamp, RELATIVE_TIME_OPTIONS)\n\n  return (\n    <MotionButton\n      data-testid=\"pane-footer-document-status\"\n      animate={{opacity: 1}}\n      initial={{opacity: 0}}\n      exit={{opacity: 0}}\n      mode=\"bleed\"\n      onClick={inspector?.name === HISTORY_INSPECTOR_NAME ? onHistoryClose : onHistoryOpen}\n      padding={2}\n      muted\n    >\n      <Flex align=\"center\" flex=\"none\" gap={3}>\n        {author && (\n          <div style={{margin: -5}}>\n            <UserAvatar user={author} size={0} />\n          </div>\n        )}\n        <Text muted size={1}>\n          {t(translationKey)} {relativeTime}\n        </Text>\n      </Flex>\n    </MotionButton>\n  )\n}\n\nconst FallbackStatus = () => {\n  const {editState} = useDocumentPane()\n  const {selectedPerspective} = usePerspective()\n\n  const status = useMemo(() => {\n    if (isPublishedPerspective(selectedPerspective) && editState?.published?._updatedAt) {\n      return {\n        translationKey: TIMELINE_ITEM_I18N_KEY_MAPPING.published.createDocumentVersion,\n        timestamp: editState.published._updatedAt,\n      }\n    }\n    if (editState?.version?._updatedAt) {\n      return {\n        translationKey:\n          editState?.version?._updatedAt === editState?.version?._createdAt\n            ? TIMELINE_ITEM_I18N_KEY_MAPPING.version.createDocumentVersion\n            : TIMELINE_ITEM_I18N_KEY_MAPPING.version.editDocumentVersion,\n        timestamp: editState.version._updatedAt,\n      }\n    }\n    if (editState?.draft?._updatedAt) {\n      return {\n        translationKey:\n          editState?.draft?._updatedAt === editState?.draft?._createdAt\n            ? TIMELINE_ITEM_I18N_KEY_MAPPING.draft.createDocumentVersion\n            : TIMELINE_ITEM_I18N_KEY_MAPPING.draft.editDocumentVersion,\n        timestamp: editState.draft._updatedAt,\n      }\n    }\n    return null\n  }, [\n    selectedPerspective,\n    editState?.published?._updatedAt,\n    editState?.version?._updatedAt,\n    editState?.version?._createdAt,\n    editState?.draft?._updatedAt,\n    editState?.draft?._createdAt,\n  ])\n  if (!status) {\n    return null\n  }\n  return (\n    <DocumentStatusButton\n      author=\"\"\n      translationKey={status.translationKey}\n      timestamp={status.timestamp}\n    />\n  )\n}\n\nconst EventsStatus = () => {\n  const {events, loading} = useEvents()\n  const event = events?.[0]\n\n  if (!event && loading) {\n    return <ButtonSkeleton />\n  }\n  if (!event) {\n    return <FallbackStatus />\n  }\n\n  return (\n    <DocumentStatusButton\n      author={event.author}\n      translationKey={TIMELINE_ITEM_I18N_KEY_MAPPING[event.documentVariantType][event.type]}\n      timestamp={event.timestamp}\n    />\n  )\n}\n\nconst TimelineStatus = () => {\n  const {timelineStore} = useDocumentPane()\n  const chunks = useTimelineSelector(timelineStore, (state) => state.chunks)\n  const loading = useTimelineSelector(timelineStore, (state) => state.isLoading)\n  const event = chunks?.[0]\n\n  if (!event && loading) {\n    return <ButtonSkeleton />\n  }\n  if (!event) {\n    return <FallbackStatus />\n  }\n\n  const author = Array.from(event.authors)[0]\n  return (\n    <DocumentStatusButton\n      author={author}\n      translationKey={TIMELINE_ITEM_I18N_KEY_MAPPING_LEGACY[event.type]}\n      timestamp={event.endTimestamp}\n    />\n  )\n}\n\nconst SYNCING_TIMEOUT = 1000\nconst SAVED_TIMEOUT = 3000\n\nexport function DocumentStatusLine() {\n  const {documentId, documentType, editState, value} = useDocumentPane()\n  const [status, setStatus] = useState<'saved' | 'syncing' | null>(null)\n  const source = useSource()\n  const eventsEnabled = source.beta?.eventsAPI?.documents\n\n  const syncState = useSyncState(documentId, documentType, editState?.release)\n\n  const lastUpdated = value?._updatedAt\n\n  // eslint-disable-next-line consistent-return\n  useEffect(() => {\n    // Schedule an update to set the status to 'saved' when status changed to 'syncing.\n    // We use `syncState.isSyncing` here to avoid the status being set to 'saved' when the document is syncing.\n    if (status === 'syncing' && !syncState.isSyncing) {\n      const timerId = setTimeout(() => setStatus('saved'), SYNCING_TIMEOUT)\n      return () => clearTimeout(timerId)\n    }\n    // Schedule an update to clear the status when status changed to 'saved'\n    if (status === 'saved') {\n      const timerId = setTimeout(() => setStatus(null), SAVED_TIMEOUT)\n      return () => clearTimeout(timerId)\n    }\n  }, [status, lastUpdated, syncState.isSyncing])\n\n  // Clear the status when documentId changes to make sure we don't show the wrong status when opening a new document\n  useLayoutEffect(() => {\n    setStatus(null)\n  }, [documentId])\n\n  // Set status to 'syncing' when lastUpdated changes and we go from not syncing to syncing\n  useLayoutEffect(() => {\n    if (syncState.isSyncing) {\n      setStatus('syncing')\n    }\n  }, [syncState.isSyncing, lastUpdated])\n\n  return (\n    <AnimatePresence>\n      {status ? (\n        <MotionBox\n          paddingLeft={2}\n          animate={{opacity: 1}}\n          initial={{opacity: 0}}\n          exit={{opacity: 0}}\n        >\n          <DocumentStatusPulse status={status || undefined} />\n        </MotionBox>\n      ) : (\n        <>{eventsEnabled ? <EventsStatus /> : <TimelineStatus />}</>\n      )}\n    </AnimatePresence>\n  )\n}\n","import {RestoreIcon} from '@sanity/icons'\nimport {Box, Flex, Text} from '@sanity/ui'\nimport {format} from 'date-fns'\nimport {Translate, useTranslation} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {useDocumentPane} from '../useDocumentPane'\n\nexport const StatusText = styled(Text)`\n  color: var(--card-muted-fg-color);\n\n  em {\n    color: var(--card-fg-color);\n    font-weight: 500;\n    font-style: normal;\n  }\n`\n\nexport function RevisionStatusLine(): React.JSX.Element {\n  const {displayed, revisionNotFound} = useDocumentPane()\n  const {t} = useTranslation()\n  const date = displayed?._updatedAt || displayed?._createdAt\n\n  const message = {\n    name: 'revision',\n    text: date ? (\n      <Translate\n        t={t}\n        i18nKey=\"document-status.revision-from\"\n        values={{\n          date: format(new Date(date), `MMM d, yyyy '@' pp`),\n        }}\n      />\n    ) : null,\n    tone: 'caution',\n  }\n\n  return (\n    <>\n      <Flex flex={1} gap={3} padding={2}>\n        <Box flex=\"none\">\n          <Text size={1}>\n            <RestoreIcon />\n          </Text>\n        </Box>\n        <Box flex={1}>\n          <StatusText size={1} textOverflow=\"ellipsis\">\n            {revisionNotFound ? (\n              <Translate t={t} i18nKey=\"document-status.revision-not-found\" />\n            ) : (\n              message.text\n            )}\n          </StatusText>\n        </Box>\n      </Flex>\n    </>\n  )\n}\n","import {useLayoutEffect} from 'react'\nimport {resizeObserver} from 'sanity'\n\nexport function useResizeObserver({\n  element,\n  onResize,\n}: {\n  element?: HTMLDivElement | null\n  onResize: (event: ResizeObserverEntry) => void\n}): void {\n  useLayoutEffect(() => {\n    if (element) {\n      resizeObserver.observe(element, onResize)\n    }\n\n    return () => {\n      if (element) {\n        resizeObserver.unobserve(element)\n      }\n    }\n  }, [element, onResize])\n}\n","import {Card, Flex} from '@sanity/ui'\nimport {motion} from 'framer-motion'\nimport {type Ref, useCallback, useMemo, useState} from 'react'\nimport {\n  type CreateLinkMetadata,\n  isPublishedPerspective,\n  isReleaseDocument,\n  isSanityCreateLinked,\n  usePerspective,\n  useSanityCreateConfig,\n} from 'sanity'\n\nimport {usePaneRouter} from '../../../components'\nimport {SpacerButton} from '../../../components/spacerButton'\nimport {DOCUMENT_PANEL_PORTAL_ELEMENT} from '../../../constants'\nimport {EMPTY_PARAMS} from '../constants'\nimport {useDocumentPane} from '../useDocumentPane'\nimport {useDocumentTitle} from '../useDocumentTitle'\nimport {DocumentBadges} from './DocumentBadges'\nimport {DocumentStatusBarActions, HistoryStatusBarActions} from './DocumentStatusBarActions'\nimport {DocumentStatusLine} from './DocumentStatusLine'\nimport {RevisionStatusLine} from './RevisionStatusLine'\nimport {useResizeObserver} from './useResizeObserver'\n\nexport interface DocumentStatusBarProps {\n  actionsBoxRef?: Ref<HTMLDivElement>\n  createLinkMetadata?: CreateLinkMetadata\n}\n\nconst CONTAINER_BREAKPOINT = 480 // px\n\nconst AnimatedCard = motion.create(Card)\n\nexport function DocumentStatusBar(props: DocumentStatusBarProps) {\n  const {actionsBoxRef, createLinkMetadata} = props\n  const {editState, onChange: onDocumentChange, revisionNotFound} = useDocumentPane()\n  const {params = EMPTY_PARAMS} = usePaneRouter()\n  const {selectedPerspective} = usePerspective()\n  const {title} = useDocumentTitle()\n\n  const CreateLinkedActions = useSanityCreateConfig().components?.documentLinkedActions\n\n  const showingRevision = Boolean(params.rev)\n  const [collapsed, setCollapsed] = useState<boolean | null>(null)\n  const [rootElement, setRootElement] = useState<HTMLDivElement | null>(null)\n\n  const handleResize = useCallback((event: ResizeObserverEntry) => {\n    setCollapsed(event.contentRect.width < CONTAINER_BREAKPOINT)\n  }, [])\n\n  useResizeObserver({element: rootElement, onResize: handleResize})\n\n  const shouldRender = useMemo(() => {\n    const isReady = Boolean(editState?.ready && typeof collapsed === 'boolean')\n    if (selectedPerspective) {\n      if (isPublishedPerspective(selectedPerspective)) {\n        return isReady && Boolean(editState?.published)\n      }\n      if (isReleaseDocument(selectedPerspective)) {\n        return isReady && Boolean(editState?.version)\n      }\n    }\n    return isReady\n  }, [collapsed, editState?.published, editState?.ready, editState?.version, selectedPerspective])\n\n  let actions: React.JSX.Element | null = null\n  if (createLinkMetadata && isSanityCreateLinked(createLinkMetadata) && CreateLinkedActions) {\n    actions = (\n      <CreateLinkedActions\n        metadata={createLinkMetadata}\n        panelPortalElementId={DOCUMENT_PANEL_PORTAL_ELEMENT}\n        onDocumentChange={onDocumentChange}\n        documentTitle={title}\n      />\n    )\n  } else if (showingRevision) {\n    actions = <HistoryStatusBarActions />\n  } else {\n    actions = <DocumentStatusBarActions />\n  }\n\n  if (showingRevision && revisionNotFound) {\n    return null\n  }\n\n  return (\n    <AnimatedCard\n      key={showingRevision ? 'revision' : 'published'}\n      initial={{opacity: 0.2}}\n      animate={{opacity: 1, transition: {duration: 0.3}}}\n      tone={showingRevision ? 'caution' : undefined}\n      radius={3}\n      ref={setRootElement}\n      sizing=\"border\"\n      padding={2}\n    >\n      {shouldRender && (\n        <Flex\n          align=\"stretch\"\n          gap={1}\n          justify=\"space-between\"\n          paddingLeft={showingRevision ? 0 : 1}\n          paddingRight={showingRevision ? 0 : 1}\n        >\n          <Flex align=\"center\" flex={1} gap={collapsed ? 2 : 3} wrap=\"wrap\" paddingRight={3}>\n            <Flex align=\"center\">\n              {showingRevision ? <RevisionStatusLine /> : <DocumentStatusLine />}\n              <SpacerButton />\n            </Flex>\n            <DocumentBadges />\n          </Flex>\n\n          <Flex\n            align=\"flex-start\"\n            justify=\"flex-end\"\n            ref={actionsBoxRef}\n            style={{flexShrink: 0, marginLeft: 'auto'}}\n          >\n            <SpacerButton />\n            {actions}\n          </Flex>\n        </Flex>\n      )}\n    </AnimatedCard>\n  )\n}\n","import {isHotkey} from 'is-hotkey-esm'\nimport {\n  type ElementType,\n  type HTMLProps,\n  memo,\n  type Ref,\n  useCallback,\n  useMemo,\n  useState,\n} from 'react'\nimport {type DocumentActionDescription, type DocumentActionProps, LegacyLayerProvider} from 'sanity'\n\nimport {RenderActionCollectionState} from '../../../components'\nimport {ActionStateDialog} from '../statusBar'\nimport {useDocumentPane} from '../useDocumentPane'\n\nexport interface KeyboardShortcutResponderProps {\n  actionsBoxElement: HTMLElement | null\n  activeIndex: number\n  as?: ElementType\n  currentMinWidth?: number\n  flex?: number\n  id: string\n  minWidth?: number\n  onActionStart: (index: number) => void\n  rootRef: Ref<HTMLDivElement>\n  states: DocumentActionDescription[]\n}\n\nconst KeyboardShortcutResponder = memo(function KeyboardShortcutResponder(\n  props: KeyboardShortcutResponderProps & Omit<HTMLProps<HTMLDivElement>, 'as' | 'height'>,\n) {\n  const {\n    actionsBoxElement,\n    activeIndex,\n    as: As = 'div',\n    children,\n    id,\n    onActionStart,\n    onKeyDown,\n    rootRef,\n    states,\n    ...rest\n  } = props\n\n  const activeAction = states[activeIndex]\n\n  const handleKeyDown = useCallback(\n    (event: any) => {\n      const matchingStates = states.filter(\n        (state) => state.shortcut && isHotkey(state.shortcut, event),\n      )\n\n      const matchingState = matchingStates[0]\n\n      if (matchingStates.length > 1) {\n        console.warn(\n          `Keyboard shortcut conflict: More than one document action matches the shortcut \"${matchingState.shortcut}\"`,\n        )\n      }\n\n      if (matchingState && !matchingState.disabled && matchingState.onHandle) {\n        event.preventDefault()\n        matchingState.onHandle()\n        onActionStart(states.indexOf(matchingState))\n        return\n      }\n\n      if (onKeyDown) {\n        onKeyDown(event)\n      }\n    },\n    [onActionStart, onKeyDown, states],\n  )\n\n  return (\n    <As id={id} onKeyDown={handleKeyDown} tabIndex={-1} {...rest} ref={rootRef}>\n      {children}\n      {activeAction && activeAction.dialog && (\n        <LegacyLayerProvider zOffset=\"paneFooter\">\n          <ActionStateDialog dialog={activeAction.dialog} referenceElement={actionsBoxElement} />\n        </LegacyLayerProvider>\n      )}\n    </As>\n  )\n})\n\nexport interface DocumentActionShortcutsProps {\n  actionsBoxElement: HTMLElement | null\n  as?: ElementType\n  currentMinWidth?: number\n  debug?: boolean\n  flex: number\n  id: string\n  minWidth: number\n  rootRef: Ref<HTMLDivElement>\n}\n\nexport const DocumentActionShortcuts = memo(\n  (props: DocumentActionShortcutsProps & Omit<HTMLProps<HTMLDivElement>, 'as'>) => {\n    const {actionsBoxElement, as = 'div', children, ...rest} = props\n    const {actions, editState, isInitialValueLoading, revisionId} = useDocumentPane()\n    const [activeIndex, setActiveIndex] = useState(-1)\n\n    const onActionStart = useCallback((idx: number) => {\n      setActiveIndex(idx)\n    }, [])\n\n    const actionProps: DocumentActionProps | null = useMemo(\n      () =>\n        editState && {\n          ...editState,\n\n          // @todo: what to call here?\n          onComplete: () => undefined,\n\n          revision: revisionId || undefined,\n          initialValueResolved: !isInitialValueLoading,\n        },\n      [editState, isInitialValueLoading, revisionId],\n    )\n\n    const renderDocumentActionShortcuts = useCallback<\n      (props: {states: DocumentActionDescription[]}) => React.ReactNode\n    >(\n      ({states}) => (\n        <KeyboardShortcutResponder\n          {...rest}\n          activeIndex={activeIndex}\n          actionsBoxElement={actionsBoxElement}\n          as={as}\n          onActionStart={onActionStart}\n          states={states}\n        >\n          {children}\n        </KeyboardShortcutResponder>\n      ),\n      [actionsBoxElement, activeIndex, as, children, onActionStart, rest],\n    )\n\n    if (!actionProps || !actions) return null\n\n    return (\n      <RenderActionCollectionState actionProps={actionProps} actions={actions}>\n        {renderDocumentActionShortcuts}\n      </RenderActionCollectionState>\n    )\n  },\n)\n\nDocumentActionShortcuts.displayName = 'Memo(DocumentActionShortcuts)'\n","import {EarthAmericasIcon, JsonIcon, LinkIcon, TransferIcon} from '@sanity/icons'\nimport {type DocumentInspector, type DocumentInspectorMenuItem, type TFunction} from 'sanity'\n\nimport {type DocumentIdStack} from '../../hooks/useDocumentIdStack'\nimport {type PaneMenuItem, type StructureToolFeatures} from '../../types'\nimport {INSPECT_ACTION_PREFIX} from './constants'\n\ninterface GetMenuItemsParams {\n  currentInspector?: DocumentInspector\n  features: StructureToolFeatures\n  hasValue: boolean\n  inspectors: DocumentInspector[]\n  previewUrl?: string | null\n  documentIdStack?: DocumentIdStack\n  inspectorMenuItems: DocumentInspectorMenuItem[]\n  t: TFunction\n}\n\nfunction getInspectorItems({\n  currentInspector,\n  hasValue,\n  inspectors,\n  inspectorMenuItems,\n}: GetMenuItemsParams): PaneMenuItem[] {\n  return inspectors\n    .map((inspector, index) => {\n      const menuItem = inspectorMenuItems[index]\n\n      if (!menuItem || menuItem.hidden) return null\n\n      return {\n        action: `${INSPECT_ACTION_PREFIX}${inspector.name}`,\n        group: menuItem.showAsAction ? undefined : 'inspectors',\n        icon: menuItem.icon,\n        disabled: !hasValue,\n        selected: currentInspector?.name === inspector.name,\n        shortcut: menuItem.hotkeys?.join('+'),\n        showAsAction: menuItem.showAsAction,\n        title: menuItem.title,\n        tone: menuItem.tone,\n      }\n    })\n    .filter(Boolean) as PaneMenuItem[]\n}\n\nfunction getInspectItem({hasValue, t}: GetMenuItemsParams): PaneMenuItem {\n  return {\n    action: 'inspect',\n    group: 'inspectors',\n    title: t('document-inspector.menu-item.title'),\n    icon: JsonIcon,\n    disabled: !hasValue,\n    shortcut: 'Ctrl+Alt+I',\n  }\n}\n\nfunction getCompareVersionsItem({documentIdStack, t}: GetMenuItemsParams): PaneMenuItem | null {\n  const disabled = typeof documentIdStack?.previousId === 'undefined' && {\n    reason: t('compare-versions.menu-item.disabled-reason'),\n  }\n\n  return {\n    action: 'compareVersions',\n    group: 'inspectors',\n    title: t('compare-versions.menu-item.title'),\n    icon: TransferIcon,\n    disabled,\n  }\n}\n\nexport function getProductionPreviewItem({previewUrl, t}: GetMenuItemsParams): PaneMenuItem | null {\n  if (!previewUrl) return null\n\n  return {\n    action: 'production-preview',\n    group: 'links',\n    title: t('production-preview.menu-item.title'),\n    icon: EarthAmericasIcon,\n    shortcut: 'Ctrl+Alt+O',\n  }\n}\n\nexport function getMenuItems(params: GetMenuItemsParams): PaneMenuItem[] {\n  const inspectorItems = getInspectorItems(params)\n  const items = [\n    // Get production preview item\n    getProductionPreviewItem(params),\n    getCompareVersionsItem(params),\n  ].filter(Boolean) as PaneMenuItem[]\n\n  return [\n    // Always present document menu item to copy current url to clipboard\n    {\n      action: 'copy-document-url',\n      showAsAction: true,\n      title: params.t('action.copy-document-url.label'),\n      icon: LinkIcon,\n    },\n    ...inspectorItems,\n\n    // TODO: convert to inspector or document view?\n    getInspectItem(params),\n\n    ...items,\n  ]\n}\n","import {Card, Code, Stack, Text} from '@sanity/ui'\nimport {isDev, Translate, useTranslation} from 'sanity'\n\nimport {ErrorPane} from '../../error'\n\ninterface DocumentLayoutErrorProps {\n  currentMinWidth?: number\n  documentType?: string\n  minWidth?: number\n  paneKey: string\n  value?: Record<string, unknown>\n}\n\nexport function DocumentLayoutError(props: DocumentLayoutErrorProps) {\n  const {documentType, value, currentMinWidth, paneKey, minWidth} = props\n  const {t} = useTranslation()\n\n  return (\n    <ErrorPane\n      currentMinWidth={currentMinWidth}\n      flex={2.5}\n      minWidth={minWidth}\n      paneKey={paneKey}\n      title={\n        <Translate\n          t={t}\n          i18nKey=\"panes.document-pane.document-unknown-type.title\"\n          values={{documentType}}\n        />\n      }\n      tone=\"caution\"\n    >\n      <Stack space={4}>\n        {documentType && (\n          <Text as=\"p\">\n            <Translate\n              t={t}\n              i18nKey=\"panes.document-pane.document-unknown-type.text\"\n              values={{documentType}}\n            />\n          </Text>\n        )}\n\n        {!documentType && (\n          <Text as=\"p\">{t('panes.document-pane.document-unknown-type.without-schema.text')}</Text>\n        )}\n\n        {isDev && value && (\n          /* eslint-disable i18next/no-literal-string */\n          <>\n            <Text as=\"p\">Here is the JSON representation of the document:</Text>\n\n            <Card padding={3} overflow=\"auto\" radius={2} shadow={1} tone=\"inherit\">\n              <Code language=\"json\" size={[1, 1, 2]}>\n                {JSON.stringify(value, null, 2)}\n              </Code>\n            </Card>\n          </>\n          /* eslint-enable i18next/no-literal-string */\n        )}\n      </Stack>\n    </ErrorPane>\n  )\n}\n","import {DialogProvider, type DialogProviderProps, PortalProvider} from '@sanity/ui'\nimport {type Dispatch, type SetStateAction, useMemo} from 'react'\nimport {getSanityCreateLinkMetadata, useZIndex} from 'sanity'\n\nimport {TooltipDelayGroupProvider} from '../../../../ui-components/tooltipDelayGroupProvider/TooltipDelayGroupProvider'\nimport {PaneFooter} from '../../../components'\nimport {DOCUMENT_PANEL_PORTAL_ELEMENT} from '../../../constants'\nimport {DocumentStatusBar} from '../statusBar'\nimport {useDocumentPane} from '../useDocumentPane'\n\nconst DIALOG_PROVIDER_POSITION: DialogProviderProps['position'] = [\n  // We use the `position: fixed` for dialogs on narrower screens (first two media breakpoints).\n  'fixed',\n  'fixed',\n  // And we use the `position: absolute` strategy (within panes) on wide screens.\n  'absolute',\n]\n\nexport function DocumentLayoutFooter({\n  documentPanelPortalElement,\n  setFooterElement,\n  setActionsBoxElement,\n}: {\n  documentPanelPortalElement: HTMLElement | null\n  setFooterElement: Dispatch<SetStateAction<HTMLDivElement | null>>\n  setActionsBoxElement: Dispatch<SetStateAction<HTMLDivElement | null>>\n}) {\n  const zOffsets = useZIndex()\n\n  const {value} = useDocumentPane()\n  const portalElements = useMemo(\n    () => ({[DOCUMENT_PANEL_PORTAL_ELEMENT]: documentPanelPortalElement}),\n    [documentPanelPortalElement],\n  )\n\n  const createLinkMetadata = getSanityCreateLinkMetadata(value)\n  return (\n    // These providers are added because we want the dialogs in `DocumentStatusBar` to be scoped to the document pane\n    // The portal element comes from `DocumentPanel`.\n    <PortalProvider __unstable_elements={portalElements}>\n      <DialogProvider position={DIALOG_PROVIDER_POSITION} zOffset={zOffsets.portal}>\n        <PaneFooter ref={setFooterElement} padding={1}>\n          <TooltipDelayGroupProvider>\n            <DocumentStatusBar\n              actionsBoxRef={setActionsBoxElement}\n              createLinkMetadata={createLinkMetadata}\n            />\n          </TooltipDelayGroupProvider>\n        </PaneFooter>\n      </DialogProvider>\n    </PortalProvider>\n  )\n}\n","import {DialogProvider, type DialogProviderProps, Flex, useElementRect} from '@sanity/ui'\nimport {isHotkey} from 'is-hotkey-esm'\nimport {useCallback, useMemo, useState} from 'react'\nimport {\n  ChangeConnectorRoot,\n  type DocumentFieldActionNode,\n  type DocumentInspectorMenuItem,\n  FieldActionsProvider,\n  FieldActionsResolver,\n  GetFormValueProvider,\n  type Path,\n  useGlobalCopyPasteElementHandler,\n  useTranslation,\n  useZIndex,\n} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Pane, usePaneLayout, usePaneRouter} from '../../../components'\nimport {useDocumentIdStack} from '../../../hooks/useDocumentIdStack'\nimport {structureLocaleNamespace} from '../../../i18n'\nimport {useStructureTool} from '../../../useStructureTool'\nimport {\n  DOCUMENT_INSPECTOR_MIN_WIDTH,\n  DOCUMENT_PANEL_INITIAL_MIN_WIDTH,\n  DOCUMENT_PANEL_MIN_WIDTH,\n} from '../constants'\nimport {DocumentInspectorMenuItemsResolver} from '../DocumentInspectorMenuItemsResolver'\nimport {DocumentOperationResults} from '../DocumentOperationResults'\nimport {DocumentPanel} from '../documentPanel'\nimport {DocumentPanelHeader} from '../documentPanel/header'\nimport {DocumentActionShortcuts} from '../keyboardShortcuts'\nimport {getMenuItems} from '../menuItems'\nimport {useDocumentPane} from '../useDocumentPane'\nimport {DocumentLayoutError} from './DocumentLayoutError'\nimport {DocumentLayoutFooter} from './DocumentLayoutFooter'\n\nconst EMPTY_ARRAY: [] = []\n\nconst DIALOG_PROVIDER_POSITION: DialogProviderProps['position'] = [\n  // We use the `position: fixed` for dialogs on narrower screens (first two media breakpoints).\n  'fixed',\n  'fixed',\n  // And we use the `position: absolute` strategy (within panes) on wide screens.\n  'absolute',\n]\n\nconst StyledChangeConnectorRoot = styled(ChangeConnectorRoot)`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  min-height: 0;\n  min-width: 0;\n`\n\nexport function DocumentLayout() {\n  const {\n    changesOpen,\n    displayed,\n    documentId,\n    documentType,\n    editState,\n    fieldActions,\n    focusPath,\n    inspectOpen,\n    inspector,\n    inspectors,\n    onFocus,\n    onHistoryOpen,\n    onMenuAction,\n    onPathOpen,\n    paneKey,\n    schemaType,\n    value,\n    isInitialValueLoading,\n    ready,\n    previewUrl,\n  } = useDocumentPane()\n  const {params: paneParams} = usePaneRouter()\n  const {features} = useStructureTool()\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {collapsed: layoutCollapsed} = usePaneLayout()\n\n  const zOffsets = useZIndex()\n\n  const [rootElement, setRootElement] = useState<HTMLDivElement | null>(null)\n  const [footerElement, setFooterElement] = useState<HTMLDivElement | null>(null)\n  const [headerElement, setHeaderElement] = useState<HTMLDivElement | null>(null)\n\n  const [actionsBoxElement, setActionsBoxElement] = useState<HTMLDivElement | null>(null)\n  const [documentPanelPortalElement, setDocumentPanelPortalElement] = useState<HTMLElement | null>(\n    null,\n  )\n\n  useGlobalCopyPasteElementHandler({\n    element: rootElement,\n    focusPath,\n    value,\n  })\n\n  const [inspectorMenuItems, setInspectorMenuItems] = useState<DocumentInspectorMenuItem[]>([])\n  const [rootFieldActionNodes, setRootFieldActionNodes] = useState<DocumentFieldActionNode[]>([])\n\n  const footerRect = useElementRect(footerElement)\n  const headerRect = useElementRect(headerElement)\n  const footerHeight = footerRect?.height\n  const headerHeight = headerRect?.height\n  const currentMinWidth =\n    DOCUMENT_PANEL_INITIAL_MIN_WIDTH + (inspector ? DOCUMENT_INSPECTOR_MIN_WIDTH : 0)\n  const minWidth = DOCUMENT_PANEL_MIN_WIDTH + (inspector ? DOCUMENT_INSPECTOR_MIN_WIDTH : 0)\n\n  const currentInspector = useMemo(\n    () => inspectors?.find((i) => i.name === inspector?.name),\n    [inspectors, inspector?.name],\n  )\n\n  const documentIdStack = useDocumentIdStack({displayed, documentId, editState})\n\n  const hasValue = Boolean(value)\n\n  const menuItems = useMemo(\n    () =>\n      getMenuItems({\n        currentInspector,\n        features,\n        hasValue,\n        inspectorMenuItems,\n        inspectors,\n        previewUrl,\n        documentIdStack,\n        t,\n      }),\n    [\n      currentInspector,\n      documentIdStack,\n      features,\n      hasValue,\n      inspectorMenuItems,\n      inspectors,\n      previewUrl,\n      t,\n    ],\n  )\n\n  const handleKeyUp = useCallback(\n    (event: React.KeyboardEvent<HTMLDivElement>) => {\n      for (const item of menuItems) {\n        if (item.shortcut) {\n          if (isHotkey(item.shortcut, event)) {\n            event.preventDefault()\n            event.stopPropagation()\n            onMenuAction(item)\n            return\n          }\n        }\n      }\n    },\n    [onMenuAction, menuItems],\n  )\n\n  const onConnectorSetFocus = useCallback(\n    (path: Path) => {\n      onPathOpen(path)\n      onFocus(path)\n    },\n    [onPathOpen, onFocus],\n  )\n\n  if (!schemaType) {\n    return (\n      <DocumentLayoutError\n        currentMinWidth={currentMinWidth}\n        documentType={documentType}\n        minWidth={minWidth}\n        paneKey={paneKey}\n        value={value}\n      />\n    )\n  }\n\n  return (\n    <GetFormValueProvider value={value}>\n      {inspectors.length > 0 && (\n        <DocumentInspectorMenuItemsResolver\n          documentId={documentId}\n          documentType={documentType}\n          inspectors={inspectors}\n          onMenuItems={setInspectorMenuItems}\n        />\n      )}\n\n      {fieldActions.length > 0 && schemaType && (\n        <FieldActionsResolver\n          actions={fieldActions}\n          documentId={documentId}\n          documentType={documentType}\n          onActions={setRootFieldActionNodes}\n          path={EMPTY_ARRAY}\n          schemaType={schemaType}\n        />\n      )}\n\n      <FieldActionsProvider actions={rootFieldActionNodes} path={EMPTY_ARRAY}>\n        <DocumentActionShortcuts\n          actionsBoxElement={actionsBoxElement}\n          as={Pane}\n          currentMinWidth={currentMinWidth}\n          data-testid=\"document-pane\"\n          flex={2.5}\n          id={paneKey}\n          minWidth={minWidth}\n          onKeyUp={handleKeyUp}\n          rootRef={setRootElement}\n        >\n          <DocumentPanelHeader ref={setHeaderElement} menuItems={menuItems} />\n          <DialogProvider position={DIALOG_PROVIDER_POSITION} zOffset={zOffsets.paneDialog}>\n            <Flex direction=\"column\" flex={1} height={layoutCollapsed ? undefined : 'fill'}>\n              <StyledChangeConnectorRoot\n                data-testid=\"change-connector-root\"\n                isReviewChangesOpen={changesOpen && paneParams?.changesInspectorTab === 'review'}\n                onOpenReviewChanges={onHistoryOpen}\n                onSetFocus={onConnectorSetFocus}\n              >\n                <DocumentPanel\n                  footerHeight={footerHeight || null}\n                  headerHeight={headerHeight || null}\n                  isInspectOpen={inspectOpen}\n                  rootElement={rootElement}\n                  setDocumentPanelPortalElement={setDocumentPanelPortalElement}\n                  footer={\n                    <DocumentLayoutFooter\n                      documentPanelPortalElement={documentPanelPortalElement}\n                      setFooterElement={setFooterElement}\n                      setActionsBoxElement={setActionsBoxElement}\n                    />\n                  }\n                />\n              </StyledChangeConnectorRoot>\n            </Flex>\n          </DialogProvider>\n          <DocumentOperationResults />\n        </DocumentActionShortcuts>\n      </FieldActionsProvider>\n    </GetFormValueProvider>\n  )\n}\n","import {type ComponentType} from 'react'\nimport {type DocumentLayoutProps, useMiddlewareComponents} from 'sanity'\n\nimport {DocumentLayout} from './DocumentLayout'\nimport {pickDocumentLayoutComponent} from './pickDocumentLayoutComponent'\n\n/**\n * A hook that returns the document layout composed\n * by the Components API (`document.components.layout`).\n */\nexport function useDocumentLayoutComponent(): ComponentType<\n  Omit<DocumentLayoutProps, 'renderDefault'>\n> {\n  return useMiddlewareComponents({\n    pick: pickDocumentLayoutComponent,\n    defaultComponent: DocumentLayout,\n  })\n}\n","import {type SanityDocument} from '@sanity/types'\nimport {useEffect, useState} from 'react'\nimport {useHistoryStore, useTimelineSelector, useTimelineStore} from 'sanity'\n\nexport const useDocumentLastRev = (documentId: string, documentType: string) => {\n  const historyStore = useHistoryStore()\n  const [lastRevisionDocument, setLastRevisionDocument] = useState<SanityDocument | null>(null)\n  const [loading, setLoading] = useState(false)\n\n  // Get the timeline store to access lastNonDeletedRevId\n  // needs to be done this way because otherwise the revision id will not be the most updated\n  // in case if you edit the document in between deletes, for example\n  const timelineStore = useTimelineStore({\n    documentId,\n    documentType,\n  })\n\n  // Get the lastNonDeletedRevId from the timeline store\n  const lastNonDeletedRevId = useTimelineSelector(\n    timelineStore,\n    (state) => state.lastNonDeletedRevId,\n  )\n\n  useEffect(() => {\n    if (lastNonDeletedRevId && documentId) {\n      setLoading(true)\n      historyStore\n        .getDocumentAtRevision(documentId, lastNonDeletedRevId)\n        .then((document) => {\n          setLastRevisionDocument(document || null)\n          setLoading(false)\n        })\n        .catch(() => {\n          setLastRevisionDocument(null)\n          setLoading(false)\n        })\n    } else {\n      setLastRevisionDocument(null)\n      setLoading(false)\n    }\n  }, [documentId, lastNonDeletedRevId, historyStore])\n\n  return {lastRevisionDocument, loading}\n}\n","import {defineEvent} from '@sanity/telemetry'\n\n/**\n * @internal\n */\nexport const DocumentURLCopied = defineEvent({\n  name: 'DocumentURLCopied',\n  version: 1,\n  description: 'User copied document URL to clipboard',\n})\n","import {type Template} from 'sanity'\n\ninterface InitialValueOptions {\n  documentType: string\n  panePayload?: unknown\n  templateName?: string\n  templateParams?: Record<string, unknown>\n  urlTemplate?: string\n}\n\n/**\n * @internal\n */\nexport function getInitialValueTemplateOpts(\n  templates: Template[],\n  opts: InitialValueOptions,\n): {templateName: string; templateParams: Record<string, unknown>} {\n  const payload = opts.panePayload || {}\n  const structureNodeTemplate = opts.templateName\n\n  if (opts.urlTemplate && structureNodeTemplate && structureNodeTemplate !== opts.urlTemplate) {\n    console.warn(\n      `Conflicting templates: URL says \"${opts.urlTemplate}\", structure node says \"${structureNodeTemplate}\". Using \"${structureNodeTemplate}\".`,\n    )\n  }\n\n  const template = structureNodeTemplate || opts.urlTemplate\n  const typeTemplates = templates.filter((t) => t.schemaType === opts.documentType)\n\n  const templateParams = {\n    ...opts.templateParams,\n    ...(typeof payload === 'object' ? payload || {} : {}),\n  }\n\n  let templateName = template\n\n  // If we have not specified a specific template, and we only have a single\n  // template available for a schema type, use it\n  if (!template && typeTemplates.length === 1) {\n    templateName = typeTemplates[0].id\n  }\n\n  return {templateName: templateName!, templateParams}\n}\n","import {useMemo} from 'react'\nimport {useInitialValue, useTemplates, useUnique} from 'sanity'\n\nimport {type PaneRouterContextValue, usePaneRouter} from '../../components'\nimport {type DocumentPaneNode} from '../../types'\nimport {getInitialValueTemplateOpts} from './getInitialValueTemplateOpts'\n\nexport const useDocumentPaneInitialValue = ({\n  paneOptions,\n  documentType,\n  documentId,\n  params,\n}: {\n  paneOptions: DocumentPaneNode['options']\n  documentType: string\n  documentId: string\n  params: NonNullable<PaneRouterContextValue['params']>\n}) => {\n  const templates = useTemplates()\n  const paneRouter = usePaneRouter()\n  const panePayload = useUnique(paneRouter.payload)\n\n  const {templateName, templateParams} = useMemo(\n    () =>\n      getInitialValueTemplateOpts(templates, {\n        documentType,\n        templateName: paneOptions.template,\n        templateParams: paneOptions.templateParameters,\n        panePayload,\n        urlTemplate: params.template,\n      }),\n    [documentType, paneOptions, params.template, panePayload, templates],\n  )\n\n  const initialValueRaw = useInitialValue({\n    documentId,\n    documentType,\n    templateName,\n    templateParams,\n    version: params.version,\n  })\n\n  const initialValue = useUnique(initialValueRaw)\n  return initialValue\n}\n","import {useCallback, useEffect, useMemo, useRef, useState} from 'react'\nimport {type DocumentInspector, useSource} from 'sanity'\n\nimport {type PaneRouterContextValue} from '../../components'\nimport {type PaneMenuItem} from '../../types'\nimport {useStructureTool} from '../../useStructureTool'\nimport {HISTORY_INSPECTOR_NAME, INSPECT_ACTION_PREFIX} from './constants'\n\nexport function useDocumentPaneInspector({\n  documentId,\n  documentType,\n  params,\n  setParams,\n}: {\n  params: NonNullable<PaneRouterContextValue['params']>\n  documentId: string\n  documentType: string\n  setParams: (params: Record<string, string | undefined>) => void\n}) {\n  const {features} = useStructureTool()\n  const source = useSource()\n  const inspectorsResolver = source.document.inspectors\n\n  const inspectors: DocumentInspector[] = useMemo(\n    () => inspectorsResolver({documentId, documentType}),\n    [documentId, documentType, inspectorsResolver],\n  )\n\n  const [inspectorName, setInspectorName] = useState<string | null>(() => params.inspect || null)\n\n  // Handle inspector name changes from URL\n  const inspectParamRef = useRef<string | undefined>(params.inspect)\n  useEffect(() => {\n    if (inspectParamRef.current !== params.inspect) {\n      inspectParamRef.current = params.inspect\n      setInspectorName(params.inspect || null)\n    }\n  }, [params.inspect])\n\n  const currentInspector = useMemo(\n    () => inspectors?.find((i) => i.name === inspectorName),\n    [inspectors, inspectorName],\n  )\n  const historyInspector = useMemo(\n    () => inspectors.find((i) => i.name === HISTORY_INSPECTOR_NAME),\n    [inspectors],\n  )\n\n  const changesOpen = currentInspector?.name === HISTORY_INSPECTOR_NAME\n\n  const closeInspector = useCallback(\n    (closeInspectorName?: string) => {\n      const inspector = closeInspectorName && inspectors.find((i) => i.name === closeInspectorName)\n\n      if (closeInspectorName && !inspector) {\n        console.warn(`No inspector named \"${closeInspectorName}\"`)\n        return\n      }\n\n      if (!currentInspector) {\n        return\n      }\n\n      if (inspector) {\n        const result = inspector.onClose?.({params}) ?? {params}\n\n        setInspectorName(null)\n        inspectParamRef.current = undefined\n\n        setParams({...result.params, inspect: undefined})\n\n        return\n      }\n\n      if (currentInspector) {\n        const result = currentInspector.onClose?.({params}) ?? {params}\n\n        setInspectorName(null)\n        inspectParamRef.current = undefined\n\n        setParams({...result.params, inspect: undefined})\n      }\n    },\n    [currentInspector, inspectors, params, setParams],\n  )\n\n  const openInspector = useCallback(\n    (nextInspectorName: string, paneParams?: Record<string, string>) => {\n      const nextInspector = inspectors.find((i) => i.name === nextInspectorName)\n\n      if (!nextInspector) {\n        console.warn(`No inspector named \"${nextInspectorName}\"`)\n        return\n      }\n\n      // if the inspector is already open, only update params\n      if (currentInspector?.name === nextInspector.name) {\n        setParams({...params, ...paneParams, inspect: nextInspector.name})\n        return\n      }\n\n      let currentParams = params\n\n      if (currentInspector) {\n        const closeResult = nextInspector.onClose?.({params: currentParams}) ?? {\n          params: currentParams,\n        }\n\n        currentParams = closeResult.params\n      }\n\n      const result = nextInspector.onOpen?.({params: currentParams}) ?? {params: currentParams}\n\n      setInspectorName(nextInspector.name)\n      inspectParamRef.current = nextInspector.name\n\n      setParams({...result.params, ...paneParams, inspect: nextInspector.name})\n    },\n    [currentInspector, inspectors, params, setParams],\n  )\n  const handleHistoryClose = useCallback(() => {\n    if (historyInspector) {\n      closeInspector(historyInspector.name)\n    }\n  }, [closeInspector, historyInspector])\n\n  const handleHistoryOpen = useCallback(() => {\n    if (!features.reviewChanges) {\n      return\n    }\n\n    if (historyInspector) {\n      openInspector(historyInspector.name, {changesInspectorTab: 'review'})\n    }\n  }, [features.reviewChanges, openInspector, historyInspector])\n\n  const inspectOpen = params.inspect === 'on'\n\n  const toggleLegacyInspect = useCallback(\n    (toggle = !inspectOpen) => {\n      if (toggle) {\n        setParams({...params, inspect: 'on'})\n      } else {\n        setParams({...params, inspect: undefined})\n      }\n    },\n    [inspectOpen, params, setParams],\n  )\n\n  const handleLegacyInspectClose = useCallback(\n    () => toggleLegacyInspect(false),\n    [toggleLegacyInspect],\n  )\n\n  const handleInspectorAction = useCallback(\n    (item: PaneMenuItem) => {\n      if (item.action === 'inspect') {\n        toggleLegacyInspect(true)\n        return true\n      }\n\n      if (typeof item.action !== 'string') return false\n      const nextInspectorName = item.action.slice(INSPECT_ACTION_PREFIX.length)\n      const nextInspector = inspectors.find((i) => i.name === nextInspectorName)\n\n      if (nextInspector) {\n        if (nextInspector.name === inspectorName) {\n          closeInspector(nextInspector.name)\n        } else {\n          openInspector(nextInspector.name)\n        }\n        return true\n      }\n      return false\n    },\n    [closeInspector, inspectorName, inspectors, openInspector, toggleLegacyInspect],\n  )\n\n  return {\n    changesOpen,\n    currentInspector,\n    inspectors,\n    closeInspector,\n    openInspector,\n    handleHistoryClose,\n    handleHistoryOpen,\n    handleInspectorAction,\n    // TODO: Deprecate this legacy inspect toggle it's used to render the <InspectDialog /> component\n    handleLegacyInspectClose,\n    inspectOpen,\n  }\n}\n","import {type SanityDocument} from '@sanity/types'\nimport {useEffect, useMemo} from 'react'\nimport {useObservable} from 'react-rx'\nimport {BehaviorSubject, from, of} from 'rxjs'\nimport {catchError, debounceTime, distinctUntilChanged, switchMap} from 'rxjs/operators'\nimport {isRecord, useSource} from 'sanity'\n\nconst isSanityDocument = (value: unknown): value is SanityDocument =>\n  isRecord(value) && typeof value._id === 'string' && typeof value._type === 'string'\n\nexport function usePreviewUrl(value: Partial<SanityDocument> | undefined): string | undefined {\n  const {resolveProductionUrl} = useSource().document\n  const subject = useMemo(\n    () => new BehaviorSubject<Partial<SanityDocument> | undefined>(undefined),\n    [],\n  )\n\n  useEffect(() => {\n    subject.next(value)\n  }, [subject, value])\n\n  const resolvedUrlObservable = useMemo(() => {\n    return subject.asObservable().pipe(\n      // this so that the preview URL isn't fetched on every keystroke\n      distinctUntilChanged(),\n      debounceTime(500),\n      switchMap((document) =>\n        isSanityDocument(document) ? from(resolveProductionUrl({document})) : of(undefined),\n      ),\n      distinctUntilChanged(),\n      catchError((err) => {\n        const message =\n          isRecord(err) && typeof err.message === 'string' ? err.message : 'Unknown error'\n        throw new Error(`An error was thrown while trying to get your preview url: ${message}`)\n      }),\n    )\n  }, [resolveProductionUrl, subject])\n\n  return useObservable(resolvedUrlObservable)\n}\n","import {useTelemetry} from '@sanity/telemetry/react'\nimport {type ObjectSchemaType, type SanityDocument, type SanityDocumentLike} from '@sanity/types'\nimport {useToast} from '@sanity/ui'\nimport {fromString as pathFromString, resolveKeyedPath} from '@sanity/util/paths'\nimport {memo, useCallback, useEffect, useMemo, useRef, useState} from 'react'\nimport {\n  type DocumentActionsContext,\n  type DocumentActionsVersionType,\n  type DocumentFieldAction,\n  type EditStateFor,\n  EMPTY_ARRAY,\n  getPublishedId,\n  isGoingToUnpublish,\n  isPerspectiveWriteable,\n  isVersionId,\n  type PartialContext,\n  useCopyPaste,\n  useDocumentForm,\n  usePerspective,\n  useSchema,\n  useSource,\n  useStudioUrl,\n  useTranslation,\n  useUnique,\n  useWorkspace,\n} from 'sanity'\nimport {DocumentPaneContext} from 'sanity/_singletons'\n\nimport {usePaneRouter} from '../../components'\nimport {useDiffViewRouter} from '../../diffView/hooks/useDiffViewRouter'\nimport {useDocumentIdStack} from '../../hooks/useDocumentIdStack'\nimport {useDocumentLastRev} from '../../hooks/useDocumentLastRev'\nimport {structureLocaleNamespace} from '../../i18n'\nimport {type PaneMenuItem} from '../../types'\nimport {DocumentURLCopied} from './__telemetry__'\nimport {DEFAULT_MENU_ITEM_GROUPS, EMPTY_PARAMS, INSPECT_ACTION_PREFIX} from './constants'\nimport {type DocumentPaneContextValue} from './DocumentPaneContext'\nimport {\n  type DocumentPaneProviderProps as DocumentPaneProviderWrapperProps,\n  type HistoryStoreProps,\n} from './types'\nimport {useDocumentPaneInitialValue} from './useDocumentPaneInitialValue'\nimport {useDocumentPaneInspector} from './useDocumentPaneInspector'\nimport {usePreviewUrl} from './usePreviewUrl'\n\ninterface DocumentPaneProviderProps extends DocumentPaneProviderWrapperProps {\n  historyStore: HistoryStoreProps\n}\n\n/**\n * @internal\n */\n// eslint-disable-next-line max-statements\nexport const DocumentPaneProvider = memo((props: DocumentPaneProviderProps) => {\n  const {children, index, pane, paneKey, onFocusPath, forcedVersion, historyStore} = props\n  const {\n    store: timelineStore,\n    error: timelineError,\n    ready: timelineReady,\n    revisionDocument,\n    onOlderRevision,\n    sinceDocument,\n    isPristine,\n    revisionId,\n    lastNonDeletedRevId,\n  } = historyStore\n\n  const schema = useSchema()\n  const {setDocumentMeta} = useCopyPaste()\n  const {\n    document: {\n      actions: documentActions,\n      badges: documentBadges,\n      unstable_fieldActions: fieldActionsResolver,\n      unstable_languageFilter: languageFilterResolver,\n      drafts: {enabled: draftsEnabled},\n    },\n  } = useSource()\n  const telemetry = useTelemetry()\n  const paneRouter = usePaneRouter()\n  const setPaneParams = paneRouter.setParams\n  const {push: pushToast} = useToast()\n  const {\n    options,\n    menuItemGroups = DEFAULT_MENU_ITEM_GROUPS,\n    title = null,\n    views: viewsProp = [],\n  } = pane\n  const paneOptions = useUnique(options)\n  const documentIdRaw = paneOptions.id\n  const documentId = getPublishedId(documentIdRaw)\n  const documentType = options.type\n  const params = useUnique(paneRouter.params) || EMPTY_PARAMS\n  const {buildStudioUrl} = useStudioUrl()\n\n  const perspective = usePerspective()\n\n  const {\n    document: {\n      drafts: {enabled: isDraftModelEnabled},\n    },\n  } = useWorkspace()\n\n  const {selectedReleaseId, selectedPerspectiveName} = useMemo(() => {\n    // TODO: COREL - Remove this after updating sanity-assist to use <PerspectiveProvider>\n    if (forcedVersion) {\n      return forcedVersion\n    }\n    return {\n      selectedPerspectiveName: perspective.selectedPerspectiveName,\n      selectedReleaseId: perspective.selectedReleaseId,\n    }\n  }, [forcedVersion, perspective.selectedPerspectiveName, perspective.selectedReleaseId])\n\n  const diffViewRouter = useDiffViewRouter()\n\n  const initialValue = useDocumentPaneInitialValue({\n    paneOptions,\n    documentId,\n    documentType,\n    params,\n  })\n\n  const isInitialValueLoading = initialValue.loading\n  const {\n    changesOpen,\n    currentInspector,\n    inspectors,\n    closeInspector,\n    openInspector,\n    handleHistoryClose,\n    handleHistoryOpen,\n    handleInspectorAction,\n    inspectOpen,\n    handleLegacyInspectClose,\n  } = useDocumentPaneInspector({documentId, documentType, params, setParams: setPaneParams})\n\n  const [isDeleting, setIsDeleting] = useState(false)\n  const {lastRevisionDocument} = useDocumentLastRev(documentId, documentType)\n\n  /**\n   * Determine if the current document is deleted.\n   *\n   * When the timeline is available – we check for the absence of an editable document pair\n   * (both draft + published versions) as well as a non 'pristine' timeline (i.e. a timeline that consists\n   * of at least one chunk).\n   *\n   * In the _very rare_ case where the timeline cannot be loaded – we skip this check and always assume\n   * the document is NOT deleted. Since we can't accurately determine document deleted status without history,\n   * skipping this check means that in these cases, users will at least be able to create new documents\n   * without them being incorrectly marked as deleted.\n   */\n  const getIsDeleted = useCallback(\n    (editState: EditStateFor) => {\n      if (!timelineReady) return false\n      return (\n        Boolean(!editState?.draft && !editState?.published && !editState?.version) && !isPristine\n      )\n    },\n    [timelineReady, isPristine],\n  )\n\n  const getComparisonValue = useCallback(\n    (editState: EditStateFor) => {\n      return changesOpen ? sinceDocument || editState?.published : editState?.published || null\n    },\n    [changesOpen, sinceDocument],\n  )\n\n  const schemaType = schema.get(documentType) as ObjectSchemaType | undefined\n\n  const getIsReadOnly = useCallback(\n    (editState: EditStateFor): boolean => {\n      const isDeleted = getIsDeleted(editState)\n      const seeingHistoryDocument = Boolean(params.rev)\n      return (\n        seeingHistoryDocument ||\n        isDeleting ||\n        isDeleted ||\n        !isPerspectiveWriteable({\n          selectedPerspective: perspective.selectedPerspective,\n          isDraftModelEnabled,\n          schemaType,\n        }).result\n      )\n    },\n    [\n      getIsDeleted,\n      isDeleting,\n      isDraftModelEnabled,\n      params.rev,\n      perspective.selectedPerspective,\n      schemaType,\n    ],\n  )\n\n  const getDisplayed = useCallback(\n    (value: SanityDocumentLike) => {\n      if (onOlderRevision) {\n        return revisionDocument || {_id: value._id, _type: value._type}\n      }\n\n      // If the document is deleted (no draft, published, or version), return the last revision\n      const isDeleted = !value._createdAt && !value._updatedAt\n      if (isDeleted && lastNonDeletedRevId) {\n        // Return the fetched last revision document if available\n        if (lastRevisionDocument) {\n          return lastRevisionDocument\n        }\n      }\n\n      return value\n    },\n    [onOlderRevision, revisionDocument, lastNonDeletedRevId, lastRevisionDocument],\n  )\n\n  const {\n    editState,\n    connectionState,\n    focusPath,\n    onChange,\n    validation,\n    ready: formReady,\n    value,\n    formState,\n    permissions,\n    onPathOpen,\n    isPermissionsLoading,\n    formStateRef,\n    onProgrammaticFocus,\n\n    collapsedFieldSets,\n    collapsedPaths,\n    onBlur,\n    onFocus,\n    onSetActiveFieldGroup,\n    onSetCollapsedPath,\n    onSetCollapsedFieldSet,\n    openPath,\n  } = useDocumentForm({\n    changesOpen,\n    documentType,\n    documentId,\n    initialValue: initialValue,\n    comparisonValue: getComparisonValue,\n    releaseId: selectedReleaseId,\n    selectedPerspectiveName,\n    initialFocusPath: params.path ? pathFromString(params.path) : EMPTY_ARRAY,\n    readOnly: getIsReadOnly,\n    onFocusPath,\n    getFormDocumentValue: getDisplayed,\n  })\n\n  const getDocumentVersionType = useCallback(() => {\n    let version: DocumentActionsVersionType\n    switch (true) {\n      case Boolean(params.rev):\n        version = 'revision'\n        break\n      case selectedReleaseId && isVersionId(value._id):\n        version = 'version'\n        break\n      case selectedPerspectiveName === 'published':\n        version = 'published'\n        break\n      case draftsEnabled:\n        version = 'draft'\n        break\n      default:\n        version = 'published'\n    }\n\n    return version\n  }, [params.rev, selectedReleaseId, value._id, selectedPerspectiveName, draftsEnabled])\n\n  const actionsPerspective = useMemo(() => getDocumentVersionType(), [getDocumentVersionType])\n\n  const documentActionsProps: PartialContext<DocumentActionsContext> = useMemo(\n    () => ({\n      schemaType: documentType,\n      documentId,\n      versionType: actionsPerspective,\n      releaseId: selectedReleaseId,\n    }),\n    [documentType, documentId, actionsPerspective, selectedReleaseId],\n  )\n\n  // Resolve document actions\n  const actions = useMemo(\n    () => documentActions(documentActionsProps),\n    [documentActions, documentActionsProps],\n  )\n\n  // Resolve document badges\n  const badges = useMemo(\n    () => documentBadges({schemaType: documentType, documentId}),\n    [documentBadges, documentId, documentType],\n  )\n\n  // Resolve document language filter\n  const languageFilter = useMemo(\n    () => languageFilterResolver({schemaType: documentType, documentId}),\n    [documentId, documentType, languageFilterResolver],\n  )\n\n  const views = useUnique(viewsProp)\n\n  const activeViewId = params.view || (views[0] && views[0].id) || null\n\n  // TODO: this may cause a lot of churn. May be a good idea to prevent these\n  // requests unless the menu is open somehow\n  const previewUrl = usePreviewUrl(value)\n\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const fieldActions: DocumentFieldAction[] = useMemo(\n    () => (schemaType ? fieldActionsResolver({documentId, documentType, schemaType}) : []),\n    [documentId, documentType, fieldActionsResolver, schemaType],\n  )\n\n  /**\n   * Note that in addition to connection and edit state, we also wait for a valid document timeline\n   * range to be loaded. This means if we're loading an older revision, the full transaction range must\n   * be loaded in full prior to the document being displayed.\n   *\n   * Previously, visiting studio URLs with timeline params would display the 'current' document and then\n   * 'snap' in the older revision, which was disorienting and could happen mid-edit.\n   *\n   * In the event that the timeline cannot be loaded due to TimelineController errors or blocked requests,\n   * we skip this readiness check to ensure that users aren't locked out of editing. Trying to select\n   * a timeline revision in this instance will display an error localized to the popover itself.\n   */\n  const ready = formReady && (!params.rev || timelineReady || !!timelineError)\n\n  const displayed: Partial<SanityDocument> | undefined = useMemo(\n    () => getDisplayed(value),\n    [getDisplayed, value],\n  )\n\n  const {previousId} = useDocumentIdStack({displayed, documentId, editState})\n\n  const setTimelineRange = useCallback(\n    (newSince: string, newRev: string | null) => {\n      setPaneParams({\n        ...params,\n        since: newSince,\n        rev: newRev || undefined,\n      })\n    },\n    [params, setPaneParams],\n  )\n\n  const handlePaneClose = useCallback(() => paneRouter.closeCurrent(), [paneRouter])\n\n  const handlePaneSplit = useCallback(() => paneRouter.duplicateCurrent(), [paneRouter])\n\n  const handleMenuAction = useCallback(\n    async (item: PaneMenuItem) => {\n      if (item.action === 'production-preview' && previewUrl) {\n        window.open(previewUrl)\n        return true\n      }\n\n      if (item.action === 'copy-document-url' && navigator) {\n        telemetry.log(DocumentURLCopied)\n        // Chose to copy the user's current URL instead of\n        // the document's edit intent link because\n        // of bugs when resolving a document that has\n        // multiple access paths within Structure\n        const copyUrl = buildStudioUrl({\n          coreUi: (url) => `${url}/intent/edit/id=${documentId};type=${documentType}`,\n        })\n        await navigator.clipboard.writeText(copyUrl)\n        pushToast({\n          id: 'copy-document-url',\n          status: 'info',\n          title: t('panes.document-operation-results.operation-success_copy-url'),\n        })\n        return true\n      }\n\n      if (item.action === 'reviewChanges') {\n        handleHistoryOpen()\n        return true\n      }\n\n      if (\n        item.action === 'inspect' ||\n        (typeof item.action === 'string' && item.action.startsWith(INSPECT_ACTION_PREFIX))\n      ) {\n        handleInspectorAction(item)\n      }\n\n      if (item.action === 'compareVersions' && typeof previousId !== 'undefined') {\n        diffViewRouter.navigateDiffView({\n          mode: 'version',\n          previousDocument: {\n            type: documentType,\n            id: previousId,\n          },\n          nextDocument: {\n            type: documentType,\n            id: value._id,\n          },\n        })\n        return true\n      }\n\n      return false\n    },\n    [\n      previewUrl,\n      previousId,\n      telemetry,\n      buildStudioUrl,\n      pushToast,\n      t,\n      documentId,\n      documentType,\n      handleHistoryOpen,\n      handleInspectorAction,\n      diffViewRouter,\n      value._id,\n    ],\n  )\n\n  useEffect(() => {\n    setDocumentMeta({\n      documentId,\n      documentType,\n      schemaType: schemaType!,\n      onChange,\n    })\n  }, [documentId, documentType, schemaType, onChange, setDocumentMeta])\n\n  const compareValue = useMemo(() => getComparisonValue(editState), [editState, getComparisonValue])\n  const isDeleted = useMemo(() => getIsDeleted(editState), [editState, getIsDeleted])\n  const revisionNotFound = onOlderRevision && !revisionDocument\n\n  const currentDisplayed = useMemo(() => {\n    if (editState.version && isGoingToUnpublish(editState.version)) {\n      return editState.published\n    }\n    return displayed\n  }, [editState.version, editState.published, displayed])\n\n  const documentPane: DocumentPaneContextValue = useMemo(\n    () =>\n      ({\n        actions,\n        activeViewId,\n        badges,\n        changesOpen,\n        closeInspector,\n        collapsedFieldSets,\n        collapsedPaths,\n        compareValue,\n        connectionState,\n        displayed: currentDisplayed,\n        documentId,\n        documentIdRaw,\n        documentType,\n        editState,\n        fieldActions,\n        focusPath,\n        inspector: currentInspector || null,\n        inspectors,\n        onBlur,\n        onChange,\n        onFocus,\n        onPathOpen,\n        onHistoryClose: handleHistoryClose,\n        onHistoryOpen: handleHistoryOpen,\n        onInspectClose: handleLegacyInspectClose,\n        onMenuAction: handleMenuAction,\n        onPaneClose: handlePaneClose,\n        onPaneSplit: handlePaneSplit,\n        onSetActiveFieldGroup,\n        onSetCollapsedPath,\n        onSetCollapsedFieldSet,\n        openInspector,\n        openPath,\n        index,\n        inspectOpen,\n        validation,\n        menuItemGroups: menuItemGroups || [],\n        paneKey,\n        previewUrl,\n        ready,\n        schemaType: schemaType!,\n        isPermissionsLoading,\n        isInitialValueLoading,\n        permissions,\n        setTimelineRange,\n        setIsDeleting,\n        isDeleting,\n        isDeleted,\n        timelineError,\n        timelineStore,\n        title,\n        value,\n        selectedReleaseId,\n        views,\n        formState,\n        unstable_languageFilter: languageFilter,\n        revisionId,\n        revisionNotFound,\n        lastNonDeletedRevId,\n        lastRevisionDocument,\n      }) satisfies DocumentPaneContextValue,\n    [\n      actions,\n      activeViewId,\n      badges,\n      changesOpen,\n      closeInspector,\n      collapsedFieldSets,\n      collapsedPaths,\n      compareValue,\n      connectionState,\n      currentDisplayed,\n      documentId,\n      documentIdRaw,\n      documentType,\n      editState,\n      fieldActions,\n      focusPath,\n      currentInspector,\n      inspectors,\n      onBlur,\n      onChange,\n      onFocus,\n      onPathOpen,\n      handleHistoryClose,\n      handleHistoryOpen,\n      handleLegacyInspectClose,\n      handleMenuAction,\n      handlePaneClose,\n      handlePaneSplit,\n      onSetActiveFieldGroup,\n      onSetCollapsedPath,\n      onSetCollapsedFieldSet,\n      openInspector,\n      openPath,\n      index,\n      inspectOpen,\n      validation,\n      menuItemGroups,\n      paneKey,\n      previewUrl,\n      ready,\n      schemaType,\n      isPermissionsLoading,\n      isInitialValueLoading,\n      permissions,\n      setTimelineRange,\n      isDeleting,\n      isDeleted,\n      timelineError,\n      timelineStore,\n      title,\n      value,\n      selectedReleaseId,\n      views,\n      formState,\n      languageFilter,\n      revisionId,\n      revisionNotFound,\n      lastNonDeletedRevId,\n      lastRevisionDocument,\n    ],\n  )\n\n  const pathRef = useRef<string | undefined>(undefined)\n  useEffect(() => {\n    if (ready && params.path) {\n      const {path, ...restParams} = params\n\n      // trigger a focus when `params.path` changes\n      if (path !== pathRef.current) {\n        const pathFromUrl = resolveKeyedPath(formStateRef.current?.value, pathFromString(path))\n        onProgrammaticFocus(pathFromUrl)\n      }\n\n      // remove the `path`-param from url after we have consumed it as the initial focus path\n      paneRouter.setParams(restParams)\n    }\n    pathRef.current = params.path\n\n    return undefined\n  }, [formStateRef, onProgrammaticFocus, paneRouter, params, ready])\n\n  return (\n    <DocumentPaneContext.Provider value={documentPane}>{children}</DocumentPaneContext.Provider>\n  )\n})\n\nDocumentPaneProvider.displayName = 'Memo(DocumentPaneProvider)'\n","import {type ObjectSchemaType} from '@sanity/types'\nimport {useMemo} from 'react'\nimport {\n  EMPTY_ARRAY,\n  EventsProvider,\n  getDraftId,\n  getPublishedId,\n  getReleaseIdFromReleaseDocumentId,\n  getVersionId,\n  isDeleteDocumentGroupEvent,\n  isDeleteDocumentVersionEvent,\n  PerspectiveProvider,\n  useArchivedReleases,\n  useEditState,\n  useEventsStore,\n  usePerspective,\n  useSchema,\n} from 'sanity'\n\nimport {usePaneRouter} from '../../components'\nimport {EMPTY_PARAMS} from './constants'\nimport {usePaneOptions} from './DocumentPane'\nimport {DocumentPaneProvider} from './DocumentPaneProvider'\nimport {type DocumentPaneProviderProps} from './types'\n\nexport const DocumentEventsPane = (props: DocumentPaneProviderProps) => {\n  const {params = EMPTY_PARAMS} = usePaneRouter()\n  const options = usePaneOptions(props.pane.options, params)\n  const schema = useSchema()\n  const documentType = options.type\n  const schemaType = schema.get(options.type) as ObjectSchemaType | undefined\n  const liveEdit = Boolean(schemaType?.liveEdit)\n\n  const {selectedPerspectiveName, selectedReleaseId, selectedPerspective} = usePerspective()\n  const {data: archivedReleases} = useArchivedReleases()\n  const editState = useEditState(\n    getPublishedId(options.id),\n    documentType,\n    'default',\n    selectedReleaseId,\n  )\n\n  const showingPublishedOnDraft = liveEdit && selectedPerspective === 'drafts' && !editState?.draft\n  const {rev, since} = params\n  const historyVersion = params.historyVersion\n\n  const documentId = useMemo(() => {\n    if (showingPublishedOnDraft) {\n      return getPublishedId(options.id)\n    }\n    if (\n      historyVersion &&\n      archivedReleases.some(\n        (release) => getReleaseIdFromReleaseDocumentId(release._id) === historyVersion,\n      )\n    ) {\n      // Check if we have a release that matches with this historyVersion\n      return getVersionId(options.id, historyVersion)\n    }\n    if (typeof selectedPerspectiveName === 'undefined') {\n      return getDraftId(options.id)\n    }\n    if (selectedPerspectiveName === 'published') {\n      return getPublishedId(options.id)\n    }\n    if (selectedReleaseId) {\n      return getVersionId(options.id, selectedPerspectiveName)\n    }\n    return options.id\n  }, [\n    archivedReleases,\n    historyVersion,\n    selectedPerspectiveName,\n    options.id,\n    showingPublishedOnDraft,\n    selectedReleaseId,\n  ])\n\n  const eventsStore = useEventsStore({documentId, documentType: options.type, rev, since})\n\n  const historyStoreProps = useMemo(\n    () => ({\n      error: eventsStore.error,\n      revisionId: eventsStore.revision?.revisionId || null,\n      onOlderRevision: Boolean(rev && !eventsStore.revision?.loading),\n      revisionDocument: eventsStore.revision?.document || null,\n      sinceDocument: eventsStore.sinceRevision?.document || null,\n      ready: !eventsStore.loading,\n      isPristine: Boolean(eventsStore.events.length === 0),\n      lastNonDeletedRevId:\n        eventsStore.events.find(\n          (e) => !isDeleteDocumentGroupEvent(e) && !isDeleteDocumentVersionEvent(e),\n        )?.id || null,\n    }),\n    [eventsStore, rev],\n  )\n\n  const value = useMemo(() => eventsStore, [eventsStore])\n\n  return (\n    <EventsProvider value={value}>\n      {historyVersion ? (\n        <PerspectiveProvider\n          selectedPerspectiveName={historyVersion}\n          excludedPerspectives={EMPTY_ARRAY}\n        >\n          <DocumentPaneProvider {...props} historyStore={historyStoreProps} />\n        </PerspectiveProvider>\n      ) : (\n        <DocumentPaneProvider {...props} historyStore={historyStoreProps} />\n      )}\n    </EventsProvider>\n  )\n}\n","import {type SanityDocument} from '@sanity/types'\nimport {useMemo, useState} from 'react'\nimport {getPublishedId, useTimelineSelector, useTimelineStore} from 'sanity'\n\nimport {usePaneRouter} from '../../components'\nimport {EMPTY_PARAMS} from './constants'\nimport {usePaneOptions} from './DocumentPane'\nimport {DocumentPaneProvider} from './DocumentPaneProvider'\nimport {type DocumentPaneProviderProps} from './types'\n\nexport const DocumentPaneWithLegacyTimelineStore = (props: DocumentPaneProviderProps) => {\n  const {pane} = props\n  const paneRouter = usePaneRouter()\n  const options = usePaneOptions(pane.options, paneRouter.params)\n\n  const params = paneRouter.params || EMPTY_PARAMS\n\n  const [timelineError, setTimelineError] = useState<Error | null>(null)\n\n  const store = useTimelineStore({\n    documentId: getPublishedId(options.id),\n    documentType: options.type,\n    onError: setTimelineError,\n    rev: params.rev,\n    since: params.since,\n  })\n\n  const onOlderRevision = useTimelineSelector(store, (state) => state.onOlderRevision)\n  const revTime = useTimelineSelector(store, (state) => state.revTime)\n  const sinceAttributes = useTimelineSelector(store, (state) => state.sinceAttributes)\n  const timelineDisplayed = useTimelineSelector(store, (state) => state.timelineDisplayed)\n  const timelineReady = useTimelineSelector(store, (state) => state.timelineReady)\n  const isPristine = useTimelineSelector(store, (state) => state.isPristine)\n  const lastNonDeletedRevId = useTimelineSelector(store, (state) => state.lastNonDeletedRevId)\n\n  const historyStoreProps = useMemo(\n    () => ({\n      store,\n      error: timelineError,\n      revisionId: revTime?.id || null,\n      onOlderRevision: onOlderRevision,\n      revisionDocument: timelineDisplayed as SanityDocument | null,\n      sinceDocument: sinceAttributes as SanityDocument | null,\n      ready: timelineReady,\n      isPristine: Boolean(isPristine),\n      lastNonDeletedRevId,\n    }),\n    [\n      store,\n      timelineError,\n      revTime?.id,\n      onOlderRevision,\n      timelineDisplayed,\n      sinceAttributes,\n      timelineReady,\n      isPristine,\n      lastNonDeletedRevId,\n    ],\n  )\n  return <DocumentPaneProvider {...props} historyStore={historyStoreProps} />\n}\n","import {memo} from 'react'\nimport {useSource} from 'sanity'\n\nimport {DocumentEventsPane} from './DocumentEventsPane'\nimport {DocumentPaneWithLegacyTimelineStore} from './DocumentPaneLegacyTimeline'\nimport {type DocumentPaneProviderProps} from './types'\n\n/**\n * @internal\n */\nexport const DocumentPaneProviderWrapper = memo((props: DocumentPaneProviderProps) => {\n  const source = useSource()\n  if (source.beta?.eventsAPI?.documents) {\n    return <DocumentEventsPane {...props} />\n  }\n  return <DocumentPaneWithLegacyTimelineStore {...props} />\n})\nDocumentPaneProviderWrapper.displayName = 'Memo(DocumentPaneProviderWrapper)'\n","import {useEffect, useRef} from 'react'\nimport {usePerspective} from 'sanity'\nimport {useEffectEvent} from 'use-effect-event'\n\nimport {usePaneRouter} from '../../components'\nimport {EMPTY_PARAMS} from './constants'\n\n/**\n * This hooks takes care of resetting the history related params when the perspective changes.\n * It needs to be placed in a stable component, like the `DocumentPane`, which won't be unmounted when the perspective changes.\n */\nexport function useResetHistoryParams() {\n  const {params = EMPTY_PARAMS, setParams} = usePaneRouter()\n\n  const {selectedPerspectiveName} = usePerspective()\n  const isMounted = useRef(false)\n\n  const updateHistoryParams = useEffectEvent((_perspective?: string) => {\n    // Check if any of the history related params are set, and reset them, don't unnecessarily update the params\n    const PARAMS_TO_UPDATE = ['since', 'historyVersion', 'rev', 'preserveRev']\n    const shouldUpdateParams = PARAMS_TO_UPDATE.some((param) => params[param])\n    if (!shouldUpdateParams) return\n\n    setParams({\n      ...params,\n      // Reset the history related params when the perspective changes, as they don't make sense\n      // in the context of the new perspective - preserveRev is used when setting draft revision.\n      rev: params.preserveRev === 'true' ? params.rev : undefined,\n      preserveRev: undefined,\n      since: undefined,\n      historyVersion: undefined,\n    })\n  })\n  useEffect(() => {\n    // Skip the first run to avoid resetting the params on initial load\n    if (isMounted.current) {\n      updateHistoryParams(selectedPerspectiveName)\n    }\n  }, [selectedPerspectiveName])\n\n  useEffect(() => {\n    isMounted.current = true\n    return () => {\n      isMounted.current = false\n    }\n  }, [])\n}\n","import {type Path} from '@sanity/types'\nimport {Stack, Text} from '@sanity/ui'\nimport {fromString as pathFromString} from '@sanity/util/paths'\nimport {memo, useMemo} from 'react'\nimport {\n  CopyPasteProvider,\n  ReferenceInputOptionsProvider,\n  SourceProvider,\n  Translate,\n  useDocumentType,\n  usePerspective,\n  useSource,\n  useTemplatePermissions,\n  useTemplates,\n  useTranslation,\n} from 'sanity'\n\nimport {usePaneRouter} from '../../components'\nimport {DiffViewDocumentLayout} from '../../diffView/plugin/DiffViewDocumentLayout'\nimport {structureLocaleNamespace} from '../../i18n'\nimport {type DocumentPaneNode} from '../../types'\nimport {ErrorPane} from '../error'\nimport {LoadingPane} from '../loading'\nimport {CommentsWrapper} from './comments'\nimport {useDocumentLayoutComponent} from './document-layout'\nimport {DocumentPaneProviderWrapper} from './DocumentPaneProviderWrapper'\nimport {type DocumentPaneProviderProps} from './types'\nimport {useResetHistoryParams} from './useResetHistoryParams'\n\ntype DocumentPaneOptions = DocumentPaneNode['options']\n\n/**\n * @internal\n */\nexport const DocumentPane = memo(function DocumentPane(props: DocumentPaneProviderProps) {\n  const {name: parentSourceName} = useSource()\n\n  return (\n    <SourceProvider name={props.pane.source || parentSourceName}>\n      <CopyPasteProvider>\n        <DocumentPaneInner {...props} />\n      </CopyPasteProvider>\n    </SourceProvider>\n  )\n})\n\nfunction DocumentPaneInner(props: DocumentPaneProviderProps) {\n  const {pane, paneKey} = props\n  const {resolveNewDocumentOptions} = useSource().document\n  const {selectedPerspectiveName} = usePerspective()\n  const paneRouter = usePaneRouter()\n  const options = usePaneOptions(pane.options, paneRouter.params)\n  const {documentType, isLoaded: isDocumentLoaded} = useDocumentType(options.id, options.type)\n  useResetHistoryParams()\n  const DocumentLayout = useDocumentLayoutComponent()\n\n  // The templates that should be creatable from inside this document pane.\n  // For example, from the \"Create new\" menu in reference inputs.\n  const templateItems = useMemo(() => {\n    return resolveNewDocumentOptions({\n      type: 'document',\n      documentId: options.id,\n      schemaType: options.type,\n    })\n  }, [options.id, options.type, resolveNewDocumentOptions])\n\n  const [templatePermissions, isTemplatePermissionsLoading] = useTemplatePermissions({\n    templateItems,\n  })\n  const isLoaded = isDocumentLoaded && !isTemplatePermissionsLoading\n\n  const providerProps = useMemo(() => {\n    return isLoaded && documentType && options.type !== documentType\n      ? mergeDocumentType(props, options, documentType)\n      : props\n  }, [props, documentType, isLoaded, options])\n\n  const {ReferenceChildLink, handleEditReference, groupIndex, routerPanesState} = paneRouter\n  const childParams = routerPanesState[groupIndex + 1]?.[0].params || {}\n  const routerPanesStateLength = routerPanesState.length\n  const {parentRefPath} = childParams\n\n  const activePath: {path: Path; state: 'selected' | 'pressed' | 'none'} = useMemo(() => {\n    return parentRefPath\n      ? {\n          path: pathFromString(parentRefPath),\n          state:\n            groupIndex >= routerPanesStateLength - 1\n              ? 'none'\n              : groupIndex >= routerPanesStateLength - 2\n                ? 'selected'\n                : 'pressed',\n        }\n      : {path: [], state: 'none'}\n  }, [parentRefPath, groupIndex, routerPanesStateLength])\n\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  if (options.type === '*' && !isLoaded) {\n    return (\n      <LoadingPane\n        flex={2.5}\n        minWidth={320}\n        paneKey={paneKey}\n        title={t('panes.document-pane.document-not-found.loading')}\n      />\n    )\n  }\n\n  if (!documentType) {\n    return (\n      <ErrorPane\n        flex={2.5}\n        minWidth={320}\n        paneKey={paneKey}\n        title={t('panes.document-pane.document-not-found.title')}\n      >\n        <Stack space={4}>\n          <Text as=\"p\">\n            <Translate\n              t={t}\n              i18nKey=\"panes.document-pane.document-not-found.text\"\n              values={{id: options.id}}\n              components={{Code: ({children}) => <code>{children}</code>}}\n            />\n          </Text>\n        </Stack>\n      </ErrorPane>\n    )\n  }\n\n  return (\n    <DocumentPaneProviderWrapper\n      // this needs to be here to avoid formState from being re-used across (incompatible) document types\n      // see https://github.com/sanity-io/sanity/discussions/3794 for a description of the problem\n      key={`${documentType}-${options.id}-${selectedPerspectiveName || ''}`}\n      {...providerProps}\n    >\n      {/* NOTE: this is a temporary location for this provider until we */}\n      {/* stabilize the reference input options formally in the form builder */}\n      <ReferenceInputOptionsProvider\n        EditReferenceLinkComponent={ReferenceChildLink}\n        onEditReference={handleEditReference}\n        initialValueTemplateItems={templatePermissions}\n        activePath={activePath}\n      >\n        <DiffViewDocumentLayout documentId={options.id} documentType={options.type}>\n          <CommentsWrapper documentId={options.id} documentType={options.type}>\n            <DocumentLayout documentId={options.id} documentType={options.type} />\n          </CommentsWrapper>\n        </DiffViewDocumentLayout>\n      </ReferenceInputOptionsProvider>\n    </DocumentPaneProviderWrapper>\n  )\n}\n\n/**\n * @internal\n */\nexport function usePaneOptions(\n  options: DocumentPaneOptions,\n  params: Record<string, string | undefined> = {},\n): DocumentPaneOptions {\n  const templates = useTemplates()\n\n  return useMemo(() => {\n    // The document type is provided, so return\n    if (options.type && options.type !== '*') {\n      return options\n    }\n\n    // Attempt to derive document type from the template configuration\n    const templateName = options.template || params.template\n    const template = templateName ? templates.find((t) => t.id === templateName) : undefined\n    const documentType = template?.schemaType\n\n    // No document type was found in a template\n    if (!documentType) {\n      return options\n    }\n\n    // The template provided the document type, so modify the pane’s `options` property\n    return {...options, type: documentType}\n  }, [options, params.template, templates])\n}\n\nfunction mergeDocumentType(\n  props: DocumentPaneProviderProps,\n  options: DocumentPaneOptions,\n  documentType: string,\n): DocumentPaneProviderProps {\n  return {\n    ...props,\n    pane: {\n      ...props.pane,\n      options: {...options, type: documentType},\n    },\n  }\n}\n","import {type ComponentType, type ForwardedRef, forwardRef, useContext, useMemo} from 'react'\nimport {PaneRouterContext} from 'sanity/_singletons'\nimport {StateLink} from 'sanity/router'\n\nimport {type BackLinkProps} from './types'\n\n/**\n * @internal\n */\nexport const BackLink = forwardRef(function BackLink(\n  props: BackLinkProps,\n  ref: ForwardedRef<HTMLAnchorElement>,\n) {\n  const {routerPanesState, groupIndex} = useContext(PaneRouterContext)\n  const panes = useMemo(() => routerPanesState.slice(0, groupIndex), [groupIndex, routerPanesState])\n  const state = useMemo(() => ({panes}), [panes])\n\n  return <StateLink {...props} ref={ref} state={state} />\n}) as ComponentType<BackLinkProps>\n","import {type ForwardedRef, forwardRef, useContext} from 'react'\nimport {PaneRouterContext} from 'sanity/_singletons'\nimport {StateLink} from 'sanity/router'\n\nimport {type ChildLinkProps} from './types'\n\n/**\n * @internal\n */\nexport const ChildLink = forwardRef(function ChildLink(\n  props: ChildLinkProps,\n  ref: ForwardedRef<HTMLAnchorElement>,\n) {\n  const {childId, childPayload, childParameters, ...rest} = props\n  const {routerPanesState, groupIndex} = useContext(PaneRouterContext)\n\n  return (\n    <StateLink\n      {...rest}\n      ref={ref}\n      state={{\n        panes: [\n          ...routerPanesState.slice(0, groupIndex + 1),\n          [{id: childId, params: childParameters, payload: childPayload}],\n        ],\n      }}\n    />\n  )\n})\n","import {type ForwardedRef, forwardRef, type ReactNode, useContext, useMemo} from 'react'\nimport {useUnique} from 'sanity'\nimport {PaneRouterContext} from 'sanity/_singletons'\nimport {StateLink} from 'sanity/router'\n\ninterface ParameterizedLinkProps {\n  params?: Record<string, string>\n  payload?: unknown\n  children?: ReactNode\n}\n\n/**\n * @internal\n */\nexport const ParameterizedLink = forwardRef(function ParameterizedLink(\n  props: ParameterizedLinkProps,\n  ref: ForwardedRef<HTMLAnchorElement>,\n) {\n  const {routerPanesState: currentPanes, groupIndex, siblingIndex} = useContext(PaneRouterContext)\n  const {params, payload, ...rest} = props\n  const nextParams = useUnique(params)\n  const nextPayload = useUnique(payload)\n\n  const nextState = useMemo(() => {\n    const currentGroup = currentPanes[groupIndex]\n    const currentSibling = currentGroup[siblingIndex]\n\n    const nextSibling = {\n      ...currentSibling,\n      params: nextParams ?? currentSibling.params,\n      payload: nextPayload ?? currentSibling.payload,\n    }\n\n    const nextGroup = [\n      ...currentGroup.slice(0, siblingIndex),\n      nextSibling,\n      ...currentGroup.slice(siblingIndex + 1),\n    ]\n\n    const nextPanes = [\n      ...currentPanes.slice(0, groupIndex),\n      nextGroup,\n      ...currentPanes.slice(groupIndex + 1),\n    ]\n\n    return {panes: nextPanes}\n  }, [currentPanes, groupIndex, nextParams, nextPayload, siblingIndex])\n\n  return <StateLink ref={ref} {...rest} state={nextState} />\n})\n","import {toString as pathToString} from '@sanity/util/paths'\nimport {type ForwardedRef, forwardRef} from 'react'\n\nimport {ChildLink} from './ChildLink'\nimport {type ReferenceChildLinkProps} from './types'\n\nexport const ReferenceChildLink = forwardRef(function ReferenceChildLink(\n  {documentId, documentType, parentRefPath, children, template, ...rest}: ReferenceChildLinkProps,\n  ref: ForwardedRef<HTMLAnchorElement>,\n) {\n  return (\n    <ChildLink\n      {...rest}\n      ref={ref}\n      childId={documentId}\n      childPayload={template?.params}\n      childParameters={{\n        type: documentType,\n        parentRefPath: pathToString(parentRefPath),\n        ...(template && {template: template?.id}),\n      }}\n    >\n      {children}\n    </ChildLink>\n  )\n})\n","import {toString as pathToString} from '@sanity/util/paths'\nimport {omit} from 'lodash'\nimport {type ReactNode, useCallback, useMemo} from 'react'\nimport {PaneRouterContext} from 'sanity/_singletons'\nimport {useRouter, useRouterState} from 'sanity/router'\n\nimport {type RouterPaneGroup, type RouterPanes, type RouterPaneSibling} from '../../types'\nimport {usePaneLayout} from '../pane/usePaneLayout'\nimport {BackLink} from './BackLink'\nimport {ChildLink} from './ChildLink'\nimport {ParameterizedLink} from './ParameterizedLink'\nimport {ReferenceChildLink} from './ReferenceChildLink'\nimport {type PaneRouterContextValue} from './types'\n\nconst emptyArray: never[] = []\n\n/**\n * @internal\n */\nexport function PaneRouterProvider(props: {\n  children: ReactNode\n  flatIndex: number\n  index: number\n  params: Record<string, string | undefined>\n  payload: unknown\n  siblingIndex: number\n}) {\n  const {children, flatIndex, index, params, payload, siblingIndex} = props\n  const {navigate, navigateIntent, resolvePathFromState} = useRouter()\n  const routerState = useRouterState()\n  const {panes, expand} = usePaneLayout()\n  const routerPaneGroups: RouterPaneGroup[] = useMemo(\n    () => (routerState?.panes || emptyArray) as RouterPanes,\n    [routerState?.panes],\n  )\n  const lastPane = useMemo(() => panes?.[panes.length - 2], [panes])\n\n  const groupIndex = index - 1\n\n  const createNextRouterState = useCallback(\n    (modifier: (siblings: RouterPaneGroup, item: RouterPaneSibling) => RouterPaneGroup) => {\n      const currentGroup = routerPaneGroups[groupIndex] || []\n      const currentItem = currentGroup[siblingIndex]\n      const nextGroup = modifier(currentGroup, currentItem)\n      const nextPanes = [\n        ...routerPaneGroups.slice(0, groupIndex),\n        nextGroup,\n        ...routerPaneGroups.slice(groupIndex + 1),\n      ]\n      const nextRouterState = {...routerState, panes: nextPanes}\n\n      return nextRouterState\n    },\n    [groupIndex, routerPaneGroups, routerState, siblingIndex],\n  )\n\n  const modifyCurrentGroup = useCallback(\n    (modifier: (siblings: RouterPaneGroup, item: RouterPaneSibling) => RouterPaneGroup) => {\n      const nextRouterState = createNextRouterState(modifier)\n      setTimeout(() => navigate(nextRouterState), 0)\n      return nextRouterState\n    },\n    [createNextRouterState, navigate],\n  )\n\n  const createPathWithParams: PaneRouterContextValue['createPathWithParams'] = useCallback(\n    (nextParams) => {\n      const nextRouterState = createNextRouterState((siblings, item) => [\n        ...siblings.slice(0, siblingIndex),\n        {...item, params: nextParams},\n        ...siblings.slice(siblingIndex + 1),\n      ])\n\n      return resolvePathFromState(nextRouterState)\n    },\n    [createNextRouterState, resolvePathFromState, siblingIndex],\n  )\n\n  const setPayload: PaneRouterContextValue['setPayload'] = useCallback(\n    (nextPayload) => {\n      modifyCurrentGroup((siblings, item) => [\n        ...siblings.slice(0, siblingIndex),\n        {...item, payload: nextPayload},\n        ...siblings.slice(siblingIndex + 1),\n      ])\n    },\n    [modifyCurrentGroup, siblingIndex],\n  )\n\n  const setParams: PaneRouterContextValue['setParams'] = useCallback(\n    (nextParams) => {\n      modifyCurrentGroup((siblings, item) => [\n        ...siblings.slice(0, siblingIndex),\n        {...item, params: nextParams},\n        ...siblings.slice(siblingIndex + 1),\n      ])\n    },\n    [modifyCurrentGroup, siblingIndex],\n  )\n\n  const handleEditReference: PaneRouterContextValue['handleEditReference'] = useCallback(\n    ({id, parentRefPath, type, template, version}) => {\n      navigate({\n        panes: [\n          ...routerPaneGroups.slice(0, groupIndex + 1),\n          [\n            {\n              id,\n              params: {\n                template: template.id,\n                parentRefPath: pathToString(parentRefPath),\n                type,\n                version,\n              },\n              payload: template.params,\n            },\n          ],\n        ],\n      })\n    },\n    [groupIndex, navigate, routerPaneGroups],\n  )\n\n  const ctx: PaneRouterContextValue = useMemo(\n    () => ({\n      // Zero-based index (position) of pane, visually\n      index: flatIndex,\n\n      // Zero-based index of pane group (within URL structure)\n      groupIndex,\n\n      // Zero-based index of pane within sibling group\n      siblingIndex,\n\n      // Payload of the current pane\n      payload,\n\n      // Params of the current pane\n      params,\n\n      // Whether or not the pane has any siblings (within the same group)\n      hasGroupSiblings: routerPaneGroups[groupIndex]\n        ? routerPaneGroups[groupIndex].length > 1\n        : false,\n\n      // The length of the current group\n      groupLength: routerPaneGroups[groupIndex] ? routerPaneGroups[groupIndex].length : 0,\n\n      // Current router state for the \"panes\" property\n      routerPanesState: routerPaneGroups,\n\n      // Curried StateLink that passes the correct state automatically\n      ChildLink,\n\n      // Curried StateLink that pops off the last pane group\n      // Only pass if this is not the first pane\n      BackLink: flatIndex ? BackLink : undefined,\n\n      // A specialized `ChildLink` that takes in the needed props to open a\n      // referenced document to the right\n      ReferenceChildLink,\n\n      // Similar to `ReferenceChildLink` expect without the wrapping component\n      handleEditReference,\n\n      // Curried StateLink that passed the correct state, but merges params/payload\n      ParameterizedLink,\n\n      // Replaces the current pane with a new one\n      replaceCurrent: (opts = {}): void => {\n        modifyCurrentGroup(() => [\n          {id: opts.id || '', payload: opts.payload, params: opts.params || {}},\n        ])\n      },\n\n      // Removes the current pane from the group\n      closeCurrent: (): void => {\n        modifyCurrentGroup((siblings, item) =>\n          siblings.length > 1 ? siblings.filter((sibling) => sibling !== item) : siblings,\n        )\n      },\n\n      // Removes all panes to the right including current\n      closeCurrentAndAfter: (expandLast = true): void => {\n        if (expandLast && lastPane) {\n          expand(lastPane.element)\n        }\n        navigate({\n          panes: routerPaneGroups.slice(0, groupIndex),\n        })\n      },\n\n      // Duplicate the current pane, with optional overrides for payload, parameters\n      duplicateCurrent: (options): void => {\n        modifyCurrentGroup((siblings, item) => {\n          const duplicatedItem = {\n            ...item,\n            payload: options?.payload || item.payload,\n            params: options?.params || item.params,\n          }\n\n          return [\n            ...siblings.slice(0, siblingIndex),\n            duplicatedItem,\n            ...siblings.slice(siblingIndex),\n          ]\n        })\n      },\n\n      // Set the view for the current pane\n      setView: (viewId) => {\n        const restParams = omit(params, 'view')\n        return setParams(viewId ? {...restParams, view: viewId} : restParams)\n      },\n\n      // Set the parameters for the current pane\n      setParams,\n\n      // Set the payload for the current pane\n      setPayload,\n\n      // A function that returns a path with the given parameters\n      createPathWithParams,\n\n      // Proxied navigation to a given intent. Consider just exposing `router` instead?\n      navigateIntent,\n    }),\n    [\n      flatIndex,\n      groupIndex,\n      siblingIndex,\n      payload,\n      params,\n      routerPaneGroups,\n      handleEditReference,\n      setParams,\n      setPayload,\n      createPathWithParams,\n      navigateIntent,\n      modifyCurrentGroup,\n      lastPane,\n      navigate,\n      expand,\n    ],\n  )\n\n  return <PaneRouterContext.Provider value={ctx}>{children}</PaneRouterContext.Provider>\n}\n","import {Box, Text} from '@sanity/ui'\nimport {isRecord, Translate, useTranslation} from 'sanity'\n\nimport {Pane, PaneContent, PaneHeader} from '../../components/pane'\nimport {structureLocaleNamespace} from '../../i18n'\n\ninterface UnknownPaneProps {\n  isSelected: boolean\n  pane: unknown\n  paneKey: string\n}\n\n/**\n * @internal\n */\nexport function UnknownPane(props: UnknownPaneProps) {\n  const {isSelected, pane, paneKey} = props\n  const type = (isRecord(pane) && pane.type) || null\n  const {t} = useTranslation(structureLocaleNamespace)\n  return (\n    <Pane id={paneKey} selected={isSelected}>\n      <PaneHeader title={t('panes.unknown-pane-type.title')} />\n      <PaneContent>\n        <Box padding={4}>\n          {typeof type === 'string' ? (\n            <Text as=\"p\" muted>\n              <Translate\n                t={t}\n                i18nKey=\"panes.unknown-pane-type.unknown-type.text\"\n                values={{type}}\n              />\n            </Text>\n          ) : (\n            <Text as=\"p\" muted>\n              <Translate t={t} i18nKey=\"panes.unknown-pane-type.missing-type.text\" />\n            </Text>\n          )}\n        </Box>\n      </PaneContent>\n    </Pane>\n  )\n}\n","import {isEqual} from 'lodash'\nimport {lazy, memo, Suspense} from 'react'\n\nimport {PaneRouterProvider} from '../components/paneRouter'\nimport {type PaneNode} from '../types'\nimport {LoadingPane} from './loading'\nimport {UnknownPane} from './unknown'\n\ninterface StructureToolPaneProps {\n  active: boolean\n  childItemId: string | null\n  groupIndex: number\n  index: number\n  itemId: string\n  pane: PaneNode\n  paneKey: string\n  params: Record<string, string | undefined> & {perspective?: string}\n  payload: unknown\n  path: string\n  selected: boolean\n  siblingIndex: number\n}\n\n// TODO: audit this creates separate chunks\nconst paneMap = {\n  component: lazy(() => import('./userComponent')),\n  document: lazy(() => import('./document/pane')),\n  documentList: lazy(() => import('./documentList/pane')),\n  list: lazy(() => import('./list')),\n}\n\n/**\n * NOTE: The same pane might appear multiple times (split pane), so use index as tiebreaker\n *\n * @internal\n */\nexport const StructureToolPane = memo(\n  function StructureToolPane(props: StructureToolPaneProps) {\n    const {\n      active,\n      childItemId,\n      groupIndex,\n      index,\n      itemId,\n      pane,\n      paneKey,\n      params,\n      payload,\n      path,\n      selected,\n      siblingIndex,\n    } = props\n\n    const PaneComponent = paneMap[pane.type] || UnknownPane\n\n    return (\n      <PaneRouterProvider\n        flatIndex={index}\n        index={groupIndex}\n        params={params}\n        payload={payload}\n        siblingIndex={siblingIndex}\n      >\n        <Suspense fallback={<LoadingPane paneKey={paneKey} path={path} selected={selected} />}>\n          <PaneComponent\n            childItemId={childItemId || ''}\n            index={index}\n            itemId={itemId}\n            isActive={active}\n            isSelected={selected}\n            paneKey={paneKey}\n            // @ts-expect-error TS doesn't know how to handle this intersection\n            pane={pane}\n          />\n        </Suspense>\n      </PaneRouterProvider>\n    )\n  },\n  (\n    {params: prevParams = {}, payload: prevPayload = null, ...prev},\n    {params: nextParams = {}, payload: nextPayload = null, ...next},\n  ) => {\n    // deeply compare these objects (it's okay, they're small)\n    if (!isEqual(prevParams, nextParams)) return false\n    if (!isEqual(prevPayload, nextPayload)) return false\n\n    const keys = new Set([...Object.keys(prev), ...Object.keys(next)]) as Set<\n      keyof typeof next | keyof typeof prev\n    >\n\n    // then shallow equal the rest\n    for (const key of keys) {\n      if (prev[key] !== next[key]) return false\n    }\n\n    return true\n  },\n)\n","import {type SanityDocumentLike} from '@sanity/types'\nimport {useSchema, useTranslation} from 'sanity'\n\nimport {structureLocaleNamespace} from '../i18n'\nimport {useDocumentTitle} from '../panes'\n\nexport interface DocTitleProps {\n  document: SanityDocumentLike\n}\n\nexport function DocTitle(props: DocTitleProps) {\n  const {document: documentValue} = props\n  const schema = useSchema()\n  const schemaType = schema.get(documentValue._type)\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {title} = useDocumentTitle()\n\n  if (!schemaType) {\n    return <code>{t('doc-title.unknown-schema-type.text', {schemaType: documentValue._type})}</code>\n  }\n\n  return (\n    <>\n      {title || (\n        <span style={{color: 'var(--card-muted-fg-color)'}}>{t('doc-title.fallback.text')}</span>\n      )}\n    </>\n  )\n}\n","import {InfoOutlineIcon} from '@sanity/icons'\nimport {Box, Flex, Inline, rem, Text} from '@sanity/ui'\nimport {useTranslation} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Tooltip} from '../../../ui-components'\nimport {structureLocaleNamespace} from '../../i18n'\n\nexport const ChevronWrapper = styled(Box)`\n  margin-left: auto;\n`\n\nexport const CrossDatasetReferencesDetails = styled.details`\n  flex: none;\n\n  &[open] ${ChevronWrapper} {\n    transform: rotate(180deg);\n  }\n`\n\nexport const CrossDatasetReferencesSummary = styled.summary`\n  list-style: none;\n\n  &::-webkit-details-marker {\n    display: none;\n  }\n`\n\nexport const Table = styled.table`\n  width: 100%;\n  text-align: left;\n  padding: 0 ${({theme}) => rem(theme.sanity.space[2])};\n  border-collapse: collapse;\n\n  th {\n    padding: ${({theme}) => rem(theme.sanity.space[1])};\n  }\n\n  td {\n    padding: 0 ${({theme}) => rem(theme.sanity.space[1])};\n  }\n\n  tr > *:last-child {\n    text-align: right;\n  }\n`\n\nexport const DocumentIdFlex = styled(Flex)`\n  min-height: 33px;\n`\n\nexport const OtherReferenceCount = (props: {totalCount: number; references: unknown[]}) => {\n  const {t} = useTranslation(structureLocaleNamespace)\n  const difference = props.totalCount - props.references.length\n\n  if (!difference) return null\n\n  return (\n    <Box padding={2}>\n      <Inline space={2}>\n        <Text size={1} muted>\n          {t('confirm-delete-dialog.other-reference-count.title', {count: difference})}\n        </Text>\n\n        <Tooltip\n          portal\n          placement=\"top\"\n          content={t('confirm-delete-dialog.other-reference-count.tooltip')}\n        >\n          <Text size={1} muted>\n            <InfoOutlineIcon />\n          </Text>\n        </Tooltip>\n      </Inline>\n    </Box>\n  )\n}\n","import {type SanityDocument, type SchemaType} from '@sanity/types'\nimport {Flex} from '@sanity/ui'\nimport {type ComponentType, useMemo} from 'react'\nimport {useObservable} from 'react-rx'\nimport {\n  type DocumentPresence,\n  DocumentPreviewPresence,\n  type DocumentPreviewStore,\n  DocumentStatus,\n  DocumentStatusIndicator,\n  type GeneralPreviewLayoutKey,\n  getPreviewStateObservable,\n  getPreviewValueWithFallback,\n  SanityDefaultPreview,\n  useDocumentVersionInfo,\n  usePerspective,\n} from 'sanity'\n\nimport {TooltipDelayGroupProvider} from '../../../ui-components'\n\nexport interface PaneItemPreviewProps {\n  documentPreviewStore: DocumentPreviewStore\n  icon: ComponentType | false\n  layout: GeneralPreviewLayoutKey\n  presence?: DocumentPresence[]\n  schemaType: SchemaType\n  value: SanityDocument\n}\n\n/**\n * Preview component for _documents_ rendered in structure panes.\n *\n * Note that non-document previews are not handled by this component,\n * despite being pane items! Non-document previews bypass this entirely\n * and are rendered by `<SanityDefaultPreview>`.\n */\nexport function PaneItemPreview(props: PaneItemPreviewProps) {\n  const {icon, layout, presence, schemaType, value} = props\n\n  const versionsInfo = useDocumentVersionInfo(value._id)\n\n  const {perspectiveStack} = usePerspective()\n  const previewStateObservable = useMemo(() => {\n    return getPreviewStateObservable(\n      props.documentPreviewStore,\n      schemaType,\n      value._id,\n      perspectiveStack,\n    )\n  }, [props.documentPreviewStore, schemaType, value._id, perspectiveStack])\n\n  const {\n    snapshot,\n    original,\n    isLoading: previewIsLoading,\n  } = useObservable(previewStateObservable, {\n    snapshot: null,\n    isLoading: true,\n    original: null,\n  })\n\n  const isLoading = previewIsLoading\n\n  const status = isLoading ? null : (\n    <TooltipDelayGroupProvider>\n      <Flex align=\"center\" gap={3}>\n        {presence && presence.length > 0 && <DocumentPreviewPresence presence={presence} />}\n        <DocumentStatusIndicator\n          draft={versionsInfo.draft}\n          published={versionsInfo.published}\n          versions={versionsInfo.versions}\n        />\n      </Flex>\n    </TooltipDelayGroupProvider>\n  )\n\n  const tooltip = (\n    <DocumentStatus\n      draft={versionsInfo.draft}\n      published={versionsInfo.published}\n      versions={versionsInfo.versions}\n    />\n  )\n\n  return (\n    <SanityDefaultPreview\n      {...getPreviewValueWithFallback({snapshot, original, fallback: value})}\n      isPlaceholder={isLoading}\n      icon={icon}\n      layout={layout}\n      status={status}\n      tooltip={tooltip}\n    />\n  )\n}\n","import {type SanityDocument, type SchemaType} from '@sanity/types'\nimport {type ReactNode, useCallback} from 'react'\nimport {\n  type FIXME,\n  getPublishedId,\n  PreviewCard,\n  useDocumentPresence,\n  useDocumentPreviewStore,\n} from 'sanity'\n\nimport {PaneItemPreview} from '../paneItem/PaneItemPreview'\nimport {usePaneRouter} from '../paneRouter'\n\nconst EMPTY_ARRAY: [] = []\n\ninterface ReferencePreviewLinkProps {\n  onClick?: () => void\n  type: SchemaType & {icon?: any}\n  value: SanityDocument\n}\n\nexport function ReferencePreviewLink(props: ReferencePreviewLinkProps) {\n  const {onClick, type, value} = props\n  const publishedId = getPublishedId(value?._id)\n  const documentPresence = useDocumentPresence(publishedId)\n  const documentPreviewStore = useDocumentPreviewStore()\n  const {ReferenceChildLink} = usePaneRouter()\n\n  const Link = useCallback(\n    function LinkComponent(linkProps: {children: ReactNode}) {\n      return (\n        <ReferenceChildLink\n          documentId={value?._id}\n          documentType={type?.name}\n          parentRefPath={EMPTY_ARRAY}\n          {...linkProps}\n        />\n      )\n    },\n    [ReferenceChildLink, type?.name, value?._id],\n  )\n\n  return (\n    <PreviewCard __unstable_focusRing as={Link as FIXME} data-as=\"a\" onClick={onClick} radius={2}>\n      <PaneItemPreview\n        documentPreviewStore={documentPreviewStore}\n        icon={type?.icon}\n        layout=\"compact\"\n        presence={documentPresence?.length > 0 ? documentPresence : EMPTY_ARRAY}\n        schemaType={type}\n        value={value}\n      />\n    </PreviewCard>\n  )\n}\n","import {\n  ChevronDownIcon,\n  CopyIcon,\n  DocumentsIcon,\n  UnknownIcon,\n  WarningOutlineIcon,\n} from '@sanity/icons'\nimport {Box, Card, Flex, Stack, Text, useToast} from '@sanity/ui'\nimport {useCallback} from 'react'\nimport {SanityDefaultPreview, Translate, useSchema, useTranslation} from 'sanity'\n\nimport {Button} from '../../../ui-components'\nimport {structureLocaleNamespace} from '../../i18n'\nimport {\n  ChevronWrapper,\n  CrossDatasetReferencesDetails,\n  CrossDatasetReferencesSummary,\n  DocumentIdFlex,\n  OtherReferenceCount,\n  Table,\n} from './ConfirmDeleteDialogBody.styles'\nimport {ReferencePreviewLink} from './ReferencePreviewLink'\nimport {type ReferringDocuments} from './useReferringDocuments'\n\ntype DeletionConfirmationDialogBodyProps = Required<ReferringDocuments> & {\n  documentTitle: React.ReactNode\n  action: 'unpublish' | 'delete'\n  onReferenceLinkClick?: () => void\n}\n\n/**\n * The inner part of the `ConfirmDeleteDialog`. This is ran when both the\n * `crossDatasetReferences` and `internalReferences` are loaded.\n */\nexport function ConfirmDeleteDialogBody({\n  crossDatasetReferences,\n  internalReferences,\n  documentTitle,\n  totalCount,\n  action,\n  datasetNames,\n  hasUnknownDatasetNames,\n  onReferenceLinkClick,\n}: DeletionConfirmationDialogBodyProps) {\n  const schema = useSchema()\n  const toast = useToast()\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const renderPreviewItem = useCallback(\n    (item: any) => {\n      const type = schema.get(item._type)\n      if (type) {\n        return <ReferencePreviewLink type={type} value={item} onClick={onReferenceLinkClick} />\n      }\n\n      return (\n        // Padding added to match the ReferencePreviewLink styling\n        <Box padding={2}>\n          <SanityDefaultPreview\n            icon={UnknownIcon}\n            title={t('confirm-delete-dialog.preview-item.preview-unavailable.title')}\n            subtitle={t('confirm-delete-dialog.preview-item.preview-unavailable.subtitle', {\n              documentId: item._id,\n            })}\n            layout=\"default\"\n          />\n        </Box>\n      )\n    },\n    [schema, t, onReferenceLinkClick],\n  )\n\n  if (internalReferences?.totalCount === 0 && crossDatasetReferences?.totalCount === 0) {\n    return (\n      <Text as=\"p\" size={1}>\n        <Translate\n          t={t}\n          i18nKey=\"confirm-delete-dialog.confirmation.text\"\n          context={action}\n          components={{DocumentTitle: () => <strong>{documentTitle}</strong>}}\n        />\n      </Text>\n    )\n  }\n\n  // We do some extra checks to handle cases where you have unavailable dataset\n  // name(s) due to permissions, both alone and in combination with known datasets\n\n  // This normalizes one or more undefined dataset names to the catch-all `unavailable`\n  const normalizedDatasetNames = [\n    ...datasetNames,\n    ...(hasUnknownDatasetNames ? ['unavailable'] : []),\n  ]\n\n  const datasetSubtitle = t('confirm-delete-dialog.cdr-summary.subtitle', {\n    count: normalizedDatasetNames.length,\n    datasets: normalizedDatasetNames.join(', '),\n    context: hasUnknownDatasetNames && normalizedDatasetNames.length ? 'unavailable' : '',\n  })\n\n  return (\n    <Flex direction=\"column\" gap={4}>\n      <Card padding={3} radius={2} tone=\"caution\" flex=\"none\">\n        <Flex>\n          <Text aria-hidden=\"true\" size={1}>\n            <WarningOutlineIcon />\n          </Text>\n          <Box flex={1} marginLeft={3}>\n            <Text size={1}>\n              <Translate\n                i18nKey=\"confirm-delete-dialog.referring-document-count.text\"\n                components={{DocumentTitle: () => documentTitle}}\n                t={t}\n                values={{count: totalCount}}\n              />\n            </Text>\n          </Box>\n        </Flex>\n      </Card>\n      <Box flex=\"none\">\n        <Text size={1}>\n          <Translate\n            i18nKey=\"confirm-delete-dialog.referring-documents-descriptor.text\"\n            t={t}\n            context={action}\n            components={{DocumentTitle: () => documentTitle}}\n          />\n        </Text>\n      </Box>\n      <Card radius={2} shadow={1} flex=\"auto\" padding={2}>\n        <Flex direction=\"column\">\n          {internalReferences.totalCount > 0 && (\n            <Stack as=\"ul\" marginBottom={2} space={2} data-testid=\"internal-references\">\n              {internalReferences?.references.map((item) => (\n                <Box key={item._id} as=\"li\">\n                  {renderPreviewItem(item)}\n                </Box>\n              ))}\n\n              {internalReferences.totalCount > internalReferences.references.length && (\n                <Box as=\"li\" padding={3}>\n                  <OtherReferenceCount {...internalReferences} />\n                </Box>\n              )}\n            </Stack>\n          )}\n\n          {crossDatasetReferences.totalCount > 0 && (\n            <CrossDatasetReferencesDetails\n              data-testid=\"cross-dataset-references\"\n              style={{\n                // only add the border if needed\n                borderTop:\n                  internalReferences.totalCount > 0\n                    ? '1px solid var(--card-shadow-outline-color)'\n                    : undefined,\n              }}\n            >\n              <CrossDatasetReferencesSummary>\n                <Card\n                  as=\"a\"\n                  marginTop={internalReferences.totalCount > 0 ? 2 : 0}\n                  radius={2}\n                  shadow={1}\n                  paddingY={1}\n                >\n                  <Flex align=\"center\" gap={3} paddingX={3} paddingY={1}>\n                    <Text size={1}>\n                      <DocumentsIcon />\n                    </Text>\n                    <Stack space={2}>\n                      <Text textOverflow=\"ellipsis\" size={1}>\n                        {t('confirm-delete-dialog.cdr-summary.title', {\n                          count: normalizedDatasetNames.length,\n                          documentCount: t('confirm-delete-dialog.cdr-summary.document-count', {\n                            count: crossDatasetReferences.totalCount,\n                          }),\n                        })}\n                      </Text>\n                      <Text title={datasetSubtitle} textOverflow=\"ellipsis\" size={1} muted>\n                        {datasetSubtitle}\n                      </Text>\n                    </Stack>\n                    <ChevronWrapper>\n                      <Text muted size={1}>\n                        <ChevronDownIcon />\n                      </Text>\n                    </ChevronWrapper>\n                  </Flex>\n                </Card>\n              </CrossDatasetReferencesSummary>\n\n              <Box overflow=\"auto\" paddingTop={2}>\n                <Table>\n                  <thead>\n                    <tr>\n                      <th>\n                        <Text muted size={1} style={{minWidth: '5rem'}} weight=\"medium\">\n                          {t('confirm-delete-dialog.cdr-table.project-id.label')}\n                        </Text>\n                      </th>\n                      <th>\n                        <Text muted size={1} weight=\"medium\">\n                          {t('confirm-delete-dialog.cdr-table.dataset.label')}\n                        </Text>\n                      </th>\n                      <th>\n                        <Text muted size={1} weight=\"medium\">\n                          {t('confirm-delete-dialog.cdr-table.document-id.label')}\n                        </Text>\n                      </th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {crossDatasetReferences.references\n                      .filter((reference): reference is Required<typeof reference> => {\n                        return 'projectId' in reference\n                      })\n                      .map(({projectId, datasetName, documentId}, index) => (\n                        <tr key={`${documentId}-${index}`}>\n                          <td>\n                            <Text size={1}>{projectId}</Text>\n                          </td>\n                          <td>\n                            <Text size={1}>{datasetName || 'unavailable'}</Text>\n                          </td>\n                          <td>\n                            <DocumentIdFlex align=\"center\" gap={2} justify=\"flex-end\">\n                              <Text textOverflow=\"ellipsis\" size={1}>\n                                {documentId || 'unavailable'}\n                              </Text>\n                              {documentId && (\n                                <Button\n                                  mode=\"bleed\"\n                                  icon={CopyIcon}\n                                  tooltipProps={{\n                                    content: t(\n                                      'confirm-delete-dialog.cdr-table.copy-id-button.tooltip',\n                                    ),\n                                  }}\n                                  // eslint-disable-next-line react/jsx-no-bind\n                                  onClick={() => {\n                                    navigator.clipboard.writeText(documentId).catch(() => {\n                                      toast.push({\n                                        status: 'error',\n                                        title: t(\n                                          'confirm-delete-dialog.cdr-table.id-copied-toast.title-failed',\n                                        ),\n                                      })\n                                    })\n                                  }}\n                                />\n                              )}\n                            </DocumentIdFlex>\n                          </td>\n                        </tr>\n                      ))}\n                  </tbody>\n                </Table>\n\n                <OtherReferenceCount {...crossDatasetReferences} />\n              </Box>\n            </CrossDatasetReferencesDetails>\n          )}\n        </Flex>\n      </Card>\n      <Box flex=\"none\">\n        <Text size={1}>\n          <Translate\n            i18nKey=\"confirm-delete-dialog.referential-integrity-disclaimer.text\"\n            t={t}\n            context={action}\n            components={{DocumentTitle: () => documentTitle}}\n          />\n        </Text>\n      </Box>\n    </Flex>\n  )\n}\n","import {type ClientError, type SanityClient} from '@sanity/client'\nimport {useMemo} from 'react'\nimport {EMPTY, fromEvent, type Observable, of, timer} from 'rxjs'\nimport {\n  catchError,\n  distinctUntilChanged,\n  map,\n  shareReplay,\n  startWith,\n  switchMap,\n} from 'rxjs/operators'\nimport {\n  type AvailabilityResponse,\n  createHookFromObservableFactory,\n  DEFAULT_STUDIO_CLIENT_OPTIONS,\n  type DocumentStore,\n  getDraftId,\n  getPublishedId,\n  useClient,\n  useDocumentStore,\n} from 'sanity'\n\n// this is used in place of `instanceof` so the matching can be more robust and\n// won't have any issues with dual packages etc\n// https://nodejs.org/api/packages.html#dual-package-hazard\nfunction isClientError(e: unknown): e is ClientError {\n  if (typeof e !== 'object') return false\n  if (!e) return false\n  return 'statusCode' in e && 'response' in e\n}\n\nconst POLL_INTERVAL = 5000\n\n// only fetches when the document is visible\nlet visiblePoll$: Observable<number>\nconst getVisiblePoll$ = () => {\n  if (!visiblePoll$) {\n    visiblePoll$ = fromEvent(document, 'visibilitychange').pipe(\n      // add empty emission to have this fire on creation\n      startWith(null),\n      map(() => document.visibilityState === 'visible'),\n      distinctUntilChanged(),\n      switchMap((visible) =>\n        visible\n          ? // using timer instead of interval since timer will emit on creation\n            timer(0, POLL_INTERVAL)\n          : EMPTY,\n      ),\n      shareReplay({refCount: true, bufferSize: 1}),\n    )\n  }\n  return visiblePoll$\n}\n\nexport type ReferringDocuments = {\n  isLoading: boolean\n  totalCount: number\n  projectIds: string[]\n  datasetNames: string[]\n  hasUnknownDatasetNames: boolean\n  internalReferences?: {\n    totalCount: number\n    references: Array<{_id: string; _type: string}>\n  }\n  crossDatasetReferences?: {\n    totalCount: number\n    references: Array<{\n      /**\n       * The project ID of the document that is currently referencing the subject\n       * document. Unlike `documentId` and `datasetName`, this should always be\n       * defined.\n       */\n      projectId: string\n      /**\n       * The ID of the document that is currently referencing the subject\n       * document. This will be omitted if there is no access to the current\n       * project and dataset pair (e.g. if no `sanity-project-token` were\n       * configured)\n       */\n      documentId?: string\n      /**\n       * The dataset name that is currently referencing the subject document.\n       * This will be omitted if there is no access to the current project and\n       * dataset pair (e.g. if no `sanity-project-token` were configured)\n       */\n      datasetName?: string\n    }>\n  }\n}\n\nfunction getDocumentExistence(\n  documentId: string,\n  {versionedClient}: {versionedClient: SanityClient},\n): Observable<string | undefined> {\n  const draftId = getDraftId(documentId)\n  const publishedId = getPublishedId(documentId)\n  const requestOptions = {\n    uri: versionedClient.getDataUrl('doc', `${draftId},${publishedId}`),\n    json: true,\n    query: {excludeContent: 'true'},\n    tag: 'use-referring-documents.document-existence',\n  }\n  return versionedClient.observable.request<AvailabilityResponse>(requestOptions).pipe(\n    map(({omitted}) => {\n      const nonExistant = omitted.filter((doc) => doc.reason === 'existence')\n      if (nonExistant.length === 2) {\n        // None of the documents exist\n        return undefined\n      }\n\n      if (nonExistant.length === 0) {\n        // Both exist, so use the published one\n        return publishedId\n      }\n\n      // If the draft does not exist, use the published ID, and vice versa\n      return nonExistant.some((doc) => doc.id === draftId) ? publishedId : draftId\n    }),\n  )\n}\n\n/**\n * fetches the cross-dataset references using the client observable.request\n * method (for that requests can be automatically cancelled)\n */\nfunction fetchCrossDatasetReferences(\n  documentId: string,\n  context: {versionedClient: SanityClient},\n): Observable<ReferringDocuments['crossDatasetReferences']> {\n  const {versionedClient} = context\n\n  return getVisiblePoll$().pipe(\n    switchMap(() => getDocumentExistence(documentId, context)),\n    switchMap((checkDocumentId) => {\n      if (!checkDocumentId) {\n        return of({totalCount: 0, references: []})\n      }\n\n      const currentDataset = versionedClient.config().dataset\n\n      return versionedClient.observable\n        .request({\n          url: `/data/references/${currentDataset}/documents/${checkDocumentId}/to?excludeInternalReferences=true&excludePaths=true`,\n          tag: 'use-referring-documents.external',\n        })\n        .pipe(\n          catchError((e) => {\n            // it's possible that referencing document doesn't exist yet so the\n            // API will return a 404. In those cases, we want to catch and return\n            // a response with no references\n            if (isClientError(e) && e.statusCode === 404) {\n              return of({totalCount: 0, references: []})\n            }\n\n            throw e\n          }),\n        )\n    }),\n  )\n}\n\nconst useInternalReferences = createHookFromObservableFactory(\n  ([documentId, documentStore]: [string, DocumentStore]) => {\n    const referencesClause = '*[references($documentId)][0...100]{_id,_type}'\n    const totalClause = 'count(*[references($documentId)])'\n    const fetchQuery = `{\"references\":${referencesClause},\"totalCount\":${totalClause}}`\n    const listenQuery = '*[references($documentId)]'\n\n    return documentStore.listenQuery(\n      {fetch: fetchQuery, listen: listenQuery},\n      {documentId},\n      {tag: 'use-referring-documents', transitions: ['appear', 'disappear'], throttleTime: 5000},\n    ) as Observable<ReferringDocuments['internalReferences']>\n  },\n)\n\nconst useCrossDatasetReferences = createHookFromObservableFactory(\n  ([documentId, versionedClient]: [string, SanityClient]) => {\n    // (documentId: string, versionedClient: SanityClient) => {\n    return getVisiblePoll$().pipe(\n      switchMap(() =>\n        fetchCrossDatasetReferences(documentId, {\n          versionedClient,\n        }),\n      ),\n    )\n  },\n)\n\nexport function useReferringDocuments(documentId: string): ReferringDocuments {\n  const versionedClient = useClient(DEFAULT_STUDIO_CLIENT_OPTIONS)\n\n  const documentStore = useDocumentStore()\n  const publishedId = getPublishedId(documentId)\n\n  const [internalReferences, isInternalReferencesLoading] = useInternalReferences(\n    useMemo(() => [publishedId, documentStore], [documentStore, publishedId]),\n  )\n\n  const [crossDatasetReferences, isCrossDatasetReferencesLoading] = useCrossDatasetReferences(\n    useMemo(() => [publishedId, versionedClient], [publishedId, versionedClient]),\n  )\n\n  const projectIds = useMemo(() => {\n    return Array.from(\n      new Set(\n        crossDatasetReferences?.references\n          .map((crossDatasetReference) => crossDatasetReference.projectId)\n          .filter(Boolean),\n      ),\n    ).sort()\n  }, [crossDatasetReferences?.references])\n\n  const datasetNames = useMemo(() => {\n    return Array.from(\n      new Set<string>(\n        crossDatasetReferences?.references\n          // .filter((name) => typeof name === 'string')\n          .map((crossDatasetReference) => crossDatasetReference?.datasetName || '')\n          .filter((datasetName) => Boolean(datasetName) && datasetName !== ''),\n      ),\n    ).sort()\n  }, [crossDatasetReferences?.references])\n\n  const hasUnknownDatasetNames = useMemo(() => {\n    return Boolean(\n      crossDatasetReferences?.references.some(\n        (crossDatasetReference) => typeof crossDatasetReference.datasetName !== 'string',\n      ),\n    )\n  }, [crossDatasetReferences?.references])\n\n  return {\n    totalCount: (internalReferences?.totalCount || 0) + (crossDatasetReferences?.totalCount || 0),\n    projectIds,\n    datasetNames,\n    hasUnknownDatasetNames,\n    internalReferences,\n    crossDatasetReferences,\n    isLoading: isInternalReferencesLoading || isCrossDatasetReferencesLoading,\n  }\n}\n","import {Box, Flex} from '@sanity/ui'\nimport {useId, useMemo} from 'react'\nimport {LoadingBlock, useTranslation} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Dialog} from '../../../ui-components'\nimport {structureLocaleNamespace} from '../../i18n'\nimport {DocTitle} from '../DocTitle'\nimport {ConfirmDeleteDialogBody} from './ConfirmDeleteDialogBody'\nimport {useReferringDocuments} from './useReferringDocuments'\n\n/** @internal */\nexport const DialogBody = styled(Box)`\n  box-sizing: border-box;\n`\n\n/** @internal */\nexport const LoadingContainer = styled(Flex).attrs({\n  align: 'center',\n  direction: 'column',\n  justify: 'center',\n})`\n  height: 110px;\n`\n\n/** @internal */\nexport interface ConfirmDeleteDialogProps {\n  /**\n   * Incoming document ID used to find other referencing documents. This\n   * field respects draft IDs (e.g. if you pass in a published ID when one\n   * doesn't exist the document title may not show up).\n   */\n  id: string\n  /**\n   * The schema typename of the incoming document\n   */\n  type: string\n  /**\n   * The name of the action being done. (e.g. the `'unpublish'` action requires\n   * the same document deletion confirmation).\n   */\n  action?: 'delete' | 'unpublish'\n  onCancel: () => void\n  onConfirm: () => void\n}\n\n/**\n * A confirmation dialog used to prevent unwanted document deletes. Loads all\n * the referencing internal and cross-data references prior to showing the\n * delete button.\n *\n * @internal\n */\nexport function ConfirmDeleteDialog({\n  id,\n  type,\n  action = 'delete',\n  onCancel,\n  onConfirm,\n}: ConfirmDeleteDialogProps) {\n  const {t} = useTranslation(structureLocaleNamespace)\n  const dialogId = `deletion-confirmation-${useId()}`\n  const {\n    internalReferences,\n    crossDatasetReferences,\n    isLoading,\n    totalCount,\n    projectIds,\n    datasetNames,\n    hasUnknownDatasetNames,\n  } = useReferringDocuments(id)\n  const documentTitle = <DocTitle document={useMemo(() => ({_id: id, _type: type}), [id, type])} />\n  const showConfirmButton = !isLoading\n\n  return (\n    <Dialog\n      width={1}\n      id={dialogId}\n      header={t('confirm-delete-dialog.header.text', {context: action})}\n      footer={{\n        cancelButton: {\n          onClick: onCancel,\n          text: t('confirm-delete-dialog.cancel-button.text'),\n        },\n        confirmButton: showConfirmButton\n          ? {\n              text:\n                totalCount > 0\n                  ? t('confirm-delete-dialog.confirm-anyway-button.text', {context: action})\n                  : t('confirm-delete-dialog.confirm-button.text', {context: action}),\n              onClick: onConfirm,\n            }\n          : undefined,\n      }}\n      onClose={onCancel}\n      onClickOutside={onCancel}\n    >\n      <DialogBody>\n        {crossDatasetReferences && internalReferences && !isLoading ? (\n          <ConfirmDeleteDialogBody\n            crossDatasetReferences={crossDatasetReferences}\n            internalReferences={internalReferences}\n            documentTitle={documentTitle}\n            isLoading={isLoading}\n            totalCount={totalCount}\n            action={action}\n            projectIds={projectIds}\n            datasetNames={datasetNames}\n            hasUnknownDatasetNames={hasUnknownDatasetNames}\n            onReferenceLinkClick={onCancel}\n          />\n        ) : (\n          <LoadingContainer data-testid=\"loading-container\">\n            <LoadingBlock showText title={t('confirm-delete-dialog.loading.text')} />\n          </LoadingContainer>\n        )}\n      </DialogBody>\n    </Dialog>\n  )\n}\n","import {Box, Text} from '@sanity/ui'\nimport {type ComponentProps, useCallback, useId, useState} from 'react'\nimport {useTranslation} from 'sanity'\n\nimport {Dialog, ErrorBoundary} from '../../../ui-components'\nimport {structureLocaleNamespace} from '../../i18n'\nimport {ConfirmDeleteDialog, type ConfirmDeleteDialogProps} from './ConfirmDeleteDialog'\n\nexport type {ConfirmDeleteDialogProps}\n\ntype ArgType<T> = T extends (arg: infer U) => unknown ? U : never\ntype ErrorInfo = ArgType<ComponentProps<typeof ErrorBoundary>['onCatch']>\n\n/** @internal */\nfunction ConfirmDeleteDialogContainer(props: ConfirmDeleteDialogProps) {\n  const {t} = useTranslation(structureLocaleNamespace)\n  const id = useId()\n  const [error, setError] = useState<ErrorInfo | null>(null)\n  const handleRetry = useCallback(() => setError(null), [])\n\n  return error ? (\n    <Dialog\n      id={`dialog-error-${id}`}\n      data-testid=\"confirm-delete-error-dialog\"\n      header={t('confirm-delete-dialog.error.title.text')}\n      footer={{\n        confirmButton: {\n          text: t('confirm-delete-dialog.error.retry-button.text'),\n          onClick: handleRetry,\n          tone: 'default',\n        },\n      }}\n      onClose={props.onCancel}\n    >\n      <Box padding={4}>\n        <Text size={1}>{t('confirm-delete-dialog.error.message.text')}</Text>\n      </Box>\n    </Dialog>\n  ) : (\n    <ErrorBoundary onCatch={setError}>\n      <ConfirmDeleteDialog {...props} />\n    </ErrorBoundary>\n  )\n}\n\nexport {ConfirmDeleteDialogContainer as ConfirmDeleteDialog}\n","import {type ComponentProps, type ForwardedRef, forwardRef, type ReactNode, useMemo} from 'react'\nimport {IntentLink} from 'sanity/router'\n\nimport {Button, type ButtonProps} from '../../ui-components'\nimport {type PaneMenuItem} from '../types'\n\ntype RouterIntent = NonNullable<PaneMenuItem['intent']>\n\nexport const IntentButton = forwardRef(function IntentButton(\n  props: {\n    intent: RouterIntent\n  } & ButtonProps &\n    Omit<ComponentProps<typeof Button>, 'as' | 'href' | 'type'>,\n  ref: ForwardedRef<HTMLAnchorElement>,\n) {\n  const {intent, ...restProps} = props\n\n  const Link = useMemo(\n    () =>\n      // eslint-disable-next-line @typescript-eslint/no-shadow\n      forwardRef(function Link(\n        linkProps: {children: ReactNode},\n        linkRef: ForwardedRef<HTMLAnchorElement>,\n      ) {\n        return (\n          <IntentLink\n            {...linkProps}\n            intent={intent.type}\n            params={intent.params}\n            ref={linkRef}\n            searchParams={intent.searchParams}\n          />\n        )\n      }),\n    [intent],\n  )\n\n  return props.disabled ? (\n    <Button {...restProps} as=\"a\" role=\"link\" aria-disabled=\"true\" />\n  ) : (\n    <Button {...restProps} as={Link} data-as=\"a\" ref={ref as ForwardedRef<HTMLButtonElement>} />\n  )\n})\n","import {type ComponentProps, type ReactNode} from 'react'\nimport {InsufficientPermissionsMessage, useCurrentUser, useTranslation} from 'sanity'\n\nimport {Tooltip} from '../../../ui-components'\nimport {structureLocaleNamespace} from '../../i18n'\n\ninterface InsufficientPermissionsMessageTooltipProps {\n  reveal: boolean\n  /**\n   * delegates to `InsufficientPermissionsMessage`'s `context` prop\n   * @see InsufficientPermissionsMessage\n   */\n  context: ComponentProps<typeof InsufficientPermissionsMessage>['context']\n  loading: boolean\n  children: ReactNode\n}\n\nexport function InsufficientPermissionsMessageTooltip({\n  reveal,\n  context,\n  loading,\n  children,\n}: InsufficientPermissionsMessageTooltipProps) {\n  const currentUser = useCurrentUser()\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  if (!reveal) {\n    return <>{children}</>\n  }\n\n  return (\n    <Tooltip\n      content={\n        loading ? (\n          t('insufficient-permissions-message-tooltip.loading-text')\n        ) : (\n          <InsufficientPermissionsMessage context={context} currentUser={currentUser} />\n        )\n      }\n      portal\n    >\n      {/* this wrapping div is to allow mouse events */}\n      {/* while the child element is disabled */}\n      <div>{children}</div>\n    </Tooltip>\n  )\n}\n","import {AddIcon} from '@sanity/icons'\nimport {Menu} from '@sanity/ui'\nimport {type ComponentProps, type ForwardedRef, forwardRef, useMemo} from 'react'\nimport {\n  type InitialValueTemplateItem,\n  type ReleaseId,\n  type Template,\n  type TemplatePermissionsResult,\n  useGetI18nText,\n  usePerspective,\n  useTemplatePermissions,\n  useTemplates,\n  useTranslation,\n} from 'sanity'\nimport {IntentLink} from 'sanity/router'\n\nimport {Button, MenuButton, MenuItem, type PopoverProps} from '../../../ui-components'\nimport {structureLocaleNamespace} from '../../i18n'\nimport {IntentButton} from '../IntentButton'\nimport {InsufficientPermissionsMessageTooltip} from './InsufficientPermissionsMessageTooltip'\n\nexport type PaneHeaderIntentProps = ComponentProps<typeof IntentButton>['intent']\n\nconst POPOVER_PROPS: PopoverProps = {\n  constrainSize: true,\n  placement: 'bottom',\n  portal: true,\n}\n\nconst getIntent = (\n  templates: Template[],\n  item: InitialValueTemplateItem,\n  version?: ReleaseId,\n): PaneHeaderIntentProps | null => {\n  const typeName = templates.find((t) => t.id === item.templateId)?.schemaType\n  if (!typeName) return null\n\n  const baseParams = {\n    template: item.templateId,\n    type: typeName,\n    version,\n    id: item.initialDocumentId,\n  }\n\n  return {\n    type: 'create',\n    params: item.parameters ? [baseParams, item.parameters] : baseParams,\n    searchParams: version ? [['perspective', version]] : undefined,\n  }\n}\n\ninterface PaneHeaderCreateButtonProps {\n  templateItems: InitialValueTemplateItem[]\n}\n\nexport function PaneHeaderCreateButton({templateItems}: PaneHeaderCreateButtonProps) {\n  const templates = useTemplates()\n  const {selectedReleaseId} = usePerspective()\n\n  const {t} = useTranslation(structureLocaleNamespace)\n  const getI18nText = useGetI18nText([...templateItems, ...templates])\n\n  const [templatePermissions, isTemplatePermissionsLoading] = useTemplatePermissions({\n    templateItems,\n  })\n\n  const nothingGranted = useMemo(() => {\n    return (\n      !isTemplatePermissionsLoading &&\n      templatePermissions?.length !== 0 &&\n      templatePermissions?.every((permission) => !permission.granted)\n    )\n  }, [isTemplatePermissionsLoading, templatePermissions])\n\n  const permissionsById = useMemo(() => {\n    if (!templatePermissions) return {}\n    return templatePermissions.reduce<Record<string, TemplatePermissionsResult | undefined>>(\n      (acc, permission) => {\n        acc[permission.id] = permission\n        return acc\n      },\n      {},\n    )\n  }, [templatePermissions])\n\n  if (templateItems.length === 0) return null\n\n  if (nothingGranted) {\n    return (\n      <InsufficientPermissionsMessageTooltip\n        context=\"create-document-type\"\n        reveal\n        loading={isTemplatePermissionsLoading}\n      >\n        <Button\n          aria-label={t('pane-header.disabled-created-button.aria-label')}\n          icon={AddIcon}\n          data-testid=\"action-intent-button\"\n          disabled\n          mode=\"bleed\"\n          // This button handles the tooltip in a special way, won't reuse the forced tooltip.\n          tooltipProps={null}\n        />\n      </InsufficientPermissionsMessageTooltip>\n    )\n  }\n\n  if (templateItems.length === 1) {\n    const firstItem = templateItems[0]\n    const permissions = permissionsById[firstItem.id]\n    const disabled = !permissions?.granted\n    const intent = getIntent(templates, firstItem, selectedReleaseId)\n    if (!intent) return null\n\n    return (\n      <InsufficientPermissionsMessageTooltip\n        reveal={disabled}\n        loading={isTemplatePermissionsLoading}\n        context=\"create-document-type\"\n      >\n        <IntentButton\n          aria-label={getI18nText(firstItem).title}\n          icon={firstItem.icon || AddIcon}\n          intent={intent}\n          mode=\"bleed\"\n          disabled={disabled}\n          data-testid=\"action-intent-button\"\n          tooltipProps={{content: t('pane-header.create-new-button.tooltip')}}\n        />\n      </InsufficientPermissionsMessageTooltip>\n    )\n  }\n\n  return (\n    <MenuButton\n      button={\n        <Button\n          icon={AddIcon}\n          mode=\"bleed\"\n          data-testid=\"multi-action-intent-button\"\n          tooltipProps={{content: t('pane-header.create-new-button.tooltip')}}\n        />\n      }\n      id=\"create-menu\"\n      menu={\n        <Menu>\n          {templateItems.map((item, itemIndex) => {\n            const permissions = permissionsById[item.id]\n            const disabled = !permissions?.granted\n            const intent = getIntent(templates, item, selectedReleaseId)\n            const template = templates.find((i) => i.id === item.templateId)\n            if (!template || !intent) return null\n\n            const Link = forwardRef((linkProps, linkRef: ForwardedRef<never>) =>\n              disabled ? (\n                <button type=\"button\" disabled {...linkProps} ref={linkRef} />\n              ) : (\n                <IntentLink\n                  {...linkProps}\n                  intent={intent.type}\n                  params={intent.params}\n                  searchParams={intent.searchParams}\n                  ref={linkRef}\n                />\n              ),\n            )\n\n            Link.displayName = 'Link'\n\n            const {title} = getI18nText({\n              ...item,\n              // replace the title with the template title\n              title: item.title || getI18nText(template).title,\n            })\n\n            return (\n              <InsufficientPermissionsMessageTooltip\n                key={item.id}\n                context=\"create-document-type\"\n                reveal={disabled}\n                loading={isTemplatePermissionsLoading}\n              >\n                <MenuItem\n                  as={Link}\n                  data-as={disabled ? 'button' : 'a'}\n                  text={title}\n                  aria-label={\n                    disabled ? t('pane-header.disabled-created-button.aria-label') : title\n                  }\n                  disabled={disabled}\n                  data-testid={`action-intent-button-${itemIndex}`}\n                />\n              </InsufficientPermissionsMessageTooltip>\n            )\n          })}\n        </Menu>\n      }\n      popover={POPOVER_PROPS}\n    />\n  )\n}\n","import {Flex} from '@sanity/ui'\nimport {uniqBy} from 'lodash'\nimport {memo, useCallback, useMemo} from 'react'\nimport {EMPTY_ARRAY, EMPTY_OBJECT, type InitialValueTemplateItem, useTemplates} from 'sanity'\n\nimport {isMenuNodeButton, isNotMenuNodeButton, resolveMenuNodes} from '../../menuNodes'\nimport {\n  type PaneMenuItem,\n  type PaneMenuItemGroup,\n  type StructureToolPaneActionHandler,\n} from '../../types'\nimport {PaneContextMenuButton} from '../pane/PaneContextMenuButton'\nimport {PaneHeaderActionButton} from '../pane/PaneHeaderActionButton'\nimport {PaneHeaderCreateButton} from './PaneHeaderCreateButton'\n\nfunction isNonNullable<T>(value: T): value is NonNullable<T> {\n  return value !== null && value !== undefined\n}\n\n/**\n * hashes an object to a string where the order of the keys don't matter\n */\nconst hashObject = (value: unknown) => {\n  const sortObject = (v: unknown): unknown => {\n    if (typeof v !== 'object' || !v) return v\n    if (Array.isArray(v)) return v.map(sortObject)\n    return Object.entries(v).sort(([keyA], [keyB]) => keyA.localeCompare(keyB, 'en'))\n  }\n\n  const normalize = (v: unknown) => JSON.parse(JSON.stringify(v))\n\n  return JSON.stringify(sortObject(normalize(value)))\n}\n\ninterface PaneHeaderActionsProps {\n  initialValueTemplateItems?: InitialValueTemplateItem[]\n  menuItems?: PaneMenuItem[]\n  menuItemGroups?: PaneMenuItemGroup[]\n  actionHandlers?: Record<string, StructureToolPaneActionHandler>\n}\n\nexport const PaneHeaderActions = memo(function PaneHeaderActions(props: PaneHeaderActionsProps) {\n  const {\n    initialValueTemplateItems: initialValueTemplateItemsFromStructure = EMPTY_ARRAY,\n    menuItems = EMPTY_ARRAY,\n    menuItemGroups = EMPTY_ARRAY,\n    actionHandlers = EMPTY_OBJECT as Record<string, StructureToolPaneActionHandler>,\n  } = props\n\n  const templates = useTemplates()\n\n  const handleAction = useCallback(\n    (item: PaneMenuItem) => {\n      if (typeof item.action === 'string' && !(item.action in actionHandlers)) {\n        console.warn('No handler for action:', item.action)\n        return false\n      }\n\n      const handler =\n        typeof item.action === 'function'\n          ? item.action\n          : typeof item.action === 'string'\n            ? actionHandlers[item.action]\n            : null\n\n      if (handler) {\n        handler(item.params as Record<string, string>)\n        return true\n      }\n\n      return false\n    },\n    [actionHandlers],\n  )\n\n  const menuNodes = useMemo(\n    () =>\n      resolveMenuNodes({\n        actionHandler: handleAction,\n        menuItemGroups,\n        menuItems: menuItems\n          // remove items with `create` intents because those will get combined\n          // into one action button (see `initialValueTemplateItemFromMenuItems`)\n          .filter((item) => item.intent?.type !== 'create'),\n      }),\n    [handleAction, menuItemGroups, menuItems],\n  )\n\n  const actionNodes = useMemo(() => menuNodes.filter(isMenuNodeButton), [menuNodes])\n  const contextMenuNodes = useMemo(() => menuNodes.filter(isNotMenuNodeButton), [menuNodes])\n\n  const initialValueTemplateItemFromMenuItems = useMemo(() => {\n    return menuItems\n      .map((item, menuItemIndex) => {\n        if (item.intent?.type !== 'create') return null\n\n        const {params} = item.intent\n        if (!params) return null\n\n        const intentParams = Array.isArray(params) ? params[0] : params\n        const templateParams = Array.isArray(params) ? params[1] : undefined\n\n        // fallback to the schema type name as the template ID.\n        // by default, the initial template values are populated from every\n        // document type in the schema\n        const templateId = intentParams.template || intentParams.type\n        if (!templateId) return null\n\n        // eslint-disable-next-line max-nested-callbacks\n        const template = templates.find((t) => t.id === templateId)\n        // the template doesn't exist then the action might be disabled\n        if (!template) return null\n\n        const initialDocumentId = intentParams.id\n\n        return {\n          item,\n          template,\n          templateParams,\n          menuItemIndex,\n          initialDocumentId,\n        }\n      })\n      .filter(isNonNullable)\n      .map(({initialDocumentId, item, template, menuItemIndex, templateParams}) => {\n        const initialValueTemplateItem: InitialValueTemplateItem = {\n          id: `menuItem${menuItemIndex}`,\n          initialDocumentId,\n          templateId: template.id,\n          type: 'initialValueTemplateItem',\n          title: item.title || template.title,\n          i18n: item.i18n || template.i18n,\n          icon: item.icon as InitialValueTemplateItem['icon'],\n          description: template.description,\n          parameters: templateParams,\n          schemaType: template.schemaType,\n        }\n\n        return initialValueTemplateItem\n      })\n  }, [menuItems, templates])\n\n  const combinedInitialValueTemplates = useMemo(() => {\n    // this de-dupes create actions\n    return uniqBy(\n      [...initialValueTemplateItemFromMenuItems, ...initialValueTemplateItemsFromStructure],\n      (item) => hashObject([item.initialDocumentId, item.templateId, item.parameters]),\n    )\n  }, [initialValueTemplateItemFromMenuItems, initialValueTemplateItemsFromStructure])\n\n  return (\n    <Flex gap={1}>\n      <PaneHeaderCreateButton templateItems={combinedInitialValueTemplates} />\n\n      {actionNodes.map((node) => (\n        <PaneHeaderActionButton key={node.key} node={node} />\n      ))}\n\n      {contextMenuNodes.length > 0 && <PaneContextMenuButton nodes={contextMenuNodes} />}\n    </Flex>\n  )\n})\n","import {WarningOutlineIcon} from '@sanity/icons'\nimport {type SanityDocument} from '@sanity/types'\nimport {type GeneralPreviewLayoutKey, SanityDefaultPreview, Translate, useTranslation} from 'sanity'\n\nimport {structureLocaleNamespace} from '../i18n'\n\nexport interface MissingSchemaTypeProps {\n  layout?: GeneralPreviewLayoutKey\n  value: SanityDocument\n}\n\nexport function MissingSchemaType(props: MissingSchemaTypeProps) {\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {layout, value} = props\n\n  return (\n    <SanityDefaultPreview\n      title={\n        <em>\n          <Translate\n            t={t}\n            i18nKey=\"pane-item.missing-schema-type.title\"\n            components={{Code: 'code'}}\n            values={{documentType: value._type}}\n          />\n        </em>\n      }\n      subtitle={\n        <Translate\n          t={t}\n          i18nKey=\"pane-item.missing-schema-type.subtitle\"\n          components={{Code: 'code'}}\n          values={{documentId: value._id}}\n        />\n      }\n      // eslint-disable-next-line react/jsx-no-bind\n      media={() => <WarningOutlineIcon />}\n      layout={layout}\n    />\n  )\n}\n","import {ChevronRightIcon, DocumentIcon, FolderIcon} from '@sanity/icons'\nimport {\n  isSanityDocument,\n  type PreviewValue,\n  type SanityDocument,\n  type SchemaType,\n} from '@sanity/types'\nimport {Box, type CardProps, Text} from '@sanity/ui'\nimport {\n  type ComponentType,\n  type MouseEvent,\n  startTransition,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react'\nimport {\n  type FIXME,\n  type GeneralPreviewLayoutKey,\n  getPublishedId,\n  PreviewCard,\n  SanityDefaultPreview,\n  useDocumentPresence,\n  useDocumentPreviewStore,\n  useEditState,\n  useSchema,\n} from 'sanity'\n\nimport {MissingSchemaType} from '../MissingSchemaType'\nimport {usePaneRouter} from '../paneRouter'\nimport {PaneItemPreview} from './PaneItemPreview'\n\ninterface PaneItemProps {\n  id: string\n  layout?: GeneralPreviewLayoutKey\n  icon?: ComponentType<any> | false\n  pressed?: boolean\n  selected?: boolean\n  title?: string\n  value?: PreviewValue | SanityDocument\n  schemaType?: SchemaType\n  margin?: CardProps['margin']\n  marginBottom?: CardProps['marginBottom']\n  marginTop?: CardProps['marginTop']\n}\n\n/**\n * Return `false` if we explicitly disable the icon.\n * Otherwise return the passed icon or the schema type icon as a backup.\n */\nexport function getIconWithFallback(\n  icon: ComponentType<any> | false | undefined,\n  schemaType: SchemaType | undefined,\n  defaultIcon: ComponentType<any>,\n): ComponentType<any> | false {\n  if (icon === false) {\n    return false\n  }\n\n  return icon || (schemaType && schemaType.icon) || defaultIcon || false\n}\n\nexport function PaneItem(props: PaneItemProps) {\n  const {\n    icon,\n    id,\n    layout = 'default',\n    pressed,\n    schemaType,\n    selected,\n    title,\n    value,\n    margin,\n    marginBottom,\n    marginTop,\n  } = props\n  const schema = useSchema()\n  const documentPreviewStore = useDocumentPreviewStore()\n  const {ChildLink} = usePaneRouter()\n  const documentPresence = useDocumentPresence(id)\n  const hasSchemaType = Boolean(schemaType && schemaType.name && schema.get(schemaType.name))\n  const [clicked, setClicked] = useState<boolean>(false)\n\n  const preview = useMemo(() => {\n    if (value && isSanityDocument(value)) {\n      if (!schemaType || !hasSchemaType) {\n        return <MissingSchemaType value={value} />\n      }\n\n      return (\n        <PaneItemPreview\n          documentPreviewStore={documentPreviewStore}\n          icon={getIconWithFallback(icon, schemaType, DocumentIcon)}\n          layout={layout}\n          schemaType={schemaType}\n          value={value}\n          presence={documentPresence}\n        />\n      )\n    }\n\n    // Always render non-document values as compact previews\n    return (\n      <SanityDefaultPreview\n        status={\n          <Box style={{opacity: 0.5}}>\n            <Text muted size={1}>\n              <ChevronRightIcon />\n            </Text>\n          </Box>\n        }\n        icon={getIconWithFallback(icon, schemaType, FolderIcon)}\n        layout=\"compact\"\n        title={title}\n      />\n    )\n  }, [\n    documentPreviewStore,\n    hasSchemaType,\n    icon,\n    layout,\n    schemaType,\n    title,\n    value,\n    documentPresence,\n  ])\n\n  const handleClick = useCallback((e: MouseEvent<HTMLElement>) => {\n    if (e.metaKey) {\n      setClicked(false)\n      return\n    }\n\n    setClicked(true)\n  }, [])\n\n  // Reset `clicked` state when `selected` prop changes\n  useEffect(() => setClicked(false), [selected])\n\n  // Preloads the edit state on hover, using concurrent rendering with `startTransition` so preloads can be interrupted and not block rendering\n  const [preloading, setPreload] = useState(false)\n  const timeoutRef = useRef<ReturnType<typeof setTimeout> | null>(null)\n  const handleMouseEnter = useCallback(() => {\n    timeoutRef.current = setTimeout(() => startTransition(() => setPreload(true)), 400)\n  }, [])\n  const handleMouseLeave = useCallback(() => {\n    if (timeoutRef.current) clearTimeout(timeoutRef.current)\n    startTransition(() => setPreload(false))\n  }, [])\n\n  return (\n    <PreviewCard\n      data-testid={`pane-item-${title}`}\n      __unstable_focusRing\n      as={ChildLink as FIXME}\n      // @ts-expect-error - `childId` is a valid prop on `ChildLink`\n      childId={id}\n      data-as=\"a\"\n      margin={margin}\n      marginBottom={marginBottom}\n      marginTop={marginTop}\n      onClick={handleClick}\n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={handleMouseLeave}\n      pressed={pressed}\n      radius={2}\n      selected={selected || clicked}\n      sizing=\"border\"\n      tabIndex={-1}\n      tone=\"inherit\"\n    >\n      {preview}\n      {preloading && schemaType?.name && value && isSanityDocument(value) && (\n        <PreloadDocumentPane documentId={id} documentType={schemaType.name} />\n      )}\n    </PreviewCard>\n  )\n}\n\nfunction PreloadDocumentPane(props: {documentId: string; documentType: string}) {\n  const {documentId, documentType} = props\n  // Preload the edit state for the document, and keep it alive until mouse leave\n  useEditState(getPublishedId(documentId), documentType)\n\n  return null\n}\nPreloadDocumentPane.displayName = 'PreloadDocumentPane'\n","import {memo, type ReactNode, useMemo} from 'react'\nimport {\n  type DocumentActionComponent,\n  type DocumentActionDescription,\n  type DocumentActionGroup,\n  type DocumentActionProps,\n  getDraftId,\n  GetHookCollectionState,\n  getPublishedId,\n  useCanvasCompanionDoc,\n  useTranslation,\n} from 'sanity'\n\nimport {structureLocaleNamespace} from '../i18n'\n\n/** @internal */\nexport interface Action<Args, Description> {\n  (args: Args): Description | null\n}\nexport interface ResolvedAction extends DocumentActionDescription {\n  action?: DocumentActionComponent['action']\n}\n\n/** @internal */\nexport interface RenderActionCollectionProps {\n  actions: Action<DocumentActionProps, DocumentActionDescription>[]\n  actionProps: Omit<DocumentActionProps, 'onComplete'>\n  children: (props: {states: ResolvedAction[]}) => ReactNode\n  onActionComplete?: () => void\n  group?: DocumentActionGroup\n}\n\n/** @internal */\nexport const RenderActionCollectionState = memo((props: RenderActionCollectionProps) => {\n  const {actions, children, actionProps, onActionComplete, group} = props\n\n  return (\n    <GetHookCollectionState<Omit<DocumentActionProps, 'onComplete'>, ResolvedAction>\n      onReset={onActionComplete}\n      hooks={actions}\n      args={actionProps}\n      group={group}\n    >\n      {({states}) => (\n        <ActionsGuardWrapper\n          states={states}\n          documentId={\n            actionProps.liveEditSchemaType\n              ? getPublishedId(actionProps.id)\n              : getDraftId(actionProps.id)\n          }\n        >\n          {children}\n        </ActionsGuardWrapper>\n      )}\n    </GetHookCollectionState>\n  )\n})\nRenderActionCollectionState.displayName = 'Memo(RenderActionCollectionState)'\n\n/**\n * This is a list of the actions that are supported when a document is linked to Canvas.\n * Custom actions and actions that are not supported by Canvas will be disabled and will include a tooltip explaining that the action is not supported.\n */\nconst SUPPORTED_LINKED_TO_CANVAS_ACTIONS: DocumentActionComponent['action'][] = [\n  'delete',\n  'duplicate',\n  'publish',\n  'unpublish',\n  'unlinkFromCanvas',\n  'editInCanvas',\n  'linkToCanvas',\n  'schedule',\n]\n\ninterface ActionsGuardWrapperProps {\n  states: ResolvedAction[]\n  documentId: string\n  children: (props: {states: ResolvedAction[]}) => ReactNode\n}\n\nconst ActionsGuardWrapper = (props: ActionsGuardWrapperProps) => {\n  const {states, children, documentId} = props\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {isLinked} = useCanvasCompanionDoc(documentId)\n\n  const result = useMemo(() => {\n    if (isLinked) {\n      return children({\n        states: states.map((s) => {\n          if (!s.action || !SUPPORTED_LINKED_TO_CANVAS_ACTIONS.includes(s.action)) {\n            return {\n              ...s,\n              disabled: true,\n              title: t('action.disabled-by-canvas.tooltip'),\n            }\n          }\n          return s\n        }),\n      })\n    }\n    return children({states})\n  }, [children, states, t, isLinked])\n\n  return result\n}\n","import {memo, type ReactNode} from 'react'\nimport {\n  type DocumentBadgeDescription,\n  type DocumentBadgeProps,\n  type EditStateFor,\n  GetHookCollectionState,\n} from 'sanity'\n\n/** @internal */\nexport interface Badge<Args, Description> {\n  (args: Args): Description | null\n}\n\n/** @internal */\nexport interface RenderBadgeCollectionProps {\n  badges: Badge<DocumentBadgeProps, DocumentBadgeDescription>[]\n  badgeProps: EditStateFor\n  children: (props: {states: DocumentBadgeDescription[]}) => ReactNode\n}\n\n/** @internal */\nexport const RenderBadgeCollectionState = memo((props: RenderBadgeCollectionProps) => {\n  const {badges, children, badgeProps} = props\n\n  return (\n    <GetHookCollectionState<EditStateFor, DocumentBadgeDescription>\n      hooks={badges}\n      args={badgeProps}\n    >\n      {children}\n    </GetHookCollectionState>\n  )\n})\nRenderBadgeCollectionState.displayName = 'Memo(RenderBadgeCollectionState)'\n","import {type SortOrder} from './types'\n\nexport const PARTIAL_PAGE_LIMIT = 100\nexport const FULL_LIST_LIMIT = 2000\nexport const DEFAULT_ORDERING: SortOrder = {by: [{field: '_updatedAt', direction: 'desc'}]}\nexport const EMPTY_RECORD: Record<string, unknown> = {}\n\nexport const ENABLE_LRU_MEMO = true\n","import {type SanityDocument} from '@sanity/types'\nimport {Box, Container, Flex, Heading, Stack, Text} from '@sanity/ui'\nimport {useCallback, useEffect, useMemo, useState} from 'react'\nimport {\n  CommandList,\n  type CommandListRenderItemCallback,\n  ErrorActions,\n  type GeneralPreviewLayoutKey,\n  getPublishedId,\n  isDev,\n  LoadingBlock,\n  SanityDefaultPreview,\n  Translate,\n  useSchema,\n  useTranslation,\n} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Delay, PaneContent, PaneItem, usePane, usePaneLayout} from '../../components'\nimport {structureLocaleNamespace} from '../../i18n'\nimport {FULL_LIST_LIMIT} from './constants'\nimport {type DocumentListPaneItem, type LoadingVariant} from './types'\n\nconst RootBox = styled(Box)<{$opacity?: number}>`\n  position: relative;\n  opacity: ${(props) => props.$opacity || 1};\n  transition: opacity 0.4s;\n`\n\nconst CommandListBox = styled(Box)`\n  position: absolute;\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n`\n\ninterface DocumentListPaneContentProps {\n  childItemId?: string\n  error: {message: string} | null\n  filterIsSimpleTypeConstraint: boolean\n  hasMaxItems?: boolean\n  muted?: boolean\n  hasSearchQuery: boolean\n  isActive?: boolean\n  isLazyLoading: boolean\n  isLoading: boolean\n  isConnected?: boolean\n  autoRetry?: boolean\n  canRetry: boolean\n  retryCount?: number\n  isRetrying?: boolean\n  items: DocumentListPaneItem[]\n  layout?: GeneralPreviewLayoutKey\n  loadingVariant?: LoadingVariant\n  onEndReached: () => void\n  onRetry?: () => void\n  paneTitle: string\n  searchInputElement: HTMLInputElement | null\n  showIcons: boolean\n}\n\nconst SKELETON_ITEMS = [...Array(30).keys()]\n\nfunction LoadingView(props: {layout?: GeneralPreviewLayoutKey}) {\n  const {layout} = props\n\n  return (\n    <Stack paddingX={3} paddingY={2} paddingTop={0} space={1}>\n      {SKELETON_ITEMS.map((num) => (\n        <SanityDefaultPreview key={num} isPlaceholder layout={layout} />\n      ))}\n    </Stack>\n  )\n}\n\nexport function DocumentListPaneContent(props: DocumentListPaneContentProps) {\n  const {\n    childItemId,\n    error,\n    isRetrying,\n    autoRetry,\n    filterIsSimpleTypeConstraint,\n    hasMaxItems,\n    hasSearchQuery,\n    isActive,\n    isLazyLoading,\n    muted,\n    isLoading,\n    isConnected,\n    retryCount,\n    canRetry,\n    items,\n    layout,\n    loadingVariant,\n    onEndReached,\n    onRetry,\n    paneTitle,\n    searchInputElement,\n    showIcons,\n  } = props\n\n  const schema = useSchema()\n\n  const {collapsed: layoutCollapsed} = usePaneLayout()\n  const {collapsed, index} = usePane()\n  const [shouldRender, setShouldRender] = useState(!collapsed)\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const handleEndReached = useCallback(() => {\n    if (shouldRender) {\n      onEndReached()\n    }\n  }, [onEndReached, shouldRender])\n\n  useEffect(() => {\n    if (collapsed) return undefined\n\n    const timer = setTimeout(() => {\n      setShouldRender(true)\n    }, 0)\n\n    return () => {\n      clearTimeout(timer)\n    }\n  }, [collapsed, items])\n\n  const renderItem = useCallback<CommandListRenderItemCallback<SanityDocument>>(\n    (item, {activeIndex}) => {\n      const publishedId = getPublishedId(item._id)\n      const isSelected = childItemId === publishedId\n      const pressed = !isActive && isSelected\n      const selected = isActive && isSelected\n      const isLastItem = activeIndex === items.length - 1\n      const showSpinner = isLastItem && isLazyLoading\n      const showMaxItemsMessage = isLastItem && hasMaxItems\n\n      return (\n        <>\n          <PaneItem\n            icon={showIcons === false ? false : undefined}\n            id={publishedId}\n            layout={layout}\n            marginBottom={1}\n            pressed={pressed}\n            schemaType={schema.get(item._type)}\n            selected={selected}\n            value={item}\n          />\n\n          {showSpinner && <LoadingBlock />}\n\n          {showMaxItemsMessage && (\n            <Box marginY={1} paddingX={3} paddingY={4}>\n              <Text align=\"center\" muted size={1}>\n                {t('panes.document-list-pane.max-items.text', {limit: FULL_LIST_LIMIT})}\n              </Text>\n            </Box>\n          )}\n        </>\n      )\n    },\n    [childItemId, isActive, items.length, layout, schema, showIcons, hasMaxItems, isLazyLoading, t],\n  )\n\n  const noDocumentsContent = useMemo(() => {\n    if (hasSearchQuery) {\n      return (\n        <Flex align=\"center\" direction=\"column\" height=\"fill\" justify=\"center\">\n          <Container width={1}>\n            <Box paddingX={4} paddingY={5}>\n              <Text align=\"center\" muted>\n                {t('panes.document-list-pane.no-documents.text')}\n              </Text>\n            </Box>\n          </Container>\n        </Flex>\n      )\n    }\n\n    return (\n      <Flex align=\"center\" direction=\"column\" height=\"fill\" justify=\"center\">\n        <Container width={1}>\n          <Box paddingX={4} paddingY={5}>\n            <Text align=\"center\" muted>\n              {filterIsSimpleTypeConstraint\n                ? t('panes.document-list-pane.no-documents-of-type.text')\n                : t('panes.document-list-pane.no-matching-documents.text')}\n            </Text>\n          </Box>\n        </Container>\n      </Flex>\n    )\n  }, [filterIsSimpleTypeConstraint, hasSearchQuery, t])\n\n  const mainContent = useMemo(() => {\n    if (!shouldRender) {\n      return null\n    }\n\n    const isOnline = window.navigator.onLine\n    if (error) {\n      return (\n        <Flex align=\"center\" direction=\"column\" height=\"fill\" justify=\"center\">\n          <Container width={1}>\n            <Stack paddingX={4} paddingY={5} space={4}>\n              <Heading as=\"h3\">{t('panes.document-list-pane.error.title')}</Heading>\n              <Text as=\"p\">\n                {isDev ? (\n                  <Translate\n                    t={t}\n                    i18nKey=\"panes.document-list-pane.error.text.dev\"\n                    values={{error: error.message}}\n                    components={{Code: ({children}) => <code>{children}</code>}}\n                  />\n                ) : isOnline ? (\n                  t('panes.document-list-pane.error.text')\n                ) : (\n                  t('panes.document-list-pane.error.text.offline')\n                )}\n              </Text>\n              <ErrorActions\n                error={error}\n                eventId={null}\n                onRetry={isOnline && canRetry ? onRetry : undefined}\n                isRetrying={isRetrying}\n              />\n              {canRetry ? (\n                <Text as=\"p\" muted size={1}>\n                  {isRetrying\n                    ? t('panes.document-list-pane.error.retrying', {count: retryCount})\n                    : autoRetry\n                      ? t('panes.document-list-pane.error.will-retry-automatically', {\n                          count: retryCount,\n                        })\n                      : t('panes.document-list-pane.error.max-retries-attempted', {\n                          count: retryCount,\n                        })}\n                </Text>\n              ) : null}\n            </Stack>\n          </Container>\n        </Flex>\n      )\n    }\n\n    if (isConnected && !isLoading && items.length === 0) {\n      return noDocumentsContent\n    }\n\n    if (loadingVariant === 'initial' && isLoading) {\n      return (\n        <Delay ms={300}>\n          <LoadingView layout={layout} />\n        </Delay>\n      )\n    }\n\n    if (loadingVariant === 'spinner' && isLoading) {\n      return null\n    }\n\n    // prevents bug when panes won't render if first rendered while collapsed\n    const key = `${index}-${collapsed}`\n\n    return (\n      <RootBox overflow=\"hidden\" height=\"fill\" $opacity={muted ? 0.8 : 1}>\n        <CommandListBox>\n          <CommandList\n            key={key}\n            activeItemDataAttr=\"data-hovered\"\n            ariaLabel={paneTitle}\n            canReceiveFocus\n            inputElement={searchInputElement}\n            itemHeight={51}\n            items={items}\n            onEndReached={handleEndReached}\n            onlyShowSelectionWhenActive\n            overscan={10}\n            paddingBottom={1}\n            paddingX={3}\n            renderItem={renderItem}\n            wrapAround={false}\n          />\n        </CommandListBox>\n      </RootBox>\n    )\n  }, [\n    autoRetry,\n    canRetry,\n    collapsed,\n    error,\n    handleEndReached,\n    index,\n    isConnected,\n    isLoading,\n    isRetrying,\n    items,\n    layout,\n    loadingVariant,\n    muted,\n    noDocumentsContent,\n    onRetry,\n    paneTitle,\n    renderItem,\n    retryCount,\n    searchInputElement,\n    shouldRender,\n    t,\n  ])\n\n  return (\n    <PaneContent\n      data-testid=\"document-list-pane\"\n      overflow={layoutCollapsed || loadingVariant === 'initial' ? 'hidden' : 'auto'}\n    >\n      {mainContent}\n    </PaneContent>\n  )\n}\n","import {\n  isIndexSegment,\n  isKeySegment,\n  isReferenceSchemaType,\n  type ObjectField,\n  type ObjectFieldType,\n  type ObjectSchemaType,\n  type SanityDocumentLike,\n  type SchemaType,\n} from '@sanity/types'\nimport * as PathUtils from '@sanity/util/paths'\nimport {type ExprNode, parse} from 'groq-js'\nimport {collate, getPublishedId} from 'sanity'\n\nimport {type DocumentListPaneItem, type SortOrder} from './types'\n\nexport function getDocumentKey(value: DocumentListPaneItem, index: number): string {\n  return value._id ? getPublishedId(value._id) : `item-${index}`\n}\n\nexport function removePublishedWithDrafts(documents: SanityDocumentLike[]): DocumentListPaneItem[] {\n  return collate(documents).map((entry) => {\n    const doc = entry.draft || entry.published || entry.versions[0]\n    const hasDraft = Boolean(entry.draft)\n\n    return {\n      ...doc,\n      hasPublished: !!entry.published,\n      hasDraft,\n    }\n  }) as any\n}\n\nexport function applyOrderingFunctions(order: SortOrder, schemaType: ObjectSchemaType): SortOrder {\n  const orderBy = order.by.map((by) => {\n    // Skip those that already have a mapper\n    if (by.mapWith) {\n      return by\n    }\n\n    const fieldType = tryResolveSchemaTypeForPath(schemaType, by.field)\n    if (!fieldType) {\n      return by\n    }\n\n    // Note: order matters here, since the jsonType of a date field is `string`,\n    // but we want to apply `datetime()`, not `lower()`\n    if (fieldExtendsType(fieldType, 'datetime')) {\n      return {...by, mapWith: 'dateTime'}\n    }\n\n    if (fieldType.jsonType === 'string') {\n      return {...by, mapWith: 'lower'}\n    }\n\n    return by\n  })\n\n  return orderBy.every((item, index) => item === order.by[index]) ? order : {...order, by: orderBy}\n}\n\nfunction tryResolveSchemaTypeForPath(baseType: SchemaType, path: string): SchemaType | undefined {\n  const pathSegments = PathUtils.fromString(path)\n\n  let current: SchemaType | undefined = baseType\n  for (const segment of pathSegments) {\n    if (!current) {\n      return undefined\n    }\n\n    if (typeof segment === 'string') {\n      current = getFieldTypeByName(current, segment)\n      continue\n    }\n\n    const isArrayAccessor = isKeySegment(segment) || isIndexSegment(segment)\n    if (!isArrayAccessor || current.jsonType !== 'array') {\n      return undefined\n    }\n\n    const [memberType, otherType] = current.of || []\n    if (otherType || !memberType) {\n      // Can't figure out the type without knowing the value\n      return undefined\n    }\n\n    if (!isReferenceSchemaType(memberType)) {\n      current = memberType\n      continue\n    }\n\n    const [refType, otherRefType] = memberType.to || []\n    if (otherRefType || !refType) {\n      // Can't figure out the type without knowing the value\n      return undefined\n    }\n\n    current = refType\n  }\n\n  return current\n}\n\nfunction getFieldTypeByName(type: SchemaType, fieldName: string): SchemaType | undefined {\n  if (!('fields' in type)) {\n    return undefined\n  }\n\n  const fieldType = type.fields.find((field) => field.name === fieldName)\n  return fieldType ? fieldType.type : undefined\n}\n\nexport function fieldExtendsType(field: ObjectField | ObjectFieldType, ofType: string): boolean {\n  let current: SchemaType | undefined = field.type\n  while (current) {\n    if (current.name === ofType) {\n      return true\n    }\n\n    if (!current.type && current.jsonType === ofType) {\n      return true\n    }\n\n    current = current.type\n  }\n\n  return false\n}\n\n/**\n * Recursively extract static `_type`s from GROQ filter expressions. If the\n * types can't be statically determined then it will return `null`.\n */\n// eslint-disable-next-line complexity\nfunction findTypes(node: ExprNode): Set<string> | null {\n  switch (node.type) {\n    case 'OpCall': {\n      const {left, right} = node\n\n      switch (node.op) {\n        // e.g. `a == b`\n        case '==': {\n          // e.g. `_type == 'value'`\n          if (left.type === 'AccessAttribute' && left.name === '_type' && !left.base) {\n            if (right.type !== 'Value' || typeof right.value !== 'string') return null\n            return new Set([right.value])\n          }\n\n          // e.g. `'value' == _type`\n          if (right.type === 'AccessAttribute' && right.name === '_type' && !right.base) {\n            if (left.type !== 'Value' || typeof left.value !== 'string') return null\n            return new Set([left.value])\n          }\n\n          // otherwise, we can't determine the types statically\n          return null\n        }\n\n        // e.g. `a in b`\n        case 'in': {\n          // if `_type` is not on the left hand side of `in` then it can't be determined\n          if (left.type !== 'AccessAttribute' || left.name !== '_type' || left.base) return null\n          // if the right hand side is not an array then the types can't be determined\n          if (right.type !== 'Array') return null\n\n          const types = new Set<string>()\n          // iterate through all the types\n          for (const element of right.elements) {\n            // if we find a splat, then early return, we can't determine the types\n            if (element.isSplat) return null\n            // if the array element is not just a simple value, then early return\n            if (element.value.type !== 'Value') return null\n            // if the array element value is not a string, then early return\n            if (typeof element.value.value !== 'string') return null\n            // otherwise add the element value to the set of types\n            types.add(element.value.value)\n          }\n\n          // if there were any elements in the types set, return it\n          if (types.size) return types\n          // otherwise, the set of types cannot be determined\n          return null\n        }\n\n        default: {\n          return null\n        }\n      }\n    }\n\n    // groups can just be unwrapped, the AST preserves the order\n    case 'Group': {\n      return findTypes(node.base)\n    }\n\n    // e.g. `_type == 'a' || _type == 'b'`\n    // with Or nodes, if we can't determine the types for either the left or\n    // right hand side then we can't determine the types for any\n    // e.g. `_type == 'a' || isActive`\n    // — can't determine types because `isActive` could be true on another types\n    case 'Or': {\n      const left = findTypes(node.left)\n      if (!left) return null\n\n      const right = findTypes(node.right)\n      if (!right) return null\n\n      return new Set([...left, ...right])\n    }\n\n    // e.g. `_type == 'a' && isActive`\n    // with And nodes, we can determine the types as long as we can determine\n    // the types for one side. We can't determine the types if both are `null`.\n    case 'And': {\n      const left = findTypes(node.left)\n      const right = findTypes(node.right)\n\n      if (!left && !right) return null\n      return new Set([...(left || []), ...(right || [])])\n    }\n\n    default: {\n      return null\n    }\n  }\n}\n\nexport function findStaticTypesInFilter(\n  filter: string,\n  params: Record<string, unknown> = {},\n): string[] | null {\n  try {\n    const types = findTypes(parse(filter, {params}))\n    if (!types) return null\n\n    return Array.from(types).sort()\n  } catch {\n    // if we couldn't parse the filter, just return `null`\n    return null\n  }\n}\n","import {type ClientPerspective, type SanityClient} from '@sanity/client'\nimport {\n  asyncScheduler,\n  defer,\n  filter,\n  map,\n  merge,\n  mergeMap,\n  type Observable,\n  of,\n  partition,\n  share,\n  throttleTime,\n  throwError,\n  timer,\n} from 'rxjs'\nimport {scan} from 'rxjs/operators'\nimport {exhaustMapWithTrailing} from 'rxjs-exhaustmap-with-trailing'\nimport {\n  createSearch,\n  createSWR,\n  getSearchableTypes,\n  type SanityDocumentLike,\n  type Schema,\n  type SearchOptions,\n  type SearchStrategy,\n} from 'sanity'\n\nimport {getExtendedProjection} from '../../structureBuilder/util/getExtendedProjection'\nimport {type SortOrder} from './types'\n\ninterface ListenQueryOptions {\n  client: SanityClient\n  filter: string\n  limit: number\n  params: Record<string, unknown>\n  schema: Schema\n  searchQuery: string\n  sort: SortOrder\n  perspective?: ClientPerspective\n  staticTypeNames?: string[] | null\n  maxFieldDepth?: number\n  searchStrategy?: SearchStrategy\n}\n\nexport type SearchQueryEvent =\n  | {\n      type: 'reconnect'\n    }\n  | {type: 'result'; documents: SanityDocumentLike[]}\n\nexport interface SearchQueryState {\n  connected: boolean\n  fromCache: boolean\n  documents: SanityDocumentLike[]\n}\n\nconst swr = createSWR<{connected: boolean; documents: SanityDocumentLike[]}>({maxSize: 100})\n\nexport function listenSearchQuery(options: ListenQueryOptions): Observable<SearchQueryState> {\n  const {\n    client,\n    schema,\n    sort,\n    perspective,\n    limit,\n    params,\n    filter: groqFilter,\n    searchQuery,\n    staticTypeNames,\n    maxFieldDepth,\n    searchStrategy,\n  } = options\n  const sortBy = sort.by\n  const extendedProjection = sort?.extendedProjection\n\n  // Listen for changes with the given filter and params, and whenever a change occurs, we want to\n  // re-fetch the documents that match the search query (see below).\n  // We use a separate listener since the search query is too large to use in a listen query.\n  const events$ = defer(() => {\n    return client.listen(`*[${groqFilter}]`, params, {\n      events: ['welcome', 'mutation', 'reconnect'],\n      includeAllVersions: true,\n      includeResult: false,\n      visibility: 'query',\n      tag: 'listen-search-query',\n    })\n  }).pipe(\n    mergeMap((ev, i) => {\n      const isFirst = i === 0\n      // If we can't establish a connection to the /listen endpoint, the first event we receive will be 'reconnect'\n      // So if we get \"reconnect\" as the first event actually means \"Connection can't be established\"\n      if (isFirst && ev.type === 'reconnect') {\n        // if it's neither welcome nor reconnect, something unexpected has happened.\n        return throwError(() => new Error(`Failed to establish EventSource connection`))\n      }\n      // When a connection is successfully established, the first event will be 'welcome'\n      if (isFirst && ev.type !== 'welcome') {\n        // if it's neither welcome nor reconnect, something unexpected has happened.\n        return throwError(() => new Error(`Received unexpected type of first event \"${ev.type}\"`))\n      }\n      return of(ev)\n    }),\n    share(),\n  )\n\n  const [welcome$, mutationAndReconnect$] = partition(events$, (ev) => ev.type === 'welcome')\n\n  const swrKey = JSON.stringify({\n    fiilter: groqFilter,\n    limit,\n    params,\n    searchQuery,\n    perspective,\n    sort,\n    staticTypeNames,\n  })\n\n  return merge(\n    welcome$,\n    mutationAndReconnect$.pipe(throttleTime(1000, asyncScheduler, {leading: true, trailing: true})),\n  ).pipe(\n    exhaustMapWithTrailing((event): Observable<SearchQueryEvent> => {\n      // Get the types names to use for searching.\n      // If we have a static list of types, we can skip fetching the types and use the static list.\n      const typeNames$ = staticTypeNames\n        ? of(staticTypeNames)\n        : client.observable.fetch(`array::unique(*[${groqFilter}][]._type)`, params)\n\n      // Use the type names to create a search query and fetch the documents that match the query.\n      return typeNames$.pipe(\n        mergeMap((typeNames: string[]) => {\n          const types = getSearchableTypes(schema, staticTypeNames || []).filter((type) => {\n            if (typeNames.includes(type.name)) {\n              // make a call to getExtendedProjection in strict mode to verify that all fields are\n              // known. This method will throw an exception if there are any unknown fields specified\n              // in the sort by list\n              getExtendedProjection(type, sort.by, true)\n              return true\n            }\n            return false\n          })\n\n          const search = createSearch(types, client, {\n            filter: groqFilter,\n            params,\n            strategy: searchStrategy,\n            maxDepth: maxFieldDepth,\n          })\n\n          const doFetch = () => {\n            const searchTerms = {\n              query: searchQuery || '',\n              types,\n            }\n\n            const searchOptions: SearchOptions = {\n              __unstable_extendedProjection: extendedProjection,\n              comments: [`findability-source: ${searchQuery ? 'list-query' : 'list'}`],\n              limit,\n              skipSortByScore: true,\n              sort: sortBy,\n              perspective,\n            }\n\n            return search(searchTerms, searchOptions).pipe(\n              map((result) =>\n                // eslint-disable-next-line max-nested-callbacks\n                result.hits.map(({hit}) => hit),\n              ),\n              map((hits) => ({type: 'result' as const, documents: hits})),\n            )\n          }\n\n          if (event.type === 'mutation' && event.visibility !== 'query') {\n            // Even though the listener request specifies visibility=query, the events are not guaranteed to be delivered with visibility=query\n            // If the event we are responding to arrives with visibility != query, we add a little delay to allow for the updated document to be available for queries\n            // See https://www.sanity.io/docs/listening#visibility-c4786e55c3ff\n            return timer(1200).pipe(mergeMap(doFetch))\n          }\n          if (event.type === 'reconnect') {\n            return of(event)\n          }\n          return doFetch()\n        }),\n      )\n    }),\n    scan(\n      (\n        acc: null | {connected: boolean; documents: SanityDocumentLike[]},\n        event: SearchQueryEvent,\n      ) => ({\n        connected: event.type !== 'reconnect',\n        documents: event.type === 'result' ? event.documents : acc?.documents || [],\n      }),\n      null as null | {connected: boolean; documents: SanityDocumentLike[]},\n    ),\n    filter((v) => v !== null),\n    swr(swrKey),\n    map(({fromCache, value}): SearchQueryState => ({fromCache, ...value})),\n  )\n}\n","import {ChannelError, ClientError, type ClientPerspective, ServerError} from '@sanity/client'\nimport {observableCallback} from 'observable-callback'\nimport {useMemo, useState} from 'react'\nimport {useObservable} from 'react-rx'\nimport {concat, fromEvent, merge, NEVER, of, timer} from 'rxjs'\nimport {\n  filter,\n  map,\n  mergeMap,\n  scan,\n  share,\n  shareReplay,\n  switchMap,\n  take,\n  takeUntil,\n  withLatestFrom,\n} from 'rxjs/operators'\nimport {\n  catchWithCount,\n  DEFAULT_STUDIO_CLIENT_OPTIONS,\n  useClient,\n  useSchema,\n  useSearchMaxFieldDepth,\n  useWorkspace,\n} from 'sanity'\n\nimport {DEFAULT_ORDERING, FULL_LIST_LIMIT, PARTIAL_PAGE_LIMIT} from './constants'\nimport {findStaticTypesInFilter, removePublishedWithDrafts} from './helpers'\nimport {listenSearchQuery} from './listenSearchQuery'\nimport {type DocumentListPaneItem, type SortOrder} from './types'\n\ninterface UseDocumentListOpts {\n  apiVersion?: string\n  filter: string\n  perspective?: ClientPerspective\n  params: Record<string, unknown>\n  searchQuery: string | null\n  sortOrder?: SortOrder\n}\n\ninterface DocumentListState {\n  error: {message: string} | null\n  isLoadingFullList: boolean\n  isLoading: boolean\n  connected?: boolean\n  isRetrying: boolean\n  autoRetry: boolean\n  canRetry: boolean\n  retryCount: number\n  fromCache?: boolean\n  items: DocumentListPaneItem[]\n}\n\nconst INITIAL_QUERY_STATE: DocumentListState = {\n  error: null,\n  isRetrying: false,\n  retryCount: 0,\n  autoRetry: false,\n  canRetry: false,\n  isLoading: true,\n  isLoadingFullList: false,\n  fromCache: false,\n  items: [],\n}\n\ninterface UseDocumentListHookValue extends DocumentListState {\n  onRetry: () => void\n  onLoadFullList: () => void\n}\n\n/**\n * Determine whether an error should be possible to retry\n * @param error - Any caught error\n */\nfunction isRetriableError(error: unknown) {\n  if (error instanceof ChannelError) {\n    // Usually indicative of a bad or malformed request\n    return false\n  }\n  if (error instanceof ServerError) {\n    // >= 500\n    return true\n  }\n  if (error instanceof ClientError) {\n    // >= 400\n    // note: 403 Forbidden makes sense to retry, because it's a potentially passing condition\n    return error.statusCode === 403\n  }\n  return true\n}\n\n/**\n * @internal\n */\nexport function useDocumentList(opts: UseDocumentListOpts): UseDocumentListHookValue {\n  const {\n    filter: searchFilter,\n    params: paramsProp,\n    sortOrder,\n    searchQuery,\n    perspective,\n    apiVersion,\n  } = opts\n  const client = useClient({\n    ...DEFAULT_STUDIO_CLIENT_OPTIONS,\n    apiVersion: apiVersion || DEFAULT_STUDIO_CLIENT_OPTIONS.apiVersion,\n  })\n  const {strategy: searchStrategy} = useWorkspace().search\n  const schema = useSchema()\n  const maxFieldDepth = useSearchMaxFieldDepth()\n\n  // Get the type name from the filter, if it is a simple type filter.\n  const typeNameFromFilter = useMemo(\n    () => findStaticTypesInFilter(searchFilter, paramsProp),\n    [searchFilter, paramsProp],\n  )\n\n  const [[onRetry$, onRetry]] = useState(() => observableCallback())\n  const [[onFetchFullList$, onLoadFullList]] = useState(() => observableCallback())\n\n  const queryResults$ = useMemo(() => {\n    const listenSearchQueryArgs = {\n      client,\n      filter: searchFilter,\n      limit: PARTIAL_PAGE_LIMIT,\n      params: paramsProp,\n      schema,\n      perspective,\n      searchQuery: searchQuery || '',\n      sort: sortOrder || DEFAULT_ORDERING,\n      staticTypeNames: typeNameFromFilter,\n      maxFieldDepth,\n      searchStrategy,\n    }\n\n    const partialList$ = listenSearchQuery(listenSearchQueryArgs).pipe(\n      shareReplay({refCount: true, bufferSize: 1}),\n    )\n\n    // we want to fetch the full list if the last result of the partial list is at the limit\n    const fullList$ = onFetchFullList$.pipe(\n      withLatestFrom(partialList$),\n      filter(([, result]) => result?.documents.length === PARTIAL_PAGE_LIMIT),\n      // we want to set up the full list listener only once\n      take(1),\n      mergeMap(() =>\n        concat(\n          of({type: 'loadFullList' as const}),\n          listenSearchQuery({...listenSearchQueryArgs, limit: FULL_LIST_LIMIT}).pipe(\n            map((result) => ({type: 'result' as const, result})),\n          ),\n        ),\n      ),\n      share(),\n    )\n\n    // The combined search results from both partial page and full list\n    return merge(\n      partialList$.pipe(\n        map((result) => ({\n          type: 'result' as const,\n          result,\n        })),\n        // when the full list listener kicks off, we want to stop the partial list listener\n        takeUntil(fullList$),\n      ),\n      fullList$,\n    ).pipe(\n      catchWithCount((lastError, retryCount, caught$) => {\n        const error = safeError(lastError)\n        const isOnline = window.navigator.onLine\n        const canRetry = isOnline && isRetriableError(lastError)\n        const autoRetry = retryCount < 10\n        const retries = merge(\n          isOnline ? onRetry$ : fromEvent(window, 'online'),\n          isOnline && autoRetry ? timer(retryCount * 1_000) : NEVER,\n        ).pipe(\n          take(1),\n          switchMap(() =>\n            merge(\n              of({\n                type: 'error' as const,\n                error,\n                retrying: true,\n                autoRetry,\n                canRetry,\n                retryCount,\n              }),\n              caught$,\n            ),\n          ),\n        )\n        return concat(\n          of({\n            type: 'error' as const,\n            error,\n            retrying: false,\n            autoRetry,\n            canRetry,\n            retryCount,\n          }),\n          retries,\n        )\n      }),\n      scan((prev, event) => {\n        if (event.type === 'error') {\n          return {\n            ...prev,\n            error: event.error,\n            retryCount: event.retryCount,\n            isRetrying: event.retrying,\n            autoRetry: event.autoRetry,\n            canRetry: event.canRetry,\n          }\n        }\n        if (event.type === 'result') {\n          return {\n            ...prev,\n            error: null,\n            isRetrying: false,\n            fromCache: event.result.fromCache,\n            connected: event.result.connected,\n            isLoading: false,\n            items: removePublishedWithDrafts(event.result.documents),\n            isLoadingFullList: false,\n          }\n        }\n        if (event.type === 'loadFullList') {\n          return {\n            ...prev,\n            error: null,\n            isLoadingFullList: true,\n          }\n        }\n        // @ts-expect-error - all cases should be covered\n        throw new Error(`Unexpected event type: ${event.type}`)\n      }, INITIAL_QUERY_STATE),\n    )\n  }, [\n    client,\n    searchFilter,\n    paramsProp,\n    schema,\n    perspective,\n    searchQuery,\n    sortOrder,\n    typeNameFromFilter,\n    maxFieldDepth,\n    searchStrategy,\n    onFetchFullList$,\n    onRetry$,\n  ])\n\n  const {\n    error,\n    items,\n    isLoading,\n    fromCache,\n    connected,\n    canRetry,\n    isLoadingFullList,\n    isRetrying,\n    autoRetry,\n    retryCount,\n  } = useObservable(queryResults$, INITIAL_QUERY_STATE)\n\n  return {\n    error,\n    onRetry,\n    isLoading,\n    items,\n    isRetrying,\n    canRetry,\n    retryCount,\n    autoRetry,\n    connected,\n    fromCache,\n    onLoadFullList,\n    isLoadingFullList,\n  }\n}\n\n// todo: candidate for re-use\nconst nonErrorThrownWarning = `[WARNING: This was thrown as a non-error. Only Error instances should be thrown]`\nfunction safeError(thrown: unknown): Error {\n  if (thrown instanceof Error) {\n    return thrown\n  }\n  if (typeof thrown === 'object' && thrown !== null) {\n    if ('message' in thrown && typeof thrown.message === 'string') {\n      return new Error(`${thrown.message} ${nonErrorThrownWarning}`)\n    }\n    return new Error(`${String(thrown)} ${nonErrorThrownWarning}`)\n  }\n  return new Error(`${String(thrown)} ${nonErrorThrownWarning}`)\n}\n","import {SearchIcon, SpinnerIcon} from '@sanity/icons'\nimport {Box, TextInput} from '@sanity/ui'\nimport {memo, useCallback, useEffect, useMemo, useState} from 'react'\nimport {useObservableEvent} from 'react-rx'\nimport {debounce, map, type Observable, of, tap, timer} from 'rxjs'\nimport {\n  type GeneralPreviewLayoutKey,\n  useActiveReleases,\n  useI18nText,\n  usePerspective,\n  useReconnectingToast,\n  useSchema,\n  useTranslation,\n  useUnique,\n} from 'sanity'\nimport {keyframes, styled} from 'styled-components'\n\nimport {structureLocaleNamespace} from '../../i18n'\nimport {type BaseStructureToolPaneProps} from '../types'\nimport {EMPTY_RECORD, FULL_LIST_LIMIT} from './constants'\nimport {DocumentListPaneContent} from './DocumentListPaneContent'\nimport {applyOrderingFunctions, findStaticTypesInFilter} from './helpers'\nimport {useShallowUnique} from './PaneContainer'\nimport {type LoadingVariant, type SortOrder} from './types'\nimport {useDocumentList} from './useDocumentList'\n\n/**\n * @internal\n */\nexport type DocumentListPaneProps = BaseStructureToolPaneProps<'documentList'> & {\n  sortOrder?: SortOrder\n  layout?: Exclude<GeneralPreviewLayoutKey, 'sheetList'>\n}\n\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`\n\nconst fadeIn = keyframes`\n  0% {\n    opacity: 0;\n  }\n  50% {\n    opacity: 0.1;\n  }\n  100% {\n    opacity: 0.4;\n  }\n`\n\nconst AnimatedSpinnerIcon = styled(SpinnerIcon)`\n  animation: ${rotate} 500ms linear infinite;\n`\n\nconst SubtleSpinnerIcon = styled(SpinnerIcon)`\n  animation: ${rotate} 1500ms linear infinite;\n  opacity: 0.4;\n`\n\nconst DelayedSubtleSpinnerIcon = styled(SpinnerIcon)`\n  animation:\n    ${rotate} 1500ms linear infinite,\n    ${fadeIn} 1000ms linear;\n  opacity: 0.4;\n`\n\n/**\n * @internal\n */\n\nexport const DocumentListPane = memo(function DocumentListPane(props: DocumentListPaneProps) {\n  const {childItemId, isActive, pane, paneKey, sortOrder: sortOrderRaw, layout} = props\n  const schema = useSchema()\n  const releases = useActiveReleases()\n  const {perspectiveStack} = usePerspective()\n  const {displayOptions, options} = pane\n  const {apiVersion, filter} = options\n  const params = useShallowUnique(options.params || EMPTY_RECORD)\n  const typeName = useMemo(() => {\n    const staticTypes = findStaticTypesInFilter(filter, params)\n    if (staticTypes?.length === 1) return staticTypes[0]\n    return null\n  }, [filter, params])\n\n  const showIcons = displayOptions?.showIcons !== false\n\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {title} = useI18nText(pane)\n\n  const [searchQuery, setSearchQuery] = useState<string>('')\n  const [searchInputValue, setSearchInputValue] = useState<string>('')\n  const [searchInputElement, setSearchInputElement] = useState<HTMLInputElement | null>(null)\n\n  const sortWithOrderingFn =\n    typeName && sortOrderRaw\n      ? applyOrderingFunctions(sortOrderRaw, schema.get(typeName) as any)\n      : sortOrderRaw\n\n  const sortOrder = useUnique(sortWithOrderingFn)\n\n  const {\n    error,\n    isLoadingFullList,\n    isLoading: documentListIsLoading,\n    items,\n    fromCache,\n    isRetrying,\n    autoRetry,\n    canRetry,\n    retryCount,\n    connected,\n    onLoadFullList,\n    onRetry,\n  } = useDocumentList({\n    apiVersion,\n    filter,\n    perspective: perspectiveStack,\n    params,\n    searchQuery: searchQuery?.trim(),\n    sortOrder,\n  })\n\n  const isLoading = documentListIsLoading || releases.loading\n\n  const handleQueryChange = useObservableEvent(\n    (event$: Observable<React.ChangeEvent<HTMLInputElement>>) => {\n      return event$.pipe(\n        map((event) => event.target.value),\n        tap(setSearchInputValue),\n        debounce((value) => (value === '' ? of('') : timer(300))),\n        tap(setSearchQuery),\n      )\n    },\n  )\n\n  const handleClearSearch = useCallback(() => {\n    setSearchQuery('')\n    setSearchInputValue('')\n  }, [])\n\n  const handleSearchKeyDown = useCallback(\n    (event: React.KeyboardEvent<HTMLInputElement>) => {\n      if (event.key === 'Escape') {\n        handleClearSearch()\n      }\n    },\n    [handleClearSearch],\n  )\n\n  const [enableSearchSpinner, setEnableSearchSpinner] = useState<string | void>()\n\n  useEffect(() => {\n    if (!enableSearchSpinner && !isLoading) {\n      setEnableSearchSpinner(paneKey)\n    }\n  }, [enableSearchSpinner, isLoading, paneKey])\n\n  useEffect(() => {\n    // Clear search field and disable search spinner\n    // when switching between panes (i.e. when paneKey changes).\n    handleClearSearch()\n    setEnableSearchSpinner()\n  }, [paneKey, handleClearSearch])\n\n  const loadingVariant: LoadingVariant = useMemo(() => {\n    if (connected && isLoading && enableSearchSpinner === paneKey) {\n      return 'spinner'\n    }\n    if (connected && fromCache) {\n      return 'subtle'\n    }\n\n    return 'initial'\n  }, [connected, enableSearchSpinner, fromCache, isLoading, paneKey])\n\n  const textInputIcon = useMemo(() => {\n    if (loadingVariant === 'spinner') {\n      return AnimatedSpinnerIcon\n    }\n    if (searchInputValue && loadingVariant === 'subtle') {\n      return SubtleSpinnerIcon\n    }\n    return SearchIcon\n  }, [loadingVariant, searchInputValue])\n\n  useReconnectingToast(!connected)\n\n  return (\n    <>\n      <Box paddingX={3} paddingBottom={3}>\n        <TextInput\n          aria-label={t('panes.document-list-pane.search-input.aria-label')}\n          autoComplete=\"off\"\n          border={false}\n          clearButton={Boolean(searchQuery)}\n          fontSize={[2, 2, 1]}\n          icon={textInputIcon}\n          iconRight={\n            !connected || (loadingVariant === 'subtle' && !searchInputValue)\n              ? DelayedSubtleSpinnerIcon\n              : null\n          }\n          onChange={handleQueryChange}\n          onClear={handleClearSearch}\n          onKeyDown={handleSearchKeyDown}\n          padding={2}\n          placeholder={t('panes.document-list-pane.search-input.placeholder')}\n          radius={2}\n          ref={setSearchInputElement}\n          spellCheck={false}\n          value={searchInputValue}\n        />\n      </Box>\n      <DocumentListPaneContent\n        key={paneKey}\n        childItemId={childItemId}\n        error={error}\n        filterIsSimpleTypeConstraint={!!typeName}\n        hasMaxItems={items.length === FULL_LIST_LIMIT}\n        hasSearchQuery={Boolean(searchQuery)}\n        isActive={isActive}\n        isLazyLoading={isLoadingFullList}\n        isLoading={isLoading}\n        autoRetry={autoRetry}\n        canRetry={canRetry}\n        retryCount={retryCount}\n        isRetrying={isRetrying}\n        isConnected={connected}\n        items={items}\n        layout={layout}\n        muted={loadingVariant === 'subtle'}\n        loadingVariant={loadingVariant}\n        onEndReached={onLoadFullList}\n        onRetry={onRetry}\n        paneTitle={title}\n        searchInputElement={searchInputElement}\n        showIcons={showIcons}\n      />\n    </>\n  )\n})\n","import {ArrowLeftIcon} from '@sanity/icons'\nimport {memo, type ReactNode, useMemo} from 'react'\nimport {type GeneralPreviewLayoutKey, type InitialValueTemplateItem} from 'sanity'\n\nimport {Button, TooltipDelayGroupProvider} from '../../../ui-components'\nimport {\n  BackLink,\n  PaneHeader as StructurePaneHeader,\n  PaneHeaderActions,\n  usePane,\n} from '../../components'\nimport {\n  type PaneMenuItem,\n  type PaneMenuItemGroup,\n  type StructureToolPaneActionHandler,\n} from '../../types'\nimport {useStructureTool} from '../../useStructureTool'\nimport {type SortOrder} from './types'\n\ninterface PaneHeaderProps {\n  contentAfter?: ReactNode\n  index: number\n  initialValueTemplates?: InitialValueTemplateItem[]\n  menuItemGroups?: PaneMenuItemGroup[]\n  menuItems?: PaneMenuItem[]\n  setLayout: (layout: GeneralPreviewLayoutKey) => void\n  setSortOrder: (sortOrder: SortOrder) => void\n  title: string\n}\n\nexport const PaneHeader = memo(\n  ({\n    contentAfter,\n    index,\n    initialValueTemplates = [],\n    menuItemGroups = [],\n    menuItems = [],\n    setLayout,\n    setSortOrder,\n    title,\n  }: PaneHeaderProps) => {\n    const {features} = useStructureTool()\n    const {collapsed, isLast} = usePane()\n    // Prevent focus if this is the last (non-collapsed) pane.\n    const tabIndex = isLast && !collapsed ? -1 : 0\n\n    const actionHandlers = useMemo((): Record<string, StructureToolPaneActionHandler> => {\n      return {\n        setLayout: ({layout: value}: {layout: GeneralPreviewLayoutKey}) => {\n          setLayout(value)\n        },\n        setSortOrder: (sort: SortOrder) => {\n          setSortOrder(sort)\n        },\n      }\n    }, [setLayout, setSortOrder])\n\n    return (\n      <TooltipDelayGroupProvider>\n        <StructurePaneHeader\n          actions={\n            <PaneHeaderActions\n              initialValueTemplateItems={initialValueTemplates}\n              actionHandlers={actionHandlers}\n              menuItemGroups={menuItemGroups}\n              menuItems={menuItems}\n            />\n          }\n          backButton={\n            features.backButton &&\n            index > 0 && (\n              <Button\n                as={BackLink}\n                data-as=\"a\"\n                icon={ArrowLeftIcon}\n                mode=\"bleed\"\n                tooltipProps={{content: 'Back'}}\n              />\n            )\n          }\n          contentAfter={contentAfter}\n          tabIndex={tabIndex}\n          title={title}\n        />\n      </TooltipDelayGroupProvider>\n    )\n  },\n)\n\nPaneHeader.displayName = 'Memo(PaneHeader)'\n","'use no memo'\n// The `use no memo` directive is due to a known issue with react-table and react compiler: https://github.com/TanStack/table/issues/5567\n\nimport {type SanityDocument} from '@sanity/client'\nimport {Checkbox} from '@sanity/ui'\nimport {type CellContext} from '@tanstack/react-table'\nimport {type MouseEvent, useCallback} from 'react'\n\nexport function DocumentSheetListSelect(props: CellContext<SanityDocument, unknown>) {\n  const {row, table} = props\n\n  const {selectedAnchor, setSelectedAnchor} = table.options.meta || {}\n\n  const handleOnClick = useCallback(\n    (e: MouseEvent<HTMLInputElement>) => {\n      if (e.shiftKey && selectedAnchor !== null && selectedAnchor !== undefined) {\n        const shiftClickIndex = row.index\n        const lowerIndex = shiftClickIndex < selectedAnchor ? shiftClickIndex : selectedAnchor\n        const upperIndex = shiftClickIndex < selectedAnchor ? selectedAnchor : shiftClickIndex\n\n        const additionalSelectedRows = table\n          .getRowModel()\n          .flatRows.slice(lowerIndex, upperIndex + 1)\n          .map(({id}) => id)\n\n        const currentSelectedRows = table.getSelectedRowModel().rows.map(({id}) => id)\n        table.setRowSelection(() =>\n          [...additionalSelectedRows, ...currentSelectedRows].reduce(\n            (nextSelectedRows, rowId) => ({...nextSelectedRows, [rowId]: true}),\n            {},\n          ),\n        )\n      } else if (setSelectedAnchor) {\n        const isRowCurrentlySelected = row.getIsSelected()\n        if (isRowCurrentlySelected) {\n          // about to unselect so invalidate current anchor\n          setSelectedAnchor(null)\n        } else {\n          // override anchor with new selection index\n          setSelectedAnchor(row.index)\n        }\n\n        row.toggleSelected()\n      }\n    },\n    [selectedAnchor, row, setSelectedAnchor, table],\n  )\n\n  return (\n    <Checkbox\n      style={{paddingLeft: 4}}\n      checked={props.row.getIsSelected()}\n      disabled={!props.row.getCanSelect()}\n      // onChange doesn't have shiftKey in event, but want to control this checkbox\n      // need to define noop onChange to suppress the warning\n      // eslint-disable-next-line react/jsx-no-bind\n      onChange={() => null}\n      onClick={handleOnClick}\n    />\n  )\n}\n","import {type SanityDocument} from '@sanity/types'\nimport {type Table} from '@tanstack/react-table'\nimport {type ReactNode, useCallback, useContext, useEffect, useMemo, useState} from 'react'\nimport {DocumentSheetListContext} from 'sanity/_singletons'\n\ninterface DocumentSheetListProviderProps {\n  children?: ReactNode\n  table: Table<SanityDocument>\n}\n\ntype SelectedCellDetails = {\n  colId: string\n  rowIndex: number\n  state: 'focused' | 'selected'\n} | null\n\n/** @internal */\nexport interface DocumentSheetListContextValue {\n  focusAnchorCell: () => void\n  resetFocusSelection: () => void\n  setSelectedAnchorCell: (colId: string, rowIndex: number) => void\n  getStateByCellId: (\n    colId: string,\n    rowIndex: number,\n  ) => 'focused' | 'selectedAnchor' | 'selectedRange' | null\n  submitFocusedCell: () => void\n}\n\n/** @internal */\nexport const useDocumentSheetListContext = (): DocumentSheetListContextValue => {\n  const context = useContext(DocumentSheetListContext)\n\n  if (context === undefined) {\n    throw new Error('useDocumentSheetListContext must be used within an DocumentSheetListProvider')\n  }\n  return context\n}\n\n/** @internal */\nexport function DocumentSheetListProvider({\n  children,\n  table,\n}: DocumentSheetListProviderProps): ReactNode {\n  const [selectedAnchorCellDetails, setSelectedAnchorCellDetails] =\n    useState<SelectedCellDetails>(null)\n  const [selectedRangeCellIndexes, setSelectedRangeCellIndexes] = useState<number[]>([])\n\n  const clearAndSetFocusSelection = useCallback(\n    (nextAnchorDetails: SelectedCellDetails = null) => {\n      if (\n        selectedAnchorCellDetails?.state === 'focused' &&\n        document.activeElement instanceof HTMLElement\n      ) {\n        document.activeElement.blur()\n      }\n\n      setSelectedAnchorCellDetails(nextAnchorDetails)\n      setSelectedRangeCellIndexes([])\n    },\n    [selectedAnchorCellDetails],\n  )\n\n  const resetFocusSelection = useCallback(\n    () => clearAndSetFocusSelection(),\n    [clearAndSetFocusSelection],\n  )\n\n  const changeSelectionColumn = useCallback(\n    (direction: 'left' | 'right') => {\n      if (!selectedAnchorCellDetails) return\n\n      const visibleColumns = table.getVisibleLeafColumns()\n      const columnIndexAfterMove =\n        visibleColumns.findIndex((col) => col.id === selectedAnchorCellDetails.colId) +\n        (direction === 'left' ? -1 : 1)\n\n      if (columnIndexAfterMove < 0 || columnIndexAfterMove >= visibleColumns.length) return\n\n      clearAndSetFocusSelection({\n        colId: visibleColumns[columnIndexAfterMove].id,\n        rowIndex: selectedAnchorCellDetails.rowIndex,\n        state: 'selected',\n      })\n    },\n    [clearAndSetFocusSelection, selectedAnchorCellDetails, table],\n  )\n\n  const changeSelectionRange = useCallback(\n    (direction: 'up' | 'down') => {\n      if (!selectedAnchorCellDetails) return\n\n      setSelectedRangeCellIndexes((previousSelection) => {\n        const {rowIndex: anchorIndex} = selectedAnchorCellDetails\n        const getNextIndex = (startingIndex: number) =>\n          startingIndex + (direction === 'down' ? 1 : -1)\n        // if no cells are selected, select the cell in the direction\n        if (!previousSelection.length) {\n          const firstSelectedIndex = getNextIndex(anchorIndex)\n          if (firstSelectedIndex < 0) return []\n          return [firstSelectedIndex]\n        }\n        const lastIndexSelected = previousSelection[previousSelection.length - 1]\n        const nextIndex = getNextIndex(lastIndexSelected)\n\n        // if the cell in the direction is out of bounds, return the previous selection\n        if (nextIndex < 0) return previousSelection\n\n        // if the cell in the direction is the same as the focused cell, deselect all cells\n        if (nextIndex === anchorIndex) return []\n\n        // if the cell in the direction is already selected, deselect the last selected cell\n        if (previousSelection.includes(nextIndex)) {\n          return previousSelection.slice(0, -1)\n        }\n\n        return [...previousSelection, nextIndex]\n      })\n    },\n    [selectedAnchorCellDetails],\n  )\n\n  const setSelectedAnchorCell = useCallback(\n    (colId: string, rowIndex: number) => {\n      clearAndSetFocusSelection({colId, rowIndex, state: 'selected'})\n    },\n    [clearAndSetFocusSelection],\n  )\n\n  const handleEscapePress = useCallback(() => {\n    if (!selectedAnchorCellDetails) return\n    if (selectedRangeCellIndexes.length) {\n      // only clear selected range if it exists\n      setSelectedRangeCellIndexes([])\n    } else {\n      const nextAnchorCellDetails: SelectedCellDetails =\n        selectedAnchorCellDetails.state === 'selected'\n          ? null\n          : {\n              ...selectedAnchorCellDetails,\n              state: 'selected',\n            }\n      clearAndSetFocusSelection(nextAnchorCellDetails)\n    }\n  }, [clearAndSetFocusSelection, selectedAnchorCellDetails, selectedRangeCellIndexes.length])\n\n  const handleUpDownKey = useCallback(\n    (isShiftKey: boolean, key: string) => {\n      if (!selectedAnchorCellDetails) return\n\n      const direction = key === 'ArrowDown' ? 'down' : 'up'\n      const offset = direction === 'down' ? 1 : -1\n\n      if (isShiftKey) {\n        changeSelectionRange(direction)\n      } else {\n        const newSelectedCellRowIndex = selectedAnchorCellDetails.rowIndex + offset\n        if (newSelectedCellRowIndex < 0) return\n\n        setSelectedAnchorCell(selectedAnchorCellDetails.colId, newSelectedCellRowIndex)\n      }\n    },\n    [changeSelectionRange, selectedAnchorCellDetails, setSelectedAnchorCell],\n  )\n\n  const handleAnchorKeydown = useCallback(\n    (event: KeyboardEvent) => {\n      if (!selectedAnchorCellDetails) return\n\n      const {key, shiftKey} = event\n\n      switch (key) {\n        case 'Shift':\n          break // shift allow should do nothing\n\n        case 'Escape':\n          handleEscapePress()\n          break\n\n        case 'ArrowDown':\n        case 'ArrowUp':\n          event.preventDefault()\n          handleUpDownKey(shiftKey, key)\n          break\n\n        case 'ArrowLeft':\n        case 'ArrowRight':\n          // when cell is focused, arrows should have default behavior\n          // only prevent default when cell is selected\n          if (selectedAnchorCellDetails.state === 'selected') {\n            event.preventDefault()\n            changeSelectionColumn(key === 'ArrowLeft' ? 'left' : 'right')\n          }\n          break\n\n        default:\n          break\n      }\n    },\n    [selectedAnchorCellDetails, handleEscapePress, handleUpDownKey, changeSelectionColumn],\n  )\n\n  const handleAnchorClick = useCallback(\n    (event: MouseEvent) => {\n      if (!selectedAnchorCellDetails) return\n      const isClickInAnchorCell = document\n        .getElementById(\n          `cell-${selectedAnchorCellDetails.colId}-${selectedAnchorCellDetails.rowIndex}`,\n        )\n        ?.contains(event.target as Node)\n\n      if (!isClickInAnchorCell) resetFocusSelection()\n    },\n    [resetFocusSelection, selectedAnchorCellDetails],\n  )\n\n  useEffect(() => {\n    if (selectedAnchorCellDetails) {\n      document.addEventListener('keydown', handleAnchorKeydown)\n      document.addEventListener('click', handleAnchorClick)\n    }\n\n    return () => {\n      if (selectedAnchorCellDetails) {\n        document.removeEventListener('keydown', handleAnchorKeydown)\n        document.removeEventListener('click', handleAnchorClick)\n      }\n    }\n  }, [handleAnchorClick, handleAnchorKeydown, selectedAnchorCellDetails])\n\n  const focusAnchorCell = useCallback(\n    () =>\n      setSelectedAnchorCellDetails((anchorCellDetails) => {\n        if (!anchorCellDetails) return null\n\n        return {...anchorCellDetails, state: 'focused'}\n      }),\n    [],\n  )\n\n  const getStateByCellId = useCallback(\n    (colId: string, rowIndex: number) => {\n      if (selectedAnchorCellDetails?.colId !== colId) return null\n\n      if (selectedAnchorCellDetails.rowIndex === rowIndex)\n        return selectedAnchorCellDetails.state === 'focused' ? 'focused' : 'selectedAnchor'\n\n      if (selectedRangeCellIndexes.includes(rowIndex)) return 'selectedRange'\n\n      return null\n    },\n    [selectedAnchorCellDetails, selectedRangeCellIndexes],\n  )\n\n  const submitFocusedCell = useCallback(() => {\n    if (!selectedAnchorCellDetails) return\n\n    clearAndSetFocusSelection({\n      colId: selectedAnchorCellDetails.colId,\n      rowIndex: selectedAnchorCellDetails.rowIndex + 1,\n      state: 'selected',\n    })\n  }, [clearAndSetFocusSelection, selectedAnchorCellDetails])\n\n  const value = useMemo<DocumentSheetListContextValue>(\n    () => ({\n      focusAnchorCell,\n      resetFocusSelection,\n      setSelectedAnchorCell,\n      getStateByCellId,\n      submitFocusedCell,\n    }),\n    [\n      focusAnchorCell,\n      resetFocusSelection,\n      setSelectedAnchorCell,\n      getStateByCellId,\n      submitFocusedCell,\n    ],\n  )\n\n  return (\n    <DocumentSheetListContext.Provider value={value}>{children}</DocumentSheetListContext.Provider>\n  )\n}\n","'use no memo'\n// The `use no memo` directive is due to a known issue with react-table and react compiler: https://github.com/TanStack/table/issues/5567\n\n/* eslint-disable i18next/no-literal-string */\nimport {type ObjectFieldType} from '@sanity/types'\nimport {Select, TextInput} from '@sanity/ui'\nimport {type Cell, type CellContext, flexRender} from '@tanstack/react-table'\nimport {type MouseEventHandler, useCallback, useEffect, useRef, useState} from 'react'\nimport {type SanityDocument} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {useDocumentSheetListContext} from './DocumentSheetListProvider'\n\nconst DataCell = styled.td<{width: number}>`\n  display: flex;\n  overflow: hidden;\n  box-sizing: border-box;\n  width: ${({width}) => width}px;\n  border-top: 1px solid var(--card-border-color);\n  background-color: var(--card-bg-color);\n`\n\nconst PinnedDataCell = styled(DataCell)`\n  position: sticky;\n  z-index: 2;\n`\n\ninterface SheetListCellInnerProps extends CellContext<SanityDocument, unknown> {\n  fieldType: ObjectFieldType\n}\n\ntype CellInputElement = HTMLInputElement | HTMLSelectElement\ntype InputRef = CellInputElement | null\n\n/** @internal */\nexport function SheetListCellInner(props: SheetListCellInnerProps) {\n  const {getValue, column, row, fieldType} = props\n  const cellId = `cell-${column.id}-${row.index}`\n  const [renderValue, setRenderValue] = useState<string>(getValue() as string)\n  const [isDirty, setIsDirty] = useState(false)\n  const inputRef = useRef<InputRef>(null)\n  const {\n    focusAnchorCell,\n    resetFocusSelection,\n    setSelectedAnchorCell,\n    getStateByCellId,\n    submitFocusedCell,\n  } = useDocumentSheetListContext()\n  const cellState = getStateByCellId(column.id, row.index)\n\n  const handleOnFocus = useCallback(() => {\n    // reselect in cases where focus achieved without initial mousedown\n    setSelectedAnchorCell(column.id, row.index)\n    focusAnchorCell()\n  }, [column.id, focusAnchorCell, row.index, setSelectedAnchorCell])\n  const {patchDocument} = props.table.options.meta || {}\n\n  const handleProgrammaticFocus = () => {\n    inputRef.current?.focus()\n    if (inputRef.current instanceof HTMLInputElement) {\n      inputRef.current.select()\n    }\n  }\n\n  const handleOnMouseDown: MouseEventHandler<CellInputElement> = (event) => {\n    if (event.detail === 2) {\n      handleProgrammaticFocus()\n    } else {\n      event.preventDefault()\n      setSelectedAnchorCell(column.id, row.index)\n    }\n  }\n\n  const handleOnEnterDown = useCallback(\n    (event: KeyboardEvent) => {\n      const {key} = event\n      if (key === 'Enter') {\n        if (cellState === 'selectedAnchor') handleProgrammaticFocus()\n        if (cellState === 'focused') submitFocusedCell()\n      }\n    },\n    [cellState, submitFocusedCell],\n  )\n\n  const handleOnChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setIsDirty(true)\n    setRenderValue(event.target.value)\n  }\n\n  const handleOnBlur = () => {\n    if (isDirty) {\n      patchDocument?.(row.id, column.id, renderValue)\n      setIsDirty(false)\n    }\n    resetFocusSelection()\n  }\n\n  const handlePaste = useCallback(\n    (event: ClipboardEvent) => {\n      const clipboardData = event.clipboardData?.getData('Text')\n\n      if (typeof clipboardData === 'string' || typeof clipboardData === 'number') {\n        setRenderValue(clipboardData)\n        // patch immediately when pasting\n        patchDocument?.(row.id, column.id, clipboardData)\n      }\n    },\n    [column.id, patchDocument, row.id],\n  )\n\n  const handleCopy = useCallback(() => {\n    navigator.clipboard.writeText(renderValue.toString())\n  }, [renderValue])\n\n  useEffect(() => {\n    if (cellState === 'selectedAnchor' || cellState === 'focused')\n      // only listen for enter key when cell is focused or anchor\n      document.addEventListener('keydown', handleOnEnterDown)\n    if (cellState === 'selectedAnchor' || cellState === 'selectedRange')\n      // if cell is selected, paste events should be handled\n      document.addEventListener('paste', handlePaste)\n\n    if (cellState === 'selectedAnchor')\n      // only allow copying when cell is selected anchor\n      document.addEventListener('copy', handleCopy)\n\n    return () => {\n      if (cellState === 'selectedAnchor' || cellState === 'focused')\n        document.removeEventListener('keydown', handleOnEnterDown)\n      if (cellState === 'selectedAnchor' || cellState === 'selectedRange')\n        document.removeEventListener('paste', handlePaste)\n      if (cellState === 'selectedAnchor') document.removeEventListener('copy', handleCopy)\n    }\n  }, [\n    cellId,\n    cellState,\n    column.id,\n    getStateByCellId,\n    handleCopy,\n    handleOnEnterDown,\n    handlePaste,\n    row.index,\n  ])\n\n  const getBorderStyle = () => {\n    if (cellState === 'focused') return '2px solid blue'\n    if (cellState === 'selectedRange') return '1px solid green'\n    if (cellState === 'selectedAnchor') return '1px solid blue'\n\n    return '1px solid transparent'\n  }\n\n  const inputProps = {\n    'onFocus': handleOnFocus,\n    'onBlur': handleOnBlur,\n    'onMouseDown': handleOnMouseDown,\n    'aria-selected': !!cellState,\n    'data-testid': cellId,\n    'id': cellId,\n    'ref': (ref: InputRef) => {\n      inputRef.current = ref\n    },\n  }\n\n  if (fieldType.name === 'boolean') {\n    return (\n      <Select\n        {...inputProps}\n        onChange={() => null}\n        radius={0}\n        style={{\n          boxShadow: 'none',\n          border: getBorderStyle(),\n          padding: 0,\n        }}\n        value={JSON.stringify(renderValue)}\n      >\n        <option value=\"True\">True</option>\n        <option value=\"False\">False</option>\n      </Select>\n    )\n  }\n\n  return (\n    <TextInput\n      {...inputProps}\n      size={0}\n      radius={0}\n      border={false}\n      style={{\n        border: getBorderStyle(),\n        padding: '22px 16px',\n      }}\n      value={\n        typeof renderValue === 'string' || typeof renderValue === 'number'\n          ? renderValue\n          : JSON.stringify(renderValue)\n      }\n      onChange={handleOnChange}\n    />\n  )\n}\n\n/** @internal */\nexport function SheetListCell(cell: Cell<SanityDocument, unknown>) {\n  const isPinned = cell.column.getIsPinned()\n  const Cell = isPinned ? PinnedDataCell : DataCell\n  const borderWidth = isPinned && cell.column.getIsLastColumn('left') ? 2 : 1\n\n  return (\n    <Cell\n      key={cell.row.original._id + cell.id}\n      style={{\n        left: cell.column.getStart('left') ?? undefined,\n        borderRight: `${borderWidth}px solid var(--card-border-color)`,\n      }}\n      width={cell.column.getSize()}\n    >\n      {flexRender(cell.column.columnDef.cell, cell.getContext?.())}\n    </Cell>\n  )\n}\n","'use no memo'\n// The `use no memo` directive is due to a known issue with react-table and react compiler: https://github.com/TanStack/table/issues/5567\n\nimport {isObjectSchemaType, type ObjectSchemaType} from '@sanity/types'\nimport {Box, Checkbox, Flex, Text} from '@sanity/ui'\nimport {\n  type AccessorKeyColumnDef,\n  createColumnHelper,\n  type GroupColumnDef,\n  type VisibilityState,\n} from '@tanstack/react-table'\nimport {useMemo} from 'react'\nimport {useObservable} from 'react-rx'\nimport {\n  type DocumentPreviewStore,\n  DocumentStatusIndicator,\n  getPreviewStateObservable,\n  type SanityDocument,\n  type SchemaType,\n  useDocumentPreviewStore,\n  useDocumentVersionInfo,\n} from 'sanity'\n\nimport {DocumentSheetListSelect} from './DocumentSheetListSelect'\nimport {SheetListCellInner} from './SheetListCell'\n\nexport const VISIBLE_COLUMN_LIMIT = 5\n\nconst PreviewCell = (props: {\n  documentPreviewStore: DocumentPreviewStore\n  schemaType: SchemaType\n  row: {\n    original: SanityDocument\n  }\n}) => {\n  const {documentPreviewStore, row, schemaType} = props\n  const previewStateObservable = useMemo(\n    () => getPreviewStateObservable(documentPreviewStore, schemaType, row.original._id),\n    [documentPreviewStore, row.original._id, schemaType],\n  )\n\n  const versionsInfo = useDocumentVersionInfo(row.original._id)\n\n  const {snapshot, isLoading} = useObservable(previewStateObservable, {\n    snapshot: null,\n    isLoading: true,\n  })\n  if (isLoading) {\n    return (\n      <Text size={1} muted>\n        Loading...\n      </Text>\n    )\n  }\n  const displayValue = (snapshot?.title ?? 'Untitled') as string\n\n  return (\n    <Flex align=\"center\" gap={3}>\n      <DocumentStatusIndicator\n        draft={versionsInfo.draft}\n        published={versionsInfo.published}\n        versions={undefined}\n      />\n      <Text size={1}>{displayValue}</Text>\n    </Flex>\n  )\n}\n\nconst columnHelper = createColumnHelper<SanityDocument>()\nconst SUPPORTED_FIELDS = ['string', 'number', 'boolean']\n\ntype Columns = (\n  | AccessorKeyColumnDef<SanityDocument, unknown>\n  | GroupColumnDef<SanityDocument, unknown>\n)[]\n\nconst getColsFromSchemaType = (schemaType: ObjectSchemaType, parentalField?: string): Columns => {\n  return schemaType.fields.reduce<Columns>((tableColumns: Columns, field) => {\n    const {type, name} = field\n    if (SUPPORTED_FIELDS.includes(type.name)) {\n      const nextCol = columnHelper.accessor(\n        // accessor must use dot notation for internal tanstack method of reading cell data\n        parentalField ? `${parentalField}.${field.name}` : field.name,\n        {\n          id: parentalField ? `${parentalField}_${field.name}` : field.name,\n          header: field.type.title,\n          enableHiding: true,\n          cell: (info) => <SheetListCellInner {...info} fieldType={type} />,\n        },\n      )\n\n      return [...tableColumns, nextCol]\n    }\n\n    // if first layer nested object\n    if (type.name === 'object' && isObjectSchemaType(type) && !parentalField) {\n      return [\n        ...tableColumns,\n        columnHelper.group({header: name, columns: getColsFromSchemaType(type, field.name)}),\n      ]\n    }\n\n    return tableColumns\n  }, [])\n}\n\n// Type guard function to check if a column is of type GroupColumnDef\nfunction isAccessorKeyColumnDef(\n  column: Columns[number],\n): column is AccessorKeyColumnDef<SanityDocument, unknown> {\n  return 'accessorKey' in column\n}\nfunction isGroupColumnDef(\n  column: AccessorKeyColumnDef<SanityDocument, unknown> | GroupColumnDef<SanityDocument, unknown>,\n): column is GroupColumnDef<SanityDocument, unknown> {\n  return 'columns' in column\n}\n\nconst flatColumns = (cols: Columns): AccessorKeyColumnDef<SanityDocument, unknown>[] => {\n  return cols.flatMap((col) => {\n    if (isAccessorKeyColumnDef(col)) {\n      return col\n    }\n    if (isGroupColumnDef(col)) {\n      return col.columns ? flatColumns(col.columns) : []\n    }\n    return []\n  })\n}\n\nexport function useDocumentSheetColumns(documentSchemaType?: ObjectSchemaType) {\n  const documentPreviewStore = useDocumentPreviewStore()\n\n  const columns: Columns = useMemo(() => {\n    if (!documentSchemaType) {\n      return []\n    }\n    return [\n      columnHelper.display({\n        id: 'selected',\n        enableHiding: false,\n        header: (info) => (\n          <Box>\n            <Checkbox\n              style={{paddingLeft: 4}}\n              indeterminate={info.table.getIsSomeRowsSelected()}\n              onChange={info.table.getToggleAllPageRowsSelectedHandler()}\n            />\n            {/* eslint-disable-next-line i18next/no-literal-string */}\n            {info.table.getSelectedRowModel().rows.length} selected\n          </Box>\n        ),\n        cell: DocumentSheetListSelect,\n      }),\n      columnHelper.accessor('Preview', {\n        enableHiding: false,\n        id: 'Preview',\n        cell: (info) => {\n          return (\n            <PreviewCell\n              {...info}\n              documentPreviewStore={documentPreviewStore}\n              schemaType={documentSchemaType}\n            />\n          )\n        },\n      }),\n      ...getColsFromSchemaType(documentSchemaType),\n    ]\n  }, [documentPreviewStore, documentSchemaType])\n\n  const [initialColumnsVisibility]: [VisibilityState, number] = useMemo(\n    () =>\n      flatColumns(columns).reduce<[VisibilityState, number]>(\n        ([accCols, countAllowedVisible], column) => {\n          if (!column.id) throw new Error('Column must have an id')\n          const visibilityKey = column.id\n\n          // this column is always visible\n          if (!column.enableHiding) {\n            return [{...accCols, [visibilityKey]: true}, countAllowedVisible]\n          }\n\n          // have already reached column visibility limit, hide column by default\n          if (countAllowedVisible === VISIBLE_COLUMN_LIMIT) {\n            return [{...accCols, [visibilityKey]: false}, countAllowedVisible]\n          }\n\n          return [{...accCols, [visibilityKey]: true}, countAllowedVisible + 1]\n        },\n        [{}, 0],\n      ),\n    [columns],\n  )\n\n  return {columns, initialColumnsVisibility}\n}\n","'use no memo'\n// The `use no memo` directive is due to a known issue with react-table and react compiler: https://github.com/TanStack/table/issues/5567\n\nimport {Box, Checkbox, Flex, Menu, Stack, Text} from '@sanity/ui'\nimport {type Column, type Table} from '@tanstack/react-table'\nimport {useCallback} from 'react'\nimport {type SanityDocument, useTranslation} from 'sanity'\n\nimport {Button, MenuButton} from '../../../../ui-components'\nimport {VISIBLE_COLUMN_LIMIT} from './useDocumentSheetColumns'\n\ntype ColumnsControlProps = {\n  table: Table<SanityDocument>\n}\n\nexport function ColumnsControl({table}: ColumnsControlProps) {\n  const {t} = useTranslation()\n  const isVisibleLimitReached =\n    table.getVisibleLeafColumns().filter((col) => col.getCanHide()).length >= VISIBLE_COLUMN_LIMIT\n\n  const setInitialColumns = useCallback(() => {\n    table.resetColumnVisibility()\n  }, [table])\n\n  const handleColumnOnChange = (column: Column<SanityDocument, unknown>) => () => {\n    column.toggleVisibility()\n  }\n\n  const getColumnVisibilityDisabled = (column: Column<SanityDocument, unknown>) => {\n    const isColumnVisible = column.getIsVisible()\n    const isSingleColumnVisible =\n      table.getVisibleLeafColumns().filter((col) => col.getCanHide()).length === 1\n\n    return (isVisibleLimitReached && !isColumnVisible) || (isSingleColumnVisible && isColumnVisible)\n  }\n\n  return (\n    <MenuButton\n      button={<Button mode=\"bleed\" text={t('sheet-list.edit-columns')} />}\n      id=\"columns-control\"\n      menu={\n        <Menu padding={3} paddingTop={4} style={{width: 240}}>\n          <Flex direction=\"column\" height=\"fill\" gap={3}>\n            <Text weight=\"semibold\" size={1}>\n              {t('sheet-list.select-fields')}\n            </Text>\n            <Flex style={{flex: '1 1 auto', maxHeight: 320, overflowY: 'scroll'}}>\n              <Stack>\n                {table\n                  .getAllLeafColumns()\n                  .filter((column) => column.getCanHide())\n                  .map((column) => (\n                    <Flex key={column.id} marginY={2} align=\"center\">\n                      <Checkbox\n                        readOnly={getColumnVisibilityDisabled(column)}\n                        checked={column.getIsVisible()}\n                        onChange={handleColumnOnChange(column)}\n                        id={`col-visibility-${column.id}`}\n                        style={{display: 'block'}}\n                      />\n                      <Box flex={1} paddingLeft={3}>\n                        <Text size={1}>\n                          <label htmlFor={`col-visibility-${column.id}`}>\n                            {column.columnDef.header?.toString()}\n                          </label>\n                        </Text>\n                      </Box>\n                    </Flex>\n                  ))}\n              </Stack>\n            </Flex>\n            <Button\n              width=\"fill\"\n              mode=\"ghost\"\n              text={t('sheet-list.reset-columns')}\n              onClick={setInitialColumns}\n            />\n          </Flex>\n        </Menu>\n      }\n      placement=\"bottom\"\n      popover={{portal: true}}\n    />\n  )\n}\n","import {Flex} from '@sanity/ui'\nimport {Filters, SearchHeader, useSearchState} from 'sanity'\nimport {styled} from 'styled-components'\n\nconst SearchContainer = styled(Flex)`\n  flex-shrink: 0;\n`\n\nexport function DocumentSheetListFilter() {\n  const {\n    state: {filtersVisible},\n  } = useSearchState()\n\n  return (\n    <SearchContainer>\n      <SearchHeader />\n      {filtersVisible && <Filters showTypeFilter={false} />}\n    </SearchContainer>\n  )\n}\n","'use no memo'\n// The `use no memo` directive is due to a known issue with react-table and react compiler: https://github.com/TanStack/table/issues/5567\n\nimport {CloseIcon, EllipsisHorizontalIcon} from '@sanity/icons'\nimport {type SanityDocument} from '@sanity/types'\nimport {Box, Flex, Menu, Text} from '@sanity/ui'\nimport {flexRender, type Header as HeaderType, type HeaderGroup} from '@tanstack/react-table'\nimport {useTranslation} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Button, MenuButton, MenuItem, Tooltip} from '../../../../ui-components'\n\nconst Header = styled.th<{width: number}>`\n  margin: 16px;\n  z-index: 1;\n  padding: 22px 0px;\n  border-top: 1px solid var(--card-border-color);\n  background-color: var(--card-badge-default-bg-color);\n  box-sizing: border-box;\n  text-align: left;\n  width: ${({width}) => width}px;\n  max-width: ${({width}) => width}px;\n`\n\nconst PinnedHeader = styled(Header)`\n  position: sticky;\n  z-index: 2;\n`\n\nconst HoverMenu = styled.div`\n  visibility: hidden;\n\n  ${Header}:hover & {\n    visibility: visible;\n  }\n`\n\ntype DocumentSheetListHeaderProps = {\n  header: HeaderType<SanityDocument, unknown>\n  headerGroup: HeaderGroup<SanityDocument>\n}\n\nexport function DocumentSheetListHeader(props: DocumentSheetListHeaderProps) {\n  const {header, headerGroup} = props\n  const {t} = useTranslation()\n\n  const isPinned = header.column.getIsPinned()\n\n  const headerTitle =\n    headerGroup.depth > 0 && !header.column.parent ? null : (\n      <Text size={1} weight=\"semibold\" textOverflow=\"ellipsis\">\n        {flexRender(header.column.columnDef.header, header.getContext())}\n      </Text>\n    )\n\n  const HeaderTag = isPinned ? PinnedHeader : Header\n\n  const canShowHeaderMenu =\n    header.column.getCanHide() &&\n    (headerGroup.depth === 0 ? !header.column.columns.length : header.column.parent)\n\n  const borderWidth = isPinned && header.column.getIsLastColumn('left') ? 2 : 1\n\n  return (\n    <HeaderTag\n      key={header.id}\n      style={{\n        left: header.column.getStart('left') ?? undefined,\n        borderRight: `${borderWidth}px solid var(--card-border-color)`,\n      }}\n      data-testid={`header-${header.id}`}\n      width={header.getSize()}\n    >\n      <Flex justify=\"space-between\" marginX={2} align=\"baseline\">\n        <Tooltip delay={500} content={headerTitle}>\n          <Box style={{boxSizing: 'border-box'}} marginLeft={3} marginRight={3}>\n            {headerTitle}\n          </Box>\n        </Tooltip>\n        {canShowHeaderMenu && (\n          <HoverMenu>\n            <MenuButton\n              button={\n                <Button\n                  tooltipProps={{content: 'Open field menu'}}\n                  mode=\"bleed\"\n                  icon={EllipsisHorizontalIcon}\n                  data-testid=\"field-menu-button\"\n                />\n              }\n              id=\"field menu\"\n              popover={{placement: 'bottom-end'}}\n              menu={\n                <Menu>\n                  <MenuItem\n                    text={t('sheet-list.hide-field')}\n                    icon={CloseIcon}\n                    onClick={() => header.column.toggleVisibility()}\n                  />\n                </Menu>\n              }\n            />\n          </HoverMenu>\n        )}\n      </Flex>\n    </HeaderTag>\n  )\n}\n","'use no memo'\n// The `use no memo` directive is due to a known issue with react-table and react compiler: https://github.com/TanStack/table/issues/5567\n\n/* eslint-disable i18next/no-literal-string */\n/* eslint-disable react/jsx-no-bind */\nimport {\n  ChevronLeftIcon,\n  ChevronRightIcon,\n  DoubleChevronLeftIcon,\n  DoubleChevronRightIcon,\n} from '@sanity/icons'\nimport {Flex, Text} from '@sanity/ui'\nimport {type Table} from '@tanstack/react-table'\nimport {type SanityDocument} from 'sanity'\n\nimport {Button, TooltipDelayGroupProvider} from '../../../../ui-components'\n\nexport function DocumentSheetListPaginator({table}: {table: Table<SanityDocument>}) {\n  return (\n    <TooltipDelayGroupProvider>\n      <Flex gap={3} align={'center'}>\n        <Button\n          onClick={() => table.setPageIndex(0)}\n          disabled={!table.getCanPreviousPage()}\n          icon={DoubleChevronLeftIcon}\n          tooltipProps={{\n            content: 'Go to first page',\n          }}\n        />\n        <Button\n          onClick={() => table.previousPage()}\n          disabled={!table.getCanPreviousPage()}\n          icon={ChevronLeftIcon}\n          tooltipProps={{\n            content: 'Go to previous page',\n          }}\n        />\n        <Text style={{whiteSpace: 'nowrap'}}>\n          {table.getState().pagination.pageIndex + 1} of {table.getPageCount()}\n        </Text>\n\n        <Button\n          onClick={() => table.nextPage()}\n          disabled={!table.getCanNextPage()}\n          icon={ChevronRightIcon}\n          tooltipProps={{\n            content: 'Go to next page',\n          }}\n        />\n        <Button\n          onClick={() => table.setPageIndex(table.getPageCount() - 1)}\n          disabled={!table.getCanNextPage()}\n          icon={DoubleChevronRightIcon}\n          tooltipProps={{\n            content: 'Go to last page',\n          }}\n        />\n        <select\n          value={table.getState().pagination.pageSize}\n          onChange={(e) => {\n            table.setPageSize(Number(e.target.value))\n          }}\n        >\n          {[25, 50, 100].map((pageSize) => (\n            <option key={pageSize} value={pageSize}>\n              {pageSize}\n            </option>\n          ))}\n        </select>\n      </Flex>\n    </TooltipDelayGroupProvider>\n  )\n}\n","import {type ListenEvent, type ListenOptions} from '@sanity/client'\nimport {useCallback, useEffect, useMemo, useReducer, useState} from 'react'\nimport {catchError, of} from 'rxjs'\nimport {DEFAULT_STUDIO_CLIENT_OPTIONS, getDraftId, type SanityDocument, useClient} from 'sanity'\n\ninterface DocumentDeletedAction {\n  id: string\n  type: 'DOCUMENT_DELETED'\n}\n\ninterface DocumentUpdatedAction {\n  payload: SanityDocument\n  type: 'DOCUMENT_UPDATED'\n}\n\ninterface DocumentsSetAction {\n  documents: SanityDocument[]\n  type: 'DOCUMENTS_SET'\n}\n\ninterface DocumentReceivedAction {\n  payload: SanityDocument\n  type: 'DOCUMENT_RECEIVED'\n}\n\nexport type DocumentsReducerAction =\n  | DocumentDeletedAction\n  | DocumentUpdatedAction\n  | DocumentsSetAction\n  | DocumentReceivedAction\n\nexport interface DocumentsReducerState {\n  documents: Record<string, SanityDocument>\n}\n\nfunction createDocumentsSet(documents: SanityDocument[]) {\n  const documentsById = documents.reduce((acc, doc) => ({...acc, [doc._id]: doc}), {})\n  return documentsById\n}\n\nfunction documentsReducer(\n  state: DocumentsReducerState,\n  action: DocumentsReducerAction,\n): DocumentsReducerState {\n  switch (action.type) {\n    case 'DOCUMENTS_SET': {\n      // Create an object with the documents id as key\n      const documents = createDocumentsSet(action.documents)\n\n      return {\n        ...state,\n        documents: documents,\n      }\n    }\n\n    case 'DOCUMENT_RECEIVED': {\n      const nextDocumentResult = action.payload as SanityDocument\n\n      return {\n        ...state,\n        documents: {\n          ...state.documents,\n          [nextDocumentResult._id]: nextDocumentResult,\n        },\n      }\n    }\n\n    case 'DOCUMENT_DELETED': {\n      const {[action.id]: _, ...restDocuments} = state.documents\n\n      return {\n        ...state,\n        documents: restDocuments,\n      }\n    }\n\n    case 'DOCUMENT_UPDATED': {\n      const updatedDocument = action.payload\n      const id = updatedDocument._id as string\n      const document = state.documents[id]\n\n      const nextDocument = {\n        // Add existing document data\n        ...document,\n        // Add incoming document data\n        ...updatedDocument,\n      } satisfies SanityDocument\n\n      return {\n        ...state,\n        documents: {\n          ...state.documents,\n          [id]: nextDocument,\n        },\n      }\n    }\n\n    default:\n      return state\n  }\n}\n\nconst LISTEN_OPTIONS: ListenOptions = {\n  events: ['welcome', 'mutation', 'reconnect'],\n  includeResult: true,\n  visibility: 'query',\n  includeAllVersions: true,\n  tag: 'document-sheet-list-store',\n}\n\n/**\n * TODO:\n * [] Lazy load more documents, reduce initial fetch.\n * [] Add support for sorting and filtering.\n * []  Make a projection of the query according to the schema. e.g. get only the primitive fields and the _id to reduce the data payload.\n */\nexport function useDocumentSheetListStore({\n  filter,\n  params,\n  apiVersion,\n}: {\n  filter: string\n  params?: Record<string, unknown>\n  apiVersion?: string\n}) {\n  const QUERY = `*[${filter}][0...2000]`\n  const client = useClient({\n    ...DEFAULT_STUDIO_CLIENT_OPTIONS,\n    apiVersion: apiVersion || DEFAULT_STUDIO_CLIENT_OPTIONS.apiVersion,\n  })\n  const [state, dispatch] = useReducer(documentsReducer, {\n    documents: {},\n  })\n  const [isLoading, setIsLoading] = useState<boolean>(client !== null)\n  const [error, setError] = useState<Error | null>(null)\n\n  const initialFetch = useCallback(async () => {\n    if (!client) {\n      setIsLoading(false)\n      return\n    }\n    try {\n      const res = await client.fetch(QUERY, params)\n      dispatch({type: 'DOCUMENTS_SET', documents: res})\n      setIsLoading(false)\n    } catch (err) {\n      setError(err)\n    }\n  }, [client, params, QUERY])\n\n  const handleListenerEvent = useCallback(\n    async (event: ListenEvent<Record<string, SanityDocument>>) => {\n      // Fetch all documents on initial connection\n      if (event.type === 'welcome') {\n        setIsLoading(true)\n        await initialFetch()\n        setIsLoading(false)\n      }\n\n      // The reconnect event means that we are trying to reconnect to the realtime listener.\n      // In this case we set loading to true to indicate that we're trying to\n      // reconnect. Once a connection has been established, the welcome event\n      // will be received and we'll fetch all documents again (above).\n      if (event.type === 'reconnect') {\n        setIsLoading(true)\n      }\n\n      // Handle mutations (create, update, delete) from the realtime listener\n      // and update the documents store accordingly\n      if (event.type === 'mutation') {\n        if (event.transition === 'appear') {\n          const nextDocument = event.result as SanityDocument | undefined\n\n          if (nextDocument) {\n            dispatch({\n              type: 'DOCUMENT_RECEIVED',\n              payload: nextDocument,\n            })\n          }\n        }\n\n        if (event.transition === 'disappear') {\n          dispatch({type: 'DOCUMENT_DELETED', id: event.documentId})\n        }\n\n        if (event.transition === 'update') {\n          const updatedDocument = event.result as SanityDocument | undefined\n\n          if (updatedDocument) {\n            dispatch({\n              type: 'DOCUMENT_UPDATED',\n              payload: updatedDocument,\n            })\n          }\n        }\n      }\n    },\n    [initialFetch],\n  )\n\n  const listener$ = useMemo(() => {\n    if (!client) return of()\n\n    const events$ = client.observable.listen(QUERY, params, LISTEN_OPTIONS).pipe(\n      catchError((err) => {\n        setError(err)\n        return of(err)\n      }),\n    )\n\n    return events$\n  }, [client, params, QUERY])\n\n  useEffect(() => {\n    const sub = listener$.subscribe(handleListenerEvent)\n\n    return () => {\n      sub?.unsubscribe()\n    }\n  }, [handleListenerEvent, listener$])\n\n  // Contemplate that we could have drafts and live documents here, merge them.\n  const dataAsArray = useMemo(() => {\n    // Joins the drafts and the live documents\n    const uniques = Object.keys(state.documents).reduce(\n      (acc: {[key: string]: SanityDocument}, key) => {\n        const document = state.documents[key]\n        const isDraft = document._id === getDraftId(document._id)\n        const id = isDraft ? document._id : getDraftId(document._id)\n        // If we already have the document, and this document is not the draft one, it means\n        // the draft hast already been added to the list, so we skip it.\n        if (acc[id] && !isDraft) {\n          return acc\n        }\n        acc[id] = document\n        return acc\n      },\n      {},\n    )\n    return Object.values(uniques)\n  }, [state.documents])\n\n  return {\n    data: dataAsArray,\n    isLoading,\n    error,\n  }\n}\n","import {useMemo} from 'react'\nimport {getPublishedId, useSearchState} from 'sanity'\n\nimport {useDocumentSheetListStore} from './useDocumentSheetListStore'\n\ninterface DocumentSheetListOptions {\n  /** The schemaType.name  */\n  typeName: string\n}\n\nexport function useDocumentSheetList({typeName}: DocumentSheetListOptions) {\n  const {state} = useSearchState()\n\n  const items = useMemo(() => {\n    const map = new Map()\n    state.result.hits.forEach((h) => map.set(getPublishedId(h.hit._id), h.hit))\n    return map\n  }, [state.result.hits])\n\n  // The store is listening to all the documents that match with the _type filter.\n  const {data, isLoading} = useDocumentSheetListStore({\n    filter: `_type == \"${typeName}\"`,\n  })\n\n  // Only return the documents that match with the serverSide filter items.\n  const documents = useMemo(() => {\n    return data.filter((doc) => items.has(getPublishedId(doc._id)))\n  }, [data, items])\n\n  return {data: documents, isLoading}\n}\n","'use no memo'\n// The `use no memo` directive is due to a known issue with react-table and react compiler: https://github.com/TanStack/table/issues/5567\n\nimport {isDocumentSchemaType, type ObjectSchemaType, type SanityDocument} from '@sanity/types'\nimport {Box, Flex, Text} from '@sanity/ui'\nimport {\n  getCoreRowModel,\n  getFilteredRowModel,\n  getPaginationRowModel,\n  type Row,\n  useReactTable,\n} from '@tanstack/react-table'\nimport {useCallback, useEffect, useState} from 'react'\nimport {SearchProvider, useSchema, useSearchState} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {type BaseStructureToolPaneProps} from '../../types'\nimport {ColumnsControl} from './ColumnsControl'\nimport {DocumentSheetListFilter} from './DocumentSheetListFilter'\nimport {DocumentSheetListHeader} from './DocumentSheetListHeader'\nimport {DocumentSheetListPaginator} from './DocumentSheetListPaginator'\nimport {DocumentSheetListProvider} from './DocumentSheetListProvider'\nimport {SheetListCell} from './SheetListCell'\nimport {useDocumentSheetColumns} from './useDocumentSheetColumns'\nimport {useDocumentSheetList} from './useDocumentSheetList'\n\ntype DocumentSheetListPaneProps = BaseStructureToolPaneProps<'documentList'>\n\nconst PaneContainer = styled(Flex)`\n  height: 100%;\n`\nconst TableContainer = styled.div`\n  overflow: auto; //our scrollable table container\n  position: relative; //needed for sticky header\n`\nconst Table = styled.table`\n  border-collapse: separate;\n  border-spacing: 0;\n  font-family: arial, sans-serif;\n  white-space: nowrap;\n  width: 100%;\n  border: 1px solid lightgray;\n\n  thead {\n    display: grid;\n    position: sticky;\n    top: 0;\n    z-index: 10;\n  }\n  tr {\n    padding: 0;\n  }\n  tr:last-child {\n    border-bottom: none;\n  }\n`\n\nfunction DocumentSheetListPaneInner({\n  documentSchemaType,\n}: DocumentSheetListPaneProps & {documentSchemaType: ObjectSchemaType}) {\n  const {dispatch, state} = useSearchState()\n  const {columns, initialColumnsVisibility} = useDocumentSheetColumns(documentSchemaType)\n  const {data} = useDocumentSheetList({\n    typeName: documentSchemaType.name,\n  })\n  const [selectedAnchor, setSelectedAnchor] = useState<number | null>(null)\n\n  const totalRows = state.result.hits.length\n  const table = useReactTable({\n    data,\n    columns,\n    getCoreRowModel: getCoreRowModel(),\n    getFilteredRowModel: getFilteredRowModel(),\n    getPaginationRowModel: getPaginationRowModel(),\n    // Avoids resetting the page index when the data changes, e.g. a mutation is received\n    autoResetPageIndex: false,\n    initialState: {\n      columnPinning: {left: ['selected', 'Preview']},\n      pagination: {pageSize: 25},\n      columnVisibility: initialColumnsVisibility,\n    },\n    getRowId: (row) => row._id,\n    meta: {\n      selectedAnchor,\n      setSelectedAnchor,\n      patchDocument: (documentId, fieldId, value) => null,\n    },\n  })\n\n  const {rows} = table.getRowModel()\n\n  useEffect(() => {\n    dispatch({type: 'TERMS_TYPE_ADD', schemaType: documentSchemaType})\n    return () => {\n      dispatch({type: 'TERMS_TYPE_REMOVE', schemaType: documentSchemaType})\n    }\n  }, [documentSchemaType, dispatch])\n\n  const renderRow = useCallback((row: Row<SanityDocument>) => {\n    return (\n      <Box\n        key={row.original._id + row.id}\n        as=\"tr\"\n        paddingY={2}\n        style={{display: 'flex', width: '100%'}}\n      >\n        {row.getVisibleCells().map((cell) => (\n          <SheetListCell key={row.original._id + cell.id} {...cell} />\n        ))}\n      </Box>\n    )\n  }, [])\n\n  const rowsCount = `Total: ${totalRows} rows, showing ${rows.length} rows`\n  return (\n    <PaneContainer direction=\"column\" paddingX={3} data-testid=\"document-sheet-list-pane\">\n      <Flex direction=\"row\" align=\"center\" paddingY={3} paddingX={1} justify=\"space-between\">\n        <Flex direction=\"row\" align=\"center\">\n          <DocumentSheetListFilter />\n          <Text size={0} muted>\n            {rowsCount}\n          </Text>\n        </Flex>\n        <ColumnsControl table={table} />\n      </Flex>\n      <TableContainer>\n        <DocumentSheetListProvider table={table}>\n          <Table>\n            <thead>\n              {table.getHeaderGroups().map((headerGroup) => (\n                <Box key={headerGroup.id} as=\"tr\">\n                  {headerGroup.headers.map((header) => (\n                    <DocumentSheetListHeader\n                      key={header.id}\n                      header={header}\n                      headerGroup={headerGroup}\n                    />\n                  ))}\n                </Box>\n              ))}\n            </thead>\n            <tbody>{table.getRowModel().rows.map(renderRow)}</tbody>\n          </Table>\n        </DocumentSheetListProvider>\n      </TableContainer>\n      <Flex justify={'flex-end'} padding={3} gap={4} paddingY={5}>\n        <DocumentSheetListPaginator table={table} />\n      </Flex>\n    </PaneContainer>\n  )\n}\n\nexport function DocumentSheetListPane(props: DocumentSheetListPaneProps) {\n  const schema = useSchema()\n  const typeName = props.pane.schemaTypeName\n\n  const schemaType = schema.get(typeName)\n  if (!schemaType || !isDocumentSchemaType(schemaType)) {\n    throw new Error(`Schema type \"${typeName}\" not found or not a document schema`)\n  }\n  return (\n    <SearchProvider>\n      <DocumentSheetListPaneInner {...props} documentSchemaType={schemaType} />\n    </SearchProvider>\n  )\n}\n","import {Card, Code} from '@sanity/ui'\nimport {isEqual} from 'lodash'\nimport {memo, useMemo, useState} from 'react'\nimport {\n  EMPTY_ARRAY,\n  type GeneralDocumentListLayoutKey,\n  SourceProvider,\n  useI18nText,\n  useSource,\n} from 'sanity'\nimport shallowEquals from 'shallow-equals'\n\nimport {Pane} from '../../components/pane'\nimport {_DEBUG} from '../../constants'\nimport {type PaneMenuItem} from '../../types'\nimport {useStructureToolSetting} from '../../useStructureToolSetting'\nimport {type BaseStructureToolPaneProps} from '../types'\nimport {DEFAULT_ORDERING, EMPTY_RECORD} from './constants'\nimport {DocumentListPane} from './DocumentListPane'\nimport {findStaticTypesInFilter} from './helpers'\nimport {PaneHeader} from './PaneHeader'\nimport {DocumentSheetListPane} from './sheetList/DocumentSheetListPane'\nimport {type SortOrder} from './types'\n\nconst addSelectedStateToMenuItems = (options: {\n  menuItems?: PaneMenuItem[]\n  sortOrderRaw?: SortOrder\n  layout?: GeneralDocumentListLayoutKey\n}) => {\n  const {menuItems, sortOrderRaw, layout} = options\n\n  return menuItems?.map((item) => {\n    if (item.params?.layout) {\n      return {\n        ...item,\n        selected: layout === item.params?.layout,\n      }\n    }\n\n    if (item?.params?.by) {\n      return {\n        ...item,\n        selected: isEqual(sortOrderRaw?.by, item?.params?.by || EMPTY_ARRAY),\n      }\n    }\n\n    return {...item, selected: false}\n  })\n}\n\nexport function useShallowUnique<ValueType>(value: ValueType): ValueType {\n  const [previous, setPrevious] = useState<ValueType>(value)\n  if (!shallowEquals(previous, value)) {\n    setPrevious(value)\n    return value\n  }\n  return previous\n}\n\n/**\n * @internal\n */\nexport const PaneContainer = memo(function PaneContainer(\n  props: BaseStructureToolPaneProps<'documentList'>,\n) {\n  const {index, isSelected, pane, paneKey} = props\n  const {name: parentSourceName} = useSource()\n\n  const {\n    defaultLayout = 'default',\n    initialValueTemplates = EMPTY_ARRAY,\n    menuItemGroups,\n    menuItems,\n    options,\n  } = pane\n  const {defaultOrdering = EMPTY_ARRAY, filter} = options\n  const params = useShallowUnique(options.params || EMPTY_RECORD)\n  const sourceName = pane.source\n  const typeName = useMemo(() => {\n    const staticTypes = findStaticTypesInFilter(filter, params)\n    if (staticTypes?.length === 1) return staticTypes[0]\n    return null\n  }, [filter, params])\n\n  const [layout, setLayout] = useStructureToolSetting<GeneralDocumentListLayoutKey>(\n    'layout',\n    typeName ?? pane.id, //pane.id for anything that is not documentTypeList\n    defaultLayout,\n  )\n\n  const {title} = useI18nText(pane)\n\n  // Ensure that we use the defaultOrdering value from structure builder if any as the default\n  const defaultSortOrder = useMemo(() => {\n    return defaultOrdering?.length > 0 ? {by: defaultOrdering} : DEFAULT_ORDERING\n  }, [defaultOrdering])\n\n  const [sortOrderRaw, setSortOrder] = useStructureToolSetting<SortOrder>(\n    'sort-order',\n    typeName ?? pane.id, //pane.id for anything that is not documentTypeList\n    defaultSortOrder,\n  )\n\n  const menuItemsWithSelectedState = useMemo(\n    () =>\n      addSelectedStateToMenuItems({\n        menuItems,\n        sortOrderRaw,\n        layout,\n      }),\n    [layout, menuItems, sortOrderRaw],\n  )\n\n  const isSheetListLayout = layout === 'sheetList'\n  const paneLayout = isSheetListLayout ? (\n    <DocumentSheetListPane key={props.pane.id} {...props} />\n  ) : (\n    <DocumentListPane {...props} sortOrder={sortOrderRaw} layout={layout} />\n  )\n\n  return (\n    <SourceProvider name={sourceName || parentSourceName}>\n      <Pane\n        data-ui=\"DocumentListPane\"\n        id={paneKey}\n        minWidth={320}\n        {...(isSheetListLayout ? {} : {currentMaxWidth: 350, maxWidth: 640})}\n        selected={isSelected}\n      >\n        {_DEBUG && (\n          <Card padding={4} tone=\"transparent\">\n            <Code>{pane.source || '(none)'}</Code>\n          </Card>\n        )}\n\n        <PaneHeader\n          index={index}\n          initialValueTemplates={initialValueTemplates}\n          menuItemGroups={menuItemGroups}\n          menuItems={menuItemsWithSelectedState}\n          setLayout={setLayout}\n          setSortOrder={setSortOrder}\n          title={title}\n        />\n        {paneLayout}\n      </Pane>\n    </SourceProvider>\n  )\n})\nPaneContainer.displayName = 'Memo(PaneContainer)'\n","import {type DocumentBadgeComponent} from 'sanity'\n\n/** @internal */\nexport const LiveEditBadge: DocumentBadgeComponent = (props) => {\n  const {liveEditSchemaType, version} = props\n\n  if (liveEditSchemaType && !version) {\n    return {\n      label: 'Live',\n      color: 'danger',\n    }\n  }\n\n  return null\n}\nLiveEditBadge.displayName = 'LiveEditBadge'\n","import {uuid} from '@sanity/uuid'\n\nimport {EMPTY_PARAMS, type LOADING_PANE} from './constants'\nimport {type PaneNode, type RouterPanes} from './types'\n\nconst state: {\n  activePanes: Array<PaneNode | typeof LOADING_PANE>\n} = {activePanes: []}\n\nexport function setActivePanes(panes: Array<PaneNode | typeof LOADING_PANE>): void {\n  state.activePanes = panes\n}\n\n/**\n * This function looks at the _active panes_ to resolve an intent. this type of\n * intent resolution is faster and does not cause the panes to reset\n *\n * @internal\n */\nexport function getIntentState(\n  intent: string,\n  params: Record<string, string>,\n  routerState: {panes?: RouterPanes} | undefined,\n  payload: unknown,\n): {panes: RouterPanes} | {intent: string; params: Record<string, string>; payload: unknown} {\n  const panes = routerState?.panes || []\n  const activePanes = state.activePanes || []\n  const editDocumentId = params.id || uuid()\n\n  // Loop through open panes and see if any of them can handle the intent\n  for (let i = activePanes.length - 1; i >= 0; i--) {\n    const pane = activePanes[i]\n\n    if (typeof pane !== 'object') continue\n\n    // NOTE: if you update this logic, please also update the similar handler in\n    // `resolveIntent.ts`\n    if (\n      pane.canHandleIntent?.(intent, params, {\n        pane,\n        index: i,\n      }) ||\n      // see `resolveIntent.ts` for more info\n      (pane.type === 'documentList' &&\n        pane.schemaTypeName === params.type &&\n        pane.options.filter === '_type == $type')\n    ) {\n      const paneParams = getPaneParams(intent, params)\n\n      return {\n        panes: panes\n          .slice(0, i)\n          .concat([[{id: editDocumentId, params: paneParams, payload}]]) as RouterPanes,\n      }\n    }\n  }\n\n  return {intent: intent, params, payload}\n}\n\nfunction getPaneParams(\n  intent: string,\n  {template, version}: Record<string, string>,\n): {template?: string; version?: string} {\n  if (intent !== 'create') return EMPTY_PARAMS\n  if (template && version) return {template, version}\n  if (template) return {template}\n  if (version) return {version}\n  return EMPTY_PARAMS\n}\n","import {type ObjectDiff} from '@sanity/diff'\nimport {BoundaryElementProvider, Box, Card, Flex, Text} from '@sanity/ui'\nimport {useMemo, useState} from 'react'\nimport {\n  ChangeFieldWrapper,\n  ChangeList,\n  type DocumentChangeContextInstance,\n  LoadingBlock,\n  NoChanges,\n  type ObjectSchemaType,\n  ScrollContainer,\n  usePerspective,\n  useTimelineSelector,\n  useTranslation,\n} from 'sanity'\nimport {DocumentChangeContext} from 'sanity/_singletons'\nimport {styled} from 'styled-components'\n\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {TimelineMenu} from '../../timeline'\nimport {TimelineError} from '../../timeline/TimelineError'\nimport {useDocumentPane} from '../../useDocumentPane'\n\nconst Scroller = styled(ScrollContainer)`\n  height: 100%;\n  overflow: auto;\n  position: relative;\n  scroll-behavior: smooth;\n`\n\nconst Grid = styled(Box)`\n  &:not([hidden]) {\n    display: grid;\n  }\n  grid-template-columns: 48px 1fr;\n  align-items: center;\n  gap: 0.25em;\n`\n\nexport function ChangesInspector({showChanges}: {showChanges: boolean}): React.JSX.Element {\n  const {documentId, schemaType, timelineError, timelineStore, value} = useDocumentPane()\n  const {selectedReleaseId} = usePerspective()\n\n  const [scrollRef, setScrollRef] = useState<HTMLDivElement | null>(null)\n\n  const rev = useTimelineSelector(timelineStore, (state) => state.revTime)\n  const diff = useTimelineSelector(timelineStore, (state) => state.diff)\n  const onOlderRevision = useTimelineSelector(timelineStore, (state) => state.onOlderRevision)\n  const selectionState = useTimelineSelector(timelineStore, (state) => state.selectionState)\n  const sinceTime = useTimelineSelector(timelineStore, (state) => state.sinceTime)\n  const loading = selectionState === 'loading'\n  const isComparingCurrent = !onOlderRevision\n\n  // Note that we are using the studio core namespace here, as changes theoretically should\n  // be part of Sanity core (needs to be moved from structure at some point)\n  const {t: structureT} = useTranslation(structureLocaleNamespace)\n\n  const documentContext: DocumentChangeContextInstance = useMemo(\n    () => ({\n      documentId,\n      schemaType,\n      FieldWrapper: (props) => <ChangeFieldWrapper {...props} hasRevertHover={false} />,\n      rootDiff: diff,\n      isComparingCurrent,\n      value,\n      showFromValue: true,\n    }),\n    [documentId, diff, isComparingCurrent, schemaType, value],\n  )\n\n  if (selectedReleaseId) {\n    return (\n      <Flex data-testid=\"review-changes-pane\" direction=\"column\" height=\"fill\">\n        <Card flex={1} padding={2} paddingTop={0}>\n          <TimelineError versionError />\n        </Card>\n      </Flex>\n    )\n  }\n\n  return (\n    <Flex data-testid=\"review-changes-pane\" direction=\"column\" height=\"fill\" overflow=\"hidden\">\n      <Box padding={3}>\n        <Grid paddingX={2} paddingBottom={2}>\n          <Text size={1} muted>\n            {structureT('changes.from.label')}\n          </Text>\n\n          <TimelineMenu mode=\"since\" chunk={sinceTime} placement=\"bottom-start\" />\n          <Text size={1} muted>\n            {structureT('changes.to.label')}\n          </Text>\n          <TimelineMenu chunk={rev} mode=\"rev\" placement=\"bottom-end\" />\n        </Grid>\n      </Box>\n\n      <Card flex={1} paddingX={2} paddingY={2}>\n        <BoundaryElementProvider element={scrollRef}>\n          <Scroller data-ui=\"Scroller\" ref={setScrollRef}>\n            <Box flex={1} paddingX={3} height=\"fill\">\n              {showChanges && (\n                <Content\n                  diff={diff}\n                  documentContext={documentContext}\n                  error={timelineError}\n                  loading={loading}\n                  schemaType={schemaType}\n                />\n              )}\n            </Box>\n          </Scroller>\n        </BoundaryElementProvider>\n      </Card>\n    </Flex>\n  )\n}\n\nfunction Content({\n  error,\n  diff,\n  documentContext,\n  loading,\n  schemaType,\n}: {\n  error?: Error | null\n  diff: ObjectDiff<any> | null\n  documentContext: DocumentChangeContextInstance\n  loading: boolean\n  schemaType: ObjectSchemaType\n}) {\n  if (error) {\n    return <NoChanges />\n  }\n\n  if (loading) {\n    return <LoadingBlock showText />\n  }\n\n  if (!diff) {\n    return <NoChanges />\n  }\n\n  return (\n    <DocumentChangeContext.Provider value={documentContext}>\n      <ChangeList diff={diff} schemaType={schemaType} />\n    </DocumentChangeContext.Provider>\n  )\n}\n","import {Card, Flex} from '@sanity/ui'\nimport {type MouseEvent, useCallback} from 'react'\nimport {\n  type DocumentGroupEvent,\n  Event,\n  isDeleteDocumentGroupEvent,\n  isDeleteDocumentVersionEvent,\n  isScheduleDocumentVersionEvent,\n  isUnpublishDocumentEvent,\n  isUnscheduleDocumentVersionEvent,\n  useTranslation,\n} from 'sanity'\n\nimport {Tooltip} from '../../../../../ui-components'\n\nexport interface TimelineItemProps {\n  event: DocumentGroupEvent\n  isSelected: boolean\n  onSelect: (chunk: DocumentGroupEvent) => void\n  optionsMenu?: React.ReactNode\n}\n\nconst getIsSelectable = (event: DocumentGroupEvent) => {\n  return (\n    !isDeleteDocumentVersionEvent(event) &&\n    !isDeleteDocumentGroupEvent(event) &&\n    !isUnpublishDocumentEvent(event) &&\n    !isScheduleDocumentVersionEvent(event) &&\n    !isUnscheduleDocumentVersionEvent(event)\n  )\n}\n\nexport function EventTimelineItem({event, isSelected, onSelect, optionsMenu}: TimelineItemProps) {\n  const {t} = useTranslation('studio')\n  const isSelectable = getIsSelectable(event)\n  const handleClick = useCallback(\n    (evt: MouseEvent<HTMLDivElement>) => {\n      evt.preventDefault()\n      evt.stopPropagation()\n\n      if (isSelectable) {\n        onSelect(event)\n      }\n    },\n    [onSelect, event, isSelectable],\n  )\n  return (\n    <Flex gap={1}>\n      <Tooltip content={isSelectable ? '' : t('changes.not-selectable')} disabled={isSelectable}>\n        <Card\n          as={isSelectable ? 'button' : 'div'}\n          onClick={handleClick}\n          padding={2}\n          pressed={isSelected}\n          radius={2}\n          data-ui=\"timelineItem\"\n          data-testid=\"timeline-item-button\"\n          data-chunk-timestamp={event.timestamp}\n          style={{\n            cursor: isSelectable ? 'pointer' : 'default',\n            width: '100%',\n          }}\n        >\n          <Event event={event} showChangesBy=\"tooltip\" />\n        </Card>\n      </Tooltip>\n      {optionsMenu}\n    </Flex>\n  )\n}\n","import {\n  Flex,\n  Menu,\n  // eslint-disable-next-line no-restricted-imports\n  MenuItem,\n  Text,\n  usePortal,\n} from '@sanity/ui'\nimport {useCallback} from 'react'\nimport {\n  ContextMenuButton,\n  getReleaseIdFromReleaseDocumentId,\n  getReleaseTone,\n  getVersionFromId,\n  isReleaseDocument,\n  type PublishDocumentVersionEvent,\n  RELEASES_INTENT,\n  Translate,\n  useSetPerspective,\n  useTranslation,\n  VersionInlineBadge,\n} from 'sanity'\nimport {IntentLink} from 'sanity/router'\n\nimport {MenuButton} from '../../../../../ui-components'\nimport {usePaneRouter} from '../../../../components/paneRouter/usePaneRouter'\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {TIMELINE_MENU_PORTAL} from '../timelineMenu'\n\nexport function PublishedEventMenu({event}: {event: PublishDocumentVersionEvent}) {\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {t: tCore} = useTranslation()\n  const portalContext = usePortal()\n  const {params, setParams} = usePaneRouter()\n  const setPerspective = useSetPerspective()\n\n  const handleOpenReleaseDocument = useCallback(() => {\n    setParams({\n      ...params,\n      rev: event.versionRevisionId || '@lastPublished',\n      since: undefined,\n      historyEvent: event.id,\n      historyVersion: getVersionFromId(event.versionId),\n    })\n  }, [setParams, params, event])\n\n  const handleOpenDraftDocument = useCallback(() => {\n    setParams({\n      ...params,\n      rev: event.versionRevisionId,\n      preserveRev: 'true',\n      since: undefined,\n    })\n    setTimeout(() => {\n      // A bug is generated when we change the perspective and the params at the same time\n      // Resetting the params to the value it had before, because the paneRouter uses the previous value\n      setPerspective('drafts')\n    }, 100)\n  }, [setParams, params, event.versionRevisionId, setPerspective])\n\n  const VersionBadge = ({children}: {children: React.ReactNode}) => {\n    return (\n      <VersionInlineBadge\n        $tone={\n          event.release\n            ? isReleaseDocument(event.release)\n              ? getReleaseTone(event.release)\n              : 'default'\n            : undefined\n        }\n      >\n        {children}\n      </VersionInlineBadge>\n    )\n  }\n  const isMenuDisabled = event.release && !isReleaseDocument(event.release)\n  return (\n    <MenuButton\n      id={`timeline-item-menu-button-${event.versionId}`}\n      button={\n        <ContextMenuButton\n          aria-label={t('timeline-item.menu-button.aria-label')}\n          tooltipProps={{\n            content: isMenuDisabled\n              ? t('timeline-item.not-found-release.tooltip', {\n                  releaseId: event.release?._id\n                    ? getReleaseIdFromReleaseDocumentId(event.release._id)\n                    : undefined,\n                })\n              : t('timeline-item.menu-button.tooltip'),\n          }}\n          disabled={isMenuDisabled}\n        />\n      }\n      menu={\n        <Menu padding={1}>\n          {event.release ? (\n            <>\n              <IntentLink\n                intent={RELEASES_INTENT}\n                params={{id: getReleaseIdFromReleaseDocumentId(event.release._id)}}\n                style={{textDecoration: 'none'}}\n              >\n                <MenuItem padding={3}>\n                  <Flex align={'center'} justify=\"flex-start\">\n                    <Text size={1} style={{textDecoration: 'none'}}>\n                      <Translate\n                        components={{\n                          VersionBadge: ({children}) => <VersionBadge>{children}</VersionBadge>,\n                        }}\n                        i18nKey=\"events.open.release\"\n                        values={{\n                          releaseTitle:\n                            event.release.metadata?.title ||\n                            tCore('release.placeholder-untitled-release'),\n                        }}\n                        t={t}\n                      />\n                    </Text>\n                  </Flex>\n                </MenuItem>\n              </IntentLink>\n              <MenuItem onClick={handleOpenReleaseDocument}>\n                <Flex align={'center'} justify=\"flex-start\">\n                  <Text size={1}>\n                    <Translate\n                      components={{\n                        VersionBadge: ({children}) => <VersionBadge>{children}</VersionBadge>,\n                      }}\n                      i18nKey=\"events.inspect.release\"\n                      values={{\n                        releaseTitle:\n                          event.release.metadata?.title ||\n                          tCore('release.placeholder-untitled-release'),\n                      }}\n                      t={t}\n                    />\n                  </Text>\n                </Flex>\n              </MenuItem>\n            </>\n          ) : (\n            <MenuItem onClick={handleOpenDraftDocument} disabled={!event.versionRevisionId}>\n              <Flex align={'center'}>\n                <Text size={1}>\n                  <Translate\n                    components={{\n                      VersionBadge: ({children}) => (\n                        <VersionInlineBadge $tone=\"caution\">{children}</VersionInlineBadge>\n                      ),\n                    }}\n                    i18nKey=\"events.open.draft\"\n                    t={t}\n                  />\n                </Text>\n              </Flex>\n            </MenuItem>\n          )}\n        </Menu>\n      }\n      popover={{\n        // when used inside the timeline menu we want to keep the element inside the popover, to avoid closing the popover when clicking expand.\n        portal: portalContext.elements?.[TIMELINE_MENU_PORTAL] ? TIMELINE_MENU_PORTAL : true,\n        placement: 'bottom',\n        fallbackPlacements: ['bottom-end', 'bottom-start'],\n      }}\n    />\n  )\n}\n","import {Box, Flex, Spinner, Stack, Text} from '@sanity/ui'\nimport {motion, type Variants} from 'framer-motion'\nimport {useCallback, useEffect, useMemo, useState} from 'react'\nimport {\n  CommandList,\n  type CommandListRenderItemCallback,\n  type DocumentGroupEvent,\n  getDocumentVariantType,\n  isCreateDocumentVersionEvent,\n  isDeleteDocumentVersionEvent,\n  isEditDocumentVersionEvent,\n  isPublishDocumentVersionEvent,\n  LoadingBlock,\n  useTranslation,\n} from 'sanity'\n\nimport {ExpandableTimelineItemButton} from '../expandableTimelineItemButton'\nimport {ListWrapper, Root} from '../timeline.styled'\nimport {EventTimelineItem} from './EventTimelineItem'\nimport {PublishedEventMenu} from './PublishedEventMenu'\n\ninterface TimelineProps {\n  events: DocumentGroupEvent[]\n  hasMoreEvents: boolean | null\n  selectedEventId?: string\n  onLoadMore: () => void\n  onSelect: (event: DocumentGroupEvent) => void\n  fetchEventChildren: (event: DocumentGroupEvent) => Promise<void>\n  /**\n   * The list needs a predefined max height for the scroller to work.\n   */\n  listMaxHeight?: string\n}\n\nconst TimelineItemWrapper = motion.create(Box)\nconst CHILDREN_ITEMS_VARIANTS: Variants = {\n  initial: {\n    opacity: 0,\n  },\n  animate: {\n    opacity: 1,\n  },\n  exit: {\n    opacity: 0,\n  },\n}\n\nconst ITEM_HEIGHT = 57\n\nexport const TIMELINE_LIST_WRAPPER_ID = 'timeline-list-wrapper'\n\nexport const EventsTimeline = ({\n  events: allEvents,\n  hasMoreEvents,\n  selectedEventId,\n  onLoadMore,\n  onSelect,\n  listMaxHeight = 'calc(100vh - 280px)',\n  fetchEventChildren,\n}: TimelineProps) => {\n  const [mounted, setMounted] = useState(false)\n  const {t} = useTranslation('studio')\n  const [expandedParents, setExpandedParents] = useState<Set<string>>(() => {\n    if (selectedEventId) {\n      // Find that event and if it has a parent, expand the parent.\n      const selectedEvent = allEvents.find((event) => event.id === selectedEventId)\n      if (selectedEvent && 'parentId' in selectedEvent && selectedEvent.parentId) {\n        return new Set([selectedEvent.parentId])\n      }\n    }\n    return new Set()\n  })\n  const [expandingParents, setExpandingParents] = useState<Set<string>>(new Set())\n\n  const events = useMemo(() => {\n    return allEvents.filter((event) => {\n      if (isCreateDocumentVersionEvent(event) && event.parentId) {\n        // Check if it's the last event in the list, in that case, we want to show it\n        const isLastEvent = allEvents[allEvents.length - 1].id === event.id\n        if (isLastEvent) return true\n        return expandedParents.has(event.parentId)\n      }\n      if (isEditDocumentVersionEvent(event) && event.parentId) {\n        return expandedParents.has(event.parentId)\n      }\n      return true\n    })\n  }, [expandedParents, allEvents])\n\n  const handleExpandParent = useCallback(\n    (event: DocumentGroupEvent) => async () => {\n      const parentId = event.id\n\n      let isExpanding = false\n      setExpandedParents((prev) => {\n        const next = new Set(prev)\n\n        if (prev.has(parentId)) next.delete(parentId)\n        else {\n          isExpanding = true\n          next.add(parentId)\n        }\n\n        return next\n      })\n      if (isExpanding) {\n        setExpandingParents((prev) => {\n          const next = new Set(prev)\n          next.add(parentId)\n          return next\n        })\n        await fetchEventChildren(event)\n        setExpandingParents((prev) => {\n          const next = new Set(prev)\n          next.delete(parentId)\n          return next\n        })\n      }\n    },\n    [fetchEventChildren, setExpandingParents],\n  )\n\n  const handleSelectChunk = useCallback(\n    (event: DocumentGroupEvent) => {\n      onSelect(event)\n    },\n    [onSelect],\n  )\n\n  const renderOptionsMenu = useCallback(\n    (event: DocumentGroupEvent) => {\n      const documentVariantType = getDocumentVariantType(event.documentId)\n      if (isPublishDocumentVersionEvent(event) && documentVariantType === 'published') {\n        return <PublishedEventMenu event={event} />\n      }\n      if (\n        (isPublishDocumentVersionEvent(event) &&\n          documentVariantType === 'draft' &&\n          event.creationEvent) ||\n        (isDeleteDocumentVersionEvent(event) && event.creationEvent)\n      ) {\n        return (\n          <ExpandableTimelineItemButton\n            isExpanded={expandedParents.has(event.id)}\n            onExpand={handleExpandParent(event)}\n          />\n        )\n      }\n      return null\n    },\n    [expandedParents, handleExpandParent],\n  )\n\n  const renderItem = useCallback<CommandListRenderItemCallback<DocumentGroupEvent[][number]>>(\n    (event, {activeIndex}) => {\n      /**\n       * The create version event will be present while expanding (loading the edits), so we are attaching to it the loading block at the top.\n       * - publishEvent (expanding?)\n       * --- loadingBlock  ~createEvent~\n       * */\n      const showExpandingLoader =\n        isCreateDocumentVersionEvent(event) &&\n        event.parentId &&\n        expandingParents.has(event.parentId)\n\n      const isLastEvent = activeIndex === events.length - 1\n      if (showExpandingLoader) {\n        return (\n          <TimelineItemWrapper\n            animate={{opacity: 1}}\n            initial={{opacity: 0}}\n            transition={{duration: 0.2, delay: 0.2}}\n          >\n            {/* We need this item to match the same height as the rest of the list items, which is 57px */}\n            <Flex align=\"center\" justify=\"center\" style={{height: ITEM_HEIGHT}}>\n              <Spinner />\n            </Flex>\n          </TimelineItemWrapper>\n        )\n      }\n      return (\n        <TimelineItemWrapper\n          key={event.timestamp}\n          paddingBottom={1}\n          paddingRight={1}\n          animate=\"animate\"\n          exit=\"exit\"\n          initial=\"initial\"\n          variants={'parentId' in event ? CHILDREN_ITEMS_VARIANTS : undefined}\n          paddingLeft={\n            (isEditDocumentVersionEvent(event) || isCreateDocumentVersionEvent(event)) &&\n            event.parentId &&\n            !isLastEvent\n              ? 4\n              : 1\n          }\n        >\n          <EventTimelineItem\n            event={event}\n            isSelected={event.id === selectedEventId}\n            onSelect={handleSelectChunk}\n            optionsMenu={renderOptionsMenu(event)}\n          />\n\n          {isLastEvent && hasMoreEvents && <LoadingBlock />}\n        </TimelineItemWrapper>\n      )\n    },\n    [\n      expandingParents,\n      selectedEventId,\n      handleSelectChunk,\n      renderOptionsMenu,\n      events.length,\n      hasMoreEvents,\n    ],\n  )\n\n  useEffect(() => setMounted(true), [])\n  const selectedIndex = events.findIndex((event) => event.id === selectedEventId)\n\n  return (\n    <Root\n      /**\n       * We delay initial rendering if `selectedIndex` is present.\n       * This is a _temporary_ workaround to allow the virtual <CommandList>\n       * to scroll to a specific index prior to being displayed.\n       *\n       * Without this, there'll be a noticeable 'flash' where the virtual list\n       * will render with its child items at the top and then scroll into position.\n       */\n      $visible={!selectedIndex || mounted}\n      data-ui=\"timeline\"\n    >\n      {events.length > 0 ? (\n        <ListWrapper direction=\"column\" $maxHeight={listMaxHeight} id={TIMELINE_LIST_WRAPPER_ID}>\n          <CommandList\n            activeItemDataAttr=\"data-hovered\"\n            ariaLabel={t('timeline.list.aria-label')}\n            autoFocus=\"list\"\n            initialIndex={selectedIndex}\n            initialScrollAlign=\"center\"\n            itemHeight={ITEM_HEIGHT}\n            items={events}\n            onEndReached={onLoadMore}\n            onEndReachedIndexOffset={20}\n            overscan={5}\n            renderItem={renderItem}\n            wrapAround={false}\n          />\n        </ListWrapper>\n      ) : (\n        <Stack padding={3} space={3}>\n          <Text size={1} weight=\"medium\">\n            {t('timeline.error.no-document-history-title')}\n          </Text>\n          <Text muted size={1}>\n            {t('timeline.error.no-document-history-description')}\n          </Text>\n        </Stack>\n      )}\n    </Root>\n  )\n}\n\nEventsTimeline.displayName = 'EventsTimeline'\n","import {ChevronDownIcon} from '@sanity/icons'\nimport {\n  Flex,\n  type Placement,\n  PortalProvider,\n  useClickOutsideEvent,\n  useGlobalKeyDown,\n  useToast,\n} from '@sanity/ui'\nimport {useCallback, useMemo, useState} from 'react'\nimport {\n  type DocumentGroupEvent,\n  isDeleteDocumentGroupEvent,\n  isDeleteDocumentVersionEvent,\n  isScheduleDocumentVersionEvent,\n  isUnpublishDocumentEvent,\n  isUnscheduleDocumentVersionEvent,\n  TIMELINE_ITEM_I18N_KEY_MAPPING,\n  useEvents,\n  useTranslation,\n} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Button, Popover} from '../../../../../ui-components'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {TimelineError} from '../TimelineError'\nimport {EventsTimeline} from './EventsTimeline'\n\ninterface TimelineMenuProps {\n  event: DocumentGroupEvent | null\n  events: DocumentGroupEvent[]\n  mode: 'rev' | 'since'\n  placement?: Placement\n}\n\nconst Root = styled(Popover)`\n  overflow: hidden;\n  overflow: clip;\n`\n\nexport const TIMELINE_MENU_PORTAL = 'timeline-menu'\n\nconst formatParams = {\n  timestamp: {dateStyle: 'medium', timeStyle: 'short'},\n}\n\nexport function EventsTimelineMenu({event, events, mode, placement}: TimelineMenuProps) {\n  const {setTimelineRange} = useDocumentPane()\n  const [open, setOpen] = useState(false)\n  const [button, setButton] = useState<HTMLButtonElement | null>(null)\n  const [popoverRef, setPopoverRef] = useState<HTMLElement | null>(null)\n  const toast = useToast()\n  const {\n    nextCursor,\n    loading,\n    error: eventsError,\n    findRangeForRevision,\n    findRangeForSince,\n    loadMoreEvents,\n    expandEvent,\n  } = useEvents()\n\n  const {t} = useTranslation('studio')\n\n  const handleOpen = useCallback(() => {\n    setOpen(true)\n  }, [])\n\n  const handleClose = useCallback(() => {\n    setOpen(false)\n  }, [])\n\n  const handleGlobalKeyDown = useCallback(\n    (e: KeyboardEvent) => {\n      if (open && (e.key === 'Escape' || e.key === 'Tab')) {\n        handleClose()\n        button?.focus()\n      }\n    },\n    [button, handleClose, open],\n  )\n\n  useGlobalKeyDown(handleGlobalKeyDown)\n  useClickOutsideEvent(open && handleClose, () => [button, popoverRef])\n\n  const selectRev = useCallback(\n    (revEvent: DocumentGroupEvent) => {\n      try {\n        if (\n          isDeleteDocumentVersionEvent(revEvent) ||\n          isDeleteDocumentGroupEvent(revEvent) ||\n          isUnpublishDocumentEvent(revEvent) ||\n          isScheduleDocumentVersionEvent(revEvent) ||\n          isUnscheduleDocumentVersionEvent(revEvent)\n        ) {\n          console.error('Event is not selectable')\n          return\n        }\n        const [since, rev] = findRangeForRevision(revEvent?.id)\n        setTimelineRange(since, rev)\n        handleClose()\n      } catch (err) {\n        toast.push({\n          closable: true,\n          description: err.message,\n          status: 'error',\n          title: t('timeline.error.unable-to-load-revision'),\n        })\n      }\n    },\n    [t, toast, setTimelineRange, findRangeForRevision, handleClose],\n  )\n\n  const selectSince = useCallback(\n    (sinceEvent: DocumentGroupEvent) => {\n      try {\n        const [since, rev] = findRangeForSince(sinceEvent.id)\n        setTimelineRange(since, rev)\n        handleClose()\n      } catch (err) {\n        toast.push({\n          closable: true,\n          description: err.message,\n          status: 'error',\n          title: t('timeline.error.unable-to-load-revision'),\n        })\n      }\n    },\n    [findRangeForSince, setTimelineRange, toast, t, handleClose],\n  )\n\n  const handleLoadMore = useCallback(() => {\n    if (!loading && nextCursor) {\n      loadMoreEvents()\n    }\n  }, [loading, loadMoreEvents, nextCursor])\n\n  const content = useMemo(() => {\n    if (eventsError) return <TimelineError />\n\n    return (\n      <EventsTimeline\n        events={events}\n        fetchEventChildren={expandEvent}\n        hasMoreEvents={Boolean(nextCursor)}\n        selectedEventId={event?.id}\n        onLoadMore={handleLoadMore}\n        onSelect={mode === 'rev' ? selectRev : selectSince}\n      />\n    )\n  }, [\n    eventsError,\n    mode,\n    expandEvent,\n    events,\n    nextCursor,\n    event?.id,\n    handleLoadMore,\n    selectSince,\n    selectRev,\n  ])\n\n  const revLabel = event\n    ? t(TIMELINE_ITEM_I18N_KEY_MAPPING[event.documentVariantType][event.type], {\n        context: 'timestamp',\n        timestamp: new Date(event.timestamp),\n        formatParams,\n      })\n    : t('timeline.latest-revision')\n\n  const sinceLabel = event\n    ? t(TIMELINE_ITEM_I18N_KEY_MAPPING[event.documentVariantType][event.type], {\n        context: 'timestamp',\n        timestamp: new Date(event.timestamp),\n        formatParams,\n      })\n    : events.length > 0\n      ? t('timeline.since-version-missing')\n      : t('timeline.no-previous-events')\n\n  const buttonLabel = mode === 'rev' ? revLabel : sinceLabel\n\n  return (\n    <PortalProvider __unstable_elements={{[TIMELINE_MENU_PORTAL]: popoverRef}}>\n      <Root\n        data-testid=\"timeline-menu\"\n        constrainSize\n        content={open && content}\n        data-ui=\"versionMenu\"\n        open={open}\n        placement={placement}\n        matchReferenceWidth\n        portal\n        ref={setPopoverRef}\n      >\n        <Flex width={'fill'}>\n          <Button\n            data-testid={open ? 'timeline-menu-close-button' : 'timeline-menu-open-button'}\n            disabled={loading || !events.length}\n            mode=\"ghost\"\n            onClick={open ? handleClose : handleOpen}\n            ref={setButton}\n            selected={open}\n            width=\"fill\"\n            tooltipProps={null}\n            justify={'space-between'}\n            style={{\n              maxWidth: '100%',\n            }}\n            iconRight={ChevronDownIcon}\n            text={loading ? t('timeline.loading-history') : buttonLabel}\n          />\n        </Flex>\n      </Root>\n    </PortalProvider>\n  )\n}\n","import {diffInput, wrap} from '@sanity/diff'\nimport {BoundaryElementProvider, Box, Card, Flex, Spinner, Stack, Text} from '@sanity/ui'\nimport {motion} from 'framer-motion'\nimport {type ReactElement, useMemo, useState} from 'react'\nimport {useObservable} from 'react-rx'\nimport {\n  ChangeFieldWrapper,\n  ChangeList,\n  ChangesError,\n  type DocumentChangeContextInstance,\n  type DocumentGroupEvent,\n  isReleaseDocument,\n  LoadingBlock,\n  NoChanges,\n  type ObjectDiff,\n  type ObjectSchemaType,\n  ScrollContainer,\n  Translate,\n  useEvents,\n  usePerspective,\n  useTranslation,\n} from 'sanity'\nimport {DocumentChangeContext} from 'sanity/_singletons'\nimport {styled} from 'styled-components'\n\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {EventsTimelineMenu} from '../../timeline/events/EventsTimelineMenu'\nimport {useDocumentPane} from '../../useDocumentPane'\n\nconst Scroller = styled(ScrollContainer)`\n  height: 100%;\n  overflow: auto;\n  position: relative;\n  scroll-behavior: smooth;\n`\n\nconst Grid = styled(Box)`\n  &:not([hidden]) {\n    display: grid;\n  }\n  grid-template-columns: 48px 1fr;\n  align-items: center;\n  gap: 0.25em;\n`\n\nconst SpinnerContainer = styled(Flex)`\n  width: 100%;\n  position: absolute;\n  bottom: -4px;\n`\n\nconst DIFF_INITIAL_VALUE = {\n  diff: null,\n  loading: true,\n  error: null,\n}\n\nconst CompareWithPublishedView = () => {\n  const {documentId, schemaType, editState, displayed} = useDocumentPane()\n  const {selectedPerspective, selectedPerspectiveName, selectedReleaseId} = usePerspective()\n  const {t} = useTranslation(structureLocaleNamespace)\n  const rootDiff = useMemo(() => {\n    const diff = diffInput(\n      wrap(editState?.published ?? {}, {author: ''}),\n      wrap(displayed ?? {}, {author: ''}),\n    ) as ObjectDiff\n\n    return diff\n  }, [editState?.published, displayed])\n\n  if (selectedReleaseId && !editState?.version) {\n    return null\n  }\n  if (selectedPerspective === 'drafts' && !editState?.draft) {\n    return null\n  }\n  if (selectedPerspectiveName === 'published' || !displayed?._rev) {\n    return null\n  }\n  return (\n    <Stack space={2} marginBottom={3}>\n      <Card borderBottom paddingBottom={3}>\n        <Stack space={3} paddingTop={1}>\n          <Text size={1} weight=\"medium\">\n            {t('events.compare-with-published.title')}\n          </Text>\n          <Text size={1} muted>\n            <Translate\n              i18nKey=\"events.compare-with-published.description\"\n              t={t}\n              values={{\n                version: isReleaseDocument(selectedPerspective)\n                  ? selectedPerspective.metadata?.title\n                  : 'draft',\n              }}\n            />\n          </Text>\n        </Stack>\n      </Card>\n      <DocumentChangeContext.Provider\n        value={{\n          documentId,\n          schemaType,\n          rootDiff,\n          isComparingCurrent: true,\n          FieldWrapper: (props) => props.children,\n          value: displayed,\n          showFromValue: true,\n        }}\n      >\n        <Box paddingY={1}>\n          <ChangeList diff={rootDiff} schemaType={schemaType} />\n        </Box>\n      </DocumentChangeContext.Provider>\n    </Stack>\n  )\n}\nexport function EventsInspector({showChanges}: {showChanges: boolean}): ReactElement {\n  const {documentId, schemaType, timelineError, value, formState} = useDocumentPane()\n  const [scrollRef, setScrollRef] = useState<HTMLDivElement | null>(null)\n\n  const {events, revision, sinceRevision, getChangesList} = useEvents()\n\n  const isComparingCurrent = !revision?.revisionId\n  const changesList$ = useMemo(() => getChangesList(), [getChangesList])\n  const {\n    diff,\n    loading: diffLoading,\n    error: diffError,\n  } = useObservable(changesList$, DIFF_INITIAL_VALUE)\n\n  const {t} = useTranslation('studio')\n\n  const documentContext: DocumentChangeContextInstance = useMemo(() => {\n    return {\n      documentId,\n      schemaType,\n      FieldWrapper: (props) =>\n        props.path.length > 0 ? <ChangeFieldWrapper {...props} /> : props.children,\n      rootDiff: diff,\n      isComparingCurrent: isComparingCurrent && !formState?.readOnly,\n      value,\n      showFromValue: true,\n    }\n  }, [diff, documentId, isComparingCurrent, formState?.readOnly, schemaType, value])\n\n  const [sinceEvent, toEvent] = useMemo(() => {\n    if (!events) return [null, null]\n    return [\n      events.find((e) => e.id === sinceRevision?.revisionId) || null,\n      events.find((e) => e.id === revision?.revisionId) || events[0],\n    ]\n  }, [events, revision?.revisionId, sinceRevision?.revisionId])\n\n  const sinceEvents = useMemo(() => {\n    // The sinceEvents need to account the toEvent showing only events that are older than the toEvent\n    if (!toEvent) return events.slice(1)\n    return events.slice(events.indexOf(toEvent) + 1).map((event) => {\n      // If the to event has a parent id, we need to remove the parent id from the since events or they won't be rendered, as they have no parent to expand.\n      if (\n        ('parentId' in toEvent && 'parentId' in event && event.parentId === toEvent.parentId) ||\n        ('parentId' in event && toEvent.id === event.parentId)\n      ) {\n        return {...event, parentId: undefined}\n      }\n      return event\n    })\n  }, [events, toEvent])\n  if (!events.length) {\n    return (\n      <Box paddingX={2}>\n        <Stack padding={3} space={3}>\n          <Text size={1} weight=\"medium\">\n            {t('timeline.error.no-document-history-title')}\n          </Text>\n          <Text muted size={1}>\n            {t('timeline.error.no-document-history-description')}\n          </Text>\n        </Stack>\n      </Box>\n    )\n  }\n  return (\n    <Flex data-testid=\"review-changes-pane\" direction=\"column\" height=\"fill\" overflow=\"hidden\">\n      <Box padding={3} style={{position: 'relative'}}>\n        <Grid paddingX={2} paddingBottom={2}>\n          <Text size={1} muted>\n            {t('changes.inspector.from-label')}\n          </Text>\n          <EventsTimelineMenu\n            event={sinceEvent || null}\n            events={sinceEvents}\n            mode=\"since\"\n            placement=\"bottom-start\"\n          />\n          <Text size={1} muted>\n            {t('changes.inspector.to-label')}\n          </Text>\n          <EventsTimelineMenu\n            event={toEvent || null}\n            events={events}\n            mode=\"rev\"\n            placement=\"bottom-end\"\n          />\n        </Grid>\n        {diffLoading && (\n          <motion.div\n            animate={{opacity: 1}}\n            initial={{opacity: 0}}\n            transition={{delay: 0.2, duration: 0.2}}\n          >\n            <SpinnerContainer justify=\"center\" align=\"center\" gap={2}>\n              <Text muted size={0}>\n                {t('changes.loading-changes')}\n              </Text>\n              <Spinner size={0} />\n            </SpinnerContainer>\n          </motion.div>\n        )}\n      </Box>\n\n      <Card flex={1} paddingX={2} paddingY={2}>\n        <BoundaryElementProvider element={scrollRef}>\n          <Scroller data-ui=\"Scroller\" ref={setScrollRef}>\n            <Box flex={1} paddingX={3} height=\"fill\">\n              {showChanges && (\n                <Content\n                  documentContext={documentContext}\n                  error={timelineError || diffError}\n                  loading={revision?.loading || sinceRevision?.loading || false}\n                  schemaType={schemaType}\n                  sameRevisionSelected={sinceEvent?.id === toEvent?.id}\n                  sinceEvent={sinceEvent}\n                />\n              )}\n            </Box>\n          </Scroller>\n        </BoundaryElementProvider>\n      </Card>\n    </Flex>\n  )\n}\n\nfunction Content({\n  error,\n  documentContext,\n  loading,\n  schemaType,\n  sameRevisionSelected,\n  sinceEvent,\n}: {\n  error?: Error | null\n  documentContext: DocumentChangeContextInstance\n  loading: boolean\n  schemaType: ObjectSchemaType\n  sameRevisionSelected: boolean\n  sinceEvent: DocumentGroupEvent | null\n}) {\n  if (error) {\n    return (\n      <>\n        <CompareWithPublishedView />\n        {sinceEvent?.type !== 'historyCleared' && <ChangesError error={error} />}\n      </>\n    )\n  }\n\n  if (loading) {\n    return <LoadingBlock showText />\n  }\n  if (sameRevisionSelected) {\n    return <SameRevisionSelected />\n  }\n\n  if (!documentContext.rootDiff) {\n    return (\n      <motion.div\n        animate={{opacity: 1}}\n        initial={{opacity: 0}}\n        transition={{delay: 0.2, duration: 0.2}}\n      >\n        <NoChanges />\n      </motion.div>\n    )\n  }\n\n  return (\n    <DocumentChangeContext.Provider value={documentContext}>\n      <Box paddingY={1}>\n        <ChangeList diff={documentContext.rootDiff} schemaType={schemaType} />\n      </Box>\n    </DocumentChangeContext.Provider>\n  )\n}\n\nfunction SameRevisionSelected() {\n  const {t} = useTranslation('')\n  return (\n    <motion.div\n      animate={{opacity: 1}}\n      initial={{opacity: 0}}\n      transition={{delay: 0.2, duration: 0.2}}\n    >\n      <Stack space={3} paddingTop={2}>\n        <Text size={1} weight=\"medium\" as=\"h3\">\n          {t('changes.same-revision-selected-title')}\n        </Text>\n        <Text as=\"p\" size={1} muted>\n          <Translate i18nKey=\"changes.same-revision-selected-description\" t={t} />\n        </Text>\n      </Stack>\n    </motion.div>\n  )\n}\n","import {BoundaryElementProvider, Card, Flex, useToast} from '@sanity/ui'\nimport {useCallback, useState} from 'react'\nimport {\n  type DocumentGroupEvent,\n  isDeleteDocumentGroupEvent,\n  isDeleteDocumentVersionEvent,\n  isScheduleDocumentVersionEvent,\n  isUnpublishDocumentEvent,\n  isUnscheduleDocumentVersionEvent,\n  LoadingBlock,\n  ScrollContainer,\n  useEvents,\n  useTranslation,\n} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {EventsTimeline} from '../../timeline/events/EventsTimeline'\nimport {TimelineError} from '../../timeline/TimelineError'\nimport {useDocumentPane} from '../../useDocumentPane'\n\nconst Scroller = styled(ScrollContainer)`\n  height: 100%;\n  overflow: auto;\n  position: relative;\n  scroll-behavior: smooth;\n`\n\nexport function EventsSelector({showList}: {showList: boolean}) {\n  const [scrollRef, setScrollRef] = useState<HTMLDivElement | null>(null)\n  const [listHeight, setListHeight] = useState(0)\n  const {setTimelineRange} = useDocumentPane()\n  const getScrollerRef = useCallback(\n    (el: HTMLDivElement | null) => {\n      if (!listHeight && el) {\n        /**\n         * Hacky solution, the list height needs to be defined, it cannot be obtained from the parent using a `max-height: 100%`\n         * Because the scroller won't work properly and it won't scroll to the selected element on mount.\n         * To fix this, this component will set the list height to the height of the parent element - 1px, to avoid a double scroll line.\n         */\n        setListHeight(el.clientHeight ? el.clientHeight - 1 : 0)\n        setScrollRef(el)\n      }\n    },\n    [listHeight],\n  )\n  const {\n    events,\n    nextCursor,\n    loading,\n    error,\n    revision,\n    loadMoreEvents,\n    findRangeForRevision,\n    expandEvent,\n  } = useEvents()\n\n  const {t} = useTranslation('studio')\n  const toast = useToast()\n\n  const selectRev = useCallback(\n    (event: DocumentGroupEvent) => {\n      try {\n        if (\n          isDeleteDocumentVersionEvent(event) ||\n          isDeleteDocumentGroupEvent(event) ||\n          isUnpublishDocumentEvent(event) ||\n          isScheduleDocumentVersionEvent(event) ||\n          isUnscheduleDocumentVersionEvent(event)\n        ) {\n          console.error('Event is not selectable')\n          return\n        }\n        const [since, rev] = findRangeForRevision(event.id)\n        setTimelineRange(since, rev)\n      } catch (err) {\n        toast.push({\n          closable: true,\n          description: err.message,\n          status: 'error',\n          title: t('timeline.error.unable-to-load-revision'),\n        })\n      }\n    },\n    [t, toast, setTimelineRange, findRangeForRevision],\n  )\n\n  const initialLoad = loading && !events.length\n  return (\n    <Flex data-testid=\"review-changes-pane\" direction=\"column\" height=\"fill\">\n      <Card flex={1} padding={2} paddingTop={0}>\n        {error ? (\n          <TimelineError />\n        ) : (\n          <BoundaryElementProvider element={scrollRef}>\n            <Scroller data-ui=\"Scroller\" ref={getScrollerRef}>\n              {listHeight &&\n              // This forces the list to unmount and remount, which is needed to reset the scroll position\n              showList &&\n              !initialLoad ? (\n                <EventsTimeline\n                  events={events}\n                  fetchEventChildren={expandEvent}\n                  hasMoreEvents={Boolean(nextCursor)}\n                  // If we have a revision, we select it, otherwise we select the first event\n                  selectedEventId={revision?.revisionId || events[0]?.id}\n                  onLoadMore={loadMoreEvents}\n                  onSelect={selectRev}\n                  listMaxHeight={`${listHeight}px`}\n                />\n              ) : null}\n              {loading && <LoadingBlock />}\n            </Scroller>\n          </BoundaryElementProvider>\n        )}\n      </Card>\n    </Flex>\n  )\n}\n","import {BoundaryElementProvider, Card, Flex, useToast} from '@sanity/ui'\nimport {useCallback, useState} from 'react'\nimport {\n  type Chunk,\n  ScrollContainer,\n  usePerspective,\n  useTimelineSelector,\n  useTranslation,\n} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Timeline} from '../../timeline'\nimport {TimelineError} from '../../timeline/TimelineError'\nimport {useDocumentPane} from '../../useDocumentPane'\n\nconst Scroller = styled(ScrollContainer)`\n  height: 100%;\n  overflow: auto;\n  position: relative;\n  scroll-behavior: smooth;\n`\n\nexport function HistorySelector({showList}: {showList: boolean}) {\n  const {timelineError, setTimelineRange, timelineStore} = useDocumentPane()\n  const {selectedReleaseId} = usePerspective()\n  const [scrollRef, setScrollRef] = useState<HTMLDivElement | null>(null)\n  const [listHeight, setListHeight] = useState(0)\n\n  const getScrollerRef = useCallback((el: HTMLDivElement | null) => {\n    if (!el?.clientHeight) return\n    /**\n     * Hacky solution, the list height needs to be defined, it cannot be obtained from the parent using a `max-height: 100%`\n     * Because the scroller won't work properly and it won't scroll to the selected element on mount.\n     * To fix this, this component will set the list height to the height of the parent element - 1px, to avoid a double scroll line.\n     */\n    setListHeight(el.clientHeight - 1)\n    setScrollRef(el)\n  }, [])\n\n  const chunks = useTimelineSelector(timelineStore, (state) => state.chunks)\n  const realRevChunk = useTimelineSelector(timelineStore, (state) => state.realRevChunk)\n  const hasMoreChunks = useTimelineSelector(timelineStore, (state) => state.hasMoreChunks)\n  const loading = useTimelineSelector(timelineStore, (state) => state.isLoading)\n\n  const {t} = useTranslation('studio')\n  const toast = useToast()\n  const selectRev = useCallback(\n    (revChunk: Chunk) => {\n      try {\n        const [sinceId, revId] = timelineStore?.findRangeForRev(revChunk) || [null, null]\n        setTimelineRange(sinceId, revId)\n      } catch (err) {\n        toast.push({\n          closable: true,\n          description: err.message,\n          status: 'error',\n          title: t('timeline.error.unable-to-load-revision'),\n        })\n      }\n    },\n    [setTimelineRange, t, timelineStore, toast],\n  )\n\n  const handleLoadMore = useCallback(() => {\n    // If updated, be sure to update the TimeLineMenu component as well\n    if (!loading) {\n      timelineStore?.loadMore()\n    }\n  }, [loading, timelineStore])\n\n  return (\n    <Flex data-testid=\"review-changes-pane\" direction=\"column\" height=\"fill\">\n      <Card flex={1} padding={2} paddingTop={0}>\n        {timelineError || selectedReleaseId ? (\n          <TimelineError versionError={Boolean(selectedReleaseId)} />\n        ) : (\n          <BoundaryElementProvider element={scrollRef}>\n            <Scroller data-ui=\"Scroller\" ref={getScrollerRef}>\n              {listHeight &&\n              // This forces the list to unmount and remount, which is needed to reset the scroll position\n              showList ? (\n                <Timeline\n                  chunks={chunks}\n                  hasMoreChunks={hasMoreChunks}\n                  lastChunk={realRevChunk}\n                  onLoadMore={handleLoadMore}\n                  onSelect={selectRev}\n                  listMaxHeight={`${listHeight}px`}\n                />\n              ) : null}\n            </Scroller>\n          </BoundaryElementProvider>\n        )}\n      </Card>\n    </Flex>\n  )\n}\n","import {CloseIcon, InfoOutlineIcon} from '@sanity/icons'\nimport {Box, Card, Flex, TabList, TabPanel, Text} from '@sanity/ui'\nimport {useState} from 'react'\nimport {\n  type DocumentInspectorProps,\n  isReleaseDocument,\n  Translate,\n  usePerspective,\n  useSource,\n  useTranslation,\n} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Button, Tab, Tooltip} from '../../../../../ui-components'\nimport {usePaneRouter} from '../../../../components/paneRouter/usePaneRouter'\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {HISTORY_INSPECTOR_NAME} from '../../constants'\nimport {ChangesInspector} from './ChangesInspector'\nimport {EventsInspector} from './EventsInspector'\nimport {EventsSelector} from './EventsSelector'\nimport {HistorySelector} from './HistorySelector'\n\nconst FadeInFlex = styled(Flex)`\n  opacity: 0;\n  transition: opacity 200ms;\n  &[data-ready] {\n    opacity: 1;\n  }\n`\nconst TABS = ['history', 'review'] as const\nconst isValidTab = (tab: string | undefined): tab is (typeof TABS)[number] =>\n  // @ts-expect-error TS doesn't understand the type guard\n  tab && TABS.includes(tab)\n\nexport function ChangesTabs(props: DocumentInspectorProps) {\n  const {params, setParams} = usePaneRouter()\n  const source = useSource()\n  const [parentRef, setParentRef] = useState<HTMLDivElement | null>(null)\n  const {t} = useTranslation(structureLocaleNamespace)\n  const isReady = params?.inspect === HISTORY_INSPECTOR_NAME\n  const {selectedPerspective} = usePerspective()\n\n  const paneRouterTab = isValidTab(params?.changesInspectorTab)\n    ? params.changesInspectorTab\n    : TABS[0]\n\n  const setPaneRouterTab = (tab: (typeof TABS)[number]) =>\n    setParams({\n      ...params,\n      changesInspectorTab: tab,\n      // Reset the since when changing the tab, as it's not relevant for the history tab\n      since: tab === 'history' ? undefined : params?.since,\n    })\n\n  const perspectiveName = isReleaseDocument(selectedPerspective)\n    ? selectedPerspective.metadata.title\n    : selectedPerspective === 'drafts'\n      ? t('compare-versions.status.draft')\n      : t('compare-versions.status.published')\n\n  return (\n    <FadeInFlex\n      direction=\"column\"\n      padding={0}\n      height=\"fill\"\n      data-ready={isReady ? '' : undefined}\n      ref={setParentRef}\n    >\n      <Card paddingBottom={1}>\n        <Flex align=\"center\" padding={3} gap={2}>\n          <TabList space={1} flex={1}>\n            <Tab\n              aria-controls=\"history-panel\"\n              id=\"history-tab\"\n              label={t('changes.tab.history')}\n              onClick={() => setPaneRouterTab('history')}\n              selected={paneRouterTab === 'history'}\n            />\n            <Tab\n              aria-controls=\"review-changes-panel\"\n              id=\"changes-tab\"\n              label={t('changes.tab.review-changes')}\n              onClick={() => setPaneRouterTab('review')}\n              selected={paneRouterTab === 'review'}\n            />\n          </TabList>\n          <Button\n            aria-label={t('changes.action.close-label')}\n            icon={CloseIcon}\n            mode=\"bleed\"\n            onClick={props.onClose}\n            tooltipProps={{content: t('document-inspector.close-button.tooltip')}}\n          />\n        </Flex>\n      </Card>\n      <Card padding={2} marginBottom={3} marginX={3} tone=\"neutral\" border radius={3}>\n        <Flex gap={2} align=\"flex-start\">\n          <Tooltip\n            portal\n            placement=\"bottom-end\"\n            boundaryElement={parentRef}\n            content={\n              <Box flex={1} padding={1}>\n                <Text size={1}>\n                  <Translate t={t} i18nKey=\"changes.banner.tooltip\" />\n                </Text>\n              </Box>\n            }\n          >\n            <Text size={0} muted>\n              <InfoOutlineIcon fontSize={1} />\n            </Text>\n          </Tooltip>\n          <Text size={0} muted>\n            <Translate\n              t={t}\n              values={{\n                perspective: perspectiveName,\n              }}\n              i18nKey=\"changes.banner.description\"\n            />\n          </Text>\n        </Flex>\n      </Card>\n\n      <TabPanel\n        aria-labelledby=\"history-tab\"\n        height=\"fill\"\n        hidden={paneRouterTab !== 'history'}\n        id=\"history-panel\"\n      >\n        {source.beta?.eventsAPI?.documents ? (\n          <EventsSelector showList={paneRouterTab === 'history'} />\n        ) : (\n          <HistorySelector showList={paneRouterTab === 'history'} />\n        )}\n      </TabPanel>\n\n      <TabPanel\n        aria-labelledby=\"review-tab\"\n        hidden={paneRouterTab !== 'review'}\n        id=\"review-panel\"\n        height=\"fill\"\n      >\n        {source.beta?.eventsAPI?.documents ? (\n          <>\n            {paneRouterTab === 'review' ? (\n              <EventsInspector showChanges={paneRouterTab === 'review'} />\n            ) : null}\n          </>\n        ) : (\n          <ChangesInspector showChanges={paneRouterTab === 'review'} />\n        )}\n      </TabPanel>\n    </FadeInFlex>\n  )\n}\n","import {RestoreIcon} from '@sanity/icons'\nimport {type DocumentInspector, useTranslation} from 'sanity'\n\nimport {useStructureTool} from '../../../../useStructureTool'\nimport {HISTORY_INSPECTOR_NAME} from '../../constants'\nimport {ChangesTabs} from './ChangesTabs'\n\nexport const changesInspector: DocumentInspector = {\n  name: HISTORY_INSPECTOR_NAME,\n  useMenuItem: () => {\n    const {features} = useStructureTool()\n    const {t} = useTranslation()\n\n    return {\n      hidden: !features.reviewChanges,\n      icon: RestoreIcon,\n      title: t('changes.title'),\n    }\n  },\n  component: ChangesTabs,\n  onClose: ({params}) => ({\n    params: {\n      ...params,\n      since: undefined,\n      rev: undefined,\n      changesInspectorTab: undefined,\n      historyVersion: undefined,\n    },\n  }),\n  onOpen: ({params}) => ({params: {...params, since: '@lastPublished'}}),\n}\n","/* eslint-disable no-loop-func */\n\nimport {type Path, type SanityDocument, type SchemaType} from '@sanity/types'\nimport {isArray, isRecord} from 'sanity'\n\n// eslint-disable-next-line max-statements\nexport function getPathTitles(options: {\n  path: Path\n  schemaType: SchemaType\n  value: Partial<SanityDocument> | null\n}): Array<{name: string; title?: string}> {\n  const {path, schemaType, value} = options\n  const result: Array<{name: string; title?: string}> = []\n\n  let s = schemaType\n  let v: unknown = value\n\n  for (const segment of path) {\n    // field name\n    if (typeof segment === 'string') {\n      if (!isRecord(v) && v !== undefined) {\n        throw new Error(`Parent value is not an object, cannot get path segment: .${segment}`)\n      }\n\n      if (s.jsonType !== 'object') {\n        throw new Error(\n          `Parent type is not an object schema type, cannot get path segment: .${segment}`,\n        )\n      }\n\n      v = v?.[segment]\n\n      const field = s.fields.find((f) => f.name === segment)\n\n      if (!field) {\n        result.push({name: segment})\n        return result\n      }\n\n      s = field.type\n\n      result.push(s)\n\n      continue\n    }\n\n    // array item index\n    if (typeof segment === 'number') {\n      if (!isArray(v) && v !== undefined) {\n        throw new Error(`Parent value is not an array, cannot get path segment: [${segment}]`)\n      }\n\n      if (s.jsonType !== 'array') {\n        throw new Error(\n          `Parent type is not an array schema type, cannot get path segment: [${segment}]`,\n        )\n      }\n\n      v = v?.[segment]\n\n      const itemType = s.of.find((ofType) => {\n        if (typeof v === 'string') {\n          return ofType.jsonType === 'string'\n        }\n\n        if (typeof v === 'number') {\n          return ofType.jsonType === 'number'\n        }\n\n        if (typeof v === 'boolean') {\n          return ofType.jsonType === 'boolean'\n        }\n\n        if (isRecord(v)) {\n          return ofType.name === v?._type\n        }\n\n        return false\n      })\n\n      if (!itemType) {\n        throw new Error(`Item type not found: [${segment}]`)\n      }\n\n      s = itemType\n\n      result.push(s)\n\n      continue\n    }\n\n    // array item key\n    if (isRecord(segment) && segment._key) {\n      // if the value is undefined, it likely means that is has been deleted, so return the result\n      if (typeof v === 'undefined') {\n        return result\n      }\n\n      if (!isArray(v)) {\n        throw new Error(\n          `Parent value is not an array, cannot get path segment: [_key == ${segment}]`,\n        )\n      }\n\n      if (s.jsonType !== 'array') {\n        throw new Error(\n          `Parent type is not an array schema type, cannot get path segment: .${segment}`,\n        )\n      }\n\n      const values = v ?? []\n\n      v = values.find((i) => isRecord(i) && i._key === segment._key)\n\n      // in situations where the segment key exists but it could not be found in the values array\n      // means that the specific item has been deleted from the array\n      // and therefore we not need to continue running the validation for it\n      if (typeof v === 'undefined') {\n        return result\n      }\n\n      if (!isRecord(v)) {\n        throw new Error(`Array item not found: [_key == ${segment._key}]`)\n      }\n\n      const ofType = s.of.find((i) => isRecord(v) && i.name === v?._type)\n\n      if (!ofType) {\n        throw new Error(`Array item type not found: .${v?._type}`)\n      }\n\n      s = ofType\n\n      result.push(s)\n\n      continue\n    }\n\n    throw new Error(`Invalid path segment: ${JSON.stringify(segment)}`)\n  }\n\n  return result\n}\n","import {\n  ErrorOutlineIcon,\n  type IconComponent,\n  InfoOutlineIcon,\n  WarningOutlineIcon,\n} from '@sanity/icons'\nimport {\n  type ObjectSchemaType,\n  type Path,\n  type SanityDocument,\n  type SchemaType,\n  type ValidationMarker,\n} from '@sanity/types'\nimport {Box, Card, type CardTone, Flex, Stack, Text} from '@sanity/ui'\nimport {type ErrorInfo, Fragment, useCallback, useMemo, useState} from 'react'\nimport {type DocumentInspectorProps, isGoingToUnpublish, useTranslation} from 'sanity'\n\nimport {ErrorBoundary} from '../../../../../ui-components'\nimport {DocumentInspectorHeader} from '../../documentInspector'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {getPathTitles} from './getPathTitles'\n\nconst MARKER_ICON: Record<'error' | 'warning' | 'info', IconComponent> = {\n  error: ErrorOutlineIcon,\n  warning: WarningOutlineIcon,\n  info: InfoOutlineIcon,\n}\n\nconst MARKER_TONE: Record<'error' | 'warning' | 'info', CardTone> = {\n  error: 'critical',\n  warning: 'caution',\n  info: 'primary',\n}\n\nexport function ValidationInspector(props: DocumentInspectorProps) {\n  const {onClose} = props\n  const {onFocus, onPathOpen, schemaType, validation, value, editState} = useDocumentPane()\n  const {t} = useTranslation('validation')\n\n  const handleOpen = useCallback(\n    (path: Path) => {\n      onPathOpen(path)\n      onFocus(path)\n    },\n    [onFocus, onPathOpen],\n  )\n\n  const isVersionGoingToUnpublish =\n    editState && editState.version && isGoingToUnpublish(editState.version as SanityDocument)\n\n  return (\n    <Flex direction=\"column\" height=\"fill\" overflow=\"hidden\">\n      <DocumentInspectorHeader\n        as=\"header\"\n        closeButtonLabel={t('panel.close-button-aria-label')}\n        flex=\"none\"\n        onClose={onClose}\n        title={t('panel.title')}\n      />\n\n      <Card flex={1} overflow=\"auto\" padding={3}>\n        {isVersionGoingToUnpublish ? (\n          <Box padding={2}>\n            <Text muted size={1}>\n              {t('panel.unpublish-message')}\n            </Text>\n          </Box>\n        ) : (\n          <>\n            {validation.length === 0 && (\n              <Box padding={2}>\n                <Text muted size={1}>\n                  {t('panel.no-errors-message')}\n                </Text>\n              </Box>\n            )}\n            {validation.length > 0 && (\n              <Stack space={2}>\n                {validation.map((marker, i) => (\n                  <ValidationCard\n                    // oxlint-disable-next-line no-array-index-key\n                    key={i}\n                    marker={marker}\n                    onOpen={handleOpen}\n                    schemaType={schemaType}\n                    value={value}\n                  />\n                ))}\n              </Stack>\n            )}\n          </>\n        )}\n      </Card>\n    </Flex>\n  )\n}\n\nfunction ValidationCard(props: {\n  marker: ValidationMarker\n  onOpen: (path: Path) => void\n  schemaType: ObjectSchemaType\n  value: Partial<SanityDocument> | null\n}) {\n  const {marker, onOpen, schemaType, value} = props\n  const handleOpen = useCallback(() => onOpen(marker.path), [marker, onOpen])\n  const [errorInfo, setErrorInfo] = useState<{error: Error; info: ErrorInfo} | null>(null)\n  const Icon = MARKER_ICON[marker.level]\n\n  return (\n    <ErrorBoundary onCatch={setErrorInfo}>\n      {errorInfo && (\n        <Card padding={3} radius={2} tone=\"critical\">\n          <Text size={1}>{errorInfo.error.message}</Text>\n        </Card>\n      )}\n\n      {!errorInfo && (\n        <Card\n          __unstable_focusRing\n          as=\"button\"\n          onClick={handleOpen}\n          padding={3}\n          radius={2}\n          tone={MARKER_TONE[marker.level]}\n        >\n          <Flex align=\"flex-start\" gap={3}>\n            <Box flex=\"none\">\n              <Text size={1}>\n                <Icon />\n              </Text>\n            </Box>\n\n            <Stack flex={1} space={2}>\n              <DocumentNodePathBreadcrumbs\n                path={marker.path}\n                schemaType={schemaType}\n                value={value}\n              />\n\n              <Text muted size={1}>\n                {marker.message}\n              </Text>\n            </Stack>\n          </Flex>\n        </Card>\n      )}\n    </ErrorBoundary>\n  )\n}\n\nfunction DocumentNodePathBreadcrumbs(props: {\n  path: Path\n  schemaType: SchemaType\n  value: Partial<SanityDocument> | null\n}) {\n  const {path, schemaType, value} = props\n\n  const pathTitles = useMemo(() => {\n    try {\n      return getPathTitles({path, schemaType, value})\n    } catch (e) {\n      console.error(e)\n    }\n    return null\n  }, [path, schemaType, value])\n\n  if (!pathTitles?.length) return null\n\n  return (\n    <Text size={1}>\n      {pathTitles.map((t, i) => (\n        // oxlint-disable-next-line no-array-index-key\n        <Fragment key={i}>\n          {i > 0 && <span style={{color: 'var(--card-muted-fg-color)', opacity: 0.5}}> / </span>}\n          <span style={{fontWeight: 500}}>{t.title || t.name}</span>\n        </Fragment>\n      ))}\n    </Text>\n  )\n}\n","import {CheckmarkCircleIcon, ErrorOutlineIcon, WarningOutlineIcon} from '@sanity/icons'\nimport {useMemo} from 'react'\nimport {\n  type DocumentInspector,\n  type DocumentInspectorMenuItem,\n  type DocumentInspectorUseMenuItemProps,\n  type FormNodeValidation,\n  isGoingToUnpublish,\n  isValidationError,\n  isValidationWarning,\n  usePerspective,\n  useTranslation,\n  useValidationStatus,\n} from 'sanity'\n\nimport {VALIDATION_INSPECTOR_NAME} from '../../constants'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {ValidationInspector} from './ValidationInspector'\n\nfunction useMenuItem(props: DocumentInspectorUseMenuItemProps): DocumentInspectorMenuItem {\n  const {documentId, documentType} = props\n  const {t} = useTranslation('validation')\n  const {selectedReleaseId} = usePerspective()\n  const {validation: validationMarkers} = useValidationStatus(\n    documentId,\n    documentType,\n    selectedReleaseId,\n  )\n  const {value} = useDocumentPane()\n\n  const validation: FormNodeValidation[] = useMemo(\n    () =>\n      validationMarkers.map((item) => ({\n        level: item.level,\n        message: item.message,\n        path: item.path,\n      })),\n    [validationMarkers],\n  )\n\n  const hasErrors = validation.some(isValidationError)\n  const hasWarnings = validation.some(isValidationWarning)\n  const isDocumentGoingToUnpublish = isGoingToUnpublish(value)\n\n  const icon = useMemo(() => {\n    if (hasErrors) return ErrorOutlineIcon\n    if (hasWarnings) return WarningOutlineIcon\n    return CheckmarkCircleIcon\n  }, [hasErrors, hasWarnings])\n\n  const tone = useMemo(() => {\n    if (hasErrors) return 'critical'\n    if (hasWarnings) return 'caution'\n    return 'positive'\n  }, [hasErrors, hasWarnings])\n\n  return {\n    hidden: validation.length === 0 || isDocumentGoingToUnpublish,\n    icon,\n    title: t('panel.title'),\n    tone,\n    showAsAction: true,\n  }\n}\n\nexport const validationInspector: DocumentInspector = {\n  name: VALIDATION_INSPECTOR_NAME,\n  component: ValidationInspector,\n  useMenuItem,\n}\n","import {omit} from 'lodash'\nimport {decodeJsonParams, encodeJsonParams, route} from 'sanity/router'\n\nimport {type RouterPaneGroup, type RouterPanes, type RouterPaneSibling} from './types'\n\nconst EMPTY_PARAMS = {}\n\n/**\n * @internal\n */\nexport function legacyEditParamsToState(params: string): Record<string, unknown> {\n  try {\n    return JSON.parse(decodeURIComponent(params))\n  } catch (err) {\n    console.warn('Failed to parse JSON parameters')\n    return {}\n  }\n}\n\nexport function encodePanesSegment(panes: RouterPanes): string {\n  return (panes || [])\n    .map((group) => group.map(encodeChunks).join('|'))\n    .map(encodeURIComponent)\n    .join(';')\n}\n\n/**\n * @internal\n */\nexport function legacyEditParamsToPath(params: Record<string, unknown>): string {\n  return JSON.stringify(params)\n}\n\n// http://localhost:3333/intent/create/template=book-by-author;type=book/eyJhdXRob3JJZCI6Imdycm0ifQ==\n\n/**\n * @internal\n */\nexport function toState(pathSegment: string): RouterPaneGroup[] {\n  return parsePanesSegment(decodeURIComponent(pathSegment))\n}\n\n/**\n * @internal\n */\nexport function toPath(panes: RouterPaneGroup[]): string {\n  return encodePanesSegment(panes)\n}\n\nexport const router = route.create('/', [\n  // \"Asynchronous intent resolving\" route\n  route.intents('/intent'),\n\n  // Legacy fallback route, will be redirected to new format\n  route.create('/edit/:type/:editDocumentId', [\n    route.create({\n      path: '/:params',\n      transform: {params: {toState: legacyEditParamsToState, toPath: legacyEditParamsToPath}},\n    }),\n  ]),\n\n  // The regular path - when the intent can be resolved to a specific pane\n  route.create({\n    path: '/:panes',\n    // Legacy URLs, used to handle redirects\n    children: [route.create('/:action', route.create('/:legacyEditDocumentId'))],\n    transform: {\n      panes: {toState, toPath},\n    },\n  }),\n])\n\n// old: authors;knut,{\"template\":\"diaryEntry\"}\n// new: authors;knut,view=diff,eyJyZXYxIjoiYWJjMTIzIiwicmV2MiI6ImRlZjQ1NiJ9|latest-posts\n\nconst panePattern = /^([.a-z0-9_-]+),?({.*?})?(?:(;|$))/i\nconst isParam = (str: string) => /^[a-z0-9]+=[^=]+/i.test(str)\nconst isPayloadLike = (str: string) => /^[A-Za-z0-9\\-_]+(?:={0,2})$/.test(str)\nconst exclusiveParams = ['view', 'since', 'rev', 'inspect', 'comment']\n\ntype Truthy<T> = T extends false\n  ? never\n  : T extends ''\n    ? never\n    : T extends 0\n      ? never\n      : T extends 0n\n        ? never\n        : T extends null | undefined\n          ? NonNullable<T>\n          : T\nconst isTruthy = Boolean as (t: unknown) => boolean as <T>(t: T) => t is Truthy<T>\n\nfunction parseChunks(chunks: string[], initial: RouterPaneSibling): RouterPaneSibling {\n  const sibling: RouterPaneSibling = {...initial, params: EMPTY_PARAMS, payload: undefined}\n  return chunks.reduce((pane, chunk) => {\n    if (isParam(chunk)) {\n      const key = chunk.slice(0, chunk.indexOf('='))\n      const value = chunk.slice(key.length + 1)\n      pane.params = {...pane.params, [decodeURIComponent(key)]: decodeURIComponent(value)}\n    } else if (isPayloadLike(chunk)) {\n      pane.payload = tryParseBase64Payload(chunk)\n    } else {\n      console.warn('Unknown pane segment: %s - skipping', chunk)\n    }\n\n    return pane\n  }, sibling)\n}\n\nfunction encodeChunks(pane: RouterPaneSibling, index: number, group: RouterPaneGroup): string {\n  const {payload, params = {}, id} = pane\n  const [firstSibling] = group\n  const paneIsFirstSibling = pane === firstSibling\n  const sameAsFirst = index !== 0 && id === firstSibling.id\n  const encodedPayload =\n    typeof payload === 'undefined' ? undefined : encodeJsonParams(payload as any)\n\n  const encodedParams = Object.entries(params)\n    .filter((entry): entry is [string, string] => {\n      const [key, value] = entry\n      if (!value) return false\n      if (paneIsFirstSibling) return true\n\n      // omit the value if it's the same as the value from the first sibling\n      const valueFromFirstSibling = firstSibling.params?.[key]\n      if (value === valueFromFirstSibling && !exclusiveParams.includes(key)) return false\n      return true\n    })\n    .map(([key, value]) => `${encodeURIComponent(key)}=${encodeURIComponent(value)}`)\n\n  return (\n    [sameAsFirst ? '' : id]\n      .concat([encodedParams.length > 0 && encodedParams, encodedPayload].filter(isTruthy).flat())\n      .join(',') || ','\n  )\n}\n\nexport function parsePanesSegment(str: string): RouterPanes {\n  if (str.indexOf(',{') !== -1) {\n    return parseOldPanesSegment(str)\n  }\n\n  return str\n    .split(';')\n    .map((group) => {\n      const [firstSibling, ...restOfSiblings] = group.split('|').map((segment) => {\n        const [id, ...chunks] = segment.split(',')\n        return parseChunks(chunks, {id})\n      })\n\n      return [\n        firstSibling,\n        ...restOfSiblings.map((sibling) => ({\n          ...firstSibling,\n          ...sibling,\n          id: sibling.id || firstSibling.id,\n          params: {...omit(firstSibling.params, exclusiveParams), ...sibling.params},\n          payload: sibling.payload || firstSibling.payload,\n        })),\n      ]\n    })\n    .filter((group) => group.length > 0)\n}\n\nfunction parseOldPanesSegment(str: string): RouterPanes {\n  const chunks: RouterPaneGroup = []\n\n  let buffer = str\n  while (buffer.length) {\n    const [match, id, payloadChunk] = buffer.match(panePattern) || []\n    if (!match) {\n      buffer = buffer.slice(1)\n      continue\n    }\n\n    const payload = payloadChunk && tryParsePayload(payloadChunk)\n    chunks.push({id, payload})\n\n    buffer = buffer.slice(match.length)\n  }\n\n  return [chunks]\n}\n\nfunction tryParsePayload(json: string) {\n  try {\n    return JSON.parse(json)\n  } catch (err) {\n    console.warn(`Failed to parse parameters: ${err.message}`)\n    return undefined\n  }\n}\n\nfunction tryParseBase64Payload(data: string): unknown {\n  try {\n    return data ? decodeJsonParams(data) : undefined\n  } catch (err) {\n    console.warn(`Failed to parse parameters: ${err.message}`)\n    return undefined\n  }\n}\n","import {MasterDetailIcon} from '@sanity/icons'\nimport {lazy} from 'react'\nimport {definePlugin} from 'sanity'\n\nimport {\n  DeleteAction,\n  DiscardChangesAction,\n  DuplicateAction,\n  HistoryRestoreAction,\n  PublishAction,\n  UnpublishAction,\n} from './documentActions'\nimport {LiveEditBadge} from './documentBadges'\nimport {getIntentState} from './getIntentState'\nimport {structureUsEnglishLocaleBundle} from './i18n'\nimport {changesInspector} from './panes/document/inspectors/changes'\nimport {validationInspector} from './panes/document/inspectors/validation'\nimport {router} from './router'\nimport {type StructureToolOptions} from './types'\n\nconst documentActions = [\n  PublishAction,\n  UnpublishAction,\n  DiscardChangesAction,\n  DuplicateAction,\n  DeleteAction,\n  HistoryRestoreAction,\n]\n\nconst documentBadges = [LiveEditBadge]\n\nconst inspectors = [validationInspector, changesInspector]\n\n/**\n * The structureTool is a studio plugin which adds the “structure tool” – a tool within\n * Sanity Studio in which content editors can drill down to specific documents to edit them.\n * You can configure your Studio's structure tool(s).\n *\n * @public\n * @param options - Options for the structure tool. See {@link StructureToolOptions}\n * @example Minimal example\n * ```ts\n * // sanity.config.ts\n * import { defineConfig } from 'sanity'\n * import { structureTool } from 'sanity/structure'\n *\n * export default defineConfig((\n *  // ...\n *  plugins: [\n *    structureTool() // use defaults\n *  ]\n * })\n * ```\n *\n * @example To customise your structure tool\n * ```ts\n * // sanity.config.ts\n * import { defineConfig } from 'sanity'\n * import { structureTool } from 'sanity/structure'\n * import { FaCar } from 'react-icons'\n\n * export default defineConfig((\n *\t // ...\n *   plugins: [\n *    structureTool({\n *      name: 'cars',\n *      title: 'Cars',\n *      icon: FaCar,\n *      structure: (S) => S.documentTypeList('car'),\n *      defaultDocumentNode: (S) =>\n *        S.document().views([\n *          S.view.form(),\n *          S.view.component(Preview).title('Preview')\n *        ])\n *    })\n *  ]\n * })\n * ```\n * */\nexport const structureTool = definePlugin<StructureToolOptions | void>((options) => {\n  const icon = options?.icon || MasterDetailIcon\n\n  return {\n    name: 'sanity/structure',\n    document: {\n      actions: (prevActions) => {\n        // NOTE: since it's possible to have several structure tools in one Studio,\n        // we need to check whether the document actions already exist in the Studio config\n        return Array.from(new Set([...prevActions, ...documentActions]))\n      },\n      badges: (prevBadges) => {\n        // NOTE: since it's possible to have several structure tools in one Studio,\n        // we need to check whether the document badges already exist in the Studio config\n        return Array.from(new Set([...prevBadges, ...documentBadges]))\n      },\n      inspectors: (prevInspectors) => {\n        // NOTE: since it's possible to have several structure tools in one Studio,\n        // we need to check whether the inspectors already exist in the Studio config\n        return Array.from(new Set([...prevInspectors, ...inspectors]))\n      },\n    },\n\n    tools: [\n      {\n        name: options?.name || 'structure',\n        title: options?.title || 'Structure',\n        icon,\n        component: lazy(() => import('./components/structureTool')),\n        canHandleIntent: (intent, params) => {\n          if (intent === 'create') return canHandleCreateIntent(params)\n          if (intent === 'edit') return canHandleEditIntent(params)\n          return false\n        },\n        getIntentState,\n        // Controlled by sanity/src/structure/components/structureTool/StructureTitle.tsx\n        controlsDocumentTitle: true,\n        options,\n        router,\n        __internalApplicationType: 'sanity/structure',\n      },\n    ],\n\n    i18n: {\n      bundles: [structureUsEnglishLocaleBundle],\n    },\n  }\n})\n\nfunction canHandleCreateIntent(params: Record<string, unknown>) {\n  // We can't handle create intents without a `type` parameter\n  if (!('type' in params)) {\n    return false\n  }\n\n  // We can handle any create intent as long as it has a `type` parameter,\n  // but we also know how to deal with templates, where other tools might not\n  return 'template' in params ? {template: true} : true\n}\n\nfunction canHandleEditIntent(params: Record<string, unknown>) {\n  // We can't handle edit intents without an `id` parameter\n  if (!('id' in params)) {\n    return false\n  }\n\n  // We can handle any edit intent with a document ID, but we're best at `structure` mode\n  // This ensures that other tools that can handle modes such as `presentation` or `batch`\n  // can take precedence over the structure tool\n  return 'mode' in params ? {mode: params.mode === 'structure'} : true\n}\n"],"names":["useCreatePathSyncChannel","$","_c","t0","Symbol","for","Subject","DIFF_VIEW_SEARCH_PARAMETER","DIFF_VIEW_PREVIOUS_DOCUMENT_SEARCH_PARAMETER","DIFF_VIEW_NEXT_DOCUMENT_SEARCH_PARAMETER","DIFF_SEARCH_PARAM_DELIMITER","useDiffViewRouter","navigate","state","routerState","useRouter","t1","mode","previousDocument","nextDocument","next","fromPairs","_searchParams","type","id","join","toPairs","navigateDiffView","filter","_temp","exitDiffView","t2","key","includes","diffViewModes","isDiffViewMode","maybeDiffViewMode","useDiffViewState","onParamsError","searchParams","URLSearchParams","get","anyParamSet","some","param","params","useMemo","parseParams","useEffect","result","errors","isActive","previousDocumentType","previousDocumentId","split","Boolean","nextDocumentType","nextDocumentId","push","length","documents","previous","useScrollMirror","elements","existentElements","scrollMirror","ScrollMirror","destroy","element","VersionModeHeaderLayout","styled","header","VersionModeHeaderLayoutSection","div","VersionModeHeader","documentId","t","useTranslation","structureLocaleNamespace","data","documentVersions","useDocumentVersions","activeReleases","useActiveReleases","releasesIds","flatMap","getVersionFromId","releases","release","releaseId","getReleaseIdFromReleaseDocumentId","_id","onSelectPreviousRelease","useCallback","selectedDocumentId","onSelectNextRelease","jsxs","jsx","Box","Text","Flex","TransferIcon","justifySelf","Button","CloseIcon","VersionMenu","onSelectRelease","role","document","published","draft","useEditState","getPublishedId","selected","findRelease","tStructure","tCore","drafts","enabled","isDraftModelEnabled","useWorkspace","MenuButton","getMenuButtonProps","Menu","map","VersionMenuItem","onSelect","isSelected","onClick","getDraftId","getVersionId","MenuItem","ReleaseAvatar","tone","getReleaseTone","Stack","metadata","title","releaseType","formatRelativeLocalePublishDate","isReleaseScheduledOrScheduling","LockIcon","text","disabled","isReleaseDocument","icon","iconRight","undefined","isPublishedId","isDraftId","find","DialogLayout","pickDocumentLayoutComponent","plugin","components","unstable_layout","usePathSyncChannel","syncChannel","source","t3","t4","pipe","distinctUntilChanged","_temp2","path","state_0","deepEquals","Scroller","DiffViewPaneLayout","Card","Container","UiContainer","DiffViewPane","forwardRef","ref","documentType","scrollElement","compareDocument","containerElement","useRef","portalElement","setPortalElement","useState","boundaryElement","setBoundaryElement","pick","defaultComponent","DocumentLayout","useMiddlewareComponents","isInteractive","onOpenReviewChanges","noop","onSetFocus","isReviewChangesOpen","t5","t6","t7","t8","t9","t10","t11","t12","DialogProvider","t13","PortalProvider","t14","t15","t16","t17","BoundaryElementProvider","t18","ReviewChangesContext","ChangeIndicatorsTracker","VirtualizerScrollInstanceProvider","DiffViewDocument","compareValue","useCompareValue","patchChannel","perspectiveName","selectedPerspectiveName","comparisonValue","useDocumentForm","collapsedFieldSets","collapsedPaths","documentForm","formState","onBlur","onChange","onFocus","onProgrammaticFocus","onSetActiveFieldGroup","onSetCollapsedFieldSet","onSetCollapsedPath","ready","schemaType","value","isLoading","pathSyncChannel","onPathOpen","subscription","subscribe","unsubscribe","LoadingBlock","CommentsEnabledContext","FormBuilder","focusPath","changed","focused","groups","validation","members","presence","isVersionId","compareDocumentEditState","bb0","version","createPatchChannel","Link","a","EditReferenceLinkComponent","children","_documentId","intent","href","useIntentLink","DiffView","previousPaneElement","setPreviousPaneElement","nextPaneElement","setNextPaneElement","referenceInputOptionsContext","useContext","ReferenceInputOptionsContext","disableNew","diffViewReferenceInputOptionsContext","Dialog","DiffViewDocumentLayout","toast","useToast","status","description","error","input","Fragment","PANE_DEBUG","PANE_COLLAPSED_WIDTH","PANE_DEFAULT_MIN_WIDTH","usePaneLayout","pane","PaneLayoutContext","Error","Root","Layer","PaneDivider","resize","dragging","setDragging","event","preventDefault","startX","pageX","handleMouseMove","e","deltaX","handleMouseUp","e_0","window","removeEventListener","addEventListener","handleMouseDown","Pane","props","forwardedRef","currentMaxWidthProp","currentMinWidthProp","maxWidthProp","minWidthProp","restProps","currentMinWidth","currentMaxWidth","flex","minWidth","maxWidth","flexProp","rootElement","setRootElement","collapse","collapsed","layoutCollapsed","expand","expandedElement","mount","panes","p","indexOf","paneIndex","nextPane","isLast","expanded","nextCollapsed","current","useImperativeHandle","refValue","setRef","useLayoutEffect","handleCollapse","handleExpand","index","contextValue","bb1","hidden","LegacyLayerProvider","divider","Infinity","style","t19","t20","t21","t22","t23","IsLastPaneProvider","t24","PaneContext","t25","displayName","usePane","PaneContent","as","overflow","padding","toLowerCaseNoSpaces","str","toLocaleLowerCase","replaceAll","MENU_GROUP_POPOVER_PROPS","constrainSize","placement","portal","PaneMenuButtonItem","isAfterGroup","node","getI18nText","useGetI18nText","MenuDivider","child","childIndex","child_0","childIndex_0","MenuGroup","PaneContextMenuItemResolver","PaneContextMenuItem","reason","tooltipContent","useI18nText","hotkey","CheckmarkIcon","onAction","TooltipOfDisabled","PaneContextIntentMenuItem","intentLink","handleClick","CONTEXT_MENU_POPOVER_PROPS","nodesHasTone","nodes","PaneContextMenuButton","actionsNodes","useId","hasCritical","hasCaution","ContextMenuButton","nodeIndex","RootCard","PaneFooter","$border","css","Layout","TitleCard","theme","fg","bg","sanity","color","card","TitleTextSkeleton","TextSkeleton","TitleText","PaneHeader","actions","backButton","border","contentAfter","loading","subActions","tabs","tabIndex","appendTitle","paneElement","paneRect","useElementRect","height","innerHeight","width","layoutStyle","handleTitleClick","handleLayoutClick","showTabsOrSubActions","LayerProvider","getDisabledReason","disabledReason","ariaLabel","isDisabled","PaneHeaderActionButton","console","warn","PaneHeaderMenuItemActionButton","hotkeys","content","StatusButton","PaneHeaderActionIntentButton","PaneHeaderMenuGroupActionButton","UnknownIcon","idx","_calcPaneResize","cache","left","right","sum","leftMinWidth","rightMinWidth","leftMaxWidth","Math","min","rightMaxWidth","minDeltaX","rightMinDeltaX","maxDeltaX","leftMaxDeltaX","_deltaX","max","leftW","rightW","leftFlex","rightFlex","_getDOMPath","el","parentElement","Array","from","childNodes","unshift","EMPTY_PATH","_sortElements","WeakMap","set","_sortByElementPath","b","_a","_b","len","i","aIndex","bIndex","sort","createPaneLayoutController","observers","optionsMap","userCollapsedElementSet","Set","rootWidth","resizeDataMap","Map","resizing","add","_notifyObservers","delete","options","original","splice","leftElement","leftIndex","leftOptions","rightElement","rightOptions","offsetWidth","leftResizeData","rightResizeData","nextRootElement","setRootWidth","nextRootWidth","observer","_elements","dataMap","lastElement","collapsedWidth","remaingWidth","userCollapsed","has","sizeCollapsed","resizeData","PaneLayout","onCollapse","onExpand","controller","setState","paneLayout","ErrorPane","paneKey","Delay","ms","setReady","timeoutId","setTimeout","clearTimeout","getWaitMessages","thresholds","messageKey","isDev","message","src","of","merge","threshold","mapTo","delay","DEFAULT_MESSAGE_KEY","Content","LoadingPane","memo","messageProp","resolvedMessage","currentMessage","setCurrentMessage","sub","contentElement","setContentElement","mounted","setMounted","_raf2","DELAY","useDocumentPane","documentPane","DocumentPaneContext","CommentsWrapper","CommentsEnabledProvider","CommentsProviderWrapper","useCommentsEnabled","connectionState","inspector","openInspector","selectedReleaseId","usePerspective","setParams","usePaneRouter","studioUrl","useStudioUrl","location","origin","resolveIntentLink","selectedCommentId","comment","paramsRef","commentId","inspect","COMMENTS_INSPECTOR_NAME","getCommentLink","handleClearSelectedComment","name","handleOpenCommentsInspector","CommentsProvider","PaneRouterContext","useFilteredReleases","displayed","archivedReleases","useArchivedReleases","isCreatingDocument","_createdAt","notCurrentReleases","currentReleases","inCreation","reduce","acc","versionDocExists","historyVersion","archivedRelease","r","useDocumentIdStack","editState","filteredReleases","systemStack","flat","releaseStack","stack","concat","position","findIndex","previousId","nextId","useStructureTool","structureTool","StructureToolContext","DOCUMENT_PANEL_MIN_WIDTH","DOCUMENT_PANEL_INITIAL_MIN_WIDTH","DOCUMENT_INSPECTOR_MIN_WIDTH","DOCUMENT_INSPECTOR_MAX_WIDTH","EMPTY_PARAMS","INSPECT_ACTION_PREFIX","DEFAULT_MENU_ITEM_GROUPS","HISTORY_INSPECTOR_NAME","VALIDATION_INSPECTOR_NAME","DocumentInspectorMenuItemsResolver","inspectors","onMenuItems","menuItems","setMenuItems","newFieldActions","setMenuItem","prev","InspectorMenuItems","useMenuItem","defineInspectorMenuItemComponent","InspectorMenuItem","menuItem","useUnique","useDocumentTitle","isDeleted","lastRevisionDocument","documentValue","subscribed","prepareForPreview","deletedDocumentPreview","error_0","useValuePreview","IGNORE_OPS","DocumentOperationResults","pushToast","documentPaneValue","documentTitleInfo","titleError","useDocumentOperationEvent","prevEvent","paneRouter","op","documentTitleBase","slice","documentTitle","cleanupId","closable","duration","context","Translate","Strong","closeCurrentAndAfter","isLiveEditEnabled","liveEdit","hasObsoleteDraft","workspace","draftExists","mustChooseNewDocumentDestination","isSelectedPerspectiveWriteable","isNewDocument","zIndex","lineHeight","DocumentInspectorHeader","closeButtonLabel","forwardedAs","onClose","DocumentInspectorPanel","closeInspector","features","handleClose","Component","component","resizablePanes","Resizable","STRUCTURE_TOOL_NAMESPACE","useStructureToolSetting","namespace","defaultValue","keyValueStore","useKeyValueStore","keyValueStoreKey","getKey","value_0","useObservable","newValue","setKey","VIEW_MODE_PARSED","VIEW_MODE_RAW","VIEW_MODES","lru","LRU","maxSize","isExpanded","keyPath","cached","isArray","isRecord","toggleExpanded","selectElement","sel","getSelection","range","createRange","removeAllRanges","selectNodeContents","addRange","select","currentTarget","maybeSelectAll","keyCode","metaKey","ctrlKey","isDocumentLike","isString","_type","JSONInspectorWrapper","fonts","space","code","family","sizes","fontSize","rem","syntax","property","constant","string","boolean","number","Search","query","target","handleChange","TextInput","SearchIcon","InspectDialog","onInspectClose","dialogIdPrefix","viewModeId","onViewModeChange","viewMode","setParsedViewMode","setRawViewMode","DocumentTitle","bottom","Tab","TabList","outline","JsonInspector","ignoreCase","Code","JSON","stringify","TabPanel","Banner","Icon","action","rest","paddingY","DeletedDocumentBanners","isDeleting","selectedPerspective","isPublishedPerspective","isDraftPerspective","DeletedDocumentBanner","restore","useDocumentOperation","navigateIntent","execute","handleRestore","ReadOnlyIcon","ArchivedReleaseBanner","DocumentRemoveIcon","DeprecatedDocumentTypeBanner","isDeprecatedSchemaType","deprecated","ErrorOutlineIcon","AskToEditDialogOpened","defineEvent","AskToEditRequestSent","MAX_NOTE_LENGTH","DialogBody","attrs","align","direction","justify","RequestPermissionDialog","onRequestSubmitted","telemtry","useTelemetry","dialogId","projectId","useProjectId","apiVersion","client","useClient","zOffset","useZIndex","isSubmitting","setIsSubmitting","note","setNote","msgError","setMsgError","hasTooManyRequests","setHasTooManyRequests","hasBeenDenied","setHasBeenDenied","adminRole","observable","roles","request","url","startWith","catchError","requestedRole","method","body","requestUrl","then","log","catch","err","statusCode","response","errMessage","finally","onSubmit","fullscreen","cancelButton","confirmButton","role_0","appliesToUsers","LOADING_STATE","EMPTY_STATE","DECLINED_STATE","PENDING_STATE","EXPIRED_STATE","useRoleRequestsStatus","checkRoleRequests","checkRoleRequests$","tag","requests","projectRequests","resourceId","declinedRequest","isAfter","addWeeks","Date","createdAt","isBefore","InsufficientPermissionBanner","requiredPermission","currentUser","useCurrentUser","roleRequestStatus","requestStatusLoading","requestStatusError","requestSent","setRequestSent","requestPending","currentUserRoles","isOnlyViewer","showRequestPermissionDialog","setShowRequestPermissionDialog","listFormat","useListFormat","telemetry","roleTitles","formatToParts","Roles","count","part","ReferenceChangedBanner","documentPreviewStore","useDocumentPreviewStore","groupIndex","routerPanesState","replaceCurrent","BackLink","routerReferenceId","parentSibling","parentId","hasHistoryOpen","rev","parentRefPath","pathFromString","referenceInfoObservable","parentRefPathSegment","publishedId","keyedSegmentIndex","unstable_observePathsDocumentPair","debounceTime","availability","pathGet","snapshot","_ref","referenceInfo","handleReloadReference","available","SyncIcon","WarningOutlineIcon","ArchivedReleaseDocumentBanner","handleGoBack","historyEvent","since","VersionBadge","getVersionInlineBadge","Image","img","CANVAS_IMAGE_URL","CANVAS_APP_NAME","CanvasPopoverContent","useClickOutsideEvent","ComposeSparklesIcon","Heading","LaunchIcon","CanvasLinkedBannerContent","open","setOpen","documentVariantType","getDocumentVariantType","variantText","togglePopover","InfoOutlineIcon","Popover","CanvasLinkedBanner","companionDoc","useCanvasCompanionDoc","navigateToCanvas","useNavigateToCanvasDoc","canvasDocumentId","ChooseNewDocumentDestinationBanner","perspective","isPerspectiveWriteable","menuItemProps","ReleasesNav","CreateLinkedBanner","documentLinkedBannerContent","CreateLinkedBannerContent","useSanityCreateConfig","getSanityCreateLinkMetadata","createLinkMetadata","TOAST_DELAY","DocumentNotInReleaseBanner","currentRelease","isScheduledRelease","LATEST","createVersion","useVersionOperations","versionCreateState","setVersionCreateState","handleAddToRelease","lastUpdate","now","useCurrentTime","useConditionalToast","getTime","updateIntervalMs","currentTime","setCurrentTime","intervalId","setInterval","clearInterval","ResolvedLiveEdit","ObsoleteDraftBanner","i18nKey","isEditBlocking","isPublishing","setPublishing","isDiscarding","setDiscarding","publish","discardChanges","liveEditResolveType","handlePublish","handleDiscard","diffViewRouter","compareDraft","OpenReleaseToEditBanner","isPinnedDraftOrPublished","onlyHasVersions","useOnlyHasVersions","OpenReleaseToEditBannerInner","setPerspective","useSetPerspective","currentVersion","documentVersionsTitleList","handleGoToEdit","VersionInlineBadge","RevisionNotFoundBanner","revisionNotFound","ScheduledReleaseBanner","date","UnpublishedDocumentBanner","isCurrentVersionGoingToUnpublish","isGoingToUnpublish","UnpublishIcon","TitleContainer","heading","FormHeader","isSingleton","__experimental_formPreviewTitle","Inline","Tooltip","ev","FormView","margins","fieldActions","openPath","documentStore","useDocumentStore","useDocumentPresence","isLocked","transactionSyncLock","pair","documentEvents","tap","prepareMutationEvent","prepareRebaseEvent","hasRev","_rev","patches","handleInitialValue","useEffectEvent","formRef","setFormRef","focusedFirstDescendant","setFocusedFirstDescendant","focusFirstDescendant","isReadOnly","readOnly","Spinner","PresenceOverlay","mutations","mut","patch","fromMutationPatches","remotePatches","remoteMutations","localPatches","localMutations","DocumentHeaderTabs","activeViewId","views","tabPanelId","view","DocumentHeaderTab","label","viewId","setView","DocumentHeaderTitle","FavoriteToggle","documentExists","isFavorited","isReady","favorite","unfavorite","useManageFavorite","StarFilledIcon","StarIcon","DocumentPanelSubHeader","activeWorkspace","useActiveWorkspace","publishedDocId","showTabs","showBackButton","ArrowLeftIcon","dataset","CapabilityGate","favoriteToggle","DocumentBox","ScrollContainer","$disabled","DocumentPanel","footerHeight","headerHeight","isInspectOpen","setDocumentPanelPortalElement","footer","permissions","isPermissionsLoading","isSanityCreateLinked","showCreateBanner","parentPortal","usePortal","_portalElement","documentScrollElement","setDocumentScrollElement","formContainerElement","activeView","splitPanes","formViewHidden","ActiveViewComponent","historical","activeViewNode","scrollTo","inspectDialog","showInspector","documentInScheduledRelease","isSystemBundle","isPinnedDraftOrPublish","displayedHasObsoleteDraft","granted","banners","showFormView","isMenuNodeButton","renderAsButton","isNotMenuNodeButton","negate","resolveMenuNodes","menuItemGroups","keyOffset","mapFieldActionToPaneMenuNode","itemGroup","g","i18n","ungroupedItems","item","group","shortcut","actionHandler","showAsAction","childIdx","_DEBUG","Object","freeze","LOADING_PANE","DOCUMENT_PANEL_PORTAL_ELEMENT","POPOVER_FALLBACK_PLACEMENTS","DIALOG_WIDTH_TO_UI_WIDTH","small","medium","large","full","ConfirmDialog","dialog","referenceElement","ConfirmDialogContent","cancelButtonIcon","cancelButtonText","confirmButtonIcon","confirmButtonText","onCancel","onConfirm","isTopLayer","useLayer","useGlobalKeyDown","borderTop","Grid","ModalDialog","showCloseButton","PopoverDialog","PopoverDialogContent","DocumentActionPortalProvider","ActionStateDialog","modalId","unknownModal","ActionDialogWrapper","actionStates","actionIndex","setActionIndex","currentAction","handleAction","ActionMenuButton","idPrefix","setReferenceElement","preventOverflow","popoverProps","actionState","renderActionDialog","ActionMenuListItem","onHandle","String","replace","tooltipProps","s","toUpperCase","DISABLED_REASON_TITLE_KEY","NOTHING_TO_DELETE","NOT_READY","DeleteAction","onComplete","setIsDeleting","paneSetIsDeleting","deleteOp","isConfirmDialogOpen","setConfirmDialogOpen","handleCancel","handleConfirm","handle","permission","useDocumentPairPermissions","InsufficientPermissionsMessage","TrashIcon","ConfirmDeleteDialog","DISABLED_REASON_KEY","NO_CHANGES","NOT_PUBLISHED","DiscardChangesAction","isPublished","ResetIcon","NOTHING_TO_DUPLICATE","DuplicateAction","mapDocument","duplicate","isDuplicating","setDuplicating","dupeId","uuid","duplicateSuccess","firstValueFrom","operationEvents","CopyIcon","HistoryRestoreAction","revision","isRevisionInitial","isRevisionLatest","RevertIcon","DocumentPublished","LIVE_EDIT_ENABLED","ALREADY_PUBLISHED","PUBLISHED_STATE","publishedAt","AlreadyPublished","useTemporalPhrase","timeSincePublished","useRelativeTime","PublishAction","publishState","setPublishState","validationStatus","useValidationStatus","syncState","useSyncState","changesOpen","isValidationErrorMarker","hasValidationErrors","publishScheduled","setPublishScheduled","isSyncing","isValidating","_updatedAt","currentPublishRevision","publishRevision","doPublish","validationComplete","didPublish","nextState","timer","publishedImmediately","previouslyPublished","PublishIcon","UnpublishAction","unpublish","isDraft","DocumentStatusBarActionsInner","states","__internal_tasks","useSource","firstActionState","menuActionStates","buttonElement","setButtonElement","Hotkeys","marginTop","marginBottom","showFirstActionButton","isSanityDefinedAction","sideMenuItems","footerAction","DocumentStatusBarActions","allActions","isInitialValueLoading","initialValueResolved","actionProps","renderDocumentStatusBarActions","HistoryStatusBarActions","revisionId","isRestoreAction","historyActions","toLowerCase","useChipScrollPosition","containerRef","showGradient","setShowGradient","checkOverflow","container","scrollWidth","clientWidth","scrollLeft","isAtEnd","setupObservers","container_0","intersectionObserver","mutationObserver","IntersectionObserver","entries","entry","isIntersecting","updateLastChipObserver","disconnect","lastChip","observe","MutationObserver","childList","subtree","intersectionObserver_0","mutationObserver_0","TooltipContent","intendedPublishAt","DATE_TIME_FORMAT","dateStyle","timeStyle","DocumentPerspectiveList","dateTimeFormat","useDateTimeFormat","schema","useSchema","handlePerspectiveChange","isLiveEdit","isPublishedChipDisabled","getReleaseChipState","isReleaseHistoryMatch","isPublishSelected","isDraftSelected","displayedId","isDraftDisabled","VersionChip","format","menuReleaseId","releasesLoading","fromRelease","isVersion","releaseState","HorizontalScroller","getTheme_v2","$showGradient","rgba","DocumentPanelHeader","_props","onMenuAction","onPaneClose","onPaneSplit","unstable_languageFilter","hasGroupSiblings","useFieldActions","scrollContainerRef","menuNodes","menuButtonNodes","contextMenuNodes","showSplitPaneButton","splitViews","showSplitPaneCloseButton","showPaneGroupCloseButton","renderPaneActions","renderedActions","LanguageFilterComponent","SplitVerticalIcon","TooltipDelayGroupProvider","DocumentPanelHeaderActionDialogDeferred","useDeferredValue","DocumentPanelHeaderActionDialog","SpacerButton","size","pointerEvents","visibility","BADGE_TONES","primary","success","warning","danger","DocumentBadgesInner","DocumentBadgesDeferred","DocumentBadges","badges","renderDocumentBadges","badge","Badge","whiteSpace","TIMELINE_ICON_COMPONENTS","create","AddIcon","discardDraft","initial","editDraft","EditIcon","editLive","getTimelineEventIconComponent","hideScrollbarOnExpand","listWrapper","getElementById","TIMELINE_LIST_WRAPPER_ID","firstChildren","scrollHeight","clientHeight","currentStyle","getComputedStyle","overflowY","FlipIcon","ChevronLeftIcon","ExpandableTimelineItemButton","stopPropagation","handleExpandClick","StackWrapper","ListWrapper","$maxHeight","$visible","TIMELINE_ITEM_I18N_KEY_MAPPING","UserAvatarStack","maxLength","userIds","withTooltip","userId","UserAvatar","AvatarStack","IconBox","$color","avatar","TIMELINE_ITEM_EVENT_TONE","withinSelection","RELATIVE_TIME_OPTIONS","minimal","NameSkeleton","Skeleton","font","UserLine","user","useUser","AvatarSkeleton","collaborators","TimelineItem","chunk","optionsMenu","endTimestamp","timestamp","IconComponent","authors","authorUserIds","collaboratorsUsersIds","isSelectable","dateFormat","updatedTimeAgo","parsedDate","formattedTimestamp","evt","isNonPublishChunk","isPublishChunk","getPreviousPublishAction","chunks","previousPublish","addChunksMetadata","forEach","Timeline","hasMoreChunks","lastChunk","selectedChunk","onLoadMore","listMaxHeight","selectedChunkId","chunksWithMetadata","expandedParents","setExpandedParents","filteredChunks","handleExpandParent","selectedIndex","handleSelectChunk","timelineChunk","c","renderItem","activeIndex","CommandList","TimelineError","versionError","TextWithTone","TIMELINE_MENU_PORTAL","TimelineMenu","setTimelineRange","timelineError","timelineStore","button","setButton","popoverRef","setPopoverRef","useTimelineSelector","realRevChunk","sinceTime","handleOpen","handleGlobalKeyDown","focus","selectRev","revChunk","sinceId","revId","findRangeForRev","selectSince","sinceChunk","findRangeForSince","handleLoadMore","loadMore","formatParams","revLabel","sinceLabel","buttonLabel","ChevronDownIcon","StyledMotionPath","motion","Circle","Arrows","Checkmark","rotateAnimation","keyframes","RotateGroup","root","syncing","scale","transition","saved","changes","circle","strokeDasharray","strokeDashoffset","opacity","arrows","checkmark","pathLength","AnimatedStatusIcon","STATUS_DICTIONARY","DocumentStatusPulse","currentStatus","MotionButton","MotionBox","ButtonSkeleton","margin","DocumentStatusButton","author","translationKey","onHistoryOpen","onHistoryClose","relativeTime","FallbackStatus","createDocumentVersion","editDocumentVersion","EventsStatus","events","useEvents","TimelineStatus","TIMELINE_ITEM_I18N_KEY_MAPPING_LEGACY","SYNCING_TIMEOUT","SAVED_TIMEOUT","DocumentStatusLine","setStatus","eventsEnabled","beta","eventsAPI","lastUpdated","timerId","timerId_0","AnimatePresence","StatusText","RevisionStatusLine","RestoreIcon","useResizeObserver","onResize","resizeObserver","unobserve","CONTAINER_BREAKPOINT","AnimatedCard","DocumentStatusBar","actionsBoxRef","onDocumentChange","CreateLinkedActions","documentLinkedActions","showingRevision","setCollapsed","contentRect","handleResize","shouldRender","flexShrink","marginLeft","KeyboardShortcutResponder","actionsBoxElement","onActionStart","onKeyDown","rootRef","As","activeAction","matchingStates","isHotkey","matchingState","handleKeyDown","DocumentActionShortcuts","setActiveIndex","renderDocumentActionShortcuts","getInspectorItems","currentInspector","hasValue","inspectorMenuItems","getInspectItem","JsonIcon","getCompareVersionsItem","documentIdStack","getProductionPreviewItem","previewUrl","EarthAmericasIcon","getMenuItems","inspectorItems","items","LinkIcon","DocumentLayoutError","DIALOG_PROVIDER_POSITION","DocumentLayoutFooter","documentPanelPortalElement","setFooterElement","setActionsBoxElement","zOffsets","portalElements","EMPTY_ARRAY","StyledChangeConnectorRoot","ChangeConnectorRoot","inspectOpen","paneParams","footerElement","headerElement","setHeaderElement","useGlobalCopyPasteElementHandler","setInspectorMenuItems","rootFieldActionNodes","setRootFieldActionNodes","footerRect","headerRect","handleKeyUp","onConnectorSetFocus","GetFormValueProvider","FieldActionsResolver","FieldActionsProvider","paneDialog","changesInspectorTab","useDocumentLayoutComponent","useDocumentLastRev","historyStore","useHistoryStore","setLastRevisionDocument","setLoading","useTimelineStore","lastNonDeletedRevId","getDocumentAtRevision","DocumentURLCopied","getInitialValueTemplateOpts","templates","opts","payload","panePayload","structureNodeTemplate","templateName","urlTemplate","template","typeTemplates","templateParams","useDocumentPaneInitialValue","paneOptions","useTemplates","templateParameters","initialValueRaw","useInitialValue","useDocumentPaneInspector","inspectorsResolver","inspectorName","setInspectorName","inspectParamRef","historyInspector","closeInspectorName","nextInspectorName","nextInspector","currentParams","onOpen","handleHistoryClose","handleHistoryOpen","reviewChanges","toggleLegacyInspect","toggle","handleLegacyInspectClose","handleInspectorAction","isSanityDocument","usePreviewUrl","resolveProductionUrl","BehaviorSubject","subject","asObservable","switchMap","DocumentPaneProvider","onFocusPath","forcedVersion","store","timelineReady","revisionDocument","onOlderRevision","sinceDocument","isPristine","setDocumentMeta","useCopyPaste","documentActions","documentBadges","unstable_fieldActions","fieldActionsResolver","languageFilterResolver","draftsEnabled","setPaneParams","viewsProp","documentIdRaw","buildStudioUrl","initialValue","getIsDeleted","getComparisonValue","getIsReadOnly","getDisplayed","formReady","formStateRef","initialFocusPath","getFormDocumentValue","getDocumentVersionType","actionsPerspective","documentActionsProps","versionType","languageFilter","newSince","newRev","handlePaneClose","closeCurrent","handlePaneSplit","duplicateCurrent","handleMenuAction","navigator","copyUrl","coreUi","clipboard","writeText","startsWith","currentDisplayed","pathRef","restParams","pathFromUrl","resolveKeyedPath","DocumentEventsPane","usePaneOptions","showingPublishedOnDraft","eventsStore","useEventsStore","sinceRevision","historyStoreProps","PerspectiveProvider","EventsProvider","isDeleteDocumentGroupEvent","isDeleteDocumentVersionEvent","DocumentPaneWithLegacyTimelineStore","setTimelineError","onError","revTime","sinceAttributes","_temp3","timelineDisplayed","_temp4","_temp5","_temp6","_temp7","state_1","state_2","state_3","state_4","state_5","DocumentPaneProviderWrapper","useResetHistoryParams","isMounted","_perspective","preserveRev","updateHistoryParams","DocumentPane","parentSourceName","CopyPasteProvider","SourceProvider","DocumentPaneInner","resolveNewDocumentOptions","isLoaded","isDocumentLoaded","useDocumentType","templateItems","templatePermissions","isTemplatePermissionsLoading","useTemplatePermissions","mergeDocumentType","providerProps","ReferenceChildLink","handleEditReference","childParams","routerPanesStateLength","activePath","ReferenceInputOptionsProvider","StateLink","ChildLink","childId","childParameters","childPayload","ParameterizedLink","currentPanes","siblingIndex","nextParams","nextPayload","currentGroup","currentSibling","nextSibling","nextGroup","pathToString","emptyArray","PaneRouterProvider","flatIndex","resolvePathFromState","useRouterState","routerPaneGroups","lastPane","modifier","currentItem","nextPanes","createNextRouterState","modifier_0","nextRouterState_0","nextRouterState","modifyCurrentGroup","nextRouterState_1","siblings","createPathWithParams","siblings_0","item_0","setPayload","nextParams_0","siblings_1","item_1","siblings_3","item_3","duplicatedItem","omit","groupLength","ctx","siblings_2","item_2","sibling","UnknownPane","paneMap","lazy","documentList","list","StructureToolPane","active","childItemId","itemId","PaneComponent","Suspense","prevParams","prevPayload","isEqual","keys","DocTitle","ChevronWrapper","CrossDatasetReferencesDetails","details","CrossDatasetReferencesSummary","summary","Table","table","DocumentIdFlex","OtherReferenceCount","difference","totalCount","references","PaneItemPreview","layout","versionsInfo","useDocumentVersionInfo","perspectiveStack","getPreviewStateObservable","previewStateObservable","previewIsLoading","versions","DocumentPreviewPresence","DocumentStatusIndicator","DocumentStatus","tooltip","getPreviewValueWithFallback","fallback","SanityDefaultPreview","ReferencePreviewLink","documentPresence","linkProps","PreviewCard","ConfirmDeleteDialogBody","crossDatasetReferences","internalReferences","datasetNames","hasUnknownDatasetNames","onReferenceLinkClick","renderPreviewItem","normalizedDatasetNames","datasets","datasetSubtitle","DocumentsIcon","documentCount","datasetName","reference","isClientError","POLL_INTERVAL","visiblePoll$","getVisiblePoll$","fromEvent","visibilityState","visible","EMPTY","shareReplay","refCount","bufferSize","getDocumentExistence","versionedClient","draftId","requestOptions","uri","getDataUrl","json","excludeContent","omitted","nonExistant","doc","fetchCrossDatasetReferences","checkDocumentId","currentDataset","config","useInternalReferences","createHookFromObservableFactory","listenQuery","fetch","listen","transitions","throttleTime","useCrossDatasetReferences","useReferringDocuments","DEFAULT_STUDIO_CLIENT_OPTIONS","isInternalReferencesLoading","isCrossDatasetReferencesLoading","projectIds","crossDatasetReference_1","crossDatasetReference","crossDatasetReference_0","LoadingContainer","showConfirmButton","ConfirmDeleteDialogContainer","setError","handleRetry","ErrorBoundary","IntentButton","linkRef","IntentLink","InsufficientPermissionsMessageTooltip","reveal","POPOVER_PROPS","getIntent","typeName","templateId","baseParams","initialDocumentId","parameters","PaneHeaderCreateButton","nothingGranted","every","permissionsById","firstItem","itemIndex","disabled_0","intent_0","permission_0","isNonNullable","hashObject","sortObject","v","keyA","keyB","localeCompare","parse","PaneHeaderActions","initialValueTemplateItems","initialValueTemplateItemsFromStructure","actionHandlers","EMPTY_OBJECT","handler","actionNodes","initialValueTemplateItemFromMenuItems","menuItemIndex","intentParams","combinedInitialValueTemplates","uniqBy","MissingSchemaType","getIconWithFallback","defaultIcon","PaneItem","pressed","hasSchemaType","clicked","setClicked","DocumentIcon","ChevronRightIcon","FolderIcon","preview","preloading","setPreload","timeoutRef","startTransition","handleMouseEnter","handleMouseLeave","PreloadDocumentPane","RenderActionCollectionState","onActionComplete","liveEditSchemaType","GetHookCollectionState","SUPPORTED_LINKED_TO_CANVAS_ACTIONS","ActionsGuardWrapper","isLinked","RenderBadgeCollectionState","badgeProps","PARTIAL_PAGE_LIMIT","FULL_LIST_LIMIT","DEFAULT_ORDERING","by","field","EMPTY_RECORD","RootBox","$opacity","CommandListBox","SKELETON_ITEMS","LoadingView","num","DocumentListPaneContent","isRetrying","autoRetry","filterIsSimpleTypeConstraint","hasMaxItems","hasSearchQuery","isLazyLoading","muted","isConnected","retryCount","canRetry","loadingVariant","onEndReached","onRetry","paneTitle","searchInputElement","showIcons","setShouldRender","handleEndReached","isLastItem","showSpinner","showMaxItemsMessage","limit","noDocumentsContent","isOnline","onLine","ErrorActions","mainContent","removePublishedWithDrafts","collate","hasDraft","hasPublished","applyOrderingFunctions","order","orderBy","mapWith","fieldType","tryResolveSchemaTypeForPath","fieldExtendsType","jsonType","baseType","pathSegments","PathUtils","fromString","segment","getFieldTypeByName","isKeySegment","isIndexSegment","memberType","otherType","isReferenceSchemaType","refType","otherRefType","to","fieldName","fields","ofType","findTypes","base","types","isSplat","findStaticTypesInFilter","swr","createSWR","listenSearchQuery","groqFilter","searchQuery","staticTypeNames","maxFieldDepth","searchStrategy","sortBy","extendedProjection","events$","defer","includeAllVersions","includeResult","mergeMap","isFirst","throwError","share","welcome$","mutationAndReconnect$","partition","swrKey","fiilter","asyncScheduler","leading","trailing","exhaustMapWithTrailing","typeNames","getSearchableTypes","getExtendedProjection","search","createSearch","strategy","maxDepth","doFetch","__unstable_extendedProjection","comments","skipSortByScore","hits","hit","scan","connected","fromCache","INITIAL_QUERY_STATE","isLoadingFullList","isRetriableError","ChannelError","ServerError","ClientError","useDocumentList","searchFilter","paramsProp","sortOrder","useSearchMaxFieldDepth","typeNameFromFilter","onRetry$","observableCallback","onFetchFullList$","onLoadFullList","queryResults$","listenSearchQueryArgs","partialList$","fullList$","withLatestFrom","take","takeUntil","catchWithCount","lastError","caught$","safeError","retries","NEVER","retrying","nonErrorThrownWarning","thrown","rotate","fadeIn","AnimatedSpinnerIcon","SpinnerIcon","SubtleSpinnerIcon","DelayedSubtleSpinnerIcon","DocumentListPane","sortOrderRaw","displayOptions","useShallowUnique","staticTypes","setSearchQuery","searchInputValue","setSearchInputValue","setSearchInputElement","sortWithOrderingFn","documentListIsLoading","trim","handleQueryChange","useObservableEvent","event$","debounce","handleClearSearch","handleSearchKeyDown","enableSearchSpinner","setEnableSearchSpinner","textInputIcon","useReconnectingToast","initialValueTemplates","setLayout","setSortOrder","StructurePaneHeader","DocumentSheetListSelect","row","selectedAnchor","setSelectedAnchor","meta","handleOnClick","shiftKey","shiftClickIndex","lowerIndex","upperIndex","additionalSelectedRows","getRowModel","flatRows","currentSelectedRows","getSelectedRowModel","rows","setRowSelection","nextSelectedRows","rowId","isRowCurrentlySelected","getIsSelected","toggleSelected","Checkbox","paddingLeft","getCanSelect","useDocumentSheetListContext","DocumentSheetListContext","DocumentSheetListProvider","selectedAnchorCellDetails","setSelectedAnchorCellDetails","selectedRangeCellIndexes","setSelectedRangeCellIndexes","clearAndSetFocusSelection","nextAnchorDetails","activeElement","HTMLElement","blur","resetFocusSelection","changeSelectionColumn","visibleColumns","getVisibleLeafColumns","columnIndexAfterMove","col","colId","rowIndex","changeSelectionRange","previousSelection","anchorIndex","getNextIndex","startingIndex","firstSelectedIndex","lastIndexSelected","nextIndex","setSelectedAnchorCell","handleEscapePress","nextAnchorCellDetails","handleUpDownKey","isShiftKey","offset","newSelectedCellRowIndex","handleAnchorKeydown","handleAnchorClick","contains","focusAnchorCell","anchorCellDetails","getStateByCellId","submitFocusedCell","DataCell","td","PinnedDataCell","SheetListCellInner","getValue","column","cellId","renderValue","setRenderValue","isDirty","setIsDirty","inputRef","cellState","handleOnFocus","patchDocument","handleProgrammaticFocus","HTMLInputElement","handleOnMouseDown","detail","handleOnEnterDown","handleOnChange","handleOnBlur","handlePaste","clipboardData","getData","handleCopy","toString","getBorderStyle","inputProps","Select","boxShadow","SheetListCell","cell","isPinned","getIsPinned","Cell","borderWidth","getIsLastColumn","getStart","borderRight","getSize","flexRender","columnDef","getContext","VISIBLE_COLUMN_LIMIT","PreviewCell","displayValue","columnHelper","createColumnHelper","SUPPORTED_FIELDS","getColsFromSchemaType","parentalField","tableColumns","nextCol","accessor","enableHiding","info","isObjectSchemaType","columns","isAccessorKeyColumnDef","isGroupColumnDef","flatColumns","cols","useDocumentSheetColumns","documentSchemaType","display","getIsSomeRowsSelected","getToggleAllPageRowsSelectedHandler","initialColumnsVisibility","accCols","countAllowedVisible","visibilityKey","ColumnsControl","isVisibleLimitReached","getCanHide","setInitialColumns","resetColumnVisibility","handleColumnOnChange","toggleVisibility","getColumnVisibilityDisabled","isColumnVisible","getIsVisible","isSingleColumnVisible","maxHeight","getAllLeafColumns","SearchContainer","DocumentSheetListFilter","useSearchState","filtersVisible","SearchHeader","Filters","Header","th","PinnedHeader","HoverMenu","DocumentSheetListHeader","headerGroup","headerTitle","depth","parent","HeaderTag","canShowHeaderMenu","boxSizing","EllipsisHorizontalIcon","DocumentSheetListPaginator","setPageIndex","getCanPreviousPage","DoubleChevronLeftIcon","previousPage","getState","pagination","pageIndex","getPageCount","nextPage","getCanNextPage","DoubleChevronRightIcon","pageSize","setPageSize","Number","createDocumentsSet","documentsReducer","nextDocumentResult","_","restDocuments","updatedDocument","LISTEN_OPTIONS","useDocumentSheetListStore","QUERY","dispatch","useReducer","setIsLoading","res","initialFetch","handleListenerEvent","err_0","listener$","uniques","values","dataAsArray","useDocumentSheetList","h","PaneContainer","TableContainer","DocumentSheetListPaneInner","totalRows","useReactTable","getCoreRowModel","getFilteredRowModel","getPaginationRowModel","autoResetPageIndex","initialState","columnPinning","columnVisibility","getRowId","fieldId","renderRow","getVisibleCells","rowsCount","getHeaderGroups","headers","DocumentSheetListPane","schemaTypeName","isDocumentSchemaType","SearchProvider","addSelectedStateToMenuItems","setPrevious","shallowEquals","defaultLayout","defaultOrdering","sourceName","defaultSortOrder","menuItemsWithSelectedState","isSheetListLayout","LiveEditBadge","activePanes","setActivePanes","getIntentState","editDocumentId","canHandleIntent","getPaneParams","ChangesInspector","showChanges","scrollRef","setScrollRef","diff","selectionState","isComparingCurrent","structureT","FieldWrapper","rootDiff","showFromValue","documentContext","ChangeFieldWrapper","NoChanges","ChangeList","DocumentChangeContext","getIsSelectable","isUnpublishDocumentEvent","isScheduleDocumentVersionEvent","isUnscheduleDocumentVersionEvent","EventTimelineItem","cursor","Event","PublishedEventMenu","portalContext","versionId","versionRevisionId","handleOpenReleaseDocument","handleOpenDraftDocument","isMenuDisabled","RELEASES_INTENT","textDecoration","children_0","releaseTitle","children_1","fallbackPlacements","children_2","TimelineItemWrapper","CHILDREN_ITEMS_VARIANTS","animate","exit","ITEM_HEIGHT","EventsTimeline","allEvents","hasMoreEvents","selectedEventId","fetchEventChildren","selectedEvent","expandingParents","setExpandingParents","isCreateDocumentVersionEvent","isEditDocumentVersionEvent","isExpanding","renderOptionsMenu","isPublishDocumentVersionEvent","creationEvent","showExpandingLoader","isLastEvent","EventsTimelineMenu","nextCursor","eventsError","findRangeForRevision","loadMoreEvents","expandEvent","revEvent","sinceEvent","SpinnerContainer","DIFF_INITIAL_VALUE","CompareWithPublishedView","diffInput","wrap","EventsInspector","getChangesList","changesList$","diffLoading","diffError","toEvent","sinceEvents","sameRevisionSelected","ChangesError","SameRevisionSelected","EventsSelector","showList","listHeight","setListHeight","getScrollerRef","initialLoad","HistorySelector","FadeInFlex","TABS","isValidTab","tab","ChangesTabs","parentRef","setParentRef","paneRouterTab","setPaneRouterTab","t26","t27","t28","t29","t30","t31","changesInspector","getPathTitles","f","itemType","_key","MARKER_ICON","MARKER_TONE","ValidationInspector","isVersionGoingToUnpublish","marker","ValidationCard","errorInfo","setErrorInfo","level","DocumentNodePathBreadcrumbs","pathTitles","fontWeight","validationMarkers","hasErrors","isValidationError","hasWarnings","isValidationWarning","isDocumentGoingToUnpublish","CheckmarkCircleIcon","validationInspector","legacyEditParamsToState","decodeURIComponent","encodePanesSegment","encodeChunks","encodeURIComponent","legacyEditParamsToPath","toState","pathSegment","parsePanesSegment","toPath","router","route","intents","transform","panePattern","isParam","test","isPayloadLike","exclusiveParams","isTruthy","parseChunks","tryParseBase64Payload","firstSibling","paneIsFirstSibling","sameAsFirst","encodedPayload","encodeJsonParams","encodedParams","valueFromFirstSibling","parseOldPanesSegment","restOfSiblings","buffer","match","payloadChunk","tryParsePayload","decodeJsonParams","definePlugin","MasterDetailIcon","prevActions","prevBadges","prevInspectors","tools","canHandleCreateIntent","canHandleEditIntent","controlsDocumentTitle","__internalApplicationType","bundles","structureUsEnglishLocaleBundle"],"mappings":"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"}