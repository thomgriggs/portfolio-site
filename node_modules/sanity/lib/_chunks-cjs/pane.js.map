{"version":3,"file":"pane.js","sources":["../../src/structure/diffView/hooks/useCreatePathSyncChannel.ts","../../src/structure/diffView/constants.ts","../../src/structure/diffView/hooks/useDiffViewRouter.ts","../../src/structure/diffView/types/diffViewMode.ts","../../src/structure/diffView/hooks/useDiffViewState.ts","../../src/structure/diffView/hooks/useScrollMirror.tsx","../../src/structure/diffView/utils/findRelease.ts","../../src/structure/diffView/versionMode/components/VersionModeHeader.tsx","../../src/structure/diffView/components/DialogLayout.ts","../../src/structure/panes/document/document-layout/pickDocumentLayoutComponent.ts","../../src/structure/diffView/hooks/usePathSyncChannel.ts","../../src/structure/diffView/components/Scroller.ts","../../src/structure/diffView/components/DiffViewPane.tsx","../../src/structure/diffView/components/EditReferenceLinkComponent.tsx","../../src/structure/diffView/components/DiffView.tsx","../../src/structure/diffView/plugin/DiffViewDocumentLayout.tsx","../../src/structure/components/pane/constants.ts","../../src/structure/components/pane/usePaneLayout.ts","../../src/structure/components/pane/PaneDivider.tsx","../../src/structure/components/pane/Pane.tsx","../../src/structure/components/pane/PaneContent.styles.tsx","../../src/structure/components/pane/usePane.ts","../../src/structure/components/pane/PaneContent.tsx","../../src/structure/util/toLowerCaseNoSpaces.tsx","../../src/structure/components/pane/PaneMenuButtonItem.tsx","../../src/structure/components/pane/PaneContextMenuButton.tsx","../../src/structure/components/pane/PaneFooter.styles.tsx","../../src/structure/components/pane/PaneFooter.tsx","../../src/structure/components/pane/PaneHeader.styles.tsx","../../src/structure/components/pane/PaneHeader.tsx","../../src/structure/components/pane/PaneHeaderActionButton.tsx","../../src/structure/components/pane/PaneLayout.styles.tsx","../../src/structure/components/pane/helpers/_calcPaneResize.ts","../../src/structure/components/pane/helpers/_getDOMPath.ts","../../src/structure/components/pane/helpers/_sortElements.ts","../../src/structure/components/pane/paneLayoutController.ts","../../src/structure/components/pane/PaneLayout.tsx","../../src/structure/panes/error/ErrorPane.tsx","../../src/structure/components/Delay.tsx","../../src/structure/panes/loading/getWaitMessages.ts","../../src/structure/panes/loading/LoadingPane.tsx","../../src/structure/panes/document/useDocumentPane.tsx","../../src/structure/panes/document/comments/CommentsWrapper.tsx","../../src/structure/components/paneRouter/usePaneRouter.ts","../../src/structure/hooks/useFilteredReleases.ts","../../src/structure/hooks/useDocumentIdStack.ts","../../src/structure/useStructureTool.ts","../../src/structure/panes/document/constants.ts","../../src/structure/panes/document/DocumentInspectorMenuItemsResolver.tsx","../../src/structure/panes/document/useDocumentTitle.ts","../../src/structure/panes/document/DocumentOperationResults.tsx","../../src/structure/components/paneItem/helpers.tsx","../../src/structure/hasObsoleteDraft.ts","../../src/structure/mustChooseNewDocumentDestination.ts","../../src/structure/panes/document/documentInspector/DocumentInspectorHeader.tsx","../../src/structure/panes/document/documentInspector/DocumentInspectorPanel.tsx","../../src/structure/useStructureToolSetting.ts","../../src/structure/panes/document/inspectDialog/constants.ts","../../src/structure/panes/document/inspectDialog/helpers.ts","../../src/structure/panes/document/inspectDialog/InspectDialog.styles.tsx","../../src/structure/panes/document/inspectDialog/Search.tsx","../../src/structure/panes/document/inspectDialog/InspectDialog.tsx","../../src/structure/panes/document/documentPanel/banners/Banner.tsx","../../src/structure/panes/document/documentPanel/banners/DeletedDocumentBanners.tsx","../../src/structure/panes/document/documentPanel/banners/DeprecatedDocumentTypeBanner.tsx","../../src/structure/components/requestPermissionDialog/__telemetry__/RequestPermissionDialog.telemetry.ts","../../src/structure/components/requestPermissionDialog/RequestPermissionDialog.tsx","../../src/structure/components/requestPermissionDialog/useRoleRequestsStatus.tsx","../../src/structure/panes/document/documentPanel/banners/InsufficientPermissionBanner.tsx","../../src/structure/panes/document/documentPanel/banners/ReferenceChangedBanner.tsx","../../src/structure/panes/document/documentPanel/banners/ScheduledDraftOverrideBanner.tsx","../../src/structure/panes/document/documentPanel/banners/ArchivedReleaseDocumentBanner.tsx","../../src/structure/panes/document/documentPanel/banners/CanvasLinkedBanner.tsx","../../src/structure/panes/document/documentPanel/banners/ChooseNewDocumentDestinationBanner.tsx","../../src/structure/panes/document/documentPanel/banners/CreateLinkedBanner.tsx","../../src/structure/panes/document/documentPanel/banners/DocumentNotInReleaseBanner.tsx","../../src/structure/panes/document/documentPanel/banners/__telemetry__/DraftLiveEditBanner.telemetry.ts","../../src/structure/panes/document/documentPanel/banners/ObsoleteDraftBanner.tsx","../../src/structure/panes/document/documentPanel/banners/OpenReleaseToEditBanner.tsx","../../src/structure/panes/document/documentPanel/banners/RevisionNotFoundBanner.tsx","../../src/structure/panes/document/documentPanel/banners/ScheduledReleaseBanner.tsx","../../src/structure/panes/document/documentPanel/banners/UnpublishedDocumentBanner.tsx","../../src/structure/panes/document/documentPanel/documentViews/FormHeader.tsx","../../src/structure/panes/document/documentPanel/documentViews/FormView.tsx","../../src/structure/panes/document/documentPanel/header/DocumentHeaderTabs.tsx","../../src/structure/panes/document/documentPanel/header/DocumentHeaderTitle.tsx","../../src/structure/panes/document/documentPanel/header/FavoriteToggle.tsx","../../src/structure/panes/document/documentPanel/header/DocumentPanelSubHeader.tsx","../../src/structure/panes/document/documentPanel/DocumentPanel.tsx","../../src/structure/menuNodes.ts","../../src/structure/constants.ts","../../src/structure/panes/document/statusBar/dialogs/constants.ts","../../src/structure/panes/document/statusBar/dialogs/ConfirmDialog.tsx","../../src/structure/panes/document/statusBar/dialogs/ModalDialog.tsx","../../src/structure/panes/document/statusBar/dialogs/PopoverDialog.tsx","../../src/structure/panes/document/statusBar/ActionStateDialog.tsx","../../src/structure/panes/document/statusBar/ActionMenuButton.tsx","../../src/structure/documentActions/DeleteAction.tsx","../../src/structure/documentActions/DiscardChangesAction.tsx","../../src/structure/documentActions/DuplicateAction.tsx","../../src/structure/documentActions/HistoryRestoreAction.tsx","../../src/structure/documentActions/__telemetry__/documentActions.telemetry.ts","../../src/structure/documentActions/PublishAction.tsx","../../src/structure/documentActions/UnpublishAction.tsx","../../src/structure/panes/document/statusBar/DocumentStatusBarActions.tsx","../../src/structure/panes/document/documentPanel/header/hook/useChipScrollPosition.tsx","../../src/structure/panes/document/documentPanel/header/perspective/DocumentPerspectiveList.tsx","../../src/structure/panes/document/documentPanel/header/DocumentPanelHeader.tsx","../../src/structure/components/spacerButton/SpacerButton.tsx","../../src/structure/panes/document/statusBar/DocumentBadges.tsx","../../src/structure/panes/document/timeline/constants.ts","../../src/structure/panes/document/timeline/helpers.ts","../../src/structure/panes/document/timeline/expandableTimelineItemButton.tsx","../../src/structure/panes/document/timeline/timeline.styled.tsx","../../src/structure/panes/document/timeline/timelineI18n.ts","../../src/structure/panes/document/timeline/userAvatarStack.tsx","../../src/structure/panes/document/timeline/timelineItem.tsx","../../src/structure/panes/document/timeline/utils.ts","../../src/structure/panes/document/timeline/timeline.tsx","../../src/structure/panes/document/timeline/TimelineError.tsx","../../src/structure/panes/document/timeline/timelineMenu.tsx","../../src/structure/panes/document/statusBar/DocumentStatusPulse/AnimatedStatusIcon.tsx","../../src/structure/panes/document/statusBar/DocumentStatusPulse/DocumentStatusPulse.tsx","../../src/structure/panes/document/statusBar/DocumentStatusLine.tsx","../../src/structure/panes/document/statusBar/RevisionStatusLine.tsx","../../src/structure/panes/document/statusBar/useResizeObserver.ts","../../src/structure/panes/document/statusBar/DocumentStatusBar.tsx","../../src/structure/panes/document/keyboardShortcuts/DocumentActionShortcuts.tsx","../../src/structure/panes/document/menuItems.ts","../../src/structure/panes/document/document-layout/DocumentLayoutError.tsx","../../src/structure/panes/document/document-layout/DocumentLayoutFooter.tsx","../../src/structure/panes/document/document-layout/DocumentLayout.tsx","../../src/structure/panes/document/document-layout/useDocumentLayoutComponent.ts","../../src/structure/hooks/useDocumentLastRev.ts","../../src/structure/panes/document/__telemetry__/documentPanes.telemetry.ts","../../src/structure/panes/document/getInitialValueTemplateOpts.ts","../../src/structure/panes/document/useDocumentPaneInitialValue.ts","../../src/structure/panes/document/useDocumentPaneInspector.ts","../../src/structure/panes/document/usePreviewUrl.ts","../../src/structure/panes/document/DocumentPaneProvider.tsx","../../src/structure/panes/document/DocumentEventsPane.tsx","../../src/structure/panes/document/DocumentPaneLegacyTimeline.tsx","../../src/structure/panes/document/DocumentPerspectiveProvider.tsx","../../src/structure/panes/document/DocumentPaneProviderWrapper.tsx","../../src/structure/panes/document/useResetHistoryParams.ts","../../src/structure/panes/document/DocumentPane.tsx","../../src/structure/components/paneRouter/BackLink.tsx","../../src/structure/components/paneRouter/ChildLink.tsx","../../src/structure/components/paneRouter/ParameterizedLink.tsx","../../src/structure/components/paneRouter/ReferenceChildLink.tsx","../../src/structure/components/paneRouter/PaneRouterProvider.tsx","../../src/structure/panes/unknown/UnknownPaneType.tsx","../../src/structure/panes/StructureToolPane.tsx","../../src/structure/components/DocTitle.tsx","../../src/structure/components/confirmDeleteDialog/ConfirmDeleteDialogBody.styles.tsx","../../src/structure/components/paneItem/PaneItemPreview.tsx","../../src/structure/components/confirmDeleteDialog/ReferencePreviewLink.tsx","../../src/structure/components/confirmDeleteDialog/ConfirmDeleteDialogBody.tsx","../../src/structure/components/confirmDeleteDialog/useReferringDocuments.ts","../../src/structure/components/confirmDeleteDialog/ConfirmDeleteDialog.tsx","../../src/structure/components/confirmDeleteDialog/index.tsx","../../src/structure/components/IntentButton.tsx","../../src/structure/components/paneHeaderActions/InsufficientPermissionsMessageTooltip.tsx","../../src/structure/components/paneHeaderActions/PaneHeaderCreateButton.tsx","../../src/structure/components/paneHeaderActions/PaneHeaderActions.tsx","../../src/structure/components/MissingSchemaType.tsx","../../src/structure/components/paneItem/PaneItem.tsx","../../src/structure/components/RenderActionCollectionState.tsx","../../src/structure/components/RenderBadgeCollectionState.tsx","../../src/structure/panes/documentList/constants.ts","../../src/structure/panes/documentList/DocumentListPaneContent.tsx","../../src/structure/panes/documentList/helpers.ts","../../src/structure/panes/documentList/listenSearchQuery.ts","../../src/structure/panes/documentList/useDocumentList.ts","../../src/structure/panes/documentList/DocumentListPane.tsx","../../src/structure/panes/documentList/PaneHeader.tsx","../../src/structure/panes/documentList/sheetList/DocumentSheetListSelect.tsx","../../src/structure/panes/documentList/sheetList/DocumentSheetListProvider.tsx","../../src/structure/panes/documentList/sheetList/SheetListCell.tsx","../../src/structure/panes/documentList/sheetList/useDocumentSheetColumns.tsx","../../src/structure/panes/documentList/sheetList/ColumnsControl.tsx","../../src/structure/panes/documentList/sheetList/DocumentSheetListFilter.tsx","../../src/structure/panes/documentList/sheetList/DocumentSheetListHeader.tsx","../../src/structure/panes/documentList/sheetList/DocumentSheetListPaginator.tsx","../../src/structure/panes/documentList/sheetList/useDocumentSheetListStore.ts","../../src/structure/panes/documentList/sheetList/useDocumentSheetList.ts","../../src/structure/panes/documentList/sheetList/DocumentSheetListPane.tsx","../../src/structure/panes/documentList/PaneContainer.tsx","../../src/structure/documentBadges/LiveEditBadge.ts","../../src/structure/getIntentState.ts","../../src/structure/panes/document/inspectors/changes/ChangesInspector.tsx","../../src/structure/panes/document/timeline/events/EventTimelineItem.tsx","../../src/structure/panes/document/timeline/events/PublishedEventMenu.tsx","../../src/structure/panes/document/timeline/events/EventsTimeline.tsx","../../src/structure/panes/document/timeline/events/EventsTimelineMenu.tsx","../../src/structure/panes/document/inspectors/changes/EventsInspector.tsx","../../src/structure/panes/document/inspectors/changes/EventsSelector.tsx","../../src/structure/panes/document/inspectors/changes/HistorySelector.tsx","../../src/structure/panes/document/inspectors/changes/ChangesTabs.tsx","../../src/structure/panes/document/inspectors/changes/index.ts","../../src/structure/panes/document/inspectors/validation/getPathTitles.ts","../../src/structure/panes/document/inspectors/validation/ValidationInspector.tsx","../../src/structure/panes/document/inspectors/validation/index.ts","../../src/structure/router.ts","../../src/structure/structureTool.ts"],"sourcesContent":["import {useMemo} from 'react'\nimport {Subject} from 'rxjs'\n\nimport {type PathSyncChannel, type PathSyncState} from '../types/pathSyncChannel'\n\n/**\n * @internal\n */\nexport function useCreatePathSyncChannel(): PathSyncChannel {\n  return useMemo(() => new Subject<PathSyncState>(), [])\n}\n","/**\n * @internal\n */\nexport const DIFF_VIEW_SEARCH_PARAMETER = 'diffView'\n\n/**\n * @internal\n */\nexport const DIFF_VIEW_PREVIOUS_DOCUMENT_SEARCH_PARAMETER = 'previousDocument'\n\n/**\n * @internal\n */\nexport const DIFF_VIEW_NEXT_DOCUMENT_SEARCH_PARAMETER = 'nextDocument'\n\n/**\n * @internal\n */\nexport const DIFF_SEARCH_PARAM_DELIMITER = ','\n","import {fromPairs, toPairs} from 'lodash'\nimport {useCallback} from 'react'\nimport {useRouter} from 'sanity/router'\n\nimport {\n  DIFF_SEARCH_PARAM_DELIMITER,\n  DIFF_VIEW_NEXT_DOCUMENT_SEARCH_PARAMETER,\n  DIFF_VIEW_PREVIOUS_DOCUMENT_SEARCH_PARAMETER,\n  DIFF_VIEW_SEARCH_PARAMETER,\n} from '../constants'\nimport {type DiffViewMode} from '../types/diffViewMode'\n\ntype NavigateDiffView = (\n  options: {\n    mode?: DiffViewMode\n  } & Partial<\n    Record<\n      'previousDocument' | 'nextDocument',\n      {\n        type: string\n        id: string\n      }\n    >\n  >,\n) => void\n\nexport interface DiffViewRouter {\n  navigateDiffView: NavigateDiffView\n  exitDiffView: () => void\n}\n\n/**\n * @internal\n */\nexport function useDiffViewRouter(): DiffViewRouter {\n  const {navigate, state: routerState} = useRouter()\n\n  const navigateDiffView = useCallback<NavigateDiffView>(\n    ({mode, previousDocument, nextDocument}) => {\n      const next = {\n        ...fromPairs(routerState._searchParams),\n        ...(mode\n          ? {\n              [DIFF_VIEW_SEARCH_PARAMETER]: mode,\n            }\n          : {}),\n        ...(previousDocument\n          ? {\n              [DIFF_VIEW_PREVIOUS_DOCUMENT_SEARCH_PARAMETER]: [\n                previousDocument.type,\n                previousDocument.id,\n              ].join(DIFF_SEARCH_PARAM_DELIMITER),\n            }\n          : {}),\n        ...(nextDocument\n          ? {\n              [DIFF_VIEW_NEXT_DOCUMENT_SEARCH_PARAMETER]: [nextDocument.type, nextDocument.id].join(\n                DIFF_SEARCH_PARAM_DELIMITER,\n              ),\n            }\n          : {}),\n      }\n\n      navigate({\n        ...routerState,\n        _searchParams: toPairs(next),\n      })\n    },\n    [navigate, routerState],\n  )\n\n  const exitDiffView = useCallback(() => {\n    navigate({\n      ...routerState,\n      _searchParams: (routerState._searchParams ?? []).filter(\n        ([key]) =>\n          ![\n            DIFF_VIEW_SEARCH_PARAMETER,\n            DIFF_VIEW_PREVIOUS_DOCUMENT_SEARCH_PARAMETER,\n            DIFF_VIEW_NEXT_DOCUMENT_SEARCH_PARAMETER,\n          ].includes(key),\n      ),\n    })\n  }, [navigate, routerState])\n\n  return {\n    navigateDiffView,\n    exitDiffView,\n  }\n}\n","/**\n * @internal\n */\nexport const diffViewModes = ['version'] as const\n\n/**\n * @internal\n */\nexport type DiffViewMode = (typeof diffViewModes)[number]\n","import {useEffect, useMemo} from 'react'\nimport {useRouter} from 'sanity/router'\n\nimport {\n  DIFF_SEARCH_PARAM_DELIMITER,\n  DIFF_VIEW_NEXT_DOCUMENT_SEARCH_PARAMETER,\n  DIFF_VIEW_PREVIOUS_DOCUMENT_SEARCH_PARAMETER,\n  DIFF_VIEW_SEARCH_PARAMETER,\n} from '../constants'\nimport {type DiffViewMode, diffViewModes} from '../types/diffViewMode'\n\nfunction isDiffViewMode(maybeDiffViewMode: unknown): maybeDiffViewMode is DiffViewMode {\n  return diffViewModes.includes(maybeDiffViewMode as DiffViewMode)\n}\n\ntype DiffViewState =\n  | {\n      isActive: true\n      state: 'ready'\n      mode: DiffViewMode\n      documents: Record<\n        'previous' | 'next',\n        {\n          type: string\n          id: string\n        }\n      >\n    }\n  | {\n      isActive: true\n      state: 'error'\n      mode: DiffViewMode\n      documents?: never\n    }\n  | {\n      isActive: false\n      state?: never\n      mode?: never\n      documents?: never\n    }\n\nexport function useDiffViewState({\n  onParamsError,\n}: {\n  onParamsError?: (errors: DiffViewStateErrorWithInput[]) => void\n} = {}): DiffViewState {\n  const {state: routerState} = useRouter()\n  const searchParams = new URLSearchParams(routerState._searchParams)\n  const previousDocument = searchParams.get(DIFF_VIEW_PREVIOUS_DOCUMENT_SEARCH_PARAMETER)\n  const nextDocument = searchParams.get(DIFF_VIEW_NEXT_DOCUMENT_SEARCH_PARAMETER)\n  const mode = searchParams.get(DIFF_VIEW_SEARCH_PARAMETER)\n  const anyParamSet = [previousDocument, nextDocument, mode].some((param) => param !== null)\n\n  const params = useMemo(\n    () =>\n      parseParams({\n        previousDocument: previousDocument ?? '',\n        nextDocument: nextDocument ?? '',\n        mode: mode ?? '',\n      }),\n    [mode, nextDocument, previousDocument],\n  )\n\n  useEffect(() => {\n    if (params.result === 'error' && anyParamSet) {\n      onParamsError?.(params.errors)\n    }\n  }, [anyParamSet, onParamsError, params])\n\n  if (params.result === 'error') {\n    return {\n      isActive: false,\n    }\n  }\n\n  return {\n    state: 'ready',\n    isActive: true,\n    ...params.params,\n  }\n}\n\ntype DiffViewStateError =\n  | 'invalidModeParam'\n  | 'invalidPreviousDocumentParam'\n  | 'invalidNextDocumentParam'\n\ntype DiffViewStateErrorWithInput = [error: DiffViewStateError, input: unknown]\n\ninterface ParamsSuccess {\n  result: 'success'\n  params: Pick<DiffViewState & {state: 'ready'}, 'mode' | 'documents'>\n}\n\ninterface ParamsError {\n  result: 'error'\n  errors: DiffViewStateErrorWithInput[]\n}\n\nfunction parseParams({\n  previousDocument,\n  nextDocument,\n  mode,\n}: {\n  previousDocument: string\n  nextDocument: string\n  mode: string\n}): ParamsSuccess | ParamsError {\n  const errors: DiffViewStateErrorWithInput[] = []\n\n  const [previousDocumentType, previousDocumentId] = previousDocument\n    .split(DIFF_SEARCH_PARAM_DELIMITER)\n    .filter(Boolean)\n\n  const [nextDocumentType, nextDocumentId] = nextDocument\n    .split(DIFF_SEARCH_PARAM_DELIMITER)\n    .filter(Boolean)\n\n  if (!isDiffViewMode(mode)) {\n    errors.push(['invalidModeParam', mode])\n  }\n\n  if (typeof previousDocumentType === 'undefined' || typeof previousDocumentId === 'undefined') {\n    errors.push(['invalidPreviousDocumentParam', previousDocument])\n  }\n\n  if (typeof nextDocumentType === 'undefined' || typeof nextDocumentId === 'undefined') {\n    errors.push(['invalidNextDocumentParam', nextDocument])\n  }\n\n  if (errors.length !== 0) {\n    return {\n      result: 'error',\n      errors,\n    }\n  }\n\n  return {\n    result: 'success',\n    params: {\n      mode,\n      documents: {\n        previous: {\n          type: previousDocumentType,\n          id: previousDocumentId,\n        },\n        next: {\n          type: nextDocumentType,\n          id: nextDocumentId,\n        },\n      },\n    },\n  } as ParamsSuccess\n}\n","import {useEffect} from 'react'\nimport ScrollMirror from 'scrollmirror'\n\n/**\n * Use the ScrollMirror library to synchronise the scroll position for an array of elements.\n *\n * @internal\n */\nexport function useScrollMirror(elements: (HTMLElement | null)[]): void {\n  useEffect(() => {\n    const existentElements = elements.filter((element) => element !== null)\n\n    if (existentElements.length === 0) {\n      return undefined\n    }\n\n    const scrollMirror = new ScrollMirror(existentElements)\n    return () => scrollMirror.destroy()\n  }, [elements])\n}\n","import {\n  getReleaseIdFromReleaseDocumentId,\n  getVersionFromId,\n  isDraftId,\n  isPublishedId,\n  type ReleaseDocument,\n} from 'sanity'\n\n/**\n * If the provided document id represents a version, find and return the corresponding release\n * document. Otherwise, return a string literal signifying whether the document id represents a\n * published or draft document.\n *\n * TODO: Return a type compatible with `TargetPerspective` (`\"draft\"` must be `\"drafts\"`).\n *\n * @internal\n */\nexport function findRelease(\n  documentId: string,\n  releases: ReleaseDocument[],\n): ReleaseDocument | 'published' | 'draft' | undefined {\n  if (isPublishedId(documentId)) {\n    return 'published'\n  }\n\n  if (isDraftId(documentId)) {\n    return 'draft'\n  }\n\n  return releases.find(\n    ({_id}) => getReleaseIdFromReleaseDocumentId(_id) === getVersionFromId(documentId),\n  )\n}\n","import {CloseIcon, LockIcon, TransferIcon} from '@sanity/icons'\nimport {\n  Box,\n  // eslint-disable-next-line no-restricted-imports -- we need more control over how the `Button` component is rendered\n  Button,\n  type ButtonTone,\n  Flex,\n  Menu,\n  // eslint-disable-next-line no-restricted-imports -- the `VersionModeHeader` component needs more control over how the `MenuItem` component is rendered\n  MenuItem,\n  Stack,\n  Text,\n} from '@sanity/ui'\n// eslint-disable-next-line @sanity/i18n/no-i18next-import -- figure out how to have the linter be fine with importing types-only\nimport {type TFunction} from 'i18next'\nimport {type ComponentProps, type ComponentType, useCallback, useMemo} from 'react'\nimport {\n  type DocumentLayoutProps,\n  formatRelativeLocalePublishDate,\n  getDraftId,\n  getPublishedId,\n  getReleaseIdFromReleaseDocumentId,\n  getReleaseTone,\n  getVersionFromId,\n  getVersionId,\n  isReleaseDocument,\n  isReleaseScheduledOrScheduling,\n  ReleaseAvatar,\n  type ReleaseDocument,\n  useActiveReleases,\n  useDocumentVersions,\n  useEditState,\n  useTranslation,\n  useWorkspace,\n} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {MenuButton} from '../../../../ui-components/menuButton/MenuButton'\nimport {structureLocaleNamespace} from '../../../i18n'\nimport {useDiffViewRouter} from '../../hooks/useDiffViewRouter'\nimport {useDiffViewState} from '../../hooks/useDiffViewState'\nimport {findRelease} from '../../utils/findRelease'\n\nconst VersionModeHeaderLayout = styled.header`\n  display: grid;\n  grid-area: header;\n  grid-template-columns: 1fr min-content 1fr;\n  border-block-end: 1px solid var(--card-border-color);\n`\n\nconst VersionModeHeaderLayoutSection = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n\n/**\n * The header component that is rendered when diff view is being used to compare versions of a\n * document.\n *\n * @internal\n */\nexport const VersionModeHeader: ComponentType<\n  {state: 'pending' | 'ready' | 'error'} & Pick<DocumentLayoutProps, 'documentId'>\n> = ({documentId, state}) => {\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {data: documentVersions} = useDocumentVersions({documentId})\n  const {exitDiffView, navigateDiffView} = useDiffViewRouter()\n  const {documents} = useDiffViewState()\n  const activeReleases = useActiveReleases()\n  const releasesIds = documentVersions.flatMap((id) => getVersionFromId(id) ?? [])\n\n  const releases = useMemo(() => {\n    return activeReleases.data.filter((release) => {\n      const releaseId = getReleaseIdFromReleaseDocumentId(release._id)\n      return typeof releaseId !== 'undefined' && releasesIds.includes(releaseId)\n    })\n  }, [activeReleases.data, releasesIds])\n\n  const onSelectPreviousRelease = useCallback(\n    (selectedDocumentId: string): void => {\n      if (typeof documents?.previous !== 'undefined') {\n        navigateDiffView({\n          previousDocument: {\n            ...documents.previous,\n            id: selectedDocumentId,\n          },\n        })\n      }\n    },\n    [documents?.previous, navigateDiffView],\n  )\n\n  const onSelectNextRelease = useCallback(\n    (selectedDocumentId: string): void => {\n      if (typeof documents?.next !== 'undefined') {\n        navigateDiffView({\n          nextDocument: {\n            ...documents.next,\n            id: selectedDocumentId,\n          },\n        })\n      }\n    },\n    [documents?.next, navigateDiffView],\n  )\n\n  return (\n    <VersionModeHeaderLayout>\n      <VersionModeHeaderLayoutSection>\n        <Box padding={4}>\n          <Text as=\"h1\" size={1} muted>\n            {t('compare-versions.title')}\n          </Text>\n        </Box>\n        {typeof documents?.previous !== 'undefined' && (\n          <VersionMenu\n            releases={releases}\n            onSelectRelease={onSelectPreviousRelease}\n            role=\"previous\"\n            documentId={documentId}\n            state={state}\n            document={documents.previous}\n          />\n        )}\n      </VersionModeHeaderLayoutSection>\n      <Flex align=\"center\" paddingX={3}>\n        <Text size={1}>\n          <TransferIcon />\n        </Text>\n      </Flex>\n      <VersionModeHeaderLayoutSection>\n        {typeof documents?.next !== 'undefined' && (\n          <VersionMenu\n            releases={releases}\n            onSelectRelease={onSelectNextRelease}\n            role=\"next\"\n            documentId={documentId}\n            state={state}\n            document={documents.next}\n          />\n        )}\n        <Box\n          padding={3}\n          style={{\n            justifySelf: 'end',\n          }}\n        >\n          <Button icon={CloseIcon} mode=\"bleed\" onClick={exitDiffView} padding={2} />\n        </Box>\n      </VersionModeHeaderLayoutSection>\n    </VersionModeHeaderLayout>\n  )\n}\n\ninterface VersionMenuProps {\n  state: 'pending' | 'ready' | 'error'\n  releases: ReleaseDocument[]\n  role: 'previous' | 'next'\n  onSelectRelease: (releaseId: string) => void\n  documentId: string\n  document: {\n    type: string\n    id: string\n  }\n}\n\nconst VersionMenu: ComponentType<VersionMenuProps> = ({\n  releases = [],\n  onSelectRelease,\n  role,\n  documentId,\n  document,\n}) => {\n  const {published, draft} = useEditState(getPublishedId(document.id), document.type)\n  const selected = useMemo(() => findRelease(document.id, releases), [document.id, releases])\n  const {t: tStructure} = useTranslation(structureLocaleNamespace)\n  const {t: tCore} = useTranslation()\n\n  const {\n    document: {\n      drafts: {enabled: isDraftModelEnabled},\n    },\n  } = useWorkspace()\n\n  return (\n    <MenuButton\n      id={role}\n      button={\n        <Button\n          type=\"button\"\n          mode=\"bleed\"\n          padding={2}\n          paddingRight={3}\n          radius=\"full\"\n          selected\n          {...getMenuButtonProps({selected, tCore, tStructure})}\n        />\n      }\n      menu={\n        <Menu>\n          {published && (\n            <VersionMenuItem\n              type=\"published\"\n              onSelect={onSelectRelease}\n              isSelected={selected === 'published'}\n              documentId={documentId}\n            />\n          )}\n          {isDraftModelEnabled && draft && (\n            <VersionMenuItem\n              type=\"draft\"\n              onSelect={onSelectRelease}\n              isSelected={selected === 'draft'}\n              documentId={documentId}\n            />\n          )}\n          {releases.map((release) => (\n            <VersionMenuItem\n              key={release._id}\n              release={release}\n              onSelect={onSelectRelease}\n              isSelected={typeof selected !== 'string' && selected?._id === release._id}\n              documentId={documentId}\n            />\n          ))}\n        </Menu>\n      }\n    />\n  )\n}\n\ntype VersionMenuItemProps = {\n  onSelect: (releaseId: string) => void\n  isSelected?: boolean\n  documentId: string\n} & (\n  | {\n      release: ReleaseDocument\n      type?: never\n    }\n  | {\n      type: 'published' | 'draft'\n      release?: never\n    }\n)\n\nconst VersionMenuItem: ComponentType<VersionMenuItemProps> = ({\n  type,\n  release,\n  onSelect,\n  isSelected,\n  documentId,\n}) => {\n  const {t: tCore} = useTranslation()\n  const {t: tStructure} = useTranslation(structureLocaleNamespace)\n\n  const onClick = useCallback(() => {\n    if (type === 'draft') {\n      onSelect(getDraftId(documentId))\n      return\n    }\n\n    if (type === 'published') {\n      onSelect(getPublishedId(documentId))\n      return\n    }\n\n    if (typeof release?._id !== 'undefined') {\n      onSelect(getVersionId(documentId, getReleaseIdFromReleaseDocumentId(release._id)))\n    }\n  }, [type, onSelect, documentId, release?._id])\n\n  if (type) {\n    const tone: ButtonTone = type === 'published' ? 'positive' : 'caution'\n\n    return (\n      <MenuItem padding={1} paddingRight={3} onClick={onClick} pressed={isSelected}>\n        <Flex gap={1}>\n          <ReleaseAvatar padding={2} tone={tone} />\n          <Box paddingY={2}>\n            <Text size={1} weight=\"medium\">\n              {tStructure(['compare-versions.status', type].join('.'))}\n            </Text>\n          </Box>\n        </Flex>\n      </MenuItem>\n    )\n  }\n\n  const tone: ButtonTone = release ? getReleaseTone(release) : 'neutral'\n\n  return (\n    <MenuItem padding={1} paddingRight={3} onClick={onClick} pressed={isSelected}>\n      <Flex gap={1}>\n        <ReleaseAvatar padding={2} tone={tone} />\n        <Stack flex={1} paddingY={2} paddingRight={2} space={2}>\n          <Text size={1} weight=\"medium\">\n            {release.metadata.title || tCore('release.placeholder-untitled-release')}\n          </Text>\n          {['asap', 'undecided'].includes(release.metadata.releaseType) && (\n            <Text muted size={1}>\n              {tCore(`release.type.${release.metadata.releaseType}`)}\n            </Text>\n          )}\n          {release.metadata.releaseType === 'scheduled' && (\n            <Text muted size={1}>\n              {formatRelativeLocalePublishDate(release)}\n            </Text>\n          )}\n        </Stack>\n        <Flex flex=\"none\">\n          {isReleaseScheduledOrScheduling(release) && (\n            <Box padding={2}>\n              <Text size={1}>\n                <LockIcon />\n              </Text>\n            </Box>\n          )}\n        </Flex>\n      </Flex>\n    </MenuItem>\n  )\n}\n\nfunction getMenuButtonProps({\n  selected,\n  tCore,\n  tStructure,\n}: {\n  selected?: ReleaseDocument | 'published' | 'draft'\n  tCore: TFunction\n  tStructure: TFunction\n}): Pick<ComponentProps<typeof Button>, 'text' | 'tone' | 'icon' | 'iconRight' | 'disabled'> {\n  if (typeof selected === 'undefined') {\n    return {\n      text: tCore('common.loading'),\n      tone: 'neutral',\n      disabled: true,\n    }\n  }\n\n  if (isReleaseDocument(selected)) {\n    const tone: ButtonTone = selected ? getReleaseTone(selected) : 'neutral'\n\n    return {\n      text: selected?.metadata.title || tCore('release.placeholder-untitled-release'),\n      icon: <ReleaseAvatar padding={1} tone={tone} />,\n      iconRight: selected && isReleaseScheduledOrScheduling(selected) ? <LockIcon /> : undefined,\n      tone,\n    }\n  }\n\n  const tone: ButtonTone = selected === 'published' ? 'positive' : 'caution'\n\n  return {\n    text: tStructure(['compare-versions.status', selected].join('.')),\n    icon: <ReleaseAvatar padding={1} tone={tone} />,\n    tone,\n  }\n}\n","import {styled} from 'styled-components'\n\nexport const DialogLayout = styled.div`\n  --offset-block: 40px;\n  display: grid;\n  height: calc(100vh - var(--offset-block));\n  min-height: 0;\n  overflow: hidden;\n  grid-template-areas:\n    'header header'\n    'previous-document next-document';\n  grid-template-columns: 1fr 1fr;\n  grid-template-rows: min-content minmax(0, 1fr);\n`\n","import {type ComponentType} from 'react'\nimport {type DocumentLayoutProps, type PluginOptions} from 'sanity'\n\n/**\n * Pick the document layout component when composing the component middleware chain.\n */\nexport function pickDocumentLayoutComponent(plugin: PluginOptions) {\n  return plugin.document?.components?.unstable_layout as ComponentType<\n    Omit<DocumentLayoutProps, 'renderDefault'>\n  >\n}\n","import {type Path} from '@sanity/types'\nimport {useCallback, useMemo} from 'react'\nimport deepEquals from 'react-fast-compare'\nimport {distinctUntilChanged, filter, map, type Observable} from 'rxjs'\n\nimport {type PathSyncChannelProps, type PathSyncState} from '../types/pathSyncChannel'\n\ntype Push = (state: PathSyncState) => void\n\n/**\n * Synchronise the open path between multiple document panes.\n *\n * @internal\n */\nexport function usePathSyncChannel({syncChannel, id}: PathSyncChannelProps): {\n  push: Push\n  path: Observable<Path>\n} {\n  const push = useCallback<Push>(\n    (state) => syncChannel.next({...state, source: id}),\n    [id, syncChannel],\n  )\n\n  const path = useMemo(\n    () =>\n      syncChannel.pipe(\n        distinctUntilChanged<PathSyncState>((previous, next) =>\n          deepEquals(previous.path, next.path),\n        ),\n        filter(({source}) => source !== id),\n        map((state) => state.path),\n      ),\n    [id, syncChannel],\n  )\n\n  return {\n    path,\n    push,\n  }\n}\n","import {styled} from 'styled-components'\n\nexport const Scroller = styled.div`\n  position: relative;\n  height: 100%;\n  overflow: auto;\n  scroll-behavior: smooth;\n  scrollbar-width: var(--scrollbar-width);\n  overscroll-behavior: contain;\n  will-change: scroll-position;\n`\n","import {type Path, type SanityDocument} from '@sanity/types'\nimport {\n  BoundaryElementProvider,\n  Card,\n  Container as UiContainer,\n  DialogProvider,\n  PortalProvider,\n} from '@sanity/ui'\nimport {noop} from 'lodash'\nimport {\n  type ComponentType,\n  type CSSProperties,\n  forwardRef,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react'\nimport {\n  ChangeIndicatorsTracker,\n  createPatchChannel,\n  FormBuilder,\n  getPublishedId,\n  getVersionFromId,\n  isDraftId,\n  isPublishedId,\n  isVersionId,\n  LoadingBlock,\n  type TargetPerspective,\n  useActiveReleases,\n  useDocumentForm,\n  useEditState,\n  useMiddlewareComponents,\n  VirtualizerScrollInstanceProvider,\n} from 'sanity'\nimport {CommentsEnabledContext, ReviewChangesContext} from 'sanity/_singletons'\nimport {styled} from 'styled-components'\n\nimport {pickDocumentLayoutComponent} from '../../panes/document/document-layout/pickDocumentLayoutComponent'\nimport {usePathSyncChannel} from '../hooks/usePathSyncChannel'\nimport {type PathSyncChannel} from '../types/pathSyncChannel'\nimport {findRelease} from '../utils/findRelease'\nimport {Scroller} from './Scroller'\n\nconst DiffViewPaneLayout = styled(Card)`\n  position: relative;\n  grid-area: var(--grid-area);\n`\n\nconst Container = styled(UiContainer)`\n  width: auto;\n`\n\ninterface DiffViewPaneProps {\n  documentType: string\n  documentId: string\n  role: 'previous' | 'next'\n  scrollElement: HTMLElement | null\n  syncChannel: PathSyncChannel\n  compareDocument: {\n    type: string\n    id: string\n  }\n}\n\nexport const DiffViewPane = forwardRef<HTMLDivElement, DiffViewPaneProps>(function DiffViewPane(\n  {role, documentType, documentId, scrollElement, syncChannel, compareDocument},\n  ref,\n) {\n  const containerElement = useRef<HTMLDivElement | null>(null)\n  const [portalElement, setPortalElement] = useState<HTMLDivElement | null>(null)\n  const [boundaryElement, setBoundaryElement] = useState<HTMLDivElement | null>(null)\n\n  const DocumentLayout = useMiddlewareComponents({\n    pick: pickDocumentLayoutComponent,\n    defaultComponent: useCallback(\n      () => (\n        <DiffViewDocument\n          compareDocument={compareDocument}\n          documentId={documentId}\n          documentType={documentType}\n          role={role}\n          scrollElement={scrollElement}\n          syncChannel={syncChannel}\n        />\n      ),\n      [compareDocument, documentId, documentType, role, scrollElement, syncChannel],\n    ),\n  })\n\n  return (\n    <ReviewChangesContext.Provider\n      value={{\n        // Render the change indicators inertly, because the diff view modal does not currently\n        // provide a way to display document inspectors.\n        isInteractive: false,\n        onOpenReviewChanges: noop,\n        onSetFocus: noop,\n        isReviewChangesOpen: false,\n      }}\n    >\n      <ChangeIndicatorsTracker>\n        <VirtualizerScrollInstanceProvider\n          scrollElement={scrollElement}\n          containerElement={containerElement}\n        >\n          <BoundaryElementProvider element={boundaryElement}>\n            <DiffViewPaneLayout\n              ref={setBoundaryElement}\n              style={\n                {\n                  '--grid-area': `${role}-document`,\n                } as CSSProperties\n              }\n              borderLeft={role === 'next'}\n            >\n              <Scroller\n                ref={ref}\n                style={\n                  {\n                    // The scroll position is synchronised between panes. This style hides the\n                    // scrollbar for all panes except the one displaying the next document.\n                    '--scrollbar-width': role !== 'next' && 'none',\n                  } as CSSProperties\n                }\n              >\n                <PortalProvider element={portalElement}>\n                  <DialogProvider position=\"absolute\">\n                    <Container ref={containerElement} padding={4} width={1}>\n                      <DocumentLayout documentId={documentId} documentType={documentType} />\n                    </Container>\n                  </DialogProvider>\n                </PortalProvider>\n              </Scroller>\n              <div data-testid=\"diffView-document-panel-portal\" ref={setPortalElement} />\n            </DiffViewPaneLayout>\n          </BoundaryElementProvider>\n        </VirtualizerScrollInstanceProvider>\n      </ChangeIndicatorsTracker>\n    </ReviewChangesContext.Provider>\n  )\n})\n\nconst DiffViewDocument: ComponentType<DiffViewPaneProps> = ({\n  role,\n  documentType,\n  documentId,\n  syncChannel,\n  compareDocument,\n}) => {\n  const compareValue = useCompareValue({compareDocument})\n  const {data: releases} = useActiveReleases()\n  const [patchChannel] = useState(() => createPatchChannel())\n  const perspective = useMemo(() => findRelease(documentId, releases), [documentId, releases])\n\n  const {\n    formState,\n    onChange,\n    onFocus,\n    onBlur,\n    onSetActiveFieldGroup,\n    onSetCollapsedFieldSet,\n    onSetCollapsedPath,\n    collapsedFieldSets,\n    ready,\n    collapsedPaths,\n    schemaType,\n    value,\n    onProgrammaticFocus,\n    ...documentForm\n  } = useDocumentForm({\n    documentId: getPublishedId(documentId),\n    documentType,\n    selectedPerspectiveName: perspectiveName(documentId),\n    releaseId: getVersionFromId(documentId),\n    comparisonValue: compareValue,\n  })\n\n  const isLoading = formState === null || !ready\n\n  const pathSyncChannel = usePathSyncChannel({\n    id: role,\n    syncChannel,\n  })\n\n  const onPathOpen = useCallback(\n    (path: Path) => {\n      documentForm.onPathOpen(path)\n      pathSyncChannel.push({source: role, path})\n    },\n    [documentForm, pathSyncChannel, role],\n  )\n\n  useEffect(() => {\n    const subscription = pathSyncChannel.path.subscribe(onProgrammaticFocus)\n    return () => subscription.unsubscribe()\n  }, [onProgrammaticFocus, pathSyncChannel.path])\n\n  return isLoading ? (\n    <LoadingBlock showText />\n  ) : (\n    <CommentsEnabledContext.Provider\n      value={{\n        enabled: false,\n        mode: null,\n      }}\n    >\n      <FormBuilder\n        __internal_patchChannel={patchChannel}\n        id={`diffView-pane-${role}`}\n        onChange={onChange}\n        onPathFocus={onFocus}\n        onPathOpen={onPathOpen}\n        onPathBlur={onBlur}\n        onFieldGroupSelect={onSetActiveFieldGroup}\n        onSetFieldSetCollapsed={onSetCollapsedFieldSet}\n        onSetPathCollapsed={onSetCollapsedPath}\n        collapsedPaths={collapsedPaths}\n        collapsedFieldSets={collapsedFieldSets}\n        focusPath={formState.focusPath}\n        changed={formState.changed}\n        focused={formState.focused}\n        groups={formState.groups}\n        validation={formState.validation}\n        members={formState.members}\n        perspective={sanitizeBundleName(perspective)}\n        presence={formState.presence}\n        schemaType={schemaType}\n        value={value}\n        compareValue={compareValue}\n      />\n    </CommentsEnabledContext.Provider>\n  )\n}\n\nfunction perspectiveName(documentId: string): string | undefined {\n  if (isVersionId(documentId)) {\n    return getVersionFromId(documentId)\n  }\n\n  if (isPublishedId(documentId)) {\n    return 'published'\n  }\n\n  return undefined\n}\n\ntype UseCompareValueOptions = Pick<DiffViewPaneProps, 'compareDocument'>\n\n/**\n * Fetch the contents of `compareDocument` for comparison with another version of the document.\n */\nfunction useCompareValue({compareDocument}: UseCompareValueOptions): SanityDocument | undefined {\n  const compareDocumentEditState = useEditState(\n    getPublishedId(compareDocument.id),\n    compareDocument.type,\n    'low',\n    getVersionFromId(compareDocument.id),\n  )\n\n  return useMemo(() => {\n    if (isVersionId(compareDocument.id)) {\n      return compareDocumentEditState.version ?? undefined\n    }\n\n    if (isDraftId(compareDocument.id)) {\n      return compareDocumentEditState.draft ?? undefined\n    }\n\n    if (isPublishedId(compareDocument.id)) {\n      return compareDocumentEditState.published ?? undefined\n    }\n\n    return undefined\n  }, [\n    compareDocument.id,\n    compareDocumentEditState.draft,\n    compareDocumentEditState.published,\n    compareDocumentEditState.version,\n  ])\n}\n\n// TODO: Refactor `findRelease` to return a type compatible with `TargetPerspective` (`\"draft\"` must be `\"drafts\"`), so that `sanitizeBundleName` can be removed.\nfunction sanitizeBundleName(bundle: ReturnType<typeof findRelease>): TargetPerspective | undefined {\n  if (bundle === 'draft') {\n    return 'drafts'\n  }\n\n  return bundle\n}\n","import {type ReferenceInputOptions} from 'sanity'\nimport {useIntentLink} from 'sanity/router'\nimport {styled} from 'styled-components'\n\nconst Link = styled.a`\n  flex: 1;\n  text-decoration: none;\n  color: inherit;\n`\n\nexport const EditReferenceLinkComponent: ReferenceInputOptions['EditReferenceLinkComponent'] = ({\n  children,\n  documentId: _documentId,\n  documentType,\n}) => {\n  const {href} = useIntentLink({\n    intent: 'edit',\n    params: {\n      id: _documentId,\n      type: documentType,\n    },\n  })\n\n  return (\n    <Link href={href} target=\"_blank\" rel=\"noopener noreferrer\">\n      {children}\n    </Link>\n  )\n}\n","import {type ComponentType, useContext, useMemo, useState} from 'react'\nimport {type DocumentLayoutProps} from 'sanity'\nimport {ReferenceInputOptionsContext} from 'sanity/_singletons'\n\nimport {Dialog} from '../../../ui-components/dialog/Dialog'\nimport {useCreatePathSyncChannel} from '../hooks/useCreatePathSyncChannel'\nimport {useDiffViewRouter} from '../hooks/useDiffViewRouter'\nimport {useDiffViewState} from '../hooks/useDiffViewState'\nimport {useScrollMirror} from '../hooks/useScrollMirror'\nimport {VersionModeHeader} from '../versionMode/components/VersionModeHeader'\nimport {DialogLayout} from './DialogLayout'\nimport {DiffViewPane} from './DiffViewPane'\nimport {EditReferenceLinkComponent} from './EditReferenceLinkComponent'\n\nexport const DiffView: ComponentType<Pick<DocumentLayoutProps, 'documentId'>> = ({documentId}) => {\n  const {documents, state, mode} = useDiffViewState()\n  const {exitDiffView} = useDiffViewRouter()\n  const syncChannel = useCreatePathSyncChannel()\n  const [previousPaneElement, setPreviousPaneElement] = useState<HTMLElement | null>(null)\n  const [nextPaneElement, setNextPaneElement] = useState<HTMLElement | null>(null)\n  const referenceInputOptionsContext = useContext(ReferenceInputOptionsContext)\n\n  const diffViewReferenceInputOptionsContext = useMemo(\n    () => ({\n      ...referenceInputOptionsContext,\n      disableNew: true,\n      EditReferenceLinkComponent,\n    }),\n    [referenceInputOptionsContext],\n  )\n\n  useScrollMirror([previousPaneElement, nextPaneElement])\n\n  return (\n    <ReferenceInputOptionsContext.Provider value={diffViewReferenceInputOptionsContext}>\n      <Dialog\n        id=\"diffView\"\n        width=\"auto\"\n        onClose={exitDiffView}\n        padding={false}\n        __unstable_hideCloseButton\n      >\n        <DialogLayout>\n          {mode === 'version' && <VersionModeHeader documentId={documentId} state={state} />}\n          {state === 'ready' && (\n            <>\n              <DiffViewPane\n                documentType={documents.previous.type}\n                documentId={documents.previous.id}\n                role=\"previous\"\n                ref={setPreviousPaneElement}\n                scrollElement={previousPaneElement}\n                syncChannel={syncChannel}\n                compareDocument={documents.previous}\n              />\n              <DiffViewPane\n                documentType={documents.next.type}\n                documentId={documents.next.id}\n                role=\"next\"\n                ref={setNextPaneElement}\n                scrollElement={nextPaneElement}\n                syncChannel={syncChannel}\n                // The previous document's edit state is used to calculate the diff inroduced by the next document.\n                compareDocument={documents.previous}\n              />\n            </>\n          )}\n        </DialogLayout>\n      </Dialog>\n    </ReferenceInputOptionsContext.Provider>\n  )\n}\n","import {useToast} from '@sanity/ui'\nimport {type ComponentType, type PropsWithChildren} from 'react'\nimport {type DocumentLayoutProps, useTranslation} from 'sanity'\n\nimport {structureLocaleNamespace} from '../../i18n'\nimport {DiffView} from '../components/DiffView'\nimport {useDiffViewState} from '../hooks/useDiffViewState'\n\nexport const DiffViewDocumentLayout: ComponentType<\n  PropsWithChildren<Pick<DocumentLayoutProps, 'documentId' | 'documentType'>>\n> = ({children, documentId}) => {\n  const toast = useToast()\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {isActive} = useDiffViewState({\n    onParamsError: (errors) => {\n      toast.push({\n        id: 'diffViewParamsParsingError',\n        status: 'error',\n        title: t('compare-version.error.invalidParams.title'),\n        description: (\n          <ul>\n            {errors.map(([error, input]) => (\n              <li key={error}>\n                {t(`compare-version.error.${error}`, {\n                  input,\n                })}\n              </li>\n            ))}\n          </ul>\n        ),\n      })\n    },\n  })\n\n  return (\n    <>\n      {children}\n      {isActive && <DiffView documentId={documentId} />}\n    </>\n  )\n}\n","/**\n * @internal\n */\nexport const PANE_DEBUG = false\n\n/**\n * @internal\n */\nexport const PANE_COLLAPSED_WIDTH = 51\n\n/**\n * @internal\n */\nexport const PANE_DEFAULT_MIN_WIDTH = PANE_COLLAPSED_WIDTH * 4\n","import {useContext} from 'react'\nimport {PaneLayoutContext} from 'sanity/_singletons'\n\nimport {type PaneLayoutContextValue} from './types'\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport function usePaneLayout(): PaneLayoutContextValue {\n  const pane = useContext(PaneLayoutContext)\n\n  if (!pane) {\n    throw new Error('PaneLayout: missing context value')\n  }\n\n  return pane\n}\n","import {Layer} from '@sanity/ui'\nimport {useCallback, useState} from 'react'\nimport {styled} from 'styled-components'\n\nimport {usePaneLayout} from './usePaneLayout'\n\nconst Root = styled(Layer)`\n  position: relative;\n  width: 1px;\n  min-width: 1px;\n\n  &:before {\n    content: '';\n    display: block;\n    position: absolute;\n    top: 0;\n    left: 0;\n    bottom: 0;\n    width: 1px;\n    background-color: var(--card-border-color);\n  }\n\n  &:not([data-disabled]) {\n    cursor: ew-resize;\n    width: 9px;\n    min-width: 9px;\n    margin: 0 -4px;\n\n    &:before {\n      left: 4px;\n    }\n\n    &:after {\n      content: '';\n      display: block;\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 9px;\n      bottom: 0;\n      background-color: var(--card-border-color);\n      opacity: 0;\n      transition: opacity 150ms;\n    }\n\n    &[data-dragging]:after,\n    &:hover:after {\n      opacity: 0.2;\n    }\n  }\n`\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport function PaneDivider({\n  disabled,\n  element,\n}: {\n  disabled?: boolean\n  element: HTMLElement | null\n}) {\n  const {resize} = usePaneLayout()\n  const [dragging, setDragging] = useState(false)\n\n  const handleMouseDown = useCallback(\n    (event: any) => {\n      if (!element) return\n\n      setDragging(true)\n\n      event.preventDefault()\n\n      const startX = event.pageX\n\n      resize('start', element, 0)\n\n      const handleMouseMove = (e: MouseEvent) => {\n        e.preventDefault()\n\n        const deltaX = e.pageX - startX\n\n        resize('move', element, deltaX)\n      }\n\n      const handleMouseUp = (e: MouseEvent) => {\n        e.preventDefault()\n\n        setDragging(false)\n\n        window.removeEventListener('mousemove', handleMouseMove)\n        window.removeEventListener('mouseup', handleMouseUp)\n\n        resize('end', element, 0)\n      }\n\n      window.addEventListener('mousemove', handleMouseMove)\n      window.addEventListener('mouseup', handleMouseUp)\n    },\n    [element, resize],\n  )\n\n  return (\n    <Root\n      data-disabled={disabled ? '' : undefined}\n      data-dragging={dragging ? '' : undefined}\n      onMouseDown={handleMouseDown}\n    />\n  )\n}\n","import {BoundaryElementProvider, Card, type CardProps, Code, Flex} from '@sanity/ui'\nimport {\n  type ForwardedRef,\n  forwardRef,\n  type HTMLProps,\n  type ReactNode,\n  useCallback,\n  useImperativeHandle,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react'\nimport {IsLastPaneProvider, LegacyLayerProvider} from 'sanity'\nimport {PaneContext} from 'sanity/_singletons'\nimport {styled} from 'styled-components'\n\nimport {PANE_COLLAPSED_WIDTH, PANE_DEBUG, PANE_DEFAULT_MIN_WIDTH} from './constants'\nimport {PaneDivider} from './PaneDivider'\nimport {usePaneLayout} from './usePaneLayout'\n\ninterface PaneProps {\n  children?: ReactNode\n  currentMinWidth?: number\n  currentMaxWidth?: number\n  flex?: number\n  id: string\n  minWidth?: number\n  maxWidth?: number\n  selected?: boolean\n}\n\nconst Root = styled(Card)`\n  outline: none;\n\n  // NOTE: This will render a border to the right side of each pane\n  // without taking up physical space.\n  box-shadow: 1px 0 0 var(--card-border-color);\n`\n\n/**\n * @hidden\n * @internal\n */\nexport const Pane = forwardRef(function Pane(\n  props: PaneProps &\n    Omit<CardProps, 'as' | 'overflow'> &\n    Omit<HTMLProps<HTMLDivElement>, 'as' | 'height' | 'hidden' | 'id' | 'style'>,\n  forwardedRef: ForwardedRef<HTMLDivElement>,\n) {\n  const {\n    children,\n    currentMinWidth: currentMinWidthProp,\n    currentMaxWidth: currentMaxWidthProp,\n    flex: flexProp = 1,\n    id,\n    minWidth: minWidthProp,\n    maxWidth: maxWidthProp,\n    selected = false,\n    ...restProps\n  } = props\n  const [rootElement, setRootElement] = useState<HTMLDivElement | null>(null)\n  const {\n    collapse,\n    collapsed: layoutCollapsed,\n    expand,\n    expandedElement,\n    mount,\n    panes,\n  } = usePaneLayout()\n  const pane = panes.find((p) => p.element === rootElement)\n  const paneIndex = pane && panes.indexOf(pane)\n  const nextPane = typeof paneIndex === 'number' ? panes[paneIndex + 1] : undefined\n  const isLast = paneIndex === panes.length - 1\n  const expanded = expandedElement === rootElement\n  const collapsed = layoutCollapsed ? false : pane?.collapsed || false\n  const nextCollapsed = nextPane?.collapsed || false\n  const ref = useRef<HTMLDivElement | null>(null)\n  const flex = pane?.flex ?? flexProp\n  const currentMinWidth = pane?.currentMinWidth ?? currentMinWidthProp\n  const currentMaxWidth = pane?.currentMaxWidth ?? currentMaxWidthProp\n\n  // Forward ref to parent\n  useImperativeHandle<HTMLDivElement | null, HTMLDivElement | null>(forwardedRef, () => ref.current)\n\n  const setRef = useCallback((refValue: HTMLDivElement | null) => {\n    setRootElement(refValue)\n    ref.current = refValue\n  }, [])\n\n  useLayoutEffect(() => {\n    if (!rootElement) return undefined\n    return mount(rootElement, {\n      currentMinWidth: currentMinWidthProp,\n      currentMaxWidth: currentMaxWidthProp,\n      flex: flexProp,\n      id,\n      minWidth: minWidthProp,\n      maxWidth: maxWidthProp,\n    })\n  }, [\n    currentMinWidthProp,\n    currentMaxWidthProp,\n    flexProp,\n    id,\n    minWidthProp,\n    maxWidthProp,\n    mount,\n    rootElement,\n  ])\n\n  const handleCollapse = useCallback(() => {\n    if (!rootElement) return\n    collapse(rootElement)\n  }, [collapse, rootElement])\n\n  const handleExpand = useCallback(() => {\n    if (!rootElement) return\n    expand(rootElement)\n  }, [expand, rootElement])\n\n  const contextValue = useMemo(\n    () => ({\n      collapse: handleCollapse,\n      collapsed: layoutCollapsed ? false : collapsed,\n      expand: handleExpand,\n      index: paneIndex,\n      isLast,\n      rootElement,\n    }),\n    [collapsed, handleCollapse, handleExpand, isLast, layoutCollapsed, paneIndex, rootElement],\n  )\n\n  const minWidth = useMemo(() => {\n    if (layoutCollapsed) {\n      return undefined\n    }\n\n    if (collapsed) return PANE_COLLAPSED_WIDTH\n\n    if (currentMinWidth === 0) {\n      return minWidthProp || PANE_DEFAULT_MIN_WIDTH\n    }\n\n    if (isLast) {\n      return minWidthProp || PANE_DEFAULT_MIN_WIDTH\n    }\n\n    return currentMinWidth || minWidthProp || PANE_DEFAULT_MIN_WIDTH\n  }, [collapsed, currentMinWidth, isLast, layoutCollapsed, minWidthProp])\n\n  const maxWidth = useMemo(() => {\n    if (collapsed) return PANE_COLLAPSED_WIDTH\n\n    if (layoutCollapsed && isLast) {\n      return undefined\n    }\n\n    if (isLast) {\n      if (maxWidthProp) {\n        return currentMaxWidth ?? maxWidthProp\n      }\n\n      return undefined\n    }\n\n    return currentMaxWidth ?? maxWidthProp\n  }, [collapsed, currentMaxWidth, isLast, layoutCollapsed, maxWidthProp])\n\n  const hidden = layoutCollapsed && !isLast\n\n  const divider = useMemo(\n    () =>\n      !isLast &&\n      !layoutCollapsed && (\n        <LegacyLayerProvider zOffset=\"paneResizer\">\n          <PaneDivider disabled={collapsed || nextCollapsed} element={rootElement} />\n        </LegacyLayerProvider>\n      ),\n    [collapsed, isLast, layoutCollapsed, nextCollapsed, rootElement],\n  )\n\n  const style = useMemo(\n    () => ({\n      flex,\n      minWidth,\n      maxWidth: maxWidth === Infinity ? undefined : maxWidth,\n    }),\n    [flex, minWidth, maxWidth],\n  )\n\n  return (\n    <>\n      <LegacyLayerProvider zOffset=\"pane\">\n        <PaneContext.Provider value={contextValue}>\n          <IsLastPaneProvider isLastPane={isLast}>\n            <Root\n              data-testid=\"pane\"\n              data-ui=\"Pane\"\n              tone=\"inherit\"\n              hidden={hidden}\n              id={id}\n              overflow={layoutCollapsed ? undefined : 'hidden'}\n              {...restProps}\n              data-pane-collapsed={collapsed ? '' : undefined}\n              data-pane-index={paneIndex}\n              data-pane-selected={selected ? '' : undefined}\n              ref={setRef}\n              style={style}\n            >\n              {PANE_DEBUG && (\n                <Card padding={4} tone={expanded ? 'primary' : 'caution'}>\n                  <Code size={1}>\n                    {[\n                      `#${paneIndex}`,\n                      `collapsed=${collapsed}`,\n                      `currentMinWidth=${currentMinWidth}`,\n                      `currentMaxWidth=${currentMaxWidth}`,\n                      `flex=${flex}`,\n                      `minWidth=${minWidth}`,\n                      `maxWidth=${maxWidth}`,\n                    ].join('\\n')}\n                  </Code>\n                </Card>\n              )}\n\n              <BoundaryElementProvider element={rootElement}>\n                {!hidden && (\n                  <Flex direction=\"column\" height=\"fill\">\n                    {children}\n                  </Flex>\n                )}\n              </BoundaryElementProvider>\n            </Root>\n          </IsLastPaneProvider>\n        </PaneContext.Provider>\n      </LegacyLayerProvider>\n\n      {divider}\n    </>\n  )\n})\n","import {Card} from '@sanity/ui'\nimport {styled} from 'styled-components'\n\nexport const Root = styled(Card)`\n  position: relative;\n  outline: none;\n`\n\nRoot.displayName = 'PaneContent__root'\n","import {useContext} from 'react'\nimport {PaneContext} from 'sanity/_singletons'\n\nimport {type PaneContextValue} from './types'\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport function usePane(): PaneContextValue {\n  const pane = useContext(PaneContext)\n\n  if (!pane) {\n    throw new Error('Pane: missing context value')\n  }\n\n  return pane\n}\n","import {type BoxOverflow} from '@sanity/ui'\nimport {type ElementType, type ForwardedRef, forwardRef, type HTMLProps} from 'react'\n\nimport {Root} from './PaneContent.styles'\nimport {usePane} from './usePane'\nimport {usePaneLayout} from './usePaneLayout'\n\ninterface PaneContentProps {\n  as?: ElementType | keyof React.JSX.IntrinsicElements\n  overflow?: BoxOverflow\n  padding?: number | number[]\n}\n\n/**\n * @hidden\n * @internal\n */\nexport const PaneContent = forwardRef(function PaneContent(\n  props: PaneContentProps & Omit<HTMLProps<HTMLDivElement>, 'as' | 'height' | 'ref'>,\n  ref: ForwardedRef<HTMLDivElement>,\n) {\n  const {as, children, overflow, padding, ...restProps} = props\n  const {collapsed} = usePane()\n  const {collapsed: layoutCollapsed} = usePaneLayout()\n\n  return (\n    <Root\n      data-testid=\"pane-content\"\n      forwardedAs={as}\n      {...restProps}\n      flex={1}\n      hidden={collapsed}\n      overflow={layoutCollapsed ? undefined : overflow}\n      padding={padding}\n      ref={ref}\n      tone=\"inherit\"\n    >\n      {children}\n    </Root>\n  )\n})\n","/**\n * Remove the spaces and lower case the string\n *\n * @param str - string to remove the spaces and lower case\n * @returns str with no spaces and lower case\n */\nexport function toLowerCaseNoSpaces(str: string | undefined): string {\n  if (!str) return ''\n  return str.toLocaleLowerCase().replaceAll(' ', '')\n}\n","import {CheckmarkIcon} from '@sanity/icons'\nimport {MenuDivider, Text} from '@sanity/ui'\nimport {type MouseEvent, useCallback} from 'react'\nimport {TooltipOfDisabled, useGetI18nText, useI18nText} from 'sanity'\nimport {useIntentLink} from 'sanity/router'\n\nimport {MenuGroup, MenuItem, type PopoverProps} from '../../../ui-components'\nimport {type Intent} from '../../structureBuilder'\nimport {toLowerCaseNoSpaces} from '../../util/toLowerCaseNoSpaces'\nimport {type _PaneMenuItem, type _PaneMenuNode} from './types'\n\nconst MENU_GROUP_POPOVER_PROPS: PopoverProps = {\n  constrainSize: true,\n  placement: 'left-start',\n  portal: true,\n}\n\nexport function PaneMenuButtonItem(props: {\n  disabled?: boolean\n  isAfterGroup: boolean\n  node: _PaneMenuNode\n}) {\n  const {disabled, isAfterGroup, node} = props\n  const getI18nText = useGetI18nText('i18n' in node ? node : undefined)\n\n  if (node.type === 'divider') {\n    return <MenuDivider />\n  }\n\n  const {title} = getI18nText(node)\n\n  if (node.type === 'group') {\n    if (node.children.length === 0) {\n      return null\n    }\n\n    if (node.expanded) {\n      return (\n        <>\n          {isAfterGroup && <MenuDivider />}\n          {node.children.map((child, childIndex) => (\n            <PaneMenuButtonItem\n              key={child.key}\n              disabled={disabled || Boolean(node.disabled)}\n              isAfterGroup={node.children[childIndex - 1]?.type === 'group'}\n              node={child}\n            />\n          ))}\n        </>\n      )\n    }\n\n    return (\n      <>\n        {isAfterGroup && <MenuDivider />}\n        <MenuGroup\n          disabled={disabled}\n          icon={node.icon}\n          popover={MENU_GROUP_POPOVER_PROPS}\n          text={title}\n        >\n          {node.children.map((child, childIndex) => (\n            <PaneMenuButtonItem\n              key={child.key}\n              disabled={disabled || Boolean(node.disabled)}\n              isAfterGroup={node.children[childIndex - 1]?.type === 'group'}\n              node={child}\n            />\n          ))}\n        </MenuGroup>\n      </>\n    )\n  }\n\n  return (\n    <>\n      {isAfterGroup && <MenuDivider />}\n      <PaneContextMenuItemResolver disabled={disabled} node={node} />\n    </>\n  )\n}\n\nfunction PaneContextMenuItemResolver(props: {disabled?: boolean; node: _PaneMenuItem}) {\n  const {node} = props\n\n  if (node.intent) {\n    return <PaneContextIntentMenuItem {...props} intent={node.intent} />\n  }\n\n  return <PaneContextMenuItem {...props} />\n}\n\nfunction PaneContextMenuItem(props: {disabled?: boolean; node: _PaneMenuItem}) {\n  const {disabled, node} = props\n  const tooltipContent = typeof node.disabled === 'object' && (\n    <Text size={1}>{node.disabled.reason}</Text>\n  )\n  const {title} = useI18nText(node)\n\n  return (\n    <TooltipOfDisabled content={tooltipContent} placement=\"left\">\n      <MenuItem\n        disabled={disabled || Boolean(node.disabled)}\n        hotkeys={node.hotkey?.split('+')}\n        icon={node.icon}\n        iconRight={node.iconRight || (node.selected && CheckmarkIcon)}\n        // eslint-disable-next-line react/jsx-handler-names\n        onClick={node.onAction}\n        pressed={node.selected}\n        text={title}\n        tone={node.tone}\n        data-testid={`action-${toLowerCaseNoSpaces(node.title)}`}\n      />\n    </TooltipOfDisabled>\n  )\n}\n\nfunction PaneContextIntentMenuItem(props: {\n  disabled?: boolean\n  intent: Intent\n  node: _PaneMenuItem\n}) {\n  const {disabled, intent, node} = props\n  const tooltipContent = typeof node.disabled === 'object' && (\n    <Text size={1}>{node.disabled.reason}</Text>\n  )\n  const intentLink = useIntentLink({intent: intent.type, params: intent.params})\n\n  const handleClick = useCallback(\n    (event: MouseEvent<HTMLDivElement>) => {\n      intentLink.onClick(event)\n      node.onAction()\n    },\n    [intentLink, node],\n  )\n\n  const {title} = useI18nText(node)\n\n  return (\n    <TooltipOfDisabled content={tooltipContent} placement=\"left\">\n      <MenuItem\n        as=\"a\"\n        disabled={disabled || Boolean(node.disabled)}\n        hotkeys={node.hotkey?.split('+')}\n        href={intentLink.href}\n        icon={node.icon}\n        iconRight={node.selected ? CheckmarkIcon : undefined}\n        onClick={handleClick}\n        pressed={node.selected}\n        text={title}\n        tone={node.tone}\n      />\n    </TooltipOfDisabled>\n  )\n}\n","import {Menu, MenuDivider} from '@sanity/ui'\nimport {type ReactNode, useId} from 'react'\nimport {ContextMenuButton} from 'sanity'\n\nimport {MenuButton, type PopoverProps} from '../../../ui-components'\nimport {PaneMenuButtonItem} from './PaneMenuButtonItem'\nimport {type _PaneMenuItem, type _PaneMenuNode} from './types'\n\ninterface PaneContextMenuButtonProps {\n  nodes: _PaneMenuNode[]\n  actionsNodes?: ReactNode\n}\n\nconst CONTEXT_MENU_POPOVER_PROPS: PopoverProps = {\n  constrainSize: true,\n  placement: 'bottom',\n  portal: true,\n}\n\nfunction nodesHasTone(nodes: _PaneMenuNode[], tone: NonNullable<_PaneMenuItem['tone']>): boolean {\n  return nodes.some((node) => {\n    return (\n      (node.type === 'item' && node.tone === tone) ||\n      (node.type === 'group' && nodesHasTone(node.children, tone))\n    )\n  })\n}\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport function PaneContextMenuButton(props: PaneContextMenuButtonProps) {\n  const {nodes, actionsNodes} = props\n  const id = useId()\n\n  const hasCritical = nodesHasTone(nodes, 'critical')\n  const hasCaution = nodesHasTone(nodes, 'caution')\n\n  return (\n    <MenuButton\n      button={\n        <ContextMenuButton\n          tone={hasCritical ? 'critical' : hasCaution ? 'caution' : undefined}\n          data-testid=\"pane-context-menu-button\"\n        />\n      }\n      id={id}\n      menu={\n        <Menu>\n          {actionsNodes && (\n            <>\n              {actionsNodes}\n              <MenuDivider />\n            </>\n          )}\n          {nodes.map((node, nodeIndex) => {\n            const isAfterGroup = nodes[nodeIndex - 1]?.type === 'group'\n            return <PaneMenuButtonItem key={node.key} isAfterGroup={isAfterGroup} node={node} />\n          })}\n        </Menu>\n      }\n      popover={CONTEXT_MENU_POPOVER_PROPS}\n    />\n  )\n}\n","import {Card, Layer} from '@sanity/ui'\nimport {styled} from 'styled-components'\n\nexport const Root = styled(Layer)`\n  position: sticky;\n  bottom: 0;\n`\n\nexport const RootCard = styled(Card)`\n  padding-bottom: env(safe-area-inset-bottom);\n`\n","import {Box} from '@sanity/ui'\nimport {type ForwardedRef, forwardRef, type ReactNode} from 'react'\nimport {LegacyLayerProvider} from 'sanity'\n\nimport {Root, RootCard} from './PaneFooter.styles'\nimport {usePane} from './usePane'\n\ninterface PaneFooterProps {\n  children?: ReactNode\n  padding?: number | number[]\n}\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport const PaneFooter = forwardRef(function PaneFooter(\n  props: PaneFooterProps,\n  ref: ForwardedRef<HTMLDivElement>,\n) {\n  const {children, padding} = props\n  const {collapsed} = usePane()\n\n  return (\n    <LegacyLayerProvider zOffset=\"paneFooter\">\n      <Root data-testid=\"pane-footer\" hidden={collapsed} ref={ref}>\n        <RootCard tone=\"inherit\">\n          <Box padding={padding}>{children}</Box>\n        </RootCard>\n      </Root>\n    </LegacyLayerProvider>\n  )\n})\n","import {Card, Flex, Layer, Text, TextSkeleton, type Theme} from '@sanity/ui'\nimport {css, styled} from 'styled-components'\n\ninterface RootProps {\n  $border?: boolean\n}\n\nexport const Root = styled(Layer)<RootProps>(({$border}) => {\n  return css`\n    line-height: 0;\n    position: sticky;\n    top: 0;\n\n    &:not([data-collapsed]):after {\n      content: '';\n      display: block;\n      position: absolute;\n      left: 0;\n      right: 0;\n      bottom: -1px;\n      border-bottom: 1px solid ${$border ? 'var(--card-border-color)' : 'transparent'};\n      opacity: 1;\n    }\n  `\n})\n\nexport const Layout = styled(Flex)`\n  transform-origin: calc(51px / 2);\n\n  [data-collapsed] > div > & {\n    transform: rotate(90deg);\n  }\n`\n\nexport const TitleCard = styled(Card)(({theme}: {theme: Theme}) => {\n  const {fg, bg} = theme.sanity.color.card.enabled\n\n  // Disable color updates on hover\n  return css`\n    background-color: ${bg};\n\n    [data-ui='Text'] {\n      color: ${fg};\n    }\n  `\n})\n\nexport const TitleTextSkeleton = styled(TextSkeleton)`\n  width: 66%;\n  max-width: 175px;\n`\n\nexport const TitleText = styled(Text)`\n  cursor: default;\n  outline: none;\n`\n","import {Box, Card, Flex, LayerProvider, useElementRect} from '@sanity/ui'\nimport {type ForwardedRef, forwardRef, type ReactNode, useCallback, useMemo} from 'react'\nimport {LegacyLayerProvider} from 'sanity'\n\nimport {Layout, Root, TitleCard, TitleText, TitleTextSkeleton} from './PaneHeader.styles'\nimport {usePane} from './usePane'\n\nexport type TabsType = 'default' | 'dropdown'\n\n/**\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport interface PaneHeaderProps {\n  actions?: ReactNode\n  backButton?: ReactNode\n  border?: boolean\n  contentAfter?: ReactNode\n  loading?: boolean\n  subActions?: ReactNode\n  tabIndex?: number\n  tabs?: ReactNode\n  title: ReactNode\n  appendTitle?: ReactNode\n}\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport const PaneHeader = forwardRef(function PaneHeader(\n  props: PaneHeaderProps,\n  ref: ForwardedRef<HTMLDivElement>,\n) {\n  const {\n    actions,\n    backButton,\n    border,\n    contentAfter,\n    loading,\n    subActions,\n    tabs,\n    tabIndex,\n    title,\n    appendTitle,\n  } = props\n  const {collapse, collapsed, expand, rootElement: paneElement} = usePane()\n  const paneRect = useElementRect(paneElement || null)\n\n  const layoutStyle = useMemo(\n    () => ({\n      width: collapsed ? paneRect?.height || window.innerHeight : undefined,\n    }),\n    [collapsed, paneRect],\n  )\n\n  const handleTitleClick = useCallback(() => {\n    if (collapsed) return\n    collapse()\n  }, [collapse, collapsed])\n\n  const handleLayoutClick = useCallback(() => {\n    if (!collapsed) return\n    expand()\n  }, [collapsed, expand])\n\n  const showTabsOrSubActions = Boolean(!collapsed && (tabs || subActions))\n\n  return (\n    <LayerProvider zOffset={100}>\n      <Root\n        $border={border}\n        data-collapsed={collapsed ? '' : undefined}\n        data-testid=\"pane-header\"\n        ref={ref}\n      >\n        <LegacyLayerProvider zOffset=\"paneHeader\">\n          <Card data-collapsed={collapsed ? '' : undefined} tone=\"inherit\">\n            <Layout\n              direction=\"column\"\n              gap={3}\n              onClick={handleLayoutClick}\n              padding={3}\n              sizing=\"border\"\n              style={layoutStyle}\n            >\n              <Flex align=\"flex-start\" gap={3}>\n                {backButton && <Box flex=\"none\">{backButton}</Box>}\n\n                <TitleCard\n                  __unstable_focusRing\n                  flex={1}\n                  onClick={handleTitleClick}\n                  paddingLeft={backButton ? 1 : 2}\n                  padding={2}\n                  tabIndex={tabIndex}\n                >\n                  {loading && (\n                    <Box>\n                      <TitleTextSkeleton animated radius={1} size={1} />\n                    </Box>\n                  )}\n                  {!loading && (\n                    <Flex align=\"center\" gap={1}>\n                      <TitleText size={1} textOverflow=\"ellipsis\" weight=\"semibold\">\n                        {title}\n                      </TitleText>\n                      {appendTitle}\n                    </Flex>\n                  )}\n                </TitleCard>\n\n                {actions && (\n                  <Box hidden={collapsed}>\n                    <LegacyLayerProvider zOffset=\"paneHeader\">{actions}</LegacyLayerProvider>\n                  </Box>\n                )}\n              </Flex>\n\n              {showTabsOrSubActions && (\n                <Flex align=\"center\" hidden={collapsed} overflow=\"auto\">\n                  <Box flex={1} marginRight={subActions ? 3 : 0}>\n                    {tabs}\n                  </Box>\n\n                  {subActions}\n                </Flex>\n              )}\n            </Layout>\n\n            {!collapsed && contentAfter}\n          </Card>\n        </LegacyLayerProvider>\n      </Root>\n    </LayerProvider>\n  )\n})\n","import {UnknownIcon} from '@sanity/icons'\nimport {Menu} from '@sanity/ui'\nimport {type MouseEvent, useCallback, useId} from 'react'\nimport {StatusButton, useI18nText, useTranslation} from 'sanity'\nimport {useIntentLink} from 'sanity/router'\n\nimport {Button, MenuButton} from '../../../ui-components'\nimport {type Intent} from '../../structureBuilder'\nimport {PaneMenuButtonItem} from './PaneMenuButtonItem'\nimport {type _PaneMenuGroup, type _PaneMenuItem} from './types'\n\nfunction getDisabledReason(node: _PaneMenuItem) {\n  if (!node.disabled) {\n    return {disabledReason: undefined, ariaLabel: undefined, isDisabled: false}\n  }\n\n  /**\n   * This component supports receiving a `reason: string | react.ReactNode`.\n   * We are casting it as string, to avoid the ts error, as content will be rendered into the tooltip which only accepts string, but it won't crash if it's a ReactNode.\n   * For the aria label, we want to check if it's actually a string, to avoid generating an aria-label with the value `[object Object]`.\n   */\n  const disabledReason =\n    typeof node.disabled === 'object' ? (node.disabled.reason as string) : undefined\n  const ariaLabel =\n    typeof node.disabled === 'object' && typeof node.disabled?.reason === 'string'\n      ? node.disabled.reason\n      : 'This is disabled'\n\n  return {disabledReason, ariaLabel, isDisabled: Boolean(node.disabled)}\n}\nexport interface PaneHeaderActionButtonProps {\n  node: _PaneMenuItem | _PaneMenuGroup\n}\n\nexport function PaneHeaderActionButton(props: PaneHeaderActionButtonProps) {\n  const {node} = props\n\n  if (node.type === 'item') {\n    return <PaneHeaderMenuItemActionButton node={node} />\n  }\n\n  if (node.type === 'group') {\n    return <PaneHeaderMenuGroupActionButton node={node} />\n  }\n\n  console.warn('unknown menu node (expected `type: \"item\" | \"group\"`):', node)\n\n  return null\n}\n\nexport interface PaneHeaderMenuItemActionButtonProps {\n  node: _PaneMenuItem\n}\n\nexport function PaneHeaderMenuItemActionButton(props: PaneHeaderMenuItemActionButtonProps) {\n  const {node} = props\n  const {title} = useI18nText(node)\n  const {t} = useTranslation()\n\n  if (node.intent) {\n    return <PaneHeaderActionIntentButton {...props} intent={node.intent} />\n  }\n\n  const {disabledReason, ariaLabel, isDisabled} = getDisabledReason(node)\n\n  return (\n    <StatusButton\n      disabled={isDisabled}\n      icon={node.icon}\n      // eslint-disable-next-line react/jsx-handler-names\n      onClick={node.onAction}\n      selected={node.selected}\n      tone={node.tone}\n      aria-label={ariaLabel || title || t('status-button.aria-label')}\n      tooltipProps={{\n        hotkeys: !isDisabled && node.hotkey ? node.hotkey.split('+') : undefined,\n        content: isDisabled ? disabledReason : title,\n      }}\n    />\n  )\n}\n\nfunction PaneHeaderActionIntentButton(props: {intent: Intent; node: _PaneMenuItem}) {\n  const {intent, node} = props\n  const intentLink = useIntentLink({intent: intent.type, params: intent.params})\n  const {t} = useTranslation()\n\n  const handleClick = useCallback(\n    (event: MouseEvent<HTMLButtonElement>) => {\n      intentLink.onClick(event)\n      node.onAction()\n    },\n    [intentLink, node],\n  )\n\n  const {disabledReason, ariaLabel, isDisabled} = getDisabledReason(node)\n\n  return (\n    <StatusButton\n      forwardedAs=\"a\"\n      disabled={isDisabled}\n      href={intentLink.href}\n      icon={node.icon}\n      onClick={handleClick}\n      selected={node.selected}\n      tone={node.tone}\n      aria-label={ariaLabel || node.title || t('status-button.aria-label')}\n      tooltipProps={{\n        hotkeys: !isDisabled && node.hotkey ? node.hotkey.split('+') : undefined,\n        content: isDisabled ? disabledReason : node.title,\n        placement: 'bottom',\n        portal: true,\n      }}\n    />\n  )\n}\n\nexport interface PaneHeaderMenuGroupActionButtonProps {\n  node: _PaneMenuGroup\n}\n\nfunction PaneHeaderMenuGroupActionButton(props: PaneHeaderMenuGroupActionButtonProps) {\n  const {node} = props\n  const {title} = useI18nText(node)\n\n  return (\n    <MenuButton\n      button={\n        <Button\n          disabled={!!node.disabled}\n          icon={node.icon ?? UnknownIcon}\n          label={title}\n          mode=\"bleed\"\n          tooltipProps={{content: node.title, portal: true}}\n        />\n      }\n      id={useId()}\n      menu={\n        <Menu>\n          {node.children.map((child, idx) => {\n            return (\n              <PaneMenuButtonItem\n                key={child.key}\n                disabled={Boolean(node.disabled)}\n                isAfterGroup={node.children[idx - 1]?.type === 'group'}\n                node={child}\n              />\n            )\n          })}\n        </Menu>\n      }\n    />\n  )\n}\n","import {Card} from '@sanity/ui'\nimport {styled} from 'styled-components'\n\nexport const Root = styled(Card)`\n  transition: opacity 200ms;\n  position: relative;\n  z-index: 1;\n  padding-left: env(safe-area-inset-left);\n  padding-right: env(safe-area-inset-right);\n  opacity: 0;\n\n  &:not([hidden]) {\n    display: flex;\n  }\n\n  &:not([data-collapsed]) {\n    overflow: auto;\n  }\n\n  &[data-mounted] {\n    opacity: 1;\n  }\n\n  &[data-resizing] {\n    pointer-events: none;\n  }\n`\n","import {PANE_DEFAULT_MIN_WIDTH} from '../constants'\nimport {type PaneConfigOpts, type PaneResizeCache} from '../types'\n\nexport function _calcPaneResize(\n  cache: PaneResizeCache,\n  left: PaneConfigOpts,\n  right: PaneConfigOpts,\n  deltaX: number,\n): {leftFlex: number; leftW: number; rightFlex: number; rightW: number} {\n  const sum = {\n    flex: cache.left.flex + cache.right.flex,\n    width: cache.left.width + cache.right.width,\n  }\n\n  const leftMinWidth = left.minWidth ?? PANE_DEFAULT_MIN_WIDTH\n  const rightMinWidth = right.minWidth ?? PANE_DEFAULT_MIN_WIDTH\n\n  const leftMaxWidth = Math.min(left.maxWidth || Infinity, sum.width - rightMinWidth)\n  const rightMaxWidth = Math.min(right.maxWidth || Infinity, sum.width - leftMinWidth)\n\n  // Get min. delta X\n  let minDeltaX = leftMinWidth - cache.left.width\n  const rightMinDeltaX = cache.right.width - rightMaxWidth\n  if (minDeltaX < rightMinDeltaX) {\n    minDeltaX = rightMinDeltaX\n  }\n\n  // Get max. delta X\n  let maxDeltaX = cache.right.width - rightMinWidth\n  const leftMaxDeltaX = leftMaxWidth - cache.left.width\n  if (maxDeltaX > leftMaxDeltaX) {\n    maxDeltaX = leftMaxDeltaX\n  }\n\n  const _deltaX = Math.min(Math.max(deltaX, minDeltaX), maxDeltaX)\n\n  const leftW = cache.left.width + _deltaX\n  const rightW = cache.right.width - _deltaX\n\n  const leftFlex = (leftW / sum.width) * sum.flex\n  const rightFlex = (rightW / sum.width) * sum.flex\n\n  return {leftFlex, leftW, rightFlex, rightW}\n}\n","/**\n * @internal\n */\nexport function _getDOMPath(rootElement: HTMLElement, el: HTMLElement): number[] {\n  const path: number[] = []\n\n  let e = el\n\n  while (e !== rootElement) {\n    const parentElement = e.parentElement\n\n    if (!parentElement) return path\n\n    const children = Array.from(parentElement.childNodes)\n    const index = children.indexOf(e)\n\n    path.unshift(index)\n\n    if (parentElement === rootElement) {\n      return path\n    }\n\n    e = parentElement\n  }\n\n  return path\n}\n","import {_getDOMPath} from './_getDOMPath'\n\nconst EMPTY_PATH: number[] = []\n\n/**\n * @internal\n */\nexport function _sortElements(rootElement: HTMLElement, elements: HTMLElement[]): void {\n  // Create a map containing the DOM path of each pane element.\n  // The DOM path is relative to the `rootElement`, and is used in the next step for sorting.\n  const map = new WeakMap<HTMLElement, number[]>()\n\n  for (const element of elements) {\n    map.set(element, _getDOMPath(rootElement, element))\n  }\n\n  const _sortByElementPath = (a: HTMLElement, b: HTMLElement) => {\n    const _a = map.get(a) || EMPTY_PATH\n    const _b = map.get(b) || EMPTY_PATH\n\n    const len = Math.max(_a.length, _b.length)\n\n    // Loop until there are different indexes\n    for (let i = 0; i < len; i += 1) {\n      const aIndex = _a[i] || -1\n      const bIndex = _b[i] || -1\n\n      if (aIndex !== bIndex) {\n        return aIndex - bIndex\n      }\n    }\n\n    return 0\n  }\n\n  elements.sort(_sortByElementPath)\n}\n","import {PANE_COLLAPSED_WIDTH, PANE_DEFAULT_MIN_WIDTH} from './constants'\nimport {_calcPaneResize, _sortElements} from './helpers'\nimport {\n  type PaneConfigOpts,\n  type PaneData,\n  type PaneResizeCache,\n  type PaneResizeData,\n} from './types'\n\nexport interface PaneLayoutState {\n  expandedElement: HTMLElement | null\n  panes: PaneData[]\n  resizing: boolean\n}\n\nexport type PaneLayoutStateObserver = (state: PaneLayoutState) => void\n\nexport interface PaneLayoutController {\n  collapse: (element: HTMLElement) => void\n  expand: (element: HTMLElement) => void\n  mount: (element: HTMLElement, options: PaneConfigOpts) => () => void\n  resize: (type: 'start' | 'move' | 'end', leftElement: HTMLElement, deltaX: number) => void\n  setRootElement: (nextRootElement: HTMLElement | null) => void\n  setRootWidth: (nextRootWidth: number) => void\n  subscribe: (observer: PaneLayoutStateObserver) => () => void\n}\n\nexport function createPaneLayoutController(): PaneLayoutController {\n  const observers: PaneLayoutStateObserver[] = []\n  const elements: HTMLElement[] = []\n  const optionsMap = new WeakMap<HTMLElement, PaneConfigOpts & {original: PaneConfigOpts}>()\n  const userCollapsedElementSet = new Set<HTMLElement>()\n  const cache: Partial<PaneResizeCache> = {}\n\n  // Mutable internal state\n  let rootElement: HTMLElement | null = null\n  let rootWidth = 0\n  let expandedElement: HTMLElement | null = null\n  let resizeDataMap = new Map<HTMLElement, PaneResizeData>()\n  let resizing = false\n\n  function collapse(element: HTMLElement) {\n    userCollapsedElementSet.add(element)\n\n    if (expandedElement === element) {\n      expandedElement = null\n    }\n\n    _notifyObservers()\n  }\n\n  function expand(element: HTMLElement) {\n    userCollapsedElementSet.delete(element)\n\n    expandedElement = element\n\n    _notifyObservers()\n  }\n\n  function mount(element: HTMLElement, options: PaneConfigOpts) {\n    optionsMap.set(element, {...options, original: options})\n\n    elements.push(element)\n\n    if (rootElement) {\n      _sortElements(rootElement, elements)\n    }\n\n    expand(element)\n\n    return () => {\n      const idx = elements.indexOf(element)\n\n      if (idx > -1) {\n        elements.splice(idx, 1)\n      }\n\n      optionsMap.delete(element)\n\n      _notifyObservers()\n    }\n  }\n\n  function resize(type: 'start' | 'move' | 'end', leftElement: HTMLElement, deltaX: number) {\n    const leftIndex = elements.indexOf(leftElement)\n    const leftOptions = optionsMap.get(leftElement)\n\n    if (!leftOptions) return\n\n    const rightElement = elements[leftIndex + 1]\n    const rightOptions = optionsMap.get(rightElement)\n\n    if (!rightOptions) return\n\n    if (type === 'start') {\n      resizing = true\n\n      cache.left = {\n        element: leftElement,\n        flex: leftOptions.flex || 1,\n        width: leftElement.offsetWidth,\n      }\n\n      cache.right = {\n        element: rightElement,\n        flex: rightOptions.flex || 1,\n        width: rightElement.offsetWidth,\n      }\n\n      _notifyObservers()\n    }\n\n    if (type === 'move' && cache.left && cache.right) {\n      resizeDataMap = new Map<HTMLElement, PaneResizeData>()\n\n      const {leftW, rightW, leftFlex, rightFlex} = _calcPaneResize(\n        cache as PaneResizeCache,\n        leftOptions,\n        rightOptions,\n        deltaX,\n      )\n\n      // update resize cache\n      resizeDataMap.set(leftElement, {flex: leftFlex, width: leftW})\n      resizeDataMap.set(rightElement, {flex: rightFlex, width: rightW})\n\n      _notifyObservers()\n    }\n\n    if (type === 'end') {\n      resizing = false\n\n      const leftResizeData = resizeDataMap.get(leftElement)\n      const rightResizeData = resizeDataMap.get(rightElement)\n\n      // Update left options\n      optionsMap.set(leftElement, {\n        ...leftOptions,\n        currentMinWidth: 0,\n        currentMaxWidth: leftOptions.maxWidth ?? Infinity,\n        flex: leftResizeData?.flex ?? leftOptions.flex,\n      })\n\n      // Update right options\n      optionsMap.set(rightElement, {\n        ...rightOptions,\n        currentMinWidth: 0,\n        currentMaxWidth: leftOptions.maxWidth ?? Infinity,\n        flex: rightResizeData?.flex ?? rightOptions.flex,\n      })\n\n      // Reset resize data map\n      resizeDataMap = new Map()\n\n      // Reset cache\n      delete cache.left\n      delete cache.right\n\n      _notifyObservers()\n    }\n  }\n\n  function setRootElement(nextRootElement: HTMLElement | null) {\n    rootElement = nextRootElement\n  }\n\n  function setRootWidth(nextRootWidth: number) {\n    rootWidth = nextRootWidth\n    _notifyObservers()\n  }\n\n  function subscribe(observer: PaneLayoutStateObserver) {\n    observers.push(observer)\n\n    return () => {\n      const idx = observers.push(observer)\n\n      if (idx > -1) {\n        observers.splice(idx, 1)\n      }\n    }\n  }\n\n  return {collapse, expand, mount, resize, setRootElement, setRootWidth, subscribe}\n\n  function _notifyObservers() {\n    if (!rootWidth) return\n\n    // Create a reversed array of pane elements, so we can loop over them backwards.\n    // Place the expanded element first (so it has the least chance of being collapsed).\n    const _elements: HTMLElement[] = []\n    for (const element of elements) {\n      if (element !== expandedElement) {\n        _elements.unshift(element)\n      }\n    }\n    if (expandedElement) {\n      _elements.unshift(expandedElement)\n    }\n\n    const dataMap = new WeakMap<HTMLElement, PaneData>()\n    const len = _elements.length\n    const lastElement = _elements[0]\n    const collapsedWidth = (len - 1) * PANE_COLLAPSED_WIDTH\n\n    let remaingWidth = rootWidth - collapsedWidth\n\n    for (const element of _elements) {\n      const options = optionsMap.get(element)\n\n      if (!options) {\n        continue\n      }\n\n      const minWidth = options.currentMinWidth || options.minWidth || PANE_DEFAULT_MIN_WIDTH\n      const isLast = element === lastElement\n\n      // A pane is collapsed if:\n      // - it’s explictly collapsed by the user\n      const userCollapsed = userCollapsedElementSet.has(element)\n      // - it’s minimum width is larger than the remaining width\n      const sizeCollapsed = minWidth > remaingWidth\n      // - if the element is not the last (expanded pane)\n      const collapsed = isLast ? false : userCollapsed || sizeCollapsed\n\n      const resizeData = resizeDataMap.get(element)\n\n      // Collect pane data\n      dataMap.set(element, {\n        element: element,\n        collapsed: collapsed,\n        currentMinWidth: resizeData?.width ?? options.currentMinWidth,\n        currentMaxWidth: resizeData?.width ?? options.currentMaxWidth,\n        flex: resizeData?.flex ?? options.flex ?? 1,\n      })\n\n      // Update remaining width\n      if (collapsed) {\n        remaingWidth -= PANE_COLLAPSED_WIDTH\n      } else {\n        remaingWidth -= minWidth - PANE_COLLAPSED_WIDTH\n      }\n    }\n\n    const panes: PaneData[] = []\n\n    for (const element of elements) {\n      const data = dataMap.get(element)\n\n      if (data) panes.push(data)\n    }\n\n    for (const observer of observers) {\n      observer({\n        expandedElement: expandedElement || elements[elements.length - 1] || null,\n        panes,\n        resizing,\n      })\n    }\n  }\n}\n","import {type CardProps, useElementRect} from '@sanity/ui'\nimport {type HTMLProps, useEffect, useMemo, useState} from 'react'\nimport {PaneLayoutContext} from 'sanity/_singletons'\n\nimport {Root} from './PaneLayout.styles'\nimport {createPaneLayoutController, type PaneLayoutState} from './paneLayoutController'\nimport {type PaneLayoutContextValue} from './types'\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport interface PaneLayoutProps {\n  minWidth?: number\n  onCollapse?: () => void\n  onExpand?: () => void\n}\n\n/**\n *\n * @hidden\n * @beta This API will change. DO NOT USE IN PRODUCTION.\n */\nexport function PaneLayout(\n  props: PaneLayoutProps &\n    CardProps &\n    Omit<HTMLProps<HTMLDivElement>, 'as' | 'height' | 'ref' | 'wrap'>,\n) {\n  const {children, minWidth, onCollapse, onExpand, ...restProps} = props\n  const [controller] = useState(() => createPaneLayoutController())\n  const [rootElement, setRootElement] = useState<HTMLDivElement | null>(null)\n  const rootRect = useElementRect(rootElement)\n  const width = rootRect?.width || 0\n  const collapsed = width === undefined || !minWidth ? undefined : width < minWidth\n  const [state, setState] = useState<PaneLayoutState>({\n    expandedElement: null,\n    panes: [],\n    resizing: false,\n  })\n\n  // Set root element\n  useEffect(() => controller.setRootElement(rootElement), [controller, rootElement])\n\n  // Set root size\n  useEffect(() => controller.setRootWidth(width), [controller, width])\n\n  // Subscribe to state changes\n  useEffect(() => controller.subscribe(setState), [controller])\n\n  // Call the `onCollapse` and `onExpand` callbacks as the `collapsed` boolean changes\n  useEffect(() => {\n    if (collapsed === undefined) return\n    if (collapsed && onCollapse) onCollapse()\n    if (!collapsed && onExpand) onExpand()\n  }, [collapsed, onCollapse, onExpand])\n\n  // This is the context value that gives each pane the information they need\n  const paneLayout: PaneLayoutContextValue = useMemo(\n    () => ({\n      collapse: controller.collapse,\n      collapsed,\n      expand: controller.expand,\n      expandedElement: state.expandedElement,\n      mount: controller.mount,\n      panes: state.panes,\n      resize: controller.resize,\n      resizing: state.resizing,\n    }),\n    [collapsed, controller, state.expandedElement, state.panes, state.resizing],\n  )\n\n  return (\n    <PaneLayoutContext.Provider value={paneLayout}>\n      <Root\n        data-ui=\"PaneLayout\"\n        {...restProps}\n        data-collapsed={collapsed ? '' : undefined}\n        // The `data-resizing` attribute is used to improve cursor behavior\n        data-resizing={state.resizing ? '' : undefined}\n        // The `data-mounted` attribute is used to fade in the layout and prevent flash of\n        // non-collapsed panes\n        data-mounted={width ? '' : undefined}\n        ref={setRootElement}\n      >\n        {children}\n      </Root>\n    </PaneLayoutContext.Provider>\n  )\n}\n","import {Box, type CardTone} from '@sanity/ui'\n\nimport {Pane, PaneContent, PaneHeader} from '../../components/pane'\n\n/**\n * @internal\n */\nexport function ErrorPane(props: {\n  children?: React.ReactNode\n  currentMinWidth?: number\n  flex?: number\n  minWidth?: number\n  paneKey: string\n  title?: React.ReactNode\n  tone?: CardTone\n}) {\n  const {\n    children,\n    currentMinWidth,\n    flex,\n    minWidth,\n    paneKey,\n    title = 'Error',\n    tone = 'critical',\n  } = props\n\n  return (\n    <Pane\n      currentMinWidth={currentMinWidth}\n      flex={flex}\n      id={paneKey}\n      minWidth={minWidth}\n      tone={tone}\n    >\n      <PaneHeader title={title} />\n      <PaneContent overflow=\"auto\">\n        <Box paddingX={4} paddingY={5}>\n          {children}\n        </Box>\n      </PaneContent>\n    </Pane>\n  )\n}\n","import {useEffect, useState} from 'react'\n\nexport function Delay({\n  children,\n  ms = 0,\n}: {\n  children?: React.JSX.Element | (() => React.JSX.Element)\n  ms?: number\n}): React.JSX.Element {\n  const [ready, setReady] = useState(ms <= 0)\n\n  useEffect(() => {\n    if (ms <= 0) {\n      return undefined\n    }\n\n    const timeoutId = setTimeout(() => setReady(true), ms)\n\n    return () => {\n      clearTimeout(timeoutId)\n    }\n  }, [ms])\n\n  if (!ready || !children) {\n    return <></>\n  }\n\n  return typeof children === 'function' ? children() : children\n}\n","import {merge, type Observable, of} from 'rxjs'\nimport {delay, mapTo} from 'rxjs/operators'\nimport {isDev} from 'sanity'\n\n/**\n * @internal\n */\nexport type WaitMessage = {messageKey: string} | {message: string}\n\n/**\n * @internal\n */\nexport function getWaitMessages(path: string[]): Observable<WaitMessage> {\n  const thresholds: (WaitMessage & {ms: number})[] = [\n    {ms: 300, messageKey: 'panes.resolving.default-message'},\n    {ms: 5000, messageKey: 'panes.resolving.slow-resolve-message'},\n  ]\n\n  if (isDev) {\n    const message = [\n      'Check console for errors?',\n      'Is your observable/promise resolving?',\n      path.length > 0 ? `Structure path: ${path.join(' ➝ ')}` : '',\n    ]\n\n    thresholds.push({\n      ms: 10000,\n      message: message.join('\\n'),\n    })\n  }\n\n  const src = of(null)\n\n  return merge(\n    ...thresholds.map((threshold) =>\n      src.pipe(\n        mapTo(\n          'messageKey' in threshold\n            ? {messageKey: threshold.messageKey}\n            : {message: threshold.message},\n        ),\n        delay(threshold.ms),\n      ),\n    ),\n  )\n}\n","import {_raf2, type CardTone, Flex} from '@sanity/ui'\nimport {memo, useEffect, useMemo, useState} from 'react'\nimport {type Observable} from 'rxjs'\nimport {LoadingBlock, useTranslation} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Delay} from '../../components/Delay'\nimport {Pane, PaneContent} from '../../components/pane'\nimport {structureLocaleNamespace} from '../../i18n'\nimport {getWaitMessages, type WaitMessage} from './getWaitMessages'\n\ninterface LoadingPaneProps {\n  delay?: number\n  flex?: number\n  message?: string | ((p: string[]) => string | Observable<WaitMessage>)\n  minWidth?: number\n  paneKey: string\n  path?: string\n  selected?: boolean\n  title?: string\n  tone?: CardTone\n}\n\nconst DELAY = false\nconst DEFAULT_MESSAGE_KEY = 'panes.resolving.default-message'\n\nconst Content = styled(Flex)`\n  opacity: 0;\n  transition: opacity 200ms;\n\n  &[data-mounted] {\n    opacity: 1;\n  }\n`\n\n/**\n * @internal\n */\nexport const LoadingPane = memo((props: LoadingPaneProps) => {\n  const {\n    delay = 300,\n    flex,\n    message: messageProp = getWaitMessages,\n    minWidth,\n    paneKey,\n    path,\n    selected,\n    title,\n    tone,\n  } = props\n\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const resolvedMessage = useMemo(() => {\n    if (typeof messageProp === 'function') {\n      return messageProp(path ? path.split(';') : [])\n    }\n\n    return messageProp\n  }, [messageProp, path])\n\n  const [currentMessage, setCurrentMessage] = useState<string | null>(() => {\n    if (typeof resolvedMessage === 'string') return resolvedMessage\n    return t(DEFAULT_MESSAGE_KEY)\n  })\n\n  useEffect(() => {\n    if (typeof resolvedMessage !== 'object') return undefined\n    if (typeof resolvedMessage.subscribe !== 'function') return undefined\n\n    const sub = resolvedMessage.subscribe((message) => {\n      setCurrentMessage('messageKey' in message ? t(message.messageKey) : message.message)\n    })\n\n    return () => sub.unsubscribe()\n  }, [resolvedMessage, t])\n\n  const [contentElement, setContentElement] = useState<HTMLDivElement | null>(null)\n  const [mounted, setMounted] = useState(false)\n\n  useEffect(() => {\n    if (!contentElement) return undefined\n    return _raf2(() => setMounted(true))\n  }, [contentElement])\n\n  const content = (\n    <Content\n      align=\"center\"\n      data-mounted={mounted ? '' : undefined}\n      direction=\"column\"\n      height=\"fill\"\n      justify=\"center\"\n      ref={setContentElement}\n    >\n      <LoadingBlock showText title={title || currentMessage} />\n    </Content>\n  )\n\n  return (\n    <Pane flex={flex} id={paneKey} minWidth={minWidth} selected={selected} tone={tone}>\n      <PaneContent>{DELAY ? <Delay ms={delay}>{content}</Delay> : content}</PaneContent>\n    </Pane>\n  )\n})\n\nLoadingPane.displayName = 'Memo(LoadingPane)'\n","import {useContext} from 'react'\nimport {DocumentPaneContext} from 'sanity/_singletons'\n\nimport {type DocumentPaneContextValue} from './DocumentPaneContext'\n\n/** @internal */\nexport function useDocumentPane(): DocumentPaneContextValue {\n  const documentPane = useContext(DocumentPaneContext)\n\n  if (!documentPane) {\n    throw new Error('DocumentPane: missing context value')\n  }\n\n  return documentPane\n}\n","import {useCallback, useLayoutEffect, useRef} from 'react'\nimport {\n  COMMENTS_INSPECTOR_NAME,\n  CommentsEnabledProvider,\n  CommentsProvider,\n  useCommentsEnabled,\n  usePerspective,\n  useStudioUrl,\n} from 'sanity'\nimport {useRouter} from 'sanity/router'\n\nimport {usePaneRouter} from '../../../components'\nimport {useDocumentPane} from '../useDocumentPane'\n\ninterface CommentsWrapperProps {\n  children: React.ReactNode\n  documentId: string\n  documentType: string\n}\n\n/**\n * @internal\n * A wrapper that conditionally wraps the document layout in a comments provider\n * if the feature is enabled for the project and the current document.\n */\nexport function CommentsWrapper(props: CommentsWrapperProps) {\n  const {children, documentId, documentType} = props\n\n  return (\n    <CommentsEnabledProvider documentId={documentId} documentType={documentType}>\n      <CommentsProviderWrapper documentId={documentId} documentType={documentType}>\n        {children}\n      </CommentsProviderWrapper>\n    </CommentsEnabledProvider>\n  )\n}\n\nfunction CommentsProviderWrapper(props: CommentsWrapperProps) {\n  const {children, documentId, documentType} = props\n\n  const {enabled} = useCommentsEnabled()\n  const {connectionState, onPathOpen, inspector, openInspector} = useDocumentPane()\n  const {selectedReleaseId} = usePerspective()\n  const {params, setParams} = usePaneRouter()\n  const {studioUrl} = useStudioUrl(window.location.origin)\n  const {resolveIntentLink} = useRouter()\n\n  const selectedCommentId = params?.comment\n  const paramsRef = useRef(params)\n\n  useLayoutEffect(() => {\n    paramsRef.current = params\n  }, [params])\n\n  const getCommentLink = useCallback(\n    (commentId: string) => {\n      const intentLink = resolveIntentLink('edit', {\n        id: documentId,\n        type: documentType,\n        inspect: COMMENTS_INSPECTOR_NAME,\n        comment: commentId,\n      })\n      return `${studioUrl}${intentLink}`\n    },\n    [documentId, documentType, resolveIntentLink, studioUrl],\n  )\n\n  const handleClearSelectedComment = useCallback(() => {\n    setParams({...paramsRef.current, comment: undefined})\n  }, [setParams])\n\n  const handleOpenCommentsInspector = useCallback(() => {\n    if (inspector?.name === COMMENTS_INSPECTOR_NAME) return\n\n    openInspector(COMMENTS_INSPECTOR_NAME)\n  }, [inspector?.name, openInspector])\n\n  // If comments are not enabled, render the default document layout\n  if (!enabled) {\n    return <>{children}</>\n  }\n\n  return (\n    <CommentsProvider\n      documentId={documentId}\n      documentType={documentType}\n      getCommentLink={getCommentLink}\n      isCommentsOpen={inspector?.name === COMMENTS_INSPECTOR_NAME}\n      isConnecting={connectionState === 'connecting'}\n      onClearSelectedComment={handleClearSelectedComment}\n      onCommentsOpen={handleOpenCommentsInspector}\n      onPathOpen={onPathOpen}\n      selectedCommentId={selectedCommentId}\n      sortOrder=\"desc\"\n      type=\"field\"\n      releaseId={selectedReleaseId}\n    >\n      {children}\n    </CommentsProvider>\n  )\n}\n","import {useContext} from 'react'\nimport {PaneRouterContext} from 'sanity/_singletons'\n\nimport {type PaneRouterContextValue} from './types'\n\n/**\n *\n * @hidden\n * @beta\n */\nexport function usePaneRouter(): PaneRouterContextValue {\n  return useContext(PaneRouterContext)\n}\n","import {useMemo} from 'react'\nimport {\n  getReleaseIdFromReleaseDocumentId,\n  getVersionFromId,\n  type ReleaseDocument,\n  useActiveReleases,\n  useArchivedReleases,\n  useDocumentVersions,\n  usePerspective,\n} from 'sanity'\n\nimport {usePaneRouter} from '../components/paneRouter/usePaneRouter'\nimport {type DocumentPaneContextValue} from '../panes/document/DocumentPaneContext'\n\ntype FilterReleases = {\n  notCurrentReleases: ReleaseDocument[]\n  currentReleases: ReleaseDocument[]\n  inCreation: ReleaseDocument | null\n}\n\n/**\n * @internal\n */\nexport function useFilteredReleases({\n  displayed,\n  documentId,\n}: Pick<DocumentPaneContextValue, 'displayed' | 'documentId'>): FilterReleases {\n  const {selectedReleaseId} = usePerspective()\n  const {data: releases} = useActiveReleases()\n  const {data: archivedReleases} = useArchivedReleases()\n  const {data: documentVersions} = useDocumentVersions({documentId})\n  const isCreatingDocument = displayed && !displayed._createdAt\n  const {params} = usePaneRouter()\n\n  return useMemo(() => {\n    if (!documentVersions) return {notCurrentReleases: [], currentReleases: [], inCreation: null}\n    // Gets the releases ids from the document versions, it means, the releases that the document belongs to\n    const releasesIds = documentVersions.map((id) => getVersionFromId(id))\n    const activeReleases = releases.reduce(\n      (acc: FilterReleases, release) => {\n        const versionDocExists = releasesIds.includes(\n          getReleaseIdFromReleaseDocumentId(release._id),\n        )\n        const releaseId = getReleaseIdFromReleaseDocumentId(release._id)\n        const isCreatingThisVersion =\n          isCreatingDocument &&\n          releaseId === getVersionFromId(displayed._id || '') &&\n          releaseId === selectedReleaseId\n\n        if (isCreatingThisVersion) {\n          acc.inCreation = release\n        } else if (versionDocExists) {\n          acc.currentReleases.push(release)\n        } else {\n          acc.notCurrentReleases.push(release)\n        }\n        return acc\n      },\n      {notCurrentReleases: [], currentReleases: [], inCreation: null},\n    )\n\n    // without historyVersion, version is not in an archived release\n    if (!params?.historyVersion) return activeReleases\n\n    const archivedRelease = archivedReleases.find(\n      (r) => getReleaseIdFromReleaseDocumentId(r._id) === params?.historyVersion,\n    )\n\n    // only for explicitly archived releases; published releases use published perspective\n    if (archivedRelease?.state === 'archived') {\n      activeReleases.currentReleases.push(archivedRelease)\n    }\n\n    return activeReleases\n  }, [\n    archivedReleases,\n    isCreatingDocument,\n    displayed?._id,\n    documentVersions,\n    params?.historyVersion,\n    releases,\n    selectedReleaseId,\n  ])\n}\n","import {useMemo} from 'react'\nimport {getReleaseIdFromReleaseDocumentId, getVersionId, useWorkspace} from 'sanity'\n\nimport {type DocumentPaneContextValue} from '../panes/document/DocumentPaneContext'\nimport {useFilteredReleases} from './useFilteredReleases'\n\n/**\n * @internal\n */\nexport interface DocumentIdStack {\n  /**\n   * The position of the displayed document within the stack.\n   */\n  position: number\n  /**\n   * The id of the previous document in the stack.\n   */\n  previousId?: string\n  /**\n   * The id of the next document in the stack.\n   */\n  nextId?: string\n  /**\n   * An array of document ids comprising the stack the displayed document is a member of, ordered per\n   * release layering.\n   */\n  stack: string[]\n}\n\n/**\n * Get a stack of document ids representing existing versions of the provided document with release\n * layering applied.\n *\n * @internal\n */\nexport function useDocumentIdStack({\n  displayed,\n  documentId,\n  editState,\n}: Pick<DocumentPaneContextValue, 'displayed' | 'documentId' | 'editState'>): DocumentIdStack {\n  const {\n    document: {\n      drafts: {enabled: isDraftModelEnabled},\n    },\n  } = useWorkspace()\n\n  const filteredReleases = useFilteredReleases({displayed, documentId})\n\n  const systemStack = [\n    editState?.published?._id,\n    isDraftModelEnabled ? editState?.draft?._id : [],\n  ].flat()\n\n  const releaseStack = filteredReleases.currentReleases.map(\n    (release) =>\n      editState?.id && getVersionId(editState.id, getReleaseIdFromReleaseDocumentId(release._id)),\n  )\n\n  const stack = systemStack.concat(releaseStack).filter((id) => typeof id === 'string')\n\n  const position = useMemo(\n    () => stack.findIndex((id) => id === displayed?._id),\n    [displayed?._id, stack],\n  )\n\n  const previousId = useMemo(() => stack[position - 1] ?? undefined, [position, stack])\n  const nextId = useMemo(() => stack[position + 1] ?? undefined, [position, stack])\n\n  return {\n    position,\n    previousId,\n    nextId,\n    stack,\n  }\n}\n","import {useContext} from 'react'\nimport {StructureToolContext} from 'sanity/_singletons'\n\nimport {type StructureToolContextValue} from './types'\n\n/** @internal */\nexport function useStructureTool(): StructureToolContextValue {\n  const structureTool = useContext(StructureToolContext)\n  if (!structureTool) throw new Error(`StructureTool: missing context value`)\n\n  return structureTool\n}\n","import {type PaneRouterContextValue} from '../../components'\nimport {type PaneMenuItemGroup} from '../../types'\n\nexport const DOCUMENT_PANEL_MIN_WIDTH = 320\nexport const DOCUMENT_PANEL_INITIAL_MIN_WIDTH = 600\n\nexport const DOCUMENT_INSPECTOR_MIN_WIDTH = 320\nexport const DOCUMENT_INSPECTOR_MAX_WIDTH = 540\n\nexport const EMPTY_PARAMS: NonNullable<PaneRouterContextValue['params']> = {}\n\nexport const INSPECT_ACTION_PREFIX = 'inspect:'\n\nexport const DEFAULT_MENU_ITEM_GROUPS: PaneMenuItemGroup[] = [{id: 'inspectors'}, {id: 'links'}]\n\n// inspectors\nexport const HISTORY_INSPECTOR_NAME = 'sanity/structure/history'\nexport const VALIDATION_INSPECTOR_NAME = 'sanity/structure/validation'\n","import {memo, useCallback, useEffect, useMemo, useState} from 'react'\nimport {type DocumentInspector, type DocumentInspectorMenuItem, useUnique} from 'sanity'\n\ninterface DocumentInspectorMenuItemsResolverProps {\n  documentId: string\n  documentType: string\n  inspectors: DocumentInspector[]\n  onMenuItems: (items: DocumentInspectorMenuItem[]) => void\n}\n\n// The menu item in a document inspector are resolved in a React hook (`useMenuItem`).\n// This means that the menu item needs to be resolved in a React component (in accordance with the rules of hooks).\n// In this component, we map over the configured inspectors and render a `InspectorMenuItem` for each.\n// The `InspectorMenuItem` will resolve the menu item in a React hook and call the `setMenuItem` callback\n// with the resolved menu item and the index of the inspector.\n// Finally, we call the `onMenuItems` callback with the resolved menu items.\nexport function DocumentInspectorMenuItemsResolver(props: DocumentInspectorMenuItemsResolverProps) {\n  const {documentId, documentType, inspectors, onMenuItems} = props\n\n  const len = inspectors.length\n  const [menuItems, setMenuItems] = useState<DocumentInspectorMenuItem[]>(() =>\n    Array.from(new Array(len)),\n  )\n\n  useEffect(() => {\n    if (menuItems.length !== len) {\n      const newFieldActions = Array.from(new Array(len))\n\n      for (let i = 0; i < len; i++) {\n        newFieldActions[i] = menuItems[i]\n      }\n\n      setMenuItems(newFieldActions)\n    }\n  }, [len, menuItems])\n\n  const setMenuItem = useCallback((index: number, node: DocumentInspectorMenuItem) => {\n    setMenuItems((prev) => {\n      const next = [...prev]\n      next[index] = node\n      return next\n    })\n  }, [])\n\n  useEffect(() => {\n    onMenuItems(menuItems.filter(Boolean))\n  }, [menuItems, onMenuItems])\n\n  const InspectorMenuItems = useMemo(() => {\n    return inspectors.map((inspector, index) => {\n      return inspector.useMenuItem\n        ? ([\n            defineInspectorMenuItemComponent({\n              documentId,\n              documentType,\n              index,\n              setMenuItem,\n              useMenuItem: inspector.useMenuItem,\n            }),\n            inspector.name,\n          ] as const)\n        : ([() => null, ''] as const)\n    })\n  }, [documentId, documentType, inspectors, setMenuItem])\n\n  return (\n    <>\n      {InspectorMenuItems.map(([InspectorMenuItem, key]) => key && <InspectorMenuItem key={key} />)}\n    </>\n  )\n}\nDocumentInspectorMenuItemsResolver.displayName = 'DocumentInspectorMenuItemsResolver'\n\nfunction defineInspectorMenuItemComponent({\n  documentId,\n  documentType,\n  index,\n  setMenuItem,\n  useMenuItem,\n}: {\n  documentId: string\n  documentType: string\n  index: number\n  setMenuItem: (index: number, node: DocumentInspectorMenuItem) => void\n  useMenuItem: NonNullable<DocumentInspector['useMenuItem']>\n}) {\n  return memo(function InspectorMenuItem() {\n    const menuItem = useMenuItem({\n      documentId,\n      documentType,\n    })\n    const node = useUnique(menuItem)\n\n    useEffect(() => {\n      setMenuItem(index, node)\n    }, [node])\n\n    return null\n  })\n}\n","import {useMemo} from 'react'\nimport {\n  prepareForPreview,\n  unstable_useValuePreview as useValuePreview,\n  useTranslation,\n} from 'sanity'\n\nimport {structureLocaleNamespace} from '../../i18n'\nimport {useDocumentPane} from './useDocumentPane'\n\n/**\n * useDocumentTitle hook return type.\n *\n * @beta\n * @hidden\n */\nexport interface UseDocumentTitle {\n  error?: string\n  title?: string\n}\n\n/**\n * React hook that returns the document title for the current document in the document pane.\n *\n * @beta\n * @hidden\n *\n * @returns The document title or error. See {@link UseDocumentTitle}\n */\nexport function useDocumentTitle(): UseDocumentTitle {\n  const {connectionState, schemaType, editState, isDeleted, lastRevisionDocument} =\n    useDocumentPane()\n  const {t} = useTranslation(structureLocaleNamespace)\n  // follows the same logic as the StructureTitle component\n  const documentValue = useMemo(() => {\n    return isDeleted\n      ? lastRevisionDocument\n      : editState?.version || editState?.draft || editState?.published\n  }, [isDeleted, lastRevisionDocument, editState])\n  const subscribed = Boolean(documentValue)\n\n  // For deleted documents, we need to handle the preview differently since useValuePreview\n  // will return null for deleted documents. Instead, we directly prepare the preview\n  // from the lastRevisionDocument data.\n  const deletedDocumentPreview = useMemo(() => {\n    if (isDeleted && lastRevisionDocument && schemaType) {\n      try {\n        const prepared = prepareForPreview(lastRevisionDocument, schemaType)\n        return prepared\n      } catch (error) {\n        console.warn('Failed to prepare preview for deleted document:', error)\n        return null\n      }\n    }\n    return null\n  }, [isDeleted, lastRevisionDocument, schemaType])\n\n  const {error, value} = useValuePreview({\n    // disable useValuePreview for deleted documents\n    enabled: subscribed && !isDeleted,\n    schemaType,\n    value: documentValue,\n  })\n\n  if (connectionState === 'connecting' && !subscribed) {\n    return {error: undefined, title: undefined}\n  }\n\n  // For deleted documents, use the directly prepared preview\n  if (isDeleted && deletedDocumentPreview) {\n    return {error: undefined, title: deletedDocumentPreview.title}\n  }\n\n  if (!value && !isDeleted) {\n    return {\n      error: undefined,\n      title: t('panes.document-header-title.new.text', {\n        schemaType: schemaType?.title || schemaType?.name,\n      }),\n    }\n  }\n\n  if (error) {\n    return {\n      error: t('panes.document-list-pane.error.text', {error: error.message}),\n      title: undefined,\n    }\n  }\n\n  return {error: undefined, title: value?.title}\n}\n","import {useToast} from '@sanity/ui'\nimport {memo, useEffect, useMemo, useRef} from 'react'\nimport {\n  isDocumentLimitError,\n  Translate,\n  useDocumentLimitsUpsellContext,\n  useDocumentOperationEvent,\n  useTranslation,\n} from 'sanity'\n\nimport {usePaneRouter} from '../../components'\nimport {structureLocaleNamespace} from '../../i18n'\nimport {useDocumentPane} from './useDocumentPane'\nimport {useDocumentTitle} from './useDocumentTitle'\n\nconst IGNORE_OPS = ['patch', 'commit']\n\nexport const DocumentOperationResults = memo(function DocumentOperationResults() {\n  const {push: pushToast} = useToast()\n  const {documentId, documentType, value: documentPaneValue} = useDocumentPane()\n  const documentTitleInfo = useDocumentTitle()\n  const titleError = documentTitleInfo.error\n  const event: any = useDocumentOperationEvent(documentId, documentType)\n  const prevEvent = useRef(event)\n  const paneRouter = usePaneRouter()\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {handleOpenDialog} = useDocumentLimitsUpsellContext()\n\n  const title = useMemo(() => {\n    // If title isn't set from document preview, use the title from the document pane value\n    if (\n      !documentTitleInfo.title &&\n      !titleError &&\n      !IGNORE_OPS.includes(event?.op) &&\n      typeof documentPaneValue.title === 'string' &&\n      event?.type === 'success'\n    ) {\n      return documentPaneValue.title\n    }\n    return documentTitleInfo.title\n  }, [documentTitleInfo.title, titleError, event, documentPaneValue.title])\n  //Truncate the document title and add \"...\" if it is over 25 characters\n  const documentTitleBase = title || t('panes.document-operation-results.operation-undefined-title')\n  const documentTitle =\n    documentTitleBase.length > 25 ? `${documentTitleBase.slice(0, 25)}...` : documentTitleBase\n\n  useEffect(() => {\n    if (!event || event === prevEvent.current) return\n\n    let cleanupId: number | undefined\n\n    if (event.type === 'error') {\n      if (isDocumentLimitError(event.error)) {\n        handleOpenDialog('document_action')\n        return\n      }\n      pushToast({\n        closable: true,\n        duration: 30000, // 30s\n        status: 'error',\n        title: t('panes.document-operation-results.operation-error', {context: event.op}),\n        description: (\n          <details>\n            <summary>{t('panes.document-operation-results.error.summary.title')}</summary>\n            {event.error.message}\n          </details>\n        ),\n      })\n    }\n\n    if (event.type === 'success' && !IGNORE_OPS.includes(event.op)) {\n      pushToast({\n        closable: true,\n        status: 'success',\n        title: (\n          <Translate\n            context={event.op}\n            i18nKey=\"panes.document-operation-results.operation-success\"\n            t={t}\n            values={{\n              op: event.op,\n              title: documentTitle,\n            }}\n            components={{\n              Strong: 'strong',\n            }}\n          />\n        ),\n      })\n    }\n\n    /**\n     * If the document was deleted successfully, close the pane.\n     */\n    if (event.type === 'success' && event.op === 'delete') {\n      // Wait until next tick to allow deletion toasts to appear first\n      cleanupId = setTimeout(() => paneRouter.closeCurrentAndAfter(), 0) as any as number\n    }\n\n    prevEvent.current = event\n\n    // eslint-disable-next-line consistent-return\n    return () => clearTimeout(cleanupId)\n  }, [event, paneRouter, pushToast, t, documentTitle, handleOpenDialog])\n\n  return null\n})\n","import {WarningOutlineIcon} from '@sanity/icons'\nimport {type PreviewValue, type SanityDocument, type SchemaType} from '@sanity/types'\nimport {assignWith} from 'lodash'\nimport {type ReactNode} from 'react'\nimport {combineLatest, type Observable, of} from 'rxjs'\nimport {map, startWith} from 'rxjs/operators'\nimport {type DocumentPreviewStore, getDraftId, getPublishedId} from 'sanity'\n\nimport {type PaneItemPreviewState} from './types'\n\nexport const isLiveEditEnabled = (schemaType: Pick<SchemaType, 'liveEdit'>) =>\n  schemaType.liveEdit === true\n\nexport const getMissingDocumentFallback = (item: SanityDocument) => ({\n  title: <em>{item.title ? String(item.title) : 'Missing document'}</em>,\n  subtitle: <em>{item.title ? `Missing document ID: ${item._id}` : `Document ID: ${item._id}`}</em>,\n  media: () => <WarningOutlineIcon />,\n})\n\nexport const getValueWithFallback = ({\n  value,\n  draft,\n  published,\n}: {\n  value: SanityDocument\n  draft?: Partial<SanityDocument> | PreviewValue | null\n  published?: Partial<SanityDocument> | PreviewValue | null\n}) => {\n  const snapshot = draft || published\n\n  if (!snapshot) {\n    return getMissingDocumentFallback(value)\n  }\n\n  return assignWith({}, snapshot, value, (objValue, srcValue) => {\n    return typeof srcValue === 'undefined' ? objValue : srcValue\n  })\n}\n\nexport function getPreviewStateObservable(\n  documentPreviewStore: DocumentPreviewStore,\n  schemaType: SchemaType,\n  documentId: string,\n  title: ReactNode,\n): Observable<PaneItemPreviewState> {\n  const draft$ = isLiveEditEnabled(schemaType)\n    ? of({snapshot: null})\n    : documentPreviewStore.observeForPreview(\n        {_type: 'reference', _ref: getDraftId(documentId)},\n        schemaType,\n      )\n\n  const published$ = documentPreviewStore.observeForPreview(\n    {_type: 'reference', _ref: getPublishedId(documentId)},\n    schemaType,\n  )\n\n  return combineLatest([draft$, published$]).pipe(\n    map(([draft, published]) => ({\n      draft: draft.snapshot ? {title, ...draft.snapshot} : null,\n      isLoading: false,\n      published: published.snapshot ? {title, ...published.snapshot} : null,\n    })),\n    startWith({draft: null, isLoading: true, published: null}),\n  )\n}\n","import {type SchemaType} from '@sanity/types'\nimport {type EditStateFor, type Workspace} from 'sanity'\n\nimport {isLiveEditEnabled} from './components/paneItem/helpers'\n\nexport interface Context {\n  editState: Pick<EditStateFor, 'ready' | 'draft' | 'published' | 'version'> | null\n  workspace: {\n    document: {\n      drafts: Pick<Workspace['document']['drafts'], 'enabled'>\n    }\n  }\n  schemaType: Pick<SchemaType, 'liveEdit'>\n}\n\n/**\n * Determine whether a document has an obsolete draft. This occurs if a document has a draft while\n * the draft model is inactive, or if a live-edit document has a draft.\n */\nexport function hasObsoleteDraft({editState, workspace, schemaType}: Context):\n  | {\n      result: true\n      reason: 'LIVE_EDIT_ACTIVE' | 'DRAFT_MODEL_INACTIVE'\n    }\n  | {result: false}\n  | {result: undefined} {\n  if (!editState?.ready) {\n    return {\n      result: undefined,\n    }\n  }\n\n  const draftExists = editState.draft !== null\n\n  const {\n    document: {\n      drafts: {enabled: isDraftModelEnabled},\n    },\n  } = workspace\n\n  if (draftExists === false) {\n    return {\n      result: false,\n    }\n  }\n\n  if (!isDraftModelEnabled) {\n    return {\n      result: true,\n      reason: 'DRAFT_MODEL_INACTIVE',\n    }\n  }\n\n  if (isLiveEditEnabled(schemaType)) {\n    return {\n      result: true,\n      reason: 'LIVE_EDIT_ACTIVE',\n    }\n  }\n\n  return {\n    result: false,\n  }\n}\n","import {type EditStateFor, isNewDocument, type isPerspectiveWriteable} from 'sanity'\n\n/**\n * Determine whether the user must choose a new perspective in order to create a document.\n *\n * @returns A boolean reflecting whether the user must choose a new perspective, and `undefined` while indeterminate.\n * @internal\n */\nexport function mustChooseNewDocumentDestination({\n  isSelectedPerspectiveWriteable,\n  editState,\n}: {\n  isSelectedPerspectiveWriteable: ReturnType<typeof isPerspectiveWriteable>\n  editState: Pick<EditStateFor, 'ready' | 'draft' | 'published' | 'version'> | null\n}): boolean | undefined {\n  return isNewDocument(editState) && !isSelectedPerspectiveWriteable.result\n}\n","import {CloseIcon} from '@sanity/icons'\nimport {Box, Card, type CardProps, Flex, Text} from '@sanity/ui'\nimport {type HTMLProps, type ReactNode} from 'react'\nimport {useTranslation} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Button} from '../../../../ui-components'\nimport {structureLocaleNamespace} from '../../../i18n'\n\nexport interface DocumentInspectorHeaderProps {\n  as?: CardProps['as']\n  closeButtonLabel: string\n  flex?: CardProps['flex']\n  onClose: () => void\n  title: ReactNode\n}\n\nconst Root = styled(Card)({\n  position: 'relative',\n  zIndex: '1',\n  lineHeight: '0',\n})\n\n/** @internal */\nexport function DocumentInspectorHeader(\n  props: DocumentInspectorHeaderProps & Omit<HTMLProps<HTMLDivElement>, 'as' | 'height' | 'ref'>,\n) {\n  const {as: forwardedAs, children, closeButtonLabel, onClose, title, ...restProps} = props\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  return (\n    <Root {...restProps} as={forwardedAs}>\n      <Flex padding={2}>\n        <Box flex={1} padding={3}>\n          <Text as=\"h1\" size={1} weight=\"medium\">\n            {title}\n          </Text>\n        </Box>\n        <Box flex=\"none\" padding={1}>\n          <Button\n            aria-label={closeButtonLabel}\n            icon={CloseIcon}\n            mode=\"bleed\"\n            onClick={onClose}\n            tooltipProps={{content: t('document-inspector.close-button.tooltip')}}\n          />\n        </Box>\n      </Flex>\n      {children}\n    </Root>\n  )\n}\n","import {Box} from '@sanity/ui'\nimport {useCallback} from 'react'\nimport {Resizable} from 'sanity'\n\nimport {usePane} from '../../../components'\nimport {useStructureTool} from '../../../useStructureTool'\nimport {DOCUMENT_INSPECTOR_MAX_WIDTH, DOCUMENT_INSPECTOR_MIN_WIDTH} from '../constants'\nimport {useDocumentPane} from '../useDocumentPane'\n\ninterface DocumentInspectorPanelProps {\n  documentId: string\n  documentType: string\n  flex?: number | number[]\n}\n\nexport function DocumentInspectorPanel(\n  props: DocumentInspectorPanelProps,\n): React.JSX.Element | null {\n  const {documentId, documentType, flex} = props\n  const {collapsed} = usePane()\n  const {closeInspector, inspector} = useDocumentPane()\n  const {features} = useStructureTool()\n\n  const handleClose = useCallback(() => {\n    if (inspector) closeInspector(inspector.name)\n  }, [closeInspector, inspector])\n\n  if (collapsed || !inspector) return null\n\n  const Component = inspector.component\n  const element = (\n    <Component onClose={handleClose} documentId={documentId} documentType={documentType} />\n  )\n\n  if (features.resizablePanes) {\n    return (\n      <Resizable\n        as=\"aside\"\n        data-ui=\"DocumentInspectorPanel\"\n        flex={flex}\n        resizerPosition=\"left\"\n        maxWidth={DOCUMENT_INSPECTOR_MAX_WIDTH}\n        minWidth={DOCUMENT_INSPECTOR_MIN_WIDTH}\n      >\n        {element}\n      </Resizable>\n    )\n  }\n\n  return (\n    <Box as=\"aside\" data-ui=\"DocumentInspectorPanel\" flex={flex}>\n      {element}\n    </Box>\n  )\n}\n","import {useCallback, useMemo} from 'react'\nimport {useObservable} from 'react-rx'\nimport {map} from 'rxjs/operators'\nimport {useKeyValueStore} from 'sanity'\n\nconst STRUCTURE_TOOL_NAMESPACE = 'studio.structure-tool'\n\n/**\n * @internal\n */\nexport function useStructureToolSetting<ValueType>(\n  namespace: string,\n  key: string | null,\n  defaultValue?: ValueType,\n): [ValueType | undefined, (_value: ValueType) => void] {\n  const keyValueStore = useKeyValueStore()\n\n  const keyValueStoreKey = [STRUCTURE_TOOL_NAMESPACE, namespace, key].filter(Boolean).join('.')\n\n  const value$ = useMemo(() => {\n    return keyValueStore\n      .getKey(keyValueStoreKey)\n      .pipe(map((value) => (value === null ? defaultValue : value)))\n  }, [defaultValue, keyValueStore, keyValueStoreKey])\n\n  const value = useObservable(value$, defaultValue) as ValueType\n  const set = useCallback(\n    (newValue: ValueType) => {\n      if (newValue !== value) {\n        keyValueStore.setKey(keyValueStoreKey, newValue as string)\n      }\n    },\n    [keyValueStore, keyValueStoreKey, value],\n  )\n\n  return useMemo(() => [value, set], [set, value])\n}\n","export const VIEW_MODE_PARSED = {id: 'parsed', title: 'document-inspector.view-mode.parsed'}\nexport const VIEW_MODE_RAW = {id: 'raw', title: 'document-inspector.view-mode.raw-json'}\nexport const VIEW_MODES = [VIEW_MODE_PARSED, VIEW_MODE_RAW]\n","import {type SanityDocumentLike} from '@sanity/types'\nimport LRU from 'quick-lru'\nimport {isRecord, isString} from 'sanity'\n\nconst lru = new LRU({maxSize: 1000})\n\nexport function isExpanded(keyPath: any, value: any): any {\n  const cached = lru.get(keyPath)\n\n  if (cached === undefined) {\n    lru.set(keyPath, Array.isArray(value) || isRecord(value))\n    return isExpanded(keyPath, value)\n  }\n\n  return cached\n}\n\nexport function toggleExpanded(event: any): void {\n  const {path} = event\n  const current = lru.get(path)\n\n  if (current === undefined) {\n    // something is wrong\n    return\n  }\n\n  lru.set(path, !current)\n}\n\nexport function selectElement(element: HTMLElement): void {\n  const sel = window.getSelection()\n\n  if (sel) {\n    const range = document.createRange()\n\n    sel.removeAllRanges()\n    range.selectNodeContents(element)\n    sel.addRange(range)\n  }\n}\n\nexport function select(event: any): void {\n  selectElement(event.currentTarget)\n}\n\nexport function maybeSelectAll(event: any): void {\n  const selectAll = event.keyCode === 65 && (event.metaKey || event.ctrlKey)\n\n  if (!selectAll) {\n    return\n  }\n\n  event.preventDefault()\n\n  selectElement(event.currentTarget)\n}\n\nexport function isDocumentLike(value: unknown): value is SanityDocumentLike {\n  return isRecord(value) && isString(value._id) && isString(value._type)\n}\n","import {rem, type Theme} from '@sanity/ui'\nimport {css, styled} from 'styled-components'\n\nexport const JSONInspectorWrapper = styled.div(({theme}: {theme: Theme}) => {\n  const {color, fonts, space} = theme.sanity\n\n  return css`\n    & .json-inspector,\n    & .json-inspector .json-inspector__selection {\n      font-family: ${fonts.code.family};\n      font-size: ${fonts.code.sizes[1].fontSize}px;\n      line-height: ${fonts.code.sizes[1].lineHeight}px;\n      color: var(--card-code-fg-color);\n    }\n\n    & .json-inspector .json-inspector__leaf {\n      padding-left: ${rem(space[4])};\n    }\n\n    & .json-inspector .json-inspector__leaf.json-inspector__leaf_root {\n      padding-top: ${rem(space[3])};\n      padding-left: 0;\n    }\n\n    & .json-inspector > .json-inspector__leaf_root > .json-inspector__line > .json-inspector__key {\n      display: none;\n    }\n\n    & .json-inspector .json-inspector__line {\n      display: block;\n      position: relative;\n      cursor: default;\n    }\n\n    & .json-inspector .json-inspector__line::after {\n      content: '';\n      position: absolute;\n      top: 0;\n      left: -200px;\n      right: -50px;\n      bottom: 0;\n      z-index: -1;\n      pointer-events: none;\n    }\n\n    & .json-inspector .json-inspector__line:hover::after {\n      background: var(--card-code-bg-color);\n    }\n\n    & .json-inspector .json-inspector__leaf_composite > .json-inspector__line {\n      cursor: pointer;\n    }\n\n    & .json-inspector .json-inspector__leaf_composite > .json-inspector__line::before {\n      content: '▸ ';\n      margin-left: calc(0 - ${rem(space[4])} + 3px);\n      font-size: ${fonts.code.sizes[1].fontSize}px;\n      line-height: ${fonts.code.sizes[1].lineHeight}px;\n    }\n\n    &\n      .json-inspector\n      .json-inspector__leaf_expanded.json-inspector__leaf_composite\n      > .json-inspector__line::before {\n      content: '▾ ';\n      font-size: ${fonts.code.sizes[1].fontSize}px;\n      line-height: ${fonts.code.sizes[1].lineHeight}px;\n    }\n\n    & .json-inspector .json-inspector__radio,\n    & .json-inspector .json-inspector__flatpath {\n      display: none;\n    }\n\n    & .json-inspector .json-inspector__value {\n      margin-left: ${rem(space[4] / 2)};\n    }\n\n    &\n      .json-inspector\n      > .json-inspector__leaf_root\n      > .json-inspector__line\n      > .json-inspector__key\n      + .json-inspector__value {\n      margin: 0;\n    }\n\n    & .json-inspector .json-inspector__key {\n      color: ${color.syntax.property};\n    }\n\n    & .json-inspector .json-inspector__value_helper,\n    & .json-inspector .json-inspector__value_null {\n      color: ${color.syntax.constant};\n    }\n\n    & .json-inspector .json-inspector__not-found {\n      padding-top: ${rem(space[3])};\n    }\n\n    & .json-inspector .json-inspector__value_string {\n      color: ${color.syntax.string};\n    }\n\n    & .json-inspector .json-inspector__value_boolean {\n      color: ${color.syntax.boolean};\n    }\n\n    & .json-inspector .json-inspector__value_number {\n      color: ${color.syntax.number};\n    }\n\n    & .json-inspector .json-inspector__show-original {\n      display: inline-block;\n      padding: 0 6px;\n      cursor: pointer;\n    }\n\n    & .json-inspector .json-inspector__show-original:hover {\n      color: inherit;\n    }\n\n    & .json-inspector .json-inspector__show-original::before {\n      content: '↔';\n    }\n\n    & .json-inspector .json-inspector__show-original:hover::after {\n      content: ' expand';\n    }\n  `\n})\n","import {SearchIcon} from '@sanity/icons'\nimport {TextInput} from '@sanity/ui'\nimport {type ChangeEvent, useCallback} from 'react'\nimport {useTranslation} from 'sanity'\n\nimport {structureLocaleNamespace} from '../../../i18n'\n\nexport function Search(props: {onChange: (q: string) => void; query: string}) {\n  const {onChange, query} = props\n\n  const handleChange = useCallback(\n    (event: ChangeEvent<HTMLInputElement>) => onChange(event.target.value),\n    [onChange],\n  )\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  return (\n    <TextInput\n      icon={SearchIcon}\n      onChange={handleChange}\n      placeholder={t('document-inspector.search.placeholder')}\n      radius={2}\n      value={query || ''}\n    />\n  )\n}\n","import {JsonInspector} from '@rexxars/react-json-inspector'\nimport {type SanityDocument} from '@sanity/types'\nimport {Card, Code, Flex, TabList, TabPanel} from '@sanity/ui'\nimport {useCallback} from 'react'\nimport {Translate, useTranslation} from 'sanity'\n\nimport {Dialog, Tab} from '../../../../ui-components'\nimport {DocTitle} from '../../../components'\nimport {structureLocaleNamespace} from '../../../i18n'\nimport {useStructureToolSetting} from '../../../useStructureToolSetting'\nimport {useDocumentPane} from '../useDocumentPane'\nimport {VIEW_MODE_PARSED, VIEW_MODE_RAW, VIEW_MODES} from './constants'\nimport {isDocumentLike, isExpanded, maybeSelectAll, select, toggleExpanded} from './helpers'\nimport {JSONInspectorWrapper} from './InspectDialog.styles'\nimport {Search} from './Search'\n\ninterface InspectDialogProps {\n  value: Partial<SanityDocument> | null\n}\n\nexport function InspectDialog(props: InspectDialogProps) {\n  const {value} = props\n  const {onInspectClose, paneKey} = useDocumentPane()\n  const dialogIdPrefix = `${paneKey}_inspect_`\n\n  /* this creates a view mode (the default that it opens with is the parsed tab) that is saved based on the paneKey\n  where the inspect dialog lives.\n  This also means that when a page is loaded, the state of the tabs remains and doesn't revert to the pane tab */\n  const [viewModeId, onViewModeChange] = useStructureToolSetting(\n    'inspect-view-mode',\n    null,\n    'parsed',\n  )\n\n  /* based on the view mode it shows the right tab content */\n  const viewMode = VIEW_MODES.find((mode) => mode.id === viewModeId)\n\n  const setParsedViewMode = useCallback(() => {\n    onViewModeChange(VIEW_MODE_PARSED.id)\n  }, [onViewModeChange])\n\n  const setRawViewMode = useCallback(() => {\n    onViewModeChange(VIEW_MODE_RAW.id)\n  }, [onViewModeChange])\n\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  return (\n    <Dialog\n      bodyHeight=\"fill\"\n      id={`${dialogIdPrefix}dialog`}\n      header={\n        isDocumentLike(value) ? (\n          <Translate\n            t={t}\n            i18nKey=\"document-inspector.dialog.title\"\n            components={{\n              DocumentTitle: () => (\n                <em>\n                  <DocTitle document={value} />\n                </em>\n              ),\n            }}\n          />\n        ) : (\n          <em>{t('document-inspector.dialog.title-no-value')}</em>\n        )\n      }\n      onClose={onInspectClose}\n      onClickOutside={onInspectClose}\n      padding={false}\n      width={2}\n    >\n      <Flex direction=\"column\" height=\"fill\">\n        <Card\n          padding={3}\n          paddingTop={0}\n          shadow={1}\n          style={{position: 'sticky', bottom: 0, zIndex: 3}}\n        >\n          <TabList space={1}>\n            <Tab\n              aria-controls={`${dialogIdPrefix}tabpanel`}\n              id={`${dialogIdPrefix}tab-${VIEW_MODE_PARSED.id}`}\n              label={t(VIEW_MODE_PARSED.title)}\n              onClick={setParsedViewMode}\n              selected={viewMode === VIEW_MODE_PARSED}\n            />\n            <Tab\n              aria-controls={`${dialogIdPrefix}tabpanel`}\n              id={`${dialogIdPrefix}tab-${VIEW_MODE_RAW.id}`}\n              label={t(VIEW_MODE_RAW.title)}\n              onClick={setRawViewMode}\n              selected={viewMode === VIEW_MODE_RAW}\n            />\n          </TabList>\n        </Card>\n\n        <TabPanel\n          aria-labelledby={`${dialogIdPrefix}tab-${viewModeId}`}\n          flex={1}\n          id={`${dialogIdPrefix}tabpanel`}\n          overflow=\"auto\"\n          padding={4}\n          style={{outline: 'none'}}\n        >\n          {viewMode === VIEW_MODE_PARSED && (\n            <JSONInspectorWrapper>\n              <JsonInspector\n                data={value}\n                isExpanded={isExpanded}\n                onClick={toggleExpanded}\n                search={Search}\n                filterOptions={{ignoreCase: true}}\n              />\n            </JSONInspectorWrapper>\n          )}\n\n          {viewMode === VIEW_MODE_RAW && (\n            <Code\n              language=\"json\"\n              tabIndex={0}\n              onKeyDown={maybeSelectAll}\n              onDoubleClick={select}\n              onFocus={select}\n              size={1}\n            >\n              {JSON.stringify(value, null, 2)}\n            </Code>\n          )}\n        </TabPanel>\n      </Flex>\n    </Dialog>\n  )\n}\n","import {Box, type ButtonMode, type ButtonTone, Card, type CardTone, Flex, Text} from '@sanity/ui'\nimport {type ComponentType, type ElementType, type ReactNode} from 'react'\n\nimport {Button} from '../../../../../ui-components'\n\ninterface BannerProps {\n  action?: {\n    as?: ElementType | keyof React.JSX.IntrinsicElements\n    icon?: ComponentType\n    onClick?: () => void\n    text: string\n    tone?: ButtonTone\n    disabled?: boolean\n    mode?: ButtonMode\n  }\n  content: ReactNode\n  icon?: ComponentType\n  tone?: CardTone\n  paddingY?: number\n}\n\nexport function Banner(props: BannerProps) {\n  const {action, content, icon: Icon, tone = 'transparent', paddingY = 2, ...rest} = props\n\n  return (\n    <Box padding={1}>\n      <Card radius={3} paddingX={2} paddingY={paddingY} tone={tone} {...rest}>\n        <Flex align=\"center\" gap={3} paddingX={2}>\n          {Icon && (\n            <Text size={0}>\n              <Icon />\n            </Text>\n          )}\n\n          <Flex align=\"center\" flex={1} gap={2} paddingY={2}>\n            {content}\n          </Flex>\n\n          {action && (\n            <Button {...action} mode={action.mode || 'ghost'} tone={action.tone || 'default'} />\n          )}\n        </Flex>\n      </Card>\n    </Box>\n  )\n}\n","import {DocumentRemoveIcon, ReadOnlyIcon} from '@sanity/icons'\nimport {Text} from '@sanity/ui'\nimport {useCallback} from 'react'\nimport {\n  isDraftPerspective,\n  isPublishedPerspective,\n  type ReleaseDocument,\n  Translate,\n  useDocumentOperation,\n  usePerspective,\n  useTranslation,\n} from 'sanity'\nimport {useRouter} from 'sanity/router'\n\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {Banner} from './Banner'\n\nexport function DeletedDocumentBanners() {\n  const {isDeleted, isDeleting, ready} = useDocumentPane()\n  const {selectedPerspective} = usePerspective()\n  if (!ready) return null\n  if (\n    !isPublishedPerspective(selectedPerspective) &&\n    !isDraftPerspective(selectedPerspective) &&\n    selectedPerspective.state === 'archived'\n  ) {\n    return <ArchivedReleaseBanner release={selectedPerspective as ReleaseDocument} />\n  }\n  if (isDeleted && !isDeleting) return <DeletedDocumentBanner />\n}\n\nfunction DeletedDocumentBanner() {\n  const {documentId, documentType} = useDocumentPane()\n  const {restore} = useDocumentOperation(documentId, documentType)\n  const {navigateIntent} = useRouter()\n\n  const handleRestore = useCallback(() => {\n    restore.execute('lastRevision')\n    navigateIntent('edit', {id: documentId, type: documentType})\n  }, [documentId, documentType, navigateIntent, restore])\n\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  return (\n    <Banner\n      action={{\n        onClick: handleRestore,\n        text: t('banners.deleted-document-banner.restore-button.text'),\n      }}\n      content={\n        <Text size={1} weight=\"medium\">\n          {t('banners.deleted-document-banner.text')}\n        </Text>\n      }\n      data-testid=\"deleted-document-banner\"\n      icon={ReadOnlyIcon}\n    />\n  )\n}\n\nconst ArchivedReleaseBanner = ({release}: {release: ReleaseDocument}) => {\n  const {t} = useTranslation()\n\n  return (\n    <Banner\n      tone=\"caution\"\n      content={\n        <Text size={1} weight=\"medium\">\n          <Translate\n            t={t}\n            i18nKey=\"banners.deleted-release-banner.text\"\n            values={{title: release.metadata?.title || t('release.placeholder-untitled-release')}}\n          />\n        </Text>\n      }\n      data-testid=\"deleted-release-banner\"\n      icon={DocumentRemoveIcon}\n    />\n  )\n}\n","import {ErrorOutlineIcon} from '@sanity/icons'\nimport {Text} from '@sanity/ui'\nimport {isDeprecatedSchemaType, Translate, useTranslation} from 'sanity'\n\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {Banner} from './Banner'\n\nexport function DeprecatedDocumentTypeBanner() {\n  const {schemaType} = useDocumentPane()\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  if (!isDeprecatedSchemaType(schemaType)) {\n    return null\n  }\n\n  return (\n    <Banner\n      content={\n        <Text size={1} weight=\"medium\">\n          <Translate t={t} i18nKey=\"banners.deprecated-document-type-banner.text\" />{' '}\n          {schemaType.deprecated.reason}\n        </Text>\n      }\n      data-testid=\"deprecated-document-type-banner\"\n      icon={ErrorOutlineIcon}\n    />\n  )\n}\n","import {defineEvent} from '@sanity/telemetry'\n\n/** @internal */\nexport const AskToEditDialogOpened = defineEvent({\n  name: 'Ask To Edit Dialog Opened',\n  version: 1,\n  description: 'User clicked the \"Ask to edit\" button in the document permissions banner',\n})\n\n/** @internal */\nexport const AskToEditRequestSent = defineEvent({\n  name: 'Ask To Edit Request Sent',\n  version: 1,\n  description: 'User sent a role change request from the dialog',\n})\n","import {useTelemetry} from '@sanity/telemetry/react'\nimport {Box, Card, DialogProvider, Flex, Stack, Text, TextInput, useToast} from '@sanity/ui'\nimport {useId, useMemo, useState} from 'react'\nimport {useObservable} from 'react-rx'\nimport {catchError, map, type Observable, of, startWith} from 'rxjs'\nimport {type Role, useClient, useProjectId, useTranslation, useZIndex} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Dialog} from '../../../ui-components'\nimport {structureLocaleNamespace} from '../../i18n'\nimport {AskToEditRequestSent} from './__telemetry__/RequestPermissionDialog.telemetry'\nimport {type AccessRequest} from './useRoleRequestsStatus'\n\nconst MAX_NOTE_LENGTH = 150\n\n/** @internal */\nexport const DialogBody = styled(Box)`\n  box-sizing: border-box;\n`\n\n/** @internal */\nexport const LoadingContainer = styled(Flex).attrs({\n  align: 'center',\n  direction: 'column',\n  justify: 'center',\n})`\n  height: 110px;\n`\n\n/** @internal */\nexport interface RequestPermissionDialogProps {\n  onClose?: () => void\n  onRequestSubmitted?: () => void\n}\n\n/**\n * A dialog that enables the user to request permission to change their\n * member role from \"Viewer\" to \"Editor\" or \"Admin\" depending on the\n * project's available roles.\n *\n * @internal\n */\nexport function RequestPermissionDialog({\n  onClose,\n  onRequestSubmitted,\n}: RequestPermissionDialogProps) {\n  const {t} = useTranslation(structureLocaleNamespace)\n  const telemtry = useTelemetry()\n  const dialogId = `request-permissions-${useId()}`\n  const projectId = useProjectId()\n  const client = useClient({apiVersion: '2024-09-26'})\n  const toast = useToast()\n  const zOffset = useZIndex()\n\n  const [isSubmitting, setIsSubmitting] = useState(false)\n\n  const [note, setNote] = useState('')\n\n  const [msgError, setMsgError] = useState<string | undefined>()\n  const [hasTooManyRequests, setHasTooManyRequests] = useState<boolean>(false)\n  const [hasBeenDenied, setHasBeenDenied] = useState<boolean>(false)\n\n  const requestedRole$: Observable<'administrator' | 'editor'> = useMemo(() => {\n    const adminRole = 'administrator' as const\n    if (!projectId || !client) return of(adminRole)\n    return client.observable\n      .request<(Role & {appliesToUsers?: boolean})[]>({url: `/projects/${projectId}/roles`})\n      .pipe(\n        map((roles) => {\n          const hasEditor = roles\n            .filter((role) => role?.appliesToUsers)\n            .find((role) => role.name === 'editor')\n          return hasEditor ? 'editor' : adminRole\n        }),\n        startWith(adminRole),\n        catchError(() => of(adminRole)),\n      )\n  }, [projectId, client])\n\n  const requestedRole = useObservable(requestedRole$)\n\n  const onSubmit = () => {\n    setIsSubmitting(true)\n    client\n      .request<AccessRequest | null>({\n        url: `/access/project/${projectId}/requests`,\n        method: 'post',\n        body: {note, requestUrl: window?.location.href, requestedRole, type: 'role'},\n      })\n      .then((request) => {\n        if (request) {\n          if (onRequestSubmitted) onRequestSubmitted()\n          telemtry.log(AskToEditRequestSent)\n          toast.push({title: 'Edit access requested'})\n        }\n      })\n      .catch((err) => {\n        const statusCode = err?.response?.statusCode\n        const errMessage = err?.response?.body?.message\n        if (statusCode === 429) {\n          // User is over their cross-project request limit\n          setHasTooManyRequests(true)\n          setMsgError(errMessage)\n        }\n        if (statusCode === 409) {\n          // If we get a 409, user has been denied on this project or has a valid pending request\n          // valid pending request should be handled by GET request above\n          setHasBeenDenied(true)\n          setMsgError(errMessage)\n        } else {\n          toast.push({\n            title: 'There was a problem submitting your request.',\n            status: 'error',\n          })\n        }\n      })\n      .finally(() => {\n        setIsSubmitting(false)\n      })\n  }\n\n  return (\n    <DialogProvider position={'fixed'} zOffset={zOffset.fullscreen}>\n      <Dialog\n        width={1}\n        id={dialogId}\n        header={t('request-permission-dialog.header.text')}\n        footer={{\n          cancelButton: {\n            onClick: onClose,\n            text: t('confirm-dialog.cancel-button.fallback-text'),\n          },\n          confirmButton: {\n            onClick: onSubmit,\n            loading: isSubmitting,\n            disabled: hasTooManyRequests || hasBeenDenied,\n            text: t('request-permission-dialog.confirm-button.text'),\n            tone: 'primary',\n            type: 'submit',\n          },\n        }}\n        onClose={onClose}\n        onClickOutside={onClose}\n      >\n        <DialogBody>\n          <Stack space={4}>\n            <Text>{t('request-permission-dialog.description.text')}</Text>\n            {hasTooManyRequests || hasBeenDenied ? (\n              <Card tone={'caution'} padding={3} radius={2} shadow={1}>\n                <Text size={1}>\n                  {hasTooManyRequests && (\n                    <>{msgError ?? t('request-permission-dialog.warning.limit-reached.text')}</>\n                  )}\n                  {hasBeenDenied && (\n                    <>{msgError ?? t('request-permission-dialog.warning.denied.text')}</>\n                  )}\n                </Text>\n              </Card>\n            ) : (\n              <Stack space={3} paddingBottom={0}>\n                <TextInput\n                  placeholder={t('request-permission-dialog.note-input.placeholder.text')}\n                  disabled={isSubmitting}\n                  onKeyDown={(e) => {\n                    if (e.key === 'Enter') onSubmit()\n                  }}\n                  maxLength={MAX_NOTE_LENGTH}\n                  value={note}\n                  onChange={(e) => {\n                    setNote(e.currentTarget.value)\n                  }}\n                />\n\n                <Text align=\"right\" muted size={1}>{`${note.length}/${MAX_NOTE_LENGTH}`}</Text>\n              </Stack>\n            )}\n          </Stack>\n        </DialogBody>\n      </Dialog>\n    </DialogProvider>\n  )\n}\n","import {addWeeks, isAfter, isBefore} from 'date-fns'\nimport {useMemo} from 'react'\nimport {useObservable} from 'react-rx'\nimport {of} from 'rxjs'\nimport {catchError, map, startWith} from 'rxjs/operators'\nimport {type SanityClient, useClient, useProjectId} from 'sanity'\n\n/** @internal */\nexport interface AccessRequest {\n  id: string\n  status: 'pending' | 'accepted' | 'declined'\n  resourceId: string\n  resourceType: 'project'\n  createdAt: string\n  updatedAt: string\n  updatedByUserId: string\n  requestedByUserId: string\n  requestedRole: string\n  type: 'access' | 'role'\n  note: string\n}\n\nconst LOADING_STATE = {loading: true, error: false, status: undefined}\nconst EMPTY_STATE = {loading: false, error: false, status: 'none'}\nconst DECLINED_STATE = {loading: false, error: false, status: 'declined'}\nconst PENDING_STATE = {loading: false, error: false, status: 'pending'}\nconst EXPIRED_STATE = {loading: false, error: false, status: 'expired'}\n\n/** @internal */\nexport const useRoleRequestsStatus = () => {\n  const client = useClient({apiVersion: '2024-07-01'})\n  const projectId = useProjectId()\n\n  const checkRoleRequests$ = useMemo(() => {\n    if (!client || !projectId) {\n      return of(EMPTY_STATE)\n    }\n\n    return checkRoleRequests(client, projectId)\n  }, [client, projectId])\n\n  const {loading, error, status} = useObservable(checkRoleRequests$, LOADING_STATE)\n  return {data: status, loading, error}\n}\n\nfunction checkRoleRequests(client: SanityClient, projectId: string) {\n  return client.observable\n    .request<AccessRequest[] | null>({\n      url: '/access/requests/me',\n      tag: 'use-role-requests-status',\n    })\n    .pipe(\n      map((requests) => {\n        if (!requests || requests.length === 0) {\n          return EMPTY_STATE\n        }\n\n        // Filter requests for the specific project and where type is 'role'\n        const projectRequests = requests.filter(\n          (request) => request.resourceId === projectId && request.type === 'role',\n        )\n\n        const declinedRequest = projectRequests.find((request) => request.status === 'declined')\n        if (\n          declinedRequest &&\n          isAfter(addWeeks(new Date(declinedRequest.createdAt), 2), new Date())\n        ) {\n          return DECLINED_STATE\n        }\n\n        const pendingRequest = projectRequests.find(\n          (request) =>\n            request.status === 'pending' &&\n            isAfter(addWeeks(new Date(request.createdAt), 2), new Date()),\n        )\n        if (pendingRequest) {\n          return PENDING_STATE\n        }\n\n        const oldPendingRequest = projectRequests.find(\n          (request) =>\n            request.status === 'pending' &&\n            isBefore(addWeeks(new Date(request.createdAt), 2), new Date()),\n        )\n\n        return oldPendingRequest ? EXPIRED_STATE : EMPTY_STATE\n      }),\n      catchError((err) => {\n        console.error('Failed to fetch access requests', err)\n        return of({loading: false, error: true, status: undefined})\n      }),\n      startWith(LOADING_STATE), // Start with loading state\n    )\n}\n","import {ReadOnlyIcon} from '@sanity/icons'\nimport {useTelemetry} from '@sanity/telemetry/react'\nimport {Text} from '@sanity/ui'\nimport {useMemo, useState} from 'react'\nimport {Translate, useCurrentUser, useListFormat, useTranslation} from 'sanity'\n\nimport {\n  RequestPermissionDialog,\n  useRoleRequestsStatus,\n} from '../../../../components/requestPermissionDialog'\nimport {AskToEditDialogOpened} from '../../../../components/requestPermissionDialog/__telemetry__/RequestPermissionDialog.telemetry'\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {Banner} from './Banner'\n\ninterface InsufficientPermissionBannerProps {\n  requiredPermission: 'update' | 'create'\n}\n\nexport function InsufficientPermissionBanner({\n  requiredPermission,\n}: InsufficientPermissionBannerProps) {\n  const currentUser = useCurrentUser()\n\n  const {\n    data: roleRequestStatus,\n    loading: requestStatusLoading,\n    error: requestStatusError,\n  } = useRoleRequestsStatus()\n  const [requestSent, setRequestSent] = useState(false)\n  const requestPending = useMemo(\n    () => roleRequestStatus === 'pending' || roleRequestStatus === 'declined' || requestSent,\n    [roleRequestStatus, requestSent],\n  )\n  const currentUserRoles = currentUser?.roles || []\n  const isOnlyViewer = currentUserRoles.length === 1 && currentUserRoles[0].name === 'viewer'\n  const [showRequestPermissionDialog, setShowRequestPermissionDialog] = useState(false)\n\n  const listFormat = useListFormat({style: 'short'})\n  const {t} = useTranslation(structureLocaleNamespace)\n  const telemetry = useTelemetry()\n\n  const roleTitles = currentUserRoles.map((role) => role.title)\n  const roles = listFormat\n    .formatToParts(roleTitles)\n    .map((part) =>\n      part.type === 'element' ? <code key={part.value}>{part.value}</code> : part.value,\n    )\n\n  return (\n    <>\n      <Banner\n        content={\n          <Text size={1} weight=\"medium\">\n            <Translate\n              t={t}\n              i18nKey=\"banners.permission-check-banner.missing-permission\"\n              components={{Roles: () => <>{roles}</>}}\n              values={{count: roles.length, roles: roleTitles}}\n              context={requiredPermission}\n            />\n          </Text>\n        }\n        action={\n          isOnlyViewer && roleRequestStatus && !requestStatusError && !requestStatusLoading\n            ? {\n                onClick: requestPending\n                  ? undefined\n                  : () => {\n                      setShowRequestPermissionDialog(true)\n                      telemetry.log(AskToEditDialogOpened)\n                    },\n                text: requestPending\n                  ? t('banners.permission-check-banner.request-permission-button.sent')\n                  : t('banners.permission-check-banner.request-permission-button.text'),\n                tone: requestPending ? 'default' : 'primary',\n                disabled: requestPending,\n                mode: requestPending ? 'bleed' : undefined,\n              }\n            : undefined\n        }\n        data-testid=\"permission-check-banner\"\n        icon={ReadOnlyIcon}\n      />\n      {showRequestPermissionDialog && (\n        <RequestPermissionDialog\n          onClose={() => setShowRequestPermissionDialog(false)}\n          onRequestSubmitted={() => {\n            setRequestSent(true)\n            setShowRequestPermissionDialog(false)\n          }}\n        />\n      )}\n    </>\n  )\n}\n","import {CloseIcon, SyncIcon, WarningOutlineIcon} from '@sanity/icons'\nimport {type KeyedSegment, type Reference} from '@sanity/types'\nimport {Text} from '@sanity/ui'\nimport {fromString as pathFromString, get as pathGet} from '@sanity/util/paths'\nimport {memo, useCallback, useMemo} from 'react'\nimport {useObservable} from 'react-rx'\nimport {concat, type Observable, of} from 'rxjs'\nimport {debounceTime, map} from 'rxjs/operators'\nimport {\n  type DocumentAvailability,\n  getPublishedId,\n  useDocumentPreviewStore,\n  usePerspective,\n  useTranslation,\n} from 'sanity'\n\nimport {usePaneRouter} from '../../../../components'\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {type RouterPaneGroup} from '../../../../types'\nimport {Banner} from './Banner'\n\ninterface ParentReferenceInfo {\n  loading: boolean\n  result?: {\n    availability: {\n      draft: DocumentAvailability\n      published: DocumentAvailability\n      version?: DocumentAvailability\n    }\n    refValue: string | undefined\n  }\n}\n\nexport const ReferenceChangedBanner = memo(() => {\n  const documentPreviewStore = useDocumentPreviewStore()\n  const {selectedReleaseId} = usePerspective()\n  const {params, groupIndex, routerPanesState, replaceCurrent, BackLink} = usePaneRouter()\n  const routerReferenceId = routerPanesState[groupIndex]?.[0].id\n  const parentGroup = routerPanesState[groupIndex - 1] as RouterPaneGroup | undefined\n  const parentSibling = parentGroup?.[0]\n  const parentId = parentSibling?.id\n  const hasHistoryOpen = Boolean(parentSibling?.params?.rev)\n  const parentRefPath = useMemo(() => {\n    return (params?.parentRefPath && pathFromString(params.parentRefPath)) || null\n  }, [params?.parentRefPath])\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  /**\n   * Loads information regarding the reference field of the parent pane. This\n   * is only applicable to child references (aka references-in-place).\n   *\n   * It utilizes the pane ID of the parent pane (which is a document ID) along\n   * with the `parentRefPath` router param on the current pane to find the\n   * current value of the reference field on the parent document.\n   *\n   * This is used to compare with the current pane's document ID. If the IDs\n   * don't match then this banner should reveal itself\n   */\n  const referenceInfoObservable = useMemo((): Observable<ParentReferenceInfo> => {\n    const parentRefPathSegment = parentRefPath?.[0] as string | undefined\n\n    // short-circuit: this document pane is not a child reference pane\n    if (!parentId || !parentRefPathSegment || !parentRefPath) {\n      return of({loading: false})\n    }\n\n    const publishedId = getPublishedId(parentId)\n    const path = pathFromString(parentRefPathSegment)\n\n    // note: observePaths doesn't support keyed path segments, so we need to select the nearest parent\n    const keyedSegmentIndex = path.findIndex(\n      (p): p is KeyedSegment => typeof p == 'object' && '_key' in p,\n    )\n\n    return concat(\n      // emit a loading state instantly\n      of({loading: true}),\n      // then emit the values from watching the published ID's path\n      documentPreviewStore\n        .unstable_observePathsDocumentPair(\n          publishedId,\n          (keyedSegmentIndex === -1 ? path : path.slice(0, keyedSegmentIndex)) as string[][],\n          {\n            version: selectedReleaseId,\n          },\n        )\n        .pipe(\n          // this debounce time is needed to prevent flashing banners due to\n          // the router state updating faster than the content-lake state. we\n          // debounce to wait for more emissions because the value pulled\n          // initially could be stale.\n          debounceTime(750),\n          map(\n            ({draft, published, version}): ParentReferenceInfo => ({\n              loading: false,\n              result: {\n                availability: {\n                  draft: draft.availability,\n                  published: published.availability,\n                  ...(version?.availability\n                    ? {\n                        version: version.availability,\n                      }\n                    : {}),\n                },\n                refValue: pathGet<Reference>(\n                  version?.snapshot || draft.snapshot || published.snapshot,\n                  parentRefPath,\n                )?._ref,\n              },\n            }),\n          ),\n        ),\n    )\n  }, [selectedReleaseId, documentPreviewStore, parentId, parentRefPath])\n  const referenceInfo = useObservable(referenceInfoObservable, {loading: true})\n\n  const handleReloadReference = useCallback(() => {\n    if (referenceInfo.loading) return\n\n    if (referenceInfo.result?.refValue) {\n      replaceCurrent({\n        id: referenceInfo.result.refValue,\n        params: params as Record<string, string>,\n      })\n    }\n  }, [referenceInfo.loading, referenceInfo.result, replaceCurrent, params])\n\n  const shouldHide =\n    // if `parentId` or `parentRefPath` is not present then this banner is n/a\n    !parentId ||\n    !parentRefPath ||\n    // if viewing this pane via history, then hide\n    hasHistoryOpen ||\n    // if loading, hide\n    referenceInfo.loading ||\n    // if the parent document is not available (e.g. due to permission denied or\n    // not found) we don't want to display a warning here, but instead rely on the\n    // parent view to display the appropriate message\n    (!referenceInfo.result?.availability.draft.available &&\n      !referenceInfo.result?.availability.published.available) ||\n    // if the references are the same, then hide the reference changed banner\n    referenceInfo.result?.refValue === routerReferenceId\n\n  if (shouldHide) return null\n\n  return (\n    <Banner\n      action={\n        referenceInfo.result?.refValue\n          ? {\n              onClick: handleReloadReference,\n              icon: SyncIcon,\n              text: t('banners.reference-changed-banner.reason-changed.reload-button.text'),\n            }\n          : {\n              as: BackLink,\n              icon: CloseIcon,\n              text: t('banners.reference-changed-banner.reason-removed.close-button.text'),\n            }\n      }\n      data-testid=\"reference-changed-banner\"\n      content={\n        <Text size={1} weight=\"medium\">\n          {referenceInfo.result?.refValue\n            ? t('banners.reference-changed-banner.reason-changed.text')\n            : t('banners.reference-changed-banner.reason-removed.text')}\n        </Text>\n      }\n      icon={WarningOutlineIcon}\n      tone=\"caution\"\n    />\n  )\n})\n\nReferenceChangedBanner.displayName = 'Memo(ReferenceChangedBanner)'\n","import {WarningOutlineIcon} from '@sanity/icons'\nimport {Text} from '@sanity/ui'\nimport {Translate, useTranslation} from 'sanity'\n\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {Banner} from './Banner'\n\nexport function ScheduledDraftOverrideBanner(): React.JSX.Element {\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  return (\n    <Banner\n      tone=\"caution\"\n      icon={WarningOutlineIcon}\n      content={\n        <Text size={1}>\n          <Translate t={t} i18nKey=\"banners.scheduled-draft-override-banner.text\" />\n        </Text>\n      }\n    />\n  )\n}\n","import {Text} from '@sanity/ui'\nimport {useMemo} from 'react'\nimport {\n  getReleaseIdFromReleaseDocumentId,\n  getVersionInlineBadge,\n  isCardinalityOneRelease,\n  Translate,\n  useArchivedReleases,\n  useTranslation,\n} from 'sanity'\n\nimport {usePaneRouter} from '../../../../components/paneRouter/usePaneRouter'\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {Banner} from './Banner'\n\nexport function ArchivedReleaseDocumentBanner(): React.JSX.Element {\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {t: tCore} = useTranslation()\n  const {data: archivedReleases} = useArchivedReleases()\n\n  const {params, setParams} = usePaneRouter()\n  const handleGoBack = () => {\n    setParams({\n      ...params,\n      rev: params?.historyEvent || undefined,\n      since: undefined,\n      historyVersion: undefined,\n    })\n  }\n\n  const release = useMemo(() => {\n    return archivedReleases.find(\n      (r) => getReleaseIdFromReleaseDocumentId(r._id) === params?.historyVersion,\n    )\n  }, [archivedReleases, params?.historyVersion])\n\n  const description = useMemo(() => {\n    if (release?.state === 'published') {\n      return 'banners.published-release.description'\n    }\n\n    if (release && isCardinalityOneRelease(release)) {\n      return 'banners.archived-scheduled-draft.description'\n    }\n\n    return 'banners.archived-release.description'\n  }, [release])\n\n  const title = release?.metadata.title || tCore('release.placeholder-untitled-release')\n\n  return (\n    <Banner\n      tone=\"caution\"\n      content={\n        <Text size={1}>\n          <Translate\n            t={t}\n            i18nKey={description}\n            values={{\n              title,\n            }}\n            components={{\n              VersionBadge: getVersionInlineBadge(release),\n            }}\n          />\n        </Text>\n      }\n      action={\n        params?.archivedRelease\n          ? undefined\n          : {\n              text: 'Go back to published version',\n              onClick: handleGoBack,\n            }\n      }\n    />\n  )\n}\n","import {ComposeSparklesIcon, InfoOutlineIcon, LaunchIcon} from '@sanity/icons'\nimport {Box, Card, Container, Flex, Heading, Text, useClickOutsideEvent} from '@sanity/ui'\nimport {useCallback, useMemo, useRef, useState} from 'react'\nimport {\n  getDocumentVariantType,\n  useCanvasCompanionDoc,\n  useNavigateToCanvasDoc,\n  useTranslation,\n} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Popover} from '../../../../../ui-components'\nimport {Button} from '../../../../../ui-components/button/Button'\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {Banner} from './Banner'\n\nconst Image = styled.img`\n  object-fit: cover;\n  width: 100%;\n  height: 100%;\n  height: 180px;\n  display: flex;\n`\nconst CANVAS_IMAGE_URL =\n  'https://cdn.sanity.io/images/pyrmmpch/production/b47224e2f3a7d1747e43b9da1ac31739250e628b-632x376.png'\n\nconst CANVAS_APP_NAME = 'Canvas'\nconst CanvasPopoverContent = ({onClose}: {onClose: () => void}) => {\n  const {t} = useTranslation(structureLocaleNamespace)\n  const ref = useRef<HTMLDivElement | null>(null)\n  useClickOutsideEvent(onClose, () => [ref.current])\n\n  return (\n    <Card radius={3} overflow={'hidden'} width={0} ref={ref}>\n      <Container width={0}>\n        <Image src={CANVAS_IMAGE_URL} alt={'Canvas'} />\n        <Flex paddingX={4} paddingBottom={4} paddingTop={3} direction={'column'}>\n          <Flex paddingY={1} gap={2}>\n            <Text size={1} weight=\"semibold\">\n              {CANVAS_APP_NAME}\n            </Text>\n            <Text size={1} muted>\n              <ComposeSparklesIcon />\n            </Text>\n          </Flex>\n          <Box paddingTop={3}>\n            <Heading size={1}>{t('canvas.banner.popover-heading')}</Heading>\n          </Box>\n          <Box paddingTop={4}>\n            <Text size={1}>{t('canvas.banner.popover-description')}</Text>\n          </Box>\n        </Flex>\n        <Flex width=\"full\" gap={3} justify=\"flex-end\" paddingX={4} paddingBottom={4}>\n          <Button\n            mode=\"bleed\"\n            text={t('canvas.banner.popover-button-text')}\n            autoFocus\n            tone=\"primary\"\n            href=\"https://snty.link/canvas-docs\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            as=\"a\"\n            iconRight={LaunchIcon}\n          />\n        </Flex>\n      </Container>\n    </Card>\n  )\n}\nconst CanvasLinkedBannerContent = ({documentId}: {documentId: string}) => {\n  const {t} = useTranslation(structureLocaleNamespace)\n  const [open, setOpen] = useState(false)\n  const documentVariantType = getDocumentVariantType(documentId)\n  const variantText = useMemo(() => {\n    if (documentVariantType === 'published') return t('canvas.banner.linked-text.published')\n    if (documentVariantType === 'draft') return t('canvas.banner.linked-text.draft')\n    return t('canvas.banner.linked-text.version')\n  }, [documentVariantType, t])\n\n  const togglePopover = useCallback(() => setOpen((prev) => !prev), [])\n  const onClose = useCallback(() => setOpen(false), [])\n  return (\n    <Flex align={'center'} gap={2}>\n      <Text size={1} weight=\"medium\">\n        {variantText}\n      </Text>\n      <Popover\n        open={open}\n        size={0}\n        tone=\"default\"\n        portal\n        placement=\"bottom-start\"\n        content={<CanvasPopoverContent onClose={onClose} />}\n      >\n        <Button\n          tooltipProps={null}\n          mode=\"bleed\"\n          tone=\"default\"\n          icon={InfoOutlineIcon}\n          onClick={togglePopover}\n        />\n      </Popover>\n    </Flex>\n  )\n}\n\nexport function CanvasLinkedBanner() {\n  const {documentId, displayed} = useDocumentPane()\n  const {t} = useTranslation(structureLocaleNamespace)\n  const id = displayed?._id || documentId\n  const {companionDoc} = useCanvasCompanionDoc(id)\n  const navigateToCanvas = useNavigateToCanvasDoc(companionDoc?.canvasDocumentId, 'banner')\n\n  if (!companionDoc) return null\n\n  return (\n    <Banner\n      tone=\"neutral\"\n      data-test-id=\"canvas-linked-banner\"\n      paddingY={0}\n      content={<CanvasLinkedBannerContent documentId={id} />}\n      action={{\n        mode: 'ghost',\n        text: t('canvas.banner.edit-in-canvas-action'),\n        onClick: navigateToCanvas,\n      }}\n    />\n  )\n}\n","import {WarningOutlineIcon} from '@sanity/icons'\nimport {type ObjectSchemaType} from '@sanity/types'\nimport {Flex, Text} from '@sanity/ui'\nimport {type ComponentType, useCallback} from 'react'\nimport {\n  getVersionInlineBadge,\n  isPerspectiveWriteable,\n  isReleaseDocument,\n  type PerspectiveNotWriteableReason,\n  ReleasesNav,\n  type ReleasesNavMenuItemPropsGetter,\n  type TargetPerspective,\n  Translate,\n  useTranslation,\n  useWorkspace,\n} from 'sanity'\n\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {Banner} from './Banner'\n\ninterface Props {\n  schemaType: ObjectSchemaType\n  selectedPerspective: TargetPerspective\n  reason: PerspectiveNotWriteableReason\n}\n\n/**\n * This banner is displayed when a user attempts to create a new document in a perspective that's\n * not writeable. For example:\n *\n * - The published perspective (unless the schema type supports live-editing).\n * - Any release that's locked.\n */\nexport const ChooseNewDocumentDestinationBanner: ComponentType<Props> = ({\n  schemaType,\n  selectedPerspective,\n  reason,\n}) => {\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const {\n    document: {\n      drafts: {enabled: isDraftModelEnabled},\n    },\n  } = useWorkspace()\n\n  const menuItemProps = useCallback<ReleasesNavMenuItemPropsGetter>(\n    ({perspective}) => ({\n      disabled: !isPerspectiveWriteable({\n        selectedPerspective: perspective,\n        isDraftModelEnabled,\n        schemaType,\n      }).result,\n    }),\n    [isDraftModelEnabled, schemaType],\n  )\n\n  return (\n    <Banner\n      tone=\"caution\"\n      icon={WarningOutlineIcon}\n      content={\n        <Flex align=\"center\" gap={2}>\n          <Text size={1}>\n            {reason === 'PUBLISHED_NOT_WRITEABLE' &&\n              t('banners.choose-new-document-destination.cannot-create-published-document')}\n            {reason === 'DRAFTS_NOT_WRITEABLE' &&\n              t('banners.choose-new-document-destination.cannot-create-draft-document')}\n            {reason === 'RELEASE_NOT_ACTIVE' && isReleaseDocument(selectedPerspective) && (\n              <Translate\n                t={t}\n                i18nKey=\"banners.choose-new-document-destination.release-inactive\"\n                values={{\n                  title: selectedPerspective.metadata.title,\n                }}\n                components={{\n                  VersionBadge: getVersionInlineBadge(selectedPerspective),\n                }}\n              />\n            )}\n            <> {t('banners.choose-new-document-destination.choose-destination')}</>\n          </Text>\n          <ReleasesNav menuItemProps={menuItemProps} />\n        </Flex>\n      }\n    />\n  )\n}\n","import {getSanityCreateLinkMetadata, useSanityCreateConfig} from 'sanity'\n\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {Banner} from './Banner'\n\nexport function CreateLinkedBanner() {\n  const {value} = useDocumentPane()\n  const {documentLinkedBannerContent: CreateLinkedBannerContent} =\n    useSanityCreateConfig().components ?? {}\n  const createLinkMetadata = getSanityCreateLinkMetadata(value)\n\n  if (!CreateLinkedBannerContent || !createLinkMetadata) return null\n\n  return (\n    <Banner\n      tone=\"transparent\"\n      data-test-id=\"sanity-create-read-only-banner\"\n      content={<CreateLinkedBannerContent metadata={createLinkMetadata} />}\n    />\n  )\n}\n","import {Text, useToast} from '@sanity/ui'\nimport {useCallback, useEffect, useState} from 'react'\nimport {\n  getReleaseIdFromReleaseDocumentId,\n  getReleaseTone,\n  getVersionInlineBadge,\n  LATEST,\n  type ReleaseDocument,\n  Translate,\n  useConditionalToast,\n  useTranslation,\n  useVersionOperations,\n} from 'sanity'\n\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {Banner} from './Banner'\n\n// How long to wait after user hit the \"Add to release\"-button before displaying the \"waiting…\" toast\nconst TOAST_DELAY = 1000\n\ntype VersionCreateState = {\n  status: 'creating' | 'created'\n  lastUpdate: Date\n}\n\nexport function DocumentNotInReleaseBanner({\n  documentId,\n  currentRelease,\n  isScheduledRelease,\n}: {\n  documentId: string\n  currentRelease: ReleaseDocument\n  isScheduledRelease?: boolean\n}): React.JSX.Element {\n  const tone = getReleaseTone(currentRelease ?? LATEST)\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {t: tCore} = useTranslation()\n\n  const {createVersion} = useVersionOperations()\n\n  const [versionCreateState, setVersionCreateState] = useState<VersionCreateState | undefined>()\n  const toast = useToast()\n  const handleAddToRelease = useCallback(async () => {\n    if (currentRelease._id) {\n      setVersionCreateState({status: 'creating', lastUpdate: new Date()})\n      try {\n        await createVersion(getReleaseIdFromReleaseDocumentId(currentRelease._id), documentId)\n        setVersionCreateState({status: 'created', lastUpdate: new Date()})\n      } catch (err) {\n        toast.push({\n          status: 'error',\n          closable: true,\n          title: t('banners.release.error.title'),\n          description: t('banners.release.error.description', {message: err.message}),\n        })\n        // Note: we only want to reset pending state in case of failure, not unconditionally the request completes (i.e. in a finally clause)\n        // this is because the UI won't reflect that the document was successfully added to the release until we get the result back over the listener\n        // once the listener event that adds the document to the release arrives the UI knows that a version exists,\n        // and this banner will not be rendered anymore\n        setVersionCreateState(undefined)\n      }\n    }\n  }, [createVersion, currentRelease._id, documentId, t, toast])\n\n  const now = useCurrentTime(200)\n\n  useConditionalToast({\n    status: 'info',\n    id: 'add-document-to-release',\n    enabled: Boolean(\n      versionCreateState?.status === 'created' &&\n        now.getTime() - versionCreateState.lastUpdate.getTime() > TOAST_DELAY,\n    ),\n    closable: true,\n    title: t('banners.release.waiting.title'),\n    description: t('banners.release.waiting.description'),\n  })\n\n  return (\n    <Banner\n      tone={tone}\n      content={\n        <Text size={1}>\n          <Translate\n            i18nKey=\"banners.release.not-in-release\"\n            t={t}\n            values={{\n              title:\n                currentRelease?.metadata?.title || tCore('release.placeholder-untitled-release'),\n            }}\n            components={{\n              VersionBadge: getVersionInlineBadge(currentRelease),\n            }}\n          />\n        </Text>\n      }\n      // Adding to a scheduled release is not allowed\n      action={\n        isScheduledRelease\n          ? undefined\n          : {\n              text: t('banners.release.action.add-to-release'),\n              tone: tone,\n              disabled: Boolean(versionCreateState),\n              onClick: handleAddToRelease,\n              mode: 'default',\n            }\n      }\n    />\n  )\n}\n\nfunction useCurrentTime(updateIntervalMs: number): Date {\n  const [currentTime, setCurrentTime] = useState(new Date())\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      setCurrentTime(new Date())\n    }, updateIntervalMs)\n    return () => clearInterval(intervalId)\n  }, [updateIntervalMs])\n  return currentTime\n}\n","import {defineEvent} from '@sanity/telemetry'\n\ninterface TypeInfo {\n  liveEditResolveType: 'publish' | 'discard'\n}\n\n/**\n * When a draft in a live edit document is published\n * @internal\n */\nexport const ResolvedLiveEdit = defineEvent<TypeInfo>({\n  name: 'LiveEdit Draft Resolved',\n  version: 1,\n  description: 'User resolved a draft of a live edit document to continue editing',\n})\n","import {type SanityDocument} from '@sanity/client'\nimport {ErrorOutlineIcon} from '@sanity/icons'\nimport {useTelemetry} from '@sanity/telemetry/react'\nimport {Flex, Text} from '@sanity/ui'\nimport {type ComponentType, useCallback, useEffect, useState} from 'react'\nimport {\n  getDraftId,\n  getPublishedId,\n  type ObjectSchemaType,\n  Translate,\n  useDocumentOperation,\n  useTranslation,\n} from 'sanity'\n\nimport {Button} from '../../../../../ui-components'\nimport {useDiffViewRouter} from '../../../../diffView/hooks/useDiffViewRouter'\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {ResolvedLiveEdit} from './__telemetry__/DraftLiveEditBanner.telemetry'\nimport {Banner} from './Banner'\n\ninterface ObsoleteDraftBannerProps {\n  displayed: Partial<SanityDocument> | null\n  documentId: string\n  schemaType: ObjectSchemaType\n  i18nKey: string\n  /**\n   * Whether the user is blocked from editing the document while an obsolete draft exists.\n   */\n  isEditBlocking?: boolean\n}\n\nexport const ObsoleteDraftBanner: ComponentType<ObsoleteDraftBannerProps> = ({\n  displayed,\n  documentId,\n  schemaType,\n  i18nKey,\n  isEditBlocking,\n}) => {\n  const {t} = useTranslation(structureLocaleNamespace)\n  const [isPublishing, setPublishing] = useState(false)\n  const [isDiscarding, setDiscarding] = useState(false)\n  const telemetry = useTelemetry()\n\n  const {publish, discardChanges} = useDocumentOperation(documentId, displayed?._type || '')\n\n  const handlePublish = useCallback(() => {\n    publish.execute()\n    setPublishing(true)\n    telemetry.log(ResolvedLiveEdit, {liveEditResolveType: 'publish'})\n  }, [publish, telemetry])\n\n  const handleDiscard = useCallback(() => {\n    discardChanges.execute()\n    setDiscarding(true)\n    telemetry.log(ResolvedLiveEdit, {liveEditResolveType: 'discard'})\n  }, [discardChanges, telemetry])\n\n  useEffect(() => {\n    return () => {\n      setPublishing(false)\n      setDiscarding(false)\n    }\n  })\n\n  const diffViewRouter = useDiffViewRouter()\n\n  const compareDraft = useCallback(() => {\n    if (typeof displayed?._id === 'undefined') {\n      return\n    }\n\n    diffViewRouter.navigateDiffView({\n      mode: 'version',\n      previousDocument: {\n        type: schemaType.name,\n        id: getPublishedId(displayed?._id),\n      },\n      nextDocument: {\n        type: schemaType.name,\n        id: getDraftId(displayed?._id),\n      },\n    })\n  }, [diffViewRouter, displayed?._id, schemaType.name])\n\n  return (\n    <Banner\n      content={\n        <Flex align=\"center\" justify=\"space-between\" gap={2}>\n          <Text size={1} weight=\"medium\">\n            <Translate t={t} i18nKey={i18nKey} values={{schemaType: schemaType.title}} />\n          </Text>\n          <Button\n            text={t('banners.obsolete-draft.actions.compare-draft.text')}\n            mode=\"ghost\"\n            onClick={compareDraft}\n          />\n          <Button\n            onClick={handlePublish}\n            text={t('banners.obsolete-draft.actions.publish-draft.text')}\n            tooltipProps={\n              isEditBlocking\n                ? {\n                    content: t('banners.live-edit-draft-banner.publish.tooltip'),\n                  }\n                : {}\n            }\n            loading={isPublishing}\n            tone=\"positive\"\n          />\n          <Button\n            onClick={handleDiscard}\n            text={t('banners.obsolete-draft.actions.discard-draft.text')}\n            tooltipProps={\n              isEditBlocking\n                ? {\n                    content: t('banners.live-edit-draft-banner.discard.tooltip'),\n                  }\n                : {}\n            }\n            loading={isDiscarding}\n            tone=\"caution\"\n          />\n        </Flex>\n      }\n      data-testid=\"live-edit-type-banner\"\n      icon={ErrorOutlineIcon}\n    />\n  )\n}\n","import {Flex, Text} from '@sanity/ui'\nimport {useCallback, useMemo} from 'react'\nimport {\n  getReleaseIdFromReleaseDocumentId,\n  getReleaseTone,\n  getVersionFromId,\n  isVersionId,\n  Translate,\n  useActiveReleases,\n  useDocumentVersions,\n  useOnlyHasVersions,\n  useSetPerspective,\n  useTranslation,\n  VersionInlineBadge,\n} from 'sanity'\n\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {Banner} from './Banner'\n\nexport function OpenReleaseToEditBanner({\n  documentId,\n  isPinnedDraftOrPublished,\n}: {\n  documentId: string\n  isPinnedDraftOrPublished: boolean\n}): React.JSX.Element | null {\n  const onlyHasVersions = useOnlyHasVersions({documentId})\n\n  /** this banner should only be rendered in specific cases\n   * 1. when the document is not a draft or published\n   * 2. when the document only has version or versions\n   * 3. when the global perspective is not set (published or draft)\n   */\n\n  if (!isVersionId(documentId)) {\n    return null\n  }\n\n  if (!onlyHasVersions || !isPinnedDraftOrPublished) {\n    return null\n  }\n\n  return <OpenReleaseToEditBannerInner documentId={documentId} />\n}\n\nexport function OpenReleaseToEditBannerInner({\n  documentId,\n}: {\n  documentId: string\n}): React.JSX.Element {\n  const {data: activeReleases} = useActiveReleases()\n  const setPerspective = useSetPerspective()\n  const releaseId = getVersionFromId(documentId) ?? ''\n  const currentVersion = useMemo(\n    () => activeReleases.find((version) => version._id.includes(releaseId)),\n    [activeReleases, releaseId],\n  )\n  const {t: tCore} = useTranslation()\n\n  const {data: documentVersions} = useDocumentVersions({documentId})\n\n  const documentVersionsTitleList = useMemo(\n    () =>\n      activeReleases\n        .filter((version) => {\n          return documentVersions.find((release) => {\n            const r = getVersionFromId(release) ?? ''\n            return getReleaseIdFromReleaseDocumentId(version._id) === r\n          })\n        })\n        .map((version) => version.metadata.title || tCore('release.placeholder-untitled-release')),\n    [activeReleases, documentVersions, tCore],\n  )\n  const tone = currentVersion && getReleaseTone(currentVersion)\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const handleGoToEdit = useCallback(async () => {\n    setPerspective(releaseId)\n  }, [releaseId, setPerspective])\n\n  return (\n    <Banner\n      tone={tone}\n      data-testid=\"open-release-to-edit-banner\"\n      content={\n        <Text size={1}>\n          <Flex direction={'row'} gap={1} wrap=\"wrap\">\n            {documentVersionsTitleList.length > 1 ? (\n              <Translate\n                t={t}\n                i18nKey=\"banners.release.navigate-to-edit-description-multiple\"\n                components={{\n                  VersionBadge: () => (\n                    <VersionInlineBadge> {documentVersionsTitleList[0]}</VersionInlineBadge>\n                  ),\n                }}\n                values={{count: documentVersionsTitleList.length - 1}}\n              />\n            ) : (\n              <Translate\n                t={t}\n                i18nKey=\"banners.release.navigate-to-edit-description-single\"\n                components={{\n                  VersionBadge: () => (\n                    <VersionInlineBadge> {documentVersionsTitleList[0]}</VersionInlineBadge>\n                  ),\n                }}\n              />\n            )}\n          </Flex>\n        </Text>\n      }\n      action={{\n        text: t('banners.release.action.open-to-edit'),\n        tone: tone,\n        onClick: handleGoToEdit,\n        mode: 'default',\n      }}\n    />\n  )\n}\n","import {WarningOutlineIcon} from '@sanity/icons'\nimport {Text} from '@sanity/ui'\nimport {useTranslation} from 'sanity'\n\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {Banner} from './Banner'\n\nexport function RevisionNotFoundBanner() {\n  const {revisionNotFound} = useDocumentPane()\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  if (!revisionNotFound) return null\n\n  return (\n    <Banner\n      tone=\"caution\"\n      data-test-id=\"revision-not-found-banner\"\n      icon={WarningOutlineIcon}\n      content={<Text size={1}>{t('banners.revision-not-found.description')}</Text>}\n    />\n  )\n}\n","import {LockIcon} from '@sanity/icons'\nimport {Text} from '@sanity/ui'\nimport {\n  formatRelativeLocalePublishDate,\n  getReleaseTone,\n  LATEST,\n  type ReleaseDocument,\n  Translate,\n  useTranslation,\n} from 'sanity'\n\nimport {Banner} from './Banner'\n\nexport function ScheduledReleaseBanner({\n  currentRelease,\n}: {\n  currentRelease: ReleaseDocument\n}): React.JSX.Element {\n  const tone = getReleaseTone(currentRelease ?? LATEST)\n\n  const {t: tCore} = useTranslation()\n\n  return (\n    <Banner\n      tone={tone}\n      icon={LockIcon}\n      content={\n        <Text size={1}>\n          <Translate\n            t={tCore}\n            i18nKey=\"release.banner.scheduled-for-publishing-on\"\n            values={{\n              date: formatRelativeLocalePublishDate(currentRelease),\n            }}\n          />\n        </Text>\n      }\n    />\n  )\n}\n","import {UnpublishIcon} from '@sanity/icons'\nimport {Stack, Text} from '@sanity/ui'\nimport {\n  getVersionInlineBadge,\n  isGoingToUnpublish,\n  isReleaseDocument,\n  Translate,\n  usePerspective,\n  useTranslation,\n} from 'sanity'\n\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {Banner} from './Banner'\n\nexport function UnpublishedDocumentBanner() {\n  const {value, editState} = useDocumentPane()\n  const {selectedPerspective} = usePerspective()\n  const isCurrentVersionGoingToUnpublish =\n    isGoingToUnpublish(value) || (editState?.version && isGoingToUnpublish(editState?.version))\n\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {t: tCore} = useTranslation()\n\n  if (isReleaseDocument(selectedPerspective) && isCurrentVersionGoingToUnpublish) {\n    const title =\n      selectedPerspective.metadata?.title || tCore('release.placeholder-untitled-release')\n\n    return (\n      <Banner\n        tone=\"critical\"\n        content={\n          <Stack space={2}>\n            <Text size={1}>\n              <Translate\n                t={t}\n                i18nKey=\"banners.unpublished-release-banner.text\"\n                values={{\n                  title,\n                }}\n                components={{\n                  VersionBadge: getVersionInlineBadge(selectedPerspective),\n                }}\n              />\n            </Text>\n            <Text size={1}>\n              <Translate t={t} i18nKey=\"banners.unpublished-release-banner.text-with-published\" />\n            </Text>\n          </Stack>\n        }\n        icon={UnpublishIcon}\n      />\n    )\n  }\n  return null\n}\n","import {InfoOutlineIcon} from '@sanity/icons'\nimport {type ObjectSchemaType} from '@sanity/types'\nimport {Heading, Inline, Stack, Text} from '@sanity/ui'\nimport {useTranslation} from 'sanity'\nimport {css, styled} from 'styled-components'\n\nimport {Tooltip} from '../../../../../ui-components'\nimport {structureLocaleNamespace} from '../../../../i18n'\n\ninterface DocumentHeaderProps {\n  documentId: string\n  schemaType: ObjectSchemaType\n  title?: string\n}\n\n/**\n * Use CSS container queries to conditionally render headings at different sizes.\n * We hide this entire container (including the document type) if container queries\n * not supported in the current browser.\n *\n * Note that usage of container queries in `styled-components` is only supported in `6.x`.\n * As such, studios that include `\"styled-components\": \"<6\"` as a dependency will only see\n * the largest heading size here, even if their browser supports it!\n */\n\nexport const TitleContainer = styled(Stack)`\n  ${({theme}) => {\n    return css`\n      @supports not (container-type: inline-size) {\n        display: none !important;\n      }\n\n      container-type: inline-size;\n\n      [data-heading] {\n        font-size: ${theme.sanity.fonts.heading.sizes[4].fontSize}px;\n        line-height: ${theme.sanity.fonts.heading.sizes[4].lineHeight}px;\n        overflow-wrap: break-word;\n        text-wrap: pretty;\n      }\n\n      @container (max-width: 560px) {\n        [data-heading] {\n          font-size: ${theme.sanity.fonts.heading.sizes[3].fontSize}px;\n          line-height: ${theme.sanity.fonts.heading.sizes[3].lineHeight}px;\n        }\n      }\n\n      @container (max-width: 420px) {\n        [data-heading] {\n          font-size: ${theme.sanity.fonts.heading.sizes[2].fontSize}px;\n          line-height: ${theme.sanity.fonts.heading.sizes[2].lineHeight}px;\n        }\n      }\n    `\n  }}\n`\n\n/**\n * Header containing current document title and type.\n * Document type is hidden if the document `_id` matches the current document `_type`.\n * The entire header is hidden if container queries are not supported.\n */\nexport const FormHeader = ({documentId, schemaType, title}: DocumentHeaderProps) => {\n  const isSingleton = documentId === schemaType.name\n  const description = schemaType.description\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  if (schemaType.__experimental_formPreviewTitle === false) {\n    return null\n  }\n  return (\n    <TitleContainer marginBottom={6} space={4}>\n      {!isSingleton && (\n        <Inline space={1}>\n          <Text muted size={1}>\n            {schemaType.title ?? schemaType.name}\n          </Text>\n          {description && (\n            <Tooltip content={description} placement=\"right\">\n              <InfoOutlineIcon data-testid=\"schema-description-icon\" />\n            </Tooltip>\n          )}\n        </Inline>\n      )}\n      <Heading as=\"h2\" data-heading muted={!title} data-testid=\"document-panel-document-title\">\n        {title ?? t('document-view.form-view.form-title-fallback')}\n      </Heading>\n    </TitleContainer>\n  )\n}\n","import {Box, Container, Flex, focusFirstDescendant, Spinner, Text} from '@sanity/ui'\nimport {type FormEvent, forwardRef, useCallback, useEffect, useMemo, useState} from 'react'\nimport {tap} from 'rxjs/operators'\nimport {\n  createPatchChannel,\n  type DocumentMutationEvent,\n  type DocumentRebaseEvent,\n  FormBuilder,\n  type FormDocumentValue,\n  fromMutationPatches,\n  type PatchMsg,\n  PresenceOverlay,\n  useConditionalToast,\n  useDocumentPresence,\n  useDocumentStore,\n  usePerspective,\n  useTranslation,\n} from 'sanity'\nimport {useEffectEvent} from 'use-effect-event'\n\nimport {Delay} from '../../../../components'\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {useDocumentTitle} from '../../useDocumentTitle'\nimport {FormHeader} from './FormHeader'\n\ninterface FormViewProps {\n  hidden: boolean\n  margins: [number, number, number, number]\n}\n\nconst preventDefault = (ev: FormEvent) => ev.preventDefault()\n\nexport const FormView = forwardRef<HTMLDivElement, FormViewProps>(function FormView(props, ref) {\n  const {hidden, margins} = props\n\n  const {\n    collapsedFieldSets,\n    collapsedPaths,\n    displayed: value,\n    editState,\n    documentId,\n    documentType,\n    fieldActions,\n    onChange,\n    validation,\n    ready,\n    formState,\n    onFocus,\n    connectionState,\n    onBlur,\n    onSetCollapsedPath,\n    onPathOpen,\n    onSetCollapsedFieldSet,\n    onSetActiveFieldGroup,\n    openPath,\n    compareValue,\n  } = useDocumentPane()\n  const {selectedReleaseId, selectedPerspective} = usePerspective()\n  const documentStore = useDocumentStore()\n  const presence = useDocumentPresence(documentId)\n  const {title} = useDocumentTitle()\n  // The `patchChannel` is an INTERNAL publish/subscribe channel that we use to notify form-builder\n  // nodes about both remote and local patches.\n  // - Used by the Portable Text input to modify selections.\n  // - Used by `withDocument` to reset value.\n  const [patchChannel] = useState(() => createPatchChannel())\n\n  const isLocked = editState?.transactionSyncLock?.enabled\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const conditionalToastParams = useMemo(\n    () => ({\n      id: `sync-lock`,\n      status: 'warning' as const,\n      enabled: isLocked,\n      title: t('document-view.form-view.sync-lock-toast.title'),\n      description: t('document-view.form-view.sync-lock-toast.description'),\n      closable: true,\n    }),\n    [isLocked, t],\n  )\n\n  useConditionalToast(conditionalToastParams)\n\n  useEffect(() => {\n    const sub = documentStore.pair\n      .documentEvents(documentId, documentType, selectedReleaseId)\n      .pipe(\n        tap((event) => {\n          if (event.type === 'mutation') {\n            patchChannel.publish(prepareMutationEvent(event))\n          }\n\n          if (event.type === 'rebase') {\n            patchChannel.publish(prepareRebaseEvent(event))\n          }\n        }),\n      )\n      .subscribe()\n\n    return () => {\n      sub.unsubscribe()\n    }\n  }, [documentId, documentStore, documentType, patchChannel, selectedReleaseId])\n\n  const hasRev = Boolean(value?._rev)\n  const handleInitialValue = useEffectEvent(() => {\n    // this is a workaround for an issue that caused the document pushed to withDocument to get\n    // stuck at the first initial value.\n    // This effect is triggered only when the document goes from not having a revision, to getting one\n    // so it will kick in as soon as the document is received from the backend\n    patchChannel.publish({\n      type: 'mutation',\n      patches: [],\n      snapshot: value,\n    })\n  })\n  useEffect(() => {\n    if (hasRev) {\n      handleInitialValue()\n    }\n    // React to changes in hasRev only\n  }, [hasRev])\n\n  const [formRef, setFormRef] = useState<null | HTMLDivElement>(null)\n\n  // We only want to run it on first mount\n  const [focusedFirstDescendant, setFocusedFirstDescendant] = useState(false)\n  useEffect(() => {\n    // Only focus on the first descendant if there is not already a focus path\n    // This is to avoid stealing focus from intent links\n    if (!focusedFirstDescendant && ready && !formState?.focusPath.length && formRef) {\n      setFocusedFirstDescendant(true)\n      focusFirstDescendant(formRef)\n    }\n  }, [focusedFirstDescendant, formRef, formState?.focusPath.length, ready])\n\n  const setRef = useCallback(\n    (node: HTMLDivElement | null) => {\n      setFormRef(node)\n      if (typeof ref === 'function') {\n        ref(node)\n      } else if (ref) {\n        ref.current = node\n      }\n    },\n    [ref],\n  )\n\n  const isReadOnly = connectionState === 'reconnecting' || formState?.readOnly || !editState?.ready\n\n  return (\n    <Container\n      hidden={hidden}\n      paddingX={4}\n      paddingTop={5}\n      paddingBottom={9}\n      sizing=\"border\"\n      width={1}\n    >\n      <PresenceOverlay margins={margins}>\n        <Box\n          as=\"form\"\n          onSubmit={preventDefault}\n          ref={setRef}\n          data-testid=\"form-view\"\n          data-read-only={isReadOnly ? 'true' : undefined}\n        >\n          {connectionState === 'connecting' && !editState?.draft && !editState?.published ? (\n            <Delay ms={300}>\n              {/* TODO: replace with loading block */}\n              <Flex align=\"center\" direction=\"column\" height=\"fill\" justify=\"center\">\n                <Spinner muted />\n                <Box marginTop={3}>\n                  <Text align=\"center\" muted size={1}>\n                    {t('document-view.form-view.loading')}\n                  </Text>\n                </Box>\n              </Flex>\n            </Delay>\n          ) : formState === null || hidden ? (\n            <Box padding={2}>\n              <Text>{t('document-view.form-view.form-hidden')}</Text>\n            </Box>\n          ) : (\n            <>\n              <FormHeader documentId={documentId} schemaType={formState.schemaType} title={title} />\n              <FormBuilder\n                __internal_fieldActions={fieldActions}\n                __internal_patchChannel={patchChannel}\n                changed={formState.changed}\n                collapsedFieldSets={collapsedFieldSets}\n                collapsedPaths={collapsedPaths}\n                compareValue={compareValue ?? undefined}\n                focused={formState.focused}\n                focusPath={formState.focusPath}\n                groups={formState.groups}\n                id=\"root\"\n                members={formState.members}\n                onChange={onChange}\n                onFieldGroupSelect={onSetActiveFieldGroup}\n                onPathBlur={onBlur}\n                onPathFocus={onFocus}\n                onPathOpen={onPathOpen}\n                onSetFieldSetCollapsed={onSetCollapsedFieldSet}\n                onSetPathCollapsed={onSetCollapsedPath}\n                openPath={openPath}\n                perspective={selectedPerspective}\n                presence={presence}\n                readOnly={isReadOnly}\n                schemaType={formState.schemaType}\n                validation={validation}\n                value={\n                  // note: the form state doesn't have a typed concept of a \"document\" value\n                  // but these should be compatible\n                  formState.value as FormDocumentValue\n                }\n              />\n            </>\n          )}\n        </Box>\n      </PresenceOverlay>\n    </Container>\n  )\n})\n\nfunction prepareMutationEvent(event: DocumentMutationEvent): PatchMsg {\n  const patches = event.mutations.map((mut) => mut.patch).filter(Boolean)\n\n  return {\n    type: 'mutation',\n    snapshot: event.document,\n    patches: fromMutationPatches(event.origin, patches),\n  }\n}\n\nfunction prepareRebaseEvent(event: DocumentRebaseEvent): PatchMsg {\n  const remotePatches = event.remoteMutations.map((mut) => mut.patch).filter(Boolean)\n  const localPatches = event.localMutations.map((mut) => mut.patch).filter(Boolean)\n\n  return {\n    type: 'rebase',\n    snapshot: event.document,\n    patches: fromMutationPatches('remote', remotePatches).concat(\n      fromMutationPatches('local', localPatches),\n    ),\n  }\n}\n","import {TabList} from '@sanity/ui'\nimport {type ComponentType, type ReactNode, useCallback} from 'react'\n\nimport {Tab} from '../../../../../ui-components'\nimport {usePaneRouter} from '../../../../components'\nimport {useDocumentPane} from '../../useDocumentPane'\n\n/**\n * This component will render the tabs for the document pane, following this rules:\n *  if the view tabs are wider than 200px it collapses to a dropdown\n *  if the header is smaller than 480px it collapses to a dropdown\n * For this we need to first measure the pane header width and then the tabs width.\n *\n * Gotcha, if the tabs are wider han 200px it renders a dropdown and if then the tabs change to be smaller than 200px\n * it will not change back to tabs, this is a limitation of the current implementation but an ok tradeoff to avoid mounting\n * ghost elements just to measure the width.\n */\nexport function DocumentHeaderTabs() {\n  const {activeViewId, paneKey, views} = useDocumentPane()\n\n  const tabPanelId = `${paneKey}tabpanel`\n\n  return (\n    <TabList space={1}>\n      {views.map((view, index) => (\n        <DocumentHeaderTab\n          key={view.id}\n          icon={view.icon}\n          id={`${paneKey}tab-${view.id}`}\n          isActive={activeViewId === view.id}\n          label={view.title}\n          tabPanelId={tabPanelId}\n          viewId={index === 0 ? null : (view.id ?? null)}\n        />\n      ))}\n    </TabList>\n  )\n}\n\nfunction DocumentHeaderTab(props: {\n  icon?: ComponentType | ReactNode\n  id: string\n  isActive: boolean\n  label: string\n  tabPanelId: string\n  viewId: string | null\n}) {\n  const {icon, id, isActive, label, tabPanelId, viewId, ...rest} = props\n  const {ready, editState} = useDocumentPane()\n  const {setView} = usePaneRouter()\n  const handleClick = useCallback(() => setView(viewId), [setView, viewId])\n\n  return (\n    <Tab\n      {...rest} // required to enable <TabList> keyboard navigation\n      aria-controls={tabPanelId}\n      disabled={!ready && !editState?.draft && !editState?.published}\n      icon={icon}\n      id={id}\n      label={label}\n      onClick={handleClick}\n      selected={isActive}\n    />\n  )\n}\n","import {useTranslation} from 'sanity'\n\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {useDocumentTitle} from '../../useDocumentTitle'\n\nexport function DocumentHeaderTitle(): React.JSX.Element {\n  const {connectionState, schemaType, title, value: documentValue} = useDocumentPane()\n  const {title: documentTitle, error} = useDocumentTitle()\n  const subscribed = Boolean(documentValue)\n\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  if (connectionState === 'connecting' && !subscribed) {\n    return <></>\n  }\n\n  if (title) {\n    return <>{title}</>\n  }\n\n  if (!documentValue) {\n    return (\n      <>\n        {t('panes.document-header-title.new.text', {\n          schemaType: schemaType?.title || schemaType?.name,\n        })}\n      </>\n    )\n  }\n\n  if (error) {\n    return <>{t('panes.document-header-title.error.text', {error: error})}</>\n  }\n\n  return (\n    <>\n      {documentTitle || (\n        <span style={{color: 'var(--card-muted-fg-color)'}}>\n          {t('panes.document-header-title.untitled.text')}\n        </span>\n      )}\n    </>\n  )\n}\n","import {StarFilledIcon, StarIcon} from '@sanity/icons'\nimport {Text} from '@sanity/ui'\nimport {type ComponentType} from 'react'\nimport {useManageFavorite, type UseManageFavoriteProps, useTranslation} from 'sanity'\n\nimport {Button} from '../../../../../ui-components/button/Button'\nimport {structureLocaleNamespace} from '../../../../i18n'\n\nexport const FavoriteToggle: ComponentType<UseManageFavoriteProps & {documentExists: boolean}> = ({\n  documentExists,\n  ...props\n}) => {\n  const {isFavorited, isReady, favorite, unfavorite} = useManageFavorite(props)\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const description = t(\n    isFavorited\n      ? 'document.favorites.remove-from-favorites'\n      : 'document.favorites.add-to-favorites',\n  )\n\n  return (\n    <Button\n      mode=\"bleed\"\n      onClick={isFavorited ? unfavorite : favorite}\n      disabled={!isReady || !documentExists}\n      aria-label={description}\n      aria-live=\"assertive\"\n      tooltipProps={{\n        content: <Text size={1}>{description}</Text>,\n        placement: 'right',\n      }}\n    >\n      <Text size={1}>{isFavorited ? <StarFilledIcon /> : <StarIcon />}</Text>\n    </Button>\n  )\n}\n","import {ArrowLeftIcon} from '@sanity/icons'\nimport {memo, useMemo} from 'react'\nimport {CapabilityGate, getPublishedId, useActiveWorkspace, useTranslation} from 'sanity'\n\nimport {Button} from '../../../../../ui-components'\nimport {PaneHeader, usePane, usePaneRouter} from '../../../../components'\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {useStructureTool} from '../../../../useStructureTool'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {DocumentHeaderTabs} from './DocumentHeaderTabs'\nimport {DocumentHeaderTitle} from './DocumentHeaderTitle'\nimport {FavoriteToggle} from './FavoriteToggle'\n\n/**\n * When not collapsed this component will render the title and the tabs.\n * This component will render inside the document panel and not with the DocumentPanelHeader\n */\nexport const DocumentPanelSubHeader = memo(function DocumentPanelHeader() {\n  const {editState, connectionState, views, documentId, displayed} = useDocumentPane()\n  const {features} = useStructureTool()\n  const {index, BackLink} = usePaneRouter()\n  const {activeWorkspace} = useActiveWorkspace()\n  const publishedDocId = getPublishedId(documentId)\n\n  const showTabs = views.length > 1\n\n  const {collapsed, isLast} = usePane()\n  // Prevent focus if this is the last (non-collapsed) pane.\n  const tabIndex = isLast && !collapsed ? -1 : 0\n\n  // show the back button if both the feature is enabled and the current pane\n  // is not the first\n  const showBackButton = features.backButton && index > 0\n\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const title = useMemo(() => <DocumentHeaderTitle />, [])\n  const tabs = useMemo(() => showTabs && <DocumentHeaderTabs />, [showTabs])\n\n  const backButton = useMemo(\n    () =>\n      showBackButton && (\n        <Button\n          as={BackLink}\n          data-as=\"a\"\n          icon={ArrowLeftIcon}\n          mode=\"bleed\"\n          tooltipProps={{content: t('pane-header.back-button.text')}}\n        />\n      ),\n    [BackLink, showBackButton, t],\n  )\n\n  const favoriteToggle = (\n    <CapabilityGate capability=\"comlink\" condition=\"available\">\n      <FavoriteToggle\n        resourceType=\"studio\"\n        documentId={publishedDocId}\n        documentType={displayed?._type ?? ''}\n        resourceId={[activeWorkspace.projectId, activeWorkspace.dataset].join('.')}\n        schemaName={activeWorkspace.name}\n        projectId={activeWorkspace.projectId}\n        dataset={activeWorkspace.dataset}\n        documentExists={\n          (editState?.ready &&\n            (editState.version ?? editState.draft ?? editState.published) !== null) ??\n          false\n        }\n      />\n    </CapabilityGate>\n  )\n\n  return (\n    <PaneHeader\n      loading={connectionState === 'connecting' && !editState?.draft && !editState?.published}\n      title={title}\n      tabs={tabs}\n      tabIndex={tabIndex}\n      backButton={backButton}\n      appendTitle={favoriteToggle}\n    />\n  )\n})\n","import {BoundaryElementProvider, Box, Flex, PortalProvider, usePortal} from '@sanity/ui'\nimport {useEffect, useMemo, useRef, useState} from 'react'\nimport {\n  getSanityCreateLinkMetadata,\n  getVersionFromId,\n  isCardinalityOneRelease,\n  isGoingToUnpublish,\n  isNewDocument,\n  isPerspectiveWriteable,\n  isReleaseDocument,\n  isReleaseScheduledOrScheduling,\n  isSanityCreateLinked,\n  isSystemBundle,\n  LegacyLayerProvider,\n  type ReleaseDocument,\n  ScrollContainer,\n  usePerspective,\n  useWorkspace,\n  VirtualizerScrollInstanceProvider,\n} from 'sanity'\nimport {css, styled} from 'styled-components'\n\nimport {PaneContent, usePane, usePaneLayout, usePaneRouter} from '../../../components'\nimport {hasObsoleteDraft} from '../../../hasObsoleteDraft'\nimport {useFilteredReleases} from '../../../hooks/useFilteredReleases'\nimport {mustChooseNewDocumentDestination} from '../../../mustChooseNewDocumentDestination'\nimport {useStructureTool} from '../../../useStructureTool'\nimport {DocumentInspectorPanel} from '../documentInspector'\nimport {InspectDialog} from '../inspectDialog'\nimport {useDocumentPane} from '../useDocumentPane'\nimport {\n  DeletedDocumentBanners,\n  DeprecatedDocumentTypeBanner,\n  InsufficientPermissionBanner,\n  ReferenceChangedBanner,\n  ScheduledDraftOverrideBanner,\n} from './banners'\nimport {ArchivedReleaseDocumentBanner} from './banners/ArchivedReleaseDocumentBanner'\nimport {CanvasLinkedBanner} from './banners/CanvasLinkedBanner'\nimport {ChooseNewDocumentDestinationBanner} from './banners/ChooseNewDocumentDestinationBanner'\nimport {CreateLinkedBanner} from './banners/CreateLinkedBanner'\nimport {DocumentNotInReleaseBanner} from './banners/DocumentNotInReleaseBanner'\nimport {ObsoleteDraftBanner} from './banners/ObsoleteDraftBanner'\nimport {OpenReleaseToEditBanner} from './banners/OpenReleaseToEditBanner'\nimport {RevisionNotFoundBanner} from './banners/RevisionNotFoundBanner'\nimport {ScheduledReleaseBanner} from './banners/ScheduledReleaseBanner'\nimport {UnpublishedDocumentBanner} from './banners/UnpublishedDocumentBanner'\nimport {FormView} from './documentViews'\nimport {DocumentPanelSubHeader} from './header/DocumentPanelSubHeader'\n\ninterface DocumentPanelProps {\n  footerHeight: number | null\n  headerHeight: number | null\n  isInspectOpen: boolean\n  rootElement: HTMLDivElement | null\n  setDocumentPanelPortalElement: (el: HTMLElement | null) => void\n  footer: React.ReactNode\n}\n\nconst DocumentBox = styled(Box)({\n  position: 'relative',\n})\n\nconst Scroller = styled(ScrollContainer)<{$disabled: boolean}>(({$disabled}) => {\n  if ($disabled) {\n    return {height: '100%'}\n  }\n\n  return css`\n    height: 100%;\n    overflow: auto;\n    position: relative;\n    scroll-behavior: smooth;\n    outline: none;\n  `\n})\n\nexport const DocumentPanel = function DocumentPanel(props: DocumentPanelProps) {\n  const {\n    footerHeight,\n    headerHeight,\n    isInspectOpen,\n    rootElement,\n    setDocumentPanelPortalElement,\n    footer,\n  } = props\n  const {\n    activeViewId,\n    displayed,\n    documentId,\n    editState,\n    inspector,\n    value,\n    views,\n    ready,\n    schemaType,\n    permissions,\n    isPermissionsLoading,\n  } = useDocumentPane()\n  const createLinkMetadata = getSanityCreateLinkMetadata(value)\n  const showCreateBanner = isSanityCreateLinked(createLinkMetadata)\n\n  const {params} = usePaneRouter()\n  const {collapsed: layoutCollapsed} = usePaneLayout()\n  const {collapsed} = usePane()\n  const parentPortal = usePortal()\n  const {features} = useStructureTool()\n  const [_portalElement, setPortalElement] = useState<HTMLDivElement | null>(null)\n  const [documentScrollElement, setDocumentScrollElement] = useState<HTMLDivElement | null>(null)\n  const formContainerElement = useRef<HTMLDivElement | null>(null)\n  const workspace = useWorkspace()\n\n  const requiredPermission = value._createdAt ? 'update' : 'create'\n\n  const activeView = useMemo(\n    () => views.find((view) => view.id === activeViewId) || views[0] || {type: 'form'},\n    [activeViewId, views],\n  )\n\n  // Use a local portal container when split panes is supported\n  const portalElement: HTMLElement | null = features.splitPanes\n    ? _portalElement || parentPortal.element\n    : parentPortal.element\n\n  // Calculate the height of the header\n  const margins: [number, number, number, number] = useMemo(() => {\n    if (layoutCollapsed) {\n      return [headerHeight || 0, 0, footerHeight ? footerHeight + 2 : 2, 0]\n    }\n\n    return [0, 0, 2, 0]\n  }, [layoutCollapsed, footerHeight, headerHeight])\n\n  const formViewHidden = activeView.type !== 'form'\n\n  const activeViewNode = useMemo(() => {\n    if (activeView.type === 'component' && activeView.component) {\n      const ActiveViewComponent = activeView.component\n      return (\n        <ActiveViewComponent\n          document={{\n            draft: editState?.draft || null,\n            displayed: displayed || value,\n            historical: displayed,\n            published: editState?.published || null,\n          }}\n          documentId={documentId}\n          options={activeView.options}\n          schemaType={schemaType}\n        />\n      )\n    }\n    return false\n  }, [activeView, displayed, documentId, editState?.draft, editState?.published, schemaType, value])\n\n  // Scroll to top as `documentId` changes\n  useEffect(() => {\n    if (!documentScrollElement?.scrollTo) return\n    documentScrollElement.scrollTo(0, 0)\n  }, [documentId, documentScrollElement])\n\n  // Pass portal element to `DocumentPane`\n  useEffect(() => {\n    if (portalElement) {\n      setDocumentPanelPortalElement(portalElement)\n    }\n  }, [portalElement, setDocumentPanelPortalElement])\n\n  const inspectDialog = useMemo(() => {\n    return isInspectOpen ? <InspectDialog value={displayed || value} /> : null\n  }, [isInspectOpen, displayed, value])\n\n  const showInspector = Boolean(!collapsed && inspector)\n  const {selectedPerspective, selectedReleaseId} = usePerspective()\n  const filteredReleases = useFilteredReleases({displayed, documentId})\n\n  // eslint-disable-next-line complexity\n  const banners = useMemo(() => {\n    if (params?.historyVersion) {\n      return <ArchivedReleaseDocumentBanner />\n    }\n\n    const isScheduledRelease =\n      isReleaseDocument(selectedPerspective) && isReleaseScheduledOrScheduling(selectedPerspective)\n\n    const documentInScheduledRelease = Boolean(\n      isScheduledRelease &&\n        displayed?._id &&\n        getVersionFromId(displayed?._id) === selectedReleaseId,\n    )\n\n    const isSelectedPerspectiveWriteable = isPerspectiveWriteable({\n      selectedPerspective,\n      isDraftModelEnabled: workspace.document.drafts.enabled,\n      schemaType,\n    })\n\n    if (\n      mustChooseNewDocumentDestination({\n        isSelectedPerspectiveWriteable,\n        editState,\n      })\n    ) {\n      return (\n        !isSelectedPerspectiveWriteable.result && (\n          <ChooseNewDocumentDestinationBanner\n            schemaType={schemaType}\n            selectedPerspective={selectedPerspective}\n            reason={isSelectedPerspectiveWriteable.reason}\n          />\n        )\n      )\n    }\n\n    if (documentInScheduledRelease) {\n      return <ScheduledReleaseBanner currentRelease={selectedPerspective as ReleaseDocument} />\n    }\n\n    const hasCardinalityOneReleases = filteredReleases.currentReleases.some(isCardinalityOneRelease)\n    if (selectedPerspective === 'drafts' && hasCardinalityOneReleases) {\n      return <ScheduledDraftOverrideBanner />\n    }\n\n    const isPinnedDraftOrPublish = isSystemBundle(selectedPerspective)\n    const isCurrentVersionGoingToUnpublish =\n      editState?.version && isGoingToUnpublish(editState?.version)\n\n    if (\n      displayed?._id &&\n      getVersionFromId(displayed._id) !== selectedReleaseId &&\n      ready &&\n      !isPinnedDraftOrPublish &&\n      isNewDocument(editState) === false &&\n      !isCurrentVersionGoingToUnpublish\n    ) {\n      return (\n        <DocumentNotInReleaseBanner\n          documentId={value._id}\n          currentRelease={selectedPerspective as ReleaseDocument}\n          isScheduledRelease={isScheduledRelease}\n        />\n      )\n    }\n\n    const displayedHasObsoleteDraft = hasObsoleteDraft({\n      editState,\n      workspace,\n      schemaType,\n    })\n\n    if (activeView.type === 'form' && !selectedReleaseId && displayedHasObsoleteDraft.result) {\n      if (displayedHasObsoleteDraft.reason === 'DRAFT_MODEL_INACTIVE') {\n        return (\n          <ObsoleteDraftBanner\n            displayed={displayed}\n            documentId={documentId}\n            schemaType={schemaType}\n            i18nKey=\"banners.obsolete-draft.draft-model-inactive.text\"\n          />\n        )\n      }\n\n      if (displayedHasObsoleteDraft.reason === 'LIVE_EDIT_ACTIVE') {\n        return (\n          <ObsoleteDraftBanner\n            displayed={displayed}\n            documentId={documentId}\n            schemaType={schemaType}\n            i18nKey=\"banners.live-edit-draft-banner.text\"\n            isEditBlocking\n          />\n        )\n      }\n    }\n\n    if (activeView.type !== 'form' || isPermissionsLoading) return null\n\n    return (\n      <>\n        {showCreateBanner && <CreateLinkedBanner />}\n        {!permissions?.granted && (\n          <InsufficientPermissionBanner requiredPermission={requiredPermission} />\n        )}\n        <RevisionNotFoundBanner />\n        <ReferenceChangedBanner />\n        <DeprecatedDocumentTypeBanner />\n        <CanvasLinkedBanner />\n        <DeletedDocumentBanners />\n        <UnpublishedDocumentBanner />\n        <OpenReleaseToEditBanner\n          documentId={displayed?._id ?? documentId}\n          isPinnedDraftOrPublished={isPinnedDraftOrPublish}\n        />\n      </>\n    )\n  }, [\n    params?.historyVersion,\n    selectedPerspective,\n    displayed,\n    selectedReleaseId,\n    editState,\n    ready,\n    activeView.type,\n    isPermissionsLoading,\n    showCreateBanner,\n    permissions?.granted,\n    requiredPermission,\n    documentId,\n    value._id,\n    schemaType,\n    filteredReleases,\n    workspace,\n  ])\n  const portalElements = useMemo(\n    () => ({documentScrollElement: documentScrollElement}),\n    [documentScrollElement],\n  )\n  const showFormView = features.resizablePanes || !showInspector\n  return (\n    <PaneContent>\n      <Flex height=\"fill\">\n        {showFormView && (\n          <Flex height=\"fill\" direction=\"column\" width=\"fill\" flex={2}>\n            <LegacyLayerProvider zOffset=\"paneHeader\">\n              {banners}\n              <DocumentPanelSubHeader />\n            </LegacyLayerProvider>\n            <DocumentBox flex={2} overflow=\"hidden\">\n              <PortalProvider element={portalElement} __unstable_elements={portalElements}>\n                <BoundaryElementProvider element={documentScrollElement}>\n                  <VirtualizerScrollInstanceProvider\n                    scrollElement={documentScrollElement}\n                    containerElement={formContainerElement}\n                  >\n                    <Scroller\n                      $disabled={layoutCollapsed || false}\n                      data-testid=\"document-panel-scroller\"\n                      ref={setDocumentScrollElement}\n                    >\n                      <FormView\n                        hidden={formViewHidden}\n                        margins={margins}\n                        ref={formContainerElement}\n                      />\n                      {activeViewNode}\n                    </Scroller>\n\n                    {inspectDialog}\n\n                    <div data-testid=\"document-panel-portal\" ref={setPortalElement} />\n                  </VirtualizerScrollInstanceProvider>\n                </BoundaryElementProvider>\n              </PortalProvider>\n            </DocumentBox>\n\n            {footer}\n          </Flex>\n        )}\n        {showInspector && (\n          <BoundaryElementProvider element={rootElement}>\n            <DocumentInspectorPanel\n              documentId={documentId}\n              documentType={schemaType.name}\n              flex={1}\n            />\n          </BoundaryElementProvider>\n        )}\n      </Flex>\n    </PaneContent>\n  )\n}\nDocumentPanel.displayName = 'DocumentPanel'\n","import {negate} from 'lodash'\n\nimport {type _PaneMenuGroup, type _PaneMenuItem, type _PaneMenuNode} from './components/pane/types'\nimport {type DocumentFieldMenuActionNode, type PaneMenuItem, type PaneMenuItemGroup} from './types'\n\nexport function isMenuNodeButton(node: _PaneMenuNode): node is _PaneMenuItem | _PaneMenuGroup {\n  return (node.type === 'item' || node.type === 'group') && node.renderAsButton\n}\n\nexport const isNotMenuNodeButton = negate(isMenuNodeButton)\n\nexport function resolveMenuNodes(params: {\n  actionHandler: (item: PaneMenuItem) => void\n  fieldActions?: DocumentFieldMenuActionNode[]\n  menuItems: PaneMenuItem[]\n  menuItemGroups: PaneMenuItemGroup[]\n}): _PaneMenuNode[] {\n  const {fieldActions = [], menuItems, menuItemGroups} = params\n\n  const nodes: _PaneMenuNode[] = []\n\n  let keyOffset = 0\n\n  for (let i = 0; i < fieldActions.length; i += 1) {\n    const a = fieldActions[i]\n\n    nodes.push(mapFieldActionToPaneMenuNode(a, `${i}-${a.type}`))\n  }\n\n  keyOffset += nodes.length\n\n  const groups: _PaneMenuGroup[] = []\n\n  for (const itemGroup of menuItemGroups) {\n    const group = groups.find((g) => g.key === itemGroup.id)\n\n    if (!group) {\n      groups.push({\n        type: 'group',\n        key: itemGroup.id,\n\n        children: [],\n        expanded: true,\n        renderAsButton: false,\n        title: itemGroup.title,\n        i18n: itemGroup.i18n,\n      })\n    }\n  }\n\n  const ungroupedItems: _PaneMenuItem[] = []\n\n  for (let i = 0; i < menuItems.length; i += 1) {\n    const item = menuItems[i]\n\n    let group = item.group && groups.find((g) => g.key === item.group)\n    const disabled = typeof item.disabled === 'string' ? {reason: item.disabled} : item.disabled\n\n    if (item.group && !group) {\n      group = {\n        type: 'group',\n        key: item.group,\n        disabled,\n        expanded: true,\n        icon: item.icon,\n        title: item.group,\n        children: [],\n        renderAsButton: false,\n      }\n      groups.push(group)\n    }\n\n    if (group) {\n      group.children.push({\n        type: 'item',\n        key: `${keyOffset + i}-item`,\n\n        hotkey: item.shortcut,\n        icon: item.icon,\n        intent: item.intent,\n        disabled,\n        onAction: () => params.actionHandler(item),\n        renderAsButton: item.showAsAction ?? false,\n        selected: item.selected,\n        title: item.title,\n        i18n: item.i18n,\n        tone: item.tone,\n      })\n    } else {\n      ungroupedItems.push({\n        type: 'item',\n        key: `${keyOffset + i}-item`,\n\n        hotkey: item.shortcut,\n        icon: item.icon,\n        intent: item.intent,\n        disabled,\n        onAction: () => params.actionHandler(item),\n        renderAsButton: item.showAsAction ?? false,\n        selected: item.selected,\n        title: item.title,\n        i18n: item.i18n,\n        tone: item.tone,\n      })\n    }\n  }\n\n  return [...ungroupedItems, ...groups, ...nodes]\n}\n\nfunction mapFieldActionToPaneMenuNode(a: DocumentFieldMenuActionNode, key: string): _PaneMenuNode {\n  if (a.type === 'divider') {\n    return {\n      type: 'divider',\n      key,\n    }\n  }\n\n  if (a.type === 'group') {\n    return {\n      type: 'group',\n      key,\n\n      children: a.children.map((child, childIdx) =>\n        mapFieldActionToPaneMenuNode(child, `${key}-${childIdx}-${child.type}`),\n      ),\n      disabled: a.disabled,\n      expanded: a.expanded ?? true,\n      icon: a.icon,\n      title: a.title,\n      i18n: a.i18n,\n      renderAsButton: a.renderAsButton ?? false,\n    }\n  }\n\n  return {\n    type: 'item',\n    key,\n    intent: a.intent,\n    disabled: a.disabled,\n    icon: a.icon,\n    iconRight: a.iconRight,\n    onAction: a.onAction,\n    renderAsButton: a.renderAsButton ?? false,\n    selected: a.selected,\n    title: a.title,\n    i18n: a.i18n,\n    tone: a.tone,\n  }\n}\n","/**\n * @internal\n */\nexport const _DEBUG = false\n\nexport const EMPTY_PARAMS = Object.freeze({})\nexport const LOADING_PANE = Symbol('LOADING_PANE')\n\nexport const DOCUMENT_PANEL_PORTAL_ELEMENT = 'documentPanelPortalElement'\n","import {type Placement} from '@sanity/ui'\n\nimport {type DialogProps} from '../../../../../ui-components'\n\nexport const POPOVER_FALLBACK_PLACEMENTS: Placement[] = ['left', 'bottom']\n\nexport const DIALOG_WIDTH_TO_UI_WIDTH: {[key: string]: DialogProps['width']} = {\n  small: 0,\n  medium: 1,\n  large: 2,\n  full: 'auto',\n}\n","import {type DocumentActionConfirmDialogProps, useTranslation} from 'sanity'\n\nimport {ConfirmPopover} from '../../../../../ui-components'\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {POPOVER_FALLBACK_PLACEMENTS} from './constants'\n\nexport function ConfirmDialog(props: {\n  dialog: DocumentActionConfirmDialogProps\n  referenceElement: HTMLElement | null\n}) {\n  const {dialog, referenceElement} = props\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const {\n    cancelButtonIcon,\n    cancelButtonText,\n    confirmButtonIcon,\n    confirmButtonText,\n    message,\n    onCancel,\n    onConfirm,\n    tone,\n  } = dialog\n\n  return (\n    <ConfirmPopover\n      cancelButtonIcon={cancelButtonIcon}\n      cancelButtonText={cancelButtonText || t('confirm-dialog.cancel-button.fallback-text')}\n      confirmButtonIcon={confirmButtonIcon}\n      confirmButtonText={confirmButtonText || t('confirm-dialog.confirm-button.fallback-text')}\n      message={message}\n      onCancel={onCancel}\n      onConfirm={onConfirm}\n      open\n      referenceElement={referenceElement}\n      tone={tone}\n      placement=\"top\"\n      fallbackPlacements={POPOVER_FALLBACK_PLACEMENTS}\n    />\n  )\n}\n","import {\n  Box,\n  Dialog, // eslint-disable-line no-restricted-imports\n} from '@sanity/ui'\nimport {useId} from 'react'\nimport {type DocumentActionModalDialogProps, LegacyLayerProvider} from 'sanity'\n\nimport {DIALOG_WIDTH_TO_UI_WIDTH} from './constants'\n\n/**\n * Dialog rendered by custom document actions of dialog type `dialog`.\n * As these are user configurable with public facing APIs, internal studio ui-components are not used.\n */\nexport function ModalDialog(props: {dialog: DocumentActionModalDialogProps}) {\n  const {dialog} = props\n  const dialogId = useId()\n\n  const footer = dialog.footer && (\n    <Box paddingX={4} paddingY={3}>\n      {dialog.footer}\n    </Box>\n  )\n\n  return (\n    <LegacyLayerProvider zOffset=\"fullscreen\">\n      <Dialog\n        animate\n        __unstable_hideCloseButton={dialog.showCloseButton === false}\n        footer={footer}\n        header={dialog.header}\n        id={dialogId}\n        // eslint-disable-next-line react/jsx-handler-names\n        onClose={dialog.onClose}\n        // eslint-disable-next-line react/jsx-handler-names\n        onClickOutside={dialog.onClose}\n        width={dialog.width === undefined ? 1 : DIALOG_WIDTH_TO_UI_WIDTH[dialog.width]}\n      >\n        <Box padding={4}>{dialog.content}</Box>\n      </Dialog>\n    </LegacyLayerProvider>\n  )\n}\n","import {\n  Popover, // eslint-disable-line no-restricted-imports\n  useClickOutsideEvent,\n  useGlobalKeyDown,\n  useLayer,\n} from '@sanity/ui'\nimport {useCallback, useRef} from 'react'\nimport {type DocumentActionPopoverDialogProps} from 'sanity'\n\nimport {POPOVER_FALLBACK_PLACEMENTS} from './constants'\n\nexport function PopoverDialog(props: {\n  dialog: DocumentActionPopoverDialogProps\n  referenceElement: HTMLElement | null\n}) {\n  const {dialog, referenceElement} = props\n\n  return (\n    <Popover\n      content={<PopoverDialogContent dialog={dialog} />}\n      fallbackPlacements={POPOVER_FALLBACK_PLACEMENTS}\n      open\n      placement=\"top\"\n      portal\n      preventOverflow\n      referenceElement={referenceElement}\n    />\n  )\n}\n\n/**\n * Popover rendered by custom document actions of dialog type `popover`.\n * As these are user configurable with public facing APIs, internal studio ui-components are not used.\n */\nfunction PopoverDialogContent(props: {dialog: DocumentActionPopoverDialogProps}) {\n  const {dialog} = props\n  const {content, onClose} = dialog\n  const {isTopLayer} = useLayer()\n  const ref = useRef<HTMLDivElement | null>(null)\n\n  const handleGlobalKeyDown = useCallback(\n    (event: any) => {\n      if (event.key === 'Escape' && isTopLayer) onClose()\n    },\n    [isTopLayer, onClose],\n  )\n\n  useGlobalKeyDown(handleGlobalKeyDown)\n  useClickOutsideEvent(isTopLayer && onClose, () => [ref.current])\n\n  return <div ref={ref}>{content}</div>\n}\n","import {PortalProvider, Text, usePortal} from '@sanity/ui'\nimport {type ReactNode, useId} from 'react'\nimport {type DocumentActionDialogProps} from 'sanity'\n\nimport {Dialog} from '../../../../ui-components'\nimport {DOCUMENT_PANEL_PORTAL_ELEMENT} from '../../../constants'\nimport {ConfirmDialog} from './dialogs/ConfirmDialog'\nimport {ModalDialog} from './dialogs/ModalDialog'\nimport {PopoverDialog} from './dialogs/PopoverDialog'\n\nexport interface ActionStateDialogProps {\n  dialog: DocumentActionDialogProps\n  referenceElement?: HTMLElement | null\n}\n\n// A portal provider that uses the document panel portal element if it exists\n// as the portal element so that dialogs are scoped to the document panel\nfunction DocumentActionPortalProvider(props: {children: ReactNode}) {\n  const {children} = props\n  const {element, elements} = usePortal()\n  const portalElement = elements?.[DOCUMENT_PANEL_PORTAL_ELEMENT] || element\n\n  return <PortalProvider element={portalElement}>{children}</PortalProvider>\n}\n\nexport function ActionStateDialog(props: ActionStateDialogProps) {\n  const {dialog, referenceElement = null} = props\n  const modalId = useId()\n\n  if (dialog.type === 'confirm') {\n    return <ConfirmDialog dialog={dialog} referenceElement={referenceElement} />\n  }\n\n  if (dialog.type === 'popover') {\n    return <PopoverDialog dialog={dialog} referenceElement={referenceElement} />\n  }\n\n  if (dialog.type === 'dialog' || !dialog.type) {\n    return (\n      <DocumentActionPortalProvider>\n        <ModalDialog dialog={dialog} />\n      </DocumentActionPortalProvider>\n    )\n  }\n\n  if (dialog.type === 'custom') {\n    return <DocumentActionPortalProvider>{dialog?.component}</DocumentActionPortalProvider>\n  }\n\n  // @todo: add validation?\n  const unknownModal: any = dialog\n\n  console.warn(`Unsupported modal type ${unknownModal.type}`)\n\n  return (\n    <Dialog\n      id={modalId}\n      // eslint-disable-next-line react/jsx-handler-names\n      onClose={unknownModal.onClose}\n      // eslint-disable-next-line react/jsx-handler-names\n      onClickOutside={unknownModal.onClose}\n      width={1}\n    >\n      {unknownModal.content || (\n        // eslint-disable-next-line i18next/no-literal-string\n        <Text size={1}>\n          Unexpected modal type (<code>{unknownModal.type}</code>)\n        </Text>\n      )}\n    </Dialog>\n  )\n}\n","import {Menu} from '@sanity/ui'\nimport {memo, type ReactNode, useCallback, useId, useMemo, useState} from 'react'\nimport {\n  ContextMenuButton,\n  type DocumentActionDescription,\n  LegacyLayerProvider,\n  useTranslation,\n} from 'sanity'\n\nimport {MenuButton, MenuItem, type PopoverProps} from '../../../../ui-components'\nimport {structureLocaleNamespace} from '../../../i18n'\nimport {ActionStateDialog} from './ActionStateDialog'\n\nexport interface ActionMenuButtonProps {\n  actionStates: DocumentActionDescription[]\n  disabled: boolean\n}\n\n/**\n * @internal\n */\nexport const ActionDialogWrapper = memo(function ActionDialogWrapper({\n  actionStates,\n  children,\n  referenceElement,\n}: {\n  actionStates: DocumentActionDescription[]\n  children: ({handleAction}: {handleAction: (idx: number) => void}) => ReactNode\n  referenceElement?: HTMLElement | null\n}) {\n  const [actionIndex, setActionIndex] = useState(-1)\n  const currentAction = useMemo(() => actionStates[actionIndex], [actionIndex, actionStates])\n\n  const handleAction = useCallback((idx: number) => {\n    setActionIndex(idx)\n  }, [])\n\n  const result = useMemo(() => children({handleAction}), [children, handleAction])\n\n  return (\n    <>\n      {currentAction && currentAction.dialog && (\n        <LegacyLayerProvider zOffset=\"paneFooter\">\n          <ActionStateDialog dialog={currentAction.dialog} referenceElement={referenceElement} />\n        </LegacyLayerProvider>\n      )}\n      {result}\n    </>\n  )\n})\n\n/**\n * @internal\n */\nexport function ActionMenuButton(props: ActionMenuButtonProps) {\n  const {actionStates, disabled} = props\n  const idPrefix = useId()\n\n  const [referenceElement, setReferenceElement] = useState<HTMLButtonElement | null>(null)\n\n  const popoverProps: PopoverProps = useMemo(\n    () => ({\n      placement: 'top-end',\n      portal: true,\n      preventOverflow: true,\n    }),\n    [],\n  )\n\n  const {t} = useTranslation(structureLocaleNamespace)\n  const renderActionDialog = useCallback<\n    ({handleAction}: {handleAction: (idx: number) => void}) => ReactNode\n  >(\n    ({handleAction}) => (\n      <MenuButton\n        id={`${idPrefix}-action-menu`}\n        button={\n          <ContextMenuButton\n            aria-label={t('buttons.action-menu-button.aria-label')}\n            disabled={disabled}\n            data-testid=\"action-menu-button\"\n            tooltipProps={{content: t('buttons.action-menu-button.tooltip')}}\n          />\n        }\n        menu={\n          <Menu padding={1}>\n            {actionStates.map((actionState, idx) => (\n              <ActionMenuListItem\n                // oxlint-disable-next-line no-array-index-key\n                key={idx}\n                actionState={actionState}\n                disabled={disabled}\n                index={idx}\n                onAction={handleAction}\n              />\n            ))}\n          </Menu>\n        }\n        popover={popoverProps}\n        ref={setReferenceElement}\n      />\n    ),\n    [actionStates, disabled, idPrefix, popoverProps, t],\n  )\n\n  return (\n    <ActionDialogWrapper actionStates={actionStates} referenceElement={referenceElement}>\n      {renderActionDialog}\n    </ActionDialogWrapper>\n  )\n}\n\ninterface ActionMenuListItemProps {\n  actionState: DocumentActionDescription\n  disabled: boolean\n  index: number\n  onAction: (idx: number) => void\n}\n\nexport function ActionMenuListItem(props: ActionMenuListItemProps) {\n  const {actionState, disabled, index, onAction} = props\n  const {onHandle} = actionState\n\n  const handleClick = useCallback(() => {\n    onAction(index)\n    if (onHandle) onHandle()\n  }, [index, onAction, onHandle])\n\n  const hotkeys = useMemo(() => {\n    return actionState.shortcut\n      ? String(actionState.shortcut)\n          .split('+')\n          .map((s) => s.slice(0, 1).toUpperCase() + s.slice(1))\n      : undefined\n  }, [actionState.shortcut])\n\n  return (\n    <MenuItem\n      data-testid={`action-${actionState.label.replace(' ', '')}`}\n      disabled={disabled || Boolean(actionState.disabled)}\n      hotkeys={hotkeys}\n      icon={actionState.icon}\n      onClick={handleClick}\n      text={actionState.label}\n      tone={actionState.tone}\n      {...(actionState.disabled && {tooltipProps: {content: actionState.title}})}\n    />\n  )\n}\n","import {TrashIcon} from '@sanity/icons'\nimport {useCallback, useMemo, useState} from 'react'\nimport {\n  type DocumentActionComponent,\n  InsufficientPermissionsMessage,\n  useCurrentUser,\n  useDocumentOperation,\n  useDocumentPairPermissions,\n  useTranslation,\n} from 'sanity'\n\nimport {ConfirmDeleteDialog} from '../components'\nimport {structureLocaleNamespace} from '../i18n'\nimport {useDocumentPane} from '../panes/document/useDocumentPane'\n\nconst DISABLED_REASON_TITLE_KEY = {\n  NOTHING_TO_DELETE: 'action.delete.disabled.nothing-to-delete',\n  NOT_READY: 'action.delete.disabled.not-ready',\n}\n\n/** @internal */\nexport const DeleteAction: DocumentActionComponent = ({id, type, draft, onComplete, release}) => {\n  const {setIsDeleting: paneSetIsDeleting} = useDocumentPane()\n  const {delete: deleteOp} = useDocumentOperation(id, type, release)\n  const [isDeleting, setIsDeleting] = useState(false)\n  const [isConfirmDialogOpen, setConfirmDialogOpen] = useState(false)\n\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const handleCancel = useCallback(() => {\n    setConfirmDialogOpen(false)\n    onComplete()\n  }, [onComplete])\n\n  const handleConfirm = useCallback(() => {\n    setIsDeleting(true)\n    setConfirmDialogOpen(false)\n    paneSetIsDeleting(true)\n    deleteOp.execute()\n    onComplete()\n  }, [deleteOp, onComplete, paneSetIsDeleting])\n\n  const handle = useCallback(() => {\n    setConfirmDialogOpen(true)\n  }, [])\n\n  const [permissions, isPermissionsLoading] = useDocumentPairPermissions({\n    id,\n    type,\n    version: release,\n    permission: 'delete',\n  })\n\n  const currentUser = useCurrentUser()\n\n  return useMemo(() => {\n    if (!isPermissionsLoading && !permissions?.granted) {\n      return {\n        tone: 'critical',\n        icon: TrashIcon,\n        disabled: true,\n        label: t('action.delete.label'),\n        title: (\n          <InsufficientPermissionsMessage context=\"delete-document\" currentUser={currentUser} />\n        ),\n      }\n    }\n\n    return {\n      tone: 'critical',\n      icon: TrashIcon,\n      disabled: isDeleting || Boolean(deleteOp.disabled) || isPermissionsLoading,\n      title: (deleteOp.disabled && t(DISABLED_REASON_TITLE_KEY[deleteOp.disabled])) || '',\n      label: isDeleting ? t('action.delete.running.label') : t('action.delete.label'),\n      shortcut: 'Ctrl+Alt+D',\n      onHandle: handle,\n      dialog: isConfirmDialogOpen && {\n        type: 'custom',\n        component: (\n          <ConfirmDeleteDialog\n            action=\"delete\"\n            id={draft?._id || id}\n            type={type}\n            onCancel={handleCancel}\n            onConfirm={handleConfirm}\n          />\n        ),\n      },\n    }\n  }, [\n    currentUser,\n    deleteOp.disabled,\n    draft?._id,\n    handle,\n    handleCancel,\n    handleConfirm,\n    id,\n    isConfirmDialogOpen,\n    isDeleting,\n    isPermissionsLoading,\n    permissions?.granted,\n    t,\n    type,\n  ])\n}\n\nDeleteAction.action = 'delete'\nDeleteAction.displayName = 'DeleteAction'\n","import {ResetIcon} from '@sanity/icons'\nimport {useCallback, useMemo, useState} from 'react'\nimport {\n  type DocumentActionComponent,\n  type DocumentActionDialogProps,\n  InsufficientPermissionsMessage,\n  isPublishedId,\n  useCurrentUser,\n  useDocumentOperation,\n  useDocumentPairPermissions,\n  useTranslation,\n} from 'sanity'\n\nimport {structureLocaleNamespace} from '../i18n'\nimport {useDocumentPane} from '../panes/document/useDocumentPane'\n\nconst DISABLED_REASON_KEY = {\n  NO_CHANGES: 'action.discard-changes.disabled.no-change',\n  NOT_PUBLISHED: 'action.discard-changes.disabled.not-published',\n  NOT_READY: 'action.discard-changes.disabled.not-ready',\n} as const\n\n/** @internal */\nexport const DiscardChangesAction: DocumentActionComponent = ({\n  id,\n  type,\n  published,\n  liveEdit,\n  onComplete,\n  release,\n}) => {\n  const {discardChanges} = useDocumentOperation(id, type, release)\n  const [isConfirmDialogOpen, setConfirmDialogOpen] = useState(false)\n  const [permissions, isPermissionsLoading] = useDocumentPairPermissions({\n    id,\n    type,\n    version: release,\n    permission: 'discardDraft',\n  })\n  const currentUser = useCurrentUser()\n  const {displayed} = useDocumentPane()\n\n  const {t} = useTranslation(structureLocaleNamespace)\n  const isPublished = displayed?._id && isPublishedId(displayed?._id)\n\n  const handleConfirm = useCallback(() => {\n    discardChanges.execute()\n    onComplete()\n  }, [discardChanges, onComplete])\n\n  const handle = useCallback(() => {\n    setConfirmDialogOpen(true)\n  }, [])\n\n  const dialog: DocumentActionDialogProps | false = useMemo(\n    () =>\n      isConfirmDialogOpen && {\n        type: 'confirm',\n        tone: 'critical',\n        onCancel: onComplete,\n        onConfirm: handleConfirm,\n        message: t('action.discard-changes.confirm-dialog.confirm-discard-changes'),\n      },\n    [handleConfirm, isConfirmDialogOpen, onComplete, t],\n  )\n\n  return useMemo(() => {\n    if (!published || liveEdit || isPublished) {\n      return null\n    }\n\n    if (!isPermissionsLoading && !permissions?.granted) {\n      return {\n        tone: 'critical',\n        icon: ResetIcon,\n        disabled: true,\n        label: t('action.discard-changes.label'),\n        title: (\n          <InsufficientPermissionsMessage context=\"discard-changes\" currentUser={currentUser} />\n        ),\n      }\n    }\n\n    return {\n      tone: 'critical',\n      icon: ResetIcon,\n      disabled: Boolean(discardChanges.disabled) || isPermissionsLoading,\n      title: t((discardChanges.disabled && DISABLED_REASON_KEY[discardChanges.disabled]) || ''),\n      label: t('action.discard-changes.label'),\n      onHandle: handle,\n      dialog,\n    }\n  }, [\n    currentUser,\n    dialog,\n    discardChanges.disabled,\n    handle,\n    isPermissionsLoading,\n    isPublished,\n    liveEdit,\n    permissions?.granted,\n    published,\n    t,\n  ])\n}\n\nDiscardChangesAction.action = 'discardChanges'\nDiscardChangesAction.displayName = 'DiscardChangesAction'\n","import {CopyIcon} from '@sanity/icons'\nimport {uuid} from '@sanity/uuid'\nimport {useCallback, useMemo, useState} from 'react'\nimport {filter, firstValueFrom} from 'rxjs'\nimport {\n  type DuplicateDocumentActionComponent,\n  InsufficientPermissionsMessage,\n  useCurrentUser,\n  useDocumentOperation,\n  useDocumentPairPermissions,\n  useDocumentStore,\n  useTranslation,\n} from 'sanity'\nimport {useRouter} from 'sanity/router'\n\nimport {structureLocaleNamespace} from '../i18n'\n\nconst DISABLED_REASON_KEY = {\n  NOTHING_TO_DUPLICATE: 'action.duplicate.disabled.nothing-to-duplicate',\n  NOT_READY: 'action.duplicate.disabled.not-ready',\n}\n\n/** @internal */\nexport const DuplicateAction: DuplicateDocumentActionComponent = ({\n  id,\n  type,\n  onComplete,\n  release,\n  mapDocument,\n}) => {\n  const documentStore = useDocumentStore()\n  const {duplicate} = useDocumentOperation(id, type, release)\n  const {navigateIntent} = useRouter()\n  const [isDuplicating, setDuplicating] = useState(false)\n\n  const [permissions, isPermissionsLoading] = useDocumentPairPermissions({\n    id,\n    type,\n    version: release,\n    permission: 'duplicate',\n  })\n\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const currentUser = useCurrentUser()\n\n  const handle = useCallback(async () => {\n    const dupeId = uuid()\n\n    setDuplicating(true)\n\n    // set up the listener before executing\n    const duplicateSuccess = firstValueFrom(\n      documentStore.pair\n        .operationEvents(id, type)\n        .pipe(filter((e) => e.op === 'duplicate' && e.type === 'success')),\n    )\n    duplicate.execute(dupeId, {mapDocument})\n\n    // only navigate to the duplicated document when the operation is successful\n    await duplicateSuccess\n    navigateIntent('edit', {id: dupeId, type})\n\n    onComplete()\n  }, [documentStore.pair, duplicate, id, mapDocument, navigateIntent, onComplete, type])\n\n  return useMemo(() => {\n    if (!isPermissionsLoading && !permissions?.granted) {\n      return {\n        icon: CopyIcon,\n        disabled: true,\n        label: t('action.duplicate.label'),\n        title: (\n          <InsufficientPermissionsMessage context=\"duplicate-document\" currentUser={currentUser} />\n        ),\n      }\n    }\n\n    return {\n      icon: CopyIcon,\n      disabled: isDuplicating || Boolean(duplicate.disabled) || isPermissionsLoading,\n      label: isDuplicating ? t('action.duplicate.running.label') : t('action.duplicate.label'),\n      title: duplicate.disabled ? t(DISABLED_REASON_KEY[duplicate.disabled]) : '',\n      onHandle: handle,\n    }\n  }, [\n    currentUser,\n    duplicate.disabled,\n    handle,\n    isDuplicating,\n    isPermissionsLoading,\n    permissions?.granted,\n    t,\n  ])\n}\n\nDuplicateAction.action = 'duplicate'\nDuplicateAction.displayName = 'DuplicateAction'\n","import {RevertIcon} from '@sanity/icons'\nimport {useCallback, useEffect, useMemo, useRef, useState} from 'react'\nimport {\n  type DocumentActionComponent,\n  type DocumentActionDialogProps,\n  useDocumentOperation,\n  useDocumentOperationEvent,\n  useTranslation,\n} from 'sanity'\nimport {useRouter} from 'sanity/router'\n\nimport {structureLocaleNamespace} from '../i18n'\nimport {useDocumentPane} from '../panes/document/useDocumentPane'\n\n/** @internal */\nexport const HistoryRestoreAction: DocumentActionComponent = ({\n  id,\n  type,\n  revision,\n  onComplete,\n  release,\n}) => {\n  const {restore} = useDocumentOperation(id, type, release)\n  const {revisionNotFound} = useDocumentPane()\n  const event = useDocumentOperationEvent(id, type)\n  const {navigateIntent} = useRouter()\n  const prevEvent = useRef(event)\n  const [isConfirmDialogOpen, setConfirmDialogOpen] = useState(false)\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const handleConfirm = useCallback(() => {\n    restore.execute(revision!)\n    onComplete()\n  }, [restore, revision, onComplete])\n\n  /**\n   * If the restore operation is successful, navigate to the document edit view\n   */\n  useEffect(() => {\n    if (!event || event === prevEvent.current) return\n\n    if (event.type === 'success' && event.op === 'restore') {\n      navigateIntent('edit', {id, type})\n    }\n\n    prevEvent.current = event\n  }, [event, id, navigateIntent, type])\n\n  const handle = useCallback(() => {\n    setConfirmDialogOpen(true)\n  }, [])\n\n  const dialog: DocumentActionDialogProps | null = useMemo(() => {\n    if (isConfirmDialogOpen) {\n      return {\n        type: 'confirm',\n        tone: 'critical',\n        onCancel: onComplete,\n        onConfirm: handleConfirm,\n        message: t('action.restore.confirm.message'),\n      }\n    }\n\n    return null\n  }, [handleConfirm, isConfirmDialogOpen, onComplete, t])\n\n  const isRevisionInitial = revision === '@initial'\n  const isRevisionLatest = revision === undefined // undefined means latest revision\n\n  return useMemo(() => {\n    if (isRevisionLatest || revisionNotFound) {\n      return null\n    }\n\n    return {\n      label: t('action.restore.label'),\n      tone: 'caution',\n      onHandle: handle,\n      title: t(\n        isRevisionInitial\n          ? 'action.restore.disabled.cannot-restore-initial'\n          : 'action.restore.tooltip',\n      ),\n      icon: RevertIcon,\n      dialog,\n      disabled: isRevisionInitial,\n    }\n  }, [dialog, handle, isRevisionInitial, isRevisionLatest, revisionNotFound, t])\n}\n\nHistoryRestoreAction.action = 'restore'\nHistoryRestoreAction.displayName = 'HistoryRestoreAction'\n","import {defineEvent} from '@sanity/telemetry'\n\ninterface DocumentPublishedInfo {\n  /**\n   * The document was created and published straight away\n   */\n  publishedImmediately: boolean\n\n  /**\n   * The document had a previously published version when it was published\n   */\n  previouslyPublished: boolean\n}\nexport const DocumentPublished = defineEvent<DocumentPublishedInfo>({\n  name: 'Document Published',\n  version: 1,\n  description: 'User clicked the \"Publish\" button in the document pane',\n})\n","import {PublishIcon} from '@sanity/icons'\nimport {useTelemetry} from '@sanity/telemetry/react'\nimport {isValidationErrorMarker} from '@sanity/types'\nimport {useCallback, useEffect, useMemo, useState} from 'react'\nimport {\n  type DocumentActionComponent,\n  InsufficientPermissionsMessage,\n  isPublishedId,\n  type TFunction,\n  useCurrentUser,\n  useDocumentOperation,\n  useDocumentPairPermissions,\n  useEditState,\n  useRelativeTime,\n  useSyncState,\n  useTranslation,\n  useValidationStatus,\n} from 'sanity'\n\nimport {structureLocaleNamespace, type StructureLocaleResourceKeys} from '../i18n'\nimport {useDocumentPane} from '../panes/document/useDocumentPane'\nimport {DocumentPublished} from './__telemetry__/documentActions.telemetry'\n\nconst DISABLED_REASON_TITLE_KEY: Record<string, StructureLocaleResourceKeys> = {\n  LIVE_EDIT_ENABLED: 'action.publish.live-edit.publish-disabled',\n  ALREADY_PUBLISHED: 'action.publish.already-published.no-time-ago.tooltip',\n  NO_CHANGES: 'action.publish.no-changes.tooltip',\n  NOT_READY: 'action.publish.disabled.not-ready',\n} as const\n\nconst PUBLISHED_STATE = {status: 'published'} as const\n\nfunction getDisabledReason(\n  reason: keyof typeof DISABLED_REASON_TITLE_KEY,\n  publishedAt: string | undefined,\n  t: TFunction,\n) {\n  if (reason === 'ALREADY_PUBLISHED' && publishedAt) {\n    return <AlreadyPublished publishedAt={publishedAt} />\n  }\n  return t(DISABLED_REASON_TITLE_KEY[reason])\n}\n\nfunction AlreadyPublished({publishedAt}: {publishedAt: string}) {\n  const {t} = useTranslation(structureLocaleNamespace)\n  const timeSincePublished = useRelativeTime(publishedAt, {useTemporalPhrase: true})\n  return <span>{t('action.publish.already-published.tooltip', {timeSincePublished})}</span>\n}\n\n/** @internal */\nexport const PublishAction: DocumentActionComponent = (props) => {\n  const {id, type, liveEdit, draft, published, release} = props\n  const [publishState, setPublishState] = useState<\n    {status: 'publishing'; publishRevision: string | undefined} | {status: 'published'} | null\n  >(null)\n  const {publish} = useDocumentOperation(id, type)\n  const validationStatus = useValidationStatus(id, type)\n  const syncState = useSyncState(id, type)\n  const {changesOpen, documentId, documentType, value} = useDocumentPane()\n  const editState = useEditState(documentId, documentType)\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const revision = (editState?.draft || editState?.published || {})._rev\n\n  const hasValidationErrors = validationStatus.validation.some(isValidationErrorMarker)\n  // we use this to \"schedule\" publish after pending tasks (e.g. validation and sync) has completed\n  const [publishScheduled, setPublishScheduled] = useState<boolean>(false)\n  const isSyncing = syncState.isSyncing\n  const isValidating = validationStatus.isValidating\n  const [permissions, isPermissionsLoading] = useDocumentPairPermissions({\n    id,\n    type,\n    permission: 'publish',\n  })\n\n  const currentUser = useCurrentUser()\n\n  const title = publish.disabled\n    ? getDisabledReason(publish.disabled, (published || {})._updatedAt, t) || ''\n    : hasValidationErrors\n      ? t('action.publish.validation-issues.tooltip')\n      : ''\n\n  const currentPublishRevision = published?._rev\n\n  const doPublish = useCallback(() => {\n    publish.execute()\n    setPublishState({status: 'publishing', publishRevision: currentPublishRevision})\n  }, [publish, currentPublishRevision])\n\n  useEffect(() => {\n    // make sure the validation status is about the current revision and not an earlier one\n    const validationComplete =\n      validationStatus.isValidating === false && validationStatus.revision !== revision\n\n    if (!publishScheduled || isSyncing || !validationComplete) {\n      return\n    }\n\n    if (!hasValidationErrors) {\n      doPublish()\n    }\n    setPublishScheduled(false)\n  }, [\n    isSyncing,\n    doPublish,\n    hasValidationErrors,\n    publishScheduled,\n    validationStatus.revision,\n    revision,\n    isValidating,\n    validationStatus.isValidating,\n  ])\n\n  useEffect(() => {\n    const didPublish =\n      // All we need to check here is for the revision of the current published document\n      // to be different from what it was at the time of publish\n      // a successful publish will always lead to a new published revision\n      publishState?.status === 'publishing' &&\n      currentPublishRevision !== publishState.publishRevision\n\n    const nextState = didPublish ? PUBLISHED_STATE : null\n    const delay = didPublish ? 200 : 4000\n    const timer = setTimeout(() => {\n      setPublishState(nextState)\n    }, delay)\n    return () => clearTimeout(timer)\n  }, [changesOpen, publishState, currentPublishRevision])\n\n  const telemetry = useTelemetry()\n\n  const handle = useCallback(() => {\n    telemetry.log(DocumentPublished, {\n      publishedImmediately: !draft?._createdAt,\n      previouslyPublished: Boolean(published),\n    })\n    if (\n      syncState.isSyncing ||\n      validationStatus.isValidating ||\n      validationStatus.revision !== revision\n    ) {\n      setPublishScheduled(true)\n    } else {\n      doPublish()\n    }\n  }, [\n    telemetry,\n    draft?._createdAt,\n    published,\n    syncState.isSyncing,\n    validationStatus.isValidating,\n    validationStatus.revision,\n    revision,\n    doPublish,\n  ])\n\n  return useMemo(() => {\n    if (release) {\n      // Version documents are not publishable by this action, they should be published as part of a release\n      return null\n    }\n    if (liveEdit) {\n      // Live edit documents are not publishable by this action, they are published automatically\n      return null\n    }\n\n    /**\n     * When draft is null, if not a published or version document\n     * then it means the draft is yet to be saved - in this case don't disabled\n     * the publish button due to ALREADY_PUBLISHED reason\n     */\n    if (isPublishedId(value._id) && draft !== null) {\n      return {\n        tone: 'default',\n        icon: PublishIcon,\n        label: t('action.publish.label'),\n        title: getDisabledReason('ALREADY_PUBLISHED', published?._updatedAt, t),\n        disabled: true,\n      }\n    }\n\n    if (!isPermissionsLoading && !permissions?.granted) {\n      return {\n        tone: 'default',\n        icon: PublishIcon,\n        label: t('action.publish.label'),\n        title: (\n          <InsufficientPermissionsMessage context=\"publish-document\" currentUser={currentUser} />\n        ),\n        disabled: true,\n      }\n    }\n\n    const disabled = Boolean(\n      publishScheduled ||\n        editState?.transactionSyncLock?.enabled ||\n        publishState?.status === 'publishing' ||\n        publishState?.status === 'published' ||\n        hasValidationErrors ||\n        publish.disabled,\n    )\n\n    return {\n      disabled: disabled || isPermissionsLoading,\n      tone: 'default',\n      label:\n        publishState?.status === 'published'\n          ? t('action.publish.published.label')\n          : publishScheduled || publishState?.status === 'publishing'\n            ? t('action.publish.running.label')\n            : t('action.publish.draft.label'),\n      // @todo: Implement loading state, to show a `<Button loading />` state\n      // loading: publishScheduled || publishState === 'publishing',\n      icon: PublishIcon,\n      title: publishScheduled\n        ? t('action.publish.waiting')\n        : publishState?.status === 'published' || publishState?.status === 'publishing'\n          ? null\n          : title,\n      shortcut: disabled || publishScheduled ? null : 'Ctrl+Alt+P',\n      onHandle: handle,\n    }\n  }, [\n    release,\n    liveEdit,\n    value._id,\n    draft,\n    isPermissionsLoading,\n    permissions?.granted,\n    publishScheduled,\n    editState?.transactionSyncLock?.enabled,\n    publishState,\n    hasValidationErrors,\n    publish.disabled,\n    t,\n    title,\n    handle,\n    published?._updatedAt,\n    currentUser,\n  ])\n}\n\nPublishAction.action = 'publish'\nPublishAction.displayName = 'PublishAction'\n","import {UnpublishIcon} from '@sanity/icons'\nimport {useCallback, useMemo, useState} from 'react'\nimport {\n  type DocumentActionComponent,\n  type DocumentActionModalDialogProps,\n  InsufficientPermissionsMessage,\n  useCurrentUser,\n  useDocumentOperation,\n  useDocumentPairPermissions,\n  usePerspective,\n  useTranslation,\n} from 'sanity'\n\nimport {ConfirmDeleteDialog} from '../components'\nimport {structureLocaleNamespace} from '../i18n'\n\nconst DISABLED_REASON_KEY = {\n  NOT_PUBLISHED: 'action.unpublish.disabled.not-published',\n  NOT_READY: 'action.unpublish.disabled.not-ready',\n  LIVE_EDIT_ENABLED: 'action.unpublish.disabled.live-edit-enabled',\n}\n\n/** @internal */\nexport const UnpublishAction: DocumentActionComponent = ({\n  id,\n  type,\n  draft,\n  onComplete,\n  liveEdit,\n  release,\n}) => {\n  const {unpublish} = useDocumentOperation(id, type)\n  const [isConfirmDialogOpen, setConfirmDialogOpen] = useState(false)\n  const [permissions, isPermissionsLoading] = useDocumentPairPermissions({\n    id,\n    type,\n    permission: 'unpublish',\n  })\n  const currentUser = useCurrentUser()\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {selectedPerspective} = usePerspective()\n\n  const isDraft = selectedPerspective === 'drafts'\n\n  const handleCancel = useCallback(() => {\n    setConfirmDialogOpen(false)\n    onComplete()\n  }, [onComplete])\n\n  const handleConfirm = useCallback(() => {\n    setConfirmDialogOpen(false)\n    unpublish.execute()\n    onComplete()\n  }, [onComplete, unpublish])\n\n  const dialog: DocumentActionModalDialogProps | null = useMemo(() => {\n    if (isConfirmDialogOpen) {\n      return {\n        type: 'dialog',\n        onClose: onComplete,\n        content: (\n          <ConfirmDeleteDialog\n            id={draft?._id || id}\n            type={type}\n            action=\"unpublish\"\n            onCancel={handleCancel}\n            onConfirm={handleConfirm}\n          />\n        ),\n      }\n    }\n\n    return null\n  }, [draft, id, handleCancel, handleConfirm, isConfirmDialogOpen, onComplete, type])\n\n  return useMemo(() => {\n    if (release || isDraft) {\n      // Version documents cannot be unpublished by this action, they should be unpublished as part of a release\n      // Draft documents can't either\n      return null\n    }\n    if (liveEdit) {\n      return null\n    }\n\n    if (!isPermissionsLoading && !permissions?.granted) {\n      return {\n        tone: 'critical',\n        icon: UnpublishIcon,\n        label: 'Unpublish',\n        title: (\n          <InsufficientPermissionsMessage context=\"unpublish-document\" currentUser={currentUser} />\n        ),\n        disabled: true,\n      }\n    }\n\n    return {\n      tone: 'critical',\n      icon: UnpublishIcon,\n      disabled: Boolean(unpublish.disabled) || isPermissionsLoading,\n      label: t('action.unpublish.label'),\n      title: unpublish.disabled ? t(DISABLED_REASON_KEY[unpublish.disabled]) : '',\n      onHandle: () => setConfirmDialogOpen(true),\n      dialog,\n    }\n  }, [\n    release,\n    isDraft,\n    liveEdit,\n    isPermissionsLoading,\n    permissions?.granted,\n    unpublish.disabled,\n    t,\n    dialog,\n    currentUser,\n  ])\n}\n\nUnpublishAction.action = 'unpublish'\nUnpublishAction.displayName = 'UnpublishAction'\n","/* eslint-disable camelcase */\nimport {Flex, LayerProvider, Stack, Text} from '@sanity/ui'\nimport {memo, useCallback, useMemo, useState} from 'react'\nimport {\n  type DocumentActionComponent,\n  type DocumentActionDescription,\n  type DocumentActionProps,\n  Hotkeys,\n  isSanityDefinedAction,\n  usePerspective,\n  useSource,\n} from 'sanity'\n\nimport {Button, Tooltip} from '../../../../ui-components'\nimport {RenderActionCollectionState, type ResolvedAction, usePaneRouter} from '../../../components'\nimport {HistoryRestoreAction} from '../../../documentActions'\nimport {toLowerCaseNoSpaces} from '../../../util/toLowerCaseNoSpaces'\nimport {useDocumentPane} from '../useDocumentPane'\nimport {ActionMenuButton} from './ActionMenuButton'\nimport {ActionStateDialog} from './ActionStateDialog'\n\ninterface DocumentStatusBarActionsInnerProps {\n  disabled: boolean\n  states: ResolvedAction[]\n}\n\nconst DocumentStatusBarActionsInner = memo(function DocumentStatusBarActionsInner(\n  props: DocumentStatusBarActionsInnerProps,\n) {\n  const {disabled, states} = props\n  const {__internal_tasks} = useSource()\n  const {editState} = useDocumentPane()\n  const {params} = usePaneRouter()\n  const showingRevision = Boolean(params?.rev)\n\n  const {selectedReleaseId} = usePerspective()\n  const [firstActionState, ...menuActionStates] = states\n  const [buttonElement, setButtonElement] = useState<HTMLButtonElement | null>(null)\n\n  // TODO: This could be refactored to use the tooltip from the button if the firstAction.title was updated to a string.\n  const tooltipContent = useMemo(() => {\n    if (!firstActionState || (!firstActionState.title && !firstActionState.shortcut)) return null\n\n    return (\n      <Flex style={{maxWidth: 300}} align=\"center\" gap={3}>\n        {firstActionState.title && <Text size={1}>{firstActionState.title}</Text>}\n        {firstActionState.shortcut && (\n          <Hotkeys\n            data-testid=\"document-status-bar-hotkeys\"\n            fontSize={1}\n            style={{marginTop: -4, marginBottom: -4}}\n            keys={String(firstActionState.shortcut)\n              .split('+')\n              .map((s) => s.slice(0, 1).toUpperCase() + s.slice(1).toLowerCase())}\n          />\n        )}\n      </Flex>\n    )\n  }, [firstActionState])\n\n  const showFirstActionButton = showingRevision\n    ? Boolean(firstActionState)\n    : selectedReleaseId\n      ? // If the first action is a custom action and we are in a version document show it.\n        firstActionState && !isSanityDefinedAction(firstActionState)\n      : firstActionState && !editState?.liveEdit\n\n  const sideMenuItems = useMemo(() => {\n    return showFirstActionButton ? menuActionStates : [firstActionState, ...menuActionStates]\n  }, [showFirstActionButton, firstActionState, menuActionStates])\n\n  return (\n    <Flex align=\"center\" gap={1}>\n      {__internal_tasks && __internal_tasks.footerAction}\n      {showFirstActionButton && (\n        <LayerProvider zOffset={200}>\n          <Tooltip disabled={!tooltipContent} content={tooltipContent} placement=\"top\">\n            <Stack>\n              <Button\n                data-testid={`action-${toLowerCaseNoSpaces(firstActionState.label)}`}\n                disabled={disabled || Boolean(firstActionState.disabled)}\n                icon={firstActionState.icon}\n                // eslint-disable-next-line react/jsx-handler-names\n                onClick={firstActionState.onHandle}\n                ref={setButtonElement}\n                text={firstActionState.label}\n                tone={firstActionState.tone || 'primary'}\n              />\n            </Stack>\n          </Tooltip>\n        </LayerProvider>\n      )}\n      {sideMenuItems.length > 0 && (\n        <ActionMenuButton actionStates={sideMenuItems} disabled={disabled} />\n      )}\n      {showFirstActionButton && firstActionState && firstActionState.dialog && (\n        <ActionStateDialog dialog={firstActionState.dialog} referenceElement={buttonElement} />\n      )}\n    </Flex>\n  )\n})\n\nexport const DocumentStatusBarActions = memo(function DocumentStatusBarActions() {\n  const {\n    actions: allActions,\n    connectionState,\n    documentId,\n    editState,\n    isInitialValueLoading,\n  } = useDocumentPane()\n\n  // The restore action has a dedicated place in the UI; it's only visible when the user is viewing\n  // a different document revision. It must be omitted from this collection.\n  const actions = useMemo(\n    () => (allActions ?? []).filter((action) => !isRestoreAction(action)),\n    [allActions],\n  )\n  const actionProps: Omit<DocumentActionProps, 'onComplete'> | null = useMemo(\n    () => (editState ? {...editState, initialValueResolved: !isInitialValueLoading} : null),\n    [editState, isInitialValueLoading],\n  )\n\n  const renderDocumentStatusBarActions = useCallback<\n    (props: {states: ResolvedAction[]}) => React.ReactNode\n  >(\n    ({states}) => (\n      <DocumentStatusBarActionsInner\n        // Use document ID as key to make sure that the actions state is reset when the document changes\n        key={documentId}\n        disabled={connectionState !== 'connected'}\n        states={states}\n      />\n    ),\n    [connectionState, documentId],\n  )\n\n  if (actions.length === 0 || !actionProps) {\n    return null\n  }\n\n  return (\n    <RenderActionCollectionState actions={actions} actionProps={actionProps} group=\"default\">\n      {renderDocumentStatusBarActions}\n    </RenderActionCollectionState>\n  )\n})\n\nexport const HistoryStatusBarActions = memo(function HistoryStatusBarActions() {\n  const {\n    actions,\n    connectionState,\n    editState,\n    revisionId: revision,\n    isInitialValueLoading,\n  } = useDocumentPane()\n\n  const disabled = (editState?.draft || editState?.published || {})._rev === revision\n  const actionProps: Omit<DocumentActionProps, 'onComplete'> | null = useMemo(\n    () =>\n      editState\n        ? {\n            ...editState,\n            revision: revision || undefined,\n            initialValueResolved: !isInitialValueLoading,\n          }\n        : null,\n    [editState, revision, isInitialValueLoading],\n  )\n\n  // If multiple `restore` actions are defined, ensure only the final one is used.\n  const historyActions = useMemo(() => (actions ?? []).filter(isRestoreAction).slice(-1), [actions])\n\n  const renderDocumentStatusBarActions = useCallback<\n    (props: {states: DocumentActionDescription[]}) => React.ReactNode\n  >(\n    ({states}) => (\n      <DocumentStatusBarActionsInner\n        disabled={connectionState !== 'connected' || Boolean(disabled)}\n        states={states}\n      />\n    ),\n    [connectionState, disabled],\n  )\n  if (!actionProps) {\n    return null\n  }\n  return (\n    <RenderActionCollectionState actions={historyActions} actionProps={actionProps} group=\"default\">\n      {renderDocumentStatusBarActions}\n    </RenderActionCollectionState>\n  )\n})\n\nexport function isRestoreAction(\n  action: DocumentActionComponent,\n): action is DocumentActionComponent & {action: 'restore'} {\n  return action.action === HistoryRestoreAction.action\n}\n","import {useEffect, useState} from 'react'\n\n/**\n * This hook is used to determine if the gradient should be shown on the chip scroll container.\n * It uses an IntersectionObserver to observe the last child of the container and sets the showGradient state based on the intersection.\n * @param containerRef - The ref to the container that contains all the chips\n * @returns showGradient - A boolean that determines if the gradient should be shown\n * @internal\n */\nexport function useChipScrollPosition(containerRef: React.RefObject<HTMLDivElement | null>) {\n  const [showGradient, setShowGradient] = useState(false)\n\n  useEffect(() => {\n    const checkOverflow = () => {\n      // container is the parent that contains all the chips\n      const container = containerRef.current\n      if (!container) return\n      const {scrollWidth, clientWidth} = container\n      const needsScrolling = scrollWidth > clientWidth\n\n      if (!needsScrolling) {\n        setShowGradient(false)\n        return\n      }\n\n      // Check if scrolled to the end\n      // becausee it doesn't need to show the gradient then\n      const {scrollLeft} = container\n      const isAtEnd = scrollLeft + clientWidth >= scrollWidth\n      setShowGradient(!isAtEnd)\n    }\n\n    function setupObservers() {\n      checkOverflow()\n      // container is the parent that contains all the chips\n      const container = containerRef.current\n      if (!container) return {intersectionObserver: null, mutationObserver: null}\n\n      const intersectionObserver = new IntersectionObserver((entries) => {\n        const entry = entries[0]\n\n        if (entry) {\n          setShowGradient(!entry.isIntersecting)\n        }\n      })\n\n      const updateLastChipObserver = () => {\n        // Disconnect previous observation\n        intersectionObserver.disconnect()\n\n        // Get the new last child\n        const lastChip = container.children[container.children.length - 1]\n        intersectionObserver.observe(lastChip)\n      }\n\n      // Set up initial observation\n      updateLastChipObserver()\n\n      // Set up mutation observer to watch for changes to children\n      // this is needed because sometimes the list of releases takes some time to be rendered\n      // otherwise it could accidentally set the last child as the \"drafts\" / \"published\" chip\n      const mutationObserver = new MutationObserver(() => {\n        updateLastChipObserver()\n        checkOverflow()\n      })\n\n      mutationObserver.observe(container, {\n        childList: true,\n        subtree: false,\n      })\n\n      return {intersectionObserver, mutationObserver}\n    }\n\n    const {intersectionObserver, mutationObserver} = setupObservers()\n\n    return () => {\n      intersectionObserver?.disconnect()\n      mutationObserver?.disconnect()\n    }\n  }, [containerRef])\n\n  return showGradient\n}\n","import {Text} from '@sanity/ui'\nimport {memo, useCallback, useMemo} from 'react'\nimport {\n  formatRelativeLocalePublishDate,\n  getReleaseIdFromReleaseDocumentId,\n  getReleaseTone,\n  getVersionFromId,\n  isDraftId,\n  isGoingToUnpublish,\n  isPublishedId,\n  isPublishedPerspective,\n  isReleaseScheduledOrScheduling,\n  isVersionId,\n  type ReleaseDocument,\n  type SanityDocumentLike,\n  Translate,\n  useActiveReleases,\n  useDateTimeFormat,\n  type UseDateTimeFormatOptions,\n  useOnlyHasVersions,\n  usePerspective,\n  useSchema,\n  useSetPerspective,\n  useTranslation,\n  useWorkspace,\n  VersionChip,\n} from 'sanity'\n\nimport {isLiveEditEnabled} from '../../../../../components/paneItem/helpers'\nimport {usePaneRouter} from '../../../../../components/paneRouter/usePaneRouter'\nimport {useFilteredReleases} from '../../../../../hooks/useFilteredReleases'\nimport {useDocumentPane} from '../../../useDocumentPane'\n\nconst TooltipContent = ({release}: {release: ReleaseDocument}) => {\n  const {t} = useTranslation()\n\n  if (release.state === 'archived') {\n    return <Text size={1}>{t('release.chip.tooltip.archived')}</Text>\n  }\n  if (release.metadata.releaseType === 'asap') {\n    return <Text size={1}>{t('release.type.asap')}</Text>\n  }\n  if (release.metadata.releaseType === 'scheduled') {\n    const isActive = release.state === 'active'\n\n    return (\n      release.metadata.intendedPublishAt && (\n        <Text size={1}>\n          {isActive ? (\n            <Translate\n              t={t}\n              i18nKey=\"release.chip.tooltip.intended-for-date\"\n              values={{\n                date: formatRelativeLocalePublishDate(release),\n              }}\n            />\n          ) : (\n            <Translate\n              t={t}\n              i18nKey=\"release.chip.tooltip.scheduled-for-date\"\n              values={{\n                date: formatRelativeLocalePublishDate(release),\n              }}\n            />\n          )}\n        </Text>\n      )\n    )\n  }\n\n  if (release.metadata.releaseType === 'undecided') {\n    return <Text size={1}>{t('release.type.undecided')}</Text>\n  }\n  return null\n}\n\nconst DATE_TIME_FORMAT: UseDateTimeFormatOptions = {\n  dateStyle: 'medium',\n  timeStyle: 'short',\n}\n\n// eslint-disable-next-line complexity\nexport const DocumentPerspectiveList = memo(function DocumentPerspectiveList() {\n  const {selectedReleaseId, selectedPerspectiveName} = usePerspective()\n  const {t} = useTranslation()\n  const setPerspective = useSetPerspective()\n  const {params, setParams} = usePaneRouter()\n  const dateTimeFormat = useDateTimeFormat(DATE_TIME_FORMAT)\n  const {loading} = useActiveReleases()\n  const schema = useSchema()\n  const {editState, displayed, documentType, documentId} = useDocumentPane()\n  const isCreatingDocument = displayed && !displayed._createdAt\n  const filteredReleases = useFilteredReleases({displayed, documentId})\n  const onlyHasVersions = useOnlyHasVersions({documentId})\n  const workspace = useWorkspace()\n\n  const handlePerspectiveChange = useCallback(\n    (perspective: Parameters<typeof setPerspective>[0]) => () => {\n      if (perspective === 'published' && params?.historyVersion) {\n        setParams({\n          ...params,\n          rev: params?.historyEvent || undefined,\n          since: undefined,\n          historyVersion: undefined,\n        })\n      }\n      setPerspective(perspective)\n    },\n    [setPerspective, setParams, params],\n  )\n\n  const schemaType = schema.get(documentType)\n  const isLiveEdit = schemaType ? isLiveEditEnabled(schemaType) : false\n\n  const isPublishedChipDisabled = useMemo(() => {\n    // If it's a live edit document the only option to edit it is through\n    // the published perspective, users should be able to select it.\n    if (isLiveEdit && !selectedReleaseId) return false\n\n    // If it's not live edit, we want to check for the existence of the published doc.\n    return !editState?.published\n  }, [isLiveEdit, selectedReleaseId, editState?.published])\n\n  const getReleaseChipState = useCallback(\n    (release: ReleaseDocument): {selected: boolean; disabled?: boolean} => {\n      if (!params?.historyVersion) {\n        const isCurrentVersionGoingToUnpublish =\n          editState?.version &&\n          isGoingToUnpublish(editState?.version) &&\n          getReleaseIdFromReleaseDocumentId(release._id) ===\n            getVersionFromId(editState?.version?._id)\n\n        return {\n          selected: Boolean(\n            getReleaseIdFromReleaseDocumentId(release._id) ===\n              getVersionFromId(displayed?._id || '') || isCurrentVersionGoingToUnpublish,\n          ),\n        }\n      }\n\n      const isReleaseHistoryMatch =\n        getReleaseIdFromReleaseDocumentId(release._id) === params.historyVersion\n\n      return {selected: isReleaseHistoryMatch, disabled: isReleaseHistoryMatch}\n    },\n    [displayed?._id, editState?.version, params?.historyVersion],\n  )\n\n  const isPublishSelected: boolean = useMemo(() => {\n    /**\n     * The publish perspective is selected when:\n     *  - the document is live edit and there is no draft\n     *  - the document is published and the selected perspective is published\n     */\n    if (isLiveEdit && !editState?.draft?._id && !selectedReleaseId) return true\n    if (\n      isPublishedId(displayed?._id || '') &&\n      isPublishedPerspective(selectedPerspectiveName || '')\n    ) {\n      return true\n    }\n    return false\n  }, [\n    displayed?._id,\n    editState?.draft?._id,\n    isLiveEdit,\n    selectedPerspectiveName,\n    selectedReleaseId,\n  ])\n\n  const isDraftSelected: boolean = useMemo(() => {\n    const displayedId = displayed?._id || ''\n    /** the draft is selected when:\n     * not viewing a historical version,\n     * when the document displayed is a draft,\n     * when the perspective is null,\n     * when the document is not published and the displayed version is draft,\n     * when there is no draft (new document),\n     */\n    if (isPublishSelected) return false\n    if (params?.historyVersion) return false\n    if (selectedPerspectiveName) return false\n    if (isVersionId(displayedId)) return false\n    if (isDraftId(displayedId)) return true\n    if (\n      isPublishedId(displayedId) &&\n      editState?.published &&\n      isPublishedPerspective(selectedPerspectiveName || '')\n    )\n      return false\n    return true\n  }, [\n    displayed?._id,\n    editState?.published,\n    isPublishSelected,\n    params?.historyVersion,\n    selectedPerspectiveName,\n  ])\n\n  const isDraftDisabled: boolean = useMemo(() => {\n    // Draft is disabled when the document has no published or draft but has versions\n    if (onlyHasVersions || (isCreatingDocument && selectedReleaseId)) {\n      return true\n    }\n\n    // Draft is disabled when we are creating a new document inside a release\n    // or when the document is live edit and there is no draft\n    if (!editState?.draft && !isLiveEdit) {\n      return false\n    }\n\n    if (isCreatingDocument && selectedReleaseId) return true\n    if (isLiveEdit) return true\n    return false\n  }, [editState?.draft, isCreatingDocument, isLiveEdit, onlyHasVersions, selectedReleaseId])\n\n  const isDraftModelEnabled = workspace.document.drafts?.enabled\n\n  return (\n    <>\n      <VersionChip\n        tooltipContent={\n          <Text size={1}>\n            {editState?.published && editState?.published?._updatedAt ? (\n              <Translate\n                t={t}\n                i18nKey=\"release.chip.tooltip.published-date\"\n                values={{date: dateTimeFormat.format(new Date(editState?.published._updatedAt))}}\n              />\n            ) : (\n              <>{t('release.chip.tooltip.not-published')}</>\n            )}\n          </Text>\n        }\n        disabled={isPublishedChipDisabled}\n        onClick={handlePerspectiveChange('published')}\n        selected={isPublishSelected}\n        text={t('release.chip.published')}\n        tone=\"positive\"\n        contextValues={{\n          documentId: editState?.published?._id || editState?.id || '',\n          menuReleaseId: editState?.published?._id || editState?.id || '',\n          releases: filteredReleases.notCurrentReleases,\n          releasesLoading: loading,\n          documentType,\n          fromRelease: 'published',\n          isVersion: false,\n          disabled: !editState?.published,\n        }}\n      />\n      {isDraftModelEnabled && (\n        <VersionChip\n          tooltipContent={\n            <Text size={1}>\n              {editState?.draft ? (\n                <>\n                  {editState?.draft._updatedAt ? (\n                    <Translate\n                      t={t}\n                      i18nKey=\"release.chip.tooltip.edited-date\"\n                      values={{date: dateTimeFormat.format(new Date(editState?.draft._updatedAt))}}\n                    />\n                  ) : (\n                    <Translate\n                      t={t}\n                      i18nKey=\"release.chip.tooltip.created-date\"\n                      values={{date: dateTimeFormat.format(new Date(editState?.draft._createdAt))}}\n                    />\n                  )}\n                </>\n              ) : (\n                <>\n                  {isLiveEdit\n                    ? t('release.chip.tooltip.draft-disabled.live-edit')\n                    : t('release.chip.tooltip.no-edits')}\n                </>\n              )}\n            </Text>\n          }\n          selected={isDraftSelected}\n          disabled={isDraftDisabled}\n          text={t('release.chip.draft')}\n          tone={editState?.draft ? 'caution' : 'neutral'}\n          onClick={handlePerspectiveChange('drafts')}\n          contextValues={{\n            documentId: editState?.draft?._id || editState?.published?._id || editState?.id || '',\n            menuReleaseId:\n              editState?.draft?._id || editState?.published?._id || editState?.id || '',\n            releases: filteredReleases.notCurrentReleases,\n            releasesLoading: loading,\n            documentType: documentType,\n            fromRelease: 'draft',\n            isVersion: false,\n          }}\n        />\n      )}\n      {filteredReleases.inCreation && (\n        <VersionChip\n          tooltipContent={<TooltipContent release={filteredReleases.inCreation} />}\n          selected\n          onClick={() => {}}\n          locked={false}\n          tone={getReleaseTone(filteredReleases.inCreation)}\n          text={\n            filteredReleases.inCreation.metadata.title || t('release.placeholder-untitled-release')\n          }\n          contextValues={{\n            disabled: true, // disable the chip context menu, this one is in creation\n            documentId: displayed?._id || '',\n            menuReleaseId: filteredReleases.inCreation._id,\n            releases: filteredReleases.notCurrentReleases,\n            releasesLoading: loading,\n            documentType,\n            fromRelease: getReleaseIdFromReleaseDocumentId(filteredReleases.inCreation._id),\n            releaseState: filteredReleases.inCreation.state,\n            isVersion: true,\n            release: filteredReleases.inCreation,\n          }}\n        />\n      )}\n\n      {displayed &&\n        filteredReleases.currentReleases?.map((release) => (\n          <VersionChip\n            key={release._id}\n            tooltipContent={<TooltipContent release={release} />}\n            {...getReleaseChipState(release)}\n            onClick={handlePerspectiveChange(getReleaseIdFromReleaseDocumentId(release._id))}\n            text={release.metadata.title || t('release.placeholder-untitled-release')}\n            tone={getReleaseTone(release)}\n            locked={isReleaseScheduledOrScheduling(release)}\n            contextValues={{\n              documentId: displayed?._id || '',\n              menuReleaseId: release._id,\n              releases: filteredReleases.notCurrentReleases,\n              releasesLoading: loading,\n              documentType: documentType,\n              fromRelease: getReleaseIdFromReleaseDocumentId(release._id),\n              releaseState: release.state,\n              isVersion: true,\n              // displayed, in this instance is not going to be the version to compare to\n              // since it's going to be the published version\n              isGoingToUnpublish: editState?.version\n                ? isGoingToUnpublish(editState?.version as SanityDocumentLike)\n                : false,\n              release,\n            }}\n          />\n        ))}\n    </>\n  )\n})\n","import {ArrowLeftIcon, CloseIcon, SplitVerticalIcon} from '@sanity/icons'\nimport {Box, Card, Flex} from '@sanity/ui'\n// eslint-disable-next-line camelcase\nimport {getTheme_v2, rgba} from '@sanity/ui/theme'\nimport {\n  type ForwardedRef,\n  forwardRef,\n  memo,\n  useCallback,\n  useDeferredValue,\n  useMemo,\n  useRef,\n  useState,\n} from 'react'\nimport {type DocumentActionDescription, useFieldActions, useTranslation} from 'sanity'\nimport {css, styled} from 'styled-components'\n\nimport {Button, TooltipDelayGroupProvider} from '../../../../../ui-components'\nimport {\n  PaneContextMenuButton,\n  PaneHeader,\n  PaneHeaderActionButton,\n  RenderActionCollectionState,\n  usePane,\n  usePaneRouter,\n} from '../../../../components'\nimport {type _PaneMenuNode} from '../../../../components/pane/types'\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {isMenuNodeButton, isNotMenuNodeButton, resolveMenuNodes} from '../../../../menuNodes'\nimport {type PaneMenuItem} from '../../../../types'\nimport {useStructureTool} from '../../../../useStructureTool'\nimport {ActionDialogWrapper, ActionMenuListItem} from '../../statusBar/ActionMenuButton'\nimport {isRestoreAction} from '../../statusBar/DocumentStatusBarActions'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {DocumentHeaderTitle} from './DocumentHeaderTitle'\nimport {useChipScrollPosition} from './hook/useChipScrollPosition'\nimport {DocumentPerspectiveList} from './perspective/DocumentPerspectiveList'\n\nexport interface DocumentPanelHeaderProps {\n  menuItems: PaneMenuItem[]\n}\n\nconst HorizontalScroller = styled(Card)<{$showGradient: boolean}>((props) => {\n  const theme = getTheme_v2(props.theme)\n\n  return css`\n    scrollbar-width: none;\n    z-index: 1;\n    flex: 1;\n    position: relative;\n    > div {\n      &::-webkit-scrollbar {\n        width: 0;\n        height: 0;\n      }\n    }\n\n    ${props.$showGradient &&\n    css`\n      &::after {\n        content: '';\n        display: block;\n        position: absolute;\n        top: 0;\n        right: 0;\n        bottom: 0;\n        width: 150px;\n        background: linear-gradient(to right, ${rgba(theme.color.bg, 0)}, var(--card-bg-color));\n        transition: 'opacity 300ms ease-out';\n        pointer-events: none;\n      }\n    `}\n  `\n})\n\nexport const DocumentPanelHeader = memo(\n  forwardRef(function DocumentPanelHeader(\n    _props: DocumentPanelHeaderProps,\n    ref: ForwardedRef<HTMLDivElement>,\n  ) {\n    const {menuItems} = _props\n    const {\n      actions: allActions,\n      editState,\n      onMenuAction,\n      isInitialValueLoading,\n      onPaneClose,\n      onPaneSplit,\n      menuItemGroups,\n      schemaType,\n      connectionState,\n      views,\n      unstable_languageFilter,\n    } = useDocumentPane()\n    const {features} = useStructureTool()\n    const {index, BackLink, hasGroupSiblings} = usePaneRouter()\n    const {actions: fieldActions} = useFieldActions()\n    const [referenceElement, setReferenceElement] = useState<HTMLElement | null>(null)\n    const scrollContainerRef = useRef<HTMLDivElement>(null)\n    const showGradient = useChipScrollPosition(scrollContainerRef)\n\n    // The restore action has a dedicated place in the UI; it's only visible when the user is\n    // viewing a different document revision. It must be omitted from this collection.\n    const actions = useMemo(\n      () => (allActions ?? []).filter((action) => !isRestoreAction(action)),\n      [allActions],\n    )\n\n    const menuNodes = useMemo(\n      () =>\n        resolveMenuNodes({actionHandler: onMenuAction, fieldActions, menuItems, menuItemGroups}),\n      [onMenuAction, fieldActions, menuItemGroups, menuItems],\n    )\n\n    const menuButtonNodes = useMemo(() => menuNodes.filter(isMenuNodeButton), [menuNodes])\n    const contextMenuNodes = useMemo(() => menuNodes.filter(isNotMenuNodeButton), [menuNodes])\n    const showTabs = views.length > 1\n\n    const {collapsed, isLast} = usePane()\n    // Prevent focus if this is the last (non-collapsed) pane.\n    const tabIndex = isLast && !collapsed ? -1 : 0\n\n    // there are three kinds of buttons possible:\n    //\n    // 1. split pane - creates a new split pane\n    // 2. close split pane — closes the current split pane\n    // 3. close pane group — closes the current pane group\n\n    // show the split pane button if they're enabled and there is more than one\n    // view available to use to create a split view\n    const showSplitPaneButton = features.splitViews && onPaneSplit && views.length > 1\n\n    // show the split pane button close button if the split button is showing\n    // and there is more than one split pane open (aka has-siblings)\n    const showSplitPaneCloseButton = showSplitPaneButton && hasGroupSiblings\n\n    // show the back button if both the feature is enabled and the current pane\n    // is not the first\n    const showBackButton = features.backButton && index > 0\n\n    // show the pane group close button if the `showSplitPaneCloseButton` is\n    // _not_ showing (the split pane button replaces the group close button)\n    // and if the back button is not showing (the back button and the close\n    // button do the same thing and shouldn't be shown at the same time)\n    // and if a BackLink component was provided\n    const showPaneGroupCloseButton = !showSplitPaneCloseButton && !showBackButton && !!BackLink\n\n    const {t} = useTranslation(structureLocaleNamespace)\n\n    const renderPaneActions = useCallback<\n      (props: {states: DocumentActionDescription[]}) => React.ReactNode\n    >(\n      ({states}) => (\n        <DocumentPanelHeaderActionDialogDeferred\n          contextMenuNodes={contextMenuNodes}\n          setReferenceElement={setReferenceElement}\n          referenceElement={referenceElement}\n          states={states}\n        />\n      ),\n      [contextMenuNodes, referenceElement],\n    )\n\n    const title = useMemo(() => <DocumentHeaderTitle />, [])\n    const backButton = useMemo(\n      () =>\n        showBackButton && (\n          <Button\n            as={BackLink}\n            data-as=\"a\"\n            icon={ArrowLeftIcon}\n            mode=\"bleed\"\n            tooltipProps={{content: t('pane-header.back-button.text')}}\n          />\n        ),\n      [BackLink, showBackButton, t],\n    )\n    const renderedActions = useMemo(\n      () => (\n        <Flex align=\"center\" gap={1}>\n          {unstable_languageFilter.length > 0 && (\n            <>\n              {unstable_languageFilter.map((LanguageFilterComponent, idx) => {\n                return (\n                  <LanguageFilterComponent key={`language-filter-${idx}`} schemaType={schemaType} />\n                )\n              })}\n            </>\n          )}\n\n          {menuButtonNodes.map((item) => (\n            <PaneHeaderActionButton key={item.key} node={item} />\n          ))}\n          {editState && (\n            <RenderActionCollectionState\n              actions={actions}\n              actionProps={{...editState, initialValueResolved: !isInitialValueLoading}}\n              group=\"paneActions\"\n            >\n              {renderPaneActions}\n            </RenderActionCollectionState>\n          )}\n\n          {showSplitPaneButton && (\n            <Button\n              key=\"split-pane-button\"\n              aria-label={t('buttons.split-pane-button.aria-label')}\n              icon={SplitVerticalIcon}\n              mode=\"bleed\"\n              onClick={onPaneSplit}\n              tooltipProps={{content: t('buttons.split-pane-button.tooltip')}}\n            />\n          )}\n\n          {showSplitPaneCloseButton && (\n            <Button\n              key=\"close-view-button\"\n              icon={CloseIcon}\n              mode=\"bleed\"\n              onClick={onPaneClose}\n              tooltipProps={{content: t('buttons.split-pane-close-button.title')}}\n            />\n          )}\n\n          {showPaneGroupCloseButton && (\n            <Button\n              key=\"close-view-button\"\n              icon={CloseIcon}\n              mode=\"bleed\"\n              tooltipProps={{content: t('buttons.split-pane-close-group-button.title')}}\n              as={BackLink}\n            />\n          )}\n        </Flex>\n      ),\n      [\n        BackLink,\n        actions,\n        editState,\n        isInitialValueLoading,\n        menuButtonNodes,\n        onPaneClose,\n        onPaneSplit,\n        renderPaneActions,\n        schemaType,\n        showPaneGroupCloseButton,\n        showSplitPaneButton,\n        showSplitPaneCloseButton,\n        t,\n        unstable_languageFilter,\n      ],\n    )\n\n    return (\n      <TooltipDelayGroupProvider>\n        {collapsed ? (\n          <PaneHeader\n            border\n            ref={ref}\n            loading={connectionState === 'connecting' && !editState?.draft && !editState?.published}\n            title={title}\n            tabIndex={tabIndex}\n            backButton={backButton}\n          />\n        ) : (\n          <Card hidden={collapsed} style={{lineHeight: 0}} borderBottom>\n            <Flex gap={3} paddingY={3}>\n              <HorizontalScroller $showGradient={showGradient}>\n                <Flex\n                  flex={1}\n                  gap={1}\n                  overflow=\"auto\"\n                  paddingX={3}\n                  data-testid=\"document-perspective-list\"\n                  ref={scrollContainerRef}\n                >\n                  <DocumentPerspectiveList />\n                </Flex>\n              </HorizontalScroller>\n\n              <Box flex=\"none\" paddingRight={3}>\n                {renderedActions}\n              </Box>\n            </Flex>\n          </Card>\n        )}\n      </TooltipDelayGroupProvider>\n    )\n  }),\n)\n\nconst DocumentPanelHeaderActionDialogDeferred = memo(\n  function DocumentPanelHeaderActionDialogDeferred(props: {\n    states: DocumentActionDescription[]\n    setReferenceElement: React.Dispatch<React.SetStateAction<HTMLElement | null>>\n    referenceElement: HTMLElement | null\n    contextMenuNodes: _PaneMenuNode[]\n  }) {\n    const {setReferenceElement, referenceElement, contextMenuNodes} = props\n    /**\n     * The purpose of this component is to allow deferring the rendering of document action hook states if the main thread becomes very busy.\n     * The `useDeferredValue` doesn't have an effect unless it's used to delay rendering a component that has `React.memo` to prevent unnecessary re-renders.\n     */\n    const states = useDeferredValue(props.states)\n\n    return (\n      <DocumentPanelHeaderActionDialog\n        setReferenceElement={setReferenceElement}\n        referenceElement={referenceElement}\n        contextMenuNodes={contextMenuNodes}\n        states={states}\n      />\n    )\n  },\n)\n\nconst DocumentPanelHeaderActionDialog = memo(function DocumentPanelHeaderActionDialog(props: {\n  states: DocumentActionDescription[]\n  setReferenceElement: React.Dispatch<React.SetStateAction<HTMLElement | null>>\n  referenceElement: HTMLElement | null\n  contextMenuNodes: _PaneMenuNode[]\n}) {\n  const {states, setReferenceElement, contextMenuNodes, referenceElement} = props\n\n  const renderActionDialog = useCallback<\n    ({handleAction}: {handleAction: (idx: number) => void}) => React.ReactNode\n  >(\n    ({handleAction}) => (\n      <div ref={setReferenceElement}>\n        <PaneContextMenuButton\n          key=\"context-menu\"\n          nodes={contextMenuNodes}\n          actionsNodes={\n            states.length > 0\n              ? states.map((actionState, actionIndex) => (\n                  <ActionMenuListItem\n                    key={actionState.label}\n                    actionState={actionState}\n                    disabled={Boolean(actionState.disabled)}\n                    index={actionIndex}\n                    onAction={handleAction}\n                  />\n                ))\n              : undefined\n          }\n        />\n      </div>\n    ),\n    [contextMenuNodes, setReferenceElement, states],\n  )\n\n  return (\n    <ActionDialogWrapper actionStates={states} referenceElement={referenceElement}>\n      {renderActionDialog}\n    </ActionDialogWrapper>\n  )\n})\n","import {Button, type ButtonProps} from '../../../ui-components'\n\ninterface SpacerButtonProps {\n  size?: ButtonProps['size']\n}\n\n/**\n * This renders a visually hidden <Button> component that is still contributes\n * to document layout.\n *\n * It's used to simplify padding in Sanity UI components that contain buttons which\n * may not always be rendered.\n *\n * TODO: let's find a more elegant solve to this layout shift problem\n *\n * @internal\n */\nexport function SpacerButton({size}: SpacerButtonProps) {\n  return (\n    <Button\n      aria-hidden\n      disabled\n      size={size}\n      style={{\n        pointerEvents: 'none',\n        visibility: 'hidden',\n        width: 0,\n      }}\n      text=\"-\"\n    />\n  )\n}\n","import {Badge, type BadgeTone, Inline} from '@sanity/ui'\nimport {memo, useCallback, useDeferredValue} from 'react'\nimport {type DocumentBadgeDescription} from 'sanity'\n\nimport {Tooltip} from '../../../../ui-components'\nimport {RenderBadgeCollectionState} from '../../../components'\nimport {useDocumentPane} from '../useDocumentPane'\n\ninterface DocumentBadgesInnerProps {\n  states: DocumentBadgeDescription[]\n}\n\nconst BADGE_TONES: Record<string, BadgeTone | undefined> = {\n  primary: 'primary',\n  success: 'positive',\n  warning: 'caution',\n  danger: 'critical',\n}\n\nconst DocumentBadgesInner = memo(function DocumentBadgesInner({states}: DocumentBadgesInnerProps) {\n  if (states.length === 0) {\n    return null\n  }\n  return (\n    <Inline space={1}>\n      {states.map((badge, index) => (\n        <Tooltip\n          key={`${badge.label}-${index}`}\n          content={badge.title}\n          disabled={!badge.title}\n          placement=\"top\"\n          portal\n        >\n          <Badge\n            fontSize={1}\n            mode=\"outline\"\n            paddingX={2}\n            paddingY={1}\n            radius={4}\n            tone={badge.color ? BADGE_TONES[badge.color] : undefined}\n            style={{whiteSpace: 'nowrap'}}\n          >\n            {badge.label}\n          </Badge>\n        </Tooltip>\n      ))}\n    </Inline>\n  )\n})\n\nconst DocumentBadgesDeferred = memo(function DocumentBadgesDeferred(\n  props: DocumentBadgesInnerProps,\n) {\n  /**\n   * The purpose of this component is to allow deferring the rendering of document action hook states if the main thread becomes very busy.\n   * The `useDeferredValue` doesn't have an effect unless it's used to delay rendering a component that has `React.memo` to prevent unnecessary re-renders.\n   */\n  const states = useDeferredValue(props.states)\n  return <DocumentBadgesInner states={states} />\n})\n\nexport function DocumentBadges() {\n  const {badges, editState} = useDocumentPane()\n\n  const renderDocumentBadges = useCallback<\n    (props: {states: DocumentBadgeDescription[]}) => React.ReactNode\n  >(({states}) => <DocumentBadgesDeferred states={states} />, [])\n\n  if (!editState || !badges) return null\n\n  return (\n    <RenderBadgeCollectionState badges={badges} badgeProps={editState}>\n      {renderDocumentBadges}\n    </RenderBadgeCollectionState>\n  )\n}\n","import {\n  AddIcon,\n  CloseIcon,\n  EditIcon,\n  type IconComponent,\n  PublishIcon,\n  TrashIcon,\n  UnpublishIcon,\n} from '@sanity/icons'\n\nexport const TIMELINE_ICON_COMPONENTS: {[key: string]: IconComponent | undefined} = {\n  create: AddIcon,\n  delete: TrashIcon,\n  discardDraft: CloseIcon,\n  initial: AddIcon,\n  editDraft: EditIcon,\n  editLive: EditIcon,\n  publish: PublishIcon,\n  unpublish: UnpublishIcon,\n}\n","import {type IconComponent} from '@sanity/icons'\nimport {type ChunkType} from 'sanity'\n\nimport {TIMELINE_ICON_COMPONENTS} from './constants'\n\nexport function getTimelineEventIconComponent(type: ChunkType): IconComponent | undefined {\n  return TIMELINE_ICON_COMPONENTS[type]\n}\n","import {ChevronLeftIcon} from '@sanity/icons'\nimport {type MouseEvent, useCallback} from 'react'\nimport {useTranslation} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Button} from '../../../../ui-components'\nimport {structureLocaleNamespace} from '../../../i18n'\nimport {TIMELINE_LIST_WRAPPER_ID} from './timeline'\n\n/**\n * This is a hack to force the scrollbar to not appear when the list is expanding,\n * if we don't do this the scrollbar will appear for a brief moment when the list is expanding and then disappear\n * when the list is fully expanded.\n */\nfunction hideScrollbarOnExpand(isExpanded: boolean) {\n  // Do nothing if the list is already expanded\n  if (isExpanded) return\n\n  const listWrapper = document.getElementById(TIMELINE_LIST_WRAPPER_ID)\n\n  if (listWrapper) {\n    const firstChildren = listWrapper.children[0] as HTMLElement\n    const hasScrollbar = firstChildren.scrollHeight > firstChildren.clientHeight\n    if (!hasScrollbar) {\n      //\n      const currentStyle = getComputedStyle(firstChildren).overflowY\n      // Add overflow hidden to the listWrapper to avoid the scrollbar to appear when expanding\n      firstChildren.style.overflowY = 'hidden'\n      setTimeout(() => {\n        // Reset the overflow style after the list is expanded\n        firstChildren.style.overflowY = currentStyle\n      }, 0)\n    }\n  }\n}\n\nconst FlipIcon = styled(ChevronLeftIcon)`\n  transition: transform 200ms;\n  &[data-expanded='true'] {\n    transform: rotate(-90deg);\n  }\n`\n\nexport function ExpandableTimelineItemButton({\n  isExpanded,\n  onExpand,\n}: {\n  isExpanded: boolean\n  onExpand: () => void\n}) {\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const handleExpandClick = useCallback(\n    (e: MouseEvent<HTMLButtonElement>) => {\n      e.stopPropagation()\n      hideScrollbarOnExpand(isExpanded)\n      onExpand()\n    },\n    [onExpand, isExpanded],\n  )\n\n  return (\n    <Button\n      mode=\"bleed\"\n      icon={<FlipIcon data-expanded={isExpanded} />}\n      tooltipProps={{\n        content: isExpanded\n          ? t('timeline-item.menu.action-collapse')\n          : t('timeline-item.menu.action-expand'),\n      }}\n      onClick={handleExpandClick}\n    />\n  )\n}\n","import {Box, Flex, Stack} from '@sanity/ui'\nimport {css, styled} from 'styled-components'\n\nexport const StackWrapper = styled(Stack)`\n  max-width: 200px;\n`\n\nexport const ListWrapper = styled(Flex)<{$maxHeight: string}>`\n  max-height: ${(props) => props.$maxHeight};\n  min-width: 244px;\n`\n\nexport const Root = styled(Box)<{$visible?: boolean}>(({$visible}) => {\n  return css`\n    opacity: 0;\n    pointer-events: none;\n    transition: opacity 0.2s;\n\n    ${$visible &&\n    css`\n      opacity: 1;\n      pointer-events: auto;\n    `}\n  `\n})\n","import {type ChunkType, type StudioLocaleResourceKeys} from 'sanity'\n\n/**\n * Maps from a chunk type to an i18n key for the operation\n *\n * @internal\n */\nexport const TIMELINE_ITEM_I18N_KEY_MAPPING: Record<ChunkType, StudioLocaleResourceKeys> = {\n  initial: 'timeline.operation.created-initial',\n  create: 'timeline.operation.created',\n  publish: 'timeline.operation.published',\n  editLive: 'timeline.operation.edited-live',\n  editDraft: 'timeline.operation.edited-draft',\n  unpublish: 'timeline.operation.unpublished',\n  discardDraft: 'timeline.operation.draft-discarded',\n  delete: 'timeline.operation.deleted',\n}\n","import {type AvatarSize, AvatarStack} from '@sanity/ui'\nimport {UserAvatar} from 'sanity'\n\ninterface UserAvatarStackProps {\n  maxLength?: number\n  userIds: string[]\n  size?: AvatarSize\n  withTooltip?: boolean\n}\n\nexport function UserAvatarStack({\n  maxLength,\n  userIds,\n  size,\n  withTooltip = true,\n}: UserAvatarStackProps) {\n  return (\n    <AvatarStack maxLength={maxLength} size={size}>\n      {userIds.map((userId) => (\n        <UserAvatar key={userId} user={userId} withTooltip={withTooltip} />\n      ))}\n    </AvatarStack>\n  )\n}\n","import {Box, Card, Flex, Skeleton, Stack, Text} from '@sanity/ui'\n// eslint-disable-next-line camelcase\nimport {getTheme_v2, type ThemeColorAvatarColorKey} from '@sanity/ui/theme'\nimport {type MouseEvent, useCallback, useMemo} from 'react'\nimport {\n  AvatarSkeleton,\n  type ChunkType,\n  type RelativeTimeOptions,\n  useDateTimeFormat,\n  UserAvatar,\n  useRelativeTime,\n  useTranslation,\n  useUser,\n} from 'sanity'\nimport {css, styled} from 'styled-components'\n\nimport {Tooltip} from '../../../../ui-components'\nimport {getTimelineEventIconComponent} from './helpers'\nimport {TIMELINE_ITEM_I18N_KEY_MAPPING} from './timelineI18n'\nimport {UserAvatarStack} from './userAvatarStack'\nimport {type ChunksWithCollapsedDrafts} from './utils'\n\nexport const IconBox = styled(Flex)<{$color: ThemeColorAvatarColorKey}>((props) => {\n  const theme = getTheme_v2(props.theme)\n  const color = props.$color\n\n  return css`\n    --card-icon-color: ${theme.color.avatar[color].fg};\n    background-color: ${theme.color.avatar[color].bg};\n    box-shadow: 0 0 0 1px var(--card-bg-color);\n\n    position: absolute;\n    width: ${theme.avatar.sizes[0].size}px;\n    height: ${theme.avatar.sizes[0].size}px;\n    right: -3px;\n    bottom: -3px;\n    border-radius: 50%;\n  `\n})\n\nconst TIMELINE_ITEM_EVENT_TONE: Record<ChunkType | 'withinSelection', ThemeColorAvatarColorKey> = {\n  initial: 'blue',\n  create: 'blue',\n  publish: 'green',\n  editLive: 'green',\n  editDraft: 'yellow',\n  unpublish: 'orange',\n  discardDraft: 'orange',\n  delete: 'red',\n  withinSelection: 'magenta',\n}\n\nexport interface TimelineItemProps {\n  chunk: ChunksWithCollapsedDrafts\n  isSelected: boolean\n  onSelect: (chunk: ChunksWithCollapsedDrafts) => void\n  collaborators?: Set<string>\n  optionsMenu?: React.ReactNode\n}\n\nconst RELATIVE_TIME_OPTIONS: RelativeTimeOptions = {\n  minimal: true,\n  useTemporalPhrase: true,\n}\n\nconst NameSkeleton = styled(Skeleton)((props) => {\n  const theme = getTheme_v2(props.theme)\n  return css`\n    width: 6ch;\n    height: ${theme.font.text.sizes[0].lineHeight}px;\n  `\n})\n\nconst UserLine = ({userId}: {userId: string}) => {\n  const [user, loading] = useUser(userId)\n\n  return (\n    <Flex key={userId} align=\"center\" gap={2} padding={1}>\n      <Box>{loading || !user ? <AvatarSkeleton animated /> : <UserAvatar user={user} />}</Box>\n      <Box>\n        {loading || !user?.displayName ? (\n          <Text size={1}>\n            <NameSkeleton animated />\n          </Text>\n        ) : (\n          <Text muted size={1}>\n            {user.displayName}\n          </Text>\n        )}\n      </Box>\n    </Flex>\n  )\n}\nconst TooltipContent = ({collaborators}: {collaborators: string[]}) => {\n  const {t} = useTranslation('studio')\n  return (\n    <Stack paddingBottom={1}>\n      <Box padding={1} paddingBottom={2}>\n        <Text size={1} weight=\"medium\">\n          {t('timeline.changes.title')}\n        </Text>\n      </Box>\n      {collaborators.map((userId) => (\n        <UserLine key={userId} userId={userId} />\n      ))}\n    </Stack>\n  )\n}\nexport function TimelineItem({\n  chunk,\n  isSelected,\n  onSelect,\n  collaborators,\n  optionsMenu,\n}: TimelineItemProps) {\n  const {t} = useTranslation('studio')\n  const {type, endTimestamp: timestamp} = chunk\n  const IconComponent = getTimelineEventIconComponent(type)\n  const authorUserIds = Array.from(chunk.authors)\n  const collaboratorsUsersIds = collaborators ? Array.from(collaborators) : []\n  const isSelectable = type !== 'delete'\n  const dateFormat = useDateTimeFormat({dateStyle: 'medium', timeStyle: 'short'})\n  const date = new Date(timestamp)\n\n  const updatedTimeAgo = useRelativeTime(date || '', RELATIVE_TIME_OPTIONS)\n\n  const formattedTimestamp = useMemo(() => {\n    const parsedDate = new Date(timestamp)\n    const formattedDate = dateFormat.format(parsedDate)\n\n    return formattedDate\n  }, [timestamp, dateFormat])\n\n  const handleClick = useCallback(\n    (evt: MouseEvent<HTMLDivElement>) => {\n      evt.preventDefault()\n      evt.stopPropagation()\n\n      if (isSelectable) {\n        onSelect(chunk)\n      }\n    },\n    [onSelect, chunk, isSelectable],\n  )\n\n  return (\n    <Flex align=\"center\" gap={1}>\n      <Card\n        as=\"button\"\n        onClick={handleClick}\n        padding={2}\n        pressed={isSelected}\n        radius={2}\n        data-ui=\"timelineItem\"\n        data-testid=\"timeline-item-button\"\n        data-chunk-id={chunk.id}\n      >\n        <Flex align=\"center\" gap={3}>\n          <div style={{position: 'relative'}}>\n            <UserAvatarStack maxLength={3} userIds={authorUserIds} size={2} />\n            <IconBox align=\"center\" justify=\"center\" $color={TIMELINE_ITEM_EVENT_TONE[type]}>\n              <Text size={0}>{IconComponent && <IconComponent />}</Text>\n            </IconBox>\n          </div>\n          <Stack space={2}>\n            <Text size={1} weight=\"medium\">\n              {t(TIMELINE_ITEM_I18N_KEY_MAPPING[type]) || <code>{type}</code>}\n            </Text>\n\n            <Text as=\"time\" size={1} muted dateTime={timestamp} title={formattedTimestamp}>\n              {updatedTimeAgo}\n            </Text>\n          </Stack>\n\n          {collaboratorsUsersIds.length > 0 && (\n            <Flex flex={1} justify=\"flex-end\" align=\"center\">\n              <Tooltip\n                placement=\"top\"\n                content={<TooltipContent collaborators={collaboratorsUsersIds} />}\n                portal\n              >\n                <Box paddingLeft={2} paddingY={2}>\n                  <UserAvatarStack\n                    maxLength={3}\n                    userIds={collaboratorsUsersIds}\n                    size={0}\n                    withTooltip={false}\n                  />\n                </Box>\n              </Tooltip>\n            </Flex>\n          )}\n        </Flex>\n      </Card>\n      {optionsMenu}\n    </Flex>\n  )\n}\n","import {type Chunk, type ChunkType} from 'sanity'\n\nexport type NonPublishChunk = Omit<Chunk, 'type'> & {\n  type: Exclude<ChunkType, 'publish'>\n  parentId?: string\n}\n\nexport type PublishChunk = Omit<Chunk, 'type'> & {\n  type: 'publish'\n  children: string[]\n  collaborators: Set<string>\n}\n\nexport const isNonPublishChunk = (chunk: Chunk): chunk is NonPublishChunk =>\n  chunk.type !== 'publish'\n\nexport const isPublishChunk = (chunk: Chunk): chunk is PublishChunk => chunk.type === 'publish'\n\n/**\n * searches for the previous publish action in the list of chunks\n * e.g. chunks = [publish, edit, publish, edit, edit] it needs to return the second publish action\n * e.g. chunks = [publish, edit, delete, edit, edit] it returns undefined\n */\n\nfunction getPreviousPublishAction(chunks: Chunk[]) {\n  let previousPublish: PublishChunk | null = null\n  // We need to iterate from the end to the start of the list\n  for (let index = chunks.length - 1; index >= 0; index--) {\n    const chunk = chunks[index]\n    if (isPublishChunk(chunk)) {\n      previousPublish = chunk\n      break\n    }\n    if (chunk.type === 'editDraft') {\n      continue\n    } else break\n  }\n\n  return previousPublish\n}\nexport type ChunksWithCollapsedDrafts = NonPublishChunk | PublishChunk\n\n/**\n * Takes an array of chunks and adds them metadata necessary for the timeline view.\n * for draft chunks, it will add the parentId of the published chunk if this draft action is now published\n * for published, it will add the children array and the collaborators array\n */\nexport function addChunksMetadata(chunks: Chunk[]): ChunksWithCollapsedDrafts[] {\n  const result: ChunksWithCollapsedDrafts[] = []\n\n  for (const chunk of chunks) {\n    if (isPublishChunk(chunk)) {\n      result.push({\n        ...chunk,\n        type: 'publish',\n        children: [],\n        collaborators: new Set(), // Initialize the collaborators array\n      })\n      continue\n    }\n    if (isNonPublishChunk(chunk)) {\n      const previousPublish = getPreviousPublishAction(result)\n      if (chunk.type === 'editDraft' && previousPublish?.type === 'publish') {\n        Array.from(chunk.authors).forEach((id) => {\n          previousPublish.collaborators.add(id)\n        })\n        previousPublish.children.push(chunk.id)\n        result.push({\n          ...chunk,\n          parentId: previousPublish.id,\n        })\n        continue\n      }\n    }\n    if (isNonPublishChunk(chunk)) {\n      result.push(chunk)\n    }\n  }\n\n  return result\n}\n","import {Box, Text} from '@sanity/ui'\nimport {useCallback, useEffect, useMemo, useState} from 'react'\nimport {\n  type Chunk,\n  CommandList,\n  type CommandListRenderItemCallback,\n  LoadingBlock,\n  useTranslation,\n} from 'sanity'\n\nimport {ExpandableTimelineItemButton} from './expandableTimelineItemButton'\nimport {ListWrapper, Root, StackWrapper} from './timeline.styled'\nimport {TimelineItem} from './timelineItem'\nimport {\n  addChunksMetadata,\n  type ChunksWithCollapsedDrafts,\n  isNonPublishChunk,\n  isPublishChunk,\n} from './utils'\n\ninterface TimelineProps {\n  chunks: Chunk[]\n  hasMoreChunks: boolean | null\n  lastChunk?: Chunk | null\n  onLoadMore: () => void\n  onSelect: (chunk: Chunk) => void\n  /**\n   * The list needs a predefined max height for the scroller to work.\n   */\n  listMaxHeight?: string\n}\n\nexport const TIMELINE_LIST_WRAPPER_ID = 'timeline-list-wrapper'\n\nexport const Timeline = ({\n  chunks,\n  hasMoreChunks,\n  lastChunk: selectedChunk,\n  onLoadMore,\n  onSelect,\n  listMaxHeight = 'calc(100vh - 280px)',\n}: TimelineProps) => {\n  const [mounted, setMounted] = useState(false)\n  const {t} = useTranslation('studio')\n  const selectedChunkId = selectedChunk?.id\n  const chunksWithMetadata = useMemo(() => addChunksMetadata(chunks), [chunks])\n\n  const [expandedParents, setExpandedParents] = useState<Set<string>>(() => {\n    if (selectedChunkId) {\n      // If the selected chunk is a draft, we need to expand its parent\n      const selected = chunksWithMetadata.find((chunk) => chunk.id === selectedChunkId)\n      if (selected && isNonPublishChunk(selected) && selected.parentId) {\n        return new Set([selected.parentId])\n      }\n    }\n    return new Set()\n  })\n\n  useEffect(() => {\n    // This effect ensures that when we reload the timeline with a selected draft, we expand its parent.\n    if (selectedChunkId) {\n      const selected = chunksWithMetadata.find((chunk) => chunk.id === selectedChunkId)\n      if (selected && isNonPublishChunk(selected) && selected.parentId) {\n        const parentId = selected.parentId\n        setExpandedParents((prev) => {\n          if (prev.has(parentId)) return prev\n          const next = new Set(prev)\n          next.add(parentId)\n          return next\n        })\n      }\n    }\n  }, [chunksWithMetadata, selectedChunkId])\n\n  const filteredChunks = useMemo(() => {\n    return chunksWithMetadata.filter((chunk) => {\n      if (isPublishChunk(chunk) || !chunk.parentId) return true\n      // If the chunk has a parent id keep it hidden until the parent is expanded.\n      return expandedParents.has(chunk.parentId)\n    })\n  }, [chunksWithMetadata, expandedParents])\n\n  useEffect(() => {\n    // This effect ensures that we load more chunks if the list is not long enough.\n    // This could happen if a parent chunk has multiple drafts, so you could end with a list of 50 transactions but only\n    // 1 parent chunk, the publish, which squashed all the changes.\n    // In that case, users will see the loading block at the bottom, but nothing will really be happening. Because they haven't reach the end of the list.\n    if (filteredChunks.length < 16 && hasMoreChunks) {\n      onLoadMore()\n    }\n  }, [filteredChunks, hasMoreChunks, onLoadMore])\n\n  const handleExpandParent = useCallback(\n    (parentId: string) => () =>\n      setExpandedParents((prev) => {\n        const next = new Set(prev)\n\n        if (prev.has(parentId)) next.delete(parentId)\n        else next.add(parentId)\n\n        return next\n      }),\n    [],\n  )\n\n  const selectedIndex = useMemo(\n    () =>\n      selectedChunkId ? filteredChunks.findIndex((chunk) => chunk.id === selectedChunkId) : -1,\n    [selectedChunkId, filteredChunks],\n  )\n  const handleSelectChunk = useCallback(\n    (chunk: ChunksWithCollapsedDrafts) => {\n      const timelineChunk = chunks.find((c) => c.id === chunk.id)\n      if (timelineChunk) onSelect(timelineChunk)\n      else {\n        console.error('TimelineItem: chunk not found')\n        onSelect(chunk)\n      }\n    },\n    [chunks, onSelect],\n  )\n\n  const renderItem = useCallback<CommandListRenderItemCallback<(typeof filteredChunks)[number]>>(\n    (chunk, {activeIndex}) => {\n      const isFirst = activeIndex === 0\n\n      return (\n        <Box\n          paddingBottom={1}\n          paddingTop={isFirst ? 1 : 0}\n          paddingRight={1}\n          paddingLeft={isNonPublishChunk(chunk) && chunk.parentId ? 4 : 1}\n        >\n          <TimelineItem\n            chunk={chunk}\n            isSelected={selectedChunkId === chunk.id}\n            onSelect={handleSelectChunk}\n            collaborators={isPublishChunk(chunk) ? chunk.collaborators : undefined}\n            optionsMenu={\n              isPublishChunk(chunk) && chunk.children.length > 0 ? (\n                <ExpandableTimelineItemButton\n                  isExpanded={expandedParents.has(chunk.id)}\n                  onExpand={handleExpandParent(chunk.id)}\n                />\n              ) : null\n            }\n          />\n          {activeIndex === filteredChunks.length - 1 && hasMoreChunks && <LoadingBlock />}\n        </Box>\n      )\n    },\n    [\n      expandedParents,\n      filteredChunks.length,\n      handleExpandParent,\n      handleSelectChunk,\n      hasMoreChunks,\n      selectedChunkId,\n    ],\n  )\n\n  useEffect(() => setMounted(true), [])\n\n  return (\n    <Root\n      /**\n       * We delay initial rendering if `selectedIndex` is present.\n       * This is a _temporary_ workaround to allow the virtual <CommandList>\n       * to scroll to a specific index prior to being displayed.\n       *\n       * Without this, there'll be a noticeable 'flash' where the virtual list\n       * will render with its child items at the top and then scroll into position.\n       */\n      $visible={!selectedIndex || mounted}\n      data-ui=\"timeline\"\n    >\n      {filteredChunks.length === 0 && (\n        <StackWrapper padding={3} space={3}>\n          <Text size={1} weight=\"medium\">\n            {t('timeline.error.no-document-history-title')}\n          </Text>\n          <Text muted size={1}>\n            {t('timeline.error.no-document-history-description')}\n          </Text>\n        </StackWrapper>\n      )}\n\n      {filteredChunks.length > 0 && (\n        <ListWrapper direction=\"column\" $maxHeight={listMaxHeight} id={TIMELINE_LIST_WRAPPER_ID}>\n          <CommandList\n            activeItemDataAttr=\"data-hovered\"\n            ariaLabel={t('timeline.list.aria-label')}\n            autoFocus=\"list\"\n            initialIndex={selectedIndex}\n            initialScrollAlign=\"center\"\n            itemHeight={57}\n            items={filteredChunks}\n            onEndReached={onLoadMore}\n            onEndReachedIndexOffset={20}\n            overscan={5}\n            renderItem={renderItem}\n            wrapAround={false}\n          />\n        </ListWrapper>\n      )}\n    </Root>\n  )\n}\n\nTimeline.displayName = 'Timeline'\n","import {ErrorOutlineIcon} from '@sanity/icons'\nimport {Flex, Stack} from '@sanity/ui'\nimport {TextWithTone, useTranslation} from 'sanity'\n\nexport function TimelineError({versionError}: {versionError?: boolean}) {\n  const {t} = useTranslation('studio')\n\n  return (\n    <Flex align=\"flex-start\" gap={3} padding={4}>\n      <TextWithTone tone=\"critical\">\n        <ErrorOutlineIcon />\n      </TextWithTone>\n      <Stack space={4}>\n        <TextWithTone size={1} tone=\"critical\" weight=\"medium\">\n          {versionError\n            ? t('timeline.error.load-document-changes-version-title')\n            : t('timeline.error.load-document-changes-title')}\n        </TextWithTone>\n        <TextWithTone size={1} tone=\"critical\">\n          {versionError\n            ? t('timeline.error.load-document-changes-version-description')\n            : t('timeline.error.load-document-changes-description')}\n        </TextWithTone>\n      </Stack>\n    </Flex>\n  )\n}\n","import {ChevronDownIcon} from '@sanity/icons'\nimport {\n  Flex,\n  type Placement,\n  PortalProvider,\n  useClickOutsideEvent,\n  useGlobalKeyDown,\n  useToast,\n} from '@sanity/ui'\nimport {useCallback, useMemo, useState} from 'react'\nimport {type Chunk, useTimelineSelector, useTranslation} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Button, Popover} from '../../../../ui-components'\nimport {useDocumentPane} from '../useDocumentPane'\nimport {Timeline} from './timeline'\nimport {TimelineError} from './TimelineError'\nimport {TIMELINE_ITEM_I18N_KEY_MAPPING} from './timelineI18n'\n\ninterface TimelineMenuProps {\n  chunk: Chunk | null\n  mode: 'rev' | 'since'\n  placement?: Placement\n}\n\nconst Root = styled(Popover)`\n  overflow: hidden;\n  overflow: clip;\n`\n\nexport const TIMELINE_MENU_PORTAL = 'timeline-menu'\n\nexport function TimelineMenu({chunk, mode, placement}: TimelineMenuProps) {\n  const {setTimelineRange, timelineError, ready, timelineStore} = useDocumentPane()\n  const [open, setOpen] = useState(false)\n  const [button, setButton] = useState<HTMLButtonElement | null>(null)\n  const [popoverRef, setPopoverRef] = useState<HTMLElement | null>(null)\n\n  const toast = useToast()\n\n  const chunks = useTimelineSelector(timelineStore, (state) => state.chunks)\n  const loading = useTimelineSelector(timelineStore, (state) => state.isLoading)\n  const hasMoreChunks = useTimelineSelector(timelineStore, (state) => state.hasMoreChunks)\n  const realRevChunk = useTimelineSelector(timelineStore, (state) => state.realRevChunk)\n  const sinceTime = useTimelineSelector(timelineStore, (state) => state.sinceTime)\n\n  const {t} = useTranslation('studio')\n\n  const handleOpen = useCallback(() => {\n    setOpen(true)\n  }, [])\n\n  const handleClose = useCallback(() => {\n    setOpen(false)\n  }, [])\n\n  const handleGlobalKeyDown = useCallback(\n    (event: KeyboardEvent) => {\n      if (open && (event.key === 'Escape' || event.key === 'Tab')) {\n        handleClose()\n        button?.focus()\n      }\n    },\n    [button, handleClose, open],\n  )\n\n  useGlobalKeyDown(handleGlobalKeyDown)\n  useClickOutsideEvent(open && handleClose, () => [button, popoverRef])\n\n  const selectRev = useCallback(\n    (revChunk: Chunk) => {\n      try {\n        const [sinceId, revId] = timelineStore?.findRangeForRev(revChunk) || [null, null]\n        setTimelineRange(sinceId, revId)\n      } catch (err) {\n        toast.push({\n          closable: true,\n          description: err.message,\n          status: 'error',\n          title: t('timeline.error.unable-to-load-revision'),\n        })\n      }\n    },\n    [setTimelineRange, t, timelineStore, toast],\n  )\n\n  const selectSince = useCallback(\n    (sinceChunk: Chunk) => {\n      try {\n        const [sinceId, revId] = timelineStore?.findRangeForSince(sinceChunk) || [null, null]\n        setTimelineRange(sinceId, revId)\n      } catch (err) {\n        toast.push({\n          closable: true,\n          description: err.message,\n          status: 'error',\n          title: t('timeline.error.unable-to-load-revision'),\n        })\n      }\n    },\n    [setTimelineRange, t, timelineStore, toast],\n  )\n\n  const handleLoadMore = useCallback(() => {\n    if (!loading) {\n      timelineStore?.loadMore()\n    }\n  }, [loading, timelineStore])\n\n  const content = useMemo(() => {\n    if (timelineError) return <TimelineError />\n\n    if (mode === 'rev') {\n      return (\n        <Timeline\n          chunks={chunks}\n          hasMoreChunks={hasMoreChunks}\n          lastChunk={realRevChunk}\n          onLoadMore={handleLoadMore}\n          onSelect={selectRev}\n        />\n      )\n    }\n\n    const filteredChunks = realRevChunk\n      ? chunks.filter((c) => c.index < realRevChunk.index)\n      : chunks\n    return (\n      <Timeline\n        chunks={filteredChunks}\n        hasMoreChunks={hasMoreChunks}\n        lastChunk={sinceTime}\n        onLoadMore={handleLoadMore}\n        onSelect={selectSince}\n      />\n    )\n  }, [\n    chunks,\n    handleLoadMore,\n    hasMoreChunks,\n    mode,\n    realRevChunk,\n    selectRev,\n    selectSince,\n    sinceTime,\n    timelineError,\n  ])\n\n  const formatParams = {\n    timestamp: {dateStyle: 'medium', timeStyle: 'short'},\n  }\n\n  const revLabel = chunk\n    ? t(TIMELINE_ITEM_I18N_KEY_MAPPING[chunk.type], {\n        context: 'timestamp',\n        timestamp: new Date(chunk?.endTimestamp),\n        formatParams,\n      })\n    : t('timeline.latest-revision')\n\n  const sinceLabel = chunk\n    ? t('timeline.since', {\n        timestamp: new Date(chunk?.endTimestamp),\n        formatParams,\n      })\n    : t('timeline.since-version-missing')\n\n  const buttonLabel = mode === 'rev' ? revLabel : sinceLabel\n  const portalElements = useMemo(() => ({[TIMELINE_MENU_PORTAL]: popoverRef}), [popoverRef])\n\n  return (\n    <PortalProvider __unstable_elements={portalElements}>\n      <Root\n        data-testid=\"timeline-menu\"\n        constrainSize\n        content={open && content}\n        data-ui=\"versionMenu\"\n        open={open}\n        placement={placement}\n        matchReferenceWidth\n        portal\n        ref={setPopoverRef}\n      >\n        <Flex width={'fill'}>\n          <Button\n            data-testid={open ? 'timeline-menu-close-button' : 'timeline-menu-open-button'}\n            disabled={!ready}\n            mode=\"ghost\"\n            onClick={open ? handleClose : handleOpen}\n            ref={setButton}\n            selected={open}\n            width=\"fill\"\n            tooltipProps={null}\n            justify={'space-between'}\n            style={{\n              maxWidth: '100%',\n            }}\n            iconRight={ChevronDownIcon}\n            text={ready ? buttonLabel : t('timeline.loading-history')}\n          />\n        </Flex>\n      </Root>\n    </PortalProvider>\n  )\n}\n","import {motion} from 'framer-motion'\nimport {type ComponentProps} from 'react'\nimport {keyframes, styled} from 'styled-components'\n\nconst StyledMotionPath = styled(motion.path)`\n  transform-origin: center;\n`\n\ntype MotionCircleProps = Omit<ComponentProps<typeof motion.circle>, 'd'>\ntype MotionPathProps = Omit<ComponentProps<typeof motion.path>, 'd' | 'ref'>\n\nconst Circle = (props: MotionCircleProps) => (\n  <motion.circle fill=\"none\" r=\"8\" cx=\"12.5\" cy=\"12.5\" strokeWidth=\"1.2\" {...props} />\n)\nconst Arrows = (props: MotionPathProps) => (\n  <StyledMotionPath\n    fill=\"none\"\n    d=\"M14 17.5619L11.5 20.5L14.5 23.0619M11 7.43811L13.5 4.50001L10.5 1.93811\"\n    {...props}\n  />\n)\nconst Checkmark = (props: MotionPathProps) => (\n  <motion.path d=\"M9.5 12.1316L11.7414 14.5L16 10\" {...props} />\n)\n\nconst rotateAnimation = keyframes`\n  0% {\n    transform: rotate(0);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n`\nconst RotateGroup = styled.g`\n  transform-origin: center;\n\n  &[data-rotate] {\n    animation: ${rotateAnimation} 1s ease-in-out infinite;\n  }\n`\n\nconst root = {\n  syncing: {\n    scale: 1,\n    transition: {\n      duration: 0,\n    },\n  },\n  saved: {\n    scale: [1, 0.8, 1.2, 0.9, 1.1, 0.95, 1.05, 0.99, 1],\n    transition: {\n      duration: 0.5,\n      delay: 0.2,\n    },\n  },\n  changes: {transition: {duration: 0}},\n}\n\nconst circle = {\n  syncing: {\n    strokeDasharray: '0, 0, 23, 3, 23, 3',\n    strokeDashoffset: 10,\n    opacity: 1,\n    transition: {\n      duration: 0,\n    },\n  },\n  saved: {\n    strokeDasharray: '0, 0, 23, 0, 23, 0',\n    strokeDashoffset: 10,\n    opacity: 1,\n    transition: {\n      duration: 0.2,\n    },\n  },\n  changes: {\n    strokeDasharray: '0, 60, 23, 0, 23, 0',\n    strokeDashoffset: 0,\n    opacity: 0,\n    transition: {\n      duration: 0.5,\n    },\n  },\n}\n\nconst arrows = {\n  syncing: {\n    opacity: 1,\n    transition: {\n      duration: 0,\n    },\n  },\n  saved: {\n    opacity: 0,\n    transition: {\n      duration: 0.2,\n    },\n  },\n  changes: {\n    opacity: 0,\n  },\n}\n\nconst checkmark = {\n  syncing: {\n    pathLength: 0,\n    transition: {duration: 0},\n  },\n  saved: {\n    pathLength: 1,\n    transition: {\n      delay: 0.4,\n      duration: 0.3,\n    },\n  },\n  changes: {\n    pathLength: 0,\n    transition: {\n      duration: 0.2,\n    },\n  },\n}\n\ninterface AnimatedStatusIconProps {\n  status?: 'changes' | 'saved' | 'syncing'\n}\n\nexport function AnimatedStatusIcon(props: AnimatedStatusIconProps) {\n  const {status} = props\n\n  if (!status) {\n    return null\n  }\n\n  return (\n    <svg\n      width=\"1em\"\n      height=\"1em\"\n      viewBox=\"0 0 25 25\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth=\"1.2\"\n      data-sanity-icon=\"animated-status-icon\"\n    >\n      <motion.g variants={root} initial={status} animate={status}>\n        <RotateGroup data-rotate={status === 'changes' ? undefined : ''}>\n          <Arrows variants={arrows} initial={status} animate={status} />\n          <Circle variants={circle} initial={status} animate={status} />\n        </RotateGroup>\n        <Checkmark variants={checkmark} initial={status} animate={status} />\n      </motion.g>\n    </svg>\n  )\n}\n","import {type ButtonTone, Flex, Text} from '@sanity/ui'\nimport {TextWithTone, useTranslation} from 'sanity'\n\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {AnimatedStatusIcon} from './AnimatedStatusIcon'\n\ntype StatusType = 'saved' | 'syncing'\ninterface ReviewChangesButtonProps {\n  status?: StatusType\n}\n\nconst STATUS_DICTIONARY: Record<StatusType, {i18nKey: string; tone: ButtonTone}> = {\n  saved: {\n    i18nKey: 'status-bar.document-status-pulse.status.saved.text',\n    tone: 'positive',\n  },\n  syncing: {\n    i18nKey: 'status-bar.document-status-pulse.status.syncing.text',\n    tone: 'default',\n  },\n}\n\nexport const DocumentStatusPulse = (props: ReviewChangesButtonProps) => {\n  const {status} = props\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  if (status !== 'saved' && status !== 'syncing') {\n    return null\n  }\n\n  const currentStatus = STATUS_DICTIONARY[status]\n\n  return (\n    <Flex align=\"center\" gap={2} data-testid=\"pane-footer-document-status-pulse\">\n      <TextWithTone size={1} tone={currentStatus.tone}>\n        <AnimatedStatusIcon status={status} />\n      </TextWithTone>\n\n      <Text muted size={1}>\n        {t(currentStatus.i18nKey)}\n      </Text>\n    </Flex>\n  )\n}\n","import {\n  Box,\n  // eslint-disable-next-line no-restricted-imports\n  Button,\n  Flex,\n  Skeleton,\n  Text,\n} from '@sanity/ui'\nimport {AnimatePresence, motion} from 'framer-motion'\nimport {useEffect, useLayoutEffect, useMemo, useState} from 'react'\nimport {\n  AvatarSkeleton,\n  isPublishedPerspective,\n  TIMELINE_ITEM_I18N_KEY_MAPPING,\n  useEvents,\n  usePerspective,\n  UserAvatar,\n  useRelativeTime,\n  useSource,\n  useSyncState,\n  useTimelineSelector,\n  useTranslation,\n} from 'sanity'\n\nimport {HISTORY_INSPECTOR_NAME} from '../constants'\nimport {TIMELINE_ITEM_I18N_KEY_MAPPING as TIMELINE_ITEM_I18N_KEY_MAPPING_LEGACY} from '../timeline'\nimport {useDocumentPane} from '../useDocumentPane'\nimport {DocumentStatusPulse} from './DocumentStatusPulse'\n\nconst RELATIVE_TIME_OPTIONS = {\n  minimal: true,\n  useTemporalPhrase: true,\n} as const\n\nconst MotionButton = motion.create(Button)\nconst MotionBox = motion.create(Box)\n\nconst ButtonSkeleton = () => {\n  return (\n    <Flex align=\"center\" gap={3} paddingLeft={1} paddingRight={2} paddingY={2}>\n      <div style={{margin: -5}}>\n        <AvatarSkeleton $size={0} animated />\n      </div>\n      <Skeleton animated style={{width: '80px', height: '15px'}} radius={2} />\n    </Flex>\n  )\n}\n\nconst DocumentStatusButton = ({\n  author,\n  translationKey,\n  timestamp = '',\n}: {\n  author: string\n  translationKey: string\n  timestamp?: string\n}) => {\n  const {onHistoryOpen, inspector, onHistoryClose} = useDocumentPane()\n  const {t} = useTranslation()\n  const relativeTime = useRelativeTime(timestamp, RELATIVE_TIME_OPTIONS)\n\n  return (\n    <MotionButton\n      data-testid=\"pane-footer-document-status\"\n      animate={{opacity: 1}}\n      initial={{opacity: 0}}\n      exit={{opacity: 0}}\n      mode=\"bleed\"\n      onClick={inspector?.name === HISTORY_INSPECTOR_NAME ? onHistoryClose : onHistoryOpen}\n      padding={2}\n      muted\n    >\n      <Flex align=\"center\" flex=\"none\" gap={3}>\n        {author && (\n          <div style={{margin: -5}}>\n            <UserAvatar user={author} size={0} />\n          </div>\n        )}\n        <Text muted size={1}>\n          {t(translationKey)} {relativeTime}\n        </Text>\n      </Flex>\n    </MotionButton>\n  )\n}\n\nconst FallbackStatus = () => {\n  const {editState} = useDocumentPane()\n  const {selectedPerspective} = usePerspective()\n\n  const status = useMemo(() => {\n    if (isPublishedPerspective(selectedPerspective) && editState?.published?._updatedAt) {\n      return {\n        translationKey: TIMELINE_ITEM_I18N_KEY_MAPPING.published.createDocumentVersion,\n        timestamp: editState.published._updatedAt,\n      }\n    }\n    if (editState?.version?._updatedAt) {\n      return {\n        translationKey:\n          editState?.version?._updatedAt === editState?.version?._createdAt\n            ? TIMELINE_ITEM_I18N_KEY_MAPPING.version.createDocumentVersion\n            : TIMELINE_ITEM_I18N_KEY_MAPPING.version.editDocumentVersion,\n        timestamp: editState.version._updatedAt,\n      }\n    }\n    if (editState?.draft?._updatedAt) {\n      return {\n        translationKey:\n          editState?.draft?._updatedAt === editState?.draft?._createdAt\n            ? TIMELINE_ITEM_I18N_KEY_MAPPING.draft.createDocumentVersion\n            : TIMELINE_ITEM_I18N_KEY_MAPPING.draft.editDocumentVersion,\n        timestamp: editState.draft._updatedAt,\n      }\n    }\n    return null\n  }, [\n    selectedPerspective,\n    editState?.published?._updatedAt,\n    editState?.version?._updatedAt,\n    editState?.version?._createdAt,\n    editState?.draft?._updatedAt,\n    editState?.draft?._createdAt,\n  ])\n  if (!status) {\n    return null\n  }\n  return (\n    <DocumentStatusButton\n      author=\"\"\n      translationKey={status.translationKey}\n      timestamp={status.timestamp}\n    />\n  )\n}\n\nconst EventsStatus = () => {\n  const {events, loading} = useEvents()\n  const event = events?.[0]\n\n  if (!event && loading) {\n    return <ButtonSkeleton />\n  }\n  if (!event) {\n    return <FallbackStatus />\n  }\n\n  return (\n    <DocumentStatusButton\n      author={event.author}\n      translationKey={TIMELINE_ITEM_I18N_KEY_MAPPING[event.documentVariantType][event.type]}\n      timestamp={event.timestamp}\n    />\n  )\n}\n\nconst TimelineStatus = () => {\n  const {timelineStore} = useDocumentPane()\n  const chunks = useTimelineSelector(timelineStore, (state) => state.chunks)\n  const loading = useTimelineSelector(timelineStore, (state) => state.isLoading)\n  const event = chunks?.[0]\n\n  if (!event && loading) {\n    return <ButtonSkeleton />\n  }\n  if (!event) {\n    return <FallbackStatus />\n  }\n\n  const author = Array.from(event.authors)[0]\n  return (\n    <DocumentStatusButton\n      author={author}\n      translationKey={TIMELINE_ITEM_I18N_KEY_MAPPING_LEGACY[event.type]}\n      timestamp={event.endTimestamp}\n    />\n  )\n}\n\nconst SYNCING_TIMEOUT = 1000\nconst SAVED_TIMEOUT = 3000\n\nexport function DocumentStatusLine() {\n  const {documentId, documentType, editState, value} = useDocumentPane()\n  const [status, setStatus] = useState<'saved' | 'syncing' | null>(null)\n  const source = useSource()\n  const eventsEnabled = source.beta?.eventsAPI?.documents\n\n  const syncState = useSyncState(documentId, documentType, editState?.release)\n\n  const lastUpdated = value?._updatedAt\n\n  // eslint-disable-next-line consistent-return\n  useEffect(() => {\n    // Schedule an update to set the status to 'saved' when status changed to 'syncing.\n    // We use `syncState.isSyncing` here to avoid the status being set to 'saved' when the document is syncing.\n    if (status === 'syncing' && !syncState.isSyncing) {\n      const timerId = setTimeout(() => setStatus('saved'), SYNCING_TIMEOUT)\n      return () => clearTimeout(timerId)\n    }\n    // Schedule an update to clear the status when status changed to 'saved'\n    if (status === 'saved') {\n      const timerId = setTimeout(() => setStatus(null), SAVED_TIMEOUT)\n      return () => clearTimeout(timerId)\n    }\n  }, [status, lastUpdated, syncState.isSyncing])\n\n  // Clear the status when documentId changes to make sure we don't show the wrong status when opening a new document\n  useLayoutEffect(() => {\n    setStatus(null)\n  }, [documentId])\n\n  // Set status to 'syncing' when lastUpdated changes and we go from not syncing to syncing\n  useLayoutEffect(() => {\n    if (syncState.isSyncing) {\n      setStatus('syncing')\n    }\n  }, [syncState.isSyncing, lastUpdated])\n\n  return (\n    <AnimatePresence>\n      {status ? (\n        <MotionBox\n          paddingLeft={2}\n          animate={{opacity: 1}}\n          initial={{opacity: 0}}\n          exit={{opacity: 0}}\n        >\n          <DocumentStatusPulse status={status || undefined} />\n        </MotionBox>\n      ) : (\n        <>{eventsEnabled ? <EventsStatus /> : <TimelineStatus />}</>\n      )}\n    </AnimatePresence>\n  )\n}\n","import {RestoreIcon} from '@sanity/icons'\nimport {Box, Flex, Text} from '@sanity/ui'\nimport {format} from 'date-fns'\nimport {Translate, useTranslation} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {useDocumentPane} from '../useDocumentPane'\n\nexport const StatusText = styled(Text)`\n  color: var(--card-muted-fg-color);\n\n  em {\n    color: var(--card-fg-color);\n    font-weight: 500;\n    font-style: normal;\n  }\n`\n\nexport function RevisionStatusLine(): React.JSX.Element {\n  const {displayed, revisionNotFound} = useDocumentPane()\n  const {t} = useTranslation()\n  const date = displayed?._updatedAt || displayed?._createdAt\n\n  const message = {\n    name: 'revision',\n    text: date ? (\n      <Translate\n        t={t}\n        i18nKey=\"document-status.revision-from\"\n        values={{\n          date: format(new Date(date), `MMM d, yyyy '@' pp`),\n        }}\n      />\n    ) : null,\n    tone: 'caution',\n  }\n\n  return (\n    <>\n      <Flex flex={1} gap={3} padding={2}>\n        <Box flex=\"none\">\n          <Text size={1}>\n            <RestoreIcon />\n          </Text>\n        </Box>\n        <Box flex={1}>\n          <StatusText size={1} textOverflow=\"ellipsis\">\n            {revisionNotFound ? (\n              <Translate t={t} i18nKey=\"document-status.revision-not-found\" />\n            ) : (\n              message.text\n            )}\n          </StatusText>\n        </Box>\n      </Flex>\n    </>\n  )\n}\n","import {useLayoutEffect} from 'react'\nimport {resizeObserver} from 'sanity'\n\nexport function useResizeObserver({\n  element,\n  onResize,\n}: {\n  element?: HTMLDivElement | null\n  onResize: (event: ResizeObserverEntry) => void\n}): void {\n  useLayoutEffect(() => {\n    if (element) {\n      resizeObserver.observe(element, onResize)\n    }\n\n    return () => {\n      if (element) {\n        resizeObserver.unobserve(element)\n      }\n    }\n  }, [element, onResize])\n}\n","import {Card, Flex} from '@sanity/ui'\nimport {motion} from 'framer-motion'\nimport {type Ref, useCallback, useMemo, useState} from 'react'\nimport {\n  type CreateLinkMetadata,\n  isPublishedPerspective,\n  isReleaseDocument,\n  isSanityCreateLinked,\n  usePerspective,\n  useSanityCreateConfig,\n} from 'sanity'\n\nimport {usePaneRouter} from '../../../components'\nimport {SpacerButton} from '../../../components/spacerButton'\nimport {DOCUMENT_PANEL_PORTAL_ELEMENT} from '../../../constants'\nimport {EMPTY_PARAMS} from '../constants'\nimport {useDocumentPane} from '../useDocumentPane'\nimport {useDocumentTitle} from '../useDocumentTitle'\nimport {DocumentBadges} from './DocumentBadges'\nimport {DocumentStatusBarActions, HistoryStatusBarActions} from './DocumentStatusBarActions'\nimport {DocumentStatusLine} from './DocumentStatusLine'\nimport {RevisionStatusLine} from './RevisionStatusLine'\nimport {useResizeObserver} from './useResizeObserver'\n\nexport interface DocumentStatusBarProps {\n  actionsBoxRef?: Ref<HTMLDivElement>\n  createLinkMetadata?: CreateLinkMetadata\n}\n\nconst CONTAINER_BREAKPOINT = 480 // px\n\nconst AnimatedCard = motion.create(Card)\n\nexport function DocumentStatusBar(props: DocumentStatusBarProps) {\n  const {actionsBoxRef, createLinkMetadata} = props\n  const {editState, onChange: onDocumentChange, revisionNotFound} = useDocumentPane()\n  const {params = EMPTY_PARAMS} = usePaneRouter()\n  const {selectedPerspective} = usePerspective()\n  const {title} = useDocumentTitle()\n\n  const CreateLinkedActions = useSanityCreateConfig().components?.documentLinkedActions\n\n  const showingRevision = Boolean(params.rev)\n  const [collapsed, setCollapsed] = useState<boolean | null>(null)\n  const [rootElement, setRootElement] = useState<HTMLDivElement | null>(null)\n\n  const handleResize = useCallback((event: ResizeObserverEntry) => {\n    setCollapsed(event.contentRect.width < CONTAINER_BREAKPOINT)\n  }, [])\n\n  useResizeObserver({element: rootElement, onResize: handleResize})\n\n  const shouldRender = useMemo(() => {\n    const isReady = Boolean(editState?.ready && typeof collapsed === 'boolean')\n    if (selectedPerspective) {\n      if (isPublishedPerspective(selectedPerspective)) {\n        return isReady && Boolean(editState?.published)\n      }\n      if (isReleaseDocument(selectedPerspective)) {\n        return isReady && Boolean(editState?.version)\n      }\n    }\n    return isReady\n  }, [collapsed, editState?.published, editState?.ready, editState?.version, selectedPerspective])\n\n  let actions: React.JSX.Element | null = null\n  if (createLinkMetadata && isSanityCreateLinked(createLinkMetadata) && CreateLinkedActions) {\n    actions = (\n      <CreateLinkedActions\n        metadata={createLinkMetadata}\n        panelPortalElementId={DOCUMENT_PANEL_PORTAL_ELEMENT}\n        onDocumentChange={onDocumentChange}\n        documentTitle={title}\n      />\n    )\n  } else if (showingRevision) {\n    actions = <HistoryStatusBarActions />\n  } else {\n    actions = <DocumentStatusBarActions />\n  }\n\n  if (showingRevision && revisionNotFound) {\n    return null\n  }\n\n  return (\n    <AnimatedCard\n      key={showingRevision ? 'revision' : 'published'}\n      initial={{opacity: 0.2}}\n      animate={{opacity: 1, transition: {duration: 0.3}}}\n      tone={showingRevision ? 'caution' : undefined}\n      radius={3}\n      ref={setRootElement}\n      sizing=\"border\"\n      padding={2}\n    >\n      {shouldRender && (\n        <Flex\n          align=\"stretch\"\n          gap={1}\n          justify=\"space-between\"\n          paddingLeft={showingRevision ? 0 : 1}\n          paddingRight={showingRevision ? 0 : 1}\n        >\n          <Flex align=\"center\" flex={1} gap={collapsed ? 2 : 3} wrap=\"wrap\" paddingRight={3}>\n            <Flex align=\"center\">\n              {showingRevision ? <RevisionStatusLine /> : <DocumentStatusLine />}\n              <SpacerButton />\n            </Flex>\n            <DocumentBadges />\n          </Flex>\n\n          <Flex\n            align=\"flex-start\"\n            justify=\"flex-end\"\n            ref={actionsBoxRef}\n            style={{flexShrink: 0, marginLeft: 'auto'}}\n          >\n            <SpacerButton />\n            {actions}\n          </Flex>\n        </Flex>\n      )}\n    </AnimatedCard>\n  )\n}\n","import {isHotkey} from 'is-hotkey-esm'\nimport {\n  type ElementType,\n  type HTMLProps,\n  memo,\n  type Ref,\n  useCallback,\n  useMemo,\n  useState,\n} from 'react'\nimport {type DocumentActionDescription, type DocumentActionProps, LegacyLayerProvider} from 'sanity'\n\nimport {RenderActionCollectionState} from '../../../components'\nimport {ActionStateDialog} from '../statusBar'\nimport {useDocumentPane} from '../useDocumentPane'\n\nexport interface KeyboardShortcutResponderProps {\n  actionsBoxElement: HTMLElement | null\n  activeIndex: number\n  as?: ElementType\n  currentMinWidth?: number\n  flex?: number\n  id: string\n  minWidth?: number\n  onActionStart: (index: number) => void\n  rootRef: Ref<HTMLDivElement>\n  states: DocumentActionDescription[]\n}\n\nconst KeyboardShortcutResponder = memo(function KeyboardShortcutResponder(\n  props: KeyboardShortcutResponderProps & Omit<HTMLProps<HTMLDivElement>, 'as' | 'height'>,\n) {\n  const {\n    actionsBoxElement,\n    activeIndex,\n    as: As = 'div',\n    children,\n    id,\n    onActionStart,\n    onKeyDown,\n    rootRef,\n    states,\n    ...rest\n  } = props\n\n  const activeAction = states[activeIndex]\n\n  const handleKeyDown = useCallback(\n    (event: any) => {\n      const matchingStates = states.filter(\n        (state) => state.shortcut && isHotkey(state.shortcut, event),\n      )\n\n      const matchingState = matchingStates[0]\n\n      if (matchingStates.length > 1) {\n        console.warn(\n          `Keyboard shortcut conflict: More than one document action matches the shortcut \"${matchingState.shortcut}\"`,\n        )\n      }\n\n      if (matchingState && !matchingState.disabled && matchingState.onHandle) {\n        event.preventDefault()\n        matchingState.onHandle()\n        onActionStart(states.indexOf(matchingState))\n        return\n      }\n\n      if (onKeyDown) {\n        onKeyDown(event)\n      }\n    },\n    [onActionStart, onKeyDown, states],\n  )\n\n  return (\n    <As id={id} onKeyDown={handleKeyDown} tabIndex={-1} {...rest} ref={rootRef}>\n      {children}\n      {activeAction && activeAction.dialog && (\n        <LegacyLayerProvider zOffset=\"paneFooter\">\n          <ActionStateDialog dialog={activeAction.dialog} referenceElement={actionsBoxElement} />\n        </LegacyLayerProvider>\n      )}\n    </As>\n  )\n})\n\nexport interface DocumentActionShortcutsProps {\n  actionsBoxElement: HTMLElement | null\n  as?: ElementType\n  currentMinWidth?: number\n  debug?: boolean\n  flex: number\n  id: string\n  minWidth: number\n  rootRef: Ref<HTMLDivElement>\n}\n\nexport const DocumentActionShortcuts = memo(\n  (props: DocumentActionShortcutsProps & Omit<HTMLProps<HTMLDivElement>, 'as'>) => {\n    const {actionsBoxElement, as = 'div', children, ...rest} = props\n    const {actions, editState, isInitialValueLoading, revisionId} = useDocumentPane()\n    const [activeIndex, setActiveIndex] = useState(-1)\n\n    const onActionStart = useCallback((idx: number) => {\n      setActiveIndex(idx)\n    }, [])\n\n    const actionProps: DocumentActionProps | null = useMemo(\n      () =>\n        editState && {\n          ...editState,\n\n          // @todo: what to call here?\n          onComplete: () => undefined,\n\n          revision: revisionId || undefined,\n          initialValueResolved: !isInitialValueLoading,\n        },\n      [editState, isInitialValueLoading, revisionId],\n    )\n\n    const renderDocumentActionShortcuts = useCallback<\n      (props: {states: DocumentActionDescription[]}) => React.ReactNode\n    >(\n      ({states}) => (\n        <KeyboardShortcutResponder\n          {...rest}\n          activeIndex={activeIndex}\n          actionsBoxElement={actionsBoxElement}\n          as={as}\n          onActionStart={onActionStart}\n          states={states}\n        >\n          {children}\n        </KeyboardShortcutResponder>\n      ),\n      [actionsBoxElement, activeIndex, as, children, onActionStart, rest],\n    )\n\n    if (!actionProps || !actions) return null\n\n    return (\n      <RenderActionCollectionState actionProps={actionProps} actions={actions}>\n        {renderDocumentActionShortcuts}\n      </RenderActionCollectionState>\n    )\n  },\n)\n\nDocumentActionShortcuts.displayName = 'Memo(DocumentActionShortcuts)'\n","import {EarthAmericasIcon, JsonIcon, LinkIcon, TransferIcon} from '@sanity/icons'\nimport {type DocumentInspector, type DocumentInspectorMenuItem, type TFunction} from 'sanity'\n\nimport {type DocumentIdStack} from '../../hooks/useDocumentIdStack'\nimport {type PaneMenuItem, type StructureToolFeatures} from '../../types'\nimport {INSPECT_ACTION_PREFIX} from './constants'\n\ninterface GetMenuItemsParams {\n  currentInspector?: DocumentInspector\n  features: StructureToolFeatures\n  hasValue: boolean\n  inspectors: DocumentInspector[]\n  previewUrl?: string | null\n  documentIdStack?: DocumentIdStack\n  inspectorMenuItems: DocumentInspectorMenuItem[]\n  t: TFunction\n}\n\nfunction getInspectorItems({\n  currentInspector,\n  hasValue,\n  inspectors,\n  inspectorMenuItems,\n}: GetMenuItemsParams): PaneMenuItem[] {\n  return inspectors\n    .map((inspector, index) => {\n      const menuItem = inspectorMenuItems[index]\n\n      if (!menuItem || menuItem.hidden) return null\n\n      return {\n        action: `${INSPECT_ACTION_PREFIX}${inspector.name}`,\n        group: menuItem.showAsAction ? undefined : 'inspectors',\n        icon: menuItem.icon,\n        disabled: !hasValue,\n        selected: currentInspector?.name === inspector.name,\n        shortcut: menuItem.hotkeys?.join('+'),\n        showAsAction: menuItem.showAsAction,\n        title: menuItem.title,\n        tone: menuItem.tone,\n      }\n    })\n    .filter(Boolean) as PaneMenuItem[]\n}\n\nfunction getInspectItem({hasValue, t}: GetMenuItemsParams): PaneMenuItem {\n  return {\n    action: 'inspect',\n    group: 'inspectors',\n    title: t('document-inspector.menu-item.title'),\n    icon: JsonIcon,\n    disabled: !hasValue,\n    shortcut: 'Ctrl+Alt+I',\n  }\n}\n\nfunction getCompareVersionsItem({documentIdStack, t}: GetMenuItemsParams): PaneMenuItem | null {\n  const disabled = typeof documentIdStack?.previousId === 'undefined' && {\n    reason: t('compare-versions.menu-item.disabled-reason'),\n  }\n\n  return {\n    action: 'compareVersions',\n    group: 'inspectors',\n    title: t('compare-versions.menu-item.title'),\n    icon: TransferIcon,\n    disabled,\n  }\n}\n\nexport function getProductionPreviewItem({previewUrl, t}: GetMenuItemsParams): PaneMenuItem | null {\n  if (!previewUrl) return null\n\n  return {\n    action: 'production-preview',\n    group: 'links',\n    title: t('production-preview.menu-item.title'),\n    icon: EarthAmericasIcon,\n    shortcut: 'Ctrl+Alt+O',\n  }\n}\n\nexport function getMenuItems(params: GetMenuItemsParams): PaneMenuItem[] {\n  const inspectorItems = getInspectorItems(params)\n  const items = [\n    // Get production preview item\n    getProductionPreviewItem(params),\n    getCompareVersionsItem(params),\n  ].filter(Boolean) as PaneMenuItem[]\n\n  return [\n    // Always present document menu item to copy current url to clipboard\n    {\n      action: 'copy-document-url',\n      showAsAction: true,\n      title: params.t('action.copy-document-url.label'),\n      icon: LinkIcon,\n    },\n    ...inspectorItems,\n\n    // TODO: convert to inspector or document view?\n    getInspectItem(params),\n\n    ...items,\n  ]\n}\n","import {Card, Code, Stack, Text} from '@sanity/ui'\nimport {isDev, Translate, useTranslation} from 'sanity'\n\nimport {ErrorPane} from '../../error'\n\ninterface DocumentLayoutErrorProps {\n  currentMinWidth?: number\n  documentType?: string\n  minWidth?: number\n  paneKey: string\n  value?: Record<string, unknown>\n}\n\nexport function DocumentLayoutError(props: DocumentLayoutErrorProps) {\n  const {documentType, value, currentMinWidth, paneKey, minWidth} = props\n  const {t} = useTranslation()\n\n  return (\n    <ErrorPane\n      currentMinWidth={currentMinWidth}\n      flex={2.5}\n      minWidth={minWidth}\n      paneKey={paneKey}\n      title={\n        <Translate\n          t={t}\n          i18nKey=\"panes.document-pane.document-unknown-type.title\"\n          values={{documentType}}\n        />\n      }\n      tone=\"caution\"\n    >\n      <Stack space={4}>\n        {documentType && (\n          <Text as=\"p\">\n            <Translate\n              t={t}\n              i18nKey=\"panes.document-pane.document-unknown-type.text\"\n              values={{documentType}}\n            />\n          </Text>\n        )}\n\n        {!documentType && (\n          <Text as=\"p\">{t('panes.document-pane.document-unknown-type.without-schema.text')}</Text>\n        )}\n\n        {isDev && value && (\n          /* eslint-disable i18next/no-literal-string */\n          <>\n            <Text as=\"p\">Here is the JSON representation of the document:</Text>\n\n            <Card padding={3} overflow=\"auto\" radius={2} shadow={1} tone=\"inherit\">\n              <Code language=\"json\" size={[1, 1, 2]}>\n                {JSON.stringify(value, null, 2)}\n              </Code>\n            </Card>\n          </>\n          /* eslint-enable i18next/no-literal-string */\n        )}\n      </Stack>\n    </ErrorPane>\n  )\n}\n","import {DialogProvider, type DialogProviderProps, PortalProvider} from '@sanity/ui'\nimport {type Dispatch, type SetStateAction, useMemo} from 'react'\nimport {getSanityCreateLinkMetadata, useZIndex} from 'sanity'\n\nimport {TooltipDelayGroupProvider} from '../../../../ui-components/tooltipDelayGroupProvider/TooltipDelayGroupProvider'\nimport {PaneFooter} from '../../../components'\nimport {DOCUMENT_PANEL_PORTAL_ELEMENT} from '../../../constants'\nimport {DocumentStatusBar} from '../statusBar'\nimport {useDocumentPane} from '../useDocumentPane'\n\nconst DIALOG_PROVIDER_POSITION: DialogProviderProps['position'] = [\n  // We use the `position: fixed` for dialogs on narrower screens (first two media breakpoints).\n  'fixed',\n  'fixed',\n  // And we use the `position: absolute` strategy (within panes) on wide screens.\n  'absolute',\n]\n\nexport function DocumentLayoutFooter({\n  documentPanelPortalElement,\n  setFooterElement,\n  setActionsBoxElement,\n}: {\n  documentPanelPortalElement: HTMLElement | null\n  setFooterElement: Dispatch<SetStateAction<HTMLDivElement | null>>\n  setActionsBoxElement: Dispatch<SetStateAction<HTMLDivElement | null>>\n}) {\n  const zOffsets = useZIndex()\n\n  const {value} = useDocumentPane()\n  const portalElements = useMemo(\n    () => ({[DOCUMENT_PANEL_PORTAL_ELEMENT]: documentPanelPortalElement}),\n    [documentPanelPortalElement],\n  )\n\n  const createLinkMetadata = getSanityCreateLinkMetadata(value)\n  return (\n    // These providers are added because we want the dialogs in `DocumentStatusBar` to be scoped to the document pane\n    // The portal element comes from `DocumentPanel`.\n    <PortalProvider __unstable_elements={portalElements}>\n      <DialogProvider position={DIALOG_PROVIDER_POSITION} zOffset={zOffsets.portal}>\n        <PaneFooter ref={setFooterElement} padding={1}>\n          <TooltipDelayGroupProvider>\n            <DocumentStatusBar\n              actionsBoxRef={setActionsBoxElement}\n              createLinkMetadata={createLinkMetadata}\n            />\n          </TooltipDelayGroupProvider>\n        </PaneFooter>\n      </DialogProvider>\n    </PortalProvider>\n  )\n}\n","import {DialogProvider, type DialogProviderProps, Flex, useElementRect} from '@sanity/ui'\nimport {isHotkey} from 'is-hotkey-esm'\nimport {useCallback, useMemo, useState} from 'react'\nimport {\n  ChangeConnectorRoot,\n  type DocumentFieldActionNode,\n  type DocumentInspectorMenuItem,\n  FieldActionsProvider,\n  FieldActionsResolver,\n  GetFormValueProvider,\n  type Path,\n  useGlobalCopyPasteElementHandler,\n  useTranslation,\n  useZIndex,\n} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Pane, usePaneLayout, usePaneRouter} from '../../../components'\nimport {useDocumentIdStack} from '../../../hooks/useDocumentIdStack'\nimport {structureLocaleNamespace} from '../../../i18n'\nimport {useStructureTool} from '../../../useStructureTool'\nimport {\n  DOCUMENT_INSPECTOR_MIN_WIDTH,\n  DOCUMENT_PANEL_INITIAL_MIN_WIDTH,\n  DOCUMENT_PANEL_MIN_WIDTH,\n} from '../constants'\nimport {DocumentInspectorMenuItemsResolver} from '../DocumentInspectorMenuItemsResolver'\nimport {DocumentOperationResults} from '../DocumentOperationResults'\nimport {DocumentPanel} from '../documentPanel'\nimport {DocumentPanelHeader} from '../documentPanel/header'\nimport {DocumentActionShortcuts} from '../keyboardShortcuts'\nimport {getMenuItems} from '../menuItems'\nimport {useDocumentPane} from '../useDocumentPane'\nimport {DocumentLayoutError} from './DocumentLayoutError'\nimport {DocumentLayoutFooter} from './DocumentLayoutFooter'\n\nconst EMPTY_ARRAY: [] = []\n\nconst DIALOG_PROVIDER_POSITION: DialogProviderProps['position'] = [\n  // We use the `position: fixed` for dialogs on narrower screens (first two media breakpoints).\n  'fixed',\n  'fixed',\n  // And we use the `position: absolute` strategy (within panes) on wide screens.\n  'absolute',\n]\n\nconst StyledChangeConnectorRoot = styled(ChangeConnectorRoot)`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  min-height: 0;\n  min-width: 0;\n`\n\nexport function DocumentLayout() {\n  const {\n    changesOpen,\n    displayed,\n    documentId,\n    documentType,\n    editState,\n    fieldActions,\n    focusPath,\n    inspectOpen,\n    inspector,\n    inspectors,\n    onFocus,\n    onHistoryOpen,\n    onMenuAction,\n    onPathOpen,\n    paneKey,\n    schemaType,\n    value,\n    isInitialValueLoading,\n    ready,\n    previewUrl,\n  } = useDocumentPane()\n  const {params: paneParams} = usePaneRouter()\n  const {features} = useStructureTool()\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {collapsed: layoutCollapsed} = usePaneLayout()\n\n  const zOffsets = useZIndex()\n\n  const [rootElement, setRootElement] = useState<HTMLDivElement | null>(null)\n  const [footerElement, setFooterElement] = useState<HTMLDivElement | null>(null)\n  const [headerElement, setHeaderElement] = useState<HTMLDivElement | null>(null)\n\n  const [actionsBoxElement, setActionsBoxElement] = useState<HTMLDivElement | null>(null)\n  const [documentPanelPortalElement, setDocumentPanelPortalElement] = useState<HTMLElement | null>(\n    null,\n  )\n\n  useGlobalCopyPasteElementHandler({\n    element: rootElement,\n    focusPath,\n    value,\n  })\n\n  const [inspectorMenuItems, setInspectorMenuItems] = useState<DocumentInspectorMenuItem[]>([])\n  const [rootFieldActionNodes, setRootFieldActionNodes] = useState<DocumentFieldActionNode[]>([])\n\n  const footerRect = useElementRect(footerElement)\n  const headerRect = useElementRect(headerElement)\n  const footerHeight = footerRect?.height\n  const headerHeight = headerRect?.height\n  const currentMinWidth =\n    DOCUMENT_PANEL_INITIAL_MIN_WIDTH + (inspector ? DOCUMENT_INSPECTOR_MIN_WIDTH : 0)\n  const minWidth = DOCUMENT_PANEL_MIN_WIDTH + (inspector ? DOCUMENT_INSPECTOR_MIN_WIDTH : 0)\n\n  const currentInspector = useMemo(\n    () => inspectors?.find((i) => i.name === inspector?.name),\n    [inspectors, inspector?.name],\n  )\n\n  const documentIdStack = useDocumentIdStack({displayed, documentId, editState})\n\n  const hasValue = Boolean(value)\n\n  const menuItems = useMemo(\n    () =>\n      getMenuItems({\n        currentInspector,\n        features,\n        hasValue,\n        inspectorMenuItems,\n        inspectors,\n        previewUrl,\n        documentIdStack,\n        t,\n      }),\n    [\n      currentInspector,\n      documentIdStack,\n      features,\n      hasValue,\n      inspectorMenuItems,\n      inspectors,\n      previewUrl,\n      t,\n    ],\n  )\n\n  const handleKeyUp = useCallback(\n    (event: React.KeyboardEvent<HTMLDivElement>) => {\n      for (const item of menuItems) {\n        if (item.shortcut) {\n          if (isHotkey(item.shortcut, event)) {\n            event.preventDefault()\n            event.stopPropagation()\n            onMenuAction(item)\n            return\n          }\n        }\n      }\n    },\n    [onMenuAction, menuItems],\n  )\n\n  const onConnectorSetFocus = useCallback(\n    (path: Path) => {\n      onPathOpen(path)\n      onFocus(path)\n    },\n    [onPathOpen, onFocus],\n  )\n\n  if (!schemaType) {\n    return (\n      <DocumentLayoutError\n        currentMinWidth={currentMinWidth}\n        documentType={documentType}\n        minWidth={minWidth}\n        paneKey={paneKey}\n        value={value}\n      />\n    )\n  }\n\n  return (\n    <GetFormValueProvider value={value}>\n      {inspectors.length > 0 && (\n        <DocumentInspectorMenuItemsResolver\n          documentId={documentId}\n          documentType={documentType}\n          inspectors={inspectors}\n          onMenuItems={setInspectorMenuItems}\n        />\n      )}\n\n      {fieldActions.length > 0 && schemaType && (\n        <FieldActionsResolver\n          actions={fieldActions}\n          documentId={documentId}\n          documentType={documentType}\n          onActions={setRootFieldActionNodes}\n          path={EMPTY_ARRAY}\n          schemaType={schemaType}\n        />\n      )}\n\n      <FieldActionsProvider actions={rootFieldActionNodes} path={EMPTY_ARRAY}>\n        <DocumentActionShortcuts\n          actionsBoxElement={actionsBoxElement}\n          as={Pane}\n          currentMinWidth={currentMinWidth}\n          data-testid=\"document-pane\"\n          flex={2.5}\n          id={paneKey}\n          minWidth={minWidth}\n          onKeyUp={handleKeyUp}\n          rootRef={setRootElement}\n        >\n          <DocumentPanelHeader ref={setHeaderElement} menuItems={menuItems} />\n          <DialogProvider position={DIALOG_PROVIDER_POSITION} zOffset={zOffsets.paneDialog}>\n            <Flex direction=\"column\" flex={1} height={layoutCollapsed ? undefined : 'fill'}>\n              <StyledChangeConnectorRoot\n                data-testid=\"change-connector-root\"\n                isReviewChangesOpen={changesOpen && paneParams?.changesInspectorTab === 'review'}\n                onOpenReviewChanges={onHistoryOpen}\n                onSetFocus={onConnectorSetFocus}\n              >\n                <DocumentPanel\n                  footerHeight={footerHeight || null}\n                  headerHeight={headerHeight || null}\n                  isInspectOpen={inspectOpen}\n                  rootElement={rootElement}\n                  setDocumentPanelPortalElement={setDocumentPanelPortalElement}\n                  footer={\n                    <DocumentLayoutFooter\n                      documentPanelPortalElement={documentPanelPortalElement}\n                      setFooterElement={setFooterElement}\n                      setActionsBoxElement={setActionsBoxElement}\n                    />\n                  }\n                />\n              </StyledChangeConnectorRoot>\n            </Flex>\n          </DialogProvider>\n          <DocumentOperationResults />\n        </DocumentActionShortcuts>\n      </FieldActionsProvider>\n    </GetFormValueProvider>\n  )\n}\n","import {type ComponentType} from 'react'\nimport {type DocumentLayoutProps, useMiddlewareComponents} from 'sanity'\n\nimport {DocumentLayout} from './DocumentLayout'\nimport {pickDocumentLayoutComponent} from './pickDocumentLayoutComponent'\n\n/**\n * A hook that returns the document layout composed\n * by the Components API (`document.components.layout`).\n */\nexport function useDocumentLayoutComponent(): ComponentType<\n  Omit<DocumentLayoutProps, 'renderDefault'>\n> {\n  return useMiddlewareComponents({\n    pick: pickDocumentLayoutComponent,\n    defaultComponent: DocumentLayout,\n  })\n}\n","import {type SanityDocument} from '@sanity/types'\nimport {useEffect, useState} from 'react'\nimport {useHistoryStore, useTimelineSelector, useTimelineStore} from 'sanity'\n\nexport const useDocumentLastRev = (documentId: string, documentType: string) => {\n  const historyStore = useHistoryStore()\n  const [lastRevisionDocument, setLastRevisionDocument] = useState<SanityDocument | null>(null)\n  const [loading, setLoading] = useState(false)\n\n  // Get the timeline store to access lastNonDeletedRevId\n  // needs to be done this way because otherwise the revision id will not be the most updated\n  // in case if you edit the document in between deletes, for example\n  const timelineStore = useTimelineStore({\n    documentId,\n    documentType,\n  })\n\n  // Get the lastNonDeletedRevId from the timeline store\n  const lastNonDeletedRevId = useTimelineSelector(\n    timelineStore,\n    (state) => state.lastNonDeletedRevId,\n  )\n\n  useEffect(() => {\n    if (lastNonDeletedRevId && documentId) {\n      setLoading(true)\n      historyStore\n        .getDocumentAtRevision(documentId, lastNonDeletedRevId)\n        .then((document) => {\n          setLastRevisionDocument(document || null)\n          setLoading(false)\n        })\n        .catch(() => {\n          setLastRevisionDocument(null)\n          setLoading(false)\n        })\n    } else {\n      setLastRevisionDocument(null)\n      setLoading(false)\n    }\n  }, [documentId, lastNonDeletedRevId, historyStore])\n\n  return {lastRevisionDocument, loading}\n}\n","import {defineEvent} from '@sanity/telemetry'\n\n/**\n * @internal\n */\nexport const DocumentURLCopied = defineEvent({\n  name: 'DocumentURLCopied',\n  version: 1,\n  description: 'User copied document URL to clipboard',\n})\n","import {type Template} from 'sanity'\n\ninterface InitialValueOptions {\n  documentType: string\n  panePayload?: unknown\n  templateName?: string\n  templateParams?: Record<string, unknown>\n  urlTemplate?: string\n}\n\n/**\n * @internal\n */\nexport function getInitialValueTemplateOpts(\n  templates: Template[],\n  opts: InitialValueOptions,\n): {templateName: string; templateParams: Record<string, unknown>} {\n  const payload = opts.panePayload || {}\n  const structureNodeTemplate = opts.templateName\n\n  if (opts.urlTemplate && structureNodeTemplate && structureNodeTemplate !== opts.urlTemplate) {\n    console.warn(\n      `Conflicting templates: URL says \"${opts.urlTemplate}\", structure node says \"${structureNodeTemplate}\". Using \"${structureNodeTemplate}\".`,\n    )\n  }\n\n  const template = structureNodeTemplate || opts.urlTemplate\n  const typeTemplates = templates.filter((t) => t.schemaType === opts.documentType)\n\n  const templateParams = {\n    ...opts.templateParams,\n    ...(typeof payload === 'object' ? payload || {} : {}),\n  }\n\n  let templateName = template\n\n  // If we have not specified a specific template, and we only have a single\n  // template available for a schema type, use it\n  if (!template && typeTemplates.length === 1) {\n    templateName = typeTemplates[0].id\n  }\n\n  return {templateName: templateName!, templateParams}\n}\n","import {useMemo} from 'react'\nimport {useInitialValue, useTemplates, useUnique} from 'sanity'\n\nimport {type PaneRouterContextValue, usePaneRouter} from '../../components'\nimport {type DocumentPaneNode} from '../../types'\nimport {getInitialValueTemplateOpts} from './getInitialValueTemplateOpts'\n\nexport const useDocumentPaneInitialValue = ({\n  paneOptions,\n  documentType,\n  documentId,\n  params,\n}: {\n  paneOptions: DocumentPaneNode['options']\n  documentType: string\n  documentId: string\n  params: NonNullable<PaneRouterContextValue['params']>\n}) => {\n  const templates = useTemplates()\n  const paneRouter = usePaneRouter()\n  const panePayload = useUnique(paneRouter.payload)\n\n  const {templateName, templateParams} = useMemo(\n    () =>\n      getInitialValueTemplateOpts(templates, {\n        documentType,\n        templateName: paneOptions.template,\n        templateParams: paneOptions.templateParameters,\n        panePayload,\n        urlTemplate: params.template,\n      }),\n    [documentType, paneOptions, params.template, panePayload, templates],\n  )\n\n  const initialValueRaw = useInitialValue({\n    documentId,\n    documentType,\n    templateName,\n    templateParams,\n    version: params.version,\n  })\n\n  const initialValue = useUnique(initialValueRaw)\n  return initialValue\n}\n","import {useCallback, useEffect, useMemo, useRef, useState} from 'react'\nimport {type DocumentInspector, useSource} from 'sanity'\n\nimport {type PaneRouterContextValue} from '../../components'\nimport {type PaneMenuItem} from '../../types'\nimport {useStructureTool} from '../../useStructureTool'\nimport {HISTORY_INSPECTOR_NAME, INSPECT_ACTION_PREFIX} from './constants'\n\nexport function useDocumentPaneInspector({\n  documentId,\n  documentType,\n  params,\n  setParams,\n}: {\n  params: NonNullable<PaneRouterContextValue['params']>\n  documentId: string\n  documentType: string\n  setParams: (params: Record<string, string | undefined>) => void\n}) {\n  const {features} = useStructureTool()\n  const source = useSource()\n  const inspectorsResolver = source.document.inspectors\n\n  const inspectors: DocumentInspector[] = useMemo(\n    () => inspectorsResolver({documentId, documentType}),\n    [documentId, documentType, inspectorsResolver],\n  )\n\n  const [inspectorName, setInspectorName] = useState<string | null>(() => params.inspect || null)\n\n  // Handle inspector name changes from URL\n  const inspectParamRef = useRef<string | undefined>(params.inspect)\n  useEffect(() => {\n    if (inspectParamRef.current !== params.inspect) {\n      inspectParamRef.current = params.inspect\n      setInspectorName(params.inspect || null)\n    }\n  }, [params.inspect])\n\n  const currentInspector = useMemo(\n    () => inspectors?.find((i) => i.name === inspectorName),\n    [inspectors, inspectorName],\n  )\n  const historyInspector = useMemo(\n    () => inspectors.find((i) => i.name === HISTORY_INSPECTOR_NAME),\n    [inspectors],\n  )\n\n  const changesOpen = currentInspector?.name === HISTORY_INSPECTOR_NAME\n\n  const closeInspector = useCallback(\n    (closeInspectorName?: string) => {\n      const inspector = closeInspectorName && inspectors.find((i) => i.name === closeInspectorName)\n\n      if (closeInspectorName && !inspector) {\n        console.warn(`No inspector named \"${closeInspectorName}\"`)\n        return\n      }\n\n      if (!currentInspector) {\n        return\n      }\n\n      if (inspector) {\n        const result = inspector.onClose?.({params}) ?? {params}\n\n        setInspectorName(null)\n        inspectParamRef.current = undefined\n\n        setParams({...result.params, inspect: undefined})\n\n        return\n      }\n\n      if (currentInspector) {\n        const result = currentInspector.onClose?.({params}) ?? {params}\n\n        setInspectorName(null)\n        inspectParamRef.current = undefined\n\n        setParams({...result.params, inspect: undefined})\n      }\n    },\n    [currentInspector, inspectors, params, setParams],\n  )\n\n  const openInspector = useCallback(\n    (nextInspectorName: string, paneParams?: Record<string, string>) => {\n      const nextInspector = inspectors.find((i) => i.name === nextInspectorName)\n\n      if (!nextInspector) {\n        console.warn(`No inspector named \"${nextInspectorName}\"`)\n        return\n      }\n\n      // if the inspector is already open, only update params\n      if (currentInspector?.name === nextInspector.name) {\n        setParams({...params, ...paneParams, inspect: nextInspector.name})\n        return\n      }\n\n      let currentParams = params\n\n      if (currentInspector) {\n        const closeResult = nextInspector.onClose?.({params: currentParams}) ?? {\n          params: currentParams,\n        }\n\n        currentParams = closeResult.params\n      }\n\n      const result = nextInspector.onOpen?.({params: currentParams}) ?? {params: currentParams}\n\n      setInspectorName(nextInspector.name)\n      inspectParamRef.current = nextInspector.name\n\n      setParams({...result.params, ...paneParams, inspect: nextInspector.name})\n    },\n    [currentInspector, inspectors, params, setParams],\n  )\n  const handleHistoryClose = useCallback(() => {\n    if (historyInspector) {\n      closeInspector(historyInspector.name)\n    }\n  }, [closeInspector, historyInspector])\n\n  const handleHistoryOpen = useCallback(() => {\n    if (!features.reviewChanges) {\n      return\n    }\n\n    if (historyInspector) {\n      openInspector(historyInspector.name, {changesInspectorTab: 'review'})\n    }\n  }, [features.reviewChanges, openInspector, historyInspector])\n\n  const inspectOpen = params.inspect === 'on'\n\n  const toggleLegacyInspect = useCallback(\n    (toggle = !inspectOpen) => {\n      if (toggle) {\n        setParams({...params, inspect: 'on'})\n      } else {\n        setParams({...params, inspect: undefined})\n      }\n    },\n    [inspectOpen, params, setParams],\n  )\n\n  const handleLegacyInspectClose = useCallback(\n    () => toggleLegacyInspect(false),\n    [toggleLegacyInspect],\n  )\n\n  const handleInspectorAction = useCallback(\n    (item: PaneMenuItem) => {\n      if (item.action === 'inspect') {\n        toggleLegacyInspect(true)\n        return true\n      }\n\n      if (typeof item.action !== 'string') return false\n      const nextInspectorName = item.action.slice(INSPECT_ACTION_PREFIX.length)\n      const nextInspector = inspectors.find((i) => i.name === nextInspectorName)\n\n      if (nextInspector) {\n        if (nextInspector.name === inspectorName) {\n          closeInspector(nextInspector.name)\n        } else {\n          openInspector(nextInspector.name)\n        }\n        return true\n      }\n      return false\n    },\n    [closeInspector, inspectorName, inspectors, openInspector, toggleLegacyInspect],\n  )\n\n  return {\n    changesOpen,\n    currentInspector,\n    inspectors,\n    closeInspector,\n    openInspector,\n    handleHistoryClose,\n    handleHistoryOpen,\n    handleInspectorAction,\n    // TODO: Deprecate this legacy inspect toggle it's used to render the <InspectDialog /> component\n    handleLegacyInspectClose,\n    inspectOpen,\n  }\n}\n","import {type SanityDocument} from '@sanity/types'\nimport {useEffect, useMemo} from 'react'\nimport {useObservable} from 'react-rx'\nimport {BehaviorSubject, from, of} from 'rxjs'\nimport {catchError, debounceTime, distinctUntilChanged, switchMap} from 'rxjs/operators'\nimport {isRecord, useSource} from 'sanity'\n\nconst isSanityDocument = (value: unknown): value is SanityDocument =>\n  isRecord(value) && typeof value._id === 'string' && typeof value._type === 'string'\n\nexport function usePreviewUrl(value: Partial<SanityDocument> | undefined): string | undefined {\n  const {resolveProductionUrl} = useSource().document\n  const subject = useMemo(\n    () => new BehaviorSubject<Partial<SanityDocument> | undefined>(undefined),\n    [],\n  )\n\n  useEffect(() => {\n    subject.next(value)\n  }, [subject, value])\n\n  const resolvedUrlObservable = useMemo(() => {\n    return subject.asObservable().pipe(\n      // this so that the preview URL isn't fetched on every keystroke\n      distinctUntilChanged(),\n      debounceTime(500),\n      switchMap((document) =>\n        isSanityDocument(document) ? from(resolveProductionUrl({document})) : of(undefined),\n      ),\n      distinctUntilChanged(),\n      catchError((err) => {\n        const message =\n          isRecord(err) && typeof err.message === 'string' ? err.message : 'Unknown error'\n        throw new Error(`An error was thrown while trying to get your preview url: ${message}`)\n      }),\n    )\n  }, [resolveProductionUrl, subject])\n\n  return useObservable(resolvedUrlObservable)\n}\n","import {useTelemetry} from '@sanity/telemetry/react'\nimport {type ObjectSchemaType, type SanityDocument, type SanityDocumentLike} from '@sanity/types'\nimport {useToast} from '@sanity/ui'\nimport {fromString as pathFromString, resolveKeyedPath} from '@sanity/util/paths'\nimport {memo, useCallback, useEffect, useMemo, useRef, useState} from 'react'\nimport {\n  type DocumentActionsContext,\n  type DocumentActionsVersionType,\n  type DocumentFieldAction,\n  type EditStateFor,\n  EMPTY_ARRAY,\n  getPublishedId,\n  getReleaseIdFromReleaseDocumentId,\n  isCardinalityOneRelease,\n  isGoingToUnpublish,\n  isPerspectiveWriteable,\n  isVersionId,\n  type PartialContext,\n  useActiveReleases,\n  useCopyPaste,\n  useDocumentForm,\n  usePerspective,\n  useSchema,\n  useSource,\n  useStudioUrl,\n  useTranslation,\n  useUnique,\n  useWorkspace,\n} from 'sanity'\nimport {DocumentPaneContext} from 'sanity/_singletons'\n\nimport {usePaneRouter} from '../../components'\nimport {useDiffViewRouter} from '../../diffView/hooks/useDiffViewRouter'\nimport {useDocumentIdStack} from '../../hooks/useDocumentIdStack'\nimport {useDocumentLastRev} from '../../hooks/useDocumentLastRev'\nimport {structureLocaleNamespace} from '../../i18n'\nimport {type PaneMenuItem} from '../../types'\nimport {DocumentURLCopied} from './__telemetry__'\nimport {DEFAULT_MENU_ITEM_GROUPS, EMPTY_PARAMS, INSPECT_ACTION_PREFIX} from './constants'\nimport {type DocumentPaneContextValue} from './DocumentPaneContext'\nimport {\n  type DocumentPaneProviderProps as DocumentPaneProviderWrapperProps,\n  type HistoryStoreProps,\n} from './types'\nimport {useDocumentPaneInitialValue} from './useDocumentPaneInitialValue'\nimport {useDocumentPaneInspector} from './useDocumentPaneInspector'\nimport {usePreviewUrl} from './usePreviewUrl'\n\ninterface DocumentPaneProviderProps extends DocumentPaneProviderWrapperProps {\n  historyStore: HistoryStoreProps\n}\n\n/**\n * @internal\n */\n// eslint-disable-next-line max-statements\nexport const DocumentPaneProvider = memo((props: DocumentPaneProviderProps) => {\n  const {children, index, pane, paneKey, onFocusPath, forcedVersion, historyStore} = props\n  const {\n    store: timelineStore,\n    error: timelineError,\n    ready: timelineReady,\n    revisionDocument,\n    onOlderRevision,\n    sinceDocument,\n    isPristine,\n    revisionId,\n    lastNonDeletedRevId,\n  } = historyStore\n\n  const schema = useSchema()\n  const {setDocumentMeta} = useCopyPaste()\n  const {\n    document: {\n      actions: documentActions,\n      badges: documentBadges,\n      unstable_fieldActions: fieldActionsResolver,\n      unstable_languageFilter: languageFilterResolver,\n      drafts: {enabled: draftsEnabled},\n    },\n  } = useSource()\n  const telemetry = useTelemetry()\n  const paneRouter = usePaneRouter()\n  const setPaneParams = paneRouter.setParams\n  const {push: pushToast} = useToast()\n  const {\n    options,\n    menuItemGroups = DEFAULT_MENU_ITEM_GROUPS,\n    title = null,\n    views: viewsProp = [],\n  } = pane\n  const paneOptions = useUnique(options)\n  const documentIdRaw = paneOptions.id\n  const documentId = getPublishedId(documentIdRaw)\n  const documentType = options.type\n  const params = useUnique(paneRouter.params) || EMPTY_PARAMS\n  const {buildStudioUrl} = useStudioUrl()\n\n  const perspective = usePerspective()\n\n  const {\n    document: {\n      drafts: {enabled: isDraftModelEnabled},\n    },\n  } = useWorkspace()\n\n  const {selectedReleaseId, selectedPerspectiveName} = useMemo(() => {\n    // TODO: COREL - Remove this after updating sanity-assist to use <PerspectiveProvider>\n    if (forcedVersion) {\n      return forcedVersion\n    }\n\n    return {\n      selectedPerspectiveName: perspective.selectedPerspectiveName,\n      selectedReleaseId: perspective.selectedReleaseId,\n    }\n  }, [forcedVersion, perspective.selectedPerspectiveName, perspective.selectedReleaseId])\n\n  const diffViewRouter = useDiffViewRouter()\n\n  const initialValue = useDocumentPaneInitialValue({\n    paneOptions,\n    documentId,\n    documentType,\n    params,\n  })\n\n  const isInitialValueLoading = initialValue.loading\n  const {\n    changesOpen,\n    currentInspector,\n    inspectors,\n    closeInspector,\n    openInspector,\n    handleHistoryClose,\n    handleHistoryOpen,\n    handleInspectorAction,\n    inspectOpen,\n    handleLegacyInspectClose,\n  } = useDocumentPaneInspector({documentId, documentType, params, setParams: setPaneParams})\n\n  const [isDeleting, setIsDeleting] = useState(false)\n  const {lastRevisionDocument} = useDocumentLastRev(documentId, documentType)\n\n  /**\n   * Determine if the current document is deleted.\n   *\n   * When the timeline is available – we check for the absence of an editable document pair\n   * (both draft + published versions) as well as a non 'pristine' timeline (i.e. a timeline that consists\n   * of at least one chunk).\n   *\n   * In the _very rare_ case where the timeline cannot be loaded – we skip this check and always assume\n   * the document is NOT deleted. Since we can't accurately determine document deleted status without history,\n   * skipping this check means that in these cases, users will at least be able to create new documents\n   * without them being incorrectly marked as deleted.\n   */\n  const getIsDeleted = useCallback(\n    (editState: EditStateFor) => {\n      if (!timelineReady) return false\n      return (\n        Boolean(!editState?.draft && !editState?.published && !editState?.version) && !isPristine\n      )\n    },\n    [timelineReady, isPristine],\n  )\n\n  const getComparisonValue = useCallback(\n    (editState: EditStateFor) => {\n      return changesOpen ? sinceDocument || editState?.published : editState?.published || null\n    },\n    [changesOpen, sinceDocument],\n  )\n\n  const schemaType = schema.get(documentType) as ObjectSchemaType | undefined\n\n  const getIsReadOnly = useCallback(\n    (editState: EditStateFor): boolean => {\n      const isDeleted = getIsDeleted(editState)\n      const seeingHistoryDocument = Boolean(params.rev)\n      return (\n        seeingHistoryDocument ||\n        isDeleting ||\n        isDeleted ||\n        !isPerspectiveWriteable({\n          selectedPerspective: perspective.selectedPerspective,\n          isDraftModelEnabled,\n          schemaType,\n        }).result\n      )\n    },\n    [\n      getIsDeleted,\n      isDeleting,\n      isDraftModelEnabled,\n      params.rev,\n      perspective.selectedPerspective,\n      schemaType,\n    ],\n  )\n\n  const getDisplayed = useCallback(\n    (value: SanityDocumentLike) => {\n      if (onOlderRevision) {\n        return revisionDocument || {_id: value._id, _type: value._type}\n      }\n\n      // If the document is deleted (no draft, published, or version), return the last revision\n      const isDeleted = !value._createdAt && !value._updatedAt\n      if (isDeleted && lastNonDeletedRevId) {\n        // Return the fetched last revision document if available\n        if (lastRevisionDocument) {\n          return lastRevisionDocument\n        }\n      }\n\n      return value\n    },\n    [onOlderRevision, revisionDocument, lastNonDeletedRevId, lastRevisionDocument],\n  )\n\n  const {\n    editState,\n    connectionState,\n    focusPath,\n    onChange,\n    validation,\n    ready: formReady,\n    value,\n    formState,\n    permissions,\n    onPathOpen,\n    isPermissionsLoading,\n    formStateRef,\n    onProgrammaticFocus,\n\n    collapsedFieldSets,\n    collapsedPaths,\n    onBlur,\n    onFocus,\n    onSetActiveFieldGroup,\n    onSetCollapsedPath,\n    onSetCollapsedFieldSet,\n    openPath,\n  } = useDocumentForm({\n    changesOpen,\n    documentType,\n    documentId,\n    initialValue: initialValue,\n    comparisonValue: getComparisonValue,\n    releaseId: selectedReleaseId,\n    selectedPerspectiveName,\n    initialFocusPath: params.path ? pathFromString(params.path) : EMPTY_ARRAY,\n    readOnly: getIsReadOnly,\n    onFocusPath,\n    getFormDocumentValue: getDisplayed,\n  })\n\n  const {data: releases = []} = useActiveReleases()\n\n  const getDocumentVersionType = useCallback(() => {\n    let version: DocumentActionsVersionType\n    switch (true) {\n      case Boolean(params.rev):\n        version = 'revision'\n        break\n      case selectedReleaseId && isVersionId(value._id): {\n        // Check if this is a scheduled draft (cardinality one release)\n        const releaseDocument = releases.find(\n          (r) => getReleaseIdFromReleaseDocumentId(r._id) === selectedReleaseId,\n        )\n\n        if (releaseDocument && isCardinalityOneRelease(releaseDocument)) {\n          version = 'scheduled-draft'\n        } else {\n          version = 'version'\n        }\n        break\n      }\n      case selectedPerspectiveName === 'published':\n        version = 'published'\n        break\n      case draftsEnabled:\n        version = 'draft'\n        break\n      default:\n        version = 'published'\n    }\n\n    return version\n  }, [params.rev, selectedReleaseId, value._id, selectedPerspectiveName, draftsEnabled, releases])\n\n  const actionsPerspective = useMemo(() => getDocumentVersionType(), [getDocumentVersionType])\n\n  const documentActionsProps: PartialContext<DocumentActionsContext> = useMemo(\n    () => ({\n      schemaType: documentType,\n      documentId,\n      versionType: actionsPerspective,\n      releaseId: selectedReleaseId,\n    }),\n    [documentType, documentId, actionsPerspective, selectedReleaseId],\n  )\n\n  // Resolve document actions\n  const actions = useMemo(\n    () => documentActions(documentActionsProps),\n    [documentActions, documentActionsProps],\n  )\n\n  // Resolve document badges\n  const badges = useMemo(\n    () => documentBadges({schemaType: documentType, documentId}),\n    [documentBadges, documentId, documentType],\n  )\n\n  // Resolve document language filter\n  const languageFilter = useMemo(\n    () => languageFilterResolver({schemaType: documentType, documentId}),\n    [documentId, documentType, languageFilterResolver],\n  )\n\n  const views = useUnique(viewsProp)\n\n  const activeViewId = params.view || (views[0] && views[0].id) || null\n\n  // TODO: this may cause a lot of churn. May be a good idea to prevent these\n  // requests unless the menu is open somehow\n  const previewUrl = usePreviewUrl(value)\n\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const fieldActions: DocumentFieldAction[] = useMemo(\n    () => (schemaType ? fieldActionsResolver({documentId, documentType, schemaType}) : []),\n    [documentId, documentType, fieldActionsResolver, schemaType],\n  )\n\n  /**\n   * Note that in addition to connection and edit state, we also wait for a valid document timeline\n   * range to be loaded. This means if we're loading an older revision, the full transaction range must\n   * be loaded in full prior to the document being displayed.\n   *\n   * Previously, visiting studio URLs with timeline params would display the 'current' document and then\n   * 'snap' in the older revision, which was disorienting and could happen mid-edit.\n   *\n   * In the event that the timeline cannot be loaded due to TimelineController errors or blocked requests,\n   * we skip this readiness check to ensure that users aren't locked out of editing. Trying to select\n   * a timeline revision in this instance will display an error localized to the popover itself.\n   */\n  const ready = formReady && (!params.rev || timelineReady || !!timelineError)\n\n  const displayed: Partial<SanityDocument> | undefined = useMemo(\n    () => getDisplayed(value),\n    [getDisplayed, value],\n  )\n\n  const {previousId} = useDocumentIdStack({displayed, documentId, editState})\n\n  const setTimelineRange = useCallback(\n    (newSince: string, newRev: string | null) => {\n      setPaneParams({\n        ...params,\n        since: newSince,\n        rev: newRev || undefined,\n      })\n    },\n    [params, setPaneParams],\n  )\n\n  const handlePaneClose = useCallback(() => paneRouter.closeCurrent(), [paneRouter])\n\n  const handlePaneSplit = useCallback(() => paneRouter.duplicateCurrent(), [paneRouter])\n\n  const handleMenuAction = useCallback(\n    async (item: PaneMenuItem) => {\n      if (item.action === 'production-preview' && previewUrl) {\n        window.open(previewUrl)\n        return true\n      }\n\n      if (item.action === 'copy-document-url' && navigator) {\n        telemetry.log(DocumentURLCopied)\n        // Chose to copy the user's current URL instead of\n        // the document's edit intent link because\n        // of bugs when resolving a document that has\n        // multiple access paths within Structure\n        const copyUrl = buildStudioUrl({\n          coreUi: (url) => `${url}/intent/edit/id=${documentId};type=${documentType}`,\n        })\n        await navigator.clipboard.writeText(copyUrl)\n        pushToast({\n          id: 'copy-document-url',\n          status: 'info',\n          title: t('panes.document-operation-results.operation-success_copy-url'),\n        })\n        return true\n      }\n\n      if (item.action === 'reviewChanges') {\n        handleHistoryOpen()\n        return true\n      }\n\n      if (\n        item.action === 'inspect' ||\n        (typeof item.action === 'string' && item.action.startsWith(INSPECT_ACTION_PREFIX))\n      ) {\n        handleInspectorAction(item)\n      }\n\n      if (item.action === 'compareVersions' && typeof previousId !== 'undefined') {\n        diffViewRouter.navigateDiffView({\n          mode: 'version',\n          previousDocument: {\n            type: documentType,\n            id: previousId,\n          },\n          nextDocument: {\n            type: documentType,\n            id: value._id,\n          },\n        })\n        return true\n      }\n\n      return false\n    },\n    [\n      previewUrl,\n      previousId,\n      telemetry,\n      buildStudioUrl,\n      pushToast,\n      t,\n      documentId,\n      documentType,\n      handleHistoryOpen,\n      handleInspectorAction,\n      diffViewRouter,\n      value._id,\n    ],\n  )\n\n  useEffect(() => {\n    setDocumentMeta({\n      documentId,\n      documentType,\n      schemaType: schemaType!,\n      onChange,\n    })\n  }, [documentId, documentType, schemaType, onChange, setDocumentMeta])\n\n  const compareValue = useMemo(() => getComparisonValue(editState), [editState, getComparisonValue])\n  const isDeleted = useMemo(() => getIsDeleted(editState), [editState, getIsDeleted])\n  const revisionNotFound = onOlderRevision && !revisionDocument\n\n  const currentDisplayed = useMemo(() => {\n    if (editState.version && isGoingToUnpublish(editState.version)) {\n      return editState.published\n    }\n    return displayed\n  }, [editState.version, editState.published, displayed])\n\n  const documentPane: DocumentPaneContextValue = useMemo(\n    () =>\n      ({\n        actions,\n        activeViewId,\n        badges,\n        changesOpen,\n        closeInspector,\n        collapsedFieldSets,\n        collapsedPaths,\n        compareValue,\n        connectionState,\n        displayed: currentDisplayed,\n        documentId,\n        documentIdRaw,\n        documentType,\n        editState,\n        fieldActions,\n        focusPath,\n        inspector: currentInspector || null,\n        inspectors,\n        onBlur,\n        onChange,\n        onFocus,\n        onPathOpen,\n        onHistoryClose: handleHistoryClose,\n        onHistoryOpen: handleHistoryOpen,\n        onInspectClose: handleLegacyInspectClose,\n        onMenuAction: handleMenuAction,\n        onPaneClose: handlePaneClose,\n        onPaneSplit: handlePaneSplit,\n        onSetActiveFieldGroup,\n        onSetCollapsedPath,\n        onSetCollapsedFieldSet,\n        openInspector,\n        openPath,\n        index,\n        inspectOpen,\n        validation,\n        menuItemGroups: menuItemGroups || [],\n        paneKey,\n        previewUrl,\n        ready,\n        schemaType: schemaType!,\n        isPermissionsLoading,\n        isInitialValueLoading,\n        permissions,\n        setTimelineRange,\n        setIsDeleting,\n        isDeleting,\n        isDeleted,\n        timelineError,\n        timelineStore,\n        title,\n        value,\n        selectedReleaseId,\n        views,\n        formState,\n        unstable_languageFilter: languageFilter,\n        revisionId,\n        revisionNotFound,\n        lastNonDeletedRevId,\n        lastRevisionDocument,\n      }) satisfies DocumentPaneContextValue,\n    [\n      actions,\n      activeViewId,\n      badges,\n      changesOpen,\n      closeInspector,\n      collapsedFieldSets,\n      collapsedPaths,\n      compareValue,\n      connectionState,\n      currentDisplayed,\n      documentId,\n      documentIdRaw,\n      documentType,\n      editState,\n      fieldActions,\n      focusPath,\n      currentInspector,\n      inspectors,\n      onBlur,\n      onChange,\n      onFocus,\n      onPathOpen,\n      handleHistoryClose,\n      handleHistoryOpen,\n      handleLegacyInspectClose,\n      handleMenuAction,\n      handlePaneClose,\n      handlePaneSplit,\n      onSetActiveFieldGroup,\n      onSetCollapsedPath,\n      onSetCollapsedFieldSet,\n      openInspector,\n      openPath,\n      index,\n      inspectOpen,\n      validation,\n      menuItemGroups,\n      paneKey,\n      previewUrl,\n      ready,\n      schemaType,\n      isPermissionsLoading,\n      isInitialValueLoading,\n      permissions,\n      setTimelineRange,\n      isDeleting,\n      isDeleted,\n      timelineError,\n      timelineStore,\n      title,\n      value,\n      selectedReleaseId,\n      views,\n      formState,\n      languageFilter,\n      revisionId,\n      revisionNotFound,\n      lastNonDeletedRevId,\n      lastRevisionDocument,\n    ],\n  )\n\n  const pathRef = useRef<string | undefined>(undefined)\n  useEffect(() => {\n    if (ready && params.path) {\n      const {path, ...restParams} = params\n\n      // trigger a focus when `params.path` changes\n      if (path !== pathRef.current) {\n        const pathFromUrl = resolveKeyedPath(formStateRef.current?.value, pathFromString(path))\n        onProgrammaticFocus(pathFromUrl)\n      }\n\n      // remove the `path`-param from url after we have consumed it as the initial focus path\n      paneRouter.setParams(restParams)\n    }\n    pathRef.current = params.path\n\n    return undefined\n  }, [formStateRef, onProgrammaticFocus, paneRouter, params, ready])\n\n  return (\n    <DocumentPaneContext.Provider value={documentPane}>{children}</DocumentPaneContext.Provider>\n  )\n})\n\nDocumentPaneProvider.displayName = 'Memo(DocumentPaneProvider)'\n","import {type ObjectSchemaType} from '@sanity/types'\nimport {useMemo} from 'react'\nimport {\n  EMPTY_ARRAY,\n  EventsProvider,\n  getDraftId,\n  getPublishedId,\n  getReleaseIdFromReleaseDocumentId,\n  getVersionId,\n  isDeleteDocumentGroupEvent,\n  isDeleteDocumentVersionEvent,\n  PerspectiveProvider,\n  useArchivedReleases,\n  useEditState,\n  useEventsStore,\n  usePerspective,\n  useSchema,\n} from 'sanity'\n\nimport {usePaneRouter} from '../../components'\nimport {EMPTY_PARAMS} from './constants'\nimport {usePaneOptions} from './DocumentPane'\nimport {DocumentPaneProvider} from './DocumentPaneProvider'\nimport {type DocumentPaneProviderProps} from './types'\n\nexport const DocumentEventsPane = (props: DocumentPaneProviderProps) => {\n  const {params = EMPTY_PARAMS} = usePaneRouter()\n  const options = usePaneOptions(props.pane.options, params)\n  const schema = useSchema()\n  const documentType = options.type\n  const schemaType = schema.get(options.type) as ObjectSchemaType | undefined\n  const liveEdit = Boolean(schemaType?.liveEdit)\n\n  const {selectedPerspectiveName, selectedReleaseId, selectedPerspective} = usePerspective()\n  const {data: archivedReleases} = useArchivedReleases()\n  const editState = useEditState(\n    getPublishedId(options.id),\n    documentType,\n    'default',\n    selectedReleaseId,\n  )\n\n  const showingPublishedOnDraft = liveEdit && selectedPerspective === 'drafts' && !editState?.draft\n  const {rev, since} = params\n  const historyVersion = params.historyVersion\n\n  const documentId = useMemo(() => {\n    if (showingPublishedOnDraft) {\n      return getPublishedId(options.id)\n    }\n    if (\n      historyVersion &&\n      archivedReleases.some(\n        (release) => getReleaseIdFromReleaseDocumentId(release._id) === historyVersion,\n      )\n    ) {\n      // Check if we have a release that matches with this historyVersion\n      return getVersionId(options.id, historyVersion)\n    }\n    if (typeof selectedPerspectiveName === 'undefined') {\n      return getDraftId(options.id)\n    }\n    if (selectedPerspectiveName === 'published') {\n      return getPublishedId(options.id)\n    }\n    if (selectedReleaseId) {\n      return getVersionId(options.id, selectedPerspectiveName)\n    }\n    return options.id\n  }, [\n    archivedReleases,\n    historyVersion,\n    selectedPerspectiveName,\n    options.id,\n    showingPublishedOnDraft,\n    selectedReleaseId,\n  ])\n\n  const eventsStore = useEventsStore({documentId, documentType: options.type, rev, since})\n\n  const historyStoreProps = useMemo(\n    () => ({\n      error: eventsStore.error,\n      revisionId: eventsStore.revision?.revisionId || null,\n      onOlderRevision: Boolean(rev && !eventsStore.revision?.loading),\n      revisionDocument: eventsStore.revision?.document || null,\n      sinceDocument: eventsStore.sinceRevision?.document || null,\n      ready: !eventsStore.loading,\n      isPristine: Boolean(eventsStore.events.length === 0),\n      lastNonDeletedRevId:\n        eventsStore.events.find(\n          (e) => !isDeleteDocumentGroupEvent(e) && !isDeleteDocumentVersionEvent(e),\n        )?.id || null,\n    }),\n    [eventsStore, rev],\n  )\n\n  const value = useMemo(() => eventsStore, [eventsStore])\n\n  return (\n    <EventsProvider value={value}>\n      {historyVersion ? (\n        <PerspectiveProvider\n          selectedPerspectiveName={historyVersion}\n          excludedPerspectives={EMPTY_ARRAY}\n        >\n          <DocumentPaneProvider {...props} historyStore={historyStoreProps} />\n        </PerspectiveProvider>\n      ) : (\n        <DocumentPaneProvider {...props} historyStore={historyStoreProps} />\n      )}\n    </EventsProvider>\n  )\n}\n","import {type SanityDocument} from '@sanity/types'\nimport {useMemo, useState} from 'react'\nimport {getPublishedId, useTimelineSelector, useTimelineStore} from 'sanity'\n\nimport {usePaneRouter} from '../../components'\nimport {EMPTY_PARAMS} from './constants'\nimport {usePaneOptions} from './DocumentPane'\nimport {DocumentPaneProvider} from './DocumentPaneProvider'\nimport {type DocumentPaneProviderProps} from './types'\n\nexport const DocumentPaneWithLegacyTimelineStore = (props: DocumentPaneProviderProps) => {\n  const {pane} = props\n  const paneRouter = usePaneRouter()\n  const options = usePaneOptions(pane.options, paneRouter.params)\n\n  const params = paneRouter.params || EMPTY_PARAMS\n\n  const [timelineError, setTimelineError] = useState<Error | null>(null)\n\n  const store = useTimelineStore({\n    documentId: getPublishedId(options.id),\n    documentType: options.type,\n    onError: setTimelineError,\n    rev: params.rev,\n    since: params.since,\n  })\n\n  const onOlderRevision = useTimelineSelector(store, (state) => state.onOlderRevision)\n  const revTime = useTimelineSelector(store, (state) => state.revTime)\n  const sinceAttributes = useTimelineSelector(store, (state) => state.sinceAttributes)\n  const timelineDisplayed = useTimelineSelector(store, (state) => state.timelineDisplayed)\n  const timelineReady = useTimelineSelector(store, (state) => state.timelineReady)\n  const isPristine = useTimelineSelector(store, (state) => state.isPristine)\n  const lastNonDeletedRevId = useTimelineSelector(store, (state) => state.lastNonDeletedRevId)\n\n  const historyStoreProps = useMemo(\n    () => ({\n      store,\n      error: timelineError,\n      revisionId: revTime?.id || null,\n      onOlderRevision: onOlderRevision,\n      revisionDocument: timelineDisplayed as SanityDocument | null,\n      sinceDocument: sinceAttributes as SanityDocument | null,\n      ready: timelineReady,\n      isPristine: Boolean(isPristine),\n      lastNonDeletedRevId,\n    }),\n    [\n      store,\n      timelineError,\n      revTime?.id,\n      onOlderRevision,\n      timelineDisplayed,\n      sinceAttributes,\n      timelineReady,\n      isPristine,\n      lastNonDeletedRevId,\n    ],\n  )\n  return <DocumentPaneProvider {...props} historyStore={historyStoreProps} />\n}\n","import {type ReactNode, useContext, useEffect, useMemo} from 'react'\nimport {\n  getVersionFromId,\n  isCardinalityOnePerspective,\n  LATEST,\n  type PerspectiveContextValue,\n  PUBLISHED,\n  useDocumentVersions,\n  useSetPerspective,\n  useWorkspace,\n} from 'sanity'\nimport {PerspectiveContext, RawPerspectiveContext} from 'sanity/_singletons'\n\n// Clears URL for cardinality one releases when document doesn't exist in selected release\nconst DocumentPerspectiveResetHandler = ({documentId}: {documentId: string}) => {\n  const rawContext = useContext(RawPerspectiveContext)\n  const {data: documentVersions, loading: documentVersionsLoading} = useDocumentVersions({\n    documentId,\n  })\n  const setPerspective = useSetPerspective()\n\n  useEffect(() => {\n    if (documentVersionsLoading || !rawContext) {\n      return\n    }\n\n    if (!isCardinalityOnePerspective(rawContext.selectedPerspective)) {\n      return\n    }\n\n    if (!documentVersions?.length) {\n      setPerspective(undefined)\n      return\n    }\n\n    const releasesIds = documentVersions.map((id) => getVersionFromId(id))\n    const documentExistsInRelease = releasesIds.includes(rawContext.selectedReleaseId!)\n\n    if (!documentExistsInRelease) {\n      setPerspective(undefined)\n    }\n  }, [documentId, rawContext, documentVersions, documentVersionsLoading, setPerspective])\n\n  return null\n}\n\n/**\n * @internal\n * Exposes cardinality one releases as selectedPerspective through PerspectiveContext\n */\nexport function DocumentPerspectiveProvider({\n  children,\n  documentId,\n}: {\n  children: ReactNode\n  documentId: string\n}) {\n  const rawContext = useContext(RawPerspectiveContext)\n  const mappedContext = useContext(PerspectiveContext)\n  const {data: documentVersions, loading: documentVersionsLoading} = useDocumentVersions({\n    documentId,\n  })\n\n  const {\n    document: {\n      drafts: {enabled: isDraftModelEnabled},\n    },\n  } = useWorkspace()\n  const defaultPerspective = isDraftModelEnabled ? LATEST : PUBLISHED\n\n  const value = useMemo<PerspectiveContextValue | null>(() => {\n    if (!rawContext || !mappedContext) return mappedContext\n\n    if (!isCardinalityOnePerspective(rawContext.selectedPerspective)) {\n      return mappedContext\n    }\n\n    // Default to drafts while loading or if no versions exist\n    if (documentVersionsLoading || !documentVersions?.length) {\n      return {\n        ...mappedContext,\n        selectedPerspective: defaultPerspective,\n        selectedPerspectiveName: undefined,\n        selectedReleaseId: undefined,\n      }\n    }\n\n    const releasesIds = documentVersions.map((id) => getVersionFromId(id))\n    const documentExistsInRelease = releasesIds.includes(rawContext.selectedReleaseId!)\n\n    // use drafts if document doesn't exist in the selected cardinality one release\n    if (!documentExistsInRelease) {\n      return {\n        ...mappedContext,\n        selectedPerspective: defaultPerspective,\n        selectedPerspectiveName: undefined,\n        selectedReleaseId: undefined,\n      }\n    }\n\n    // Use raw unmapped values when document exists in cardinality one release\n    return {\n      ...mappedContext,\n      selectedPerspective: rawContext.selectedPerspective,\n      selectedPerspectiveName: rawContext.selectedPerspectiveName,\n      selectedReleaseId: rawContext.selectedReleaseId,\n    }\n  }, [rawContext, mappedContext, documentVersionsLoading, documentVersions, defaultPerspective])\n\n  if (!value) {\n    return <>{children}</>\n  }\n\n  return (\n    <PerspectiveContext.Provider value={value}>\n      {children}\n      <DocumentPerspectiveResetHandler documentId={documentId} />\n    </PerspectiveContext.Provider>\n  )\n}\n","import {memo} from 'react'\nimport {getPublishedId, useSource} from 'sanity'\n\nimport {DocumentEventsPane} from './DocumentEventsPane'\nimport {DocumentPaneWithLegacyTimelineStore} from './DocumentPaneLegacyTimeline'\nimport {DocumentPerspectiveProvider} from './DocumentPerspectiveProvider'\nimport {type DocumentPaneProviderProps} from './types'\n\n/**\n * @internal\n */\nexport const DocumentPaneProviderWrapper = memo((props: DocumentPaneProviderProps) => {\n  const source = useSource()\n  const documentId = getPublishedId(props.itemId)\n\n  return (\n    <DocumentPerspectiveProvider documentId={documentId}>\n      {source.beta?.eventsAPI?.documents ? (\n        <DocumentEventsPane {...props} />\n      ) : (\n        <DocumentPaneWithLegacyTimelineStore {...props} />\n      )}\n    </DocumentPerspectiveProvider>\n  )\n})\nDocumentPaneProviderWrapper.displayName = 'Memo(DocumentPaneProviderWrapper)'\n","import {useEffect, useRef} from 'react'\nimport {usePerspective} from 'sanity'\nimport {useEffectEvent} from 'use-effect-event'\n\nimport {usePaneRouter} from '../../components'\nimport {EMPTY_PARAMS} from './constants'\n\n/**\n * This hooks takes care of resetting the history related params when the perspective changes.\n * It needs to be placed in a stable component, like the `DocumentPane`, which won't be unmounted when the perspective changes.\n */\nexport function useResetHistoryParams() {\n  const {params = EMPTY_PARAMS, setParams} = usePaneRouter()\n\n  const {selectedPerspectiveName} = usePerspective()\n  const isMounted = useRef(false)\n\n  const updateHistoryParams = useEffectEvent((_perspective?: string) => {\n    // Check if any of the history related params are set, and reset them, don't unnecessarily update the params\n    const PARAMS_TO_UPDATE = ['since', 'historyVersion', 'rev', 'preserveRev']\n    const shouldUpdateParams = PARAMS_TO_UPDATE.some((param) => params[param])\n    if (!shouldUpdateParams) return\n\n    setParams({\n      ...params,\n      // Reset the history related params when the perspective changes, as they don't make sense\n      // in the context of the new perspective - preserveRev is used when setting draft revision.\n      rev: params.preserveRev === 'true' ? params.rev : undefined,\n      preserveRev: undefined,\n      since: undefined,\n      historyVersion: undefined,\n    })\n  })\n  useEffect(() => {\n    // Skip the first run to avoid resetting the params on initial load\n    if (isMounted.current) {\n      updateHistoryParams(selectedPerspectiveName)\n    }\n  }, [selectedPerspectiveName])\n\n  useEffect(() => {\n    isMounted.current = true\n    return () => {\n      isMounted.current = false\n    }\n  }, [])\n}\n","import {type Path} from '@sanity/types'\nimport {Stack, Text} from '@sanity/ui'\nimport {fromString as pathFromString} from '@sanity/util/paths'\nimport {memo, useMemo} from 'react'\nimport {\n  CopyPasteProvider,\n  ReferenceInputOptionsProvider,\n  SourceProvider,\n  Translate,\n  useDocumentType,\n  usePerspective,\n  useSource,\n  useTemplatePermissions,\n  useTemplates,\n  useTranslation,\n} from 'sanity'\n\nimport {usePaneRouter} from '../../components'\nimport {DiffViewDocumentLayout} from '../../diffView/plugin/DiffViewDocumentLayout'\nimport {structureLocaleNamespace} from '../../i18n'\nimport {type DocumentPaneNode} from '../../types'\nimport {ErrorPane} from '../error'\nimport {LoadingPane} from '../loading'\nimport {CommentsWrapper} from './comments'\nimport {useDocumentLayoutComponent} from './document-layout'\nimport {DocumentPaneProviderWrapper} from './DocumentPaneProviderWrapper'\nimport {type DocumentPaneProviderProps} from './types'\nimport {useResetHistoryParams} from './useResetHistoryParams'\n\ntype DocumentPaneOptions = DocumentPaneNode['options']\n\n/**\n * @internal\n */\nexport const DocumentPane = memo(function DocumentPane(props: DocumentPaneProviderProps) {\n  const {name: parentSourceName} = useSource()\n\n  return (\n    <SourceProvider name={props.pane.source || parentSourceName}>\n      <CopyPasteProvider>\n        <DocumentPaneInner {...props} />\n      </CopyPasteProvider>\n    </SourceProvider>\n  )\n})\n\nfunction DocumentPaneInner(props: DocumentPaneProviderProps) {\n  const {pane, paneKey} = props\n  const {resolveNewDocumentOptions} = useSource().document\n  const {selectedPerspectiveName} = usePerspective()\n  const paneRouter = usePaneRouter()\n  const options = usePaneOptions(pane.options, paneRouter.params)\n  const {documentType, isLoaded: isDocumentLoaded} = useDocumentType(options.id, options.type)\n  useResetHistoryParams()\n  const DocumentLayout = useDocumentLayoutComponent()\n\n  // The templates that should be creatable from inside this document pane.\n  // For example, from the \"Create new\" menu in reference inputs.\n  const templateItems = useMemo(() => {\n    return resolveNewDocumentOptions({\n      type: 'document',\n      documentId: options.id,\n      schemaType: options.type,\n    })\n  }, [options.id, options.type, resolveNewDocumentOptions])\n\n  const [templatePermissions, isTemplatePermissionsLoading] = useTemplatePermissions({\n    templateItems,\n  })\n  const isLoaded = isDocumentLoaded && !isTemplatePermissionsLoading\n\n  const providerProps = useMemo(() => {\n    return isLoaded && documentType && options.type !== documentType\n      ? mergeDocumentType(props, options, documentType)\n      : props\n  }, [props, documentType, isLoaded, options])\n\n  const {ReferenceChildLink, handleEditReference, groupIndex, routerPanesState} = paneRouter\n  const childParams = routerPanesState[groupIndex + 1]?.[0].params || {}\n  const routerPanesStateLength = routerPanesState.length\n  const {parentRefPath} = childParams\n\n  const activePath: {path: Path; state: 'selected' | 'pressed' | 'none'} = useMemo(() => {\n    return parentRefPath\n      ? {\n          path: pathFromString(parentRefPath),\n          state:\n            groupIndex >= routerPanesStateLength - 1\n              ? 'none'\n              : groupIndex >= routerPanesStateLength - 2\n                ? 'selected'\n                : 'pressed',\n        }\n      : {path: [], state: 'none'}\n  }, [parentRefPath, groupIndex, routerPanesStateLength])\n\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  if (options.type === '*' && !isLoaded) {\n    return (\n      <LoadingPane\n        flex={2.5}\n        minWidth={320}\n        paneKey={paneKey}\n        title={t('panes.document-pane.document-not-found.loading')}\n      />\n    )\n  }\n\n  if (!documentType) {\n    return (\n      <ErrorPane\n        flex={2.5}\n        minWidth={320}\n        paneKey={paneKey}\n        title={t('panes.document-pane.document-not-found.title')}\n      >\n        <Stack space={4}>\n          <Text as=\"p\">\n            <Translate\n              t={t}\n              i18nKey=\"panes.document-pane.document-not-found.text\"\n              values={{id: options.id}}\n              components={{Code: ({children}) => <code>{children}</code>}}\n            />\n          </Text>\n        </Stack>\n      </ErrorPane>\n    )\n  }\n\n  return (\n    <DocumentPaneProviderWrapper\n      // this needs to be here to avoid formState from being re-used across (incompatible) document types\n      // see https://github.com/sanity-io/sanity/discussions/3794 for a description of the problem\n      key={`${documentType}-${options.id}-${selectedPerspectiveName || ''}`}\n      {...providerProps}\n    >\n      {/* NOTE: this is a temporary location for this provider until we */}\n      {/* stabilize the reference input options formally in the form builder */}\n      <ReferenceInputOptionsProvider\n        EditReferenceLinkComponent={ReferenceChildLink}\n        onEditReference={handleEditReference}\n        initialValueTemplateItems={templatePermissions}\n        activePath={activePath}\n      >\n        <DiffViewDocumentLayout documentId={options.id} documentType={options.type}>\n          <CommentsWrapper documentId={options.id} documentType={options.type}>\n            <DocumentLayout documentId={options.id} documentType={options.type} />\n          </CommentsWrapper>\n        </DiffViewDocumentLayout>\n      </ReferenceInputOptionsProvider>\n    </DocumentPaneProviderWrapper>\n  )\n}\n\n/**\n * @internal\n */\nexport function usePaneOptions(\n  options: DocumentPaneOptions,\n  params: Record<string, string | undefined> = {},\n): DocumentPaneOptions {\n  const templates = useTemplates()\n\n  return useMemo(() => {\n    // The document type is provided, so return\n    if (options.type && options.type !== '*') {\n      return options\n    }\n\n    // Attempt to derive document type from the template configuration\n    const templateName = options.template || params.template\n    const template = templateName ? templates.find((t) => t.id === templateName) : undefined\n    const documentType = template?.schemaType\n\n    // No document type was found in a template\n    if (!documentType) {\n      return options\n    }\n\n    // The template provided the document type, so modify the pane’s `options` property\n    return {...options, type: documentType}\n  }, [options, params.template, templates])\n}\n\nfunction mergeDocumentType(\n  props: DocumentPaneProviderProps,\n  options: DocumentPaneOptions,\n  documentType: string,\n): DocumentPaneProviderProps {\n  return {\n    ...props,\n    pane: {\n      ...props.pane,\n      options: {...options, type: documentType},\n    },\n  }\n}\n","import {type ComponentType, type ForwardedRef, forwardRef, useContext, useMemo} from 'react'\nimport {PaneRouterContext} from 'sanity/_singletons'\nimport {StateLink} from 'sanity/router'\n\nimport {type BackLinkProps} from './types'\n\n/**\n * @internal\n */\nexport const BackLink = forwardRef(function BackLink(\n  props: BackLinkProps,\n  ref: ForwardedRef<HTMLAnchorElement>,\n) {\n  const {routerPanesState, groupIndex} = useContext(PaneRouterContext)\n  const panes = useMemo(() => routerPanesState.slice(0, groupIndex), [groupIndex, routerPanesState])\n  const state = useMemo(() => ({panes}), [panes])\n\n  return <StateLink {...props} ref={ref} state={state} />\n}) as ComponentType<BackLinkProps>\n","import {type ForwardedRef, forwardRef, useContext} from 'react'\nimport {PaneRouterContext} from 'sanity/_singletons'\nimport {StateLink} from 'sanity/router'\n\nimport {type ChildLinkProps} from './types'\n\n/**\n * @internal\n */\nexport const ChildLink = forwardRef(function ChildLink(\n  props: ChildLinkProps,\n  ref: ForwardedRef<HTMLAnchorElement>,\n) {\n  const {childId, childPayload, childParameters, ...rest} = props\n  const {routerPanesState, groupIndex} = useContext(PaneRouterContext)\n\n  return (\n    <StateLink\n      {...rest}\n      ref={ref}\n      state={{\n        panes: [\n          ...routerPanesState.slice(0, groupIndex + 1),\n          [{id: childId, params: childParameters, payload: childPayload}],\n        ],\n      }}\n    />\n  )\n})\n","import {type ForwardedRef, forwardRef, type ReactNode, useContext, useMemo} from 'react'\nimport {useUnique} from 'sanity'\nimport {PaneRouterContext} from 'sanity/_singletons'\nimport {StateLink} from 'sanity/router'\n\ninterface ParameterizedLinkProps {\n  params?: Record<string, string>\n  payload?: unknown\n  children?: ReactNode\n}\n\n/**\n * @internal\n */\nexport const ParameterizedLink = forwardRef(function ParameterizedLink(\n  props: ParameterizedLinkProps,\n  ref: ForwardedRef<HTMLAnchorElement>,\n) {\n  const {routerPanesState: currentPanes, groupIndex, siblingIndex} = useContext(PaneRouterContext)\n  const {params, payload, ...rest} = props\n  const nextParams = useUnique(params)\n  const nextPayload = useUnique(payload)\n\n  const nextState = useMemo(() => {\n    const currentGroup = currentPanes[groupIndex]\n    const currentSibling = currentGroup[siblingIndex]\n\n    const nextSibling = {\n      ...currentSibling,\n      params: nextParams ?? currentSibling.params,\n      payload: nextPayload ?? currentSibling.payload,\n    }\n\n    const nextGroup = [\n      ...currentGroup.slice(0, siblingIndex),\n      nextSibling,\n      ...currentGroup.slice(siblingIndex + 1),\n    ]\n\n    const nextPanes = [\n      ...currentPanes.slice(0, groupIndex),\n      nextGroup,\n      ...currentPanes.slice(groupIndex + 1),\n    ]\n\n    return {panes: nextPanes}\n  }, [currentPanes, groupIndex, nextParams, nextPayload, siblingIndex])\n\n  return <StateLink ref={ref} {...rest} state={nextState} />\n})\n","import {toString as pathToString} from '@sanity/util/paths'\nimport {type ForwardedRef, forwardRef} from 'react'\n\nimport {ChildLink} from './ChildLink'\nimport {type ReferenceChildLinkProps} from './types'\n\nexport const ReferenceChildLink = forwardRef(function ReferenceChildLink(\n  {documentId, documentType, parentRefPath, children, template, ...rest}: ReferenceChildLinkProps,\n  ref: ForwardedRef<HTMLAnchorElement>,\n) {\n  return (\n    <ChildLink\n      {...rest}\n      ref={ref}\n      childId={documentId}\n      childPayload={template?.params}\n      childParameters={{\n        type: documentType,\n        parentRefPath: pathToString(parentRefPath),\n        ...(template && {template: template?.id}),\n      }}\n    >\n      {children}\n    </ChildLink>\n  )\n})\n","import {toString as pathToString} from '@sanity/util/paths'\nimport {omit} from 'lodash'\nimport {type ReactNode, useCallback, useMemo} from 'react'\nimport {PaneRouterContext} from 'sanity/_singletons'\nimport {useRouter, useRouterState} from 'sanity/router'\n\nimport {type RouterPaneGroup, type RouterPanes, type RouterPaneSibling} from '../../types'\nimport {usePaneLayout} from '../pane/usePaneLayout'\nimport {BackLink} from './BackLink'\nimport {ChildLink} from './ChildLink'\nimport {ParameterizedLink} from './ParameterizedLink'\nimport {ReferenceChildLink} from './ReferenceChildLink'\nimport {type PaneRouterContextValue} from './types'\n\nconst emptyArray: never[] = []\n\n/**\n * @internal\n */\nexport function PaneRouterProvider(props: {\n  children: ReactNode\n  flatIndex: number\n  index: number\n  params: Record<string, string | undefined>\n  payload: unknown\n  siblingIndex: number\n}) {\n  const {children, flatIndex, index, params, payload, siblingIndex} = props\n  const {navigate, navigateIntent, resolvePathFromState} = useRouter()\n  const routerState = useRouterState()\n  const {panes, expand} = usePaneLayout()\n  const routerPaneGroups: RouterPaneGroup[] = useMemo(\n    () => (routerState?.panes || emptyArray) as RouterPanes,\n    [routerState?.panes],\n  )\n  const lastPane = useMemo(() => panes?.[panes.length - 2], [panes])\n\n  const groupIndex = index - 1\n\n  const createNextRouterState = useCallback(\n    (modifier: (siblings: RouterPaneGroup, item: RouterPaneSibling) => RouterPaneGroup) => {\n      const currentGroup = routerPaneGroups[groupIndex] || []\n      const currentItem = currentGroup[siblingIndex]\n      const nextGroup = modifier(currentGroup, currentItem)\n      const nextPanes = [\n        ...routerPaneGroups.slice(0, groupIndex),\n        nextGroup,\n        ...routerPaneGroups.slice(groupIndex + 1),\n      ]\n      const nextRouterState = {...routerState, panes: nextPanes}\n\n      return nextRouterState\n    },\n    [groupIndex, routerPaneGroups, routerState, siblingIndex],\n  )\n\n  const modifyCurrentGroup = useCallback(\n    (modifier: (siblings: RouterPaneGroup, item: RouterPaneSibling) => RouterPaneGroup) => {\n      const nextRouterState = createNextRouterState(modifier)\n      setTimeout(() => navigate(nextRouterState), 0)\n      return nextRouterState\n    },\n    [createNextRouterState, navigate],\n  )\n\n  const createPathWithParams: PaneRouterContextValue['createPathWithParams'] = useCallback(\n    (nextParams) => {\n      const nextRouterState = createNextRouterState((siblings, item) => [\n        ...siblings.slice(0, siblingIndex),\n        {...item, params: nextParams},\n        ...siblings.slice(siblingIndex + 1),\n      ])\n\n      return resolvePathFromState(nextRouterState)\n    },\n    [createNextRouterState, resolvePathFromState, siblingIndex],\n  )\n\n  const setPayload: PaneRouterContextValue['setPayload'] = useCallback(\n    (nextPayload) => {\n      modifyCurrentGroup((siblings, item) => [\n        ...siblings.slice(0, siblingIndex),\n        {...item, payload: nextPayload},\n        ...siblings.slice(siblingIndex + 1),\n      ])\n    },\n    [modifyCurrentGroup, siblingIndex],\n  )\n\n  const setParams: PaneRouterContextValue['setParams'] = useCallback(\n    (nextParams) => {\n      modifyCurrentGroup((siblings, item) => [\n        ...siblings.slice(0, siblingIndex),\n        {...item, params: nextParams},\n        ...siblings.slice(siblingIndex + 1),\n      ])\n    },\n    [modifyCurrentGroup, siblingIndex],\n  )\n\n  const handleEditReference: PaneRouterContextValue['handleEditReference'] = useCallback(\n    ({id, parentRefPath, type, template, version}) => {\n      navigate({\n        panes: [\n          ...routerPaneGroups.slice(0, groupIndex + 1),\n          [\n            {\n              id,\n              params: {\n                template: template.id,\n                parentRefPath: pathToString(parentRefPath),\n                type,\n                version,\n              },\n              payload: template.params,\n            },\n          ],\n        ],\n      })\n    },\n    [groupIndex, navigate, routerPaneGroups],\n  )\n\n  const ctx: PaneRouterContextValue = useMemo(\n    () => ({\n      // Zero-based index (position) of pane, visually\n      index: flatIndex,\n\n      // Zero-based index of pane group (within URL structure)\n      groupIndex,\n\n      // Zero-based index of pane within sibling group\n      siblingIndex,\n\n      // Payload of the current pane\n      payload,\n\n      // Params of the current pane\n      params,\n\n      // Whether or not the pane has any siblings (within the same group)\n      hasGroupSiblings: routerPaneGroups[groupIndex]\n        ? routerPaneGroups[groupIndex].length > 1\n        : false,\n\n      // The length of the current group\n      groupLength: routerPaneGroups[groupIndex] ? routerPaneGroups[groupIndex].length : 0,\n\n      // Current router state for the \"panes\" property\n      routerPanesState: routerPaneGroups,\n\n      // Curried StateLink that passes the correct state automatically\n      ChildLink,\n\n      // Curried StateLink that pops off the last pane group\n      // Only pass if this is not the first pane\n      BackLink: flatIndex ? BackLink : undefined,\n\n      // A specialized `ChildLink` that takes in the needed props to open a\n      // referenced document to the right\n      ReferenceChildLink,\n\n      // Similar to `ReferenceChildLink` expect without the wrapping component\n      handleEditReference,\n\n      // Curried StateLink that passed the correct state, but merges params/payload\n      ParameterizedLink,\n\n      // Replaces the current pane with a new one\n      replaceCurrent: (opts = {}): void => {\n        modifyCurrentGroup(() => [\n          {id: opts.id || '', payload: opts.payload, params: opts.params || {}},\n        ])\n      },\n\n      // Removes the current pane from the group\n      closeCurrent: (): void => {\n        modifyCurrentGroup((siblings, item) =>\n          siblings.length > 1 ? siblings.filter((sibling) => sibling !== item) : siblings,\n        )\n      },\n\n      // Removes all panes to the right including current\n      closeCurrentAndAfter: (expandLast = true): void => {\n        if (expandLast && lastPane) {\n          expand(lastPane.element)\n        }\n        navigate({\n          panes: routerPaneGroups.slice(0, groupIndex),\n        })\n      },\n\n      // Duplicate the current pane, with optional overrides for payload, parameters\n      duplicateCurrent: (options): void => {\n        modifyCurrentGroup((siblings, item) => {\n          const duplicatedItem = {\n            ...item,\n            payload: options?.payload || item.payload,\n            params: options?.params || item.params,\n          }\n\n          return [\n            ...siblings.slice(0, siblingIndex),\n            duplicatedItem,\n            ...siblings.slice(siblingIndex),\n          ]\n        })\n      },\n\n      // Set the view for the current pane\n      setView: (viewId) => {\n        const restParams = omit(params, 'view')\n        return setParams(viewId ? {...restParams, view: viewId} : restParams)\n      },\n\n      // Set the parameters for the current pane\n      setParams,\n\n      // Set the payload for the current pane\n      setPayload,\n\n      // A function that returns a path with the given parameters\n      createPathWithParams,\n\n      // Proxied navigation to a given intent. Consider just exposing `router` instead?\n      navigateIntent,\n    }),\n    [\n      flatIndex,\n      groupIndex,\n      siblingIndex,\n      payload,\n      params,\n      routerPaneGroups,\n      handleEditReference,\n      setParams,\n      setPayload,\n      createPathWithParams,\n      navigateIntent,\n      modifyCurrentGroup,\n      lastPane,\n      navigate,\n      expand,\n    ],\n  )\n\n  return <PaneRouterContext.Provider value={ctx}>{children}</PaneRouterContext.Provider>\n}\n","import {Box, Text} from '@sanity/ui'\nimport {isRecord, Translate, useTranslation} from 'sanity'\n\nimport {Pane, PaneContent, PaneHeader} from '../../components/pane'\nimport {structureLocaleNamespace} from '../../i18n'\n\ninterface UnknownPaneProps {\n  isSelected: boolean\n  pane: unknown\n  paneKey: string\n}\n\n/**\n * @internal\n */\nexport function UnknownPane(props: UnknownPaneProps) {\n  const {isSelected, pane, paneKey} = props\n  const type = (isRecord(pane) && pane.type) || null\n  const {t} = useTranslation(structureLocaleNamespace)\n  return (\n    <Pane id={paneKey} selected={isSelected}>\n      <PaneHeader title={t('panes.unknown-pane-type.title')} />\n      <PaneContent>\n        <Box padding={4}>\n          {typeof type === 'string' ? (\n            <Text as=\"p\" muted>\n              <Translate\n                t={t}\n                i18nKey=\"panes.unknown-pane-type.unknown-type.text\"\n                values={{type}}\n              />\n            </Text>\n          ) : (\n            <Text as=\"p\" muted>\n              <Translate t={t} i18nKey=\"panes.unknown-pane-type.missing-type.text\" />\n            </Text>\n          )}\n        </Box>\n      </PaneContent>\n    </Pane>\n  )\n}\n","import {isEqual} from 'lodash'\nimport {lazy, memo, Suspense} from 'react'\n\nimport {PaneRouterProvider} from '../components/paneRouter'\nimport {type PaneNode} from '../types'\nimport {LoadingPane} from './loading'\nimport {UnknownPane} from './unknown'\n\ninterface StructureToolPaneProps {\n  active: boolean\n  childItemId: string | null\n  groupIndex: number\n  index: number\n  itemId: string\n  pane: PaneNode\n  paneKey: string\n  params: Record<string, string | undefined> & {perspective?: string}\n  payload: unknown\n  path: string\n  selected: boolean\n  siblingIndex: number\n}\n\n// TODO: audit this creates separate chunks\nconst paneMap = {\n  component: lazy(() => import('./userComponent')),\n  document: lazy(() => import('./document/pane')),\n  documentList: lazy(() => import('./documentList/pane')),\n  list: lazy(() => import('./list')),\n}\n\n/**\n * NOTE: The same pane might appear multiple times (split pane), so use index as tiebreaker\n *\n * @internal\n */\nexport const StructureToolPane = memo(\n  function StructureToolPane(props: StructureToolPaneProps) {\n    const {\n      active,\n      childItemId,\n      groupIndex,\n      index,\n      itemId,\n      pane,\n      paneKey,\n      params,\n      payload,\n      path,\n      selected,\n      siblingIndex,\n    } = props\n\n    const PaneComponent = paneMap[pane.type] || UnknownPane\n\n    return (\n      <PaneRouterProvider\n        flatIndex={index}\n        index={groupIndex}\n        params={params}\n        payload={payload}\n        siblingIndex={siblingIndex}\n      >\n        <Suspense fallback={<LoadingPane paneKey={paneKey} path={path} selected={selected} />}>\n          <PaneComponent\n            childItemId={childItemId || ''}\n            index={index}\n            itemId={itemId}\n            isActive={active}\n            isSelected={selected}\n            paneKey={paneKey}\n            // @ts-expect-error TS doesn't know how to handle this intersection\n            pane={pane}\n          />\n        </Suspense>\n      </PaneRouterProvider>\n    )\n  },\n  (\n    {params: prevParams = {}, payload: prevPayload = null, ...prev},\n    {params: nextParams = {}, payload: nextPayload = null, ...next},\n  ) => {\n    // deeply compare these objects (it's okay, they're small)\n    if (!isEqual(prevParams, nextParams)) return false\n    if (!isEqual(prevPayload, nextPayload)) return false\n\n    const keys = new Set([...Object.keys(prev), ...Object.keys(next)]) as Set<\n      keyof typeof next | keyof typeof prev\n    >\n\n    // then shallow equal the rest\n    for (const key of keys) {\n      if (prev[key] !== next[key]) return false\n    }\n\n    return true\n  },\n)\n","import {type SanityDocumentLike} from '@sanity/types'\nimport {useSchema, useTranslation} from 'sanity'\n\nimport {structureLocaleNamespace} from '../i18n'\nimport {useDocumentTitle} from '../panes'\n\nexport interface DocTitleProps {\n  document: SanityDocumentLike\n}\n\nexport function DocTitle(props: DocTitleProps) {\n  const {document: documentValue} = props\n  const schema = useSchema()\n  const schemaType = schema.get(documentValue._type)\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {title} = useDocumentTitle()\n\n  if (!schemaType) {\n    return <code>{t('doc-title.unknown-schema-type.text', {schemaType: documentValue._type})}</code>\n  }\n\n  return (\n    <>\n      {title || (\n        <span style={{color: 'var(--card-muted-fg-color)'}}>{t('doc-title.fallback.text')}</span>\n      )}\n    </>\n  )\n}\n","import {InfoOutlineIcon} from '@sanity/icons'\nimport {Box, Flex, Inline, rem, Text} from '@sanity/ui'\nimport {useTranslation} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Tooltip} from '../../../ui-components'\nimport {structureLocaleNamespace} from '../../i18n'\n\nexport const ChevronWrapper = styled(Box)`\n  margin-left: auto;\n`\n\nexport const CrossDatasetReferencesDetails = styled.details`\n  flex: none;\n\n  &[open] ${ChevronWrapper} {\n    transform: rotate(180deg);\n  }\n`\n\nexport const CrossDatasetReferencesSummary = styled.summary`\n  list-style: none;\n\n  &::-webkit-details-marker {\n    display: none;\n  }\n`\n\nexport const Table = styled.table`\n  width: 100%;\n  text-align: left;\n  padding: 0 ${({theme}) => rem(theme.sanity.space[2])};\n  border-collapse: collapse;\n\n  th {\n    padding: ${({theme}) => rem(theme.sanity.space[1])};\n  }\n\n  td {\n    padding: 0 ${({theme}) => rem(theme.sanity.space[1])};\n  }\n\n  tr > *:last-child {\n    text-align: right;\n  }\n`\n\nexport const DocumentIdFlex = styled(Flex)`\n  min-height: 33px;\n`\n\nexport const OtherReferenceCount = (props: {totalCount: number; references: unknown[]}) => {\n  const {t} = useTranslation(structureLocaleNamespace)\n  const difference = props.totalCount - props.references.length\n\n  if (!difference) return null\n\n  return (\n    <Box padding={2}>\n      <Inline space={2}>\n        <Text size={1} muted>\n          {t('confirm-delete-dialog.other-reference-count.title', {count: difference})}\n        </Text>\n\n        <Tooltip\n          portal\n          placement=\"top\"\n          content={t('confirm-delete-dialog.other-reference-count.tooltip')}\n        >\n          <Text size={1} muted>\n            <InfoOutlineIcon />\n          </Text>\n        </Tooltip>\n      </Inline>\n    </Box>\n  )\n}\n","import {type SanityDocument, type SchemaType} from '@sanity/types'\nimport {Flex} from '@sanity/ui'\nimport {type ComponentType, useMemo} from 'react'\nimport {useObservable} from 'react-rx'\nimport {\n  type DocumentPresence,\n  DocumentPreviewPresence,\n  type DocumentPreviewStore,\n  DocumentStatus,\n  DocumentStatusIndicator,\n  type GeneralPreviewLayoutKey,\n  getPreviewStateObservable,\n  getPreviewValueWithFallback,\n  SanityDefaultPreview,\n  useDocumentVersionInfo,\n  usePerspective,\n} from 'sanity'\n\nimport {TooltipDelayGroupProvider} from '../../../ui-components'\n\nexport interface PaneItemPreviewProps {\n  documentPreviewStore: DocumentPreviewStore\n  icon: ComponentType | false\n  layout: GeneralPreviewLayoutKey\n  presence?: DocumentPresence[]\n  schemaType: SchemaType\n  value: SanityDocument\n}\n\n/**\n * Preview component for _documents_ rendered in structure panes.\n *\n * Note that non-document previews are not handled by this component,\n * despite being pane items! Non-document previews bypass this entirely\n * and are rendered by `<SanityDefaultPreview>`.\n */\nexport function PaneItemPreview(props: PaneItemPreviewProps) {\n  const {icon, layout, presence, schemaType, value} = props\n\n  const versionsInfo = useDocumentVersionInfo(value._id)\n\n  const {perspectiveStack} = usePerspective()\n  const previewStateObservable = useMemo(() => {\n    return getPreviewStateObservable(\n      props.documentPreviewStore,\n      schemaType,\n      value._id,\n      perspectiveStack,\n    )\n  }, [props.documentPreviewStore, schemaType, value._id, perspectiveStack])\n\n  const {\n    snapshot,\n    original,\n    isLoading: previewIsLoading,\n  } = useObservable(previewStateObservable, {\n    snapshot: null,\n    isLoading: true,\n    original: null,\n  })\n\n  const isLoading = previewIsLoading\n\n  const status = isLoading ? null : (\n    <TooltipDelayGroupProvider>\n      <Flex align=\"center\" gap={3}>\n        {presence && presence.length > 0 && <DocumentPreviewPresence presence={presence} />}\n        <DocumentStatusIndicator\n          draft={versionsInfo.draft}\n          published={versionsInfo.published}\n          versions={versionsInfo.versions}\n        />\n      </Flex>\n    </TooltipDelayGroupProvider>\n  )\n\n  const tooltip = (\n    <DocumentStatus\n      draft={versionsInfo.draft}\n      published={versionsInfo.published}\n      versions={versionsInfo.versions}\n    />\n  )\n\n  return (\n    <SanityDefaultPreview\n      {...getPreviewValueWithFallback({snapshot, original, fallback: value})}\n      isPlaceholder={isLoading}\n      icon={icon}\n      layout={layout}\n      status={status}\n      tooltip={tooltip}\n    />\n  )\n}\n","import {type SanityDocument, type SchemaType} from '@sanity/types'\nimport {type ReactNode, useCallback} from 'react'\nimport {\n  type FIXME,\n  getPublishedId,\n  PreviewCard,\n  useDocumentPresence,\n  useDocumentPreviewStore,\n} from 'sanity'\n\nimport {PaneItemPreview} from '../paneItem/PaneItemPreview'\nimport {usePaneRouter} from '../paneRouter'\n\nconst EMPTY_ARRAY: [] = []\n\ninterface ReferencePreviewLinkProps {\n  onClick?: () => void\n  type: SchemaType & {icon?: any}\n  value: SanityDocument\n}\n\nexport function ReferencePreviewLink(props: ReferencePreviewLinkProps) {\n  const {onClick, type, value} = props\n  const publishedId = getPublishedId(value?._id)\n  const documentPresence = useDocumentPresence(publishedId)\n  const documentPreviewStore = useDocumentPreviewStore()\n  const {ReferenceChildLink} = usePaneRouter()\n\n  const Link = useCallback(\n    function LinkComponent(linkProps: {children: ReactNode}) {\n      return (\n        <ReferenceChildLink\n          documentId={value?._id}\n          documentType={type?.name}\n          parentRefPath={EMPTY_ARRAY}\n          {...linkProps}\n        />\n      )\n    },\n    [ReferenceChildLink, type?.name, value?._id],\n  )\n\n  return (\n    <PreviewCard __unstable_focusRing as={Link as FIXME} data-as=\"a\" onClick={onClick} radius={2}>\n      <PaneItemPreview\n        documentPreviewStore={documentPreviewStore}\n        icon={type?.icon}\n        layout=\"compact\"\n        presence={documentPresence?.length > 0 ? documentPresence : EMPTY_ARRAY}\n        schemaType={type}\n        value={value}\n      />\n    </PreviewCard>\n  )\n}\n","import {\n  ChevronDownIcon,\n  CopyIcon,\n  DocumentsIcon,\n  UnknownIcon,\n  WarningOutlineIcon,\n} from '@sanity/icons'\nimport {Box, Card, Flex, Stack, Text, useToast} from '@sanity/ui'\nimport {useCallback} from 'react'\nimport {SanityDefaultPreview, Translate, useSchema, useTranslation} from 'sanity'\n\nimport {Button} from '../../../ui-components'\nimport {structureLocaleNamespace} from '../../i18n'\nimport {\n  ChevronWrapper,\n  CrossDatasetReferencesDetails,\n  CrossDatasetReferencesSummary,\n  DocumentIdFlex,\n  OtherReferenceCount,\n  Table,\n} from './ConfirmDeleteDialogBody.styles'\nimport {ReferencePreviewLink} from './ReferencePreviewLink'\nimport {type ReferringDocuments} from './useReferringDocuments'\n\ntype DeletionConfirmationDialogBodyProps = Required<ReferringDocuments> & {\n  documentTitle: React.ReactNode\n  action: 'unpublish' | 'delete'\n  onReferenceLinkClick?: () => void\n}\n\n/**\n * The inner part of the `ConfirmDeleteDialog`. This is ran when both the\n * `crossDatasetReferences` and `internalReferences` are loaded.\n */\nexport function ConfirmDeleteDialogBody({\n  crossDatasetReferences,\n  internalReferences,\n  documentTitle,\n  totalCount,\n  action,\n  datasetNames,\n  hasUnknownDatasetNames,\n  onReferenceLinkClick,\n}: DeletionConfirmationDialogBodyProps) {\n  const schema = useSchema()\n  const toast = useToast()\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const renderPreviewItem = useCallback(\n    (item: any) => {\n      const type = schema.get(item._type)\n      if (type) {\n        return <ReferencePreviewLink type={type} value={item} onClick={onReferenceLinkClick} />\n      }\n\n      return (\n        // Padding added to match the ReferencePreviewLink styling\n        <Box padding={2}>\n          <SanityDefaultPreview\n            icon={UnknownIcon}\n            title={t('confirm-delete-dialog.preview-item.preview-unavailable.title')}\n            subtitle={t('confirm-delete-dialog.preview-item.preview-unavailable.subtitle', {\n              documentId: item._id,\n            })}\n            layout=\"default\"\n          />\n        </Box>\n      )\n    },\n    [schema, t, onReferenceLinkClick],\n  )\n\n  if (internalReferences?.totalCount === 0 && crossDatasetReferences?.totalCount === 0) {\n    return (\n      <Text as=\"p\" size={1}>\n        <Translate\n          t={t}\n          i18nKey=\"confirm-delete-dialog.confirmation.text\"\n          context={action}\n          components={{DocumentTitle: () => <strong>{documentTitle}</strong>}}\n        />\n      </Text>\n    )\n  }\n\n  // We do some extra checks to handle cases where you have unavailable dataset\n  // name(s) due to permissions, both alone and in combination with known datasets\n\n  // This normalizes one or more undefined dataset names to the catch-all `unavailable`\n  const normalizedDatasetNames = [\n    ...datasetNames,\n    ...(hasUnknownDatasetNames ? ['unavailable'] : []),\n  ]\n\n  const datasetSubtitle = t('confirm-delete-dialog.cdr-summary.subtitle', {\n    count: normalizedDatasetNames.length,\n    datasets: normalizedDatasetNames.join(', '),\n    context: hasUnknownDatasetNames && normalizedDatasetNames.length ? 'unavailable' : '',\n  })\n\n  return (\n    <Flex direction=\"column\" gap={4}>\n      <Card padding={3} radius={2} tone=\"caution\" flex=\"none\">\n        <Flex>\n          <Text aria-hidden=\"true\" size={1}>\n            <WarningOutlineIcon />\n          </Text>\n          <Box flex={1} marginLeft={3}>\n            <Text size={1}>\n              <Translate\n                i18nKey=\"confirm-delete-dialog.referring-document-count.text\"\n                components={{DocumentTitle: () => documentTitle}}\n                t={t}\n                values={{count: totalCount}}\n              />\n            </Text>\n          </Box>\n        </Flex>\n      </Card>\n      <Box flex=\"none\">\n        <Text size={1}>\n          <Translate\n            i18nKey=\"confirm-delete-dialog.referring-documents-descriptor.text\"\n            t={t}\n            context={action}\n            components={{DocumentTitle: () => documentTitle}}\n          />\n        </Text>\n      </Box>\n      <Card radius={2} shadow={1} flex=\"auto\" padding={2}>\n        <Flex direction=\"column\">\n          {internalReferences.totalCount > 0 && (\n            <Stack as=\"ul\" marginBottom={2} space={2} data-testid=\"internal-references\">\n              {internalReferences?.references.map((item) => (\n                <Box key={item._id} as=\"li\">\n                  {renderPreviewItem(item)}\n                </Box>\n              ))}\n\n              {internalReferences.totalCount > internalReferences.references.length && (\n                <Box as=\"li\" padding={3}>\n                  <OtherReferenceCount {...internalReferences} />\n                </Box>\n              )}\n            </Stack>\n          )}\n\n          {crossDatasetReferences.totalCount > 0 && (\n            <CrossDatasetReferencesDetails\n              data-testid=\"cross-dataset-references\"\n              style={{\n                // only add the border if needed\n                borderTop:\n                  internalReferences.totalCount > 0\n                    ? '1px solid var(--card-shadow-outline-color)'\n                    : undefined,\n              }}\n            >\n              <CrossDatasetReferencesSummary>\n                <Card\n                  as=\"a\"\n                  marginTop={internalReferences.totalCount > 0 ? 2 : 0}\n                  radius={2}\n                  shadow={1}\n                  paddingY={1}\n                >\n                  <Flex align=\"center\" gap={3} paddingX={3} paddingY={1}>\n                    <Text size={1}>\n                      <DocumentsIcon />\n                    </Text>\n                    <Stack space={2}>\n                      <Text textOverflow=\"ellipsis\" size={1}>\n                        {t('confirm-delete-dialog.cdr-summary.title', {\n                          count: normalizedDatasetNames.length,\n                          documentCount: t('confirm-delete-dialog.cdr-summary.document-count', {\n                            count: crossDatasetReferences.totalCount,\n                          }),\n                        })}\n                      </Text>\n                      <Text title={datasetSubtitle} textOverflow=\"ellipsis\" size={1} muted>\n                        {datasetSubtitle}\n                      </Text>\n                    </Stack>\n                    <ChevronWrapper>\n                      <Text muted size={1}>\n                        <ChevronDownIcon />\n                      </Text>\n                    </ChevronWrapper>\n                  </Flex>\n                </Card>\n              </CrossDatasetReferencesSummary>\n\n              <Box overflow=\"auto\" paddingTop={2}>\n                <Table>\n                  <thead>\n                    <tr>\n                      <th>\n                        <Text muted size={1} style={{minWidth: '5rem'}} weight=\"medium\">\n                          {t('confirm-delete-dialog.cdr-table.project-id.label')}\n                        </Text>\n                      </th>\n                      <th>\n                        <Text muted size={1} weight=\"medium\">\n                          {t('confirm-delete-dialog.cdr-table.dataset.label')}\n                        </Text>\n                      </th>\n                      <th>\n                        <Text muted size={1} weight=\"medium\">\n                          {t('confirm-delete-dialog.cdr-table.document-id.label')}\n                        </Text>\n                      </th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {crossDatasetReferences.references\n                      .filter((reference): reference is Required<typeof reference> => {\n                        return 'projectId' in reference\n                      })\n                      .map(({projectId, datasetName, documentId}, index) => (\n                        <tr key={`${documentId}-${index}`}>\n                          <td>\n                            <Text size={1}>{projectId}</Text>\n                          </td>\n                          <td>\n                            <Text size={1}>{datasetName || 'unavailable'}</Text>\n                          </td>\n                          <td>\n                            <DocumentIdFlex align=\"center\" gap={2} justify=\"flex-end\">\n                              <Text textOverflow=\"ellipsis\" size={1}>\n                                {documentId || 'unavailable'}\n                              </Text>\n                              {documentId && (\n                                <Button\n                                  mode=\"bleed\"\n                                  icon={CopyIcon}\n                                  tooltipProps={{\n                                    content: t(\n                                      'confirm-delete-dialog.cdr-table.copy-id-button.tooltip',\n                                    ),\n                                  }}\n                                  onClick={() => {\n                                    navigator.clipboard.writeText(documentId).catch(() => {\n                                      toast.push({\n                                        status: 'error',\n                                        title: t(\n                                          'confirm-delete-dialog.cdr-table.id-copied-toast.title-failed',\n                                        ),\n                                      })\n                                    })\n                                  }}\n                                />\n                              )}\n                            </DocumentIdFlex>\n                          </td>\n                        </tr>\n                      ))}\n                  </tbody>\n                </Table>\n\n                <OtherReferenceCount {...crossDatasetReferences} />\n              </Box>\n            </CrossDatasetReferencesDetails>\n          )}\n        </Flex>\n      </Card>\n      <Box flex=\"none\">\n        <Text size={1}>\n          <Translate\n            i18nKey=\"confirm-delete-dialog.referential-integrity-disclaimer.text\"\n            t={t}\n            context={action}\n            components={{DocumentTitle: () => documentTitle}}\n          />\n        </Text>\n      </Box>\n    </Flex>\n  )\n}\n","import {type ClientError, type SanityClient} from '@sanity/client'\nimport {useMemo} from 'react'\nimport {EMPTY, fromEvent, type Observable, of, timer} from 'rxjs'\nimport {\n  catchError,\n  distinctUntilChanged,\n  map,\n  shareReplay,\n  startWith,\n  switchMap,\n} from 'rxjs/operators'\nimport {\n  type AvailabilityResponse,\n  createHookFromObservableFactory,\n  DEFAULT_STUDIO_CLIENT_OPTIONS,\n  type DocumentStore,\n  getDraftId,\n  getPublishedId,\n  useClient,\n  useDocumentStore,\n} from 'sanity'\n\n// this is used in place of `instanceof` so the matching can be more robust and\n// won't have any issues with dual packages etc\n// https://nodejs.org/api/packages.html#dual-package-hazard\nfunction isClientError(e: unknown): e is ClientError {\n  if (typeof e !== 'object') return false\n  if (!e) return false\n  return 'statusCode' in e && 'response' in e\n}\n\nconst POLL_INTERVAL = 5000\n\n// only fetches when the document is visible\nlet visiblePoll$: Observable<number>\nconst getVisiblePoll$ = () => {\n  if (!visiblePoll$) {\n    visiblePoll$ = fromEvent(document, 'visibilitychange').pipe(\n      // add empty emission to have this fire on creation\n      startWith(null),\n      map(() => document.visibilityState === 'visible'),\n      distinctUntilChanged(),\n      switchMap((visible) =>\n        visible\n          ? // using timer instead of interval since timer will emit on creation\n            timer(0, POLL_INTERVAL)\n          : EMPTY,\n      ),\n      shareReplay({refCount: true, bufferSize: 1}),\n    )\n  }\n  return visiblePoll$\n}\n\nexport type ReferringDocuments = {\n  isLoading: boolean\n  totalCount: number\n  projectIds: string[]\n  datasetNames: string[]\n  hasUnknownDatasetNames: boolean\n  internalReferences?: {\n    totalCount: number\n    references: Array<{_id: string; _type: string}>\n  }\n  crossDatasetReferences?: {\n    totalCount: number\n    references: Array<{\n      /**\n       * The project ID of the document that is currently referencing the subject\n       * document. Unlike `documentId` and `datasetName`, this should always be\n       * defined.\n       */\n      projectId: string\n      /**\n       * The ID of the document that is currently referencing the subject\n       * document. This will be omitted if there is no access to the current\n       * project and dataset pair (e.g. if no `sanity-project-token` were\n       * configured)\n       */\n      documentId?: string\n      /**\n       * The dataset name that is currently referencing the subject document.\n       * This will be omitted if there is no access to the current project and\n       * dataset pair (e.g. if no `sanity-project-token` were configured)\n       */\n      datasetName?: string\n    }>\n  }\n}\n\nfunction getDocumentExistence(\n  documentId: string,\n  {versionedClient}: {versionedClient: SanityClient},\n): Observable<string | undefined> {\n  const draftId = getDraftId(documentId)\n  const publishedId = getPublishedId(documentId)\n  const requestOptions = {\n    uri: versionedClient.getDataUrl('doc', `${draftId},${publishedId}`),\n    json: true,\n    query: {excludeContent: 'true'},\n    tag: 'use-referring-documents.document-existence',\n  }\n  return versionedClient.observable.request<AvailabilityResponse>(requestOptions).pipe(\n    map(({omitted}) => {\n      const nonExistant = omitted.filter((doc) => doc.reason === 'existence')\n      if (nonExistant.length === 2) {\n        // None of the documents exist\n        return undefined\n      }\n\n      if (nonExistant.length === 0) {\n        // Both exist, so use the published one\n        return publishedId\n      }\n\n      // If the draft does not exist, use the published ID, and vice versa\n      return nonExistant.some((doc) => doc.id === draftId) ? publishedId : draftId\n    }),\n  )\n}\n\n/**\n * fetches the cross-dataset references using the client observable.request\n * method (for that requests can be automatically cancelled)\n */\nfunction fetchCrossDatasetReferences(\n  documentId: string,\n  context: {versionedClient: SanityClient},\n): Observable<ReferringDocuments['crossDatasetReferences']> {\n  const {versionedClient} = context\n\n  return getVisiblePoll$().pipe(\n    switchMap(() => getDocumentExistence(documentId, context)),\n    switchMap((checkDocumentId) => {\n      if (!checkDocumentId) {\n        return of({totalCount: 0, references: []})\n      }\n\n      const currentDataset = versionedClient.config().dataset\n\n      return versionedClient.observable\n        .request({\n          url: `/data/references/${currentDataset}/documents/${checkDocumentId}/to?excludeInternalReferences=true&excludePaths=true`,\n          tag: 'use-referring-documents.external',\n        })\n        .pipe(\n          catchError((e) => {\n            // it's possible that referencing document doesn't exist yet so the\n            // API will return a 404. In those cases, we want to catch and return\n            // a response with no references\n            if (isClientError(e) && e.statusCode === 404) {\n              return of({totalCount: 0, references: []})\n            }\n\n            throw e\n          }),\n        )\n    }),\n  )\n}\n\nconst useInternalReferences = createHookFromObservableFactory(\n  ([documentId, documentStore]: [string, DocumentStore]) => {\n    const referencesClause = '*[references($documentId)][0...100]{_id,_type}'\n    const totalClause = 'count(*[references($documentId)])'\n    const fetchQuery = `{\"references\":${referencesClause},\"totalCount\":${totalClause}}`\n    const listenQuery = '*[references($documentId)]'\n\n    return documentStore.listenQuery(\n      {fetch: fetchQuery, listen: listenQuery},\n      {documentId},\n      {tag: 'use-referring-documents', transitions: ['appear', 'disappear'], throttleTime: 5000},\n    ) as Observable<ReferringDocuments['internalReferences']>\n  },\n)\n\nconst useCrossDatasetReferences = createHookFromObservableFactory(\n  ([documentId, versionedClient]: [string, SanityClient]) => {\n    // (documentId: string, versionedClient: SanityClient) => {\n    return getVisiblePoll$().pipe(\n      switchMap(() =>\n        fetchCrossDatasetReferences(documentId, {\n          versionedClient,\n        }),\n      ),\n    )\n  },\n)\n\nexport function useReferringDocuments(documentId: string): ReferringDocuments {\n  const versionedClient = useClient(DEFAULT_STUDIO_CLIENT_OPTIONS)\n\n  const documentStore = useDocumentStore()\n  const publishedId = getPublishedId(documentId)\n\n  const [internalReferences, isInternalReferencesLoading] = useInternalReferences(\n    useMemo(() => [publishedId, documentStore], [documentStore, publishedId]),\n  )\n\n  const [crossDatasetReferences, isCrossDatasetReferencesLoading] = useCrossDatasetReferences(\n    useMemo(() => [publishedId, versionedClient], [publishedId, versionedClient]),\n  )\n\n  const projectIds = useMemo(() => {\n    return Array.from(\n      new Set(\n        crossDatasetReferences?.references\n          .map((crossDatasetReference) => crossDatasetReference.projectId)\n          .filter(Boolean),\n      ),\n    ).sort()\n  }, [crossDatasetReferences?.references])\n\n  const datasetNames = useMemo(() => {\n    return Array.from(\n      new Set<string>(\n        crossDatasetReferences?.references\n          // .filter((name) => typeof name === 'string')\n          .map((crossDatasetReference) => crossDatasetReference?.datasetName || '')\n          .filter((datasetName) => Boolean(datasetName) && datasetName !== ''),\n      ),\n    ).sort()\n  }, [crossDatasetReferences?.references])\n\n  const hasUnknownDatasetNames = useMemo(() => {\n    return Boolean(\n      crossDatasetReferences?.references.some(\n        (crossDatasetReference) => typeof crossDatasetReference.datasetName !== 'string',\n      ),\n    )\n  }, [crossDatasetReferences?.references])\n\n  return {\n    totalCount: (internalReferences?.totalCount || 0) + (crossDatasetReferences?.totalCount || 0),\n    projectIds,\n    datasetNames,\n    hasUnknownDatasetNames,\n    internalReferences,\n    crossDatasetReferences,\n    isLoading: isInternalReferencesLoading || isCrossDatasetReferencesLoading,\n  }\n}\n","import {Box, Flex} from '@sanity/ui'\nimport {useId, useMemo} from 'react'\nimport {LoadingBlock, useTranslation} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Dialog} from '../../../ui-components'\nimport {structureLocaleNamespace} from '../../i18n'\nimport {DocTitle} from '../DocTitle'\nimport {ConfirmDeleteDialogBody} from './ConfirmDeleteDialogBody'\nimport {useReferringDocuments} from './useReferringDocuments'\n\n/** @internal */\nexport const DialogBody = styled(Box)`\n  box-sizing: border-box;\n`\n\n/** @internal */\nexport const LoadingContainer = styled(Flex).attrs({\n  align: 'center',\n  direction: 'column',\n  justify: 'center',\n})`\n  height: 110px;\n`\n\n/** @internal */\nexport interface ConfirmDeleteDialogProps {\n  /**\n   * Incoming document ID used to find other referencing documents. This\n   * field respects draft IDs (e.g. if you pass in a published ID when one\n   * doesn't exist the document title may not show up).\n   */\n  id: string\n  /**\n   * The schema typename of the incoming document\n   */\n  type: string\n  /**\n   * The name of the action being done. (e.g. the `'unpublish'` action requires\n   * the same document deletion confirmation).\n   */\n  action?: 'delete' | 'unpublish'\n  onCancel: () => void\n  onConfirm: () => void\n}\n\n/**\n * A confirmation dialog used to prevent unwanted document deletes. Loads all\n * the referencing internal and cross-data references prior to showing the\n * delete button.\n *\n * @internal\n */\nexport function ConfirmDeleteDialog({\n  id,\n  type,\n  action = 'delete',\n  onCancel,\n  onConfirm,\n}: ConfirmDeleteDialogProps) {\n  const {t} = useTranslation(structureLocaleNamespace)\n  const dialogId = `deletion-confirmation-${useId()}`\n  const {\n    internalReferences,\n    crossDatasetReferences,\n    isLoading,\n    totalCount,\n    projectIds,\n    datasetNames,\n    hasUnknownDatasetNames,\n  } = useReferringDocuments(id)\n  const documentTitle = <DocTitle document={useMemo(() => ({_id: id, _type: type}), [id, type])} />\n  const showConfirmButton = !isLoading\n\n  return (\n    <Dialog\n      width={1}\n      id={dialogId}\n      header={t('confirm-delete-dialog.header.text', {context: action})}\n      footer={{\n        cancelButton: {\n          onClick: onCancel,\n          text: t('confirm-delete-dialog.cancel-button.text'),\n        },\n        confirmButton: showConfirmButton\n          ? {\n              text:\n                totalCount > 0\n                  ? t('confirm-delete-dialog.confirm-anyway-button.text', {context: action})\n                  : t('confirm-delete-dialog.confirm-button.text', {context: action}),\n              onClick: onConfirm,\n            }\n          : undefined,\n      }}\n      onClose={onCancel}\n      onClickOutside={onCancel}\n    >\n      <DialogBody>\n        {crossDatasetReferences && internalReferences && !isLoading ? (\n          <ConfirmDeleteDialogBody\n            crossDatasetReferences={crossDatasetReferences}\n            internalReferences={internalReferences}\n            documentTitle={documentTitle}\n            isLoading={isLoading}\n            totalCount={totalCount}\n            action={action}\n            projectIds={projectIds}\n            datasetNames={datasetNames}\n            hasUnknownDatasetNames={hasUnknownDatasetNames}\n            onReferenceLinkClick={onCancel}\n          />\n        ) : (\n          <LoadingContainer data-testid=\"loading-container\">\n            <LoadingBlock showText title={t('confirm-delete-dialog.loading.text')} />\n          </LoadingContainer>\n        )}\n      </DialogBody>\n    </Dialog>\n  )\n}\n","import {Box, Text} from '@sanity/ui'\nimport {type ComponentProps, useCallback, useId, useState} from 'react'\nimport {useTranslation} from 'sanity'\n\nimport {Dialog, ErrorBoundary} from '../../../ui-components'\nimport {structureLocaleNamespace} from '../../i18n'\nimport {ConfirmDeleteDialog, type ConfirmDeleteDialogProps} from './ConfirmDeleteDialog'\n\nexport type {ConfirmDeleteDialogProps}\n\ntype ArgType<T> = T extends (arg: infer U) => unknown ? U : never\ntype ErrorInfo = ArgType<ComponentProps<typeof ErrorBoundary>['onCatch']>\n\n/** @internal */\nfunction ConfirmDeleteDialogContainer(props: ConfirmDeleteDialogProps) {\n  const {t} = useTranslation(structureLocaleNamespace)\n  const id = useId()\n  const [error, setError] = useState<ErrorInfo | null>(null)\n  const handleRetry = useCallback(() => setError(null), [])\n\n  return error ? (\n    <Dialog\n      id={`dialog-error-${id}`}\n      data-testid=\"confirm-delete-error-dialog\"\n      header={t('confirm-delete-dialog.error.title.text')}\n      footer={{\n        confirmButton: {\n          text: t('confirm-delete-dialog.error.retry-button.text'),\n          onClick: handleRetry,\n          tone: 'default',\n        },\n      }}\n      onClose={props.onCancel}\n    >\n      <Box padding={4}>\n        <Text size={1}>{t('confirm-delete-dialog.error.message.text')}</Text>\n      </Box>\n    </Dialog>\n  ) : (\n    <ErrorBoundary onCatch={setError}>\n      <ConfirmDeleteDialog {...props} />\n    </ErrorBoundary>\n  )\n}\n\nexport {ConfirmDeleteDialogContainer as ConfirmDeleteDialog}\n","import {type ComponentProps, type ForwardedRef, forwardRef, type ReactNode, useMemo} from 'react'\nimport {IntentLink} from 'sanity/router'\n\nimport {Button, type ButtonProps} from '../../ui-components'\nimport {type PaneMenuItem} from '../types'\n\ntype RouterIntent = NonNullable<PaneMenuItem['intent']>\n\nexport const IntentButton = forwardRef(function IntentButton(\n  props: {\n    intent: RouterIntent\n  } & ButtonProps &\n    Omit<ComponentProps<typeof Button>, 'as' | 'href' | 'type'>,\n  ref: ForwardedRef<HTMLAnchorElement>,\n) {\n  const {intent, ...restProps} = props\n\n  const Link = useMemo(\n    () =>\n      // eslint-disable-next-line @typescript-eslint/no-shadow\n      forwardRef(function Link(\n        linkProps: {children: ReactNode},\n        linkRef: ForwardedRef<HTMLAnchorElement>,\n      ) {\n        return (\n          <IntentLink\n            {...linkProps}\n            intent={intent.type}\n            params={intent.params}\n            ref={linkRef}\n            searchParams={intent.searchParams}\n          />\n        )\n      }),\n    [intent],\n  )\n\n  return props.disabled ? (\n    <Button {...restProps} as=\"a\" role=\"link\" aria-disabled=\"true\" />\n  ) : (\n    <Button {...restProps} as={Link} data-as=\"a\" ref={ref as ForwardedRef<HTMLButtonElement>} />\n  )\n})\n","import {type ComponentProps, type ReactNode} from 'react'\nimport {InsufficientPermissionsMessage, useCurrentUser, useTranslation} from 'sanity'\n\nimport {Tooltip} from '../../../ui-components'\nimport {structureLocaleNamespace} from '../../i18n'\n\ninterface InsufficientPermissionsMessageTooltipProps {\n  reveal: boolean\n  /**\n   * delegates to `InsufficientPermissionsMessage`'s `context` prop\n   * @see InsufficientPermissionsMessage\n   */\n  context: ComponentProps<typeof InsufficientPermissionsMessage>['context']\n  loading: boolean\n  children: ReactNode\n}\n\nexport function InsufficientPermissionsMessageTooltip({\n  reveal,\n  context,\n  loading,\n  children,\n}: InsufficientPermissionsMessageTooltipProps) {\n  const currentUser = useCurrentUser()\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  if (!reveal) {\n    return <>{children}</>\n  }\n\n  return (\n    <Tooltip\n      content={\n        loading ? (\n          t('insufficient-permissions-message-tooltip.loading-text')\n        ) : (\n          <InsufficientPermissionsMessage context={context} currentUser={currentUser} />\n        )\n      }\n      portal\n    >\n      {/* this wrapping div is to allow mouse events */}\n      {/* while the child element is disabled */}\n      <div>{children}</div>\n    </Tooltip>\n  )\n}\n","import {AddIcon} from '@sanity/icons'\nimport {Menu} from '@sanity/ui'\nimport {type ComponentProps, type ForwardedRef, forwardRef, useMemo} from 'react'\nimport {\n  type InitialValueTemplateItem,\n  type ReleaseId,\n  type Template,\n  type TemplatePermissionsResult,\n  useGetI18nText,\n  usePerspective,\n  useTemplatePermissions,\n  useTemplates,\n  useTranslation,\n} from 'sanity'\nimport {IntentLink} from 'sanity/router'\n\nimport {Button, MenuButton, MenuItem, type PopoverProps} from '../../../ui-components'\nimport {structureLocaleNamespace} from '../../i18n'\nimport {IntentButton} from '../IntentButton'\nimport {InsufficientPermissionsMessageTooltip} from './InsufficientPermissionsMessageTooltip'\n\nexport type PaneHeaderIntentProps = ComponentProps<typeof IntentButton>['intent']\n\nconst POPOVER_PROPS: PopoverProps = {\n  constrainSize: true,\n  placement: 'bottom',\n  portal: true,\n}\n\nconst getIntent = (\n  templates: Template[],\n  item: InitialValueTemplateItem,\n  version?: ReleaseId,\n): PaneHeaderIntentProps | null => {\n  const typeName = templates.find((t) => t.id === item.templateId)?.schemaType\n  if (!typeName) return null\n\n  const baseParams = {\n    template: item.templateId,\n    type: typeName,\n    version,\n    id: item.initialDocumentId,\n  }\n\n  return {\n    type: 'create',\n    params: item.parameters ? [baseParams, item.parameters] : baseParams,\n    searchParams: version ? [['perspective', version]] : undefined,\n  }\n}\n\ninterface PaneHeaderCreateButtonProps {\n  templateItems: InitialValueTemplateItem[]\n}\n\nexport function PaneHeaderCreateButton({templateItems}: PaneHeaderCreateButtonProps) {\n  const templates = useTemplates()\n  const {selectedReleaseId} = usePerspective()\n\n  const {t} = useTranslation(structureLocaleNamespace)\n  const getI18nText = useGetI18nText([...templateItems, ...templates])\n\n  const [templatePermissions, isTemplatePermissionsLoading] = useTemplatePermissions({\n    templateItems,\n  })\n\n  const nothingGranted = useMemo(() => {\n    return (\n      !isTemplatePermissionsLoading &&\n      templatePermissions?.length !== 0 &&\n      templatePermissions?.every((permission) => !permission.granted)\n    )\n  }, [isTemplatePermissionsLoading, templatePermissions])\n\n  const permissionsById = useMemo(() => {\n    if (!templatePermissions) return {}\n    return templatePermissions.reduce<Record<string, TemplatePermissionsResult | undefined>>(\n      (acc, permission) => {\n        acc[permission.id] = permission\n        return acc\n      },\n      {},\n    )\n  }, [templatePermissions])\n\n  if (templateItems.length === 0) return null\n\n  if (nothingGranted) {\n    return (\n      <InsufficientPermissionsMessageTooltip\n        context=\"create-document-type\"\n        reveal\n        loading={isTemplatePermissionsLoading}\n      >\n        <Button\n          aria-label={t('pane-header.disabled-created-button.aria-label')}\n          icon={AddIcon}\n          data-testid=\"action-intent-button\"\n          disabled\n          mode=\"bleed\"\n          // This button handles the tooltip in a special way, won't reuse the forced tooltip.\n          tooltipProps={null}\n        />\n      </InsufficientPermissionsMessageTooltip>\n    )\n  }\n\n  if (templateItems.length === 1) {\n    const firstItem = templateItems[0]\n    const permissions = permissionsById[firstItem.id]\n    const disabled = !permissions?.granted\n    const intent = getIntent(templates, firstItem, selectedReleaseId)\n    if (!intent) return null\n\n    return (\n      <InsufficientPermissionsMessageTooltip\n        reveal={disabled}\n        loading={isTemplatePermissionsLoading}\n        context=\"create-document-type\"\n      >\n        <IntentButton\n          aria-label={getI18nText(firstItem).title}\n          icon={firstItem.icon || AddIcon}\n          intent={intent}\n          mode=\"bleed\"\n          disabled={disabled}\n          data-testid=\"action-intent-button\"\n          tooltipProps={{content: t('pane-header.create-new-button.tooltip')}}\n        />\n      </InsufficientPermissionsMessageTooltip>\n    )\n  }\n\n  return (\n    <MenuButton\n      button={\n        <Button\n          icon={AddIcon}\n          mode=\"bleed\"\n          data-testid=\"multi-action-intent-button\"\n          tooltipProps={{content: t('pane-header.create-new-button.tooltip')}}\n        />\n      }\n      id=\"create-menu\"\n      menu={\n        <Menu>\n          {templateItems.map((item, itemIndex) => {\n            const permissions = permissionsById[item.id]\n            const disabled = !permissions?.granted\n            const intent = getIntent(templates, item, selectedReleaseId)\n            const template = templates.find((i) => i.id === item.templateId)\n            if (!template || !intent) return null\n\n            const Link = forwardRef((linkProps, linkRef: ForwardedRef<never>) =>\n              disabled ? (\n                <button type=\"button\" disabled {...linkProps} ref={linkRef} />\n              ) : (\n                <IntentLink\n                  {...linkProps}\n                  intent={intent.type}\n                  params={intent.params}\n                  searchParams={intent.searchParams}\n                  ref={linkRef}\n                />\n              ),\n            )\n\n            Link.displayName = 'Link'\n\n            const {title} = getI18nText({\n              ...item,\n              // replace the title with the template title\n              title: item.title || getI18nText(template).title,\n            })\n\n            return (\n              <InsufficientPermissionsMessageTooltip\n                key={item.id}\n                context=\"create-document-type\"\n                reveal={disabled}\n                loading={isTemplatePermissionsLoading}\n              >\n                <MenuItem\n                  as={Link}\n                  data-as={disabled ? 'button' : 'a'}\n                  text={title}\n                  aria-label={\n                    disabled ? t('pane-header.disabled-created-button.aria-label') : title\n                  }\n                  disabled={disabled}\n                  data-testid={`action-intent-button-${itemIndex}`}\n                />\n              </InsufficientPermissionsMessageTooltip>\n            )\n          })}\n        </Menu>\n      }\n      popover={POPOVER_PROPS}\n    />\n  )\n}\n","import {Flex} from '@sanity/ui'\nimport {uniqBy} from 'lodash'\nimport {memo, useCallback, useMemo} from 'react'\nimport {EMPTY_ARRAY, EMPTY_OBJECT, type InitialValueTemplateItem, useTemplates} from 'sanity'\n\nimport {isMenuNodeButton, isNotMenuNodeButton, resolveMenuNodes} from '../../menuNodes'\nimport {\n  type PaneMenuItem,\n  type PaneMenuItemGroup,\n  type StructureToolPaneActionHandler,\n} from '../../types'\nimport {PaneContextMenuButton} from '../pane/PaneContextMenuButton'\nimport {PaneHeaderActionButton} from '../pane/PaneHeaderActionButton'\nimport {PaneHeaderCreateButton} from './PaneHeaderCreateButton'\n\nfunction isNonNullable<T>(value: T): value is NonNullable<T> {\n  return value !== null && value !== undefined\n}\n\n/**\n * hashes an object to a string where the order of the keys don't matter\n */\nconst hashObject = (value: unknown) => {\n  const sortObject = (v: unknown): unknown => {\n    if (typeof v !== 'object' || !v) return v\n    if (Array.isArray(v)) return v.map(sortObject)\n    return Object.entries(v).sort(([keyA], [keyB]) => keyA.localeCompare(keyB, 'en'))\n  }\n\n  const normalize = (v: unknown) => JSON.parse(JSON.stringify(v))\n\n  return JSON.stringify(sortObject(normalize(value)))\n}\n\ninterface PaneHeaderActionsProps {\n  initialValueTemplateItems?: InitialValueTemplateItem[]\n  menuItems?: PaneMenuItem[]\n  menuItemGroups?: PaneMenuItemGroup[]\n  actionHandlers?: Record<string, StructureToolPaneActionHandler>\n}\n\nexport const PaneHeaderActions = memo(function PaneHeaderActions(props: PaneHeaderActionsProps) {\n  const {\n    initialValueTemplateItems: initialValueTemplateItemsFromStructure = EMPTY_ARRAY,\n    menuItems = EMPTY_ARRAY,\n    menuItemGroups = EMPTY_ARRAY,\n    actionHandlers = EMPTY_OBJECT as Record<string, StructureToolPaneActionHandler>,\n  } = props\n\n  const templates = useTemplates()\n\n  const handleAction = useCallback(\n    (item: PaneMenuItem) => {\n      if (typeof item.action === 'string' && !(item.action in actionHandlers)) {\n        console.warn('No handler for action:', item.action)\n        return false\n      }\n\n      const handler =\n        typeof item.action === 'function'\n          ? item.action\n          : typeof item.action === 'string'\n            ? actionHandlers[item.action]\n            : null\n\n      if (handler) {\n        handler(item.params as Record<string, string>)\n        return true\n      }\n\n      return false\n    },\n    [actionHandlers],\n  )\n\n  const menuNodes = useMemo(\n    () =>\n      resolveMenuNodes({\n        actionHandler: handleAction,\n        menuItemGroups,\n        menuItems: menuItems\n          // remove items with `create` intents because those will get combined\n          // into one action button (see `initialValueTemplateItemFromMenuItems`)\n          .filter((item) => item.intent?.type !== 'create'),\n      }),\n    [handleAction, menuItemGroups, menuItems],\n  )\n\n  const actionNodes = useMemo(() => menuNodes.filter(isMenuNodeButton), [menuNodes])\n  const contextMenuNodes = useMemo(() => menuNodes.filter(isNotMenuNodeButton), [menuNodes])\n\n  const initialValueTemplateItemFromMenuItems = useMemo(() => {\n    return menuItems\n      .map((item, menuItemIndex) => {\n        if (item.intent?.type !== 'create') return null\n\n        const {params} = item.intent\n        if (!params) return null\n\n        const intentParams = Array.isArray(params) ? params[0] : params\n        const templateParams = Array.isArray(params) ? params[1] : undefined\n\n        // fallback to the schema type name as the template ID.\n        // by default, the initial template values are populated from every\n        // document type in the schema\n        const templateId = intentParams.template || intentParams.type\n        if (!templateId) return null\n\n        // eslint-disable-next-line max-nested-callbacks\n        const template = templates.find((t) => t.id === templateId)\n        // the template doesn't exist then the action might be disabled\n        if (!template) return null\n\n        const initialDocumentId = intentParams.id\n\n        return {\n          item,\n          template,\n          templateParams,\n          menuItemIndex,\n          initialDocumentId,\n        }\n      })\n      .filter(isNonNullable)\n      .map(({initialDocumentId, item, template, menuItemIndex, templateParams}) => {\n        const initialValueTemplateItem: InitialValueTemplateItem = {\n          id: `menuItem${menuItemIndex}`,\n          initialDocumentId,\n          templateId: template.id,\n          type: 'initialValueTemplateItem',\n          title: item.title || template.title,\n          i18n: item.i18n || template.i18n,\n          icon: item.icon as InitialValueTemplateItem['icon'],\n          description: template.description,\n          parameters: templateParams,\n          schemaType: template.schemaType,\n        }\n\n        return initialValueTemplateItem\n      })\n  }, [menuItems, templates])\n\n  const combinedInitialValueTemplates = useMemo(() => {\n    // this de-dupes create actions\n    return uniqBy(\n      [...initialValueTemplateItemFromMenuItems, ...initialValueTemplateItemsFromStructure],\n      (item) => hashObject([item.initialDocumentId, item.templateId, item.parameters]),\n    )\n  }, [initialValueTemplateItemFromMenuItems, initialValueTemplateItemsFromStructure])\n\n  return (\n    <Flex gap={1}>\n      <PaneHeaderCreateButton templateItems={combinedInitialValueTemplates} />\n\n      {actionNodes.map((node) => (\n        <PaneHeaderActionButton key={node.key} node={node} />\n      ))}\n\n      {contextMenuNodes.length > 0 && <PaneContextMenuButton nodes={contextMenuNodes} />}\n    </Flex>\n  )\n})\n","import {WarningOutlineIcon} from '@sanity/icons'\nimport {type SanityDocument} from '@sanity/types'\nimport {type GeneralPreviewLayoutKey, SanityDefaultPreview, Translate, useTranslation} from 'sanity'\n\nimport {structureLocaleNamespace} from '../i18n'\n\nexport interface MissingSchemaTypeProps {\n  layout?: GeneralPreviewLayoutKey\n  value: SanityDocument\n}\n\nexport function MissingSchemaType(props: MissingSchemaTypeProps) {\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {layout, value} = props\n\n  return (\n    <SanityDefaultPreview\n      title={\n        <em>\n          <Translate\n            t={t}\n            i18nKey=\"pane-item.missing-schema-type.title\"\n            components={{Code: 'code'}}\n            values={{documentType: value._type}}\n          />\n        </em>\n      }\n      subtitle={\n        <Translate\n          t={t}\n          i18nKey=\"pane-item.missing-schema-type.subtitle\"\n          components={{Code: 'code'}}\n          values={{documentId: value._id}}\n        />\n      }\n      media={() => <WarningOutlineIcon />}\n      layout={layout}\n    />\n  )\n}\n","import {ChevronRightIcon, DocumentIcon, FolderIcon} from '@sanity/icons'\nimport {\n  isSanityDocument,\n  type PreviewValue,\n  type SanityDocument,\n  type SchemaType,\n} from '@sanity/types'\nimport {Box, type CardProps, Text} from '@sanity/ui'\nimport {\n  type ComponentType,\n  type MouseEvent,\n  startTransition,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react'\nimport {\n  type FIXME,\n  type GeneralPreviewLayoutKey,\n  getPublishedId,\n  PreviewCard,\n  SanityDefaultPreview,\n  useDocumentPresence,\n  useDocumentPreviewStore,\n  useEditState,\n  useSchema,\n} from 'sanity'\n\nimport {MissingSchemaType} from '../MissingSchemaType'\nimport {usePaneRouter} from '../paneRouter'\nimport {PaneItemPreview} from './PaneItemPreview'\n\ninterface PaneItemProps {\n  id: string\n  layout?: GeneralPreviewLayoutKey\n  icon?: ComponentType<any> | false\n  pressed?: boolean\n  selected?: boolean\n  title?: string\n  value?: PreviewValue | SanityDocument\n  schemaType?: SchemaType\n  margin?: CardProps['margin']\n  marginBottom?: CardProps['marginBottom']\n  marginTop?: CardProps['marginTop']\n}\n\n/**\n * Return `false` if we explicitly disable the icon.\n * Otherwise return the passed icon or the schema type icon as a backup.\n */\nexport function getIconWithFallback(\n  icon: ComponentType<any> | false | undefined,\n  schemaType: SchemaType | undefined,\n  defaultIcon: ComponentType<any>,\n): ComponentType<any> | false {\n  if (icon === false) {\n    return false\n  }\n\n  return icon || (schemaType && schemaType.icon) || defaultIcon || false\n}\n\nexport function PaneItem(props: PaneItemProps) {\n  const {\n    icon,\n    id,\n    layout = 'default',\n    pressed,\n    schemaType,\n    selected,\n    title,\n    value,\n    margin,\n    marginBottom,\n    marginTop,\n  } = props\n  const schema = useSchema()\n  const documentPreviewStore = useDocumentPreviewStore()\n  const {ChildLink} = usePaneRouter()\n  const documentPresence = useDocumentPresence(id)\n  const hasSchemaType = Boolean(schemaType && schemaType.name && schema.get(schemaType.name))\n  const [clicked, setClicked] = useState<boolean>(false)\n\n  const preview = useMemo(() => {\n    if (value && isSanityDocument(value)) {\n      if (!schemaType || !hasSchemaType) {\n        return <MissingSchemaType value={value} />\n      }\n\n      return (\n        <PaneItemPreview\n          documentPreviewStore={documentPreviewStore}\n          icon={getIconWithFallback(icon, schemaType, DocumentIcon)}\n          layout={layout}\n          schemaType={schemaType}\n          value={value}\n          presence={documentPresence}\n        />\n      )\n    }\n\n    // Always render non-document values as compact previews\n    return (\n      <SanityDefaultPreview\n        status={\n          <Box style={{opacity: 0.5}}>\n            <Text muted size={1}>\n              <ChevronRightIcon />\n            </Text>\n          </Box>\n        }\n        icon={getIconWithFallback(icon, schemaType, FolderIcon)}\n        layout=\"compact\"\n        title={title}\n      />\n    )\n  }, [\n    documentPreviewStore,\n    hasSchemaType,\n    icon,\n    layout,\n    schemaType,\n    title,\n    value,\n    documentPresence,\n  ])\n\n  const handleClick = useCallback((e: MouseEvent<HTMLElement>) => {\n    if (e.metaKey) {\n      setClicked(false)\n      return\n    }\n\n    setClicked(true)\n  }, [])\n\n  // Reset `clicked` state when `selected` prop changes\n  useEffect(() => setClicked(false), [selected])\n\n  // Preloads the edit state on hover, using concurrent rendering with `startTransition` so preloads can be interrupted and not block rendering\n  const [preloading, setPreload] = useState(false)\n  const timeoutRef = useRef<ReturnType<typeof setTimeout> | null>(null)\n  const handleMouseEnter = useCallback(() => {\n    timeoutRef.current = setTimeout(() => startTransition(() => setPreload(true)), 400)\n  }, [])\n  const handleMouseLeave = useCallback(() => {\n    if (timeoutRef.current) clearTimeout(timeoutRef.current)\n    startTransition(() => setPreload(false))\n  }, [])\n\n  return (\n    <PreviewCard\n      data-testid={`pane-item-${title}`}\n      __unstable_focusRing\n      as={ChildLink as FIXME}\n      // @ts-expect-error - `childId` is a valid prop on `ChildLink`\n      childId={id}\n      data-as=\"a\"\n      margin={margin}\n      marginBottom={marginBottom}\n      marginTop={marginTop}\n      onClick={handleClick}\n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={handleMouseLeave}\n      pressed={pressed}\n      radius={2}\n      selected={selected || clicked}\n      sizing=\"border\"\n      tabIndex={-1}\n      tone=\"inherit\"\n    >\n      {preview}\n      {preloading && schemaType?.name && value && isSanityDocument(value) && (\n        <PreloadDocumentPane documentId={id} documentType={schemaType.name} />\n      )}\n    </PreviewCard>\n  )\n}\n\nfunction PreloadDocumentPane(props: {documentId: string; documentType: string}) {\n  const {documentId, documentType} = props\n  // Preload the edit state for the document, and keep it alive until mouse leave\n  useEditState(getPublishedId(documentId), documentType)\n\n  return null\n}\nPreloadDocumentPane.displayName = 'PreloadDocumentPane'\n","import {memo, type ReactNode, useMemo} from 'react'\nimport {\n  type DocumentActionComponent,\n  type DocumentActionDescription,\n  type DocumentActionGroup,\n  type DocumentActionProps,\n  getDraftId,\n  GetHookCollectionState,\n  getPublishedId,\n  useCanvasCompanionDoc,\n  useTranslation,\n} from 'sanity'\n\nimport {structureLocaleNamespace} from '../i18n'\n\n/** @internal */\nexport interface Action<Args, Description> {\n  (args: Args): Description | null\n}\nexport interface ResolvedAction extends DocumentActionDescription {\n  action?: DocumentActionComponent['action']\n}\n\n/** @internal */\nexport interface RenderActionCollectionProps {\n  actions: Action<DocumentActionProps, DocumentActionDescription>[]\n  actionProps: Omit<DocumentActionProps, 'onComplete'>\n  children: (props: {states: ResolvedAction[]}) => ReactNode\n  onActionComplete?: () => void\n  group?: DocumentActionGroup\n}\n\n/** @internal */\nexport const RenderActionCollectionState = memo((props: RenderActionCollectionProps) => {\n  const {actions, children, actionProps, onActionComplete, group} = props\n\n  return (\n    <GetHookCollectionState<Omit<DocumentActionProps, 'onComplete'>, ResolvedAction>\n      onReset={onActionComplete}\n      hooks={actions}\n      args={actionProps}\n      group={group}\n    >\n      {({states}) => (\n        <ActionsGuardWrapper\n          states={states}\n          documentId={\n            actionProps.liveEditSchemaType\n              ? getPublishedId(actionProps.id)\n              : getDraftId(actionProps.id)\n          }\n        >\n          {children}\n        </ActionsGuardWrapper>\n      )}\n    </GetHookCollectionState>\n  )\n})\nRenderActionCollectionState.displayName = 'Memo(RenderActionCollectionState)'\n\n/**\n * This is a list of the actions that are supported when a document is linked to Canvas.\n * Custom actions and actions that are not supported by Canvas will be disabled and will include a tooltip explaining that the action is not supported.\n */\nconst SUPPORTED_LINKED_TO_CANVAS_ACTIONS: DocumentActionComponent['action'][] = [\n  'delete',\n  'duplicate',\n  'publish',\n  'unpublish',\n  'unlinkFromCanvas',\n  'editInCanvas',\n  'linkToCanvas',\n  'schedule',\n]\n\ninterface ActionsGuardWrapperProps {\n  states: ResolvedAction[]\n  documentId: string\n  children: (props: {states: ResolvedAction[]}) => ReactNode\n}\n\nconst ActionsGuardWrapper = (props: ActionsGuardWrapperProps) => {\n  const {states, children, documentId} = props\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {isLinked} = useCanvasCompanionDoc(documentId)\n\n  const result = useMemo(() => {\n    if (isLinked) {\n      return children({\n        states: states.map((s) => {\n          if (!s.action || !SUPPORTED_LINKED_TO_CANVAS_ACTIONS.includes(s.action)) {\n            return {\n              ...s,\n              disabled: true,\n              title: t('action.disabled-by-canvas.tooltip'),\n            }\n          }\n          return s\n        }),\n      })\n    }\n    return children({states})\n  }, [children, states, t, isLinked])\n\n  return result\n}\n","import {memo, type ReactNode} from 'react'\nimport {\n  type DocumentBadgeDescription,\n  type DocumentBadgeProps,\n  type EditStateFor,\n  GetHookCollectionState,\n} from 'sanity'\n\n/** @internal */\nexport interface Badge<Args, Description> {\n  (args: Args): Description | null\n}\n\n/** @internal */\nexport interface RenderBadgeCollectionProps {\n  badges: Badge<DocumentBadgeProps, DocumentBadgeDescription>[]\n  badgeProps: EditStateFor\n  children: (props: {states: DocumentBadgeDescription[]}) => ReactNode\n}\n\n/** @internal */\nexport const RenderBadgeCollectionState = memo((props: RenderBadgeCollectionProps) => {\n  const {badges, children, badgeProps} = props\n\n  return (\n    <GetHookCollectionState<EditStateFor, DocumentBadgeDescription>\n      hooks={badges}\n      args={badgeProps}\n    >\n      {children}\n    </GetHookCollectionState>\n  )\n})\nRenderBadgeCollectionState.displayName = 'Memo(RenderBadgeCollectionState)'\n","import {type SortOrder} from './types'\n\nexport const PARTIAL_PAGE_LIMIT = 100\nexport const FULL_LIST_LIMIT = 2000\nexport const DEFAULT_ORDERING: SortOrder = {by: [{field: '_updatedAt', direction: 'desc'}]}\nexport const EMPTY_RECORD: Record<string, unknown> = {}\n\nexport const ENABLE_LRU_MEMO = true\n","import {type SanityDocument} from '@sanity/types'\nimport {Box, Container, Flex, Heading, Stack, Text} from '@sanity/ui'\nimport {useCallback, useEffect, useMemo, useState} from 'react'\nimport {\n  CommandList,\n  type CommandListRenderItemCallback,\n  ErrorActions,\n  type GeneralPreviewLayoutKey,\n  getPublishedId,\n  isDev,\n  LoadingBlock,\n  SanityDefaultPreview,\n  Translate,\n  useSchema,\n  useTranslation,\n} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Delay, PaneContent, PaneItem, usePane, usePaneLayout} from '../../components'\nimport {structureLocaleNamespace} from '../../i18n'\nimport {FULL_LIST_LIMIT} from './constants'\nimport {type DocumentListPaneItem, type LoadingVariant} from './types'\n\nconst RootBox = styled(Box)<{$opacity?: number}>`\n  position: relative;\n  opacity: ${(props) => props.$opacity || 1};\n  transition: opacity 0.4s;\n`\n\nconst CommandListBox = styled(Box)`\n  position: absolute;\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n`\n\ninterface DocumentListPaneContentProps {\n  childItemId?: string\n  error: {message: string} | null\n  filterIsSimpleTypeConstraint: boolean\n  hasMaxItems?: boolean\n  muted?: boolean\n  hasSearchQuery: boolean\n  isActive?: boolean\n  isLazyLoading: boolean\n  isLoading: boolean\n  isConnected?: boolean\n  autoRetry?: boolean\n  canRetry: boolean\n  retryCount?: number\n  isRetrying?: boolean\n  items: DocumentListPaneItem[]\n  layout?: GeneralPreviewLayoutKey\n  loadingVariant?: LoadingVariant\n  onEndReached: () => void\n  onRetry?: () => void\n  paneTitle: string\n  searchInputElement: HTMLInputElement | null\n  showIcons: boolean\n}\n\nconst SKELETON_ITEMS = [...Array(30).keys()]\n\nfunction LoadingView(props: {layout?: GeneralPreviewLayoutKey}) {\n  const {layout} = props\n\n  return (\n    <Stack paddingX={3} paddingY={2} paddingTop={0} space={1}>\n      {SKELETON_ITEMS.map((num) => (\n        <SanityDefaultPreview key={num} isPlaceholder layout={layout} />\n      ))}\n    </Stack>\n  )\n}\n\nexport function DocumentListPaneContent(props: DocumentListPaneContentProps) {\n  const {\n    childItemId,\n    error,\n    isRetrying,\n    autoRetry,\n    filterIsSimpleTypeConstraint,\n    hasMaxItems,\n    hasSearchQuery,\n    isActive,\n    isLazyLoading,\n    muted,\n    isLoading,\n    isConnected,\n    retryCount,\n    canRetry,\n    items,\n    layout,\n    loadingVariant,\n    onEndReached,\n    onRetry,\n    paneTitle,\n    searchInputElement,\n    showIcons,\n  } = props\n\n  const schema = useSchema()\n\n  const {collapsed: layoutCollapsed} = usePaneLayout()\n  const {collapsed, index} = usePane()\n  const [shouldRender, setShouldRender] = useState(!collapsed)\n  const {t} = useTranslation(structureLocaleNamespace)\n\n  const handleEndReached = useCallback(() => {\n    if (shouldRender) {\n      onEndReached()\n    }\n  }, [onEndReached, shouldRender])\n\n  useEffect(() => {\n    if (collapsed) return undefined\n\n    const timer = setTimeout(() => {\n      setShouldRender(true)\n    }, 0)\n\n    return () => {\n      clearTimeout(timer)\n    }\n  }, [collapsed, items])\n\n  const renderItem = useCallback<CommandListRenderItemCallback<SanityDocument>>(\n    (item, {activeIndex}) => {\n      const publishedId = getPublishedId(item._id)\n      const isSelected = childItemId === publishedId\n      const pressed = !isActive && isSelected\n      const selected = isActive && isSelected\n      const isLastItem = activeIndex === items.length - 1\n      const showSpinner = isLastItem && isLazyLoading\n      const showMaxItemsMessage = isLastItem && hasMaxItems\n\n      return (\n        <>\n          <PaneItem\n            icon={showIcons === false ? false : undefined}\n            id={publishedId}\n            layout={layout}\n            marginBottom={1}\n            pressed={pressed}\n            schemaType={schema.get(item._type)}\n            selected={selected}\n            value={item}\n          />\n\n          {showSpinner && <LoadingBlock />}\n\n          {showMaxItemsMessage && (\n            <Box marginY={1} paddingX={3} paddingY={4}>\n              <Text align=\"center\" muted size={1}>\n                {t('panes.document-list-pane.max-items.text', {limit: FULL_LIST_LIMIT})}\n              </Text>\n            </Box>\n          )}\n        </>\n      )\n    },\n    [childItemId, isActive, items.length, layout, schema, showIcons, hasMaxItems, isLazyLoading, t],\n  )\n\n  const noDocumentsContent = useMemo(() => {\n    if (hasSearchQuery) {\n      return (\n        <Flex align=\"center\" direction=\"column\" height=\"fill\" justify=\"center\">\n          <Container width={1}>\n            <Box paddingX={4} paddingY={5}>\n              <Text align=\"center\" muted>\n                {t('panes.document-list-pane.no-documents.text')}\n              </Text>\n            </Box>\n          </Container>\n        </Flex>\n      )\n    }\n\n    return (\n      <Flex align=\"center\" direction=\"column\" height=\"fill\" justify=\"center\">\n        <Container width={1}>\n          <Box paddingX={4} paddingY={5}>\n            <Text align=\"center\" muted>\n              {filterIsSimpleTypeConstraint\n                ? t('panes.document-list-pane.no-documents-of-type.text')\n                : t('panes.document-list-pane.no-matching-documents.text')}\n            </Text>\n          </Box>\n        </Container>\n      </Flex>\n    )\n  }, [filterIsSimpleTypeConstraint, hasSearchQuery, t])\n\n  const mainContent = useMemo(() => {\n    if (!shouldRender) {\n      return null\n    }\n\n    const isOnline = window.navigator.onLine\n    if (error) {\n      return (\n        <Flex align=\"center\" direction=\"column\" height=\"fill\" justify=\"center\">\n          <Container width={1}>\n            <Stack paddingX={4} paddingY={5} space={4}>\n              <Heading as=\"h3\">{t('panes.document-list-pane.error.title')}</Heading>\n              <Text as=\"p\">\n                {isDev ? (\n                  <Translate\n                    t={t}\n                    i18nKey=\"panes.document-list-pane.error.text.dev\"\n                    values={{error: error.message}}\n                    components={{Code: ({children}) => <code>{children}</code>}}\n                  />\n                ) : isOnline ? (\n                  t('panes.document-list-pane.error.text')\n                ) : (\n                  t('panes.document-list-pane.error.text.offline')\n                )}\n              </Text>\n              <ErrorActions\n                error={error}\n                eventId={null}\n                onRetry={isOnline && canRetry ? onRetry : undefined}\n                isRetrying={isRetrying}\n              />\n              {canRetry ? (\n                <Text as=\"p\" muted size={1}>\n                  {isRetrying\n                    ? t('panes.document-list-pane.error.retrying', {count: retryCount})\n                    : autoRetry\n                      ? t('panes.document-list-pane.error.will-retry-automatically', {\n                          count: retryCount,\n                        })\n                      : t('panes.document-list-pane.error.max-retries-attempted', {\n                          count: retryCount,\n                        })}\n                </Text>\n              ) : null}\n            </Stack>\n          </Container>\n        </Flex>\n      )\n    }\n\n    if (isConnected && !isLoading && items.length === 0) {\n      return noDocumentsContent\n    }\n\n    if (loadingVariant === 'initial' && isLoading) {\n      return (\n        <Delay ms={300}>\n          <LoadingView layout={layout} />\n        </Delay>\n      )\n    }\n\n    if (loadingVariant === 'spinner' && isLoading) {\n      return null\n    }\n\n    // prevents bug when panes won't render if first rendered while collapsed\n    const key = `${index}-${collapsed}`\n\n    return (\n      <RootBox overflow=\"hidden\" height=\"fill\" $opacity={muted ? 0.8 : 1}>\n        <CommandListBox>\n          <CommandList\n            key={key}\n            activeItemDataAttr=\"data-hovered\"\n            ariaLabel={paneTitle}\n            canReceiveFocus\n            inputElement={searchInputElement}\n            itemHeight={51}\n            items={items}\n            onEndReached={handleEndReached}\n            onlyShowSelectionWhenActive\n            overscan={10}\n            paddingBottom={1}\n            paddingX={3}\n            renderItem={renderItem}\n            wrapAround={false}\n          />\n        </CommandListBox>\n      </RootBox>\n    )\n  }, [\n    autoRetry,\n    canRetry,\n    collapsed,\n    error,\n    handleEndReached,\n    index,\n    isConnected,\n    isLoading,\n    isRetrying,\n    items,\n    layout,\n    loadingVariant,\n    muted,\n    noDocumentsContent,\n    onRetry,\n    paneTitle,\n    renderItem,\n    retryCount,\n    searchInputElement,\n    shouldRender,\n    t,\n  ])\n\n  return (\n    <PaneContent\n      data-testid=\"document-list-pane\"\n      overflow={layoutCollapsed || loadingVariant === 'initial' ? 'hidden' : 'auto'}\n    >\n      {mainContent}\n    </PaneContent>\n  )\n}\n","import {\n  isIndexSegment,\n  isKeySegment,\n  isReferenceSchemaType,\n  type ObjectField,\n  type ObjectFieldType,\n  type ObjectSchemaType,\n  type SanityDocumentLike,\n  type SchemaType,\n} from '@sanity/types'\nimport * as PathUtils from '@sanity/util/paths'\nimport {type ExprNode, parse} from 'groq-js'\nimport {collate, getPublishedId} from 'sanity'\n\nimport {type DocumentListPaneItem, type SortOrder} from './types'\n\nexport function getDocumentKey(value: DocumentListPaneItem, index: number): string {\n  return value._id ? getPublishedId(value._id) : `item-${index}`\n}\n\nexport function removePublishedWithDrafts(documents: SanityDocumentLike[]): DocumentListPaneItem[] {\n  return collate(documents).map((entry) => {\n    const doc = entry.draft || entry.published || entry.versions[0]\n    const hasDraft = Boolean(entry.draft)\n\n    return {\n      ...doc,\n      hasPublished: !!entry.published,\n      hasDraft,\n    }\n  }) as any\n}\n\nexport function applyOrderingFunctions(order: SortOrder, schemaType: ObjectSchemaType): SortOrder {\n  const orderBy = order.by.map((by) => {\n    // Skip those that already have a mapper\n    if (by.mapWith) {\n      return by\n    }\n\n    const fieldType = tryResolveSchemaTypeForPath(schemaType, by.field)\n    if (!fieldType) {\n      return by\n    }\n\n    // Note: order matters here, since the jsonType of a date field is `string`,\n    // but we want to apply `datetime()`, not `lower()`\n    if (fieldExtendsType(fieldType, 'datetime')) {\n      return {...by, mapWith: 'dateTime'}\n    }\n\n    if (fieldType.jsonType === 'string') {\n      return {...by, mapWith: 'lower'}\n    }\n\n    return by\n  })\n\n  return orderBy.every((item, index) => item === order.by[index]) ? order : {...order, by: orderBy}\n}\n\nfunction tryResolveSchemaTypeForPath(baseType: SchemaType, path: string): SchemaType | undefined {\n  const pathSegments = PathUtils.fromString(path)\n\n  let current: SchemaType | undefined = baseType\n  for (const segment of pathSegments) {\n    if (!current) {\n      return undefined\n    }\n\n    if (typeof segment === 'string') {\n      current = getFieldTypeByName(current, segment)\n      continue\n    }\n\n    const isArrayAccessor = isKeySegment(segment) || isIndexSegment(segment)\n    if (!isArrayAccessor || current.jsonType !== 'array') {\n      return undefined\n    }\n\n    const [memberType, otherType] = current.of || []\n    if (otherType || !memberType) {\n      // Can't figure out the type without knowing the value\n      return undefined\n    }\n\n    if (!isReferenceSchemaType(memberType)) {\n      current = memberType\n      continue\n    }\n\n    const [refType, otherRefType] = memberType.to || []\n    if (otherRefType || !refType) {\n      // Can't figure out the type without knowing the value\n      return undefined\n    }\n\n    current = refType\n  }\n\n  return current\n}\n\nfunction getFieldTypeByName(type: SchemaType, fieldName: string): SchemaType | undefined {\n  if (!('fields' in type)) {\n    return undefined\n  }\n\n  const fieldType = type.fields.find((field) => field.name === fieldName)\n  return fieldType ? fieldType.type : undefined\n}\n\nexport function fieldExtendsType(field: ObjectField | ObjectFieldType, ofType: string): boolean {\n  let current: SchemaType | undefined = field.type\n  while (current) {\n    if (current.name === ofType) {\n      return true\n    }\n\n    if (!current.type && current.jsonType === ofType) {\n      return true\n    }\n\n    current = current.type\n  }\n\n  return false\n}\n\n/**\n * Recursively extract static `_type`s from GROQ filter expressions. If the\n * types can't be statically determined then it will return `null`.\n */\n// eslint-disable-next-line complexity\nfunction findTypes(node: ExprNode): Set<string> | null {\n  switch (node.type) {\n    case 'OpCall': {\n      const {left, right} = node\n\n      switch (node.op) {\n        // e.g. `a == b`\n        case '==': {\n          // e.g. `_type == 'value'`\n          if (left.type === 'AccessAttribute' && left.name === '_type' && !left.base) {\n            if (right.type !== 'Value' || typeof right.value !== 'string') return null\n            return new Set([right.value])\n          }\n\n          // e.g. `'value' == _type`\n          if (right.type === 'AccessAttribute' && right.name === '_type' && !right.base) {\n            if (left.type !== 'Value' || typeof left.value !== 'string') return null\n            return new Set([left.value])\n          }\n\n          // otherwise, we can't determine the types statically\n          return null\n        }\n\n        // e.g. `a in b`\n        case 'in': {\n          // if `_type` is not on the left hand side of `in` then it can't be determined\n          if (left.type !== 'AccessAttribute' || left.name !== '_type' || left.base) return null\n          // if the right hand side is not an array then the types can't be determined\n          if (right.type !== 'Array') return null\n\n          const types = new Set<string>()\n          // iterate through all the types\n          for (const element of right.elements) {\n            // if we find a splat, then early return, we can't determine the types\n            if (element.isSplat) return null\n            // if the array element is not just a simple value, then early return\n            if (element.value.type !== 'Value') return null\n            // if the array element value is not a string, then early return\n            if (typeof element.value.value !== 'string') return null\n            // otherwise add the element value to the set of types\n            types.add(element.value.value)\n          }\n\n          // if there were any elements in the types set, return it\n          if (types.size) return types\n          // otherwise, the set of types cannot be determined\n          return null\n        }\n\n        default: {\n          return null\n        }\n      }\n    }\n\n    // groups can just be unwrapped, the AST preserves the order\n    case 'Group': {\n      return findTypes(node.base)\n    }\n\n    // e.g. `_type == 'a' || _type == 'b'`\n    // with Or nodes, if we can't determine the types for either the left or\n    // right hand side then we can't determine the types for any\n    // e.g. `_type == 'a' || isActive`\n    // — can't determine types because `isActive` could be true on another types\n    case 'Or': {\n      const left = findTypes(node.left)\n      if (!left) return null\n\n      const right = findTypes(node.right)\n      if (!right) return null\n\n      return new Set([...left, ...right])\n    }\n\n    // e.g. `_type == 'a' && isActive`\n    // with And nodes, we can determine the types as long as we can determine\n    // the types for one side. We can't determine the types if both are `null`.\n    case 'And': {\n      const left = findTypes(node.left)\n      const right = findTypes(node.right)\n\n      if (!left && !right) return null\n      return new Set([...(left || []), ...(right || [])])\n    }\n\n    default: {\n      return null\n    }\n  }\n}\n\nexport function findStaticTypesInFilter(\n  filter: string,\n  params: Record<string, unknown> = {},\n): string[] | null {\n  try {\n    const types = findTypes(parse(filter, {params}))\n    if (!types) return null\n\n    return Array.from(types).sort()\n  } catch {\n    // if we couldn't parse the filter, just return `null`\n    return null\n  }\n}\n","import {type ClientPerspective, type SanityClient} from '@sanity/client'\nimport {\n  asyncScheduler,\n  defer,\n  filter,\n  map,\n  merge,\n  mergeMap,\n  type Observable,\n  of,\n  partition,\n  share,\n  throttleTime,\n  throwError,\n  timer,\n} from 'rxjs'\nimport {scan} from 'rxjs/operators'\nimport {exhaustMapWithTrailing} from 'rxjs-exhaustmap-with-trailing'\nimport {\n  createSearch,\n  createSWR,\n  getSearchableTypes,\n  type SanityDocumentLike,\n  type Schema,\n  type SearchOptions,\n  type SearchStrategy,\n} from 'sanity'\n\nimport {getExtendedProjection} from '../../structureBuilder/util/getExtendedProjection'\nimport {type SortOrder} from './types'\n\ninterface ListenQueryOptions {\n  client: SanityClient\n  filter: string\n  limit: number\n  params: Record<string, unknown>\n  schema: Schema\n  searchQuery: string\n  sort: SortOrder\n  perspective?: ClientPerspective\n  staticTypeNames?: string[] | null\n  maxFieldDepth?: number\n  searchStrategy?: SearchStrategy\n}\n\nexport type SearchQueryEvent =\n  | {\n      type: 'reconnect'\n    }\n  | {type: 'result'; documents: SanityDocumentLike[]}\n\nexport interface SearchQueryState {\n  connected: boolean\n  fromCache: boolean\n  documents: SanityDocumentLike[]\n}\n\nconst swr = createSWR<{connected: boolean; documents: SanityDocumentLike[]}>({maxSize: 100})\n\nexport function listenSearchQuery(options: ListenQueryOptions): Observable<SearchQueryState> {\n  const {\n    client,\n    schema,\n    sort,\n    perspective,\n    limit,\n    params,\n    filter: groqFilter,\n    searchQuery,\n    staticTypeNames,\n    maxFieldDepth,\n    searchStrategy,\n  } = options\n  const sortBy = sort.by\n  const extendedProjection = sort?.extendedProjection\n\n  // Listen for changes with the given filter and params, and whenever a change occurs, we want to\n  // re-fetch the documents that match the search query (see below).\n  // We use a separate listener since the search query is too large to use in a listen query.\n  const events$ = defer(() => {\n    return client.listen(`*[${groqFilter}]`, params, {\n      events: ['welcome', 'mutation', 'reconnect'],\n      includeAllVersions: true,\n      includeResult: false,\n      visibility: 'query',\n      tag: 'listen-search-query',\n    })\n  }).pipe(\n    mergeMap((ev, i) => {\n      const isFirst = i === 0\n      // If we can't establish a connection to the /listen endpoint, the first event we receive will be 'reconnect'\n      // So if we get \"reconnect\" as the first event actually means \"Connection can't be established\"\n      if (isFirst && ev.type === 'reconnect') {\n        // if it's neither welcome nor reconnect, something unexpected has happened.\n        return throwError(() => new Error(`Failed to establish EventSource connection`))\n      }\n      // When a connection is successfully established, the first event will be 'welcome'\n      if (isFirst && ev.type !== 'welcome') {\n        // if it's neither welcome nor reconnect, something unexpected has happened.\n        return throwError(() => new Error(`Received unexpected type of first event \"${ev.type}\"`))\n      }\n      return of(ev)\n    }),\n    share(),\n  )\n\n  const [welcome$, mutationAndReconnect$] = partition(events$, (ev) => ev.type === 'welcome')\n\n  const swrKey = JSON.stringify({\n    fiilter: groqFilter,\n    limit,\n    params,\n    searchQuery,\n    perspective,\n    sort,\n    staticTypeNames,\n  })\n\n  return merge(\n    welcome$,\n    mutationAndReconnect$.pipe(throttleTime(1000, asyncScheduler, {leading: true, trailing: true})),\n  ).pipe(\n    exhaustMapWithTrailing((event): Observable<SearchQueryEvent> => {\n      // Get the types names to use for searching.\n      // If we have a static list of types, we can skip fetching the types and use the static list.\n      const typeNames$ = staticTypeNames\n        ? of(staticTypeNames)\n        : client.observable.fetch(`array::unique(*[${groqFilter}][]._type)`, params)\n\n      // Use the type names to create a search query and fetch the documents that match the query.\n      return typeNames$.pipe(\n        mergeMap((typeNames: string[]) => {\n          const types = getSearchableTypes(schema, staticTypeNames || []).filter((type) => {\n            if (typeNames.includes(type.name)) {\n              // make a call to getExtendedProjection in strict mode to verify that all fields are\n              // known. This method will throw an exception if there are any unknown fields specified\n              // in the sort by list\n              getExtendedProjection(type, sort.by, true)\n              return true\n            }\n            return false\n          })\n\n          const search = createSearch(types, client, {\n            filter: groqFilter,\n            params,\n            strategy: searchStrategy,\n            maxDepth: maxFieldDepth,\n          })\n\n          const doFetch = () => {\n            const searchTerms = {\n              query: searchQuery || '',\n              types,\n            }\n\n            const searchOptions: SearchOptions = {\n              __unstable_extendedProjection: extendedProjection,\n              comments: [`findability-source: ${searchQuery ? 'list-query' : 'list'}`],\n              limit,\n              skipSortByScore: true,\n              sort: sortBy,\n              perspective,\n            }\n\n            return search(searchTerms, searchOptions).pipe(\n              map((result) =>\n                // eslint-disable-next-line max-nested-callbacks\n                result.hits.map(({hit}) => hit),\n              ),\n              map((hits) => ({type: 'result' as const, documents: hits})),\n            )\n          }\n\n          if (event.type === 'mutation' && event.visibility !== 'query') {\n            // Even though the listener request specifies visibility=query, the events are not guaranteed to be delivered with visibility=query\n            // If the event we are responding to arrives with visibility != query, we add a little delay to allow for the updated document to be available for queries\n            // See https://www.sanity.io/docs/listening#visibility-c4786e55c3ff\n            return timer(1200).pipe(mergeMap(doFetch))\n          }\n          if (event.type === 'reconnect') {\n            return of(event)\n          }\n          return doFetch()\n        }),\n      )\n    }),\n    scan(\n      (\n        acc: null | {connected: boolean; documents: SanityDocumentLike[]},\n        event: SearchQueryEvent,\n      ) => ({\n        connected: event.type !== 'reconnect',\n        documents: event.type === 'result' ? event.documents : acc?.documents || [],\n      }),\n      null as null | {connected: boolean; documents: SanityDocumentLike[]},\n    ),\n    filter((v) => v !== null),\n    swr(swrKey),\n    map(({fromCache, value}): SearchQueryState => ({fromCache, ...value})),\n  )\n}\n","import {ChannelError, ClientError, type ClientPerspective, ServerError} from '@sanity/client'\nimport {observableCallback} from 'observable-callback'\nimport {useMemo, useState} from 'react'\nimport {useObservable} from 'react-rx'\nimport {concat, fromEvent, merge, NEVER, of, timer} from 'rxjs'\nimport {\n  filter,\n  map,\n  mergeMap,\n  scan,\n  share,\n  shareReplay,\n  switchMap,\n  take,\n  takeUntil,\n  withLatestFrom,\n} from 'rxjs/operators'\nimport {\n  catchWithCount,\n  DEFAULT_STUDIO_CLIENT_OPTIONS,\n  useClient,\n  useSchema,\n  useSearchMaxFieldDepth,\n  useWorkspace,\n} from 'sanity'\n\nimport {DEFAULT_ORDERING, FULL_LIST_LIMIT, PARTIAL_PAGE_LIMIT} from './constants'\nimport {findStaticTypesInFilter, removePublishedWithDrafts} from './helpers'\nimport {listenSearchQuery} from './listenSearchQuery'\nimport {type DocumentListPaneItem, type SortOrder} from './types'\n\ninterface UseDocumentListOpts {\n  apiVersion?: string\n  filter: string\n  perspective?: ClientPerspective\n  params: Record<string, unknown>\n  searchQuery: string | null\n  sortOrder?: SortOrder\n}\n\ninterface DocumentListState {\n  error: {message: string} | null\n  isLoadingFullList: boolean\n  isLoading: boolean\n  connected?: boolean\n  isRetrying: boolean\n  autoRetry: boolean\n  canRetry: boolean\n  retryCount: number\n  fromCache?: boolean\n  items: DocumentListPaneItem[]\n}\n\nconst INITIAL_QUERY_STATE: DocumentListState = {\n  error: null,\n  isRetrying: false,\n  retryCount: 0,\n  autoRetry: false,\n  canRetry: false,\n  isLoading: true,\n  isLoadingFullList: false,\n  fromCache: false,\n  items: [],\n}\n\ninterface UseDocumentListHookValue extends DocumentListState {\n  onRetry: () => void\n  onLoadFullList: () => void\n}\n\n/**\n * Determine whether an error should be possible to retry\n * @param error - Any caught error\n */\nfunction isRetriableError(error: unknown) {\n  if (error instanceof ChannelError) {\n    // Usually indicative of a bad or malformed request\n    return false\n  }\n  if (error instanceof ServerError) {\n    // >= 500\n    return true\n  }\n  if (error instanceof ClientError) {\n    // >= 400\n    // note: 403 Forbidden makes sense to retry, because it's a potentially passing condition\n    return error.statusCode === 403\n  }\n  return true\n}\n\n/**\n * @internal\n */\nexport function useDocumentList(opts: UseDocumentListOpts): UseDocumentListHookValue {\n  const {\n    filter: searchFilter,\n    params: paramsProp,\n    sortOrder,\n    searchQuery,\n    perspective,\n    apiVersion,\n  } = opts\n  const client = useClient({\n    ...DEFAULT_STUDIO_CLIENT_OPTIONS,\n    apiVersion: apiVersion || DEFAULT_STUDIO_CLIENT_OPTIONS.apiVersion,\n  })\n  const {strategy: searchStrategy} = useWorkspace().search\n  const schema = useSchema()\n  const maxFieldDepth = useSearchMaxFieldDepth()\n\n  // Get the type name from the filter, if it is a simple type filter.\n  const typeNameFromFilter = useMemo(\n    () => findStaticTypesInFilter(searchFilter, paramsProp),\n    [searchFilter, paramsProp],\n  )\n\n  const [[onRetry$, onRetry]] = useState(() => observableCallback())\n  const [[onFetchFullList$, onLoadFullList]] = useState(() => observableCallback())\n\n  const queryResults$ = useMemo(() => {\n    const listenSearchQueryArgs = {\n      client,\n      filter: searchFilter,\n      limit: PARTIAL_PAGE_LIMIT,\n      params: paramsProp,\n      schema,\n      perspective,\n      searchQuery: searchQuery || '',\n      sort: sortOrder || DEFAULT_ORDERING,\n      staticTypeNames: typeNameFromFilter,\n      maxFieldDepth,\n      searchStrategy,\n    }\n\n    const partialList$ = listenSearchQuery(listenSearchQueryArgs).pipe(\n      shareReplay({refCount: true, bufferSize: 1}),\n    )\n\n    // we want to fetch the full list if the last result of the partial list is at the limit\n    const fullList$ = onFetchFullList$.pipe(\n      withLatestFrom(partialList$),\n      filter(([, result]) => result?.documents.length === PARTIAL_PAGE_LIMIT),\n      // we want to set up the full list listener only once\n      take(1),\n      mergeMap(() =>\n        concat(\n          of({type: 'loadFullList' as const}),\n          listenSearchQuery({...listenSearchQueryArgs, limit: FULL_LIST_LIMIT}).pipe(\n            map((result) => ({type: 'result' as const, result})),\n          ),\n        ),\n      ),\n      share(),\n    )\n\n    // The combined search results from both partial page and full list\n    return merge(\n      partialList$.pipe(\n        map((result) => ({\n          type: 'result' as const,\n          result,\n        })),\n        // when the full list listener kicks off, we want to stop the partial list listener\n        takeUntil(fullList$),\n      ),\n      fullList$,\n    ).pipe(\n      catchWithCount((lastError, retryCount, caught$) => {\n        const error = safeError(lastError)\n        const isOnline = window.navigator.onLine\n        const canRetry = isOnline && isRetriableError(lastError)\n        const autoRetry = retryCount < 10\n        const retries = merge(\n          isOnline ? onRetry$ : fromEvent(window, 'online'),\n          isOnline && autoRetry ? timer(retryCount * 1_000) : NEVER,\n        ).pipe(\n          take(1),\n          switchMap(() =>\n            merge(\n              of({\n                type: 'error' as const,\n                error,\n                retrying: true,\n                autoRetry,\n                canRetry,\n                retryCount,\n              }),\n              caught$,\n            ),\n          ),\n        )\n        return concat(\n          of({\n            type: 'error' as const,\n            error,\n            retrying: false,\n            autoRetry,\n            canRetry,\n            retryCount,\n          }),\n          retries,\n        )\n      }),\n      scan((prev, event) => {\n        if (event.type === 'error') {\n          return {\n            ...prev,\n            error: event.error,\n            retryCount: event.retryCount,\n            isRetrying: event.retrying,\n            autoRetry: event.autoRetry,\n            canRetry: event.canRetry,\n          }\n        }\n        if (event.type === 'result') {\n          return {\n            ...prev,\n            error: null,\n            isRetrying: false,\n            fromCache: event.result.fromCache,\n            connected: event.result.connected,\n            isLoading: false,\n            items: removePublishedWithDrafts(event.result.documents),\n            isLoadingFullList: false,\n          }\n        }\n        if (event.type === 'loadFullList') {\n          return {\n            ...prev,\n            error: null,\n            isLoadingFullList: true,\n          }\n        }\n        // @ts-expect-error - all cases should be covered\n        throw new Error(`Unexpected event type: ${event.type}`)\n      }, INITIAL_QUERY_STATE),\n    )\n  }, [\n    client,\n    searchFilter,\n    paramsProp,\n    schema,\n    perspective,\n    searchQuery,\n    sortOrder,\n    typeNameFromFilter,\n    maxFieldDepth,\n    searchStrategy,\n    onFetchFullList$,\n    onRetry$,\n  ])\n\n  const {\n    error,\n    items,\n    isLoading,\n    fromCache,\n    connected,\n    canRetry,\n    isLoadingFullList,\n    isRetrying,\n    autoRetry,\n    retryCount,\n  } = useObservable(queryResults$, INITIAL_QUERY_STATE)\n\n  return {\n    error,\n    onRetry,\n    isLoading,\n    items,\n    isRetrying,\n    canRetry,\n    retryCount,\n    autoRetry,\n    connected,\n    fromCache,\n    onLoadFullList,\n    isLoadingFullList,\n  }\n}\n\n// todo: candidate for re-use\nconst nonErrorThrownWarning = `[WARNING: This was thrown as a non-error. Only Error instances should be thrown]`\nfunction safeError(thrown: unknown): Error {\n  if (thrown instanceof Error) {\n    return thrown\n  }\n  if (typeof thrown === 'object' && thrown !== null) {\n    if ('message' in thrown && typeof thrown.message === 'string') {\n      return new Error(`${thrown.message} ${nonErrorThrownWarning}`)\n    }\n    return new Error(`${String(thrown)} ${nonErrorThrownWarning}`)\n  }\n  return new Error(`${String(thrown)} ${nonErrorThrownWarning}`)\n}\n","import {SearchIcon, SpinnerIcon} from '@sanity/icons'\nimport {Box, TextInput} from '@sanity/ui'\nimport {memo, useCallback, useEffect, useMemo, useState} from 'react'\nimport {useObservableEvent} from 'react-rx'\nimport {debounce, map, type Observable, of, tap, timer} from 'rxjs'\nimport {\n  type GeneralPreviewLayoutKey,\n  useActiveReleases,\n  useI18nText,\n  usePerspective,\n  useReconnectingToast,\n  useSchema,\n  useTranslation,\n  useUnique,\n} from 'sanity'\nimport {keyframes, styled} from 'styled-components'\n\nimport {structureLocaleNamespace} from '../../i18n'\nimport {type BaseStructureToolPaneProps} from '../types'\nimport {EMPTY_RECORD, FULL_LIST_LIMIT} from './constants'\nimport {DocumentListPaneContent} from './DocumentListPaneContent'\nimport {applyOrderingFunctions, findStaticTypesInFilter} from './helpers'\nimport {useShallowUnique} from './PaneContainer'\nimport {type LoadingVariant, type SortOrder} from './types'\nimport {useDocumentList} from './useDocumentList'\n\n/**\n * @internal\n */\nexport type DocumentListPaneProps = BaseStructureToolPaneProps<'documentList'> & {\n  sortOrder?: SortOrder\n  layout?: Exclude<GeneralPreviewLayoutKey, 'sheetList'>\n}\n\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`\n\nconst fadeIn = keyframes`\n  0% {\n    opacity: 0;\n  }\n  50% {\n    opacity: 0.1;\n  }\n  100% {\n    opacity: 0.4;\n  }\n`\n\nconst AnimatedSpinnerIcon = styled(SpinnerIcon)`\n  animation: ${rotate} 500ms linear infinite;\n`\n\nconst SubtleSpinnerIcon = styled(SpinnerIcon)`\n  animation: ${rotate} 1500ms linear infinite;\n  opacity: 0.4;\n`\n\nconst DelayedSubtleSpinnerIcon = styled(SpinnerIcon)`\n  animation:\n    ${rotate} 1500ms linear infinite,\n    ${fadeIn} 1000ms linear;\n  opacity: 0.4;\n`\n\n/**\n * @internal\n */\n\nexport const DocumentListPane = memo(function DocumentListPane(props: DocumentListPaneProps) {\n  const {childItemId, isActive, pane, paneKey, sortOrder: sortOrderRaw, layout} = props\n  const schema = useSchema()\n  const releases = useActiveReleases()\n  const {perspectiveStack} = usePerspective()\n  const {displayOptions, options} = pane\n  const {apiVersion, filter} = options\n  const params = useShallowUnique(options.params || EMPTY_RECORD)\n  const typeName = useMemo(() => {\n    const staticTypes = findStaticTypesInFilter(filter, params)\n    if (staticTypes?.length === 1) return staticTypes[0]\n    return null\n  }, [filter, params])\n\n  const showIcons = displayOptions?.showIcons !== false\n\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {title} = useI18nText(pane)\n\n  const [searchQuery, setSearchQuery] = useState<string>('')\n  const [searchInputValue, setSearchInputValue] = useState<string>('')\n  const [searchInputElement, setSearchInputElement] = useState<HTMLInputElement | null>(null)\n\n  const sortWithOrderingFn =\n    typeName && sortOrderRaw\n      ? applyOrderingFunctions(sortOrderRaw, schema.get(typeName) as any)\n      : sortOrderRaw\n\n  const sortOrder = useUnique(sortWithOrderingFn)\n\n  const {\n    error,\n    isLoadingFullList,\n    isLoading: documentListIsLoading,\n    items,\n    fromCache,\n    isRetrying,\n    autoRetry,\n    canRetry,\n    retryCount,\n    connected,\n    onLoadFullList,\n    onRetry,\n  } = useDocumentList({\n    apiVersion,\n    filter,\n    perspective: perspectiveStack,\n    params,\n    searchQuery: searchQuery?.trim(),\n    sortOrder,\n  })\n\n  const isLoading = documentListIsLoading || releases.loading\n\n  const handleQueryChange = useObservableEvent(\n    (event$: Observable<React.ChangeEvent<HTMLInputElement>>) => {\n      return event$.pipe(\n        map((event) => event.target.value),\n        tap(setSearchInputValue),\n        debounce((value) => (value === '' ? of('') : timer(300))),\n        tap(setSearchQuery),\n      )\n    },\n  )\n\n  const handleClearSearch = useCallback(() => {\n    setSearchQuery('')\n    setSearchInputValue('')\n  }, [])\n\n  const handleSearchKeyDown = useCallback(\n    (event: React.KeyboardEvent<HTMLInputElement>) => {\n      if (event.key === 'Escape') {\n        handleClearSearch()\n      }\n    },\n    [handleClearSearch],\n  )\n\n  const [enableSearchSpinner, setEnableSearchSpinner] = useState<string | void>()\n\n  useEffect(() => {\n    if (!enableSearchSpinner && !isLoading) {\n      setEnableSearchSpinner(paneKey)\n    }\n  }, [enableSearchSpinner, isLoading, paneKey])\n\n  useEffect(() => {\n    // Clear search field and disable search spinner\n    // when switching between panes (i.e. when paneKey changes).\n    handleClearSearch()\n    setEnableSearchSpinner()\n  }, [paneKey, handleClearSearch])\n\n  const loadingVariant: LoadingVariant = useMemo(() => {\n    if (connected && isLoading && enableSearchSpinner === paneKey) {\n      return 'spinner'\n    }\n    if (connected && fromCache) {\n      return 'subtle'\n    }\n\n    return 'initial'\n  }, [connected, enableSearchSpinner, fromCache, isLoading, paneKey])\n\n  const textInputIcon = useMemo(() => {\n    if (loadingVariant === 'spinner') {\n      return AnimatedSpinnerIcon\n    }\n    if (searchInputValue && loadingVariant === 'subtle') {\n      return SubtleSpinnerIcon\n    }\n    return SearchIcon\n  }, [loadingVariant, searchInputValue])\n\n  useReconnectingToast(!connected)\n\n  return (\n    <>\n      <Box paddingX={3} paddingBottom={3}>\n        <TextInput\n          aria-label={t('panes.document-list-pane.search-input.aria-label')}\n          autoComplete=\"off\"\n          border={false}\n          clearButton={Boolean(searchQuery)}\n          fontSize={[2, 2, 1]}\n          icon={textInputIcon}\n          iconRight={\n            !connected || (loadingVariant === 'subtle' && !searchInputValue)\n              ? DelayedSubtleSpinnerIcon\n              : null\n          }\n          onChange={handleQueryChange}\n          onClear={handleClearSearch}\n          onKeyDown={handleSearchKeyDown}\n          padding={2}\n          placeholder={t('panes.document-list-pane.search-input.placeholder')}\n          radius={2}\n          ref={setSearchInputElement}\n          spellCheck={false}\n          value={searchInputValue}\n        />\n      </Box>\n      <DocumentListPaneContent\n        key={paneKey}\n        childItemId={childItemId}\n        error={error}\n        filterIsSimpleTypeConstraint={!!typeName}\n        hasMaxItems={items.length === FULL_LIST_LIMIT}\n        hasSearchQuery={Boolean(searchQuery)}\n        isActive={isActive}\n        isLazyLoading={isLoadingFullList}\n        isLoading={isLoading}\n        autoRetry={autoRetry}\n        canRetry={canRetry}\n        retryCount={retryCount}\n        isRetrying={isRetrying}\n        isConnected={connected}\n        items={items}\n        layout={layout}\n        muted={loadingVariant === 'subtle'}\n        loadingVariant={loadingVariant}\n        onEndReached={onLoadFullList}\n        onRetry={onRetry}\n        paneTitle={title}\n        searchInputElement={searchInputElement}\n        showIcons={showIcons}\n      />\n    </>\n  )\n})\n","import {ArrowLeftIcon} from '@sanity/icons'\nimport {memo, type ReactNode, useMemo} from 'react'\nimport {type GeneralPreviewLayoutKey, type InitialValueTemplateItem} from 'sanity'\n\nimport {Button, TooltipDelayGroupProvider} from '../../../ui-components'\nimport {\n  BackLink,\n  PaneHeader as StructurePaneHeader,\n  PaneHeaderActions,\n  usePane,\n} from '../../components'\nimport {\n  type PaneMenuItem,\n  type PaneMenuItemGroup,\n  type StructureToolPaneActionHandler,\n} from '../../types'\nimport {useStructureTool} from '../../useStructureTool'\nimport {type SortOrder} from './types'\n\ninterface PaneHeaderProps {\n  contentAfter?: ReactNode\n  index: number\n  initialValueTemplates?: InitialValueTemplateItem[]\n  menuItemGroups?: PaneMenuItemGroup[]\n  menuItems?: PaneMenuItem[]\n  setLayout: (layout: GeneralPreviewLayoutKey) => void\n  setSortOrder: (sortOrder: SortOrder) => void\n  title: string\n}\n\nexport const PaneHeader = memo(\n  ({\n    contentAfter,\n    index,\n    initialValueTemplates = [],\n    menuItemGroups = [],\n    menuItems = [],\n    setLayout,\n    setSortOrder,\n    title,\n  }: PaneHeaderProps) => {\n    const {features} = useStructureTool()\n    const {collapsed, isLast} = usePane()\n    // Prevent focus if this is the last (non-collapsed) pane.\n    const tabIndex = isLast && !collapsed ? -1 : 0\n\n    const actionHandlers = useMemo((): Record<string, StructureToolPaneActionHandler> => {\n      return {\n        setLayout: ({layout: value}: {layout: GeneralPreviewLayoutKey}) => {\n          setLayout(value)\n        },\n        setSortOrder: (sort: SortOrder) => {\n          setSortOrder(sort)\n        },\n      }\n    }, [setLayout, setSortOrder])\n\n    return (\n      <TooltipDelayGroupProvider>\n        <StructurePaneHeader\n          actions={\n            <PaneHeaderActions\n              initialValueTemplateItems={initialValueTemplates}\n              actionHandlers={actionHandlers}\n              menuItemGroups={menuItemGroups}\n              menuItems={menuItems}\n            />\n          }\n          backButton={\n            features.backButton &&\n            index > 0 && (\n              <Button\n                as={BackLink}\n                data-as=\"a\"\n                icon={ArrowLeftIcon}\n                mode=\"bleed\"\n                tooltipProps={{content: 'Back'}}\n              />\n            )\n          }\n          contentAfter={contentAfter}\n          tabIndex={tabIndex}\n          title={title}\n        />\n      </TooltipDelayGroupProvider>\n    )\n  },\n)\n\nPaneHeader.displayName = 'Memo(PaneHeader)'\n","'use no memo'\n// The `use no memo` directive is due to a known issue with react-table and react compiler: https://github.com/TanStack/table/issues/5567\n\nimport {type SanityDocument} from '@sanity/client'\nimport {Checkbox} from '@sanity/ui'\nimport {type CellContext} from '@tanstack/react-table'\nimport {type MouseEvent, useCallback} from 'react'\n\nexport function DocumentSheetListSelect(props: CellContext<SanityDocument, unknown>) {\n  const {row, table} = props\n\n  const {selectedAnchor, setSelectedAnchor} = table.options.meta || {}\n\n  const handleOnClick = useCallback(\n    (e: MouseEvent<HTMLInputElement>) => {\n      if (e.shiftKey && selectedAnchor !== null && selectedAnchor !== undefined) {\n        const shiftClickIndex = row.index\n        const lowerIndex = shiftClickIndex < selectedAnchor ? shiftClickIndex : selectedAnchor\n        const upperIndex = shiftClickIndex < selectedAnchor ? selectedAnchor : shiftClickIndex\n\n        const additionalSelectedRows = table\n          .getRowModel()\n          .flatRows.slice(lowerIndex, upperIndex + 1)\n          .map(({id}) => id)\n\n        const currentSelectedRows = table.getSelectedRowModel().rows.map(({id}) => id)\n        table.setRowSelection(() =>\n          [...additionalSelectedRows, ...currentSelectedRows].reduce(\n            (nextSelectedRows, rowId) => ({...nextSelectedRows, [rowId]: true}),\n            {},\n          ),\n        )\n      } else if (setSelectedAnchor) {\n        const isRowCurrentlySelected = row.getIsSelected()\n        if (isRowCurrentlySelected) {\n          // about to unselect so invalidate current anchor\n          setSelectedAnchor(null)\n        } else {\n          // override anchor with new selection index\n          setSelectedAnchor(row.index)\n        }\n\n        row.toggleSelected()\n      }\n    },\n    [selectedAnchor, row, setSelectedAnchor, table],\n  )\n\n  return (\n    <Checkbox\n      style={{paddingLeft: 4}}\n      checked={props.row.getIsSelected()}\n      disabled={!props.row.getCanSelect()}\n      // onChange doesn't have shiftKey in event, but want to control this checkbox\n      // need to define noop onChange to suppress the warning\n      onChange={() => null}\n      onClick={handleOnClick}\n    />\n  )\n}\n","import {type SanityDocument} from '@sanity/types'\nimport {type Table} from '@tanstack/react-table'\nimport {type ReactNode, useCallback, useContext, useEffect, useMemo, useState} from 'react'\nimport {DocumentSheetListContext} from 'sanity/_singletons'\n\ninterface DocumentSheetListProviderProps {\n  children?: ReactNode\n  table: Table<SanityDocument>\n}\n\ntype SelectedCellDetails = {\n  colId: string\n  rowIndex: number\n  state: 'focused' | 'selected'\n} | null\n\n/** @internal */\nexport interface DocumentSheetListContextValue {\n  focusAnchorCell: () => void\n  resetFocusSelection: () => void\n  setSelectedAnchorCell: (colId: string, rowIndex: number) => void\n  getStateByCellId: (\n    colId: string,\n    rowIndex: number,\n  ) => 'focused' | 'selectedAnchor' | 'selectedRange' | null\n  submitFocusedCell: () => void\n}\n\n/** @internal */\nexport const useDocumentSheetListContext = (): DocumentSheetListContextValue => {\n  const context = useContext(DocumentSheetListContext)\n\n  if (context === undefined) {\n    throw new Error('useDocumentSheetListContext must be used within an DocumentSheetListProvider')\n  }\n  return context\n}\n\n/** @internal */\nexport function DocumentSheetListProvider({\n  children,\n  table,\n}: DocumentSheetListProviderProps): ReactNode {\n  const [selectedAnchorCellDetails, setSelectedAnchorCellDetails] =\n    useState<SelectedCellDetails>(null)\n  const [selectedRangeCellIndexes, setSelectedRangeCellIndexes] = useState<number[]>([])\n\n  const clearAndSetFocusSelection = useCallback(\n    (nextAnchorDetails: SelectedCellDetails = null) => {\n      if (\n        selectedAnchorCellDetails?.state === 'focused' &&\n        document.activeElement instanceof HTMLElement\n      ) {\n        document.activeElement.blur()\n      }\n\n      setSelectedAnchorCellDetails(nextAnchorDetails)\n      setSelectedRangeCellIndexes([])\n    },\n    [selectedAnchorCellDetails],\n  )\n\n  const resetFocusSelection = useCallback(\n    () => clearAndSetFocusSelection(),\n    [clearAndSetFocusSelection],\n  )\n\n  const changeSelectionColumn = useCallback(\n    (direction: 'left' | 'right') => {\n      if (!selectedAnchorCellDetails) return\n\n      const visibleColumns = table.getVisibleLeafColumns()\n      const columnIndexAfterMove =\n        visibleColumns.findIndex((col) => col.id === selectedAnchorCellDetails.colId) +\n        (direction === 'left' ? -1 : 1)\n\n      if (columnIndexAfterMove < 0 || columnIndexAfterMove >= visibleColumns.length) return\n\n      clearAndSetFocusSelection({\n        colId: visibleColumns[columnIndexAfterMove].id,\n        rowIndex: selectedAnchorCellDetails.rowIndex,\n        state: 'selected',\n      })\n    },\n    [clearAndSetFocusSelection, selectedAnchorCellDetails, table],\n  )\n\n  const changeSelectionRange = useCallback(\n    (direction: 'up' | 'down') => {\n      if (!selectedAnchorCellDetails) return\n\n      setSelectedRangeCellIndexes((previousSelection) => {\n        const {rowIndex: anchorIndex} = selectedAnchorCellDetails\n        const getNextIndex = (startingIndex: number) =>\n          startingIndex + (direction === 'down' ? 1 : -1)\n        // if no cells are selected, select the cell in the direction\n        if (!previousSelection.length) {\n          const firstSelectedIndex = getNextIndex(anchorIndex)\n          if (firstSelectedIndex < 0) return []\n          return [firstSelectedIndex]\n        }\n        const lastIndexSelected = previousSelection[previousSelection.length - 1]\n        const nextIndex = getNextIndex(lastIndexSelected)\n\n        // if the cell in the direction is out of bounds, return the previous selection\n        if (nextIndex < 0) return previousSelection\n\n        // if the cell in the direction is the same as the focused cell, deselect all cells\n        if (nextIndex === anchorIndex) return []\n\n        // if the cell in the direction is already selected, deselect the last selected cell\n        if (previousSelection.includes(nextIndex)) {\n          return previousSelection.slice(0, -1)\n        }\n\n        return [...previousSelection, nextIndex]\n      })\n    },\n    [selectedAnchorCellDetails],\n  )\n\n  const setSelectedAnchorCell = useCallback(\n    (colId: string, rowIndex: number) => {\n      clearAndSetFocusSelection({colId, rowIndex, state: 'selected'})\n    },\n    [clearAndSetFocusSelection],\n  )\n\n  const handleEscapePress = useCallback(() => {\n    if (!selectedAnchorCellDetails) return\n    if (selectedRangeCellIndexes.length) {\n      // only clear selected range if it exists\n      setSelectedRangeCellIndexes([])\n    } else {\n      const nextAnchorCellDetails: SelectedCellDetails =\n        selectedAnchorCellDetails.state === 'selected'\n          ? null\n          : {\n              ...selectedAnchorCellDetails,\n              state: 'selected',\n            }\n      clearAndSetFocusSelection(nextAnchorCellDetails)\n    }\n  }, [clearAndSetFocusSelection, selectedAnchorCellDetails, selectedRangeCellIndexes.length])\n\n  const handleUpDownKey = useCallback(\n    (isShiftKey: boolean, key: string) => {\n      if (!selectedAnchorCellDetails) return\n\n      const direction = key === 'ArrowDown' ? 'down' : 'up'\n      const offset = direction === 'down' ? 1 : -1\n\n      if (isShiftKey) {\n        changeSelectionRange(direction)\n      } else {\n        const newSelectedCellRowIndex = selectedAnchorCellDetails.rowIndex + offset\n        if (newSelectedCellRowIndex < 0) return\n\n        setSelectedAnchorCell(selectedAnchorCellDetails.colId, newSelectedCellRowIndex)\n      }\n    },\n    [changeSelectionRange, selectedAnchorCellDetails, setSelectedAnchorCell],\n  )\n\n  const handleAnchorKeydown = useCallback(\n    (event: KeyboardEvent) => {\n      if (!selectedAnchorCellDetails) return\n\n      const {key, shiftKey} = event\n\n      switch (key) {\n        case 'Shift':\n          break // shift allow should do nothing\n\n        case 'Escape':\n          handleEscapePress()\n          break\n\n        case 'ArrowDown':\n        case 'ArrowUp':\n          event.preventDefault()\n          handleUpDownKey(shiftKey, key)\n          break\n\n        case 'ArrowLeft':\n        case 'ArrowRight':\n          // when cell is focused, arrows should have default behavior\n          // only prevent default when cell is selected\n          if (selectedAnchorCellDetails.state === 'selected') {\n            event.preventDefault()\n            changeSelectionColumn(key === 'ArrowLeft' ? 'left' : 'right')\n          }\n          break\n\n        default:\n          break\n      }\n    },\n    [selectedAnchorCellDetails, handleEscapePress, handleUpDownKey, changeSelectionColumn],\n  )\n\n  const handleAnchorClick = useCallback(\n    (event: MouseEvent) => {\n      if (!selectedAnchorCellDetails) return\n      const isClickInAnchorCell = document\n        .getElementById(\n          `cell-${selectedAnchorCellDetails.colId}-${selectedAnchorCellDetails.rowIndex}`,\n        )\n        ?.contains(event.target as Node)\n\n      if (!isClickInAnchorCell) resetFocusSelection()\n    },\n    [resetFocusSelection, selectedAnchorCellDetails],\n  )\n\n  useEffect(() => {\n    if (selectedAnchorCellDetails) {\n      document.addEventListener('keydown', handleAnchorKeydown)\n      document.addEventListener('click', handleAnchorClick)\n    }\n\n    return () => {\n      if (selectedAnchorCellDetails) {\n        document.removeEventListener('keydown', handleAnchorKeydown)\n        document.removeEventListener('click', handleAnchorClick)\n      }\n    }\n  }, [handleAnchorClick, handleAnchorKeydown, selectedAnchorCellDetails])\n\n  const focusAnchorCell = useCallback(\n    () =>\n      setSelectedAnchorCellDetails((anchorCellDetails) => {\n        if (!anchorCellDetails) return null\n\n        return {...anchorCellDetails, state: 'focused'}\n      }),\n    [],\n  )\n\n  const getStateByCellId = useCallback(\n    (colId: string, rowIndex: number) => {\n      if (selectedAnchorCellDetails?.colId !== colId) return null\n\n      if (selectedAnchorCellDetails.rowIndex === rowIndex)\n        return selectedAnchorCellDetails.state === 'focused' ? 'focused' : 'selectedAnchor'\n\n      if (selectedRangeCellIndexes.includes(rowIndex)) return 'selectedRange'\n\n      return null\n    },\n    [selectedAnchorCellDetails, selectedRangeCellIndexes],\n  )\n\n  const submitFocusedCell = useCallback(() => {\n    if (!selectedAnchorCellDetails) return\n\n    clearAndSetFocusSelection({\n      colId: selectedAnchorCellDetails.colId,\n      rowIndex: selectedAnchorCellDetails.rowIndex + 1,\n      state: 'selected',\n    })\n  }, [clearAndSetFocusSelection, selectedAnchorCellDetails])\n\n  const value = useMemo<DocumentSheetListContextValue>(\n    () => ({\n      focusAnchorCell,\n      resetFocusSelection,\n      setSelectedAnchorCell,\n      getStateByCellId,\n      submitFocusedCell,\n    }),\n    [\n      focusAnchorCell,\n      resetFocusSelection,\n      setSelectedAnchorCell,\n      getStateByCellId,\n      submitFocusedCell,\n    ],\n  )\n\n  return (\n    <DocumentSheetListContext.Provider value={value}>{children}</DocumentSheetListContext.Provider>\n  )\n}\n","'use no memo'\n// The `use no memo` directive is due to a known issue with react-table and react compiler: https://github.com/TanStack/table/issues/5567\n\n/* eslint-disable i18next/no-literal-string */\nimport {type ObjectFieldType} from '@sanity/types'\nimport {Select, TextInput} from '@sanity/ui'\nimport {type Cell, type CellContext, flexRender} from '@tanstack/react-table'\nimport {type MouseEventHandler, useCallback, useEffect, useRef, useState} from 'react'\nimport {type SanityDocument} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {useDocumentSheetListContext} from './DocumentSheetListProvider'\n\nconst DataCell = styled.td<{width: number}>`\n  display: flex;\n  overflow: hidden;\n  box-sizing: border-box;\n  width: ${({width}) => width}px;\n  border-top: 1px solid var(--card-border-color);\n  background-color: var(--card-bg-color);\n`\n\nconst PinnedDataCell = styled(DataCell)`\n  position: sticky;\n  z-index: 2;\n`\n\ninterface SheetListCellInnerProps extends CellContext<SanityDocument, unknown> {\n  fieldType: ObjectFieldType\n}\n\ntype CellInputElement = HTMLInputElement | HTMLSelectElement\ntype InputRef = CellInputElement | null\n\n/** @internal */\nexport function SheetListCellInner(props: SheetListCellInnerProps) {\n  const {getValue, column, row, fieldType} = props\n  const cellId = `cell-${column.id}-${row.index}`\n  const [renderValue, setRenderValue] = useState<string>(getValue() as string)\n  const [isDirty, setIsDirty] = useState(false)\n  const inputRef = useRef<InputRef>(null)\n  const {\n    focusAnchorCell,\n    resetFocusSelection,\n    setSelectedAnchorCell,\n    getStateByCellId,\n    submitFocusedCell,\n  } = useDocumentSheetListContext()\n  const cellState = getStateByCellId(column.id, row.index)\n\n  const handleOnFocus = useCallback(() => {\n    // reselect in cases where focus achieved without initial mousedown\n    setSelectedAnchorCell(column.id, row.index)\n    focusAnchorCell()\n  }, [column.id, focusAnchorCell, row.index, setSelectedAnchorCell])\n  const {patchDocument} = props.table.options.meta || {}\n\n  const handleProgrammaticFocus = () => {\n    inputRef.current?.focus()\n    if (inputRef.current instanceof HTMLInputElement) {\n      inputRef.current.select()\n    }\n  }\n\n  const handleOnMouseDown: MouseEventHandler<CellInputElement> = (event) => {\n    if (event.detail === 2) {\n      handleProgrammaticFocus()\n    } else {\n      event.preventDefault()\n      setSelectedAnchorCell(column.id, row.index)\n    }\n  }\n\n  const handleOnEnterDown = useCallback(\n    (event: KeyboardEvent) => {\n      const {key} = event\n      if (key === 'Enter') {\n        if (cellState === 'selectedAnchor') handleProgrammaticFocus()\n        if (cellState === 'focused') submitFocusedCell()\n      }\n    },\n    [cellState, submitFocusedCell],\n  )\n\n  const handleOnChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setIsDirty(true)\n    setRenderValue(event.target.value)\n  }\n\n  const handleOnBlur = () => {\n    if (isDirty) {\n      patchDocument?.(row.id, column.id, renderValue)\n      setIsDirty(false)\n    }\n    resetFocusSelection()\n  }\n\n  const handlePaste = useCallback(\n    (event: ClipboardEvent) => {\n      const clipboardData = event.clipboardData?.getData('Text')\n\n      if (typeof clipboardData === 'string' || typeof clipboardData === 'number') {\n        setRenderValue(clipboardData)\n        // patch immediately when pasting\n        patchDocument?.(row.id, column.id, clipboardData)\n      }\n    },\n    [column.id, patchDocument, row.id],\n  )\n\n  const handleCopy = useCallback(() => {\n    navigator.clipboard.writeText(renderValue.toString())\n  }, [renderValue])\n\n  useEffect(() => {\n    if (cellState === 'selectedAnchor' || cellState === 'focused')\n      // only listen for enter key when cell is focused or anchor\n      document.addEventListener('keydown', handleOnEnterDown)\n    if (cellState === 'selectedAnchor' || cellState === 'selectedRange')\n      // if cell is selected, paste events should be handled\n      document.addEventListener('paste', handlePaste)\n\n    if (cellState === 'selectedAnchor')\n      // only allow copying when cell is selected anchor\n      document.addEventListener('copy', handleCopy)\n\n    return () => {\n      if (cellState === 'selectedAnchor' || cellState === 'focused')\n        document.removeEventListener('keydown', handleOnEnterDown)\n      if (cellState === 'selectedAnchor' || cellState === 'selectedRange')\n        document.removeEventListener('paste', handlePaste)\n      if (cellState === 'selectedAnchor') document.removeEventListener('copy', handleCopy)\n    }\n  }, [\n    cellId,\n    cellState,\n    column.id,\n    getStateByCellId,\n    handleCopy,\n    handleOnEnterDown,\n    handlePaste,\n    row.index,\n  ])\n\n  const getBorderStyle = () => {\n    if (cellState === 'focused') return '2px solid blue'\n    if (cellState === 'selectedRange') return '1px solid green'\n    if (cellState === 'selectedAnchor') return '1px solid blue'\n\n    return '1px solid transparent'\n  }\n\n  const inputProps = {\n    'onFocus': handleOnFocus,\n    'onBlur': handleOnBlur,\n    'onMouseDown': handleOnMouseDown,\n    'aria-selected': !!cellState,\n    'data-testid': cellId,\n    'id': cellId,\n    'ref': (ref: InputRef) => {\n      inputRef.current = ref\n    },\n  }\n\n  if (fieldType.name === 'boolean') {\n    return (\n      <Select\n        {...inputProps}\n        onChange={() => null}\n        radius={0}\n        style={{\n          boxShadow: 'none',\n          border: getBorderStyle(),\n          padding: 0,\n        }}\n        value={JSON.stringify(renderValue)}\n      >\n        <option value=\"True\">True</option>\n        <option value=\"False\">False</option>\n      </Select>\n    )\n  }\n\n  return (\n    <TextInput\n      {...inputProps}\n      size={0}\n      radius={0}\n      border={false}\n      style={{\n        border: getBorderStyle(),\n        padding: '22px 16px',\n      }}\n      value={\n        typeof renderValue === 'string' || typeof renderValue === 'number'\n          ? renderValue\n          : JSON.stringify(renderValue)\n      }\n      onChange={handleOnChange}\n    />\n  )\n}\n\n/** @internal */\nexport function SheetListCell(cell: Cell<SanityDocument, unknown>) {\n  const isPinned = cell.column.getIsPinned()\n  const Cell = isPinned ? PinnedDataCell : DataCell\n  const borderWidth = isPinned && cell.column.getIsLastColumn('left') ? 2 : 1\n\n  return (\n    <Cell\n      key={cell.row.original._id + cell.id}\n      style={{\n        left: cell.column.getStart('left') ?? undefined,\n        borderRight: `${borderWidth}px solid var(--card-border-color)`,\n      }}\n      width={cell.column.getSize()}\n    >\n      {flexRender(cell.column.columnDef.cell, cell.getContext?.())}\n    </Cell>\n  )\n}\n","'use no memo'\n// The `use no memo` directive is due to a known issue with react-table and react compiler: https://github.com/TanStack/table/issues/5567\n\nimport {isObjectSchemaType, type ObjectSchemaType} from '@sanity/types'\nimport {Box, Checkbox, Flex, Text} from '@sanity/ui'\nimport {\n  type AccessorKeyColumnDef,\n  createColumnHelper,\n  type GroupColumnDef,\n  type VisibilityState,\n} from '@tanstack/react-table'\nimport {useMemo} from 'react'\nimport {useObservable} from 'react-rx'\nimport {\n  type DocumentPreviewStore,\n  DocumentStatusIndicator,\n  getPreviewStateObservable,\n  type SanityDocument,\n  type SchemaType,\n  useDocumentPreviewStore,\n  useDocumentVersionInfo,\n} from 'sanity'\n\nimport {DocumentSheetListSelect} from './DocumentSheetListSelect'\nimport {SheetListCellInner} from './SheetListCell'\n\nexport const VISIBLE_COLUMN_LIMIT = 5\n\nconst PreviewCell = (props: {\n  documentPreviewStore: DocumentPreviewStore\n  schemaType: SchemaType\n  row: {\n    original: SanityDocument\n  }\n}) => {\n  const {documentPreviewStore, row, schemaType} = props\n  const previewStateObservable = useMemo(\n    () => getPreviewStateObservable(documentPreviewStore, schemaType, row.original._id),\n    [documentPreviewStore, row.original._id, schemaType],\n  )\n\n  const versionsInfo = useDocumentVersionInfo(row.original._id)\n\n  const {snapshot, isLoading} = useObservable(previewStateObservable, {\n    snapshot: null,\n    isLoading: true,\n  })\n  if (isLoading) {\n    return (\n      <Text size={1} muted>\n        Loading...\n      </Text>\n    )\n  }\n  const displayValue = (snapshot?.title ?? 'Untitled') as string\n\n  return (\n    <Flex align=\"center\" gap={3}>\n      <DocumentStatusIndicator\n        draft={versionsInfo.draft}\n        published={versionsInfo.published}\n        versions={undefined}\n      />\n      <Text size={1}>{displayValue}</Text>\n    </Flex>\n  )\n}\n\nconst columnHelper = createColumnHelper<SanityDocument>()\nconst SUPPORTED_FIELDS = ['string', 'number', 'boolean']\n\ntype Columns = (\n  | AccessorKeyColumnDef<SanityDocument, unknown>\n  | GroupColumnDef<SanityDocument, unknown>\n)[]\n\nconst getColsFromSchemaType = (schemaType: ObjectSchemaType, parentalField?: string): Columns => {\n  return schemaType.fields.reduce<Columns>((tableColumns: Columns, field) => {\n    const {type, name} = field\n    if (SUPPORTED_FIELDS.includes(type.name)) {\n      const nextCol = columnHelper.accessor(\n        // accessor must use dot notation for internal tanstack method of reading cell data\n        parentalField ? `${parentalField}.${field.name}` : field.name,\n        {\n          id: parentalField ? `${parentalField}_${field.name}` : field.name,\n          header: field.type.title,\n          enableHiding: true,\n          cell: (info) => <SheetListCellInner {...info} fieldType={type} />,\n        },\n      )\n\n      return [...tableColumns, nextCol]\n    }\n\n    // if first layer nested object\n    if (type.name === 'object' && isObjectSchemaType(type) && !parentalField) {\n      return [\n        ...tableColumns,\n        columnHelper.group({header: name, columns: getColsFromSchemaType(type, field.name)}),\n      ]\n    }\n\n    return tableColumns\n  }, [])\n}\n\n// Type guard function to check if a column is of type GroupColumnDef\nfunction isAccessorKeyColumnDef(\n  column: Columns[number],\n): column is AccessorKeyColumnDef<SanityDocument, unknown> {\n  return 'accessorKey' in column\n}\nfunction isGroupColumnDef(\n  column: AccessorKeyColumnDef<SanityDocument, unknown> | GroupColumnDef<SanityDocument, unknown>,\n): column is GroupColumnDef<SanityDocument, unknown> {\n  return 'columns' in column\n}\n\nconst flatColumns = (cols: Columns): AccessorKeyColumnDef<SanityDocument, unknown>[] => {\n  return cols.flatMap((col) => {\n    if (isAccessorKeyColumnDef(col)) {\n      return col\n    }\n    if (isGroupColumnDef(col)) {\n      return col.columns ? flatColumns(col.columns) : []\n    }\n    return []\n  })\n}\n\nexport function useDocumentSheetColumns(documentSchemaType?: ObjectSchemaType) {\n  const documentPreviewStore = useDocumentPreviewStore()\n\n  const columns: Columns = useMemo(() => {\n    if (!documentSchemaType) {\n      return []\n    }\n    return [\n      columnHelper.display({\n        id: 'selected',\n        enableHiding: false,\n        header: (info) => (\n          <Box>\n            <Checkbox\n              style={{paddingLeft: 4}}\n              indeterminate={info.table.getIsSomeRowsSelected()}\n              onChange={info.table.getToggleAllPageRowsSelectedHandler()}\n            />\n            {/* eslint-disable-next-line i18next/no-literal-string */}\n            {info.table.getSelectedRowModel().rows.length} selected\n          </Box>\n        ),\n        cell: DocumentSheetListSelect,\n      }),\n      columnHelper.accessor('Preview', {\n        enableHiding: false,\n        id: 'Preview',\n        cell: (info) => {\n          return (\n            <PreviewCell\n              {...info}\n              documentPreviewStore={documentPreviewStore}\n              schemaType={documentSchemaType}\n            />\n          )\n        },\n      }),\n      ...getColsFromSchemaType(documentSchemaType),\n    ]\n  }, [documentPreviewStore, documentSchemaType])\n\n  const [initialColumnsVisibility]: [VisibilityState, number] = useMemo(\n    () =>\n      flatColumns(columns).reduce<[VisibilityState, number]>(\n        ([accCols, countAllowedVisible], column) => {\n          if (!column.id) throw new Error('Column must have an id')\n          const visibilityKey = column.id\n\n          // this column is always visible\n          if (!column.enableHiding) {\n            return [{...accCols, [visibilityKey]: true}, countAllowedVisible]\n          }\n\n          // have already reached column visibility limit, hide column by default\n          if (countAllowedVisible === VISIBLE_COLUMN_LIMIT) {\n            return [{...accCols, [visibilityKey]: false}, countAllowedVisible]\n          }\n\n          return [{...accCols, [visibilityKey]: true}, countAllowedVisible + 1]\n        },\n        [{}, 0],\n      ),\n    [columns],\n  )\n\n  return {columns, initialColumnsVisibility}\n}\n","'use no memo'\n// The `use no memo` directive is due to a known issue with react-table and react compiler: https://github.com/TanStack/table/issues/5567\n\nimport {Box, Checkbox, Flex, Menu, Stack, Text} from '@sanity/ui'\nimport {type Column, type Table} from '@tanstack/react-table'\nimport {useCallback} from 'react'\nimport {type SanityDocument, useTranslation} from 'sanity'\n\nimport {Button, MenuButton} from '../../../../ui-components'\nimport {VISIBLE_COLUMN_LIMIT} from './useDocumentSheetColumns'\n\ntype ColumnsControlProps = {\n  table: Table<SanityDocument>\n}\n\nexport function ColumnsControl({table}: ColumnsControlProps) {\n  const {t} = useTranslation()\n  const isVisibleLimitReached =\n    table.getVisibleLeafColumns().filter((col) => col.getCanHide()).length >= VISIBLE_COLUMN_LIMIT\n\n  const setInitialColumns = useCallback(() => {\n    table.resetColumnVisibility()\n  }, [table])\n\n  const handleColumnOnChange = (column: Column<SanityDocument, unknown>) => () => {\n    column.toggleVisibility()\n  }\n\n  const getColumnVisibilityDisabled = (column: Column<SanityDocument, unknown>) => {\n    const isColumnVisible = column.getIsVisible()\n    const isSingleColumnVisible =\n      table.getVisibleLeafColumns().filter((col) => col.getCanHide()).length === 1\n\n    return (isVisibleLimitReached && !isColumnVisible) || (isSingleColumnVisible && isColumnVisible)\n  }\n\n  return (\n    <MenuButton\n      button={<Button mode=\"bleed\" text={t('sheet-list.edit-columns')} />}\n      id=\"columns-control\"\n      menu={\n        <Menu padding={3} paddingTop={4} style={{width: 240}}>\n          <Flex direction=\"column\" height=\"fill\" gap={3}>\n            <Text weight=\"semibold\" size={1}>\n              {t('sheet-list.select-fields')}\n            </Text>\n            <Flex style={{flex: '1 1 auto', maxHeight: 320, overflowY: 'scroll'}}>\n              <Stack>\n                {table\n                  .getAllLeafColumns()\n                  .filter((column) => column.getCanHide())\n                  .map((column) => (\n                    <Flex key={column.id} marginY={2} align=\"center\">\n                      <Checkbox\n                        readOnly={getColumnVisibilityDisabled(column)}\n                        checked={column.getIsVisible()}\n                        onChange={handleColumnOnChange(column)}\n                        id={`col-visibility-${column.id}`}\n                        style={{display: 'block'}}\n                      />\n                      <Box flex={1} paddingLeft={3}>\n                        <Text size={1}>\n                          <label htmlFor={`col-visibility-${column.id}`}>\n                            {column.columnDef.header?.toString()}\n                          </label>\n                        </Text>\n                      </Box>\n                    </Flex>\n                  ))}\n              </Stack>\n            </Flex>\n            <Button\n              width=\"fill\"\n              mode=\"ghost\"\n              text={t('sheet-list.reset-columns')}\n              onClick={setInitialColumns}\n            />\n          </Flex>\n        </Menu>\n      }\n      placement=\"bottom\"\n      popover={{portal: true}}\n    />\n  )\n}\n","import {Flex} from '@sanity/ui'\nimport {Filters, SearchHeader, useSearchState} from 'sanity'\nimport {styled} from 'styled-components'\n\nconst SearchContainer = styled(Flex)`\n  flex-shrink: 0;\n`\n\nexport function DocumentSheetListFilter() {\n  const {\n    state: {filtersVisible},\n  } = useSearchState()\n\n  return (\n    <SearchContainer>\n      <SearchHeader />\n      {filtersVisible && <Filters showTypeFilter={false} />}\n    </SearchContainer>\n  )\n}\n","'use no memo'\n// The `use no memo` directive is due to a known issue with react-table and react compiler: https://github.com/TanStack/table/issues/5567\n\nimport {CloseIcon, EllipsisHorizontalIcon} from '@sanity/icons'\nimport {type SanityDocument} from '@sanity/types'\nimport {Box, Flex, Menu, Text} from '@sanity/ui'\nimport {flexRender, type Header as HeaderType, type HeaderGroup} from '@tanstack/react-table'\nimport {useTranslation} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Button, MenuButton, MenuItem, Tooltip} from '../../../../ui-components'\n\nconst Header = styled.th<{width: number}>`\n  margin: 16px;\n  z-index: 1;\n  padding: 22px 0px;\n  border-top: 1px solid var(--card-border-color);\n  background-color: var(--card-badge-default-bg-color);\n  box-sizing: border-box;\n  text-align: left;\n  width: ${({width}) => width}px;\n  max-width: ${({width}) => width}px;\n`\n\nconst PinnedHeader = styled(Header)`\n  position: sticky;\n  z-index: 2;\n`\n\nconst HoverMenu = styled.div`\n  visibility: hidden;\n\n  ${Header}:hover & {\n    visibility: visible;\n  }\n`\n\ntype DocumentSheetListHeaderProps = {\n  header: HeaderType<SanityDocument, unknown>\n  headerGroup: HeaderGroup<SanityDocument>\n}\n\nexport function DocumentSheetListHeader(props: DocumentSheetListHeaderProps) {\n  const {header, headerGroup} = props\n  const {t} = useTranslation()\n\n  const isPinned = header.column.getIsPinned()\n\n  const headerTitle =\n    headerGroup.depth > 0 && !header.column.parent ? null : (\n      <Text size={1} weight=\"semibold\" textOverflow=\"ellipsis\">\n        {flexRender(header.column.columnDef.header, header.getContext())}\n      </Text>\n    )\n\n  const HeaderTag = isPinned ? PinnedHeader : Header\n\n  const canShowHeaderMenu =\n    header.column.getCanHide() &&\n    (headerGroup.depth === 0 ? !header.column.columns.length : header.column.parent)\n\n  const borderWidth = isPinned && header.column.getIsLastColumn('left') ? 2 : 1\n\n  return (\n    <HeaderTag\n      key={header.id}\n      style={{\n        left: header.column.getStart('left') ?? undefined,\n        borderRight: `${borderWidth}px solid var(--card-border-color)`,\n      }}\n      data-testid={`header-${header.id}`}\n      width={header.getSize()}\n    >\n      <Flex justify=\"space-between\" marginX={2} align=\"baseline\">\n        <Tooltip delay={500} content={headerTitle}>\n          <Box style={{boxSizing: 'border-box'}} marginLeft={3} marginRight={3}>\n            {headerTitle}\n          </Box>\n        </Tooltip>\n        {canShowHeaderMenu && (\n          <HoverMenu>\n            <MenuButton\n              button={\n                <Button\n                  tooltipProps={{content: 'Open field menu'}}\n                  mode=\"bleed\"\n                  icon={EllipsisHorizontalIcon}\n                  data-testid=\"field-menu-button\"\n                />\n              }\n              id=\"field menu\"\n              popover={{placement: 'bottom-end'}}\n              menu={\n                <Menu>\n                  <MenuItem\n                    text={t('sheet-list.hide-field')}\n                    icon={CloseIcon}\n                    onClick={() => header.column.toggleVisibility()}\n                  />\n                </Menu>\n              }\n            />\n          </HoverMenu>\n        )}\n      </Flex>\n    </HeaderTag>\n  )\n}\n","'use no memo'\n// The `use no memo` directive is due to a known issue with react-table and react compiler: https://github.com/TanStack/table/issues/5567\n\n/* eslint-disable i18next/no-literal-string */\nimport {\n  ChevronLeftIcon,\n  ChevronRightIcon,\n  DoubleChevronLeftIcon,\n  DoubleChevronRightIcon,\n} from '@sanity/icons'\nimport {Flex, Text} from '@sanity/ui'\nimport {type Table} from '@tanstack/react-table'\nimport {type SanityDocument} from 'sanity'\n\nimport {Button, TooltipDelayGroupProvider} from '../../../../ui-components'\n\nexport function DocumentSheetListPaginator({table}: {table: Table<SanityDocument>}) {\n  return (\n    <TooltipDelayGroupProvider>\n      <Flex gap={3} align={'center'}>\n        <Button\n          onClick={() => table.setPageIndex(0)}\n          disabled={!table.getCanPreviousPage()}\n          icon={DoubleChevronLeftIcon}\n          tooltipProps={{\n            content: 'Go to first page',\n          }}\n        />\n        <Button\n          onClick={() => table.previousPage()}\n          disabled={!table.getCanPreviousPage()}\n          icon={ChevronLeftIcon}\n          tooltipProps={{\n            content: 'Go to previous page',\n          }}\n        />\n        <Text style={{whiteSpace: 'nowrap'}}>\n          {table.getState().pagination.pageIndex + 1} of {table.getPageCount()}\n        </Text>\n\n        <Button\n          onClick={() => table.nextPage()}\n          disabled={!table.getCanNextPage()}\n          icon={ChevronRightIcon}\n          tooltipProps={{\n            content: 'Go to next page',\n          }}\n        />\n        <Button\n          onClick={() => table.setPageIndex(table.getPageCount() - 1)}\n          disabled={!table.getCanNextPage()}\n          icon={DoubleChevronRightIcon}\n          tooltipProps={{\n            content: 'Go to last page',\n          }}\n        />\n        <select\n          value={table.getState().pagination.pageSize}\n          onChange={(e) => {\n            table.setPageSize(Number(e.target.value))\n          }}\n        >\n          {[25, 50, 100].map((pageSize) => (\n            <option key={pageSize} value={pageSize}>\n              {pageSize}\n            </option>\n          ))}\n        </select>\n      </Flex>\n    </TooltipDelayGroupProvider>\n  )\n}\n","import {type ListenEvent, type ListenOptions} from '@sanity/client'\nimport {useCallback, useEffect, useMemo, useReducer, useState} from 'react'\nimport {catchError, of} from 'rxjs'\nimport {DEFAULT_STUDIO_CLIENT_OPTIONS, getDraftId, type SanityDocument, useClient} from 'sanity'\n\ninterface DocumentDeletedAction {\n  id: string\n  type: 'DOCUMENT_DELETED'\n}\n\ninterface DocumentUpdatedAction {\n  payload: SanityDocument\n  type: 'DOCUMENT_UPDATED'\n}\n\ninterface DocumentsSetAction {\n  documents: SanityDocument[]\n  type: 'DOCUMENTS_SET'\n}\n\ninterface DocumentReceivedAction {\n  payload: SanityDocument\n  type: 'DOCUMENT_RECEIVED'\n}\n\nexport type DocumentsReducerAction =\n  | DocumentDeletedAction\n  | DocumentUpdatedAction\n  | DocumentsSetAction\n  | DocumentReceivedAction\n\nexport interface DocumentsReducerState {\n  documents: Record<string, SanityDocument>\n}\n\nfunction createDocumentsSet(documents: SanityDocument[]) {\n  const documentsById = documents.reduce((acc, doc) => ({...acc, [doc._id]: doc}), {})\n  return documentsById\n}\n\nfunction documentsReducer(\n  state: DocumentsReducerState,\n  action: DocumentsReducerAction,\n): DocumentsReducerState {\n  switch (action.type) {\n    case 'DOCUMENTS_SET': {\n      // Create an object with the documents id as key\n      const documents = createDocumentsSet(action.documents)\n\n      return {\n        ...state,\n        documents: documents,\n      }\n    }\n\n    case 'DOCUMENT_RECEIVED': {\n      const nextDocumentResult = action.payload as SanityDocument\n\n      return {\n        ...state,\n        documents: {\n          ...state.documents,\n          [nextDocumentResult._id]: nextDocumentResult,\n        },\n      }\n    }\n\n    case 'DOCUMENT_DELETED': {\n      const {[action.id]: _, ...restDocuments} = state.documents\n\n      return {\n        ...state,\n        documents: restDocuments,\n      }\n    }\n\n    case 'DOCUMENT_UPDATED': {\n      const updatedDocument = action.payload\n      const id = updatedDocument._id as string\n      const document = state.documents[id]\n\n      const nextDocument = {\n        // Add existing document data\n        ...document,\n        // Add incoming document data\n        ...updatedDocument,\n      } satisfies SanityDocument\n\n      return {\n        ...state,\n        documents: {\n          ...state.documents,\n          [id]: nextDocument,\n        },\n      }\n    }\n\n    default:\n      return state\n  }\n}\n\nconst LISTEN_OPTIONS: ListenOptions = {\n  events: ['welcome', 'mutation', 'reconnect'],\n  includeResult: true,\n  visibility: 'query',\n  includeAllVersions: true,\n  tag: 'document-sheet-list-store',\n}\n\n/**\n * TODO:\n * [] Lazy load more documents, reduce initial fetch.\n * [] Add support for sorting and filtering.\n * []  Make a projection of the query according to the schema. e.g. get only the primitive fields and the _id to reduce the data payload.\n */\nexport function useDocumentSheetListStore({\n  filter,\n  params,\n  apiVersion,\n}: {\n  filter: string\n  params?: Record<string, unknown>\n  apiVersion?: string\n}) {\n  const QUERY = `*[${filter}][0...2000]`\n  const client = useClient({\n    ...DEFAULT_STUDIO_CLIENT_OPTIONS,\n    apiVersion: apiVersion || DEFAULT_STUDIO_CLIENT_OPTIONS.apiVersion,\n  })\n  const [state, dispatch] = useReducer(documentsReducer, {\n    documents: {},\n  })\n  const [isLoading, setIsLoading] = useState<boolean>(client !== null)\n  const [error, setError] = useState<Error | null>(null)\n\n  const initialFetch = useCallback(async () => {\n    if (!client) {\n      setIsLoading(false)\n      return\n    }\n    try {\n      const res = await client.fetch(QUERY, params)\n      dispatch({type: 'DOCUMENTS_SET', documents: res})\n      setIsLoading(false)\n    } catch (err) {\n      setError(err)\n    }\n  }, [client, params, QUERY])\n\n  const handleListenerEvent = useCallback(\n    async (event: ListenEvent<Record<string, SanityDocument>>) => {\n      // Fetch all documents on initial connection\n      if (event.type === 'welcome') {\n        setIsLoading(true)\n        await initialFetch()\n        setIsLoading(false)\n      }\n\n      // The reconnect event means that we are trying to reconnect to the realtime listener.\n      // In this case we set loading to true to indicate that we're trying to\n      // reconnect. Once a connection has been established, the welcome event\n      // will be received and we'll fetch all documents again (above).\n      if (event.type === 'reconnect') {\n        setIsLoading(true)\n      }\n\n      // Handle mutations (create, update, delete) from the realtime listener\n      // and update the documents store accordingly\n      if (event.type === 'mutation') {\n        if (event.transition === 'appear') {\n          const nextDocument = event.result as SanityDocument | undefined\n\n          if (nextDocument) {\n            dispatch({\n              type: 'DOCUMENT_RECEIVED',\n              payload: nextDocument,\n            })\n          }\n        }\n\n        if (event.transition === 'disappear') {\n          dispatch({type: 'DOCUMENT_DELETED', id: event.documentId})\n        }\n\n        if (event.transition === 'update') {\n          const updatedDocument = event.result as SanityDocument | undefined\n\n          if (updatedDocument) {\n            dispatch({\n              type: 'DOCUMENT_UPDATED',\n              payload: updatedDocument,\n            })\n          }\n        }\n      }\n    },\n    [initialFetch],\n  )\n\n  const listener$ = useMemo(() => {\n    if (!client) return of()\n\n    const events$ = client.observable.listen(QUERY, params, LISTEN_OPTIONS).pipe(\n      catchError((err) => {\n        setError(err)\n        return of(err)\n      }),\n    )\n\n    return events$\n  }, [client, params, QUERY])\n\n  useEffect(() => {\n    const sub = listener$.subscribe(handleListenerEvent)\n\n    return () => {\n      sub?.unsubscribe()\n    }\n  }, [handleListenerEvent, listener$])\n\n  // Contemplate that we could have drafts and live documents here, merge them.\n  const dataAsArray = useMemo(() => {\n    // Joins the drafts and the live documents\n    const uniques = Object.keys(state.documents).reduce(\n      (acc: {[key: string]: SanityDocument}, key) => {\n        const document = state.documents[key]\n        const isDraft = document._id === getDraftId(document._id)\n        const id = isDraft ? document._id : getDraftId(document._id)\n        // If we already have the document, and this document is not the draft one, it means\n        // the draft hast already been added to the list, so we skip it.\n        if (acc[id] && !isDraft) {\n          return acc\n        }\n        acc[id] = document\n        return acc\n      },\n      {},\n    )\n    return Object.values(uniques)\n  }, [state.documents])\n\n  return {\n    data: dataAsArray,\n    isLoading,\n    error,\n  }\n}\n","import {useMemo} from 'react'\nimport {getPublishedId, useSearchState} from 'sanity'\n\nimport {useDocumentSheetListStore} from './useDocumentSheetListStore'\n\ninterface DocumentSheetListOptions {\n  /** The schemaType.name  */\n  typeName: string\n}\n\nexport function useDocumentSheetList({typeName}: DocumentSheetListOptions) {\n  const {state} = useSearchState()\n\n  const items = useMemo(() => {\n    const map = new Map()\n    state.result.hits.forEach((h) => map.set(getPublishedId(h.hit._id), h.hit))\n    return map\n  }, [state.result.hits])\n\n  // The store is listening to all the documents that match with the _type filter.\n  const {data, isLoading} = useDocumentSheetListStore({\n    filter: `_type == \"${typeName}\"`,\n  })\n\n  // Only return the documents that match with the serverSide filter items.\n  const documents = useMemo(() => {\n    return data.filter((doc) => items.has(getPublishedId(doc._id)))\n  }, [data, items])\n\n  return {data: documents, isLoading}\n}\n","'use no memo'\n// The `use no memo` directive is due to a known issue with react-table and react compiler: https://github.com/TanStack/table/issues/5567\n\nimport {isDocumentSchemaType, type ObjectSchemaType, type SanityDocument} from '@sanity/types'\nimport {Box, Flex, Text} from '@sanity/ui'\nimport {\n  getCoreRowModel,\n  getFilteredRowModel,\n  getPaginationRowModel,\n  type Row,\n  useReactTable,\n} from '@tanstack/react-table'\nimport {useCallback, useEffect, useState} from 'react'\nimport {SearchProvider, useSchema, useSearchState} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {type BaseStructureToolPaneProps} from '../../types'\nimport {ColumnsControl} from './ColumnsControl'\nimport {DocumentSheetListFilter} from './DocumentSheetListFilter'\nimport {DocumentSheetListHeader} from './DocumentSheetListHeader'\nimport {DocumentSheetListPaginator} from './DocumentSheetListPaginator'\nimport {DocumentSheetListProvider} from './DocumentSheetListProvider'\nimport {SheetListCell} from './SheetListCell'\nimport {useDocumentSheetColumns} from './useDocumentSheetColumns'\nimport {useDocumentSheetList} from './useDocumentSheetList'\n\ntype DocumentSheetListPaneProps = BaseStructureToolPaneProps<'documentList'>\n\nconst PaneContainer = styled(Flex)`\n  height: 100%;\n`\nconst TableContainer = styled.div`\n  overflow: auto; //our scrollable table container\n  position: relative; //needed for sticky header\n`\nconst Table = styled.table`\n  border-collapse: separate;\n  border-spacing: 0;\n  font-family: arial, sans-serif;\n  white-space: nowrap;\n  width: 100%;\n  border: 1px solid lightgray;\n\n  thead {\n    display: grid;\n    position: sticky;\n    top: 0;\n    z-index: 10;\n  }\n  tr {\n    padding: 0;\n  }\n  tr:last-child {\n    border-bottom: none;\n  }\n`\n\nfunction DocumentSheetListPaneInner({\n  documentSchemaType,\n}: DocumentSheetListPaneProps & {documentSchemaType: ObjectSchemaType}) {\n  const {dispatch, state} = useSearchState()\n  const {columns, initialColumnsVisibility} = useDocumentSheetColumns(documentSchemaType)\n  const {data} = useDocumentSheetList({\n    typeName: documentSchemaType.name,\n  })\n  const [selectedAnchor, setSelectedAnchor] = useState<number | null>(null)\n\n  const totalRows = state.result.hits.length\n  const table = useReactTable({\n    data,\n    columns,\n    getCoreRowModel: getCoreRowModel(),\n    getFilteredRowModel: getFilteredRowModel(),\n    getPaginationRowModel: getPaginationRowModel(),\n    // Avoids resetting the page index when the data changes, e.g. a mutation is received\n    autoResetPageIndex: false,\n    initialState: {\n      columnPinning: {left: ['selected', 'Preview']},\n      pagination: {pageSize: 25},\n      columnVisibility: initialColumnsVisibility,\n    },\n    getRowId: (row) => row._id,\n    meta: {\n      selectedAnchor,\n      setSelectedAnchor,\n      patchDocument: (documentId, fieldId, value) => null,\n    },\n  })\n\n  const {rows} = table.getRowModel()\n\n  useEffect(() => {\n    dispatch({type: 'TERMS_TYPE_ADD', schemaType: documentSchemaType})\n    return () => {\n      dispatch({type: 'TERMS_TYPE_REMOVE', schemaType: documentSchemaType})\n    }\n  }, [documentSchemaType, dispatch])\n\n  const renderRow = useCallback((row: Row<SanityDocument>) => {\n    return (\n      <Box\n        key={row.original._id + row.id}\n        as=\"tr\"\n        paddingY={2}\n        style={{display: 'flex', width: '100%'}}\n      >\n        {row.getVisibleCells().map((cell) => (\n          <SheetListCell key={row.original._id + cell.id} {...cell} />\n        ))}\n      </Box>\n    )\n  }, [])\n\n  const rowsCount = `Total: ${totalRows} rows, showing ${rows.length} rows`\n  return (\n    <PaneContainer direction=\"column\" paddingX={3} data-testid=\"document-sheet-list-pane\">\n      <Flex direction=\"row\" align=\"center\" paddingY={3} paddingX={1} justify=\"space-between\">\n        <Flex direction=\"row\" align=\"center\">\n          <DocumentSheetListFilter />\n          <Text size={0} muted>\n            {rowsCount}\n          </Text>\n        </Flex>\n        <ColumnsControl table={table} />\n      </Flex>\n      <TableContainer>\n        <DocumentSheetListProvider table={table}>\n          <Table>\n            <thead>\n              {table.getHeaderGroups().map((headerGroup) => (\n                <Box key={headerGroup.id} as=\"tr\">\n                  {headerGroup.headers.map((header) => (\n                    <DocumentSheetListHeader\n                      key={header.id}\n                      header={header}\n                      headerGroup={headerGroup}\n                    />\n                  ))}\n                </Box>\n              ))}\n            </thead>\n            <tbody>{table.getRowModel().rows.map(renderRow)}</tbody>\n          </Table>\n        </DocumentSheetListProvider>\n      </TableContainer>\n      <Flex justify={'flex-end'} padding={3} gap={4} paddingY={5}>\n        <DocumentSheetListPaginator table={table} />\n      </Flex>\n    </PaneContainer>\n  )\n}\n\nexport function DocumentSheetListPane(props: DocumentSheetListPaneProps) {\n  const schema = useSchema()\n  const typeName = props.pane.schemaTypeName\n\n  const schemaType = schema.get(typeName)\n  if (!schemaType || !isDocumentSchemaType(schemaType)) {\n    throw new Error(`Schema type \"${typeName}\" not found or not a document schema`)\n  }\n  return (\n    <SearchProvider>\n      <DocumentSheetListPaneInner {...props} documentSchemaType={schemaType} />\n    </SearchProvider>\n  )\n}\n","import {Card, Code} from '@sanity/ui'\nimport {isEqual} from 'lodash'\nimport {memo, useMemo, useState} from 'react'\nimport {\n  EMPTY_ARRAY,\n  type GeneralDocumentListLayoutKey,\n  SourceProvider,\n  useI18nText,\n  useSource,\n} from 'sanity'\nimport shallowEquals from 'shallow-equals'\n\nimport {Pane} from '../../components/pane'\nimport {_DEBUG} from '../../constants'\nimport {type PaneMenuItem} from '../../types'\nimport {useStructureToolSetting} from '../../useStructureToolSetting'\nimport {type BaseStructureToolPaneProps} from '../types'\nimport {DEFAULT_ORDERING, EMPTY_RECORD} from './constants'\nimport {DocumentListPane} from './DocumentListPane'\nimport {findStaticTypesInFilter} from './helpers'\nimport {PaneHeader} from './PaneHeader'\nimport {DocumentSheetListPane} from './sheetList/DocumentSheetListPane'\nimport {type SortOrder} from './types'\n\nconst addSelectedStateToMenuItems = (options: {\n  menuItems?: PaneMenuItem[]\n  sortOrderRaw?: SortOrder\n  layout?: GeneralDocumentListLayoutKey\n}) => {\n  const {menuItems, sortOrderRaw, layout} = options\n\n  return menuItems?.map((item) => {\n    if (item.params?.layout) {\n      return {\n        ...item,\n        selected: layout === item.params?.layout,\n      }\n    }\n\n    if (item?.params?.by) {\n      return {\n        ...item,\n        selected: isEqual(sortOrderRaw?.by, item?.params?.by || EMPTY_ARRAY),\n      }\n    }\n\n    return {...item, selected: false}\n  })\n}\n\nexport function useShallowUnique<ValueType>(value: ValueType): ValueType {\n  const [previous, setPrevious] = useState<ValueType>(value)\n  if (!shallowEquals(previous, value)) {\n    setPrevious(value)\n    return value\n  }\n  return previous\n}\n\n/**\n * @internal\n */\nexport const PaneContainer = memo(function PaneContainer(\n  props: BaseStructureToolPaneProps<'documentList'>,\n) {\n  const {index, isSelected, pane, paneKey} = props\n  const {name: parentSourceName} = useSource()\n\n  const {\n    defaultLayout = 'default',\n    initialValueTemplates = EMPTY_ARRAY,\n    menuItemGroups,\n    menuItems,\n    options,\n  } = pane\n  const {defaultOrdering = EMPTY_ARRAY, filter} = options\n  const params = useShallowUnique(options.params || EMPTY_RECORD)\n  const sourceName = pane.source\n  const typeName = useMemo(() => {\n    const staticTypes = findStaticTypesInFilter(filter, params)\n    if (staticTypes?.length === 1) return staticTypes[0]\n    return null\n  }, [filter, params])\n\n  const [layout, setLayout] = useStructureToolSetting<GeneralDocumentListLayoutKey>(\n    'layout',\n    typeName ?? pane.id, //pane.id for anything that is not documentTypeList\n    defaultLayout,\n  )\n\n  const {title} = useI18nText(pane)\n\n  // Ensure that we use the defaultOrdering value from structure builder if any as the default\n  const defaultSortOrder = useMemo(() => {\n    return defaultOrdering?.length > 0 ? {by: defaultOrdering} : DEFAULT_ORDERING\n  }, [defaultOrdering])\n\n  const [sortOrderRaw, setSortOrder] = useStructureToolSetting<SortOrder>(\n    'sort-order',\n    typeName ?? pane.id, //pane.id for anything that is not documentTypeList\n    defaultSortOrder,\n  )\n\n  const menuItemsWithSelectedState = useMemo(\n    () =>\n      addSelectedStateToMenuItems({\n        menuItems,\n        sortOrderRaw,\n        layout,\n      }),\n    [layout, menuItems, sortOrderRaw],\n  )\n\n  const isSheetListLayout = layout === 'sheetList'\n  const paneLayout = isSheetListLayout ? (\n    <DocumentSheetListPane key={props.pane.id} {...props} />\n  ) : (\n    <DocumentListPane {...props} sortOrder={sortOrderRaw} layout={layout} />\n  )\n\n  return (\n    <SourceProvider name={sourceName || parentSourceName}>\n      <Pane\n        data-ui=\"DocumentListPane\"\n        id={paneKey}\n        minWidth={320}\n        {...(isSheetListLayout ? {} : {currentMaxWidth: 350, maxWidth: 640})}\n        selected={isSelected}\n      >\n        {_DEBUG && (\n          <Card padding={4} tone=\"transparent\">\n            <Code>{pane.source || '(none)'}</Code>\n          </Card>\n        )}\n\n        <PaneHeader\n          index={index}\n          initialValueTemplates={initialValueTemplates}\n          menuItemGroups={menuItemGroups}\n          menuItems={menuItemsWithSelectedState}\n          setLayout={setLayout}\n          setSortOrder={setSortOrder}\n          title={title}\n        />\n        {paneLayout}\n      </Pane>\n    </SourceProvider>\n  )\n})\nPaneContainer.displayName = 'Memo(PaneContainer)'\n","import {type DocumentBadgeComponent} from 'sanity'\n\n/** @internal */\nexport const LiveEditBadge: DocumentBadgeComponent = (props) => {\n  const {liveEditSchemaType, version} = props\n\n  if (liveEditSchemaType && !version) {\n    return {\n      label: 'Live',\n      color: 'danger',\n    }\n  }\n\n  return null\n}\nLiveEditBadge.displayName = 'LiveEditBadge'\n","import {uuid} from '@sanity/uuid'\n\nimport {EMPTY_PARAMS, type LOADING_PANE} from './constants'\nimport {type PaneNode, type RouterPanes} from './types'\n\nconst state: {\n  activePanes: Array<PaneNode | typeof LOADING_PANE>\n} = {activePanes: []}\n\nexport function setActivePanes(panes: Array<PaneNode | typeof LOADING_PANE>): void {\n  state.activePanes = panes\n}\n\n/**\n * This function looks at the _active panes_ to resolve an intent. this type of\n * intent resolution is faster and does not cause the panes to reset\n *\n * @internal\n */\nexport function getIntentState(\n  intent: string,\n  params: Record<string, string>,\n  routerState: {panes?: RouterPanes} | undefined,\n  payload: unknown,\n): {panes: RouterPanes} | {intent: string; params: Record<string, string>; payload: unknown} {\n  const panes = routerState?.panes || []\n  const activePanes = state.activePanes || []\n  const editDocumentId = params.id || uuid()\n\n  // Loop through open panes and see if any of them can handle the intent\n  for (let i = activePanes.length - 1; i >= 0; i--) {\n    const pane = activePanes[i]\n\n    if (typeof pane !== 'object') continue\n\n    // NOTE: if you update this logic, please also update the similar handler in\n    // `resolveIntent.ts`\n    if (\n      pane.canHandleIntent?.(intent, params, {\n        pane,\n        index: i,\n      }) ||\n      // see `resolveIntent.ts` for more info\n      (pane.type === 'documentList' &&\n        pane.schemaTypeName === params.type &&\n        pane.options.filter === '_type == $type')\n    ) {\n      const paneParams = getPaneParams(intent, params)\n\n      return {\n        panes: panes\n          .slice(0, i)\n          .concat([[{id: editDocumentId, params: paneParams, payload}]]) as RouterPanes,\n      }\n    }\n  }\n\n  return {intent: intent, params, payload}\n}\n\nfunction getPaneParams(\n  intent: string,\n  {template, version}: Record<string, string>,\n): {template?: string; version?: string} {\n  if (intent !== 'create') return EMPTY_PARAMS\n  if (template && version) return {template, version}\n  if (template) return {template}\n  if (version) return {version}\n  return EMPTY_PARAMS\n}\n","import {type ObjectDiff} from '@sanity/diff'\nimport {BoundaryElementProvider, Box, Card, Flex, Text} from '@sanity/ui'\nimport {useMemo, useState} from 'react'\nimport {\n  ChangeFieldWrapper,\n  ChangeList,\n  type DocumentChangeContextInstance,\n  LoadingBlock,\n  NoChanges,\n  type ObjectSchemaType,\n  ScrollContainer,\n  usePerspective,\n  useTimelineSelector,\n  useTranslation,\n} from 'sanity'\nimport {DocumentChangeContext} from 'sanity/_singletons'\nimport {styled} from 'styled-components'\n\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {TimelineMenu} from '../../timeline'\nimport {TimelineError} from '../../timeline/TimelineError'\nimport {useDocumentPane} from '../../useDocumentPane'\n\nconst Scroller = styled(ScrollContainer)`\n  height: 100%;\n  overflow: auto;\n  position: relative;\n  scroll-behavior: smooth;\n`\n\nconst Grid = styled(Box)`\n  &:not([hidden]) {\n    display: grid;\n  }\n  grid-template-columns: 48px 1fr;\n  align-items: center;\n  gap: 0.25em;\n`\n\nexport function ChangesInspector({showChanges}: {showChanges: boolean}): React.JSX.Element {\n  const {documentId, schemaType, timelineError, timelineStore, value} = useDocumentPane()\n  const {selectedReleaseId} = usePerspective()\n\n  const [scrollRef, setScrollRef] = useState<HTMLDivElement | null>(null)\n\n  const rev = useTimelineSelector(timelineStore, (state) => state.revTime)\n  const diff = useTimelineSelector(timelineStore, (state) => state.diff)\n  const onOlderRevision = useTimelineSelector(timelineStore, (state) => state.onOlderRevision)\n  const selectionState = useTimelineSelector(timelineStore, (state) => state.selectionState)\n  const sinceTime = useTimelineSelector(timelineStore, (state) => state.sinceTime)\n  const loading = selectionState === 'loading'\n  const isComparingCurrent = !onOlderRevision\n\n  // Note that we are using the studio core namespace here, as changes theoretically should\n  // be part of Sanity core (needs to be moved from structure at some point)\n  const {t: structureT} = useTranslation(structureLocaleNamespace)\n\n  const documentContext: DocumentChangeContextInstance = useMemo(\n    () => ({\n      documentId,\n      schemaType,\n      FieldWrapper: (props) => <ChangeFieldWrapper {...props} hasRevertHover={false} />,\n      rootDiff: diff,\n      isComparingCurrent,\n      value,\n      showFromValue: true,\n    }),\n    [documentId, diff, isComparingCurrent, schemaType, value],\n  )\n\n  if (selectedReleaseId) {\n    return (\n      <Flex data-testid=\"review-changes-pane\" direction=\"column\" height=\"fill\">\n        <Card flex={1} padding={2} paddingTop={0}>\n          <TimelineError versionError />\n        </Card>\n      </Flex>\n    )\n  }\n\n  return (\n    <Flex data-testid=\"review-changes-pane\" direction=\"column\" height=\"fill\" overflow=\"hidden\">\n      <Box padding={3}>\n        <Grid paddingX={2} paddingBottom={2}>\n          <Text size={1} muted>\n            {structureT('changes.from.label')}\n          </Text>\n\n          <TimelineMenu mode=\"since\" chunk={sinceTime} placement=\"bottom-start\" />\n          <Text size={1} muted>\n            {structureT('changes.to.label')}\n          </Text>\n          <TimelineMenu chunk={rev} mode=\"rev\" placement=\"bottom-end\" />\n        </Grid>\n      </Box>\n\n      <Card flex={1} paddingX={2} paddingY={2}>\n        <BoundaryElementProvider element={scrollRef}>\n          <Scroller data-ui=\"Scroller\" ref={setScrollRef}>\n            <Box flex={1} paddingX={3} height=\"fill\">\n              {showChanges && (\n                <Content\n                  diff={diff}\n                  documentContext={documentContext}\n                  error={timelineError}\n                  loading={loading}\n                  schemaType={schemaType}\n                />\n              )}\n            </Box>\n          </Scroller>\n        </BoundaryElementProvider>\n      </Card>\n    </Flex>\n  )\n}\n\nfunction Content({\n  error,\n  diff,\n  documentContext,\n  loading,\n  schemaType,\n}: {\n  error?: Error | null\n  diff: ObjectDiff<any> | null\n  documentContext: DocumentChangeContextInstance\n  loading: boolean\n  schemaType: ObjectSchemaType\n}) {\n  if (error) {\n    return <NoChanges />\n  }\n\n  if (loading) {\n    return <LoadingBlock showText />\n  }\n\n  if (!diff) {\n    return <NoChanges />\n  }\n\n  return (\n    <DocumentChangeContext.Provider value={documentContext}>\n      <ChangeList diff={diff} schemaType={schemaType} />\n    </DocumentChangeContext.Provider>\n  )\n}\n","import {Card, Flex} from '@sanity/ui'\nimport {type MouseEvent, useCallback} from 'react'\nimport {\n  type DocumentGroupEvent,\n  Event,\n  isDeleteDocumentGroupEvent,\n  isDeleteDocumentVersionEvent,\n  isScheduleDocumentVersionEvent,\n  isUnpublishDocumentEvent,\n  isUnscheduleDocumentVersionEvent,\n  useTranslation,\n} from 'sanity'\n\nimport {Tooltip} from '../../../../../ui-components'\n\nexport interface TimelineItemProps {\n  event: DocumentGroupEvent\n  isSelected: boolean\n  onSelect: (chunk: DocumentGroupEvent) => void\n  optionsMenu?: React.ReactNode\n}\n\nconst getIsSelectable = (event: DocumentGroupEvent) => {\n  return (\n    !isDeleteDocumentVersionEvent(event) &&\n    !isDeleteDocumentGroupEvent(event) &&\n    !isUnpublishDocumentEvent(event) &&\n    !isScheduleDocumentVersionEvent(event) &&\n    !isUnscheduleDocumentVersionEvent(event)\n  )\n}\n\nexport function EventTimelineItem({event, isSelected, onSelect, optionsMenu}: TimelineItemProps) {\n  const {t} = useTranslation('studio')\n  const isSelectable = getIsSelectable(event)\n  const handleClick = useCallback(\n    (evt: MouseEvent<HTMLDivElement>) => {\n      evt.preventDefault()\n      evt.stopPropagation()\n\n      if (isSelectable) {\n        onSelect(event)\n      }\n    },\n    [onSelect, event, isSelectable],\n  )\n  return (\n    <Flex gap={1}>\n      <Tooltip content={isSelectable ? '' : t('changes.not-selectable')} disabled={isSelectable}>\n        <Card\n          as={isSelectable ? 'button' : 'div'}\n          onClick={handleClick}\n          padding={2}\n          pressed={isSelected}\n          radius={2}\n          data-ui=\"timelineItem\"\n          data-testid=\"timeline-item-button\"\n          data-chunk-timestamp={event.timestamp}\n          style={{\n            cursor: isSelectable ? 'pointer' : 'default',\n            width: '100%',\n          }}\n        >\n          <Event event={event} showChangesBy=\"tooltip\" />\n        </Card>\n      </Tooltip>\n      {optionsMenu}\n    </Flex>\n  )\n}\n","import {\n  Flex,\n  Menu,\n  // eslint-disable-next-line no-restricted-imports\n  MenuItem,\n  Text,\n  usePortal,\n} from '@sanity/ui'\nimport {useCallback} from 'react'\nimport {\n  ContextMenuButton,\n  getReleaseIdFromReleaseDocumentId,\n  getReleaseTone,\n  getVersionFromId,\n  isReleaseDocument,\n  type PublishDocumentVersionEvent,\n  RELEASES_INTENT,\n  Translate,\n  useSetPerspective,\n  useTranslation,\n  VersionInlineBadge,\n} from 'sanity'\nimport {IntentLink} from 'sanity/router'\n\nimport {MenuButton} from '../../../../../ui-components'\nimport {usePaneRouter} from '../../../../components/paneRouter/usePaneRouter'\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {TIMELINE_MENU_PORTAL} from '../timelineMenu'\n\nexport function PublishedEventMenu({event}: {event: PublishDocumentVersionEvent}) {\n  const {t} = useTranslation(structureLocaleNamespace)\n  const {t: tCore} = useTranslation()\n  const portalContext = usePortal()\n  const {params, setParams} = usePaneRouter()\n  const setPerspective = useSetPerspective()\n\n  const handleOpenReleaseDocument = useCallback(() => {\n    setParams({\n      ...params,\n      rev: event.versionRevisionId || '@lastPublished',\n      since: undefined,\n      historyEvent: event.id,\n      historyVersion: getVersionFromId(event.versionId),\n    })\n  }, [setParams, params, event])\n\n  const handleOpenDraftDocument = useCallback(() => {\n    setParams({\n      ...params,\n      rev: event.versionRevisionId,\n      preserveRev: 'true',\n      since: undefined,\n    })\n    setTimeout(() => {\n      // A bug is generated when we change the perspective and the params at the same time\n      // Resetting the params to the value it had before, because the paneRouter uses the previous value\n      setPerspective('drafts')\n    }, 100)\n  }, [setParams, params, event.versionRevisionId, setPerspective])\n\n  const VersionBadge = ({children}: {children: React.ReactNode}) => {\n    return (\n      <VersionInlineBadge\n        $tone={\n          event.release\n            ? isReleaseDocument(event.release)\n              ? getReleaseTone(event.release)\n              : 'default'\n            : undefined\n        }\n      >\n        {children}\n      </VersionInlineBadge>\n    )\n  }\n  const isMenuDisabled = event.release && !isReleaseDocument(event.release)\n  return (\n    <MenuButton\n      id={`timeline-item-menu-button-${event.versionId}`}\n      button={\n        <ContextMenuButton\n          aria-label={t('timeline-item.menu-button.aria-label')}\n          tooltipProps={{\n            content: isMenuDisabled\n              ? t('timeline-item.not-found-release.tooltip', {\n                  releaseId: event.release?._id\n                    ? getReleaseIdFromReleaseDocumentId(event.release._id)\n                    : undefined,\n                })\n              : t('timeline-item.menu-button.tooltip'),\n          }}\n          disabled={isMenuDisabled}\n        />\n      }\n      menu={\n        <Menu padding={1}>\n          {event.release ? (\n            <>\n              <IntentLink\n                intent={RELEASES_INTENT}\n                params={{id: getReleaseIdFromReleaseDocumentId(event.release._id)}}\n                style={{textDecoration: 'none'}}\n              >\n                <MenuItem padding={3}>\n                  <Flex align={'center'} justify=\"flex-start\">\n                    <Text size={1} style={{textDecoration: 'none'}}>\n                      <Translate\n                        components={{\n                          VersionBadge: ({children}) => <VersionBadge>{children}</VersionBadge>,\n                        }}\n                        i18nKey=\"events.open.release\"\n                        values={{\n                          releaseTitle:\n                            event.release.metadata?.title ||\n                            tCore('release.placeholder-untitled-release'),\n                        }}\n                        t={t}\n                      />\n                    </Text>\n                  </Flex>\n                </MenuItem>\n              </IntentLink>\n              <MenuItem onClick={handleOpenReleaseDocument}>\n                <Flex align={'center'} justify=\"flex-start\">\n                  <Text size={1}>\n                    <Translate\n                      components={{\n                        VersionBadge: ({children}) => <VersionBadge>{children}</VersionBadge>,\n                      }}\n                      i18nKey=\"events.inspect.release\"\n                      values={{\n                        releaseTitle:\n                          event.release.metadata?.title ||\n                          tCore('release.placeholder-untitled-release'),\n                      }}\n                      t={t}\n                    />\n                  </Text>\n                </Flex>\n              </MenuItem>\n            </>\n          ) : (\n            <MenuItem onClick={handleOpenDraftDocument} disabled={!event.versionRevisionId}>\n              <Flex align={'center'}>\n                <Text size={1}>\n                  <Translate\n                    components={{\n                      VersionBadge: ({children}) => (\n                        <VersionInlineBadge $tone=\"caution\">{children}</VersionInlineBadge>\n                      ),\n                    }}\n                    i18nKey=\"events.open.draft\"\n                    t={t}\n                  />\n                </Text>\n              </Flex>\n            </MenuItem>\n          )}\n        </Menu>\n      }\n      popover={{\n        // when used inside the timeline menu we want to keep the element inside the popover, to avoid closing the popover when clicking expand.\n        portal: portalContext.elements?.[TIMELINE_MENU_PORTAL] ? TIMELINE_MENU_PORTAL : true,\n        placement: 'bottom',\n        fallbackPlacements: ['bottom-end', 'bottom-start'],\n      }}\n    />\n  )\n}\n","import {Box, Flex, Spinner, Stack, Text} from '@sanity/ui'\nimport {motion, type Variants} from 'framer-motion'\nimport {useCallback, useEffect, useMemo, useState} from 'react'\nimport {\n  CommandList,\n  type CommandListRenderItemCallback,\n  type DocumentGroupEvent,\n  getDocumentVariantType,\n  isCreateDocumentVersionEvent,\n  isDeleteDocumentVersionEvent,\n  isEditDocumentVersionEvent,\n  isPublishDocumentVersionEvent,\n  LoadingBlock,\n  useTranslation,\n} from 'sanity'\n\nimport {ExpandableTimelineItemButton} from '../expandableTimelineItemButton'\nimport {ListWrapper, Root} from '../timeline.styled'\nimport {EventTimelineItem} from './EventTimelineItem'\nimport {PublishedEventMenu} from './PublishedEventMenu'\n\ninterface TimelineProps {\n  events: DocumentGroupEvent[]\n  hasMoreEvents: boolean | null\n  selectedEventId?: string\n  onLoadMore: () => void\n  onSelect: (event: DocumentGroupEvent) => void\n  fetchEventChildren: (event: DocumentGroupEvent) => Promise<void>\n  /**\n   * The list needs a predefined max height for the scroller to work.\n   */\n  listMaxHeight?: string\n}\n\nconst TimelineItemWrapper = motion.create(Box)\nconst CHILDREN_ITEMS_VARIANTS: Variants = {\n  initial: {\n    opacity: 0,\n  },\n  animate: {\n    opacity: 1,\n  },\n  exit: {\n    opacity: 0,\n  },\n}\n\nconst ITEM_HEIGHT = 57\n\nexport const TIMELINE_LIST_WRAPPER_ID = 'timeline-list-wrapper'\n\nexport const EventsTimeline = ({\n  events: allEvents,\n  hasMoreEvents,\n  selectedEventId,\n  onLoadMore,\n  onSelect,\n  listMaxHeight = 'calc(100vh - 280px)',\n  fetchEventChildren,\n}: TimelineProps) => {\n  const [mounted, setMounted] = useState(false)\n  const {t} = useTranslation('studio')\n  const [expandedParents, setExpandedParents] = useState<Set<string>>(() => {\n    if (selectedEventId) {\n      // Find that event and if it has a parent, expand the parent.\n      const selectedEvent = allEvents.find((event) => event.id === selectedEventId)\n      if (selectedEvent && 'parentId' in selectedEvent && selectedEvent.parentId) {\n        return new Set([selectedEvent.parentId])\n      }\n    }\n    return new Set()\n  })\n  const [expandingParents, setExpandingParents] = useState<Set<string>>(new Set())\n\n  const events = useMemo(() => {\n    return allEvents.filter((event) => {\n      if (isCreateDocumentVersionEvent(event) && event.parentId) {\n        // Check if it's the last event in the list, in that case, we want to show it\n        const isLastEvent = allEvents[allEvents.length - 1].id === event.id\n        if (isLastEvent) return true\n        return expandedParents.has(event.parentId)\n      }\n      if (isEditDocumentVersionEvent(event) && event.parentId) {\n        return expandedParents.has(event.parentId)\n      }\n      return true\n    })\n  }, [expandedParents, allEvents])\n\n  const handleExpandParent = useCallback(\n    (event: DocumentGroupEvent) => async () => {\n      const parentId = event.id\n\n      let isExpanding = false\n      setExpandedParents((prev) => {\n        const next = new Set(prev)\n\n        if (prev.has(parentId)) next.delete(parentId)\n        else {\n          isExpanding = true\n          next.add(parentId)\n        }\n\n        return next\n      })\n      if (isExpanding) {\n        setExpandingParents((prev) => {\n          const next = new Set(prev)\n          next.add(parentId)\n          return next\n        })\n        await fetchEventChildren(event)\n        setExpandingParents((prev) => {\n          const next = new Set(prev)\n          next.delete(parentId)\n          return next\n        })\n      }\n    },\n    [fetchEventChildren, setExpandingParents],\n  )\n\n  const handleSelectChunk = useCallback(\n    (event: DocumentGroupEvent) => {\n      onSelect(event)\n    },\n    [onSelect],\n  )\n\n  const renderOptionsMenu = useCallback(\n    (event: DocumentGroupEvent) => {\n      const documentVariantType = getDocumentVariantType(event.documentId)\n      if (isPublishDocumentVersionEvent(event) && documentVariantType === 'published') {\n        return <PublishedEventMenu event={event} />\n      }\n      if (\n        (isPublishDocumentVersionEvent(event) &&\n          documentVariantType === 'draft' &&\n          event.creationEvent) ||\n        (isDeleteDocumentVersionEvent(event) && event.creationEvent)\n      ) {\n        return (\n          <ExpandableTimelineItemButton\n            isExpanded={expandedParents.has(event.id)}\n            onExpand={handleExpandParent(event)}\n          />\n        )\n      }\n      return null\n    },\n    [expandedParents, handleExpandParent],\n  )\n\n  const renderItem = useCallback<CommandListRenderItemCallback<DocumentGroupEvent[][number]>>(\n    (event, {activeIndex}) => {\n      /**\n       * The create version event will be present while expanding (loading the edits), so we are attaching to it the loading block at the top.\n       * - publishEvent (expanding?)\n       * --- loadingBlock  ~createEvent~\n       * */\n      const showExpandingLoader =\n        isCreateDocumentVersionEvent(event) &&\n        event.parentId &&\n        expandingParents.has(event.parentId)\n\n      const isLastEvent = activeIndex === events.length - 1\n      if (showExpandingLoader) {\n        return (\n          <TimelineItemWrapper\n            animate={{opacity: 1}}\n            initial={{opacity: 0}}\n            transition={{duration: 0.2, delay: 0.2}}\n          >\n            {/* We need this item to match the same height as the rest of the list items, which is 57px */}\n            <Flex align=\"center\" justify=\"center\" style={{height: ITEM_HEIGHT}}>\n              <Spinner />\n            </Flex>\n          </TimelineItemWrapper>\n        )\n      }\n      return (\n        <TimelineItemWrapper\n          key={event.timestamp}\n          paddingBottom={1}\n          paddingRight={1}\n          animate=\"animate\"\n          exit=\"exit\"\n          initial=\"initial\"\n          variants={'parentId' in event ? CHILDREN_ITEMS_VARIANTS : undefined}\n          paddingLeft={\n            (isEditDocumentVersionEvent(event) || isCreateDocumentVersionEvent(event)) &&\n            event.parentId &&\n            !isLastEvent\n              ? 4\n              : 1\n          }\n        >\n          <EventTimelineItem\n            event={event}\n            isSelected={event.id === selectedEventId}\n            onSelect={handleSelectChunk}\n            optionsMenu={renderOptionsMenu(event)}\n          />\n\n          {isLastEvent && hasMoreEvents && <LoadingBlock />}\n        </TimelineItemWrapper>\n      )\n    },\n    [\n      expandingParents,\n      selectedEventId,\n      handleSelectChunk,\n      renderOptionsMenu,\n      events.length,\n      hasMoreEvents,\n    ],\n  )\n\n  useEffect(() => setMounted(true), [])\n  const selectedIndex = events.findIndex((event) => event.id === selectedEventId)\n\n  return (\n    <Root\n      /**\n       * We delay initial rendering if `selectedIndex` is present.\n       * This is a _temporary_ workaround to allow the virtual <CommandList>\n       * to scroll to a specific index prior to being displayed.\n       *\n       * Without this, there'll be a noticeable 'flash' where the virtual list\n       * will render with its child items at the top and then scroll into position.\n       */\n      $visible={!selectedIndex || mounted}\n      data-ui=\"timeline\"\n    >\n      {events.length > 0 ? (\n        <ListWrapper direction=\"column\" $maxHeight={listMaxHeight} id={TIMELINE_LIST_WRAPPER_ID}>\n          <CommandList\n            activeItemDataAttr=\"data-hovered\"\n            ariaLabel={t('timeline.list.aria-label')}\n            autoFocus=\"list\"\n            initialIndex={selectedIndex}\n            initialScrollAlign=\"center\"\n            itemHeight={ITEM_HEIGHT}\n            items={events}\n            onEndReached={onLoadMore}\n            onEndReachedIndexOffset={20}\n            overscan={5}\n            renderItem={renderItem}\n            wrapAround={false}\n          />\n        </ListWrapper>\n      ) : (\n        <Stack padding={3} space={3}>\n          <Text size={1} weight=\"medium\">\n            {t('timeline.error.no-document-history-title')}\n          </Text>\n          <Text muted size={1}>\n            {t('timeline.error.no-document-history-description')}\n          </Text>\n        </Stack>\n      )}\n    </Root>\n  )\n}\n\nEventsTimeline.displayName = 'EventsTimeline'\n","import {ChevronDownIcon} from '@sanity/icons'\nimport {\n  Flex,\n  type Placement,\n  PortalProvider,\n  useClickOutsideEvent,\n  useGlobalKeyDown,\n  useToast,\n} from '@sanity/ui'\nimport {useCallback, useMemo, useState} from 'react'\nimport {\n  type DocumentGroupEvent,\n  isDeleteDocumentGroupEvent,\n  isDeleteDocumentVersionEvent,\n  isScheduleDocumentVersionEvent,\n  isUnpublishDocumentEvent,\n  isUnscheduleDocumentVersionEvent,\n  TIMELINE_ITEM_I18N_KEY_MAPPING,\n  useEvents,\n  useTranslation,\n} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Button, Popover} from '../../../../../ui-components'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {TimelineError} from '../TimelineError'\nimport {EventsTimeline} from './EventsTimeline'\n\ninterface TimelineMenuProps {\n  event: DocumentGroupEvent | null\n  events: DocumentGroupEvent[]\n  mode: 'rev' | 'since'\n  placement?: Placement\n}\n\nconst Root = styled(Popover)`\n  overflow: hidden;\n  overflow: clip;\n`\n\nexport const TIMELINE_MENU_PORTAL = 'timeline-menu'\n\nconst formatParams = {\n  timestamp: {dateStyle: 'medium', timeStyle: 'short'},\n}\n\nexport function EventsTimelineMenu({event, events, mode, placement}: TimelineMenuProps) {\n  const {setTimelineRange} = useDocumentPane()\n  const [open, setOpen] = useState(false)\n  const [button, setButton] = useState<HTMLButtonElement | null>(null)\n  const [popoverRef, setPopoverRef] = useState<HTMLElement | null>(null)\n  const toast = useToast()\n  const {\n    nextCursor,\n    loading,\n    error: eventsError,\n    findRangeForRevision,\n    findRangeForSince,\n    loadMoreEvents,\n    expandEvent,\n  } = useEvents()\n\n  const {t} = useTranslation('studio')\n\n  const handleOpen = useCallback(() => {\n    setOpen(true)\n  }, [])\n\n  const handleClose = useCallback(() => {\n    setOpen(false)\n  }, [])\n\n  const handleGlobalKeyDown = useCallback(\n    (e: KeyboardEvent) => {\n      if (open && (e.key === 'Escape' || e.key === 'Tab')) {\n        handleClose()\n        button?.focus()\n      }\n    },\n    [button, handleClose, open],\n  )\n\n  useGlobalKeyDown(handleGlobalKeyDown)\n  useClickOutsideEvent(open && handleClose, () => [button, popoverRef])\n\n  const selectRev = useCallback(\n    (revEvent: DocumentGroupEvent) => {\n      try {\n        if (\n          isDeleteDocumentVersionEvent(revEvent) ||\n          isDeleteDocumentGroupEvent(revEvent) ||\n          isUnpublishDocumentEvent(revEvent) ||\n          isScheduleDocumentVersionEvent(revEvent) ||\n          isUnscheduleDocumentVersionEvent(revEvent)\n        ) {\n          console.error('Event is not selectable')\n          return\n        }\n        const [since, rev] = findRangeForRevision(revEvent?.id)\n        setTimelineRange(since, rev)\n        handleClose()\n      } catch (err) {\n        toast.push({\n          closable: true,\n          description: err.message,\n          status: 'error',\n          title: t('timeline.error.unable-to-load-revision'),\n        })\n      }\n    },\n    [t, toast, setTimelineRange, findRangeForRevision, handleClose],\n  )\n\n  const selectSince = useCallback(\n    (sinceEvent: DocumentGroupEvent) => {\n      try {\n        const [since, rev] = findRangeForSince(sinceEvent.id)\n        setTimelineRange(since, rev)\n        handleClose()\n      } catch (err) {\n        toast.push({\n          closable: true,\n          description: err.message,\n          status: 'error',\n          title: t('timeline.error.unable-to-load-revision'),\n        })\n      }\n    },\n    [findRangeForSince, setTimelineRange, toast, t, handleClose],\n  )\n\n  const handleLoadMore = useCallback(() => {\n    if (!loading && nextCursor) {\n      loadMoreEvents()\n    }\n  }, [loading, loadMoreEvents, nextCursor])\n\n  const content = useMemo(() => {\n    if (eventsError) return <TimelineError />\n\n    return (\n      <EventsTimeline\n        events={events}\n        fetchEventChildren={expandEvent}\n        hasMoreEvents={Boolean(nextCursor)}\n        selectedEventId={event?.id}\n        onLoadMore={handleLoadMore}\n        onSelect={mode === 'rev' ? selectRev : selectSince}\n      />\n    )\n  }, [\n    eventsError,\n    mode,\n    expandEvent,\n    events,\n    nextCursor,\n    event?.id,\n    handleLoadMore,\n    selectSince,\n    selectRev,\n  ])\n\n  const revLabel = event\n    ? t(TIMELINE_ITEM_I18N_KEY_MAPPING[event.documentVariantType][event.type], {\n        context: 'timestamp',\n        timestamp: new Date(event.timestamp),\n        formatParams,\n      })\n    : t('timeline.latest-revision')\n\n  const sinceLabel = event\n    ? t(TIMELINE_ITEM_I18N_KEY_MAPPING[event.documentVariantType][event.type], {\n        context: 'timestamp',\n        timestamp: new Date(event.timestamp),\n        formatParams,\n      })\n    : events.length > 0\n      ? t('timeline.since-version-missing')\n      : t('timeline.no-previous-events')\n\n  const buttonLabel = mode === 'rev' ? revLabel : sinceLabel\n  const portalElements = useMemo(\n    () => ({\n      [TIMELINE_MENU_PORTAL]: popoverRef,\n    }),\n    [popoverRef],\n  )\n\n  return (\n    <PortalProvider __unstable_elements={portalElements}>\n      <Root\n        data-testid=\"timeline-menu\"\n        constrainSize\n        content={open && content}\n        data-ui=\"versionMenu\"\n        open={open}\n        placement={placement}\n        matchReferenceWidth\n        portal\n        ref={setPopoverRef}\n      >\n        <Flex width={'fill'}>\n          <Button\n            data-testid={open ? 'timeline-menu-close-button' : 'timeline-menu-open-button'}\n            disabled={loading || !events.length}\n            mode=\"ghost\"\n            onClick={open ? handleClose : handleOpen}\n            ref={setButton}\n            selected={open}\n            width=\"fill\"\n            tooltipProps={null}\n            justify={'space-between'}\n            style={{\n              maxWidth: '100%',\n            }}\n            iconRight={ChevronDownIcon}\n            text={loading ? t('timeline.loading-history') : buttonLabel}\n          />\n        </Flex>\n      </Root>\n    </PortalProvider>\n  )\n}\n","import {diffInput, wrap} from '@sanity/diff'\nimport {BoundaryElementProvider, Box, Card, Flex, Spinner, Stack, Text} from '@sanity/ui'\nimport {motion} from 'framer-motion'\nimport {type ReactElement, useMemo, useState} from 'react'\nimport {useObservable} from 'react-rx'\nimport {\n  ChangeFieldWrapper,\n  ChangeList,\n  ChangesError,\n  type DocumentChangeContextInstance,\n  type DocumentGroupEvent,\n  isReleaseDocument,\n  LoadingBlock,\n  NoChanges,\n  type ObjectDiff,\n  type ObjectSchemaType,\n  ScrollContainer,\n  Translate,\n  useEvents,\n  usePerspective,\n  useTranslation,\n} from 'sanity'\nimport {DocumentChangeContext} from 'sanity/_singletons'\nimport {styled} from 'styled-components'\n\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {EventsTimelineMenu} from '../../timeline/events/EventsTimelineMenu'\nimport {useDocumentPane} from '../../useDocumentPane'\n\nconst Scroller = styled(ScrollContainer)`\n  height: 100%;\n  overflow: auto;\n  position: relative;\n  scroll-behavior: smooth;\n`\n\nconst Grid = styled(Box)`\n  &:not([hidden]) {\n    display: grid;\n  }\n  grid-template-columns: 48px 1fr;\n  align-items: center;\n  gap: 0.25em;\n`\n\nconst SpinnerContainer = styled(Flex)`\n  width: 100%;\n  position: absolute;\n  bottom: -4px;\n`\n\nconst DIFF_INITIAL_VALUE = {\n  diff: null,\n  loading: true,\n  error: null,\n}\n\nconst CompareWithPublishedView = () => {\n  const {documentId, schemaType, editState, displayed} = useDocumentPane()\n  const {selectedPerspective, selectedPerspectiveName, selectedReleaseId} = usePerspective()\n  const {t} = useTranslation(structureLocaleNamespace)\n  const rootDiff = useMemo(() => {\n    const diff = diffInput(\n      wrap(editState?.published ?? {}, {author: ''}),\n      wrap(displayed ?? {}, {author: ''}),\n    ) as ObjectDiff\n\n    return diff\n  }, [editState?.published, displayed])\n\n  if (selectedReleaseId && !editState?.version) {\n    return null\n  }\n  if (selectedPerspective === 'drafts' && !editState?.draft) {\n    return null\n  }\n  if (selectedPerspectiveName === 'published' || !displayed?._rev) {\n    return null\n  }\n  return (\n    <Stack space={2} marginBottom={3}>\n      <Card borderBottom paddingBottom={3}>\n        <Stack space={3} paddingTop={1}>\n          <Text size={1} weight=\"medium\">\n            {t('events.compare-with-published.title')}\n          </Text>\n          <Text size={1} muted>\n            <Translate\n              i18nKey=\"events.compare-with-published.description\"\n              t={t}\n              values={{\n                version: isReleaseDocument(selectedPerspective)\n                  ? selectedPerspective.metadata?.title\n                  : 'draft',\n              }}\n            />\n          </Text>\n        </Stack>\n      </Card>\n      <DocumentChangeContext.Provider\n        value={{\n          documentId,\n          schemaType,\n          rootDiff,\n          isComparingCurrent: true,\n          FieldWrapper: (props) => props.children,\n          value: displayed,\n          showFromValue: true,\n        }}\n      >\n        <Box paddingY={1}>\n          <ChangeList diff={rootDiff} schemaType={schemaType} />\n        </Box>\n      </DocumentChangeContext.Provider>\n    </Stack>\n  )\n}\nexport function EventsInspector({showChanges}: {showChanges: boolean}): ReactElement {\n  const {documentId, schemaType, timelineError, value, formState} = useDocumentPane()\n  const [scrollRef, setScrollRef] = useState<HTMLDivElement | null>(null)\n\n  const {events, revision, sinceRevision, getChangesList} = useEvents()\n\n  const isComparingCurrent = !revision?.revisionId\n  const changesList$ = useMemo(() => getChangesList(), [getChangesList])\n  const {\n    diff,\n    loading: diffLoading,\n    error: diffError,\n  } = useObservable(changesList$, DIFF_INITIAL_VALUE)\n\n  const {t} = useTranslation('studio')\n\n  const documentContext: DocumentChangeContextInstance = useMemo(() => {\n    return {\n      documentId,\n      schemaType,\n      FieldWrapper: (props) =>\n        props.path.length > 0 ? <ChangeFieldWrapper {...props} /> : props.children,\n      rootDiff: diff,\n      isComparingCurrent: isComparingCurrent && !formState?.readOnly,\n      value,\n      showFromValue: true,\n    }\n  }, [diff, documentId, isComparingCurrent, formState?.readOnly, schemaType, value])\n\n  const [sinceEvent, toEvent] = useMemo(() => {\n    if (!events) return [null, null]\n    return [\n      events.find((e) => e.id === sinceRevision?.revisionId) || null,\n      events.find((e) => e.id === revision?.revisionId) || events[0],\n    ]\n  }, [events, revision?.revisionId, sinceRevision?.revisionId])\n\n  const sinceEvents = useMemo(() => {\n    // The sinceEvents need to account the toEvent showing only events that are older than the toEvent\n    if (!toEvent) return events.slice(1)\n    return events.slice(events.indexOf(toEvent) + 1).map((event) => {\n      // If the to event has a parent id, we need to remove the parent id from the since events or they won't be rendered, as they have no parent to expand.\n      if (\n        ('parentId' in toEvent && 'parentId' in event && event.parentId === toEvent.parentId) ||\n        ('parentId' in event && toEvent.id === event.parentId)\n      ) {\n        return {...event, parentId: undefined}\n      }\n      return event\n    })\n  }, [events, toEvent])\n  if (!events.length) {\n    return (\n      <Box paddingX={2}>\n        <Stack padding={3} space={3}>\n          <Text size={1} weight=\"medium\">\n            {t('timeline.error.no-document-history-title')}\n          </Text>\n          <Text muted size={1}>\n            {t('timeline.error.no-document-history-description')}\n          </Text>\n        </Stack>\n      </Box>\n    )\n  }\n  return (\n    <Flex data-testid=\"review-changes-pane\" direction=\"column\" height=\"fill\" overflow=\"hidden\">\n      <Box padding={3} style={{position: 'relative'}}>\n        <Grid paddingX={2} paddingBottom={2}>\n          <Text size={1} muted>\n            {t('changes.inspector.from-label')}\n          </Text>\n          <EventsTimelineMenu\n            event={sinceEvent || null}\n            events={sinceEvents}\n            mode=\"since\"\n            placement=\"bottom-start\"\n          />\n          <Text size={1} muted>\n            {t('changes.inspector.to-label')}\n          </Text>\n          <EventsTimelineMenu\n            event={toEvent || null}\n            events={events}\n            mode=\"rev\"\n            placement=\"bottom-end\"\n          />\n        </Grid>\n        {diffLoading && (\n          <motion.div\n            animate={{opacity: 1}}\n            initial={{opacity: 0}}\n            transition={{delay: 0.2, duration: 0.2}}\n          >\n            <SpinnerContainer justify=\"center\" align=\"center\" gap={2}>\n              <Text muted size={0}>\n                {t('changes.loading-changes')}\n              </Text>\n              <Spinner size={0} />\n            </SpinnerContainer>\n          </motion.div>\n        )}\n      </Box>\n\n      <Card flex={1} paddingX={2} paddingY={2}>\n        <BoundaryElementProvider element={scrollRef}>\n          <Scroller data-ui=\"Scroller\" ref={setScrollRef}>\n            <Box flex={1} paddingX={3} height=\"fill\">\n              {showChanges && (\n                <Content\n                  documentContext={documentContext}\n                  error={timelineError || diffError}\n                  loading={revision?.loading || sinceRevision?.loading || false}\n                  schemaType={schemaType}\n                  sameRevisionSelected={sinceEvent?.id === toEvent?.id}\n                  sinceEvent={sinceEvent}\n                />\n              )}\n            </Box>\n          </Scroller>\n        </BoundaryElementProvider>\n      </Card>\n    </Flex>\n  )\n}\n\nfunction Content({\n  error,\n  documentContext,\n  loading,\n  schemaType,\n  sameRevisionSelected,\n  sinceEvent,\n}: {\n  error?: Error | null\n  documentContext: DocumentChangeContextInstance\n  loading: boolean\n  schemaType: ObjectSchemaType\n  sameRevisionSelected: boolean\n  sinceEvent: DocumentGroupEvent | null\n}) {\n  if (error) {\n    return (\n      <>\n        <CompareWithPublishedView />\n        {sinceEvent?.type !== 'historyCleared' && <ChangesError error={error} />}\n      </>\n    )\n  }\n\n  if (loading) {\n    return <LoadingBlock showText />\n  }\n  if (sameRevisionSelected) {\n    return <SameRevisionSelected />\n  }\n\n  if (!documentContext.rootDiff) {\n    return (\n      <motion.div\n        animate={{opacity: 1}}\n        initial={{opacity: 0}}\n        transition={{delay: 0.2, duration: 0.2}}\n      >\n        <NoChanges />\n      </motion.div>\n    )\n  }\n\n  return (\n    <DocumentChangeContext.Provider value={documentContext}>\n      <Box paddingY={1}>\n        <ChangeList diff={documentContext.rootDiff} schemaType={schemaType} />\n      </Box>\n    </DocumentChangeContext.Provider>\n  )\n}\n\nfunction SameRevisionSelected() {\n  const {t} = useTranslation('')\n  return (\n    <motion.div\n      animate={{opacity: 1}}\n      initial={{opacity: 0}}\n      transition={{delay: 0.2, duration: 0.2}}\n    >\n      <Stack space={3} paddingTop={2}>\n        <Text size={1} weight=\"medium\" as=\"h3\">\n          {t('changes.same-revision-selected-title')}\n        </Text>\n        <Text as=\"p\" size={1} muted>\n          <Translate i18nKey=\"changes.same-revision-selected-description\" t={t} />\n        </Text>\n      </Stack>\n    </motion.div>\n  )\n}\n","import {BoundaryElementProvider, Card, Flex, useToast} from '@sanity/ui'\nimport {useCallback, useState} from 'react'\nimport {\n  type DocumentGroupEvent,\n  isDeleteDocumentGroupEvent,\n  isDeleteDocumentVersionEvent,\n  isScheduleDocumentVersionEvent,\n  isUnpublishDocumentEvent,\n  isUnscheduleDocumentVersionEvent,\n  LoadingBlock,\n  ScrollContainer,\n  useEvents,\n  useTranslation,\n} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {EventsTimeline} from '../../timeline/events/EventsTimeline'\nimport {TimelineError} from '../../timeline/TimelineError'\nimport {useDocumentPane} from '../../useDocumentPane'\n\nconst Scroller = styled(ScrollContainer)`\n  height: 100%;\n  overflow: auto;\n  position: relative;\n  scroll-behavior: smooth;\n`\n\nexport function EventsSelector({showList}: {showList: boolean}) {\n  const [scrollRef, setScrollRef] = useState<HTMLDivElement | null>(null)\n  const [listHeight, setListHeight] = useState(0)\n  const {setTimelineRange} = useDocumentPane()\n  const getScrollerRef = useCallback(\n    (el: HTMLDivElement | null) => {\n      if (!listHeight && el) {\n        /**\n         * Hacky solution, the list height needs to be defined, it cannot be obtained from the parent using a `max-height: 100%`\n         * Because the scroller won't work properly and it won't scroll to the selected element on mount.\n         * To fix this, this component will set the list height to the height of the parent element - 1px, to avoid a double scroll line.\n         */\n        setListHeight(el.clientHeight ? el.clientHeight - 1 : 0)\n        setScrollRef(el)\n      }\n    },\n    [listHeight],\n  )\n  const {\n    events,\n    nextCursor,\n    loading,\n    error,\n    revision,\n    loadMoreEvents,\n    findRangeForRevision,\n    expandEvent,\n  } = useEvents()\n\n  const {t} = useTranslation('studio')\n  const toast = useToast()\n\n  const selectRev = useCallback(\n    (event: DocumentGroupEvent) => {\n      try {\n        if (\n          isDeleteDocumentVersionEvent(event) ||\n          isDeleteDocumentGroupEvent(event) ||\n          isUnpublishDocumentEvent(event) ||\n          isScheduleDocumentVersionEvent(event) ||\n          isUnscheduleDocumentVersionEvent(event)\n        ) {\n          console.error('Event is not selectable')\n          return\n        }\n        const [since, rev] = findRangeForRevision(event.id)\n        setTimelineRange(since, rev)\n      } catch (err) {\n        toast.push({\n          closable: true,\n          description: err.message,\n          status: 'error',\n          title: t('timeline.error.unable-to-load-revision'),\n        })\n      }\n    },\n    [t, toast, setTimelineRange, findRangeForRevision],\n  )\n\n  const initialLoad = loading && !events.length\n  return (\n    <Flex data-testid=\"review-changes-pane\" direction=\"column\" height=\"fill\">\n      <Card flex={1} padding={2} paddingTop={0}>\n        {error ? (\n          <TimelineError />\n        ) : (\n          <BoundaryElementProvider element={scrollRef}>\n            <Scroller data-ui=\"Scroller\" ref={getScrollerRef}>\n              {listHeight &&\n              // This forces the list to unmount and remount, which is needed to reset the scroll position\n              showList &&\n              !initialLoad ? (\n                <EventsTimeline\n                  events={events}\n                  fetchEventChildren={expandEvent}\n                  hasMoreEvents={Boolean(nextCursor)}\n                  // If we have a revision, we select it, otherwise we select the first event\n                  selectedEventId={revision?.revisionId || events[0]?.id}\n                  onLoadMore={loadMoreEvents}\n                  onSelect={selectRev}\n                  listMaxHeight={`${listHeight}px`}\n                />\n              ) : null}\n              {loading && <LoadingBlock />}\n            </Scroller>\n          </BoundaryElementProvider>\n        )}\n      </Card>\n    </Flex>\n  )\n}\n","import {BoundaryElementProvider, Card, Flex, useToast} from '@sanity/ui'\nimport {useCallback, useState} from 'react'\nimport {\n  type Chunk,\n  ScrollContainer,\n  usePerspective,\n  useTimelineSelector,\n  useTranslation,\n} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Timeline} from '../../timeline'\nimport {TimelineError} from '../../timeline/TimelineError'\nimport {useDocumentPane} from '../../useDocumentPane'\n\nconst Scroller = styled(ScrollContainer)`\n  height: 100%;\n  overflow: auto;\n  position: relative;\n  scroll-behavior: smooth;\n`\n\nexport function HistorySelector({showList}: {showList: boolean}) {\n  const {timelineError, setTimelineRange, timelineStore} = useDocumentPane()\n  const {selectedReleaseId} = usePerspective()\n  const [scrollRef, setScrollRef] = useState<HTMLDivElement | null>(null)\n  const [listHeight, setListHeight] = useState(0)\n\n  const getScrollerRef = useCallback((el: HTMLDivElement | null) => {\n    if (!el?.clientHeight) return\n    /**\n     * Hacky solution, the list height needs to be defined, it cannot be obtained from the parent using a `max-height: 100%`\n     * Because the scroller won't work properly and it won't scroll to the selected element on mount.\n     * To fix this, this component will set the list height to the height of the parent element - 1px, to avoid a double scroll line.\n     */\n    setListHeight(el.clientHeight - 1)\n    setScrollRef(el)\n  }, [])\n\n  const chunks = useTimelineSelector(timelineStore, (state) => state.chunks)\n  const realRevChunk = useTimelineSelector(timelineStore, (state) => state.realRevChunk)\n  const hasMoreChunks = useTimelineSelector(timelineStore, (state) => state.hasMoreChunks)\n  const loading = useTimelineSelector(timelineStore, (state) => state.isLoading)\n\n  const {t} = useTranslation('studio')\n  const toast = useToast()\n  const selectRev = useCallback(\n    (revChunk: Chunk) => {\n      try {\n        const [sinceId, revId] = timelineStore?.findRangeForRev(revChunk) || [null, null]\n        setTimelineRange(sinceId, revId)\n      } catch (err) {\n        toast.push({\n          closable: true,\n          description: err.message,\n          status: 'error',\n          title: t('timeline.error.unable-to-load-revision'),\n        })\n      }\n    },\n    [setTimelineRange, t, timelineStore, toast],\n  )\n\n  const handleLoadMore = useCallback(() => {\n    // If updated, be sure to update the TimeLineMenu component as well\n    if (!loading) {\n      timelineStore?.loadMore()\n    }\n  }, [loading, timelineStore])\n\n  return (\n    <Flex data-testid=\"review-changes-pane\" direction=\"column\" height=\"fill\">\n      <Card flex={1} padding={2} paddingTop={0}>\n        {timelineError || selectedReleaseId ? (\n          <TimelineError versionError={Boolean(selectedReleaseId)} />\n        ) : (\n          <BoundaryElementProvider element={scrollRef}>\n            <Scroller data-ui=\"Scroller\" ref={getScrollerRef}>\n              {listHeight &&\n              // This forces the list to unmount and remount, which is needed to reset the scroll position\n              showList ? (\n                <Timeline\n                  chunks={chunks}\n                  hasMoreChunks={hasMoreChunks}\n                  lastChunk={realRevChunk}\n                  onLoadMore={handleLoadMore}\n                  onSelect={selectRev}\n                  listMaxHeight={`${listHeight}px`}\n                />\n              ) : null}\n            </Scroller>\n          </BoundaryElementProvider>\n        )}\n      </Card>\n    </Flex>\n  )\n}\n","import {CloseIcon, InfoOutlineIcon} from '@sanity/icons'\nimport {Box, Card, Flex, TabList, TabPanel, Text} from '@sanity/ui'\nimport {useState} from 'react'\nimport {\n  type DocumentInspectorProps,\n  isReleaseDocument,\n  Translate,\n  usePerspective,\n  useSource,\n  useTranslation,\n} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {Button, Tab, Tooltip} from '../../../../../ui-components'\nimport {usePaneRouter} from '../../../../components/paneRouter/usePaneRouter'\nimport {structureLocaleNamespace} from '../../../../i18n'\nimport {HISTORY_INSPECTOR_NAME} from '../../constants'\nimport {ChangesInspector} from './ChangesInspector'\nimport {EventsInspector} from './EventsInspector'\nimport {EventsSelector} from './EventsSelector'\nimport {HistorySelector} from './HistorySelector'\n\nconst FadeInFlex = styled(Flex)`\n  opacity: 0;\n  transition: opacity 200ms;\n  &[data-ready] {\n    opacity: 1;\n  }\n`\nconst TABS = ['history', 'review'] as const\nconst isValidTab = (tab: string | undefined): tab is (typeof TABS)[number] =>\n  // @ts-expect-error TS doesn't understand the type guard\n  tab && TABS.includes(tab)\n\nexport function ChangesTabs(props: DocumentInspectorProps) {\n  const {params, setParams} = usePaneRouter()\n  const source = useSource()\n  const [parentRef, setParentRef] = useState<HTMLDivElement | null>(null)\n  const {t} = useTranslation(structureLocaleNamespace)\n  const isReady = params?.inspect === HISTORY_INSPECTOR_NAME\n  const {selectedPerspective} = usePerspective()\n\n  const paneRouterTab = isValidTab(params?.changesInspectorTab)\n    ? params.changesInspectorTab\n    : TABS[0]\n\n  const setPaneRouterTab = (tab: (typeof TABS)[number]) =>\n    setParams({\n      ...params,\n      changesInspectorTab: tab,\n      // Reset the since when changing the tab, as it's not relevant for the history tab\n      since: tab === 'history' ? undefined : params?.since,\n    })\n\n  const perspectiveName = isReleaseDocument(selectedPerspective)\n    ? selectedPerspective.metadata.title\n    : selectedPerspective === 'drafts'\n      ? t('compare-versions.status.draft')\n      : t('compare-versions.status.published')\n\n  return (\n    <FadeInFlex\n      direction=\"column\"\n      padding={0}\n      height=\"fill\"\n      data-ready={isReady ? '' : undefined}\n      ref={setParentRef}\n    >\n      <Card paddingBottom={1}>\n        <Flex align=\"center\" padding={3} gap={2}>\n          <TabList space={1} flex={1}>\n            <Tab\n              aria-controls=\"history-panel\"\n              id=\"history-tab\"\n              label={t('changes.tab.history')}\n              onClick={() => setPaneRouterTab('history')}\n              selected={paneRouterTab === 'history'}\n            />\n            <Tab\n              aria-controls=\"review-changes-panel\"\n              id=\"changes-tab\"\n              label={t('changes.tab.review-changes')}\n              onClick={() => setPaneRouterTab('review')}\n              selected={paneRouterTab === 'review'}\n            />\n          </TabList>\n          <Button\n            aria-label={t('changes.action.close-label')}\n            icon={CloseIcon}\n            mode=\"bleed\"\n            onClick={props.onClose}\n            tooltipProps={{content: t('document-inspector.close-button.tooltip')}}\n          />\n        </Flex>\n      </Card>\n      <Card padding={2} marginBottom={3} marginX={3} tone=\"neutral\" border radius={3}>\n        <Flex gap={2} align=\"flex-start\">\n          <Tooltip\n            portal\n            placement=\"bottom-end\"\n            boundaryElement={parentRef}\n            content={\n              <Box flex={1} padding={1}>\n                <Text size={1}>\n                  <Translate t={t} i18nKey=\"changes.banner.tooltip\" />\n                </Text>\n              </Box>\n            }\n          >\n            <Text size={0} muted>\n              <InfoOutlineIcon fontSize={1} />\n            </Text>\n          </Tooltip>\n          <Text size={0} muted>\n            <Translate\n              t={t}\n              values={{\n                perspective: perspectiveName,\n              }}\n              i18nKey=\"changes.banner.description\"\n            />\n          </Text>\n        </Flex>\n      </Card>\n\n      <TabPanel\n        aria-labelledby=\"history-tab\"\n        height=\"fill\"\n        hidden={paneRouterTab !== 'history'}\n        id=\"history-panel\"\n      >\n        {source.beta?.eventsAPI?.documents ? (\n          <EventsSelector showList={paneRouterTab === 'history'} />\n        ) : (\n          <HistorySelector showList={paneRouterTab === 'history'} />\n        )}\n      </TabPanel>\n\n      <TabPanel\n        aria-labelledby=\"review-tab\"\n        hidden={paneRouterTab !== 'review'}\n        id=\"review-panel\"\n        height=\"fill\"\n      >\n        {source.beta?.eventsAPI?.documents ? (\n          <>\n            {paneRouterTab === 'review' ? (\n              <EventsInspector showChanges={paneRouterTab === 'review'} />\n            ) : null}\n          </>\n        ) : (\n          <ChangesInspector showChanges={paneRouterTab === 'review'} />\n        )}\n      </TabPanel>\n    </FadeInFlex>\n  )\n}\n","import {RestoreIcon} from '@sanity/icons'\nimport {type DocumentInspector, useTranslation} from 'sanity'\n\nimport {useStructureTool} from '../../../../useStructureTool'\nimport {HISTORY_INSPECTOR_NAME} from '../../constants'\nimport {ChangesTabs} from './ChangesTabs'\n\nexport const changesInspector: DocumentInspector = {\n  name: HISTORY_INSPECTOR_NAME,\n  useMenuItem: () => {\n    const {features} = useStructureTool()\n    const {t} = useTranslation()\n\n    return {\n      hidden: !features.reviewChanges,\n      icon: RestoreIcon,\n      title: t('changes.title'),\n    }\n  },\n  component: ChangesTabs,\n  onClose: ({params}) => ({\n    params: {\n      ...params,\n      since: undefined,\n      rev: undefined,\n      changesInspectorTab: undefined,\n      historyVersion: undefined,\n    },\n  }),\n  onOpen: ({params}) => ({params: {...params, since: '@lastPublished'}}),\n}\n","/* eslint-disable no-loop-func */\n\nimport {type Path, type SanityDocument, type SchemaType} from '@sanity/types'\nimport {isArray, isRecord} from 'sanity'\n\n// eslint-disable-next-line max-statements\nexport function getPathTitles(options: {\n  path: Path\n  schemaType: SchemaType\n  value: Partial<SanityDocument> | null\n}): Array<{name: string; title?: string}> {\n  const {path, schemaType, value} = options\n  const result: Array<{name: string; title?: string}> = []\n\n  let s = schemaType\n  let v: unknown = value\n\n  for (const segment of path) {\n    // field name\n    if (typeof segment === 'string') {\n      if (!isRecord(v) && v !== undefined) {\n        throw new Error(`Parent value is not an object, cannot get path segment: .${segment}`)\n      }\n\n      if (s.jsonType !== 'object') {\n        throw new Error(\n          `Parent type is not an object schema type, cannot get path segment: .${segment}`,\n        )\n      }\n\n      v = v?.[segment]\n\n      const field = s.fields.find((f) => f.name === segment)\n\n      if (!field) {\n        result.push({name: segment})\n        return result\n      }\n\n      s = field.type\n\n      result.push(s)\n\n      continue\n    }\n\n    // array item index\n    if (typeof segment === 'number') {\n      if (!isArray(v) && v !== undefined) {\n        throw new Error(`Parent value is not an array, cannot get path segment: [${segment}]`)\n      }\n\n      if (s.jsonType !== 'array') {\n        throw new Error(\n          `Parent type is not an array schema type, cannot get path segment: [${segment}]`,\n        )\n      }\n\n      v = v?.[segment]\n\n      const itemType = s.of.find((ofType) => {\n        if (typeof v === 'string') {\n          return ofType.jsonType === 'string'\n        }\n\n        if (typeof v === 'number') {\n          return ofType.jsonType === 'number'\n        }\n\n        if (typeof v === 'boolean') {\n          return ofType.jsonType === 'boolean'\n        }\n\n        if (isRecord(v)) {\n          return ofType.name === v?._type\n        }\n\n        return false\n      })\n\n      if (!itemType) {\n        throw new Error(`Item type not found: [${segment}]`)\n      }\n\n      s = itemType\n\n      result.push(s)\n\n      continue\n    }\n\n    // array item key\n    if (isRecord(segment) && segment._key) {\n      // if the value is undefined, it likely means that is has been deleted, so return the result\n      if (typeof v === 'undefined') {\n        return result\n      }\n\n      if (!isArray(v)) {\n        throw new Error(\n          `Parent value is not an array, cannot get path segment: [_key == ${segment}]`,\n        )\n      }\n\n      if (s.jsonType !== 'array') {\n        throw new Error(\n          `Parent type is not an array schema type, cannot get path segment: .${segment}`,\n        )\n      }\n\n      const values = v ?? []\n\n      v = values.find((i) => isRecord(i) && i._key === segment._key)\n\n      // in situations where the segment key exists but it could not be found in the values array\n      // means that the specific item has been deleted from the array\n      // and therefore we not need to continue running the validation for it\n      if (typeof v === 'undefined') {\n        return result\n      }\n\n      if (!isRecord(v)) {\n        throw new Error(`Array item not found: [_key == ${segment._key}]`)\n      }\n\n      const ofType = s.of.find((i) => isRecord(v) && i.name === v?._type)\n\n      if (!ofType) {\n        throw new Error(`Array item type not found: .${v?._type}`)\n      }\n\n      s = ofType\n\n      result.push(s)\n\n      continue\n    }\n\n    throw new Error(`Invalid path segment: ${JSON.stringify(segment)}`)\n  }\n\n  return result\n}\n","import {\n  ErrorOutlineIcon,\n  type IconComponent,\n  InfoOutlineIcon,\n  WarningOutlineIcon,\n} from '@sanity/icons'\nimport {\n  type ObjectSchemaType,\n  type Path,\n  type SanityDocument,\n  type SchemaType,\n  type ValidationMarker,\n} from '@sanity/types'\nimport {Box, Card, type CardTone, Flex, Stack, Text} from '@sanity/ui'\nimport {type ErrorInfo, Fragment, useCallback, useMemo, useState} from 'react'\nimport {type DocumentInspectorProps, isGoingToUnpublish, useTranslation} from 'sanity'\n\nimport {ErrorBoundary} from '../../../../../ui-components'\nimport {DocumentInspectorHeader} from '../../documentInspector'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {getPathTitles} from './getPathTitles'\n\nconst MARKER_ICON: Record<'error' | 'warning' | 'info', IconComponent> = {\n  error: ErrorOutlineIcon,\n  warning: WarningOutlineIcon,\n  info: InfoOutlineIcon,\n}\n\nconst MARKER_TONE: Record<'error' | 'warning' | 'info', CardTone> = {\n  error: 'critical',\n  warning: 'caution',\n  info: 'primary',\n}\n\nexport function ValidationInspector(props: DocumentInspectorProps) {\n  const {onClose} = props\n  const {onFocus, onPathOpen, schemaType, validation, value, editState} = useDocumentPane()\n  const {t} = useTranslation('validation')\n\n  const handleOpen = useCallback(\n    (path: Path) => {\n      onPathOpen(path)\n      onFocus(path)\n    },\n    [onFocus, onPathOpen],\n  )\n\n  const isVersionGoingToUnpublish =\n    editState && editState.version && isGoingToUnpublish(editState.version as SanityDocument)\n\n  return (\n    <Flex direction=\"column\" height=\"fill\" overflow=\"hidden\">\n      <DocumentInspectorHeader\n        as=\"header\"\n        closeButtonLabel={t('panel.close-button-aria-label')}\n        flex=\"none\"\n        onClose={onClose}\n        title={t('panel.title')}\n      />\n\n      <Card flex={1} overflow=\"auto\" padding={3}>\n        {isVersionGoingToUnpublish ? (\n          <Box padding={2}>\n            <Text muted size={1}>\n              {t('panel.unpublish-message')}\n            </Text>\n          </Box>\n        ) : (\n          <>\n            {validation.length === 0 && (\n              <Box padding={2}>\n                <Text muted size={1}>\n                  {t('panel.no-errors-message')}\n                </Text>\n              </Box>\n            )}\n            {validation.length > 0 && (\n              <Stack space={2}>\n                {validation.map((marker, i) => (\n                  <ValidationCard\n                    // oxlint-disable-next-line no-array-index-key\n                    key={i}\n                    marker={marker}\n                    onOpen={handleOpen}\n                    schemaType={schemaType}\n                    value={value}\n                  />\n                ))}\n              </Stack>\n            )}\n          </>\n        )}\n      </Card>\n    </Flex>\n  )\n}\n\nfunction ValidationCard(props: {\n  marker: ValidationMarker\n  onOpen: (path: Path) => void\n  schemaType: ObjectSchemaType\n  value: Partial<SanityDocument> | null\n}) {\n  const {marker, onOpen, schemaType, value} = props\n  const handleOpen = useCallback(() => onOpen(marker.path), [marker, onOpen])\n  const [errorInfo, setErrorInfo] = useState<{error: Error; info: ErrorInfo} | null>(null)\n  const Icon = MARKER_ICON[marker.level]\n\n  return (\n    <ErrorBoundary onCatch={setErrorInfo}>\n      {errorInfo && (\n        <Card padding={3} radius={2} tone=\"critical\">\n          <Text size={1}>{errorInfo.error.message}</Text>\n        </Card>\n      )}\n\n      {!errorInfo && (\n        <Card\n          __unstable_focusRing\n          as=\"button\"\n          onClick={handleOpen}\n          padding={3}\n          radius={2}\n          tone={MARKER_TONE[marker.level]}\n        >\n          <Flex align=\"flex-start\" gap={3}>\n            <Box flex=\"none\">\n              <Text size={1}>\n                <Icon />\n              </Text>\n            </Box>\n\n            <Stack flex={1} space={2}>\n              <DocumentNodePathBreadcrumbs\n                path={marker.path}\n                schemaType={schemaType}\n                value={value}\n              />\n\n              <Text muted size={1}>\n                {marker.message}\n              </Text>\n            </Stack>\n          </Flex>\n        </Card>\n      )}\n    </ErrorBoundary>\n  )\n}\n\nfunction DocumentNodePathBreadcrumbs(props: {\n  path: Path\n  schemaType: SchemaType\n  value: Partial<SanityDocument> | null\n}) {\n  const {path, schemaType, value} = props\n\n  const pathTitles = useMemo(() => {\n    try {\n      return getPathTitles({path, schemaType, value})\n    } catch (e) {\n      console.error(e)\n    }\n    return null\n  }, [path, schemaType, value])\n\n  if (!pathTitles?.length) return null\n\n  return (\n    <Text size={1}>\n      {pathTitles.map((t, i) => (\n        // oxlint-disable-next-line no-array-index-key\n        <Fragment key={i}>\n          {i > 0 && <span style={{color: 'var(--card-muted-fg-color)', opacity: 0.5}}> / </span>}\n          <span style={{fontWeight: 500}}>{t.title || t.name}</span>\n        </Fragment>\n      ))}\n    </Text>\n  )\n}\n","import {CheckmarkCircleIcon, ErrorOutlineIcon, WarningOutlineIcon} from '@sanity/icons'\nimport {useMemo} from 'react'\nimport {\n  type DocumentInspector,\n  type DocumentInspectorMenuItem,\n  type DocumentInspectorUseMenuItemProps,\n  type FormNodeValidation,\n  isGoingToUnpublish,\n  isValidationError,\n  isValidationWarning,\n  usePerspective,\n  useTranslation,\n  useValidationStatus,\n} from 'sanity'\n\nimport {VALIDATION_INSPECTOR_NAME} from '../../constants'\nimport {useDocumentPane} from '../../useDocumentPane'\nimport {ValidationInspector} from './ValidationInspector'\n\nfunction useMenuItem(props: DocumentInspectorUseMenuItemProps): DocumentInspectorMenuItem {\n  const {documentId, documentType} = props\n  const {t} = useTranslation('validation')\n  const {selectedReleaseId} = usePerspective()\n  const {validation: validationMarkers} = useValidationStatus(\n    documentId,\n    documentType,\n    selectedReleaseId,\n  )\n  const {value} = useDocumentPane()\n\n  const validation: FormNodeValidation[] = useMemo(\n    () =>\n      validationMarkers.map((item) => ({\n        level: item.level,\n        message: item.message,\n        path: item.path,\n      })),\n    [validationMarkers],\n  )\n\n  const hasErrors = validation.some(isValidationError)\n  const hasWarnings = validation.some(isValidationWarning)\n  const isDocumentGoingToUnpublish = isGoingToUnpublish(value)\n\n  const icon = useMemo(() => {\n    if (hasErrors) return ErrorOutlineIcon\n    if (hasWarnings) return WarningOutlineIcon\n    return CheckmarkCircleIcon\n  }, [hasErrors, hasWarnings])\n\n  const tone = useMemo(() => {\n    if (hasErrors) return 'critical'\n    if (hasWarnings) return 'caution'\n    return 'positive'\n  }, [hasErrors, hasWarnings])\n\n  return {\n    hidden: validation.length === 0 || isDocumentGoingToUnpublish,\n    icon,\n    title: t('panel.title'),\n    tone,\n    showAsAction: true,\n  }\n}\n\nexport const validationInspector: DocumentInspector = {\n  name: VALIDATION_INSPECTOR_NAME,\n  component: ValidationInspector,\n  useMenuItem,\n}\n","import {omit} from 'lodash'\nimport {decodeJsonParams, encodeJsonParams, route} from 'sanity/router'\n\nimport {type RouterPaneGroup, type RouterPanes, type RouterPaneSibling} from './types'\n\nconst EMPTY_PARAMS = {}\n\n/**\n * @internal\n */\nexport function legacyEditParamsToState(params: string): Record<string, unknown> {\n  try {\n    return JSON.parse(decodeURIComponent(params))\n  } catch (err) {\n    console.warn('Failed to parse JSON parameters')\n    return {}\n  }\n}\n\nexport function encodePanesSegment(panes: RouterPanes): string {\n  return (panes || [])\n    .map((group) => group.map(encodeChunks).join('|'))\n    .map(encodeURIComponent)\n    .join(';')\n}\n\n/**\n * @internal\n */\nexport function legacyEditParamsToPath(params: Record<string, unknown>): string {\n  return JSON.stringify(params)\n}\n\n// http://localhost:3333/intent/create/template=book-by-author;type=book/eyJhdXRob3JJZCI6Imdycm0ifQ==\n\n/**\n * @internal\n */\nexport function toState(pathSegment: string): RouterPaneGroup[] {\n  return parsePanesSegment(decodeURIComponent(pathSegment))\n}\n\n/**\n * @internal\n */\nexport function toPath(panes: RouterPaneGroup[]): string {\n  return encodePanesSegment(panes)\n}\n\nexport const router = route.create('/', [\n  // \"Asynchronous intent resolving\" route\n  route.intents('/intent'),\n\n  // Legacy fallback route, will be redirected to new format\n  route.create('/edit/:type/:editDocumentId', [\n    route.create({\n      path: '/:params',\n      transform: {params: {toState: legacyEditParamsToState, toPath: legacyEditParamsToPath}},\n    }),\n  ]),\n\n  // The regular path - when the intent can be resolved to a specific pane\n  route.create({\n    path: '/:panes',\n    // Legacy URLs, used to handle redirects\n    children: [route.create('/:action', route.create('/:legacyEditDocumentId'))],\n    transform: {\n      panes: {toState, toPath},\n    },\n  }),\n])\n\n// old: authors;knut,{\"template\":\"diaryEntry\"}\n// new: authors;knut,view=diff,eyJyZXYxIjoiYWJjMTIzIiwicmV2MiI6ImRlZjQ1NiJ9|latest-posts\n\nconst panePattern = /^([.a-z0-9_-]+),?({.*?})?(?:(;|$))/i\nconst isParam = (str: string) => /^[a-z0-9]+=[^=]+/i.test(str)\nconst isPayloadLike = (str: string) => /^[A-Za-z0-9\\-_]+(?:={0,2})$/.test(str)\nconst exclusiveParams = ['view', 'since', 'rev', 'inspect', 'comment']\n\ntype Truthy<T> = T extends false\n  ? never\n  : T extends ''\n    ? never\n    : T extends 0\n      ? never\n      : T extends 0n\n        ? never\n        : T extends null | undefined\n          ? NonNullable<T>\n          : T\nconst isTruthy = Boolean as (t: unknown) => boolean as <T>(t: T) => t is Truthy<T>\n\nfunction parseChunks(chunks: string[], initial: RouterPaneSibling): RouterPaneSibling {\n  const sibling: RouterPaneSibling = {...initial, params: EMPTY_PARAMS, payload: undefined}\n  return chunks.reduce((pane, chunk) => {\n    if (isParam(chunk)) {\n      const key = chunk.slice(0, chunk.indexOf('='))\n      const value = chunk.slice(key.length + 1)\n      pane.params = {...pane.params, [decodeURIComponent(key)]: decodeURIComponent(value)}\n    } else if (isPayloadLike(chunk)) {\n      pane.payload = tryParseBase64Payload(chunk)\n    } else {\n      console.warn('Unknown pane segment: %s - skipping', chunk)\n    }\n\n    return pane\n  }, sibling)\n}\n\nfunction encodeChunks(pane: RouterPaneSibling, index: number, group: RouterPaneGroup): string {\n  const {payload, params = {}, id} = pane\n  const [firstSibling] = group\n  const paneIsFirstSibling = pane === firstSibling\n  const sameAsFirst = index !== 0 && id === firstSibling.id\n  const encodedPayload =\n    typeof payload === 'undefined' ? undefined : encodeJsonParams(payload as any)\n\n  const encodedParams = Object.entries(params)\n    .filter((entry): entry is [string, string] => {\n      const [key, value] = entry\n      if (!value) return false\n      if (paneIsFirstSibling) return true\n\n      // omit the value if it's the same as the value from the first sibling\n      const valueFromFirstSibling = firstSibling.params?.[key]\n      if (value === valueFromFirstSibling && !exclusiveParams.includes(key)) return false\n      return true\n    })\n    .map(([key, value]) => `${encodeURIComponent(key)}=${encodeURIComponent(value)}`)\n\n  return (\n    [sameAsFirst ? '' : id]\n      .concat([encodedParams.length > 0 && encodedParams, encodedPayload].filter(isTruthy).flat())\n      .join(',') || ','\n  )\n}\n\nexport function parsePanesSegment(str: string): RouterPanes {\n  if (str.indexOf(',{') !== -1) {\n    return parseOldPanesSegment(str)\n  }\n\n  return str\n    .split(';')\n    .map((group) => {\n      const [firstSibling, ...restOfSiblings] = group.split('|').map((segment) => {\n        const [id, ...chunks] = segment.split(',')\n        return parseChunks(chunks, {id})\n      })\n\n      return [\n        firstSibling,\n        ...restOfSiblings.map((sibling) => ({\n          ...firstSibling,\n          ...sibling,\n          id: sibling.id || firstSibling.id,\n          params: {...omit(firstSibling.params, exclusiveParams), ...sibling.params},\n          payload: sibling.payload || firstSibling.payload,\n        })),\n      ]\n    })\n    .filter((group) => group.length > 0)\n}\n\nfunction parseOldPanesSegment(str: string): RouterPanes {\n  const chunks: RouterPaneGroup = []\n\n  let buffer = str\n  while (buffer.length) {\n    const [match, id, payloadChunk] = buffer.match(panePattern) || []\n    if (!match) {\n      buffer = buffer.slice(1)\n      continue\n    }\n\n    const payload = payloadChunk && tryParsePayload(payloadChunk)\n    chunks.push({id, payload})\n\n    buffer = buffer.slice(match.length)\n  }\n\n  return [chunks]\n}\n\nfunction tryParsePayload(json: string) {\n  try {\n    return JSON.parse(json)\n  } catch (err) {\n    console.warn(`Failed to parse parameters: ${err.message}`)\n    return undefined\n  }\n}\n\nfunction tryParseBase64Payload(data: string): unknown {\n  try {\n    return data ? decodeJsonParams(data) : undefined\n  } catch (err) {\n    console.warn(`Failed to parse parameters: ${err.message}`)\n    return undefined\n  }\n}\n","import {MasterDetailIcon} from '@sanity/icons'\nimport {lazy} from 'react'\nimport {definePlugin} from 'sanity'\n\nimport {\n  DeleteAction,\n  DiscardChangesAction,\n  DuplicateAction,\n  HistoryRestoreAction,\n  PublishAction,\n  UnpublishAction,\n} from './documentActions'\nimport {LiveEditBadge} from './documentBadges'\nimport {getIntentState} from './getIntentState'\nimport {structureUsEnglishLocaleBundle} from './i18n'\nimport {changesInspector} from './panes/document/inspectors/changes'\nimport {validationInspector} from './panes/document/inspectors/validation'\nimport {router} from './router'\nimport {type StructureToolOptions} from './types'\n\nconst documentActions = [\n  PublishAction,\n  UnpublishAction,\n  DiscardChangesAction,\n  DuplicateAction,\n  DeleteAction,\n  HistoryRestoreAction,\n]\n\nconst documentBadges = [LiveEditBadge]\n\nconst inspectors = [validationInspector, changesInspector]\n\n/**\n * The structureTool is a studio plugin which adds the “structure tool” – a tool within\n * Sanity Studio in which content editors can drill down to specific documents to edit them.\n * You can configure your Studio's structure tool(s).\n *\n * @public\n * @param options - Options for the structure tool. See {@link StructureToolOptions}\n * @example Minimal example\n * ```ts\n * // sanity.config.ts\n * import { defineConfig } from 'sanity'\n * import { structureTool } from 'sanity/structure'\n *\n * export default defineConfig((\n *  // ...\n *  plugins: [\n *    structureTool() // use defaults\n *  ]\n * })\n * ```\n *\n * @example To customise your structure tool\n * ```ts\n * // sanity.config.ts\n * import { defineConfig } from 'sanity'\n * import { structureTool } from 'sanity/structure'\n * import { FaCar } from 'react-icons'\n\n * export default defineConfig((\n *\t // ...\n *   plugins: [\n *    structureTool({\n *      name: 'cars',\n *      title: 'Cars',\n *      icon: FaCar,\n *      structure: (S) => S.documentTypeList('car'),\n *      defaultDocumentNode: (S) =>\n *        S.document().views([\n *          S.view.form(),\n *          S.view.component(Preview).title('Preview')\n *        ])\n *    })\n *  ]\n * })\n * ```\n * */\nexport const structureTool = definePlugin<StructureToolOptions | void>((options) => {\n  const icon = options?.icon || MasterDetailIcon\n\n  return {\n    name: 'sanity/structure',\n    document: {\n      actions: (prevActions) => {\n        // NOTE: since it's possible to have several structure tools in one Studio,\n        // we need to check whether the document actions already exist in the Studio config\n        return Array.from(new Set([...prevActions, ...documentActions]))\n      },\n      badges: (prevBadges) => {\n        // NOTE: since it's possible to have several structure tools in one Studio,\n        // we need to check whether the document badges already exist in the Studio config\n        return Array.from(new Set([...prevBadges, ...documentBadges]))\n      },\n      inspectors: (prevInspectors) => {\n        // NOTE: since it's possible to have several structure tools in one Studio,\n        // we need to check whether the inspectors already exist in the Studio config\n        return Array.from(new Set([...prevInspectors, ...inspectors]))\n      },\n    },\n\n    tools: [\n      {\n        name: options?.name || 'structure',\n        title: options?.title || 'Structure',\n        icon,\n        component: lazy(() => import('./components/structureTool')),\n        canHandleIntent: (intent, params) => {\n          if (intent === 'create') return canHandleCreateIntent(params)\n          if (intent === 'edit') return canHandleEditIntent(params)\n          return false\n        },\n        getIntentState,\n        // Controlled by sanity/src/structure/components/structureTool/StructureTitle.tsx\n        controlsDocumentTitle: true,\n        options,\n        router,\n        __internalApplicationType: 'sanity/structure',\n      },\n    ],\n\n    i18n: {\n      bundles: [structureUsEnglishLocaleBundle],\n    },\n  }\n})\n\nfunction canHandleCreateIntent(params: Record<string, unknown>) {\n  // We can't handle create intents without a `type` parameter\n  if (!('type' in params)) {\n    return false\n  }\n\n  // We can handle any create intent as long as it has a `type` parameter,\n  // but we also know how to deal with templates, where other tools might not\n  return 'template' in params ? {template: true} : true\n}\n\nfunction canHandleEditIntent(params: Record<string, unknown>) {\n  // We can't handle edit intents without an `id` parameter\n  if (!('id' in params)) {\n    return false\n  }\n\n  // We can handle any edit intent with a document ID, but we're best at `structure` mode\n  // This ensures that other tools that can handle modes such as `presentation` or `batch`\n  // can take precedence over the structure tool\n  return 'mode' in params ? {mode: params.mode === 'structure'} : true\n}\n"],"names":["useCreatePathSyncChannel","$","_c","t0","Symbol","for","Subject","DIFF_VIEW_SEARCH_PARAMETER","DIFF_VIEW_PREVIOUS_DOCUMENT_SEARCH_PARAMETER","DIFF_VIEW_NEXT_DOCUMENT_SEARCH_PARAMETER","DIFF_SEARCH_PARAM_DELIMITER","useDiffViewRouter","navigate","state","routerState","useRouter","t1","mode","previousDocument","nextDocument","next","fromPairs","_searchParams","type","id","join","toPairs","navigateDiffView","filter","_temp","exitDiffView","t2","key","includes","diffViewModes","isDiffViewMode","maybeDiffViewMode","useDiffViewState","onParamsError","searchParams","URLSearchParams","get","anyParamSet","some","param","params","useMemo","parseParams","useEffect","result","errors","isActive","previousDocumentType","previousDocumentId","split","Boolean","nextDocumentType","nextDocumentId","push","length","documents","previous","useScrollMirror","elements","existentElements","scrollMirror","ScrollMirror","destroy","element","findRelease","documentId","releases","isPublishedId","isDraftId","find","_id","getReleaseIdFromReleaseDocumentId","getVersionFromId","VersionModeHeaderLayout","styled","header","VersionModeHeaderLayoutSection","div","VersionModeHeader","t","useTranslation","structureLocaleNamespace","data","documentVersions","useDocumentVersions","activeReleases","useActiveReleases","releasesIds","flatMap","release","releaseId","onSelectPreviousRelease","useCallback","selectedDocumentId","onSelectNextRelease","jsxs","jsx","Box","Text","Flex","TransferIcon","justifySelf","Button","CloseIcon","VersionMenu","onSelectRelease","role","document","published","draft","useEditState","getPublishedId","selected","tStructure","tCore","drafts","enabled","isDraftModelEnabled","useWorkspace","MenuButton","getMenuButtonProps","Menu","map","VersionMenuItem","onSelect","isSelected","onClick","getDraftId","getVersionId","MenuItem","ReleaseAvatar","tone","getReleaseTone","Stack","metadata","title","releaseType","formatRelativeLocalePublishDate","isReleaseScheduledOrScheduling","LockIcon","text","disabled","isReleaseDocument","icon","iconRight","undefined","DialogLayout","pickDocumentLayoutComponent","plugin","components","unstable_layout","usePathSyncChannel","syncChannel","source","t3","t4","pipe","distinctUntilChanged","_temp2","path","state_0","deepEquals","Scroller","DiffViewPaneLayout","Card","Container","UiContainer","DiffViewPane","forwardRef","ref","documentType","scrollElement","compareDocument","containerElement","useRef","portalElement","setPortalElement","useState","boundaryElement","setBoundaryElement","pick","defaultComponent","DocumentLayout","useMiddlewareComponents","isInteractive","onOpenReviewChanges","noop","onSetFocus","isReviewChangesOpen","t5","t6","t7","t8","t9","t10","t11","t12","DialogProvider","t13","PortalProvider","t14","t15","t16","t17","BoundaryElementProvider","t18","ReviewChangesContext","ChangeIndicatorsTracker","VirtualizerScrollInstanceProvider","DiffViewDocument","compareValue","useCompareValue","patchChannel","createPatchChannel","perspective","formState","onChange","onFocus","onBlur","onSetActiveFieldGroup","onSetCollapsedFieldSet","onSetCollapsedPath","collapsedFieldSets","ready","collapsedPaths","schemaType","value","onProgrammaticFocus","documentForm","useDocumentForm","selectedPerspectiveName","perspectiveName","comparisonValue","isLoading","pathSyncChannel","onPathOpen","subscription","subscribe","unsubscribe","LoadingBlock","CommentsEnabledContext","FormBuilder","focusPath","changed","focused","groups","validation","members","sanitizeBundleName","presence","isVersionId","compareDocumentEditState","bb0","version","bundle","Link","a","EditReferenceLinkComponent","children","_documentId","intent","href","useIntentLink","DiffView","previousPaneElement","setPreviousPaneElement","nextPaneElement","setNextPaneElement","referenceInputOptionsContext","useContext","ReferenceInputOptionsContext","disableNew","diffViewReferenceInputOptionsContext","Dialog","DiffViewDocumentLayout","toast","useToast","status","description","error","input","Fragment","PANE_DEBUG","PANE_COLLAPSED_WIDTH","PANE_DEFAULT_MIN_WIDTH","usePaneLayout","pane","PaneLayoutContext","Error","Root","Layer","PaneDivider","resize","dragging","setDragging","event","preventDefault","startX","pageX","handleMouseMove","e","deltaX","handleMouseUp","e_0","window","removeEventListener","addEventListener","handleMouseDown","Pane","props","forwardedRef","currentMaxWidthProp","currentMinWidthProp","maxWidthProp","minWidthProp","restProps","currentMinWidth","currentMaxWidth","flex","minWidth","maxWidth","flexProp","rootElement","setRootElement","collapse","collapsed","layoutCollapsed","expand","expandedElement","mount","panes","p","indexOf","paneIndex","nextPane","isLast","expanded","nextCollapsed","current","useImperativeHandle","refValue","setRef","useLayoutEffect","handleCollapse","handleExpand","index","contextValue","bb1","hidden","LegacyLayerProvider","divider","Infinity","style","t19","t20","t21","t22","t23","IsLastPaneProvider","t24","PaneContext","t25","displayName","usePane","PaneContent","as","overflow","padding","toLowerCaseNoSpaces","str","toLocaleLowerCase","replaceAll","MENU_GROUP_POPOVER_PROPS","constrainSize","placement","portal","PaneMenuButtonItem","isAfterGroup","node","getI18nText","useGetI18nText","MenuDivider","child","childIndex","child_0","childIndex_0","MenuGroup","PaneContextMenuItemResolver","PaneContextMenuItem","reason","tooltipContent","useI18nText","hotkey","CheckmarkIcon","onAction","TooltipOfDisabled","PaneContextIntentMenuItem","intentLink","handleClick","CONTEXT_MENU_POPOVER_PROPS","nodesHasTone","nodes","PaneContextMenuButton","actionsNodes","useId","hasCritical","hasCaution","ContextMenuButton","nodeIndex","RootCard","PaneFooter","$border","css","Layout","TitleCard","theme","fg","bg","sanity","color","card","TitleTextSkeleton","TextSkeleton","TitleText","PaneHeader","actions","backButton","border","contentAfter","loading","subActions","tabs","tabIndex","appendTitle","paneElement","paneRect","useElementRect","height","innerHeight","width","layoutStyle","handleTitleClick","handleLayoutClick","showTabsOrSubActions","LayerProvider","getDisabledReason","disabledReason","ariaLabel","isDisabled","PaneHeaderActionButton","console","warn","PaneHeaderMenuItemActionButton","hotkeys","content","StatusButton","PaneHeaderActionIntentButton","PaneHeaderMenuGroupActionButton","UnknownIcon","idx","_calcPaneResize","cache","left","right","sum","leftMinWidth","rightMinWidth","leftMaxWidth","Math","min","rightMaxWidth","minDeltaX","rightMinDeltaX","maxDeltaX","leftMaxDeltaX","_deltaX","max","leftW","rightW","leftFlex","rightFlex","_getDOMPath","el","parentElement","Array","from","childNodes","unshift","EMPTY_PATH","_sortElements","WeakMap","set","_sortByElementPath","b","_a","_b","len","i","aIndex","bIndex","sort","createPaneLayoutController","observers","optionsMap","userCollapsedElementSet","Set","rootWidth","resizeDataMap","Map","resizing","add","_notifyObservers","delete","options","original","splice","leftElement","leftIndex","leftOptions","rightElement","rightOptions","offsetWidth","leftResizeData","rightResizeData","nextRootElement","setRootWidth","nextRootWidth","observer","_elements","dataMap","lastElement","collapsedWidth","remaingWidth","userCollapsed","has","sizeCollapsed","resizeData","PaneLayout","onCollapse","onExpand","controller","setState","paneLayout","ErrorPane","paneKey","Delay","ms","setReady","timeoutId","setTimeout","clearTimeout","getWaitMessages","thresholds","messageKey","isDev","message","src","of","merge","threshold","mapTo","delay","DEFAULT_MESSAGE_KEY","Content","LoadingPane","memo","messageProp","resolvedMessage","currentMessage","setCurrentMessage","sub","contentElement","setContentElement","mounted","setMounted","_raf2","DELAY","useDocumentPane","documentPane","DocumentPaneContext","CommentsWrapper","CommentsEnabledProvider","CommentsProviderWrapper","useCommentsEnabled","connectionState","inspector","openInspector","selectedReleaseId","usePerspective","setParams","usePaneRouter","studioUrl","useStudioUrl","location","origin","resolveIntentLink","selectedCommentId","comment","paramsRef","commentId","inspect","COMMENTS_INSPECTOR_NAME","getCommentLink","handleClearSelectedComment","name","handleOpenCommentsInspector","CommentsProvider","PaneRouterContext","useFilteredReleases","displayed","archivedReleases","useArchivedReleases","isCreatingDocument","_createdAt","notCurrentReleases","currentReleases","inCreation","reduce","acc","versionDocExists","historyVersion","archivedRelease","r","useDocumentIdStack","editState","filteredReleases","systemStack","flat","releaseStack","stack","concat","position","findIndex","previousId","nextId","useStructureTool","structureTool","StructureToolContext","DOCUMENT_PANEL_MIN_WIDTH","DOCUMENT_PANEL_INITIAL_MIN_WIDTH","DOCUMENT_INSPECTOR_MIN_WIDTH","DOCUMENT_INSPECTOR_MAX_WIDTH","EMPTY_PARAMS","INSPECT_ACTION_PREFIX","DEFAULT_MENU_ITEM_GROUPS","HISTORY_INSPECTOR_NAME","VALIDATION_INSPECTOR_NAME","DocumentInspectorMenuItemsResolver","inspectors","onMenuItems","menuItems","setMenuItems","newFieldActions","setMenuItem","prev","InspectorMenuItems","useMenuItem","defineInspectorMenuItemComponent","InspectorMenuItem","menuItem","useUnique","useDocumentTitle","isDeleted","lastRevisionDocument","documentValue","subscribed","prepareForPreview","deletedDocumentPreview","error_0","useValuePreview","IGNORE_OPS","DocumentOperationResults","pushToast","documentPaneValue","documentTitleInfo","titleError","useDocumentOperationEvent","prevEvent","paneRouter","handleOpenDialog","useDocumentLimitsUpsellContext","op","documentTitleBase","slice","documentTitle","cleanupId","isDocumentLimitError","closable","duration","context","Translate","Strong","closeCurrentAndAfter","isLiveEditEnabled","liveEdit","hasObsoleteDraft","workspace","draftExists","mustChooseNewDocumentDestination","isSelectedPerspectiveWriteable","isNewDocument","zIndex","lineHeight","DocumentInspectorHeader","closeButtonLabel","forwardedAs","onClose","DocumentInspectorPanel","closeInspector","features","handleClose","Component","component","resizablePanes","Resizable","STRUCTURE_TOOL_NAMESPACE","useStructureToolSetting","namespace","defaultValue","keyValueStore","useKeyValueStore","keyValueStoreKey","getKey","value_0","useObservable","newValue","setKey","VIEW_MODE_PARSED","VIEW_MODE_RAW","VIEW_MODES","lru","LRU","maxSize","isExpanded","keyPath","cached","isArray","isRecord","toggleExpanded","selectElement","sel","getSelection","range","createRange","removeAllRanges","selectNodeContents","addRange","select","currentTarget","maybeSelectAll","keyCode","metaKey","ctrlKey","isDocumentLike","isString","_type","JSONInspectorWrapper","fonts","space","code","family","sizes","fontSize","rem","syntax","property","constant","string","boolean","number","Search","query","target","handleChange","TextInput","SearchIcon","InspectDialog","onInspectClose","dialogIdPrefix","viewModeId","onViewModeChange","viewMode","setParsedViewMode","setRawViewMode","DocumentTitle","bottom","Tab","TabList","outline","JsonInspector","ignoreCase","Code","JSON","stringify","TabPanel","Banner","Icon","action","rest","paddingY","DeletedDocumentBanners","isDeleting","selectedPerspective","isPublishedPerspective","isDraftPerspective","DeletedDocumentBanner","restore","useDocumentOperation","navigateIntent","execute","handleRestore","ReadOnlyIcon","ArchivedReleaseBanner","DocumentRemoveIcon","DeprecatedDocumentTypeBanner","isDeprecatedSchemaType","deprecated","ErrorOutlineIcon","AskToEditDialogOpened","defineEvent","AskToEditRequestSent","MAX_NOTE_LENGTH","DialogBody","attrs","align","direction","justify","RequestPermissionDialog","onRequestSubmitted","telemtry","useTelemetry","dialogId","projectId","useProjectId","apiVersion","client","useClient","zOffset","useZIndex","isSubmitting","setIsSubmitting","note","setNote","msgError","setMsgError","hasTooManyRequests","setHasTooManyRequests","hasBeenDenied","setHasBeenDenied","adminRole","observable","roles","request","url","startWith","catchError","requestedRole","method","body","requestUrl","then","log","catch","err","statusCode","response","errMessage","finally","onSubmit","fullscreen","cancelButton","confirmButton","role_0","appliesToUsers","LOADING_STATE","EMPTY_STATE","DECLINED_STATE","PENDING_STATE","EXPIRED_STATE","useRoleRequestsStatus","checkRoleRequests","checkRoleRequests$","tag","requests","projectRequests","resourceId","declinedRequest","isAfter","addWeeks","Date","createdAt","isBefore","InsufficientPermissionBanner","requiredPermission","currentUser","useCurrentUser","roleRequestStatus","requestStatusLoading","requestStatusError","requestSent","setRequestSent","requestPending","currentUserRoles","isOnlyViewer","showRequestPermissionDialog","setShowRequestPermissionDialog","listFormat","useListFormat","telemetry","roleTitles","formatToParts","Roles","count","part","ReferenceChangedBanner","documentPreviewStore","useDocumentPreviewStore","groupIndex","routerPanesState","replaceCurrent","BackLink","routerReferenceId","parentSibling","parentId","hasHistoryOpen","rev","parentRefPath","pathFromString","referenceInfoObservable","parentRefPathSegment","publishedId","keyedSegmentIndex","unstable_observePathsDocumentPair","debounceTime","availability","pathGet","snapshot","_ref","referenceInfo","handleReloadReference","available","SyncIcon","WarningOutlineIcon","ScheduledDraftOverrideBanner","ArchivedReleaseDocumentBanner","handleGoBack","historyEvent","since","isCardinalityOneRelease","VersionBadge","getVersionInlineBadge","Image","img","CANVAS_IMAGE_URL","CANVAS_APP_NAME","CanvasPopoverContent","useClickOutsideEvent","ComposeSparklesIcon","Heading","LaunchIcon","CanvasLinkedBannerContent","open","setOpen","documentVariantType","getDocumentVariantType","variantText","togglePopover","InfoOutlineIcon","Popover","CanvasLinkedBanner","companionDoc","useCanvasCompanionDoc","navigateToCanvas","useNavigateToCanvasDoc","canvasDocumentId","ChooseNewDocumentDestinationBanner","isPerspectiveWriteable","menuItemProps","ReleasesNav","CreateLinkedBanner","documentLinkedBannerContent","CreateLinkedBannerContent","useSanityCreateConfig","getSanityCreateLinkMetadata","createLinkMetadata","TOAST_DELAY","DocumentNotInReleaseBanner","currentRelease","isScheduledRelease","LATEST","createVersion","useVersionOperations","versionCreateState","setVersionCreateState","handleAddToRelease","lastUpdate","now","useCurrentTime","useConditionalToast","getTime","updateIntervalMs","currentTime","setCurrentTime","intervalId","setInterval","clearInterval","ResolvedLiveEdit","ObsoleteDraftBanner","i18nKey","isEditBlocking","isPublishing","setPublishing","isDiscarding","setDiscarding","publish","discardChanges","liveEditResolveType","handlePublish","handleDiscard","diffViewRouter","compareDraft","OpenReleaseToEditBanner","isPinnedDraftOrPublished","onlyHasVersions","useOnlyHasVersions","OpenReleaseToEditBannerInner","setPerspective","useSetPerspective","currentVersion","documentVersionsTitleList","handleGoToEdit","VersionInlineBadge","RevisionNotFoundBanner","revisionNotFound","ScheduledReleaseBanner","date","UnpublishedDocumentBanner","isCurrentVersionGoingToUnpublish","isGoingToUnpublish","UnpublishIcon","TitleContainer","heading","FormHeader","isSingleton","__experimental_formPreviewTitle","Inline","Tooltip","ev","FormView","margins","fieldActions","openPath","documentStore","useDocumentStore","useDocumentPresence","isLocked","transactionSyncLock","pair","documentEvents","tap","prepareMutationEvent","prepareRebaseEvent","hasRev","_rev","patches","handleInitialValue","useEffectEvent","formRef","setFormRef","focusedFirstDescendant","setFocusedFirstDescendant","focusFirstDescendant","isReadOnly","readOnly","Spinner","PresenceOverlay","mutations","mut","patch","fromMutationPatches","remotePatches","remoteMutations","localPatches","localMutations","DocumentHeaderTabs","activeViewId","views","tabPanelId","view","DocumentHeaderTab","label","viewId","setView","DocumentHeaderTitle","FavoriteToggle","documentExists","isFavorited","isReady","favorite","unfavorite","useManageFavorite","StarFilledIcon","StarIcon","DocumentPanelSubHeader","activeWorkspace","useActiveWorkspace","publishedDocId","showTabs","showBackButton","ArrowLeftIcon","dataset","CapabilityGate","favoriteToggle","DocumentBox","ScrollContainer","$disabled","DocumentPanel","footerHeight","headerHeight","isInspectOpen","setDocumentPanelPortalElement","footer","permissions","isPermissionsLoading","isSanityCreateLinked","showCreateBanner","parentPortal","usePortal","_portalElement","documentScrollElement","setDocumentScrollElement","formContainerElement","activeView","splitPanes","formViewHidden","ActiveViewComponent","historical","activeViewNode","scrollTo","inspectDialog","showInspector","documentInScheduledRelease","hasCardinalityOneReleases","isSystemBundle","isPinnedDraftOrPublish","displayedHasObsoleteDraft","granted","banners","portalElements","showFormView","isMenuNodeButton","renderAsButton","isNotMenuNodeButton","negate","resolveMenuNodes","menuItemGroups","keyOffset","mapFieldActionToPaneMenuNode","itemGroup","g","i18n","ungroupedItems","item","group","shortcut","actionHandler","showAsAction","childIdx","_DEBUG","Object","freeze","LOADING_PANE","DOCUMENT_PANEL_PORTAL_ELEMENT","POPOVER_FALLBACK_PLACEMENTS","DIALOG_WIDTH_TO_UI_WIDTH","small","medium","large","full","ConfirmDialog","dialog","referenceElement","cancelButtonIcon","cancelButtonText","confirmButtonIcon","confirmButtonText","onCancel","onConfirm","ConfirmPopover","ModalDialog","showCloseButton","PopoverDialog","PopoverDialogContent","isTopLayer","useLayer","useGlobalKeyDown","DocumentActionPortalProvider","ActionStateDialog","modalId","unknownModal","ActionDialogWrapper","actionStates","actionIndex","setActionIndex","currentAction","handleAction","ActionMenuButton","idPrefix","setReferenceElement","preventOverflow","popoverProps","actionState","renderActionDialog","ActionMenuListItem","onHandle","String","replace","tooltipProps","s","toUpperCase","DISABLED_REASON_TITLE_KEY","NOTHING_TO_DELETE","NOT_READY","DeleteAction","onComplete","setIsDeleting","paneSetIsDeleting","deleteOp","isConfirmDialogOpen","setConfirmDialogOpen","handleCancel","handleConfirm","handle","permission","useDocumentPairPermissions","InsufficientPermissionsMessage","TrashIcon","ConfirmDeleteDialog","DISABLED_REASON_KEY","NO_CHANGES","NOT_PUBLISHED","DiscardChangesAction","isPublished","ResetIcon","NOTHING_TO_DUPLICATE","DuplicateAction","mapDocument","duplicate","isDuplicating","setDuplicating","dupeId","uuid","duplicateSuccess","firstValueFrom","operationEvents","CopyIcon","HistoryRestoreAction","revision","isRevisionInitial","isRevisionLatest","RevertIcon","DocumentPublished","LIVE_EDIT_ENABLED","ALREADY_PUBLISHED","PUBLISHED_STATE","publishedAt","AlreadyPublished","useTemporalPhrase","timeSincePublished","useRelativeTime","PublishAction","publishState","setPublishState","validationStatus","useValidationStatus","syncState","useSyncState","changesOpen","isValidationErrorMarker","hasValidationErrors","publishScheduled","setPublishScheduled","isSyncing","isValidating","_updatedAt","currentPublishRevision","publishRevision","doPublish","validationComplete","didPublish","nextState","timer","publishedImmediately","previouslyPublished","PublishIcon","UnpublishAction","unpublish","isDraft","DocumentStatusBarActionsInner","states","__internal_tasks","useSource","showingRevision","firstActionState","menuActionStates","buttonElement","setButtonElement","Hotkeys","marginTop","marginBottom","isSanityDefinedAction","showFirstActionButton","sideMenuItems","footerAction","DocumentStatusBarActions","allActions","isInitialValueLoading","initialValueResolved","actionProps","renderDocumentStatusBarActions","HistoryStatusBarActions","revisionId","isRestoreAction","historyActions","toLowerCase","useChipScrollPosition","containerRef","showGradient","setShowGradient","checkOverflow","container","scrollWidth","clientWidth","scrollLeft","isAtEnd","setupObservers","container_0","intersectionObserver","mutationObserver","IntersectionObserver","entries","entry","isIntersecting","updateLastChipObserver","disconnect","lastChip","observe","MutationObserver","childList","subtree","intersectionObserver_0","mutationObserver_0","TooltipContent","intendedPublishAt","DATE_TIME_FORMAT","dateStyle","timeStyle","DocumentPerspectiveList","dateTimeFormat","useDateTimeFormat","schema","useSchema","handlePerspectiveChange","isLiveEdit","isPublishedChipDisabled","getReleaseChipState","isReleaseHistoryMatch","isPublishSelected","isDraftSelected","displayedId","isDraftDisabled","VersionChip","format","menuReleaseId","releasesLoading","fromRelease","isVersion","releaseState","HorizontalScroller","getTheme_v2","$showGradient","rgba","DocumentPanelHeader","_props","onMenuAction","onPaneClose","onPaneSplit","unstable_languageFilter","hasGroupSiblings","useFieldActions","scrollContainerRef","menuNodes","menuButtonNodes","contextMenuNodes","showSplitPaneButton","splitViews","showSplitPaneCloseButton","showPaneGroupCloseButton","renderPaneActions","renderedActions","LanguageFilterComponent","SplitVerticalIcon","TooltipDelayGroupProvider","DocumentPanelHeaderActionDialogDeferred","useDeferredValue","DocumentPanelHeaderActionDialog","SpacerButton","size","pointerEvents","visibility","BADGE_TONES","primary","success","warning","danger","DocumentBadgesInner","DocumentBadgesDeferred","DocumentBadges","badges","renderDocumentBadges","badge","Badge","whiteSpace","TIMELINE_ICON_COMPONENTS","create","AddIcon","discardDraft","initial","editDraft","EditIcon","editLive","getTimelineEventIconComponent","hideScrollbarOnExpand","listWrapper","getElementById","TIMELINE_LIST_WRAPPER_ID","firstChildren","scrollHeight","clientHeight","currentStyle","getComputedStyle","overflowY","FlipIcon","ChevronLeftIcon","ExpandableTimelineItemButton","stopPropagation","handleExpandClick","StackWrapper","ListWrapper","$maxHeight","$visible","TIMELINE_ITEM_I18N_KEY_MAPPING","UserAvatarStack","maxLength","userIds","withTooltip","userId","UserAvatar","AvatarStack","IconBox","$color","avatar","TIMELINE_ITEM_EVENT_TONE","withinSelection","RELATIVE_TIME_OPTIONS","minimal","NameSkeleton","Skeleton","font","UserLine","user","useUser","AvatarSkeleton","collaborators","TimelineItem","chunk","optionsMenu","endTimestamp","timestamp","IconComponent","authors","authorUserIds","collaboratorsUsersIds","isSelectable","dateFormat","updatedTimeAgo","parsedDate","formattedTimestamp","evt","isNonPublishChunk","isPublishChunk","getPreviousPublishAction","chunks","previousPublish","addChunksMetadata","forEach","Timeline","hasMoreChunks","lastChunk","selectedChunk","onLoadMore","listMaxHeight","selectedChunkId","chunksWithMetadata","expandedParents","setExpandedParents","filteredChunks","handleExpandParent","selectedIndex","handleSelectChunk","timelineChunk","c","renderItem","activeIndex","CommandList","TimelineError","versionError","TextWithTone","TIMELINE_MENU_PORTAL","TimelineMenu","setTimelineRange","timelineError","timelineStore","button","setButton","popoverRef","setPopoverRef","useTimelineSelector","realRevChunk","sinceTime","handleOpen","handleGlobalKeyDown","focus","selectRev","revChunk","sinceId","revId","findRangeForRev","selectSince","sinceChunk","findRangeForSince","handleLoadMore","loadMore","formatParams","revLabel","sinceLabel","buttonLabel","ChevronDownIcon","StyledMotionPath","motion","Circle","Arrows","Checkmark","rotateAnimation","keyframes","RotateGroup","root","syncing","scale","transition","saved","changes","circle","strokeDasharray","strokeDashoffset","opacity","arrows","checkmark","pathLength","AnimatedStatusIcon","STATUS_DICTIONARY","DocumentStatusPulse","currentStatus","MotionButton","MotionBox","ButtonSkeleton","margin","DocumentStatusButton","author","translationKey","onHistoryOpen","onHistoryClose","relativeTime","FallbackStatus","createDocumentVersion","editDocumentVersion","EventsStatus","events","useEvents","TimelineStatus","TIMELINE_ITEM_I18N_KEY_MAPPING_LEGACY","SYNCING_TIMEOUT","SAVED_TIMEOUT","DocumentStatusLine","setStatus","eventsEnabled","beta","eventsAPI","lastUpdated","timerId","timerId_0","AnimatePresence","StatusText","RevisionStatusLine","RestoreIcon","useResizeObserver","onResize","resizeObserver","unobserve","CONTAINER_BREAKPOINT","AnimatedCard","DocumentStatusBar","actionsBoxRef","onDocumentChange","CreateLinkedActions","documentLinkedActions","setCollapsed","contentRect","handleResize","shouldRender","flexShrink","marginLeft","KeyboardShortcutResponder","actionsBoxElement","onActionStart","onKeyDown","rootRef","As","activeAction","matchingStates","isHotkey","matchingState","handleKeyDown","DocumentActionShortcuts","setActiveIndex","renderDocumentActionShortcuts","getInspectorItems","currentInspector","hasValue","inspectorMenuItems","getInspectItem","JsonIcon","getCompareVersionsItem","documentIdStack","getProductionPreviewItem","previewUrl","EarthAmericasIcon","getMenuItems","inspectorItems","items","LinkIcon","DocumentLayoutError","DIALOG_PROVIDER_POSITION","DocumentLayoutFooter","documentPanelPortalElement","setFooterElement","setActionsBoxElement","zOffsets","EMPTY_ARRAY","StyledChangeConnectorRoot","ChangeConnectorRoot","inspectOpen","paneParams","footerElement","headerElement","setHeaderElement","useGlobalCopyPasteElementHandler","setInspectorMenuItems","rootFieldActionNodes","setRootFieldActionNodes","footerRect","headerRect","handleKeyUp","onConnectorSetFocus","GetFormValueProvider","FieldActionsResolver","FieldActionsProvider","paneDialog","changesInspectorTab","useDocumentLayoutComponent","useDocumentLastRev","historyStore","useHistoryStore","setLastRevisionDocument","setLoading","useTimelineStore","lastNonDeletedRevId","getDocumentAtRevision","DocumentURLCopied","getInitialValueTemplateOpts","templates","opts","payload","panePayload","structureNodeTemplate","templateName","urlTemplate","template","typeTemplates","templateParams","useDocumentPaneInitialValue","paneOptions","useTemplates","templateParameters","initialValueRaw","useInitialValue","useDocumentPaneInspector","inspectorsResolver","inspectorName","setInspectorName","inspectParamRef","historyInspector","closeInspectorName","nextInspectorName","nextInspector","currentParams","onOpen","handleHistoryClose","handleHistoryOpen","reviewChanges","toggleLegacyInspect","toggle","handleLegacyInspectClose","handleInspectorAction","isSanityDocument","usePreviewUrl","resolveProductionUrl","BehaviorSubject","subject","asObservable","switchMap","DocumentPaneProvider","onFocusPath","forcedVersion","store","timelineReady","revisionDocument","onOlderRevision","sinceDocument","isPristine","setDocumentMeta","useCopyPaste","documentActions","documentBadges","unstable_fieldActions","fieldActionsResolver","languageFilterResolver","draftsEnabled","setPaneParams","viewsProp","documentIdRaw","buildStudioUrl","initialValue","getIsDeleted","getComparisonValue","getIsReadOnly","getDisplayed","formReady","formStateRef","initialFocusPath","getFormDocumentValue","getDocumentVersionType","releaseDocument","actionsPerspective","documentActionsProps","versionType","languageFilter","newSince","newRev","handlePaneClose","closeCurrent","handlePaneSplit","duplicateCurrent","handleMenuAction","navigator","copyUrl","coreUi","clipboard","writeText","startsWith","currentDisplayed","pathRef","restParams","pathFromUrl","resolveKeyedPath","DocumentEventsPane","usePaneOptions","showingPublishedOnDraft","eventsStore","useEventsStore","sinceRevision","historyStoreProps","PerspectiveProvider","EventsProvider","isDeleteDocumentGroupEvent","isDeleteDocumentVersionEvent","DocumentPaneWithLegacyTimelineStore","setTimelineError","onError","revTime","sinceAttributes","_temp3","timelineDisplayed","_temp4","_temp5","_temp6","_temp7","state_1","state_2","state_3","state_4","state_5","DocumentPerspectiveResetHandler","rawContext","RawPerspectiveContext","documentVersionsLoading","isCardinalityOnePerspective","DocumentPerspectiveProvider","mappedContext","PerspectiveContext","defaultPerspective","PUBLISHED","DocumentPaneProviderWrapper","itemId","useResetHistoryParams","isMounted","_perspective","preserveRev","updateHistoryParams","DocumentPane","parentSourceName","CopyPasteProvider","SourceProvider","DocumentPaneInner","resolveNewDocumentOptions","isLoaded","isDocumentLoaded","useDocumentType","templateItems","templatePermissions","isTemplatePermissionsLoading","useTemplatePermissions","mergeDocumentType","providerProps","ReferenceChildLink","handleEditReference","childParams","routerPanesStateLength","activePath","ReferenceInputOptionsProvider","StateLink","ChildLink","childId","childParameters","childPayload","ParameterizedLink","currentPanes","siblingIndex","nextParams","nextPayload","currentGroup","currentSibling","nextSibling","nextGroup","pathToString","emptyArray","PaneRouterProvider","flatIndex","resolvePathFromState","useRouterState","routerPaneGroups","lastPane","modifier","currentItem","nextPanes","createNextRouterState","modifier_0","nextRouterState_0","nextRouterState","modifyCurrentGroup","nextRouterState_1","siblings","createPathWithParams","siblings_0","item_0","setPayload","nextParams_0","siblings_1","item_1","siblings_3","item_3","duplicatedItem","omit","groupLength","ctx","siblings_2","item_2","sibling","UnknownPane","paneMap","lazy","documentList","list","StructureToolPane","active","childItemId","PaneComponent","Suspense","prevParams","prevPayload","isEqual","keys","DocTitle","ChevronWrapper","CrossDatasetReferencesDetails","details","CrossDatasetReferencesSummary","summary","Table","table","DocumentIdFlex","OtherReferenceCount","difference","totalCount","references","PaneItemPreview","layout","versionsInfo","useDocumentVersionInfo","perspectiveStack","getPreviewStateObservable","previewStateObservable","previewIsLoading","versions","DocumentPreviewPresence","DocumentStatusIndicator","DocumentStatus","tooltip","getPreviewValueWithFallback","fallback","SanityDefaultPreview","ReferencePreviewLink","documentPresence","linkProps","PreviewCard","ConfirmDeleteDialogBody","crossDatasetReferences","internalReferences","datasetNames","hasUnknownDatasetNames","onReferenceLinkClick","renderPreviewItem","normalizedDatasetNames","datasets","datasetSubtitle","borderTop","DocumentsIcon","documentCount","datasetName","reference","isClientError","POLL_INTERVAL","visiblePoll$","getVisiblePoll$","fromEvent","visibilityState","visible","EMPTY","shareReplay","refCount","bufferSize","getDocumentExistence","versionedClient","draftId","requestOptions","uri","getDataUrl","json","excludeContent","omitted","nonExistant","doc","fetchCrossDatasetReferences","checkDocumentId","currentDataset","config","useInternalReferences","createHookFromObservableFactory","listenQuery","fetch","listen","transitions","throttleTime","useCrossDatasetReferences","useReferringDocuments","DEFAULT_STUDIO_CLIENT_OPTIONS","isInternalReferencesLoading","isCrossDatasetReferencesLoading","projectIds","crossDatasetReference_1","crossDatasetReference","crossDatasetReference_0","LoadingContainer","showConfirmButton","ConfirmDeleteDialogContainer","setError","handleRetry","ErrorBoundary","IntentButton","linkRef","IntentLink","InsufficientPermissionsMessageTooltip","reveal","POPOVER_PROPS","getIntent","typeName","templateId","baseParams","initialDocumentId","parameters","PaneHeaderCreateButton","nothingGranted","every","permissionsById","firstItem","itemIndex","disabled_0","intent_0","permission_0","isNonNullable","hashObject","sortObject","v","keyA","keyB","localeCompare","parse","PaneHeaderActions","initialValueTemplateItems","initialValueTemplateItemsFromStructure","actionHandlers","EMPTY_OBJECT","handler","actionNodes","initialValueTemplateItemFromMenuItems","menuItemIndex","intentParams","combinedInitialValueTemplates","uniqBy","MissingSchemaType","getIconWithFallback","defaultIcon","PaneItem","pressed","hasSchemaType","clicked","setClicked","DocumentIcon","ChevronRightIcon","FolderIcon","preview","preloading","setPreload","timeoutRef","startTransition","handleMouseEnter","handleMouseLeave","PreloadDocumentPane","RenderActionCollectionState","onActionComplete","liveEditSchemaType","GetHookCollectionState","SUPPORTED_LINKED_TO_CANVAS_ACTIONS","ActionsGuardWrapper","isLinked","RenderBadgeCollectionState","badgeProps","PARTIAL_PAGE_LIMIT","FULL_LIST_LIMIT","DEFAULT_ORDERING","by","field","EMPTY_RECORD","RootBox","$opacity","CommandListBox","SKELETON_ITEMS","LoadingView","num","DocumentListPaneContent","isRetrying","autoRetry","filterIsSimpleTypeConstraint","hasMaxItems","hasSearchQuery","isLazyLoading","muted","isConnected","retryCount","canRetry","loadingVariant","onEndReached","onRetry","paneTitle","searchInputElement","showIcons","setShouldRender","handleEndReached","isLastItem","showSpinner","showMaxItemsMessage","limit","noDocumentsContent","isOnline","onLine","ErrorActions","mainContent","removePublishedWithDrafts","collate","hasDraft","hasPublished","applyOrderingFunctions","order","orderBy","mapWith","fieldType","tryResolveSchemaTypeForPath","fieldExtendsType","jsonType","baseType","pathSegments","PathUtils","fromString","segment","getFieldTypeByName","isKeySegment","isIndexSegment","memberType","otherType","isReferenceSchemaType","refType","otherRefType","to","fieldName","fields","ofType","findTypes","base","types","isSplat","findStaticTypesInFilter","swr","createSWR","listenSearchQuery","groqFilter","searchQuery","staticTypeNames","maxFieldDepth","searchStrategy","sortBy","extendedProjection","events$","defer","includeAllVersions","includeResult","mergeMap","isFirst","throwError","share","welcome$","mutationAndReconnect$","partition","swrKey","fiilter","asyncScheduler","leading","trailing","exhaustMapWithTrailing","typeNames","getSearchableTypes","getExtendedProjection","search","createSearch","strategy","maxDepth","doFetch","__unstable_extendedProjection","comments","skipSortByScore","hits","hit","scan","connected","fromCache","INITIAL_QUERY_STATE","isLoadingFullList","isRetriableError","ChannelError","ServerError","ClientError","useDocumentList","searchFilter","paramsProp","sortOrder","useSearchMaxFieldDepth","typeNameFromFilter","onRetry$","observableCallback","onFetchFullList$","onLoadFullList","queryResults$","listenSearchQueryArgs","partialList$","fullList$","withLatestFrom","take","takeUntil","catchWithCount","lastError","caught$","safeError","retries","NEVER","retrying","nonErrorThrownWarning","thrown","rotate","fadeIn","AnimatedSpinnerIcon","SpinnerIcon","SubtleSpinnerIcon","DelayedSubtleSpinnerIcon","DocumentListPane","sortOrderRaw","displayOptions","useShallowUnique","staticTypes","setSearchQuery","searchInputValue","setSearchInputValue","setSearchInputElement","sortWithOrderingFn","documentListIsLoading","trim","handleQueryChange","useObservableEvent","event$","debounce","handleClearSearch","handleSearchKeyDown","enableSearchSpinner","setEnableSearchSpinner","textInputIcon","useReconnectingToast","initialValueTemplates","setLayout","setSortOrder","StructurePaneHeader","DocumentSheetListSelect","row","selectedAnchor","setSelectedAnchor","meta","handleOnClick","shiftKey","shiftClickIndex","lowerIndex","upperIndex","additionalSelectedRows","getRowModel","flatRows","currentSelectedRows","getSelectedRowModel","rows","setRowSelection","nextSelectedRows","rowId","isRowCurrentlySelected","getIsSelected","toggleSelected","Checkbox","paddingLeft","getCanSelect","useDocumentSheetListContext","DocumentSheetListContext","DocumentSheetListProvider","selectedAnchorCellDetails","setSelectedAnchorCellDetails","selectedRangeCellIndexes","setSelectedRangeCellIndexes","clearAndSetFocusSelection","nextAnchorDetails","activeElement","HTMLElement","blur","resetFocusSelection","changeSelectionColumn","visibleColumns","getVisibleLeafColumns","columnIndexAfterMove","col","colId","rowIndex","changeSelectionRange","previousSelection","anchorIndex","getNextIndex","startingIndex","firstSelectedIndex","lastIndexSelected","nextIndex","setSelectedAnchorCell","handleEscapePress","nextAnchorCellDetails","handleUpDownKey","isShiftKey","offset","newSelectedCellRowIndex","handleAnchorKeydown","handleAnchorClick","contains","focusAnchorCell","anchorCellDetails","getStateByCellId","submitFocusedCell","DataCell","td","PinnedDataCell","SheetListCellInner","getValue","column","cellId","renderValue","setRenderValue","isDirty","setIsDirty","inputRef","cellState","handleOnFocus","patchDocument","handleProgrammaticFocus","HTMLInputElement","handleOnMouseDown","detail","handleOnEnterDown","handleOnChange","handleOnBlur","handlePaste","clipboardData","getData","handleCopy","toString","getBorderStyle","inputProps","Select","boxShadow","SheetListCell","cell","isPinned","getIsPinned","Cell","borderWidth","getIsLastColumn","getStart","borderRight","getSize","flexRender","columnDef","getContext","VISIBLE_COLUMN_LIMIT","PreviewCell","displayValue","columnHelper","createColumnHelper","SUPPORTED_FIELDS","getColsFromSchemaType","parentalField","tableColumns","nextCol","accessor","enableHiding","info","isObjectSchemaType","columns","isAccessorKeyColumnDef","isGroupColumnDef","flatColumns","cols","useDocumentSheetColumns","documentSchemaType","display","getIsSomeRowsSelected","getToggleAllPageRowsSelectedHandler","initialColumnsVisibility","accCols","countAllowedVisible","visibilityKey","ColumnsControl","isVisibleLimitReached","getCanHide","setInitialColumns","resetColumnVisibility","handleColumnOnChange","toggleVisibility","getColumnVisibilityDisabled","isColumnVisible","getIsVisible","isSingleColumnVisible","maxHeight","getAllLeafColumns","SearchContainer","DocumentSheetListFilter","useSearchState","filtersVisible","SearchHeader","Filters","Header","th","PinnedHeader","HoverMenu","DocumentSheetListHeader","headerGroup","headerTitle","depth","parent","HeaderTag","canShowHeaderMenu","boxSizing","EllipsisHorizontalIcon","DocumentSheetListPaginator","setPageIndex","getCanPreviousPage","DoubleChevronLeftIcon","previousPage","getState","pagination","pageIndex","getPageCount","nextPage","getCanNextPage","DoubleChevronRightIcon","pageSize","setPageSize","Number","createDocumentsSet","documentsReducer","nextDocumentResult","_","restDocuments","updatedDocument","LISTEN_OPTIONS","useDocumentSheetListStore","QUERY","dispatch","useReducer","setIsLoading","res","initialFetch","handleListenerEvent","err_0","listener$","uniques","values","dataAsArray","useDocumentSheetList","h","PaneContainer","TableContainer","DocumentSheetListPaneInner","totalRows","useReactTable","getCoreRowModel","getFilteredRowModel","getPaginationRowModel","autoResetPageIndex","initialState","columnPinning","columnVisibility","getRowId","fieldId","renderRow","getVisibleCells","rowsCount","getHeaderGroups","headers","DocumentSheetListPane","schemaTypeName","isDocumentSchemaType","SearchProvider","addSelectedStateToMenuItems","setPrevious","shallowEquals","defaultLayout","defaultOrdering","sourceName","defaultSortOrder","menuItemsWithSelectedState","isSheetListLayout","LiveEditBadge","activePanes","setActivePanes","getIntentState","editDocumentId","canHandleIntent","getPaneParams","Grid","ChangesInspector","showChanges","scrollRef","setScrollRef","diff","selectionState","isComparingCurrent","structureT","FieldWrapper","rootDiff","showFromValue","documentContext","ChangeFieldWrapper","NoChanges","ChangeList","DocumentChangeContext","getIsSelectable","isUnpublishDocumentEvent","isScheduleDocumentVersionEvent","isUnscheduleDocumentVersionEvent","EventTimelineItem","cursor","Event","PublishedEventMenu","portalContext","versionId","versionRevisionId","handleOpenReleaseDocument","handleOpenDraftDocument","isMenuDisabled","RELEASES_INTENT","textDecoration","children_0","releaseTitle","children_1","fallbackPlacements","children_2","TimelineItemWrapper","CHILDREN_ITEMS_VARIANTS","animate","exit","ITEM_HEIGHT","EventsTimeline","allEvents","hasMoreEvents","selectedEventId","fetchEventChildren","selectedEvent","expandingParents","setExpandingParents","isCreateDocumentVersionEvent","isEditDocumentVersionEvent","isExpanding","renderOptionsMenu","isPublishDocumentVersionEvent","creationEvent","showExpandingLoader","isLastEvent","EventsTimelineMenu","nextCursor","eventsError","findRangeForRevision","loadMoreEvents","expandEvent","revEvent","sinceEvent","SpinnerContainer","DIFF_INITIAL_VALUE","CompareWithPublishedView","diffInput","wrap","EventsInspector","getChangesList","changesList$","diffLoading","diffError","toEvent","sinceEvents","sameRevisionSelected","ChangesError","SameRevisionSelected","EventsSelector","showList","listHeight","setListHeight","getScrollerRef","initialLoad","HistorySelector","FadeInFlex","TABS","isValidTab","tab","ChangesTabs","parentRef","setParentRef","paneRouterTab","setPaneRouterTab","t26","t27","t28","t29","t30","t31","changesInspector","getPathTitles","f","itemType","_key","MARKER_ICON","MARKER_TONE","ValidationInspector","isVersionGoingToUnpublish","marker","ValidationCard","errorInfo","setErrorInfo","level","DocumentNodePathBreadcrumbs","pathTitles","fontWeight","validationMarkers","hasErrors","isValidationError","hasWarnings","isValidationWarning","isDocumentGoingToUnpublish","CheckmarkCircleIcon","validationInspector","legacyEditParamsToState","decodeURIComponent","encodePanesSegment","encodeChunks","encodeURIComponent","legacyEditParamsToPath","toState","pathSegment","parsePanesSegment","toPath","router","route","intents","transform","panePattern","isParam","test","isPayloadLike","exclusiveParams","isTruthy","parseChunks","tryParseBase64Payload","firstSibling","paneIsFirstSibling","sameAsFirst","encodedPayload","encodeJsonParams","encodedParams","valueFromFirstSibling","parseOldPanesSegment","restOfSiblings","buffer","match","payloadChunk","tryParsePayload","decodeJsonParams","definePlugin","MasterDetailIcon","prevActions","prevBadges","prevInspectors","tools","canHandleCreateIntent","canHandleEditIntent","controlsDocumentTitle","__internalApplicationType","bundles","structureUsEnglishLocaleBundle"],"mappings":"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"}