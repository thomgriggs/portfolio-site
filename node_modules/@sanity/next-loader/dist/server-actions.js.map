{"version":3,"file":"server-actions.js","sources":["../src/server-actions/index.ts"],"sourcesContent":["'use server'\n\nimport type {ClientPerspective, SyncTag} from '@sanity/client'\nimport {perspectiveCookieName} from '@sanity/preview-url-secret/constants'\nimport {revalidateTag} from 'next/cache.js'\nimport {cookies, draftMode} from 'next/headers.js'\nimport {sanitizePerspective} from '../utils'\n\n// export async function disableDraftMode(): Promise<void> {\n//   'use server'\n//   await Promise.allSettled([\n//     (await draftMode()).disable(),\n//     // Simulate a delay to show the loading state\n//     new Promise((resolve) => setTimeout(resolve, 1000)),\n//   ])\n// }\n\nexport async function revalidateSyncTags(tags: SyncTag[]): Promise<void> {\n  await revalidateTag('sanity:fetch-sync-tags')\n\n  for (const _tag of tags) {\n    const tag = `sanity:${_tag}`\n    await revalidateTag(tag)\n    // eslint-disable-next-line no-console\n    console.log(`<SanityLive /> revalidated tag: ${tag}`)\n  }\n}\n\nexport async function setPerspectiveCookie(perspective: ClientPerspective): Promise<void> {\n  if (!(await draftMode()).isEnabled) {\n    // throw new Error('Draft mode is not enabled, setting perspective cookie is not allowed')\n    return\n  }\n  const sanitizedPerspective = sanitizePerspective(perspective, 'drafts')\n  if (perspective !== sanitizedPerspective) {\n    throw new Error(`Invalid perspective: ${perspective}`)\n  }\n\n  ;(await cookies()).set(\n    perspectiveCookieName,\n    Array.isArray(sanitizedPerspective) ? sanitizedPerspective.join(',') : sanitizedPerspective,\n    {\n      httpOnly: true,\n      path: '/',\n      secure: true,\n      sameSite: 'none',\n    },\n  )\n}\n\n// export async function handleDraftModeActionMissing(): Promise<void | string> {\n//   return 'The <SanityLive /> component is missing the handleDraftModeAction prop'\n// }\n"],"names":[],"mappings":";;;;AAiBA,eAAsB,mBAAmB,MAAgC;AACvE,QAAM,cAAc,wBAAwB;AAE5C,aAAW,QAAQ,MAAM;AACvB,UAAM,MAAM,UAAU,IAAI;AAC1B,UAAM,cAAc,GAAG,GAEvB,QAAQ,IAAI,mCAAmC,GAAG,EAAE;AAAA,EACtD;AACF;AAEA,eAAsB,qBAAqB,aAA+C;AACxF,MAAI,EAAE,MAAM,UAAA,GAAa;AAEvB;AAEF,QAAM,uBAAuB,oBAAoB,aAAa,QAAQ;AACtE,MAAI,gBAAgB;AAClB,UAAM,IAAI,MAAM,wBAAwB,WAAW,EAAE;AAGtD,GAAC,MAAM,WAAW;AAAA,IACjB;AAAA,IACA,MAAM,QAAQ,oBAAoB,IAAI,qBAAqB,KAAK,GAAG,IAAI;AAAA,IACvE;AAAA,MACE,UAAU;AAAA,MACV,MAAM;AAAA,MACN,QAAQ;AAAA,MACR,UAAU;AAAA,IAAA;AAAA,EACZ;AAEJ;"}