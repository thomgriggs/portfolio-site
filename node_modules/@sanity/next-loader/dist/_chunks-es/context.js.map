{"version":3,"file":"context.js","sources":["../../src/hooks/context.ts"],"sourcesContent":["import type {ClientPerspective} from '@sanity/client'\nimport {type Node} from '@sanity/comlink'\nimport {type LoaderControllerMsg, type LoaderNodeMsg} from '@sanity/presentation-comlink'\n\n/**\n * The Sanity Client perspective used when fetching data in Draft Mode, in the `sanityFetch` calls\n * used by React Server Components on the page. Note that some of them might set the `perspective` to a different value.\n * This value is what's used by default.\n * @public\n */\nexport type DraftPerspective = 'checking' | 'unknown' | ClientPerspective\n\n/** @internal */\nexport const perspectiveListeners = new Set<() => void>()\n/** @internal */\nexport let perspective: DraftPerspective = 'checking'\n/** @internal */\nexport function setPerspective(nextPerspective: DraftPerspective): void {\n  if (perspective === nextPerspective) return\n  perspective = nextPerspective\n  for (const onPerspectiveChange of perspectiveListeners) {\n    onPerspectiveChange()\n  }\n}\n\n/**\n *\n * @public\n */\nexport type DraftEnvironment =\n  | 'checking'\n  | 'presentation-iframe'\n  | 'presentation-window'\n  | 'live'\n  | 'static'\n  | 'unknown'\n\n/** @internal */\nexport const environmentListeners = new Set<() => void>()\n/** @internal */\nexport let environment: DraftEnvironment = 'checking'\n/** @internal */\nexport function setEnvironment(nextEnvironment: DraftEnvironment): void {\n  environment = nextEnvironment\n  for (const onEnvironmentChange of environmentListeners) {\n    onEnvironmentChange()\n  }\n}\n\n/** @internal */\nexport const comlinkListeners = new Set<() => void>()\n/** @internal */\nexport let comlink: Node<LoaderNodeMsg, LoaderControllerMsg> | null = null\n/** @internal */\nexport let comlinkProjectId: string | null = null\n/** @internal */\nexport let comlinkDataset: string | null = null\n/** @internal */\nexport function setComlink(nextComlink: Node<LoaderNodeMsg, LoaderControllerMsg> | null): void {\n  comlink = nextComlink\n  for (const onComlinkChange of comlinkListeners) {\n    onComlinkChange()\n  }\n}\n/** @internal */\nexport function setComlinkClientConfig(\n  nextComlinkProjectId: string | null,\n  nextComlinkDataset: string | null,\n): void {\n  comlinkProjectId = nextComlinkProjectId\n  comlinkDataset = nextComlinkDataset\n  for (const onComlinkChange of comlinkListeners) {\n    onComlinkChange()\n  }\n}\n"],"names":[],"mappings":"AAaO,MAAM,2CAA2B,IAAA;AAEjC,IAAI,cAAgC;AAEpC,SAAS,eAAe,iBAAyC;AACtE,MAAI,gBAAgB,iBACpB;AAAA,kBAAc;AACd,eAAW,uBAAuB;AAChC,0BAAA;AAAA,EAAoB;AAExB;AAeO,MAAM,2CAA2B,IAAA;AAEjC,IAAI,cAAgC;AAEpC,SAAS,eAAe,iBAAyC;AACtE,gBAAc;AACd,aAAW,uBAAuB;AAChC,wBAAA;AAEJ;AAGO,MAAM,uCAAuB,IAAA;AAE7B,IAAI,UAA2D,MAE3D,mBAAkC,MAElC,iBAAgC;AAEpC,SAAS,WAAW,aAAoE;AAC7F,YAAU;AACV,aAAW,mBAAmB;AAC5B,oBAAA;AAEJ;AAEO,SAAS,uBACd,sBACA,oBACM;AACN,qBAAmB,sBACnB,iBAAiB;AACjB,aAAW,mBAAmB;AAC5B,oBAAA;AAEJ;"}